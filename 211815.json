{"path":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","commits":[{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","sourceNew":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteById() != null) {\n      for (String s : update.getDeleteById()) {\n        delcmd.id = s;\n        processor.processDelete(delcmd);\n      }\n      delcmd.id = null;\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","sourceOld":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteById() != null) {\n      for (String s : update.getDeleteById()) {\n        delcmd.id = s;\n        processor.processDelete(delcmd);\n      }\n      delcmd.id = null;\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8f628082d9af75235881d7a98cbf3eda663dd62","date":1344851793,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","sourceNew":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteById() != null) {\n      for (String s : update.getDeleteById()) {\n        delcmd.id = s;\n        processor.processDelete(delcmd);\n        delcmd.clear();\n      }\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","sourceOld":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteById() != null) {\n      for (String s : update.getDeleteById()) {\n        delcmd.id = s;\n        processor.processDelete(delcmd);\n      }\n      delcmd.id = null;\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","bugFix":["818d704eaaf0fba0561d0d2752832e1015053482"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","sourceNew":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteById() != null) {\n      for (String s : update.getDeleteById()) {\n        delcmd.id = s;\n        processor.processDelete(delcmd);\n        delcmd.clear();\n      }\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","sourceOld":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteById() != null) {\n      for (String s : update.getDeleteById()) {\n        delcmd.id = s;\n        processor.processDelete(delcmd);\n      }\n      delcmd.id = null;\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","sourceNew":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteById() != null) {\n      for (String s : update.getDeleteById()) {\n        delcmd.id = s;\n        processor.processDelete(delcmd);\n        delcmd.clear();\n      }\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","sourceOld":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteById() != null) {\n      for (String s : update.getDeleteById()) {\n        delcmd.id = s;\n        processor.processDelete(delcmd);\n      }\n      delcmd.id = null;\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1","date":1378862385,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","sourceNew":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteByIdMap() != null) {\n      Set<Entry<String,Map<String,Object>>> entries = update.getDeleteByIdMap().entrySet();\n      for (Entry<String,Map<String,Object>> e : entries) {\n        delcmd.id = e.getKey();\n        Map<String,Object> map = e.getValue();\n        if (map != null) {\n          Long version = (Long) map.get(\"ver\");\n          if (version != null) {\n            delcmd.setVersion(version);\n          }\n        }\n        processor.processDelete(delcmd);\n        delcmd.clear();\n      }\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","sourceOld":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteById() != null) {\n      for (String s : update.getDeleteById()) {\n        delcmd.id = s;\n        processor.processDelete(delcmd);\n        delcmd.clear();\n      }\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"747dd71fefcbc7142661c25334b74c518fef4d81","date":1423504825,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","sourceNew":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteByIdMap() != null) {\n      Set<Entry<String,Map<String,Object>>> entries = update.getDeleteByIdMap().entrySet();\n      for (Entry<String,Map<String,Object>> e : entries) {\n        delcmd.id = e.getKey();\n        Map<String,Object> map = e.getValue();\n        if (map != null) {\n          Long version = (Long) map.get(\"ver\");\n          if (version != null) {\n            delcmd.setVersion(version);\n          }\n        }\n        if (map != null) {\n          String route = (String) map.get(UpdateRequest.ROUTE);\n          if (route != null) {\n            delcmd.setRoute(route);\n          }\n        }\n        processor.processDelete(delcmd);\n        delcmd.clear();\n      }\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","sourceOld":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteByIdMap() != null) {\n      Set<Entry<String,Map<String,Object>>> entries = update.getDeleteByIdMap().entrySet();\n      for (Entry<String,Map<String,Object>> e : entries) {\n        delcmd.id = e.getKey();\n        Map<String,Object> map = e.getValue();\n        if (map != null) {\n          Long version = (Long) map.get(\"ver\");\n          if (version != null) {\n            delcmd.setVersion(version);\n          }\n        }\n        processor.processDelete(delcmd);\n        delcmd.clear();\n      }\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d2dadc1f5ca8703d8659f4964961f9967935d75","date":1490231750,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","sourceNew":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteByIdMap() != null) {\n      Set<Entry<String,Map<String,Object>>> entries = update.getDeleteByIdMap().entrySet();\n      for (Entry<String,Map<String,Object>> e : entries) {\n        delcmd.id = e.getKey();\n        Map<String,Object> map = e.getValue();\n        if (map != null) {\n          Long version = (Long) map.get(\"ver\");\n          if (version != null) {\n            delcmd.setVersion(version);\n          }\n        }\n        if (map != null) {\n          String route = (String) map.get(ShardParams._ROUTE_);\n          if (route != null) {\n            delcmd.setRoute(route);\n          }\n        }\n        processor.processDelete(delcmd);\n        delcmd.clear();\n      }\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","sourceOld":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteByIdMap() != null) {\n      Set<Entry<String,Map<String,Object>>> entries = update.getDeleteByIdMap().entrySet();\n      for (Entry<String,Map<String,Object>> e : entries) {\n        delcmd.id = e.getKey();\n        Map<String,Object> map = e.getValue();\n        if (map != null) {\n          Long version = (Long) map.get(\"ver\");\n          if (version != null) {\n            delcmd.setVersion(version);\n          }\n        }\n        if (map != null) {\n          String route = (String) map.get(UpdateRequest.ROUTE);\n          if (route != null) {\n            delcmd.setRoute(route);\n          }\n        }\n        processor.processDelete(delcmd);\n        delcmd.clear();\n      }\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5fa6615014cd2288fe930f8c8bb726f9504961d","date":1490280013,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#delete(SolrQueryRequest,UpdateRequest,UpdateRequestProcessor).mjava","sourceNew":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteByIdMap() != null) {\n      Set<Entry<String,Map<String,Object>>> entries = update.getDeleteByIdMap().entrySet();\n      for (Entry<String,Map<String,Object>> e : entries) {\n        delcmd.id = e.getKey();\n        Map<String,Object> map = e.getValue();\n        if (map != null) {\n          Long version = (Long) map.get(\"ver\");\n          if (version != null) {\n            delcmd.setVersion(version);\n          }\n        }\n        if (map != null) {\n          String route = (String) map.get(ShardParams._ROUTE_);\n          if (route != null) {\n            delcmd.setRoute(route);\n          }\n        }\n        processor.processDelete(delcmd);\n        delcmd.clear();\n      }\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","sourceOld":"  private void delete(SolrQueryRequest req, UpdateRequest update, UpdateRequestProcessor processor) throws IOException {\n    SolrParams params = update.getParams();\n    DeleteUpdateCommand delcmd = new DeleteUpdateCommand(req);\n    if(params != null) {\n      delcmd.commitWithin = params.getInt(UpdateParams.COMMIT_WITHIN, -1);\n    }\n    \n    if(update.getDeleteByIdMap() != null) {\n      Set<Entry<String,Map<String,Object>>> entries = update.getDeleteByIdMap().entrySet();\n      for (Entry<String,Map<String,Object>> e : entries) {\n        delcmd.id = e.getKey();\n        Map<String,Object> map = e.getValue();\n        if (map != null) {\n          Long version = (Long) map.get(\"ver\");\n          if (version != null) {\n            delcmd.setVersion(version);\n          }\n        }\n        if (map != null) {\n          String route = (String) map.get(UpdateRequest.ROUTE);\n          if (route != null) {\n            delcmd.setRoute(route);\n          }\n        }\n        processor.processDelete(delcmd);\n        delcmd.clear();\n      }\n    }\n    \n    if(update.getDeleteQuery() != null) {\n      for (String s : update.getDeleteQuery()) {\n        delcmd.query = s;\n        processor.processDelete(delcmd);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e5fa6615014cd2288fe930f8c8bb726f9504961d":["747dd71fefcbc7142661c25334b74c518fef4d81"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["042e4d934397657ba04c82b46cc5665076bc5c58","c8f628082d9af75235881d7a98cbf3eda663dd62"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["c8f628082d9af75235881d7a98cbf3eda663dd62"],"042e4d934397657ba04c82b46cc5665076bc5c58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["747dd71fefcbc7142661c25334b74c518fef4d81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8f628082d9af75235881d7a98cbf3eda663dd62":["042e4d934397657ba04c82b46cc5665076bc5c58"],"747dd71fefcbc7142661c25334b74c518fef4d81":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["042e4d934397657ba04c82b46cc5665076bc5c58","c8f628082d9af75235881d7a98cbf3eda663dd62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6d2dadc1f5ca8703d8659f4964961f9967935d75"]},"commit2Childs":{"e5fa6615014cd2288fe930f8c8bb726f9504961d":[],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"042e4d934397657ba04c82b46cc5665076bc5c58":["c7869f64c874ebf7f317d22c00baf2b6857797a6","c8f628082d9af75235881d7a98cbf3eda663dd62","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["747dd71fefcbc7142661c25334b74c518fef4d81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["042e4d934397657ba04c82b46cc5665076bc5c58"],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c8f628082d9af75235881d7a98cbf3eda663dd62":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d5fc588fc7c6e55c0d778665292d023bf8d5f3b1","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"747dd71fefcbc7142661c25334b74c518fef4d81":["e5fa6615014cd2288fe930f8c8bb726f9504961d","6d2dadc1f5ca8703d8659f4964961f9967935d75"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e5fa6615014cd2288fe930f8c8bb726f9504961d","c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}