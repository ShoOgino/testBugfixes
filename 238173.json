{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","commits":[{"id":"3cdad2c6b6234338031bcc1f24c001a5ad66f714","date":1296866109,"type":1,"author":"Doron Cohen","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,Reader,DateFormat).mjava","sourceNew":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.demo.html.HTMLParser p = new org.apache.lucene.demo.html.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","sourceOld":"  public DocData parse(DocData docData, String name, Date date, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.demo.html.HTMLParser p = new org.apache.lucene.demo.html.HTMLParser(reader);\n    \n    // title\n    String title = p.getTitle();\n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","pathOld":"/dev/null","sourceNew":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.demo.html.HTMLParser p = new org.apache.lucene.demo.html.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81ea17596392ebd5d12741eb9e3b2516258b9413","date":1298090976,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","sourceNew":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser p = new org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","sourceOld":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.demo.html.HTMLParser p = new org.apache.lucene.demo.html.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","sourceNew":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser p = new org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","sourceOld":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.demo.html.HTMLParser p = new org.apache.lucene.demo.html.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,Reader,DateFormat).mjava","sourceNew":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser p = new org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","sourceOld":"  public DocData parse(DocData docData, String name, Date date, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.demo.html.HTMLParser p = new org.apache.lucene.demo.html.HTMLParser(reader);\n    \n    // title\n    String title = p.getTitle();\n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","sourceNew":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser p = new org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","sourceOld":"  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser p = new org.apache.lucene.benchmark.byTask.feeds.demohtml.HTMLParser(reader);\n    \n    // title\n    if (title==null) {\n      title = p.getTitle();\n    }\n    \n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuilder bodyBuf = new StringBuilder();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["81ea17596392ebd5d12741eb9e3b2516258b9413"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","81ea17596392ebd5d12741eb9e3b2516258b9413"],"81ea17596392ebd5d12741eb9e3b2516258b9413":["3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdad2c6b6234338031bcc1f24c001a5ad66f714":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81ea17596392ebd5d12741eb9e3b2516258b9413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"81ea17596392ebd5d12741eb9e3b2516258b9413":["b89678825b68eccaf09e6ab71675fc0b0af1e099","f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","3cdad2c6b6234338031bcc1f24c001a5ad66f714","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3cdad2c6b6234338031bcc1f24c001a5ad66f714":["81ea17596392ebd5d12741eb9e3b2516258b9413","29ef99d61cda9641b6250bf9567329a6e65f901d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}