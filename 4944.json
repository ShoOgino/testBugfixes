{"path":"lucene/sandbox/src/java/org/apache/lucene/geo/Tessellator#isPointInLine(Node,Node,double,double).mjava","commits":[{"id":"5ed90f8ba7e7be13d155f954862178b23a324125","date":1568020603,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/geo/Tessellator#isPointInLine(Node,Node,double,double).mjava","pathOld":"/dev/null","sourceNew":"  private static boolean isPointInLine(final Node a, final Node b, final double lon, final double lat) {\n    final double dxc = lon - a.getX();\n    final double dyc = lat - a.getY();\n\n    final double dxl = b.getX() - a.getX();\n    final double dyl = b.getY() - a.getY();\n\n    if (dxc * dyl - dyc * dxl == 0) {\n      if (Math.abs(dxl) >= Math.abs(dyl)) {\n        return dxl > 0 ?\n            a.getX() <= lon && lon <= b.getX() :\n            b.getX() <= lon && lon <= a.getX();\n      } else {\n        return dyl > 0 ?\n            a.getY() <= lat && lat <= b.getY() :\n            b.getY() <= lat && lat <= a.getY();\n      }\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Tessellator#isPointInLine(Node,Node,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/geo/Tessellator#isPointInLine(Node,Node,double,double).mjava","sourceNew":"  private static boolean isPointInLine(final Node a, final Node b, final double lon, final double lat) {\n    final double dxc = lon - a.getX();\n    final double dyc = lat - a.getY();\n\n    final double dxl = b.getX() - a.getX();\n    final double dyl = b.getY() - a.getY();\n\n    if (dxc * dyl - dyc * dxl == 0) {\n      if (Math.abs(dxl) >= Math.abs(dyl)) {\n        return dxl > 0 ?\n            a.getX() <= lon && lon <= b.getX() :\n            b.getX() <= lon && lon <= a.getX();\n      } else {\n        return dyl > 0 ?\n            a.getY() <= lat && lat <= b.getY() :\n            b.getY() <= lat && lat <= a.getY();\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  private static boolean isPointInLine(final Node a, final Node b, final double lon, final double lat) {\n    final double dxc = lon - a.getX();\n    final double dyc = lat - a.getY();\n\n    final double dxl = b.getX() - a.getX();\n    final double dyl = b.getY() - a.getY();\n\n    if (dxc * dyl - dyc * dxl == 0) {\n      if (Math.abs(dxl) >= Math.abs(dyl)) {\n        return dxl > 0 ?\n            a.getX() <= lon && lon <= b.getX() :\n            b.getX() <= lon && lon <= a.getX();\n      } else {\n        return dyl > 0 ?\n            a.getY() <= lat && lat <= b.getY() :\n            b.getY() <= lat && lat <= a.getY();\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["5ed90f8ba7e7be13d155f954862178b23a324125"],"5ed90f8ba7e7be13d155f954862178b23a324125":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5ed90f8ba7e7be13d155f954862178b23a324125"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ed90f8ba7e7be13d155f954862178b23a324125":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}