{"path":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#termFromEncodedString(String).mjava","commits":[{"id":"df72a23fb74bebe914e3f3972063a884327c0436","date":1570470832,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#termFromEncodedString(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#termFromString(String).mjava","sourceNew":"  public static Term termFromEncodedString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty term value\");\n      return null;\n    }\n    int idx = data.indexOf(':');\n    if (idx == -1) {\n      log.warn(\"Invalid term data without ':': '\" + data + \"'\");\n      return null;\n    }\n    String field = data.substring(0, idx);\n    String value = data.substring(idx + 1);\n    try {\n       return new Term(field, decode(value));\n    } catch (Exception e) {\n      log.warn(\"Invalid term value '\" + value + \"'\");\n      return null;\n    }\n  }\n\n","sourceOld":"  private static Term termFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty term value\");\n      return null;\n    }\n    int idx = data.indexOf(':');\n    if (idx == -1) {\n      log.warn(\"Invalid term data without ':': '\" + data + \"'\");\n      return null;\n    }\n    String field = data.substring(0, idx);\n    String value = data.substring(idx + 1);\n    try {\n      return new Term(field, value);\n      // XXX this would be more correct\n      // byte[] bytes = Base64.base64ToByteArray(value);\n      // return new Term(field, new BytesRef(bytes));\n    } catch (Exception e) {\n      log.warn(\"Invalid term value '\" + value + \"'\");\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#termFromEncodedString(String).mjava","pathOld":"/dev/null","sourceNew":"  public static Term termFromEncodedString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty term value\");\n      return null;\n    }\n    int idx = data.indexOf(':');\n    if (idx == -1) {\n      log.warn(\"Invalid term data without ':': '\" + data + \"'\");\n      return null;\n    }\n    String field = data.substring(0, idx);\n    String value = data.substring(idx + 1);\n    try {\n       return new Term(field, decode(value));\n    } catch (Exception e) {\n      log.warn(\"Invalid term value '\" + value + \"'\");\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54faedfb0e03479a38f5ee82f2dfaeea536e9404","date":1587251295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#termFromEncodedString(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#termFromEncodedString(String).mjava","sourceNew":"  public static Term termFromEncodedString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty term value\");\n      return null;\n    }\n    int idx = data.indexOf(':');\n    if (idx == -1) {\n      log.warn(\"Invalid term data without ':': '{}'\", data);\n      return null;\n    }\n    String field = data.substring(0, idx);\n    String value = data.substring(idx + 1);\n    try {\n       return new Term(field, decode(value));\n    } catch (Exception e) {\n      log.warn(\"Invalid term value '{}'\", value);\n      return null;\n    }\n  }\n\n","sourceOld":"  public static Term termFromEncodedString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty term value\");\n      return null;\n    }\n    int idx = data.indexOf(':');\n    if (idx == -1) {\n      log.warn(\"Invalid term data without ':': '\" + data + \"'\");\n      return null;\n    }\n    String field = data.substring(0, idx);\n    String value = data.substring(idx + 1);\n    try {\n       return new Term(field, decode(value));\n    } catch (Exception e) {\n      log.warn(\"Invalid term value '\" + value + \"'\");\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["df72a23fb74bebe914e3f3972063a884327c0436"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df72a23fb74bebe914e3f3972063a884327c0436":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","df72a23fb74bebe914e3f3972063a884327c0436"]},"commit2Childs":{"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df72a23fb74bebe914e3f3972063a884327c0436","b0b597c65628ca9e73913a07e81691f8229bae35"],"df72a23fb74bebe914e3f3972063a884327c0436":["54faedfb0e03479a38f5ee82f2dfaeea536e9404","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}