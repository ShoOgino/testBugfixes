{"path":"src/common/org/apache/solr/common/util/XML#writeXML(Writer,String,String,Map[String,String]).mjava","commits":[{"id":"c1d2b133e97115d2d5aec760a3978abc70f1d0fd","date":1228821528,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/XML#writeXML(Writer,String,String,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /** escapes character data in val */\n  public static void writeXML(Writer out, String tag, String val, Map<String, String> attrs) throws IOException {\n    out.write('<');\n    out.write(tag);\n    for (Map.Entry<String, String> entry : attrs.entrySet()) {\n      out.write(' ');\n      out.write(entry.getKey());\n      out.write('=');\n      out.write('\"');\n      escapeAttributeValue(entry.getValue(), out);\n      out.write('\"');\n    }\n    if (val == null) {\n      out.write('/');\n      out.write('>');\n    } else {\n      out.write('>');\n      escapeCharData(val,out);\n      out.write('<');\n      out.write('/');\n      out.write(tag);\n      out.write('>');\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/common/org/apache/solr/common/util/XML#writeXML(Writer,String,String,Map[String,String]).mjava","pathOld":"src/common/org/apache/solr/common/util/XML#writeXML(Writer,String,String,Map[String,String]).mjava","sourceNew":"  /** escapes character data in val */\n  public static void writeXML(Writer out, String tag, String val, Map<String, String> attrs) throws IOException {\n    out.write('<');\n    out.write(tag);\n    for (Map.Entry<String, String> entry : attrs.entrySet()) {\n      out.write(' ');\n      out.write(entry.getKey());\n      out.write('=');\n      out.write('\"');\n      escapeAttributeValue(entry.getValue(), out);\n      out.write('\"');\n    }\n    if (val == null) {\n      out.write('/');\n      out.write('>');\n    } else {\n      out.write('>');\n      escapeCharData(val,out);\n      out.write('<');\n      out.write('/');\n      out.write(tag);\n      out.write('>');\n    }\n  }\n\n","sourceOld":"  /** escapes character data in val */\n  public static void writeXML(Writer out, String tag, String val, Map<String, String> attrs) throws IOException {\n    out.write('<');\n    out.write(tag);\n    for (Map.Entry<String, String> entry : attrs.entrySet()) {\n      out.write(' ');\n      out.write(entry.getKey());\n      out.write('=');\n      out.write('\"');\n      escapeAttributeValue(entry.getValue(), out);\n      out.write('\"');\n    }\n    if (val == null) {\n      out.write('/');\n      out.write('>');\n    } else {\n      out.write('>');\n      escapeCharData(val,out);\n      out.write('<');\n      out.write('/');\n      out.write(tag);\n      out.write('>');\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c1d2b133e97115d2d5aec760a3978abc70f1d0fd"],"c1d2b133e97115d2d5aec760a3978abc70f1d0fd":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c1d2b133e97115d2d5aec760a3978abc70f1d0fd"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"c1d2b133e97115d2d5aec760a3978abc70f1d0fd":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}