{"path":"lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.TermIterator#next().mjava","commits":[{"id":"7e4c214a1f904dde76f5611b56d4081533055b3b","date":1421938451,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.TermIterator#next().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean next() {\n      if (input.getFilePointer() < end) {\n        try {\n          int code = input.readVInt();\n          boolean newField = (code & 1) != 0;\n          if (newField) {\n            field = input.readString();\n          }\n          int prefix = code >>> 1;\n          int suffix = input.readVInt();\n          readTermBytes(prefix, suffix);\n          return newField;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else {\n        field = null;\n        return true;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"258f227b48a4dbfc180f6ec70f172469d6a2bef8","date":1428687213,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.TermIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.TermIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() {\n      if (input.getFilePointer() < end) {\n        try {\n          int code = input.readVInt();\n          boolean newField = (code & 1) != 0;\n          if (newField) {\n            field = input.readString();\n          }\n          int prefix = code >>> 1;\n          int suffix = input.readVInt();\n          readTermBytes(prefix, suffix);\n          return bytes;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else {\n        field = null;\n        return null;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean next() {\n      if (input.getFilePointer() < end) {\n        try {\n          int code = input.readVInt();\n          boolean newField = (code & 1) != 0;\n          if (newField) {\n            field = input.readString();\n          }\n          int prefix = code >>> 1;\n          int suffix = input.readVInt();\n          readTermBytes(prefix, suffix);\n          return newField;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else {\n        field = null;\n        return true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409da428f28953cf35fddd5c9ff5c7e4f5439863","date":1547556145,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.TermIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.TermIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() {\n      if (input.position() < end) {\n        try {\n          int code = input.readVInt();\n          boolean newField = (code & 1) != 0;\n          if (newField) {\n            field = input.readString();\n          }\n          int prefix = code >>> 1;\n          int suffix = input.readVInt();\n          readTermBytes(prefix, suffix);\n          return bytes;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else {\n        field = null;\n        return null;\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() {\n      if (input.getFilePointer() < end) {\n        try {\n          int code = input.readVInt();\n          boolean newField = (code & 1) != 0;\n          if (newField) {\n            field = input.readString();\n          }\n          int prefix = code >>> 1;\n          int suffix = input.readVInt();\n          readTermBytes(prefix, suffix);\n          return bytes;\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else {\n        field = null;\n        return null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["258f227b48a4dbfc180f6ec70f172469d6a2bef8"],"258f227b48a4dbfc180f6ec70f172469d6a2bef8":["7e4c214a1f904dde76f5611b56d4081533055b3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7e4c214a1f904dde76f5611b56d4081533055b3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["409da428f28953cf35fddd5c9ff5c7e4f5439863"]},"commit2Childs":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"258f227b48a4dbfc180f6ec70f172469d6a2bef8":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e4c214a1f904dde76f5611b56d4081533055b3b"],"7e4c214a1f904dde76f5611b56d4081533055b3b":["258f227b48a4dbfc180f6ec70f172469d6a2bef8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}