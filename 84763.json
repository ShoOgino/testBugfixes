{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#getAliveCheckRunner(WeakReference[LBHttpSolrClient]).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#getAliveCheckRunner(WeakReference[LBHttpSolrClient]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrServer#getAliveCheckRunner(WeakReference[LBHttpSolrServer]).mjava","sourceNew":"  private static Runnable getAliveCheckRunner(final WeakReference<LBHttpSolrClient> lbRef) {\n    return new Runnable() {\n      @Override\n      public void run() {\n        LBHttpSolrClient lb = lbRef.get();\n        if (lb != null && lb.zombieServers != null) {\n          for (ServerWrapper zombieServer : lb.zombieServers.values()) {\n            lb.checkAZombieServer(zombieServer);\n          }\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private static Runnable getAliveCheckRunner(final WeakReference<LBHttpSolrServer> lbRef) {\n    return new Runnable() {\n      @Override\n      public void run() {\n        LBHttpSolrServer lb = lbRef.get();\n        if (lb != null && lb.zombieServers != null) {\n          for (ServerWrapper zombieServer : lb.zombieServers.values()) {\n            lb.checkAZombieServer(zombieServer);\n          }\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a0c04b71951333291abc7f317109a6a5957bd28","date":1457097827,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#getAliveCheckRunner(WeakReference[LBHttpSolrClient]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#getAliveCheckRunner(WeakReference[LBHttpSolrClient]).mjava","sourceNew":"  private static Runnable getAliveCheckRunner(final WeakReference<LBHttpSolrClient> lbRef) {\n    return () -> {\n      LBHttpSolrClient lb = lbRef.get();\n      if (lb != null && lb.zombieServers != null) {\n        for (ServerWrapper zombieServer : lb.zombieServers.values()) {\n          lb.checkAZombieServer(zombieServer);\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private static Runnable getAliveCheckRunner(final WeakReference<LBHttpSolrClient> lbRef) {\n    return new Runnable() {\n      @Override\n      public void run() {\n        LBHttpSolrClient lb = lbRef.get();\n        if (lb != null && lb.zombieServers != null) {\n          for (ServerWrapper zombieServer : lb.zombieServers.values()) {\n            lb.checkAZombieServer(zombieServer);\n          }\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":5,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient#getAliveCheckRunner(WeakReference[LBSolrClient]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#getAliveCheckRunner(WeakReference[LBHttpSolrClient]).mjava","sourceNew":"  private static Runnable getAliveCheckRunner(final WeakReference<LBSolrClient> lbRef) {\n    return () -> {\n      LBSolrClient lb = lbRef.get();\n      if (lb != null && lb.zombieServers != null) {\n        for (Object zombieServer : lb.zombieServers.values()) {\n          lb.checkAZombieServer((ServerWrapper)zombieServer);\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private static Runnable getAliveCheckRunner(final WeakReference<LBHttpSolrClient> lbRef) {\n    return () -> {\n      LBHttpSolrClient lb = lbRef.get();\n      if (lb != null && lb.zombieServers != null) {\n        for (ServerWrapper zombieServer : lb.zombieServers.values()) {\n          lb.checkAZombieServer(zombieServer);\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["3a0c04b71951333291abc7f317109a6a5957bd28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a0c04b71951333291abc7f317109a6a5957bd28":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"]},"commit2Childs":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["3a0c04b71951333291abc7f317109a6a5957bd28"],"3a0c04b71951333291abc7f317109a6a5957bd28":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}