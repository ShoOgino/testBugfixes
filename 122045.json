{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriterRAMAllocator.ByteBlockAllocator#getByteBlock().mjava","commits":[{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterRAMAllocator.ByteBlockAllocator#getByteBlock().mjava","pathOld":"/dev/null","sourceNew":"    /* Allocate another byte[] from the shared pool */\n    @Override\n    byte[] getByteBlock() {\n      final int size = freeByteBlocks.size();\n      final byte[] b;\n      if (0 == size) {\n        b = new byte[blockSize];\n        // Always record a block allocated, even if\n        // trackAllocations is false.  This is necessary\n        // because this block will be shared between\n        // things that don't track allocations (term\n        // vectors) and things that do (freq/prox\n        // postings).\n        numBytesUsed += blockSize;\n      } else\n        b = freeByteBlocks.remove(size-1);\n      return b;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ca38aecd0204be91049ec782668f642a68d9935","date":1292975343,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterRAMAllocator.ByteBlockAllocator#getByteBlock().mjava","sourceNew":null,"sourceOld":"    /* Allocate another byte[] from the shared pool */\n    @Override\n    byte[] getByteBlock() {\n      final int size = freeByteBlocks.size();\n      final byte[] b;\n      if (0 == size) {\n        b = new byte[blockSize];\n        // Always record a block allocated, even if\n        // trackAllocations is false.  This is necessary\n        // because this block will be shared between\n        // things that don't track allocations (term\n        // vectors) and things that do (freq/prox\n        // postings).\n        numBytesUsed += blockSize;\n      } else\n        b = freeByteBlocks.remove(size-1);\n      return b;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c18273ea5b3974d2f30117f46f1ae416c28f727":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1ca38aecd0204be91049ec782668f642a68d9935":["6c18273ea5b3974d2f30117f46f1ae416c28f727"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6c18273ea5b3974d2f30117f46f1ae416c28f727":["1ca38aecd0204be91049ec782668f642a68d9935"],"1ca38aecd0204be91049ec782668f642a68d9935":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6c18273ea5b3974d2f30117f46f1ae416c28f727","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1ca38aecd0204be91049ec782668f642a68d9935","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}