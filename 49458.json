{"path":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem.DeprecatedRawLocalFileStatus#loadPermissionInfoByNativeIO().mjava","commits":[{"id":"6bdf107cf16be0f22504ae184fed81596665a244","date":1576012524,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem.DeprecatedRawLocalFileStatus#loadPermissionInfoByNativeIO().mjava","pathOld":"/dev/null","sourceNew":"    // loads permissions, owner, and group from `ls -ld`\n    // but use JNI to more efficiently get file mode (permission, owner, group)\n    // by calling file stat() in *nix or some similar calls in Windows\n    @VisibleForTesting\n    void loadPermissionInfoByNativeIO() throws IOException {\n      Path path = getPath();\n      String pathName = path.toUri().getPath();\n      // remove leading slash for Windows path\n      if (Shell.WINDOWS && pathName.startsWith(\"/\")) {\n        pathName = pathName.substring(1);\n      }\n      try {\n        NativeIO.POSIX.Stat stat = NativeIO.POSIX.getStat(pathName);\n        String owner = stat.getOwner();\n        String group = stat.getGroup();\n        int mode = stat.getMode();\n        setOwner(owner);\n        setGroup(group);\n        setPermission(new FsPermission(mode));\n      } catch (IOException e) {\n        setOwner(null);\n        setGroup(null);\n        setPermission(null);\n        throw e;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a229cb50768e988c50a2106bdae3a92154f428bf","date":1576051038,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem.DeprecatedRawLocalFileStatus#loadPermissionInfoByNativeIO().mjava","pathOld":"/dev/null","sourceNew":"    // loads permissions, owner, and group from `ls -ld`\n    // but use JNI to more efficiently get file mode (permission, owner, group)\n    // by calling file stat() in *nix or some similar calls in Windows\n    @VisibleForTesting\n    void loadPermissionInfoByNativeIO() throws IOException {\n      Path path = getPath();\n      String pathName = path.toUri().getPath();\n      // remove leading slash for Windows path\n      if (Shell.WINDOWS && pathName.startsWith(\"/\")) {\n        pathName = pathName.substring(1);\n      }\n      try {\n        NativeIO.POSIX.Stat stat = NativeIO.POSIX.getStat(pathName);\n        String owner = stat.getOwner();\n        String group = stat.getGroup();\n        int mode = stat.getMode();\n        setOwner(owner);\n        setGroup(group);\n        setPermission(new FsPermission(mode));\n      } catch (IOException e) {\n        setOwner(null);\n        setGroup(null);\n        setPermission(null);\n        throw e;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a229cb50768e988c50a2106bdae3a92154f428bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bdf107cf16be0f22504ae184fed81596665a244"]},"commit2Childs":{"a229cb50768e988c50a2106bdae3a92154f428bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a229cb50768e988c50a2106bdae3a92154f428bf","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}