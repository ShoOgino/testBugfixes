{"path":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","commits":[{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#doTest().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        index_specific(i, id, docId++, \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        index_specific(i, id, docId++, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n      }\n    }\n    commit();\n\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        index_specific(i, id, docId++, \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        index_specific(i, id, docId++, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n      }\n    }\n    commit();\n\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"295883c599f058f44454387d45144818e02296d5","date":1497292073,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","sourceNew":"  @Test \n  public void test() throws Exception {\n    del(\"*:*\");\n    String aDocId=null;\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id,currentId , \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId, \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id, currentId, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n\n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        index_specific(i, id, docId++, \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        index_specific(i, id, docId++, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n      }\n    }\n    commit();\n\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","bugFix":null,"bugIntro":["e2653a81e8b7a65168d78b9812268c145a55941a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","sourceNew":"  @Test \n  public void test() throws Exception {\n    del(\"*:*\");\n    String aDocId=null;\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id,currentId , \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId, \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id, currentId, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n\n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        index_specific(i, id, docId++, \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        index_specific(i, id, docId++, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n      }\n    }\n    commit();\n\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e2653a81e8b7a65168d78b9812268c145a55941a","date":1498468311,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","sourceNew":"  @Test \n  public void test() throws Exception {\n    del(\"*:*\");\n    String aDocId=null;\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id,currentId , \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId, \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id, currentId, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n\n    if (aDocId != null) {\n      dfQuery(\"q\", \"{!cache=false}id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","sourceOld":"  @Test \n  public void test() throws Exception {\n    del(\"*:*\");\n    String aDocId=null;\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id,currentId , \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId, \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id, currentId, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n\n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","bugFix":["295883c599f058f44454387d45144818e02296d5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","date":1498540685,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","sourceNew":"  @Test \n  public void test() throws Exception {\n    del(\"*:*\");\n    String aDocId=null;\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id,currentId , \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId, \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id, currentId, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n\n    if (aDocId != null) {\n      dfQuery(\"q\", \"{!cache=false}id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","sourceOld":"  @Test \n  public void test() throws Exception {\n    del(\"*:*\");\n    String aDocId=null;\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id,currentId , \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId, \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id, currentId, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n\n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","sourceNew":"  @Test \n  public void test() throws Exception {\n    del(\"*:*\");\n    String aDocId=null;\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id,currentId , \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId, \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id, currentId, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n\n    if (aDocId != null) {\n      dfQuery(\"q\", \"{!cache=false}id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        index_specific(i, id, docId++, \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        index_specific(i, id, docId++, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n      }\n    }\n    commit();\n\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df72a23fb74bebe914e3f3972063a884327c0436","date":1570470832,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","sourceNew":"  @Test \n  public void test() throws Exception {\n    del(\"*:*\");\n    commit();\n    String aDocId=null;\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id,currentId , \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId, \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id, currentId, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n\n    if (aDocId != null) {\n      dfQuery(\"q\", \"{!cache=false}id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","sourceOld":"  @Test \n  public void test() throws Exception {\n    del(\"*:*\");\n    String aDocId=null;\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id,currentId , \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId, \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id, currentId, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n\n    if (aDocId != null) {\n      dfQuery(\"q\", \"{!cache=false}id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache#test().mjava","sourceNew":"  @Test \n  public void test() throws Exception {\n    del(\"*:*\");\n    commit();\n    String aDocId=null;\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id,currentId , \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId, \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id, currentId, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n\n    if (aDocId != null) {\n      dfQuery(\"q\", \"{!cache=false}id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","sourceOld":"  @Test \n  public void test() throws Exception {\n    del(\"*:*\");\n    String aDocId=null;\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id,currentId , \"a_t\", \"one two three\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);   \n    handle.put(\"timestamp\", SKIPVAL);\n    \n    if (aDocId != null) {\n      dfQuery(\"q\", \"id:\"+aDocId, \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n    \n    // add another document\n    for (int i = 0; i < clients.size(); i++) {\n      int shard = i + 1;\n      for (int j = 0; j <= i; j++) {\n        int currentId = docId++;\n        index_specific(i, id, currentId, \"a_t\", \"one two three four five\",\n            \"shard_i\", shard);\n        aDocId = rarely() ? currentId+\"\":aDocId;\n      }\n    }\n    commit();\n\n    if (aDocId != null) {\n      dfQuery(\"q\", \"{!cache=false}id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n    }\n    dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e2653a81e8b7a65168d78b9812268c145a55941a":["295883c599f058f44454387d45144818e02296d5"],"abb23fcc2461782ab204e61213240feb77d355aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","e2653a81e8b7a65168d78b9812268c145a55941a"],"df72a23fb74bebe914e3f3972063a884327c0436":["28288370235ed02234a64753cdbf0c6ec096304a"],"295883c599f058f44454387d45144818e02296d5":["abb23fcc2461782ab204e61213240feb77d355aa"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["abb23fcc2461782ab204e61213240feb77d355aa","295883c599f058f44454387d45144818e02296d5"],"28288370235ed02234a64753cdbf0c6ec096304a":["abb23fcc2461782ab204e61213240feb77d355aa","e2653a81e8b7a65168d78b9812268c145a55941a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df72a23fb74bebe914e3f3972063a884327c0436"],"b0b597c65628ca9e73913a07e81691f8229bae35":["28288370235ed02234a64753cdbf0c6ec096304a","df72a23fb74bebe914e3f3972063a884327c0436"]},"commit2Childs":{"e2653a81e8b7a65168d78b9812268c145a55941a":["fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","28288370235ed02234a64753cdbf0c6ec096304a"],"abb23fcc2461782ab204e61213240feb77d355aa":["295883c599f058f44454387d45144818e02296d5","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["abb23fcc2461782ab204e61213240feb77d355aa"],"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4":[],"df72a23fb74bebe914e3f3972063a884327c0436":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"295883c599f058f44454387d45144818e02296d5":["e2653a81e8b7a65168d78b9812268c145a55941a","b7dfa64bc2074fb87d0ca70095a644c1ead107e1"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4"],"28288370235ed02234a64753cdbf0c6ec096304a":["df72a23fb74bebe914e3f3972063a884327c0436","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}