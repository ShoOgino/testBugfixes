{"path":"solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper#getAndSaveCommitPoint(Long).mjava","commits":[{"id":"19f02bb04467ed179738a398a7da80bbbe161c16","date":1573660732,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper#getAndSaveCommitPoint(Long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Atomically Saves (via reference counting) &amp; Returns the specified commit if available.\n   * <p>\n   * If the return value is non-null, then the caller <em>MUST</em> call {@link #releaseCommitPoint} \n   * when finished using it in order to decrement the reference count, or the commit will be preserved \n   * in the Directory forever.\n   * </p>\n   *\n   * @return the commit point with the specified generation, or null if not available\n   * @see #saveCommitPoint\n   * @see #releaseCommitPoint\n   */\n  public synchronized IndexCommit getAndSaveCommitPoint(Long generation) {\n    if (null == generation) {\n      throw new NullPointerException(\"generation to get and save must not be null\");\n    }\n    final IndexCommit commit = knownCommits.get(generation);\n    if ( (null != commit && false != commit.isDeleted())\n         || (null == commit && null != latestCommit && generation < latestCommit.getGeneration()) ) {\n      throw new IllegalStateException\n        (\"Specified index generation is too old to be saved: \" + generation);\n    }\n    final AtomicInteger refCount\n      = savedCommits.computeIfAbsent(generation, s -> { return new AtomicInteger(); });\n    final int currentCount = refCount.incrementAndGet();\n    log.debug(\"Saving generation={}, refCount={}\", generation, currentCount);\n    return commit;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"19f02bb04467ed179738a398a7da80bbbe161c16":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19f02bb04467ed179738a398a7da80bbbe161c16"]},"commit2Childs":{"19f02bb04467ed179738a398a7da80bbbe161c16":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["19f02bb04467ed179738a398a7da80bbbe161c16"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}