{"path":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getDocTermOrds(AtomicReader,String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getDocTermOrds(AtomicReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCache#getDocTermOrds(AtomicReader,String).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermOrds getDocTermOrds(AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermOrds getDocTermOrds(AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f438915b81b54f1fdff40443da8c4fb15c61c777","date":1360597404,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getDocTermOrds(AtomicReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getDocTermOrds(AtomicReader,String).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermOrds getDocTermOrds(AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getDocTermOrds(AtomicReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getDocTermOrds(AtomicReader,String).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermOrds getDocTermOrds(AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCache#getDocTermOrds(AtomicReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getDocTermOrds(AtomicReader,String).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCache#getDocTermOrds(AtomicReader,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getDocTermOrds(AtomicReader,String).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @param prefix  prefix for a subset of the terms which should be uninverted. Can be null or\n   *                {@link #INT32_TERM_PREFIX} or {@link #INT64_TERM_PREFIX}\n   *                \n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(AtomicReader reader, String field, BytesRef prefix) throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCache#getDocTermOrds(AtomicReader,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getDocTermOrds(AtomicReader,String).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @param prefix  prefix for a subset of the terms which should be uninverted. Can be null or\n   *                {@link #INT32_TERM_PREFIX} or {@link #INT64_TERM_PREFIX}\n   *                \n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(AtomicReader reader, String field, BytesRef prefix) throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["ddbb72a33557d2b5bc22ee95daf3281c43560502","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f438915b81b54f1fdff40443da8c4fb15c61c777":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f438915b81b54f1fdff40443da8c4fb15c61c777"],"56572ec06f1407c066d6b7399413178b33176cd8":["ddbb72a33557d2b5bc22ee95daf3281c43560502","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f438915b81b54f1fdff40443da8c4fb15c61c777","ddbb72a33557d2b5bc22ee95daf3281c43560502"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f438915b81b54f1fdff40443da8c4fb15c61c777":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}