{"path":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getString(int).mjava","commits":[{"id":"5dc2dbc2e49f222b72cdfc503db799a3738fb4f2","date":1338919199,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getString(int).mjava","pathOld":"/dev/null","sourceNew":"    // returns the string value for a primitive value, or null for the null value\n    String getString(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.BIGNUMBER:\n        case JSONParser.NUMBER:\n        case JSONParser.LONG:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return Boolean.toString(parser.getBoolean());\n        case JSONParser.NULL:\n          return null;\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Expected primitive JSON value but got: \"+JSONParser.getEventString( ev  )\n                  +\" at [\"+parser.getPosition()+\"]\" );\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f5f8e831e266692b649e39dad7a64f525aa6d21","date":1427506910,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getString(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getString(int).mjava","sourceNew":"    // returns the string value for a primitive value, or null for the null value\n    String getString(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.BIGNUMBER:\n        case JSONParser.NUMBER:\n        case JSONParser.LONG:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return Boolean.toString(parser.getBoolean());\n        case JSONParser.NULL:\n          return null;\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Expected primitive JSON value but got: \" + JSONParser.getEventString(ev)\n                  + \" at [\" + parser.getPosition() + \"]\");\n      }\n    }\n\n","sourceOld":"    // returns the string value for a primitive value, or null for the null value\n    String getString(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.BIGNUMBER:\n        case JSONParser.NUMBER:\n        case JSONParser.LONG:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return Boolean.toString(parser.getBoolean());\n        case JSONParser.NULL:\n          return null;\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Expected primitive JSON value but got: \"+JSONParser.getEventString( ev  )\n                  +\" at [\"+parser.getPosition()+\"]\" );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getString(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getString(int).mjava","sourceNew":"    // returns the string value for a primitive value, or null for the null value\n    String getString(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.BIGNUMBER:\n        case JSONParser.NUMBER:\n        case JSONParser.LONG:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return Boolean.toString(parser.getBoolean());\n        case JSONParser.NULL:\n          return null;\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Expected primitive JSON value but got: \" + JSONParser.getEventString(ev)\n                  + \" at [\" + parser.getPosition() + \"]\");\n      }\n    }\n\n","sourceOld":"    // returns the string value for a primitive value, or null for the null value\n    String getString(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.BIGNUMBER:\n        case JSONParser.NUMBER:\n        case JSONParser.LONG:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return Boolean.toString(parser.getBoolean());\n        case JSONParser.NULL:\n          return null;\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Expected primitive JSON value but got: \"+JSONParser.getEventString( ev  )\n                  +\" at [\"+parser.getPosition()+\"]\" );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["5dc2dbc2e49f222b72cdfc503db799a3738fb4f2","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"5dc2dbc2e49f222b72cdfc503db799a3738fb4f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["5dc2dbc2e49f222b72cdfc503db799a3738fb4f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6f5f8e831e266692b649e39dad7a64f525aa6d21"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"5dc2dbc2e49f222b72cdfc503db799a3738fb4f2":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5dc2dbc2e49f222b72cdfc503db799a3738fb4f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}