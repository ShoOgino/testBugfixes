{"path":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.Format#longCount(int,int,int).mjava","commits":[{"id":"c661dcad9680b8a6ce5bf2cc583a69ec965328bc","date":1352297862,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.Format#longCount(int,int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Computes how many long blocks are needed to store <code>values</code>\n     * values of size <code>bitsPerValue</code>.\n     */\n    public int longCount(int packedIntsVersion, int valueCount, int bitsPerValue) {\n      assert bitsPerValue >= 0 && bitsPerValue <= 64 : bitsPerValue;\n      final long byteCount = byteCount(packedIntsVersion, valueCount, bitsPerValue);\n      assert byteCount < 8L * Integer.MAX_VALUE;\n      if ((byteCount % 8) == 0) {\n        return (int) (byteCount / 8);\n      } else {\n        return (int) (byteCount / 8 + 1);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c661dcad9680b8a6ce5bf2cc583a69ec965328bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c661dcad9680b8a6ce5bf2cc583a69ec965328bc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c661dcad9680b8a6ce5bf2cc583a69ec965328bc"],"c661dcad9680b8a6ce5bf2cc583a69ec965328bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}