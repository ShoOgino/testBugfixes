{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41DocValuesProducer#getSorted(FieldInfo).mjava","commits":[{"id":"d7bf953a8ab9ae7d92835bdf9cbe5a268448868f","date":1358522034,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.number);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.number);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<Long>(data, PositiveIntOutputs.getSingleton(true));\n        fstInstances.put(field.number, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader(0);\n    final Arc<Long> firstArc = new Arc<Long>();\n    final Arc<Long> scratchArc = new Arc<Long>();\n    final IntsRef scratchInts = new IntsRef();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<Long>(fst); \n    \n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          Util.toBytesRef(Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts), result);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key, BytesRef spare) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return entry.numOrds;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.number);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.number);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<Long>(data, PositiveIntOutputs.getSingleton(true));\n        fstInstances.put(field.number, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader(0);\n    final Arc<Long> firstArc = new Arc<Long>();\n    final Arc<Long> scratchArc = new Arc<Long>();\n    final IntsRef scratchInts = new IntsRef();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<Long>(fst); \n    \n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          Util.toBytesRef(Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts), result);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key, BytesRef spare) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return entry.numOrds;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.number);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.number);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<Long>(data, PositiveIntOutputs.getSingleton(true));\n        fstInstances.put(field.number, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<Long>();\n    final Arc<Long> scratchArc = new Arc<Long>();\n    final IntsRef scratchInts = new IntsRef();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<Long>(fst); \n    \n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          Util.toBytesRef(Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts), result);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key, BytesRef spare) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return entry.numOrds;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.number);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.number);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<Long>(data, PositiveIntOutputs.getSingleton(true));\n        fstInstances.put(field.number, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader(0);\n    final Arc<Long> firstArc = new Arc<Long>();\n    final Arc<Long> scratchArc = new Arc<Long>();\n    final IntsRef scratchInts = new IntsRef();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<Long>(fst); \n    \n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          Util.toBytesRef(Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts), result);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key, BytesRef spare) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return entry.numOrds;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e","date":1358793943,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.number);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.number);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<Long>(data, PositiveIntOutputs.getSingleton(true));\n        fstInstances.put(field.number, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<Long>();\n    final Arc<Long> scratchArc = new Arc<Long>();\n    final IntsRef scratchInts = new IntsRef();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<Long>(fst); \n    \n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          Util.toBytesRef(Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts), result);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key, BytesRef spare) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return entry.numOrds;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.number);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.number);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<Long>(data, PositiveIntOutputs.getSingleton(true));\n        fstInstances.put(field.number, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<Long>();\n    final Arc<Long> scratchArc = new Arc<Long>();\n    final IntsRef scratchInts = new IntsRef();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<Long>(fst); \n    \n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          Util.toBytesRef(Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts), result);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key, BytesRef spare) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return entry.numOrds;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e":["c4015cd39dff8d4dec562d909f9766debac53aa6"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["d7bf953a8ab9ae7d92835bdf9cbe5a268448868f","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d7bf953a8ab9ae7d92835bdf9cbe5a268448868f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e":[],"c4015cd39dff8d4dec562d909f9766debac53aa6":["3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e"],"d7bf953a8ab9ae7d92835bdf9cbe5a268448868f":["c4015cd39dff8d4dec562d909f9766debac53aa6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c4015cd39dff8d4dec562d909f9766debac53aa6","d7bf953a8ab9ae7d92835bdf9cbe5a268448868f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}