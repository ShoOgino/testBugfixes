{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2102da8a037e2ce5cb9f72256c58c8722b9cd706","date":1374864457,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\", \");\n    buffer.append(Integer.toString(pre));\n    buffer.append(\", \");\n    buffer.append(Integer.toString(post));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\", \");\n    buffer.append(Integer.toString(pre));\n    buffer.append(\", \");\n    buffer.append(Integer.toString(post));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\", \");\n    buffer.append(Integer.toString(pre));\n    buffer.append(\", \");\n    buffer.append(Integer.toString(post));\n    buffer.append(\")\");\n    return buffer.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\", \");\n    buffer.append(Integer.toString(pre));\n    buffer.append(\", \");\n    buffer.append(Integer.toString(post));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["2102da8a037e2ce5cb9f72256c58c8722b9cd706"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2102da8a037e2ce5cb9f72256c58c8722b9cd706":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","2102da8a037e2ce5cb9f72256c58c8722b9cd706"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"2102da8a037e2ce5cb9f72256c58c8722b9cd706":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}