{"path":"src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","commits":[{"id":"0f612096ab5275c4821d05f126bf45a89f4782b8","date":1246738452,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"src/test/org/apache/lucene/search/TestRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE).setAnalyzer(analyzer));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE).setAnalyzer(analyzer));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}