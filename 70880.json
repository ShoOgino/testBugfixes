{"path":"src/test/org/apache/lucene/analysis/TestStandardAnalyzer#assertAnalyzesTo(Analyzer,String,String[],String[]).mjava","commits":[{"id":"8e191901ff30c9f34f5e72d2e7b6f6c975eb9b4e","date":1186612004,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStandardAnalyzer#assertAnalyzesTo(Analyzer,String,String[],String[]).mjava","pathOld":"/dev/null","sourceNew":"    public void assertAnalyzesTo(Analyzer a, String input, String[] expectedImages, String[] expectedTypes) throws Exception {\n\tTokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n\tfor (int i = 0; i < expectedImages.length; i++) {\n\t    Token t = ts.next();\n\t    assertNotNull(t);\n\t    assertEquals(expectedImages[i], t.termText());\n\t    if (expectedTypes != null)\n\t    {\n\t\tassertEquals(expectedTypes[i], t.type());\n\t    }\n\t}\n\tassertNull(ts.next());\n\tts.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29189b79757c6eaf9bf3236db39656fbd2a43827","date":1198267704,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStandardAnalyzer#assertAnalyzesTo(Analyzer,String,String[],String[]).mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStandardAnalyzer#assertAnalyzesTo(Analyzer,String,String[],String[]).mjava","sourceNew":"  public void assertAnalyzesTo(Analyzer a, String input, String[] expectedImages, String[] expectedTypes) throws Exception {\n    TokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n    for (int i = 0; i < expectedImages.length; i++) {\n      Token t = ts.next();\n      assertNotNull(t);\n      assertEquals(expectedImages[i], t.termText());\n      if (expectedTypes != null) {\n        assertEquals(expectedTypes[i], t.type());\n      }\n    }\n    assertNull(ts.next());\n    ts.close();\n  }\n\n","sourceOld":"    public void assertAnalyzesTo(Analyzer a, String input, String[] expectedImages, String[] expectedTypes) throws Exception {\n\tTokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n\tfor (int i = 0; i < expectedImages.length; i++) {\n\t    Token t = ts.next();\n\t    assertNotNull(t);\n\t    assertEquals(expectedImages[i], t.termText());\n\t    if (expectedTypes != null)\n\t    {\n\t\tassertEquals(expectedTypes[i], t.type());\n\t    }\n\t}\n\tassertNull(ts.next());\n\tts.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5b54d19e4682ef2b08bd06f76c13a4c8d785386","date":1199633864,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStandardAnalyzer#assertAnalyzesTo(Analyzer,String,String[],String[]).mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStandardAnalyzer#assertAnalyzesTo(Analyzer,String,String[],String[]).mjava","sourceNew":"  public void assertAnalyzesTo(Analyzer a, String input, String[] expectedImages, String[] expectedTypes) throws Exception {\n    assertAnalyzesTo(a, input, expectedImages, expectedTypes, null);\n  }\n\n","sourceOld":"  public void assertAnalyzesTo(Analyzer a, String input, String[] expectedImages, String[] expectedTypes) throws Exception {\n    TokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n    for (int i = 0; i < expectedImages.length; i++) {\n      Token t = ts.next();\n      assertNotNull(t);\n      assertEquals(expectedImages[i], t.termText());\n      if (expectedTypes != null) {\n        assertEquals(expectedTypes[i], t.type());\n      }\n    }\n    assertNull(ts.next());\n    ts.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc","date":1251117853,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/analysis/TestStandardAnalyzer#assertAnalyzesTo(Analyzer,String,String[],String[]).mjava","sourceNew":null,"sourceOld":"  public void assertAnalyzesTo(Analyzer a, String input, String[] expectedImages, String[] expectedTypes) throws Exception {\n    assertAnalyzesTo(a, input, expectedImages, expectedTypes, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29189b79757c6eaf9bf3236db39656fbd2a43827":["8e191901ff30c9f34f5e72d2e7b6f6c975eb9b4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8e191901ff30c9f34f5e72d2e7b6f6c975eb9b4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["a5b54d19e4682ef2b08bd06f76c13a4c8d785386"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"a5b54d19e4682ef2b08bd06f76c13a4c8d785386":["29189b79757c6eaf9bf3236db39656fbd2a43827"]},"commit2Childs":{"29189b79757c6eaf9bf3236db39656fbd2a43827":["a5b54d19e4682ef2b08bd06f76c13a4c8d785386"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8e191901ff30c9f34f5e72d2e7b6f6c975eb9b4e"],"8e191901ff30c9f34f5e72d2e7b6f6c975eb9b4e":["29189b79757c6eaf9bf3236db39656fbd2a43827"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a5b54d19e4682ef2b08bd06f76c13a4c8d785386":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}