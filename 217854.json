{"path":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#parseCollectionsParameter(Object).mjava","commits":[{"id":"f2f5f46d1d0ebd4c0522e96d55ee60f0b57fbecc","date":1512662150,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#parseCollectionsParameter(Object).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The v2 API directs that the 'collections' parameter be provided as a JSON array (e.g. [\"a\", \"b\"]).  We also\n   * maintain support for the legacy format, a comma-separated list (e.g. a,b).\n   */\n  @SuppressWarnings(\"unchecked\")\n  private List<String> parseCollectionsParameter(Object colls) {\n    if (colls == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"missing collections param\");\n    if (colls instanceof List) return (List<String>) colls;\n    return StrUtils.splitSmart(colls.toString(), \",\", true).stream()\n        .map(String::trim)\n        .collect(Collectors.toList());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#parseCollectionsParameter(Object).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The v2 API directs that the 'collections' parameter be provided as a JSON array (e.g. [\"a\", \"b\"]).  We also\n   * maintain support for the legacy format, a comma-separated list (e.g. a,b).\n   */\n  @SuppressWarnings(\"unchecked\")\n  private List<String> parseCollectionsParameter(Object colls) {\n    if (colls == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"missing collections param\");\n    if (colls instanceof List) return (List<String>) colls;\n    return StrUtils.splitSmart(colls.toString(), \",\", true).stream()\n        .map(String::trim)\n        .collect(Collectors.toList());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#parseCollectionsParameter(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#parseCollectionsParameter(Object).mjava","sourceNew":"  /**\n   * The v2 API directs that the 'collections' parameter be provided as a JSON array (e.g. [\"a\", \"b\"]).  We also\n   * maintain support for the legacy format, a comma-separated list (e.g. a,b).\n   */\n  @SuppressWarnings(\"unchecked\")\n  private List<String> parseCollectionsParameter(Object colls) {\n    if (colls == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"missing collections param\");\n    if (colls instanceof List) return (List<String>) colls;\n    return StrUtils.splitSmart(colls.toString(), \",\", true).stream()\n        .map(String::trim)\n        .collect(Collectors.toList());\n  }\n\n","sourceOld":"  /**\n   * The v2 API directs that the 'collections' parameter be provided as a JSON array (e.g. [\"a\", \"b\"]).  We also\n   * maintain support for the legacy format, a comma-separated list (e.g. a,b).\n   */\n  @SuppressWarnings(\"unchecked\")\n  private List<String> parseCollectionsParameter(Object colls) {\n    if (colls == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"missing collections param\");\n    if (colls instanceof List) return (List<String>) colls;\n    return StrUtils.splitSmart(colls.toString(), \",\", true).stream()\n        .map(String::trim)\n        .collect(Collectors.toList());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#parseCollectionsParameter(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#parseCollectionsParameter(Object).mjava","sourceNew":"  /**\n   * The v2 API directs that the 'collections' parameter be provided as a JSON array (e.g. [\"a\", \"b\"]).  We also\n   * maintain support for the legacy format, a comma-separated list (e.g. a,b).\n   */\n  @SuppressWarnings(\"unchecked\")\n  private List<String> parseCollectionsParameter(Object colls) {\n    if (colls == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"missing collections param\");\n    if (colls instanceof List) return (List<String>) colls;\n    return StrUtils.splitSmart(colls.toString(), \",\", true).stream()\n        .map(String::trim)\n        .collect(Collectors.toList());\n  }\n\n","sourceOld":"  /**\n   * The v2 API directs that the 'collections' parameter be provided as a JSON array (e.g. [\"a\", \"b\"]).  We also\n   * maintain support for the legacy format, a comma-separated list (e.g. a,b).\n   */\n  @SuppressWarnings(\"unchecked\")\n  private List<String> parseCollectionsParameter(Object colls) {\n    if (colls == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"missing collections param\");\n    if (colls instanceof List) return (List<String>) colls;\n    return StrUtils.splitSmart(colls.toString(), \",\", true).stream()\n        .map(String::trim)\n        .collect(Collectors.toList());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["417142ff08fda9cf0b72d5133e63097a166c6458","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f2f5f46d1d0ebd4c0522e96d55ee60f0b57fbecc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["417142ff08fda9cf0b72d5133e63097a166c6458"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"],"417142ff08fda9cf0b72d5133e63097a166c6458":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f2f5f46d1d0ebd4c0522e96d55ee60f0b57fbecc"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f2f5f46d1d0ebd4c0522e96d55ee60f0b57fbecc","417142ff08fda9cf0b72d5133e63097a166c6458"],"f2f5f46d1d0ebd4c0522e96d55ee60f0b57fbecc":["417142ff08fda9cf0b72d5133e63097a166c6458"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"417142ff08fda9cf0b72d5133e63097a166c6458":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}