{"path":"modules/facet/src/java/org/apache/lucene/facet/index/params/DefaultFacetIndexingParams#equals(Object).mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/index/params/DefaultFacetIndexingParams#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  /* (non-Javadoc)\n   * @see java.lang.Object#equals(java.lang.Object)\n   */\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (!(obj instanceof DefaultFacetIndexingParams)) {\n      return false;\n    }\n    DefaultFacetIndexingParams other = (DefaultFacetIndexingParams) obj;\n    if (clpParams == null) {\n      if (other.clpParams != null) {\n        return false;\n      }\n    } else if (!clpParams.equals(other.clpParams)) {\n      return false;\n    }\n    if (ordinalPolicy == null) {\n      if (other.ordinalPolicy != null) {\n        return false;\n      }\n    } else if (!ordinalPolicy.equals(other.ordinalPolicy)) {\n      return false;\n    }\n    if (partitionSize != other.partitionSize) {\n      return false;\n    }\n    if (pathPolicy == null) {\n      if (other.pathPolicy != null) {\n        return false;\n      }\n    } else if (!pathPolicy.equals(other.pathPolicy)) {\n      return false;\n    }\n    \n    Iterable<CategoryListParams> cLs = getAllCategoryListParams();\n    Iterable<CategoryListParams> otherCLs = other.getAllCategoryListParams();\n    \n    return cLs.equals(otherCLs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/index/params/DefaultFacetIndexingParams#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  /* (non-Javadoc)\n   * @see java.lang.Object#equals(java.lang.Object)\n   */\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (!(obj instanceof DefaultFacetIndexingParams)) {\n      return false;\n    }\n    DefaultFacetIndexingParams other = (DefaultFacetIndexingParams) obj;\n    if (clpParams == null) {\n      if (other.clpParams != null) {\n        return false;\n      }\n    } else if (!clpParams.equals(other.clpParams)) {\n      return false;\n    }\n    if (ordinalPolicy == null) {\n      if (other.ordinalPolicy != null) {\n        return false;\n      }\n    } else if (!ordinalPolicy.equals(other.ordinalPolicy)) {\n      return false;\n    }\n    if (partitionSize != other.partitionSize) {\n      return false;\n    }\n    if (pathPolicy == null) {\n      if (other.pathPolicy != null) {\n        return false;\n      }\n    } else if (!pathPolicy.equals(other.pathPolicy)) {\n      return false;\n    }\n    \n    Iterable<CategoryListParams> cLs = getAllCategoryListParams();\n    Iterable<CategoryListParams> otherCLs = other.getAllCategoryListParams();\n    \n    return cLs.equals(otherCLs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/index/params/DefaultFacetIndexingParams#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  /* (non-Javadoc)\n   * @see java.lang.Object#equals(java.lang.Object)\n   */\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (!(obj instanceof DefaultFacetIndexingParams)) {\n      return false;\n    }\n    DefaultFacetIndexingParams other = (DefaultFacetIndexingParams) obj;\n    if (clpParams == null) {\n      if (other.clpParams != null) {\n        return false;\n      }\n    } else if (!clpParams.equals(other.clpParams)) {\n      return false;\n    }\n    if (ordinalPolicy == null) {\n      if (other.ordinalPolicy != null) {\n        return false;\n      }\n    } else if (!ordinalPolicy.equals(other.ordinalPolicy)) {\n      return false;\n    }\n    if (partitionSize != other.partitionSize) {\n      return false;\n    }\n    if (pathPolicy == null) {\n      if (other.pathPolicy != null) {\n        return false;\n      }\n    } else if (!pathPolicy.equals(other.pathPolicy)) {\n      return false;\n    }\n    \n    Iterable<CategoryListParams> cLs = getAllCategoryListParams();\n    Iterable<CategoryListParams> otherCLs = other.getAllCategoryListParams();\n    \n    return cLs.equals(otherCLs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/DefaultFacetIndexingParams#equals(Object).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/index/params/DefaultFacetIndexingParams#equals(Object).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see java.lang.Object#equals(java.lang.Object)\n   */\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (!(obj instanceof DefaultFacetIndexingParams)) {\n      return false;\n    }\n    DefaultFacetIndexingParams other = (DefaultFacetIndexingParams) obj;\n    if (clpParams == null) {\n      if (other.clpParams != null) {\n        return false;\n      }\n    } else if (!clpParams.equals(other.clpParams)) {\n      return false;\n    }\n    if (ordinalPolicy == null) {\n      if (other.ordinalPolicy != null) {\n        return false;\n      }\n    } else if (!ordinalPolicy.equals(other.ordinalPolicy)) {\n      return false;\n    }\n    if (partitionSize != other.partitionSize) {\n      return false;\n    }\n    if (pathPolicy == null) {\n      if (other.pathPolicy != null) {\n        return false;\n      }\n    } else if (!pathPolicy.equals(other.pathPolicy)) {\n      return false;\n    }\n    \n    Iterable<CategoryListParams> cLs = getAllCategoryListParams();\n    Iterable<CategoryListParams> otherCLs = other.getAllCategoryListParams();\n    \n    return cLs.equals(otherCLs);\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see java.lang.Object#equals(java.lang.Object)\n   */\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (!(obj instanceof DefaultFacetIndexingParams)) {\n      return false;\n    }\n    DefaultFacetIndexingParams other = (DefaultFacetIndexingParams) obj;\n    if (clpParams == null) {\n      if (other.clpParams != null) {\n        return false;\n      }\n    } else if (!clpParams.equals(other.clpParams)) {\n      return false;\n    }\n    if (ordinalPolicy == null) {\n      if (other.ordinalPolicy != null) {\n        return false;\n      }\n    } else if (!ordinalPolicy.equals(other.ordinalPolicy)) {\n      return false;\n    }\n    if (partitionSize != other.partitionSize) {\n      return false;\n    }\n    if (pathPolicy == null) {\n      if (other.pathPolicy != null) {\n        return false;\n      }\n    } else if (!pathPolicy.equals(other.pathPolicy)) {\n      return false;\n    }\n    \n    Iterable<CategoryListParams> cLs = getAllCategoryListParams();\n    Iterable<CategoryListParams> otherCLs = other.getAllCategoryListParams();\n    \n    return cLs.equals(otherCLs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}