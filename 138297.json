{"path":"solr/core/src/test/org/apache/solr/handler/tagger/XmlInterpolationTest#testLuceneHtmlFilterBehavior().mjava","commits":[{"id":"e091f281a6e026f8bb17aaf194efd0bbd3a7f549","date":1528221895,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/tagger/XmlInterpolationTest#testLuceneHtmlFilterBehavior().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLuceneHtmlFilterBehavior() {\n    String docText;\n\n    //Close tag adjacent to start & end results in end offset including the close tag. LUCENE-5734\n    docText = \"<doc><a><b>start</b> end</a></doc>\";\n    assertArrayEquals(tagExpect(docText, \"start\", \"end</a>\"), analyzeTagOne(docText, \"start\", \"end\"));\n\n    //Space after \"end\" means offset doesn't include </a>\n    docText = \"<doc><a><b>start</b> end </a></doc>\";\n    assertArrayEquals(tagExpect(docText, \"start\", \"end\"), analyzeTagOne(docText, \"start\", \"end\"));\n\n    //Matches entity at end\n    final String endStr = String.format(Locale.ROOT, \"en&#x%02x;\", (int) 'd');\n    docText = \"<doc>start \" + endStr + \"</doc>\";\n    assertArrayEquals(tagExpect(docText, \"start\", endStr), analyzeTagOne(docText, \"start\", \"end\"));\n    //... and at start\n    final String startStr = String.format(Locale.ROOT, \"&#x%02x;tart\", (int) 's');\n    docText = \"<doc>\" + startStr + \" end</doc>\";\n    assertArrayEquals(tagExpect(docText, startStr, \"end\"), analyzeTagOne(docText, \"start\", \"end\"));\n\n    //Test ignoring proc instructions & comments. Note: doesn't expand the entity to \"start\".\n    docText = \"<!DOCTYPE start [ \"\n            + \"<!ENTITY start \\\"start\\\">\"\n            + \"]><start><?start start ?><!-- start --><start/>&start;</start>\";\n    assertArrayEquals(new int[]{-1, -1}, analyzeTagOne(docText, \"start\", \"start\"));\n\n    //Test entity behavior\n    docText =                \" &mdash; &ndash; &amp; &foo; &#xA0; a&nbsp;b\";\n    assertArrayEquals(new String[]{\"—\", \"–\", \"&\", \"&foo;\", \"\\u00A0\", \"a\", \"b\"},\n            analyzeReturnTokens(docText));\n\n    //Observe offset adjustment of trailing entity to end tag\n    docText = \"foo&nbsp;bar\";\n    assertArrayEquals(tagExpect(docText, \"foo\", \"foo\"), analyzeTagOne(docText, \"foo\", \"foo\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/tagger/XmlInterpolationTest#testLuceneHtmlFilterBehavior().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLuceneHtmlFilterBehavior() {\n    String docText;\n\n    //Close tag adjacent to start & end results in end offset including the close tag. LUCENE-5734\n    docText = \"<doc><a><b>start</b> end</a></doc>\";\n    assertArrayEquals(tagExpect(docText, \"start\", \"end</a>\"), analyzeTagOne(docText, \"start\", \"end\"));\n\n    //Space after \"end\" means offset doesn't include </a>\n    docText = \"<doc><a><b>start</b> end </a></doc>\";\n    assertArrayEquals(tagExpect(docText, \"start\", \"end\"), analyzeTagOne(docText, \"start\", \"end\"));\n\n    //Matches entity at end\n    final String endStr = String.format(Locale.ROOT, \"en&#x%02x;\", (int) 'd');\n    docText = \"<doc>start \" + endStr + \"</doc>\";\n    assertArrayEquals(tagExpect(docText, \"start\", endStr), analyzeTagOne(docText, \"start\", \"end\"));\n    //... and at start\n    final String startStr = String.format(Locale.ROOT, \"&#x%02x;tart\", (int) 's');\n    docText = \"<doc>\" + startStr + \" end</doc>\";\n    assertArrayEquals(tagExpect(docText, startStr, \"end\"), analyzeTagOne(docText, \"start\", \"end\"));\n\n    //Test ignoring proc instructions & comments. Note: doesn't expand the entity to \"start\".\n    docText = \"<!DOCTYPE start [ \"\n            + \"<!ENTITY start \\\"start\\\">\"\n            + \"]><start><?start start ?><!-- start --><start/>&start;</start>\";\n    assertArrayEquals(new int[]{-1, -1}, analyzeTagOne(docText, \"start\", \"start\"));\n\n    //Test entity behavior\n    docText =                \" &mdash; &ndash; &amp; &foo; &#xA0; a&nbsp;b\";\n    assertArrayEquals(new String[]{\"—\", \"–\", \"&\", \"&foo;\", \"\\u00A0\", \"a\", \"b\"},\n            analyzeReturnTokens(docText));\n\n    //Observe offset adjustment of trailing entity to end tag\n    docText = \"foo&nbsp;bar\";\n    assertArrayEquals(tagExpect(docText, \"foo\", \"foo\"), analyzeTagOne(docText, \"foo\", \"foo\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/tagger/XmlInterpolationTest#testLuceneHtmlFilterBehavior().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLuceneHtmlFilterBehavior() {\n    String docText;\n\n    //Close tag adjacent to start & end results in end offset including the close tag. LUCENE-5734\n    docText = \"<doc><a><b>start</b> end</a></doc>\";\n    assertArrayEquals(tagExpect(docText, \"start\", \"end</a>\"), analyzeTagOne(docText, \"start\", \"end\"));\n\n    //Space after \"end\" means offset doesn't include </a>\n    docText = \"<doc><a><b>start</b> end </a></doc>\";\n    assertArrayEquals(tagExpect(docText, \"start\", \"end\"), analyzeTagOne(docText, \"start\", \"end\"));\n\n    //Matches entity at end\n    final String endStr = String.format(Locale.ROOT, \"en&#x%02x;\", (int) 'd');\n    docText = \"<doc>start \" + endStr + \"</doc>\";\n    assertArrayEquals(tagExpect(docText, \"start\", endStr), analyzeTagOne(docText, \"start\", \"end\"));\n    //... and at start\n    final String startStr = String.format(Locale.ROOT, \"&#x%02x;tart\", (int) 's');\n    docText = \"<doc>\" + startStr + \" end</doc>\";\n    assertArrayEquals(tagExpect(docText, startStr, \"end\"), analyzeTagOne(docText, \"start\", \"end\"));\n\n    //Test ignoring proc instructions & comments. Note: doesn't expand the entity to \"start\".\n    docText = \"<!DOCTYPE start [ \"\n            + \"<!ENTITY start \\\"start\\\">\"\n            + \"]><start><?start start ?><!-- start --><start/>&start;</start>\";\n    assertArrayEquals(new int[]{-1, -1}, analyzeTagOne(docText, \"start\", \"start\"));\n\n    //Test entity behavior\n    docText =                \" &mdash; &ndash; &amp; &foo; &#xA0; a&nbsp;b\";\n    assertArrayEquals(new String[]{\"—\", \"–\", \"&\", \"&foo;\", \"\\u00A0\", \"a\", \"b\"},\n            analyzeReturnTokens(docText));\n\n    //Observe offset adjustment of trailing entity to end tag\n    docText = \"foo&nbsp;bar\";\n    assertArrayEquals(tagExpect(docText, \"foo\", \"foo\"), analyzeTagOne(docText, \"foo\", \"foo\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"f592209545c71895260367152601e9200399776d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"e091f281a6e026f8bb17aaf194efd0bbd3a7f549":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e091f281a6e026f8bb17aaf194efd0bbd3a7f549"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"f592209545c71895260367152601e9200399776d":[],"e091f281a6e026f8bb17aaf194efd0bbd3a7f549":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}