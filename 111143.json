{"path":"lucene/core/src/java/org/apache/lucene/index/CoalescedDeletes#queriesIterable().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CoalescedDeletes#queriesIterable().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CoalescedDeletes#queriesIterable().mjava","sourceNew":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      \n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private final Iterator<Map.Entry<Query,Integer>> iter = queries.entrySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            final Map.Entry<Query,Integer> ent = iter.next();\n            return new QueryAndLimit(ent.getKey(), ent.getValue());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      \n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private final Iterator<Map.Entry<Query,Integer>> iter = queries.entrySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            final Map.Entry<Query,Integer> ent = iter.next();\n            return new QueryAndLimit(ent.getKey(), ent.getValue());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CoalescedUpdates#queriesIterable().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CoalescedDeletes#queriesIterable().mjava","sourceNew":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      \n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private final Iterator<Map.Entry<Query,Integer>> iter = queries.entrySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            final Map.Entry<Query,Integer> ent = iter.next();\n            return new QueryAndLimit(ent.getKey(), ent.getValue());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      \n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private final Iterator<Map.Entry<Query,Integer>> iter = queries.entrySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            final Map.Entry<Query,Integer> ent = iter.next();\n            return new QueryAndLimit(ent.getKey(), ent.getValue());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}