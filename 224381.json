{"path":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","commits":[{"id":"3a6fbf1484b3c2b38b75d59998de5fe4330b6b40","date":1478163495,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","pathOld":"/dev/null","sourceNew":"  protected void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n    writeArrayCloser();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","pathOld":"/dev/null","sourceNew":"  protected void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n    writeArrayCloser();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8294e494914210e0cac95f438b1096cd8351098e","date":1478184673,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","sourceNew":"  private void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n    writeArrayCloser();\n  }\n\n","sourceOld":"  protected void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n    writeArrayCloser();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c831be4b0baf55c2f2d13f40f0a50e9afa6f52f2","date":1478186610,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","sourceNew":"  private void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n    writeArrayCloser();\n  }\n\n","sourceOld":"  protected void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n    writeArrayCloser();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b90143dcb941cdeb74127110c9c2b5e92ad0daa4","date":1478290850,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","sourceNew":"  private void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n  }\n\n","sourceOld":"  private void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n    writeArrayCloser();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","sourceNew":"  private void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n  }\n\n","sourceOld":"  private void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n    writeArrayCloser();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"119f84a673d2ea32c0ec18c36987696dd31aa174","date":1528551316,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","sourceNew":null,"sourceOld":"  private void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","sourceNew":null,"sourceOld":"  private void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeJsonIter(Iterator).mjava","sourceNew":null,"sourceOld":"  private void writeJsonIter(Iterator val) throws IOException {\n    incLevel();\n    boolean first=true;\n    while( val.hasNext() ) {\n      if( !first ) indent();\n      writeVal(null, val.next());\n      if( val.hasNext() ) {\n        writeArraySeparator();\n      }\n      first=false;\n    }\n    decLevel();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c831be4b0baf55c2f2d13f40f0a50e9afa6f52f2":["9720b151fde2073f4e401450f4574e5f31c2d0ff","8294e494914210e0cac95f438b1096cd8351098e"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["b90143dcb941cdeb74127110c9c2b5e92ad0daa4","119f84a673d2ea32c0ec18c36987696dd31aa174"],"119f84a673d2ea32c0ec18c36987696dd31aa174":["b90143dcb941cdeb74127110c9c2b5e92ad0daa4"],"b90143dcb941cdeb74127110c9c2b5e92ad0daa4":["8294e494914210e0cac95f438b1096cd8351098e"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3a6fbf1484b3c2b38b75d59998de5fe4330b6b40"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["c831be4b0baf55c2f2d13f40f0a50e9afa6f52f2","b90143dcb941cdeb74127110c9c2b5e92ad0daa4"],"8294e494914210e0cac95f438b1096cd8351098e":["3a6fbf1484b3c2b38b75d59998de5fe4330b6b40"],"3a6fbf1484b3c2b38b75d59998de5fe4330b6b40":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["119f84a673d2ea32c0ec18c36987696dd31aa174"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["b90143dcb941cdeb74127110c9c2b5e92ad0daa4","119f84a673d2ea32c0ec18c36987696dd31aa174"]},"commit2Childs":{"c831be4b0baf55c2f2d13f40f0a50e9afa6f52f2":["199dfa410f1fdbfd3294106b04096cce5ed34b21"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"b90143dcb941cdeb74127110c9c2b5e92ad0daa4":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","119f84a673d2ea32c0ec18c36987696dd31aa174","199dfa410f1fdbfd3294106b04096cce5ed34b21","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"119f84a673d2ea32c0ec18c36987696dd31aa174":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["c831be4b0baf55c2f2d13f40f0a50e9afa6f52f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9720b151fde2073f4e401450f4574e5f31c2d0ff","3a6fbf1484b3c2b38b75d59998de5fe4330b6b40"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"8294e494914210e0cac95f438b1096cd8351098e":["c831be4b0baf55c2f2d13f40f0a50e9afa6f52f2","b90143dcb941cdeb74127110c9c2b5e92ad0daa4"],"3a6fbf1484b3c2b38b75d59998de5fe4330b6b40":["9720b151fde2073f4e401450f4574e5f31c2d0ff","8294e494914210e0cac95f438b1096cd8351098e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}