{"path":"src/java/org/apache/lucene/search/FilteredTermEnum#next().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FilteredTermEnum#next().mjava","pathOld":"/dev/null","sourceNew":"    /** Increments the enumeration to the next element.  True if one exists. */\n    public boolean next() throws IOException {\n        if (actualEnum == null) return false; // the actual enumerator is not initialized!\n        currentTerm = null;\n        while (currentTerm == null) {\n            if (endEnum()) return false;\n            if (actualEnum.next()) {\n                Term term = actualEnum.term();\n                if (termCompare(term)) {\n                    currentTerm = term;\n                    return true;\n                }\n            }\n            else return false;\n        }\n        currentTerm = null;\n        return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FilteredTermEnum#next().mjava","pathOld":"src/java/org/apache/lucene/search/FilteredTermEnum#next().mjava","sourceNew":"    /** Increments the enumeration to the next element.  True if one exists. */\n    @Override\n    public boolean next() throws IOException {\n        if (actualEnum == null) return false; // the actual enumerator is not initialized!\n        currentTerm = null;\n        while (currentTerm == null) {\n            if (endEnum()) return false;\n            if (actualEnum.next()) {\n                Term term = actualEnum.term();\n                if (termCompare(term)) {\n                    currentTerm = term;\n                    return true;\n                }\n            }\n            else return false;\n        }\n        currentTerm = null;\n        return false;\n    }\n\n","sourceOld":"    /** Increments the enumeration to the next element.  True if one exists. */\n    public boolean next() throws IOException {\n        if (actualEnum == null) return false; // the actual enumerator is not initialized!\n        currentTerm = null;\n        while (currentTerm == null) {\n            if (endEnum()) return false;\n            if (actualEnum.next()) {\n                Term term = actualEnum.term();\n                if (termCompare(term)) {\n                    currentTerm = term;\n                    return true;\n                }\n            }\n            else return false;\n        }\n        currentTerm = null;\n        return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FilteredTermEnum#next().mjava","pathOld":"src/java/org/apache/lucene/search/FilteredTermEnum#next().mjava","sourceNew":"    /** Increments the enumeration to the next element.  True if one exists. */\n    @Override\n    public boolean next() throws IOException {\n        if (actualEnum == null) return false; // the actual enumerator is not initialized!\n        currentTerm = null;\n        while (currentTerm == null) {\n            if (endEnum()) return false;\n            if (actualEnum.next()) {\n                Term term = actualEnum.term();\n                if (termCompare(term)) {\n                    currentTerm = term;\n                    return true;\n                }\n            }\n            else return false;\n        }\n        currentTerm = null;\n        return false;\n    }\n\n","sourceOld":"    /** Increments the enumeration to the next element.  True if one exists. */\n    @Override\n    public boolean next() throws IOException {\n        if (actualEnum == null) return false; // the actual enumerator is not initialized!\n        currentTerm = null;\n        while (currentTerm == null) {\n            if (endEnum()) return false;\n            if (actualEnum.next()) {\n                Term term = actualEnum.term();\n                if (termCompare(term)) {\n                    currentTerm = term;\n                    return true;\n                }\n            }\n            else return false;\n        }\n        currentTerm = null;\n        return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["8a9e385641d717e641408d8fbbc62be8fc766357"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}