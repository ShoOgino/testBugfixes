{"path":"src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","commits":[{"id":"80c633e661becbcb6deb6ea2ef4588d230102f50","date":1234308117,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    assertEquals(1l, core.getSearcher().get().getReader().numDocs());\n    factory.setEnabled(false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","pathOld":"src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","sourceNew":"  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    assertEquals(1l, core.getSearcher().get().getReader().numDocs());\n    factory.setEnabled(false);\n  }\n\n","sourceOld":"  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    assertEquals(1l, core.getSearcher().get().getReader().numDocs());\n    factory.setEnabled(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["80c633e661becbcb6deb6ea2ef4588d230102f50"],"80c633e661becbcb6deb6ea2ef4588d230102f50":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["80c633e661becbcb6deb6ea2ef4588d230102f50"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"80c633e661becbcb6deb6ea2ef4588d230102f50":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}