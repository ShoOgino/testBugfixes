{"path":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","sourceNew":"  public BitSet randBitSet(int sz, int numBitsToSet) {\n    BitSet set = new BitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random.nextInt(sz));\n    }\n    return set;\n  }\n\n","sourceOld":"  public BitSet randBitSet(int sz, int numBitsToSet) {\n    BitSet set = new BitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random.nextInt(sz));\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","sourceNew":"  public BitSet randBitSet(int sz, int numBitsToSet) {\n    BitSet set = new BitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random().nextInt(sz));\n    }\n    return set;\n  }\n\n","sourceOld":"  public BitSet randBitSet(int sz, int numBitsToSet) {\n    BitSet set = new BitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random.nextInt(sz));\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","sourceNew":"  public BitSet randBitSet(int sz, int numBitsToSet) {\n    BitSet set = new BitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random().nextInt(sz));\n    }\n    return set;\n  }\n\n","sourceOld":"  public BitSet randBitSet(int sz, int numBitsToSet) {\n    BitSet set = new BitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random().nextInt(sz));\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","sourceNew":"  public BitSet randBitSet(int sz, int numBitsToSet) {\n    BitSet set = new BitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random().nextInt(sz));\n    }\n    return set;\n  }\n\n","sourceOld":"  public BitSet randBitSet(int sz, int numBitsToSet) {\n    BitSet set = new BitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random().nextInt(sz));\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8","date":1412674810,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","sourceNew":"  public FixedBitSet randBitSet(int sz, int numBitsToSet) {\n    FixedBitSet set = new FixedBitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random().nextInt(sz));\n    }\n    return set;\n  }\n\n","sourceOld":"  public BitSet randBitSet(int sz, int numBitsToSet) {\n    BitSet set = new BitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random().nextInt(sz));\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#randBitSet(int,int).mjava","sourceNew":"  public FixedBitSet randBitSet(int sz, int numBitsToSet) {\n    FixedBitSet set = new FixedBitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random().nextInt(sz));\n    }\n    return set;\n  }\n\n","sourceOld":"  public BitSet randBitSet(int sz, int numBitsToSet) {\n    BitSet set = new BitSet(sz);\n    for (int i=0; i<numBitsToSet; i++) {\n      set.set(random().nextInt(sz));\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55980207f1977bd1463465de1659b821347e2fa8":["19275ba31e621f6da1b83bf13af75233876fd3d4","0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8"],"0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8"]},"commit2Childs":{"55980207f1977bd1463465de1659b821347e2fa8":[],"0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["55980207f1977bd1463465de1659b821347e2fa8","0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}