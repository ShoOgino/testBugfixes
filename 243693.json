{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(Map[String,String],String).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(Map[String,String],String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","sourceNew":"  /**\n   * Compiles a pattern for the value of the specified argument key <code>name</code> \n   */\n  protected final Pattern getPattern(Map<String,String> args, String name) {\n    try {\n      String pat = args.remove(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(pat);\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Compiles a pattern for the value of the specified argument key <code>name</code> \n   */\n  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcae30df9fe9300569835aef42ec65802c7c0afb","date":1364859933,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(Map[String,String],String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(Map[String,String],String).mjava","sourceNew":"  /**\n   * Compiles a pattern for the value of the specified argument key <code>name</code> \n   */\n  protected final Pattern getPattern(Map<String,String> args, String name) {\n    try {\n      return Pattern.compile(require(args, name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Compiles a pattern for the value of the specified argument key <code>name</code> \n   */\n  protected final Pattern getPattern(Map<String,String> args, String name) {\n    try {\n      String pat = args.remove(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(pat);\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":5,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/AbstractAnalysisFactory#getPattern(Map[String,String],String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(Map[String,String],String).mjava","sourceNew":"  /**\n   * Compiles a pattern for the value of the specified argument key <code>name</code> \n   */\n  protected final Pattern getPattern(Map<String,String> args, String name) {\n    try {\n      return Pattern.compile(require(args, name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Compiles a pattern for the value of the specified argument key <code>name</code> \n   */\n  protected final Pattern getPattern(Map<String,String> args, String name) {\n    try {\n      return Pattern.compile(require(args, name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dcae30df9fe9300569835aef42ec65802c7c0afb":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"dcae30df9fe9300569835aef42ec65802c7c0afb":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}