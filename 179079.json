{"path":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectory#useWriteCache(String,IOContext).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectory#useWriteCache(String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Determine whether write caching should be used for a particular\n   * file/context.\n   */\n  boolean useWriteCache(String name, IOContext context) {\n    if (!blockCacheWriteEnabled) {\n      return false;\n    }\n    if (blockCacheFileTypes != null && !isCachableFile(name)) {\n      return false;\n    }\n    switch (context.context) {\n      case MERGE: {\n        // we currently don't cache any merge context writes\n        return false;\n      }\n      default: {\n        return true;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectory#useWriteCache(String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Determine whether write caching should be used for a particular\n   * file/context.\n   */\n  boolean useWriteCache(String name, IOContext context) {\n    if (!blockCacheWriteEnabled) {\n      return false;\n    }\n    if (blockCacheFileTypes != null && !isCachableFile(name)) {\n      return false;\n    }\n    switch (context.context) {\n      case MERGE: {\n        // we currently don't cache any merge context writes\n        return false;\n      }\n      default: {\n        return true;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46e4a8bdfbafda795ef9c39a2bc2d47095770299","date":1410411846,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectory#useWriteCache(String,IOContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectory#useWriteCache(String,IOContext).mjava","sourceNew":"  /**\n   * Determine whether write caching should be used for a particular\n   * file/context.\n   */\n  boolean useWriteCache(String name, IOContext context) {\n    if (!blockCacheWriteEnabled || name.startsWith(IndexFileNames.PENDING_SEGMENTS)) {\n      // for safety, don't bother caching pending commits.\n      // the cache does support renaming (renameCacheFile), but thats a scary optimization.\n      return false;\n    }\n    if (blockCacheFileTypes != null && !isCachableFile(name)) {\n      return false;\n    }\n    switch (context.context) {\n      case MERGE: {\n        // we currently don't cache any merge context writes\n        return false;\n      }\n      default: {\n        return true;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Determine whether write caching should be used for a particular\n   * file/context.\n   */\n  boolean useWriteCache(String name, IOContext context) {\n    if (!blockCacheWriteEnabled) {\n      return false;\n    }\n    if (blockCacheFileTypes != null && !isCachableFile(name)) {\n      return false;\n    }\n    switch (context.context) {\n      case MERGE: {\n        // we currently don't cache any merge context writes\n        return false;\n      }\n      default: {\n        return true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["46e4a8bdfbafda795ef9c39a2bc2d47095770299"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["46e4a8bdfbafda795ef9c39a2bc2d47095770299","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}