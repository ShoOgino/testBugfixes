{"path":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","pathOld":"solr/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","sourceNew":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin)\n   * @param l The Locale used for rounding (to determine when weeks begin)\n   * @see Calendar#getInstance(TimeZone,Locale)\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    zone = tz;\n    loc = l;\n  }\n\n","sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin)\n   * @param l The Locale used for rounding (to determine when weeks begin)\n   * @see Calendar#getInstance(TimeZone,Locale)\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    zone = tz;\n    loc = l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","pathOld":"solr/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","sourceNew":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin)\n   * @param l The Locale used for rounding (to determine when weeks begin)\n   * @see Calendar#getInstance(TimeZone,Locale)\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    zone = tz;\n    loc = l;\n  }\n\n","sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin)\n   * @param l The Locale used for rounding (to determine when weeks begin)\n   * @see Calendar#getInstance(TimeZone,Locale)\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    zone = tz;\n    loc = l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","pathOld":"solr/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","sourceNew":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin)\n   * @param l The Locale used for rounding (to determine when weeks begin)\n   * @see Calendar#getInstance(TimeZone,Locale)\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    zone = tz;\n    loc = l;\n  }\n\n","sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin)\n   * @param l The Locale used for rounding (to determine when weeks begin)\n   * @see Calendar#getInstance(TimeZone,Locale)\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    zone = tz;\n    loc = l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3c7501e15f71c01b69ba22749b192827fa2019b","date":1335285341,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","sourceNew":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults to the value dicated by the SolrRequestInfo if it \n   * exists -- otherwise it uses UTC.\n   * @param l The Locale used for rounding (to determine when weeks begin).  If null, then this method defaults to en_US.\n   * @see #DEFAULT_MATH_TZ\n   * @see #DEFAULT_MATH_LOCALE\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    loc = (null != l) ? l : DEFAULT_MATH_LOCALE;\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin)\n   * @param l The Locale used for rounding (to determine when weeks begin)\n   * @see Calendar#getInstance(TimeZone,Locale)\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    zone = tz;\n    loc = l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","date":1463148204,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","sourceNew":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults\n   *           to the value dictated by the SolrRequestInfo if it exists -- otherwise it uses UTC.\n   * @see #DEFAULT_MATH_TZ\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz) {\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults to the value dicated by the SolrRequestInfo if it \n   * exists -- otherwise it uses UTC.\n   * @param l The Locale used for rounding (to determine when weeks begin).  If null, then this method defaults to en_US.\n   * @see #DEFAULT_MATH_TZ\n   * @see #DEFAULT_MATH_LOCALE\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    loc = (null != l) ? l : DEFAULT_MATH_LOCALE;\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","sourceNew":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults\n   *           to the value dictated by the SolrRequestInfo if it exists -- otherwise it uses UTC.\n   * @see #DEFAULT_MATH_TZ\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz) {\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults to the value dicated by the SolrRequestInfo if it \n   * exists -- otherwise it uses UTC.\n   * @param l The Locale used for rounding (to determine when weeks begin).  If null, then this method defaults to en_US.\n   * @see #DEFAULT_MATH_TZ\n   * @see #DEFAULT_MATH_LOCALE\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    loc = (null != l) ? l : DEFAULT_MATH_LOCALE;\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","sourceNew":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults\n   *           to the value dictated by the SolrRequestInfo if it exists -- otherwise it uses UTC.\n   * @see #DEFAULT_MATH_TZ\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz) {\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults to the value dicated by the SolrRequestInfo if it \n   * exists -- otherwise it uses UTC.\n   * @param l The Locale used for rounding (to determine when weeks begin).  If null, then this method defaults to en_US.\n   * @see #DEFAULT_MATH_TZ\n   * @see #DEFAULT_MATH_LOCALE\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    loc = (null != l) ? l : DEFAULT_MATH_LOCALE;\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#DateMathParser(TimeZone,Locale).mjava","sourceNew":null,"sourceOld":"  /**\n   * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults to the value dicated by the SolrRequestInfo if it \n   * exists -- otherwise it uses UTC.\n   * @param l The Locale used for rounding (to determine when weeks begin).  If null, then this method defaults to en_US.\n   * @see #DEFAULT_MATH_TZ\n   * @see #DEFAULT_MATH_LOCALE\n   * @see Calendar#getInstance(TimeZone,Locale)\n   * @see SolrRequestInfo#getClientTimeZone\n   */\n  public DateMathParser(TimeZone tz, Locale l) {\n    loc = (null != l) ? l : DEFAULT_MATH_LOCALE;\n    if (null == tz) {\n      SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n      tz = (null != reqInfo) ? reqInfo.getClientTimeZone() : DEFAULT_MATH_TZ;\n    }\n    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["b3c7501e15f71c01b69ba22749b192827fa2019b"],"b3c7501e15f71c01b69ba22749b192827fa2019b":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["b3c7501e15f71c01b69ba22749b192827fa2019b","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b3c7501e15f71c01b69ba22749b192827fa2019b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["b3c7501e15f71c01b69ba22749b192827fa2019b","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["0ad30c6a479e764150a3316e57263319775f1df2"],"b3c7501e15f71c01b69ba22749b192827fa2019b":["ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["b3c7501e15f71c01b69ba22749b192827fa2019b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}