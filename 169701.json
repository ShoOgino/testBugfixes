{"path":"lucene/core/src/java/org/apache/lucene/document/FieldType#setNumericType(NumericType).mjava","commits":[{"id":"a78a90fc9701e511308346ea29f4f5e548bb39fe","date":1329489995,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FieldType#setNumericType(NumericType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FieldType#setNumericType(NumericField.DataType).mjava","sourceNew":"  public void setNumericType(NumericType type) {\n    checkIfFrozen();\n    numericType = type;\n  }\n\n","sourceOld":"  public void setNumericType(NumericField.DataType type) {\n    checkIfFrozen();\n    numericType = type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1ff81e8564552b996fd24bd03343ddd1548e8a5","date":1346104767,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FieldType#setNumericType(NumericType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FieldType#setNumericType(NumericType).mjava","sourceNew":"  /**\n   * Specifies the field's numeric type.\n   * @see #numericType()\n   */\n  public void setNumericType(NumericType type) {\n    checkIfFrozen();\n    numericType = type;\n  }\n\n","sourceOld":"  public void setNumericType(NumericType type) {\n    checkIfFrozen();\n    numericType = type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d","date":1346337224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FieldType#setNumericType(NumericType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FieldType#setNumericType(NumericType).mjava","sourceNew":"  /**\n   * Specifies the field's numeric type.\n   * @param type numeric type, or null if the field has no numeric type.\n   * @throws IllegalStateException if this FieldType is frozen against\n   *         future modifications.\n   * @see #numericType()\n   */\n  public void setNumericType(NumericType type) {\n    checkIfFrozen();\n    numericType = type;\n  }\n\n","sourceOld":"  /**\n   * Specifies the field's numeric type.\n   * @see #numericType()\n   */\n  public void setNumericType(NumericType type) {\n    checkIfFrozen();\n    numericType = type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FieldType#setNumericType(NumericType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FieldType#setNumericType(NumericType).mjava","sourceNew":"  /**\n   * Specifies the field's numeric type.\n   * @param type numeric type, or null if the field has no numeric type.\n   * @throws IllegalStateException if this FieldType is frozen against\n   *         future modifications.\n   * @see #numericType()\n   */\n  public void setNumericType(NumericType type) {\n    checkIfFrozen();\n    numericType = type;\n  }\n\n","sourceOld":"  public void setNumericType(NumericType type) {\n    checkIfFrozen();\n    numericType = type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FieldType#setNumericType(LegacyNumericType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FieldType#setNumericType(NumericType).mjava","sourceNew":"  /**\n   * Specifies the field's numeric type.\n   * @param type numeric type, or null if the field has no numeric type.\n   * @throws IllegalStateException if this FieldType is frozen against\n   *         future modifications.\n   * @see #numericType()\n   */\n  public void setNumericType(LegacyNumericType type) {\n    checkIfFrozen();\n    numericType = type;\n  }\n\n","sourceOld":"  /**\n   * Specifies the field's numeric type.\n   * @param type numeric type, or null if the field has no numeric type.\n   * @throws IllegalStateException if this FieldType is frozen against\n   *         future modifications.\n   * @see #numericType()\n   */\n  public void setNumericType(NumericType type) {\n    checkIfFrozen();\n    numericType = type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a78a90fc9701e511308346ea29f4f5e548bb39fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f1ff81e8564552b996fd24bd03343ddd1548e8a5":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["a78a90fc9701e511308346ea29f4f5e548bb39fe","6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"770342641f7b505eaa8dccdc666158bff2419109":["6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d":["f1ff81e8564552b996fd24bd03343ddd1548e8a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"a78a90fc9701e511308346ea29f4f5e548bb39fe":["f1ff81e8564552b996fd24bd03343ddd1548e8a5","05a14b2611ead08655a2b2bdc61632eb31316e57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"f1ff81e8564552b996fd24bd03343ddd1548e8a5":["6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d":["05a14b2611ead08655a2b2bdc61632eb31316e57","770342641f7b505eaa8dccdc666158bff2419109"],"770342641f7b505eaa8dccdc666158bff2419109":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}