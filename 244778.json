{"path":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#updateFreq().mjava","commits":[{"id":"251e6911800e3a02e1da3bfd4dc49a914aef9778","date":1423063783,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#updateFreq().mjava","pathOld":"/dev/null","sourceNew":"  /** Advance all entries from the tail to know about all matches on the\n   *  current doc. */\n  private void updateFreq() throws IOException {\n    assert freq >= minShouldMatch;\n    // we return the next doc when there are minShouldMatch matching clauses\n    // but some of the clauses in 'tail' might match as well\n    // in general we want to advance least-costly clauses first in order to\n    // skip over non-matching documents as fast as possible. However here,\n    // we are advancing everything anyway so iterating over clauses in\n    // (roughly) cost-descending order might help avoid some permutations in\n    // the head heap\n    for (int i = tailSize - 1; i >= 0; --i) {\n      advanceTail(tail[i]);\n    }\n    tailSize = 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"251e6911800e3a02e1da3bfd4dc49a914aef9778":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["251e6911800e3a02e1da3bfd4dc49a914aef9778"]},"commit2Childs":{"251e6911800e3a02e1da3bfd4dc49a914aef9778":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["251e6911800e3a02e1da3bfd4dc49a914aef9778"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}