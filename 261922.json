{"path":"lucene/src/java/org/apache/lucene/search/Similarity#sloppyFreq(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Similarity#sloppyFreq(int).mjava","pathOld":"src/java/org/apache/lucene/search/Similarity#sloppyFreq(int).mjava","sourceNew":"  /** Computes the amount of a sloppy phrase match, based on an edit distance.\n   * This value is summed for each sloppy phrase match in a document to form\n   * the frequency that is passed to {@link #tf(float)}.\n   *\n   * <p>A phrase match with a small edit distance to a document passage more\n   * closely matches the document, so implementations of this method usually\n   * return larger values when the edit distance is small and smaller values\n   * when it is large.\n   *\n   * @see PhraseQuery#setSlop(int)\n   * @param distance the edit distance of this sloppy phrase match\n   * @return the frequency increment for this match\n   */\n  public abstract float sloppyFreq(int distance);\n\n","sourceOld":"  /** Computes the amount of a sloppy phrase match, based on an edit distance.\n   * This value is summed for each sloppy phrase match in a document to form\n   * the frequency that is passed to {@link #tf(float)}.\n   *\n   * <p>A phrase match with a small edit distance to a document passage more\n   * closely matches the document, so implementations of this method usually\n   * return larger values when the edit distance is small and smaller values\n   * when it is large.\n   *\n   * @see PhraseQuery#setSlop(int)\n   * @param distance the edit distance of this sloppy phrase match\n   * @return the frequency increment for this match\n   */\n  public abstract float sloppyFreq(int distance);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Similarity#sloppyFreq(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#sloppyFreq(int).mjava","sourceNew":"  /** Computes the amount of a sloppy phrase match, based on an edit distance.\n   * This value is summed for each sloppy phrase match in a document to form\n   * the frequency to be used in scoring instead of the exact term count.\n   *\n   * <p>A phrase match with a small edit distance to a document passage more\n   * closely matches the document, so implementations of this method usually\n   * return larger values when the edit distance is small and smaller values\n   * when it is large.\n   *\n   * @see PhraseQuery#setSlop(int)\n   * @param distance the edit distance of this sloppy phrase match\n   * @return the frequency increment for this match\n   */\n  public abstract float sloppyFreq(int distance);\n\n","sourceOld":"  /** Computes the amount of a sloppy phrase match, based on an edit distance.\n   * This value is summed for each sloppy phrase match in a document to form\n   * the frequency that is passed to {@link #tf(float)}.\n   *\n   * <p>A phrase match with a small edit distance to a document passage more\n   * closely matches the document, so implementations of this method usually\n   * return larger values when the edit distance is small and smaller values\n   * when it is large.\n   *\n   * @see PhraseQuery#setSlop(int)\n   * @param distance the edit distance of this sloppy phrase match\n   * @return the frequency increment for this match\n   */\n  public abstract float sloppyFreq(int distance);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/Similarity#sloppyFreq(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#sloppyFreq(int).mjava","sourceNew":"  /** Computes the amount of a sloppy phrase match, based on an edit distance.\n   * This value is summed for each sloppy phrase match in a document to form\n   * the frequency to be used in scoring instead of the exact term count.\n   *\n   * <p>A phrase match with a small edit distance to a document passage more\n   * closely matches the document, so implementations of this method usually\n   * return larger values when the edit distance is small and smaller values\n   * when it is large.\n   *\n   * @see PhraseQuery#setSlop(int)\n   * @param distance the edit distance of this sloppy phrase match\n   * @return the frequency increment for this match\n   */\n  public abstract float sloppyFreq(int distance);\n\n","sourceOld":"  /** Computes the amount of a sloppy phrase match, based on an edit distance.\n   * This value is summed for each sloppy phrase match in a document to form\n   * the frequency that is passed to {@link #tf(float)}.\n   *\n   * <p>A phrase match with a small edit distance to a document passage more\n   * closely matches the document, so implementations of this method usually\n   * return larger values when the edit distance is small and smaller values\n   * when it is large.\n   *\n   * @see PhraseQuery#setSlop(int)\n   * @param distance the edit distance of this sloppy phrase match\n   * @return the frequency increment for this match\n   */\n  public abstract float sloppyFreq(int distance);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/Similarity#sloppyFreq(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#sloppyFreq(int).mjava","sourceNew":"  /** Computes the amount of a sloppy phrase match, based on an edit distance.\n   * This value is summed for each sloppy phrase match in a document to form\n   * the frequency to be used in scoring instead of the exact term count.\n   *\n   * <p>A phrase match with a small edit distance to a document passage more\n   * closely matches the document, so implementations of this method usually\n   * return larger values when the edit distance is small and smaller values\n   * when it is large.\n   *\n   * @see PhraseQuery#setSlop(int)\n   * @param distance the edit distance of this sloppy phrase match\n   * @return the frequency increment for this match\n   */\n  public abstract float sloppyFreq(int distance);\n\n","sourceOld":"  /** Computes the amount of a sloppy phrase match, based on an edit distance.\n   * This value is summed for each sloppy phrase match in a document to form\n   * the frequency that is passed to {@link #tf(float)}.\n   *\n   * <p>A phrase match with a small edit distance to a document passage more\n   * closely matches the document, so implementations of this method usually\n   * return larger values when the edit distance is small and smaller values\n   * when it is large.\n   *\n   * @see PhraseQuery#setSlop(int)\n   * @param distance the edit distance of this sloppy phrase match\n   * @return the frequency increment for this match\n   */\n  public abstract float sloppyFreq(int distance);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0952c55e47c70ea2d8c8e2b634da066f9bde4e38","date":1310506639,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#sloppyFreq(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#sloppyFreq(int).mjava","sourceNew":"  /** Computes the amount of a sloppy phrase match, based on an edit distance.\n   * This value is summed for each sloppy phrase match in a document to form\n   * the frequency to be used in scoring instead of the exact term count.\n   *\n   * <p>A phrase match with a small edit distance to a document passage more\n   * closely matches the document, so implementations of this method usually\n   * return larger values when the edit distance is small and smaller values\n   * when it is large.\n   *\n   * @see PhraseQuery#setSlop(int)\n   * @param distance the edit distance of this sloppy phrase match\n   * @return the frequency increment for this match\n   */\n  public abstract float sloppyFreq(int distance);\n\n","sourceOld":"  /** Computes the amount of a sloppy phrase match, based on an edit distance.\n   * This value is summed for each sloppy phrase match in a document to form\n   * the frequency to be used in scoring instead of the exact term count.\n   *\n   * <p>A phrase match with a small edit distance to a document passage more\n   * closely matches the document, so implementations of this method usually\n   * return larger values when the edit distance is small and smaller values\n   * when it is large.\n   *\n   * @see PhraseQuery#setSlop(int)\n   * @param distance the edit distance of this sloppy phrase match\n   * @return the frequency increment for this match\n   */\n  public abstract float sloppyFreq(int distance);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["9454a6510e2db155fb01faa5c049b06ece95fab9","0f3cee3d20b0c786e6fca20539454262e29edcab"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["9454a6510e2db155fb01faa5c049b06ece95fab9","0f3cee3d20b0c786e6fca20539454262e29edcab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0952c55e47c70ea2d8c8e2b634da066f9bde4e38":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0952c55e47c70ea2d8c8e2b634da066f9bde4e38"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":[],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","0952c55e47c70ea2d8c8e2b634da066f9bde4e38"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0952c55e47c70ea2d8c8e2b634da066f9bde4e38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1291e4568eb7d9463d751627596ef14baf4c1603","0f3cee3d20b0c786e6fca20539454262e29edcab","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}