{"path":"src/java/org/apache/lucene/analysis/SinkTokenizer#getTokens().mjava","commits":[{"id":"4c0e82525d61a2be6ba5d29eb5048c7d39ee1ad5","date":1196349488,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/SinkTokenizer#getTokens().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * only valid if tokens have not been consumed,\n   * i.e. if this tokenizer is not part of another tokenstream\n   *\n   * @return A List of {@link org.apache.lucene.analysis.Token}s\n   */\n  public List/*<Token>*/ getTokens() {\n    return lst;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62edeaca980071f34a1d66b16fe7f6afed205327","date":1196433510,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/SinkTokenizer#getTokens().mjava","pathOld":"src/java/org/apache/lucene/analysis/SinkTokenizer#getTokens().mjava","sourceNew":"  /**\n   * Get the tokens in the internal List.\n   * <p/>\n   * WARNING: Adding tokens to this list requires the {@link #reset()} method to be called in order for them\n   * to be made available.  Also, this Tokenizer does nothing to protect against {@link java.util.ConcurrentModificationException}s\n   * in the case of adds happening while {@link #next(org.apache.lucene.analysis.Token)} is being called.\n   *\n   * @return A List of {@link org.apache.lucene.analysis.Token}s\n   */\n  public List/*<Token>*/ getTokens() {\n    return lst;\n  }\n\n","sourceOld":"  /**\n   * only valid if tokens have not been consumed,\n   * i.e. if this tokenizer is not part of another tokenstream\n   *\n   * @return A List of {@link org.apache.lucene.analysis.Token}s\n   */\n  public List/*<Token>*/ getTokens() {\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/SinkTokenizer#getTokens().mjava","pathOld":"src/java/org/apache/lucene/analysis/SinkTokenizer#getTokens().mjava","sourceNew":"  /**\n   * Get the tokens in the internal List.\n   * <p/>\n   * WARNING: Adding tokens to this list requires the {@link #reset()} method to be called in order for them\n   * to be made available.  Also, this Tokenizer does nothing to protect against {@link java.util.ConcurrentModificationException}s\n   * in the case of adds happening while {@link #next(org.apache.lucene.analysis.Token)} is being called.\n   * <p/>\n   * WARNING: Since this SinkTokenizer can be reset and the cached tokens made available again, do not modify them. Modify clones instead.\n   *\n   * @return A List of {@link org.apache.lucene.analysis.Token}s\n   */\n  public List/*<Token>*/ getTokens() {\n    return lst;\n  }\n\n","sourceOld":"  /**\n   * Get the tokens in the internal List.\n   * <p/>\n   * WARNING: Adding tokens to this list requires the {@link #reset()} method to be called in order for them\n   * to be made available.  Also, this Tokenizer does nothing to protect against {@link java.util.ConcurrentModificationException}s\n   * in the case of adds happening while {@link #next(org.apache.lucene.analysis.Token)} is being called.\n   *\n   * @return A List of {@link org.apache.lucene.analysis.Token}s\n   */\n  public List/*<Token>*/ getTokens() {\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"439b0fe2f799d1c722151e88e32bdefad8d34ebe","date":1255282509,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/SinkTokenizer#getTokens().mjava","sourceNew":null,"sourceOld":"  /**\n   * Get the tokens in the internal List.\n   * <p/>\n   * WARNING: Adding tokens to this list requires the {@link #reset()} method to be called in order for them\n   * to be made available.  Also, this Tokenizer does nothing to protect against {@link java.util.ConcurrentModificationException}s\n   * in the case of adds happening while {@link #next(org.apache.lucene.analysis.Token)} is being called.\n   * <p/>\n   * WARNING: Since this SinkTokenizer can be reset and the cached tokens made available again, do not modify them. Modify clones instead.\n   *\n   * @return A List of {@link org.apache.lucene.analysis.Token}s\n   */\n  public List/*<Token>*/ getTokens() {\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["62edeaca980071f34a1d66b16fe7f6afed205327"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"62edeaca980071f34a1d66b16fe7f6afed205327":["4c0e82525d61a2be6ba5d29eb5048c7d39ee1ad5"],"4c0e82525d61a2be6ba5d29eb5048c7d39ee1ad5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"439b0fe2f799d1c722151e88e32bdefad8d34ebe":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["439b0fe2f799d1c722151e88e32bdefad8d34ebe"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["439b0fe2f799d1c722151e88e32bdefad8d34ebe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c0e82525d61a2be6ba5d29eb5048c7d39ee1ad5"],"62edeaca980071f34a1d66b16fe7f6afed205327":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"4c0e82525d61a2be6ba5d29eb5048c7d39ee1ad5":["62edeaca980071f34a1d66b16fe7f6afed205327"],"439b0fe2f799d1c722151e88e32bdefad8d34ebe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}