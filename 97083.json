{"path":"src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#newTerm(Token,RawPostingList).mjava","commits":[{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#newTerm(Token,RawPostingList).mjava","pathOld":"/dev/null","sourceNew":"  final void newTerm(Token t, RawPostingList p0) {\n    // First time we're seeing this term since the last\n    // flush\n    assert docState.testPoint(\"FreqProxTermsWriterPerField.newTerm start\");\n    FreqProxTermsWriter.PostingList p = (FreqProxTermsWriter.PostingList) p0;\n    p.lastDocCode = docState.docID << 1;\n    p.lastDocID = docState.docID;\n    p.docFreq = 1;\n    writeProx(t, p, fieldState.position);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"902ba79f4590a41c663c447756d2e5041cbbdda9","date":1217956662,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#newTerm(Token,RawPostingList).mjava","pathOld":"src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#newTerm(Token,RawPostingList).mjava","sourceNew":"  final void newTerm(Token t, RawPostingList p0) {\n    // First time we're seeing this term since the last\n    // flush\n    assert docState.testPoint(\"FreqProxTermsWriterPerField.newTerm start\");\n    FreqProxTermsWriter.PostingList p = (FreqProxTermsWriter.PostingList) p0;\n    p.lastDocID = docState.docID;\n    if (omitTf) {\n      p.lastDocCode = docState.docID;\n    } else {\n      p.lastDocCode = docState.docID << 1;\n      p.docFreq = 1;\n      writeProx(t, p, fieldState.position);\n    }\n  }\n\n","sourceOld":"  final void newTerm(Token t, RawPostingList p0) {\n    // First time we're seeing this term since the last\n    // flush\n    assert docState.testPoint(\"FreqProxTermsWriterPerField.newTerm start\");\n    FreqProxTermsWriter.PostingList p = (FreqProxTermsWriter.PostingList) p0;\n    p.lastDocCode = docState.docID << 1;\n    p.lastDocID = docState.docID;\n    p.docFreq = 1;\n    writeProx(t, p, fieldState.position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#newTerm(RawPostingList).mjava","pathOld":"src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#newTerm(Token,RawPostingList).mjava","sourceNew":"  final void newTerm(RawPostingList p0) {\n    // First time we're seeing this term since the last\n    // flush\n    assert docState.testPoint(\"FreqProxTermsWriterPerField.newTerm start\");\n    FreqProxTermsWriter.PostingList p = (FreqProxTermsWriter.PostingList) p0;\n    p.lastDocID = docState.docID;\n    if (omitTf) {\n      p.lastDocCode = docState.docID;\n    } else {\n      p.lastDocCode = docState.docID << 1;\n      p.docFreq = 1;\n      writeProx(p, fieldState.position);\n    }\n  }\n\n","sourceOld":"  final void newTerm(Token t, RawPostingList p0) {\n    // First time we're seeing this term since the last\n    // flush\n    assert docState.testPoint(\"FreqProxTermsWriterPerField.newTerm start\");\n    FreqProxTermsWriter.PostingList p = (FreqProxTermsWriter.PostingList) p0;\n    p.lastDocID = docState.docID;\n    if (omitTf) {\n      p.lastDocCode = docState.docID;\n    } else {\n      p.lastDocCode = docState.docID << 1;\n      p.docFreq = 1;\n      writeProx(t, p, fieldState.position);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["902ba79f4590a41c663c447756d2e5041cbbdda9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"902ba79f4590a41c663c447756d2e5041cbbdda9":["5350389bf83287111f7760b9e3db3af8e3648474"],"5350389bf83287111f7760b9e3db3af8e3648474":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"]},"commit2Childs":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5350389bf83287111f7760b9e3db3af8e3648474"],"902ba79f4590a41c663c447756d2e5041cbbdda9":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"5350389bf83287111f7760b9e3db3af8e3648474":["902ba79f4590a41c663c447756d2e5041cbbdda9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}