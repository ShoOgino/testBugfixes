{"path":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#ReaderPool(Directory,Directory,SegmentInfos,FieldInfos.FieldNumbers,LongSupplier,InfoStream,String,StandardDirectoryReader).mjava","commits":[{"id":"1926100d9b67becc9701c54266fee3ba7878a5f0","date":1524472150,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#ReaderPool(Directory,Directory,SegmentInfos,FieldInfos.FieldNumbers,LongSupplier,InfoStream,String,StandardDirectoryReader).mjava","pathOld":"/dev/null","sourceNew":"  ReaderPool(Directory directory, Directory originalDirectory, SegmentInfos segmentInfos,\n             FieldInfos.FieldNumbers fieldNumbers, LongSupplier completedDelGenSupplier, InfoStream infoStream,\n             String softDeletesField, StandardDirectoryReader reader) throws IOException {\n    this.directory = directory;\n    this.originalDirectory = originalDirectory;\n    this.segmentInfos = segmentInfos;\n    this.fieldNumbers = fieldNumbers;\n    this.completedDelGenSupplier = completedDelGenSupplier;\n    this.infoStream = infoStream;\n    this.softDeletesField = softDeletesField;\n    if (reader != null) {\n      // Pre-enroll all segment readers into the reader pool; this is necessary so\n      // any in-memory NRT live docs are correctly carried over, and so NRT readers\n      // pulled from this IW share the same segment reader:\n      List<LeafReaderContext> leaves = reader.leaves();\n      assert segmentInfos.size() == leaves.size();\n      for (int i=0;i<leaves.size();i++) {\n        LeafReaderContext leaf = leaves.get(i);\n        SegmentReader segReader = (SegmentReader) leaf.reader();\n        SegmentReader newReader = new SegmentReader(segmentInfos.info(i), segReader, segReader.getLiveDocs(),\n            segReader.numDocs());\n        readerMap.put(newReader.getSegmentInfo(), new ReadersAndUpdates(segmentInfos.getIndexCreatedVersionMajor(),\n            newReader, newPendingDeletes(newReader, newReader.getSegmentInfo())));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4987206dabc9f3576bb1df72e987094a7dad6e4f","4987206dabc9f3576bb1df72e987094a7dad6e4f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4987206dabc9f3576bb1df72e987094a7dad6e4f","date":1527510516,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#ReaderPool(Directory,Directory,SegmentInfos,FieldInfos.FieldNumbers,LongSupplier,InfoStream,String,StandardDirectoryReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#ReaderPool(Directory,Directory,SegmentInfos,FieldInfos.FieldNumbers,LongSupplier,InfoStream,String,StandardDirectoryReader).mjava","sourceNew":"  ReaderPool(Directory directory, Directory originalDirectory, SegmentInfos segmentInfos,\n             FieldInfos.FieldNumbers fieldNumbers, LongSupplier completedDelGenSupplier, InfoStream infoStream,\n             String softDeletesField, StandardDirectoryReader reader) throws IOException {\n    this.directory = directory;\n    this.originalDirectory = originalDirectory;\n    this.segmentInfos = segmentInfos;\n    this.fieldNumbers = fieldNumbers;\n    this.completedDelGenSupplier = completedDelGenSupplier;\n    this.infoStream = infoStream;\n    this.softDeletesField = softDeletesField;\n    if (reader != null) {\n      // Pre-enroll all segment readers into the reader pool; this is necessary so\n      // any in-memory NRT live docs are correctly carried over, and so NRT readers\n      // pulled from this IW share the same segment reader:\n      List<LeafReaderContext> leaves = reader.leaves();\n      assert segmentInfos.size() == leaves.size();\n      for (int i=0;i<leaves.size();i++) {\n        LeafReaderContext leaf = leaves.get(i);\n        SegmentReader segReader = (SegmentReader) leaf.reader();\n        SegmentReader newReader = new SegmentReader(segmentInfos.info(i), segReader, segReader.getLiveDocs(),\n            segReader.numDocs());\n        readerMap.put(newReader.getOriginalSegmentInfo(), new ReadersAndUpdates(segmentInfos.getIndexCreatedVersionMajor(),\n            newReader, newPendingDeletes(newReader, newReader.getOriginalSegmentInfo())));\n      }\n    }\n  }\n\n","sourceOld":"  ReaderPool(Directory directory, Directory originalDirectory, SegmentInfos segmentInfos,\n             FieldInfos.FieldNumbers fieldNumbers, LongSupplier completedDelGenSupplier, InfoStream infoStream,\n             String softDeletesField, StandardDirectoryReader reader) throws IOException {\n    this.directory = directory;\n    this.originalDirectory = originalDirectory;\n    this.segmentInfos = segmentInfos;\n    this.fieldNumbers = fieldNumbers;\n    this.completedDelGenSupplier = completedDelGenSupplier;\n    this.infoStream = infoStream;\n    this.softDeletesField = softDeletesField;\n    if (reader != null) {\n      // Pre-enroll all segment readers into the reader pool; this is necessary so\n      // any in-memory NRT live docs are correctly carried over, and so NRT readers\n      // pulled from this IW share the same segment reader:\n      List<LeafReaderContext> leaves = reader.leaves();\n      assert segmentInfos.size() == leaves.size();\n      for (int i=0;i<leaves.size();i++) {\n        LeafReaderContext leaf = leaves.get(i);\n        SegmentReader segReader = (SegmentReader) leaf.reader();\n        SegmentReader newReader = new SegmentReader(segmentInfos.info(i), segReader, segReader.getLiveDocs(),\n            segReader.numDocs());\n        readerMap.put(newReader.getSegmentInfo(), new ReadersAndUpdates(segmentInfos.getIndexCreatedVersionMajor(),\n            newReader, newPendingDeletes(newReader, newReader.getSegmentInfo())));\n      }\n    }\n  }\n\n","bugFix":["1926100d9b67becc9701c54266fee3ba7878a5f0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"578a4d73d90ecd838846cc32bf1098aaa262b524","date":1532504076,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#ReaderPool(Directory,Directory,SegmentInfos,FieldInfos.FieldNumbers,LongSupplier,InfoStream,String,StandardDirectoryReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#ReaderPool(Directory,Directory,SegmentInfos,FieldInfos.FieldNumbers,LongSupplier,InfoStream,String,StandardDirectoryReader).mjava","sourceNew":"  ReaderPool(Directory directory, Directory originalDirectory, SegmentInfos segmentInfos,\n             FieldInfos.FieldNumbers fieldNumbers, LongSupplier completedDelGenSupplier, InfoStream infoStream,\n             String softDeletesField, StandardDirectoryReader reader) throws IOException {\n    this.directory = directory;\n    this.originalDirectory = originalDirectory;\n    this.segmentInfos = segmentInfos;\n    this.fieldNumbers = fieldNumbers;\n    this.completedDelGenSupplier = completedDelGenSupplier;\n    this.infoStream = infoStream;\n    this.softDeletesField = softDeletesField;\n    if (reader != null) {\n      // Pre-enroll all segment readers into the reader pool; this is necessary so\n      // any in-memory NRT live docs are correctly carried over, and so NRT readers\n      // pulled from this IW share the same segment reader:\n      List<LeafReaderContext> leaves = reader.leaves();\n      assert segmentInfos.size() == leaves.size();\n      for (int i=0;i<leaves.size();i++) {\n        LeafReaderContext leaf = leaves.get(i);\n        SegmentReader segReader = (SegmentReader) leaf.reader();\n        SegmentReader newReader = new SegmentReader(segmentInfos.info(i), segReader, segReader.getLiveDocs(),\n            segReader.getHardLiveDocs(), segReader.numDocs(), true);\n        readerMap.put(newReader.getOriginalSegmentInfo(), new ReadersAndUpdates(segmentInfos.getIndexCreatedVersionMajor(),\n            newReader, newPendingDeletes(newReader, newReader.getOriginalSegmentInfo())));\n      }\n    }\n  }\n\n","sourceOld":"  ReaderPool(Directory directory, Directory originalDirectory, SegmentInfos segmentInfos,\n             FieldInfos.FieldNumbers fieldNumbers, LongSupplier completedDelGenSupplier, InfoStream infoStream,\n             String softDeletesField, StandardDirectoryReader reader) throws IOException {\n    this.directory = directory;\n    this.originalDirectory = originalDirectory;\n    this.segmentInfos = segmentInfos;\n    this.fieldNumbers = fieldNumbers;\n    this.completedDelGenSupplier = completedDelGenSupplier;\n    this.infoStream = infoStream;\n    this.softDeletesField = softDeletesField;\n    if (reader != null) {\n      // Pre-enroll all segment readers into the reader pool; this is necessary so\n      // any in-memory NRT live docs are correctly carried over, and so NRT readers\n      // pulled from this IW share the same segment reader:\n      List<LeafReaderContext> leaves = reader.leaves();\n      assert segmentInfos.size() == leaves.size();\n      for (int i=0;i<leaves.size();i++) {\n        LeafReaderContext leaf = leaves.get(i);\n        SegmentReader segReader = (SegmentReader) leaf.reader();\n        SegmentReader newReader = new SegmentReader(segmentInfos.info(i), segReader, segReader.getLiveDocs(),\n            segReader.numDocs());\n        readerMap.put(newReader.getOriginalSegmentInfo(), new ReadersAndUpdates(segmentInfos.getIndexCreatedVersionMajor(),\n            newReader, newPendingDeletes(newReader, newReader.getOriginalSegmentInfo())));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"763da4a9605e47013078edc323b9d4b608f0f9e0","date":1555353576,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#ReaderPool(Directory,Directory,SegmentInfos,FieldInfos.FieldNumbers,LongSupplier,InfoStream,String,StandardDirectoryReader,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#ReaderPool(Directory,Directory,SegmentInfos,FieldInfos.FieldNumbers,LongSupplier,InfoStream,String,StandardDirectoryReader).mjava","sourceNew":"  ReaderPool(Directory directory, Directory originalDirectory, SegmentInfos segmentInfos,\n             FieldInfos.FieldNumbers fieldNumbers, LongSupplier completedDelGenSupplier, InfoStream infoStream,\n             String softDeletesField, StandardDirectoryReader reader, Map<String, String> readerAttributes) throws IOException {\n    this.directory = directory;\n    this.originalDirectory = originalDirectory;\n    this.segmentInfos = segmentInfos;\n    this.fieldNumbers = fieldNumbers;\n    this.completedDelGenSupplier = completedDelGenSupplier;\n    this.infoStream = infoStream;\n    this.softDeletesField = softDeletesField;\n    this.readerAttributes = readerAttributes;\n    if (reader != null) {\n      // Pre-enroll all segment readers into the reader pool; this is necessary so\n      // any in-memory NRT live docs are correctly carried over, and so NRT readers\n      // pulled from this IW share the same segment reader:\n      List<LeafReaderContext> leaves = reader.leaves();\n      assert segmentInfos.size() == leaves.size();\n      for (int i=0;i<leaves.size();i++) {\n        LeafReaderContext leaf = leaves.get(i);\n        SegmentReader segReader = (SegmentReader) leaf.reader();\n        SegmentReader newReader = new SegmentReader(segmentInfos.info(i), segReader, segReader.getLiveDocs(),\n            segReader.getHardLiveDocs(), segReader.numDocs(), true);\n        readerMap.put(newReader.getOriginalSegmentInfo(), new ReadersAndUpdates(segmentInfos.getIndexCreatedVersionMajor(),\n            newReader, newPendingDeletes(newReader, newReader.getOriginalSegmentInfo()), readerAttributes));\n      }\n    }\n  }\n\n","sourceOld":"  ReaderPool(Directory directory, Directory originalDirectory, SegmentInfos segmentInfos,\n             FieldInfos.FieldNumbers fieldNumbers, LongSupplier completedDelGenSupplier, InfoStream infoStream,\n             String softDeletesField, StandardDirectoryReader reader) throws IOException {\n    this.directory = directory;\n    this.originalDirectory = originalDirectory;\n    this.segmentInfos = segmentInfos;\n    this.fieldNumbers = fieldNumbers;\n    this.completedDelGenSupplier = completedDelGenSupplier;\n    this.infoStream = infoStream;\n    this.softDeletesField = softDeletesField;\n    if (reader != null) {\n      // Pre-enroll all segment readers into the reader pool; this is necessary so\n      // any in-memory NRT live docs are correctly carried over, and so NRT readers\n      // pulled from this IW share the same segment reader:\n      List<LeafReaderContext> leaves = reader.leaves();\n      assert segmentInfos.size() == leaves.size();\n      for (int i=0;i<leaves.size();i++) {\n        LeafReaderContext leaf = leaves.get(i);\n        SegmentReader segReader = (SegmentReader) leaf.reader();\n        SegmentReader newReader = new SegmentReader(segmentInfos.info(i), segReader, segReader.getLiveDocs(),\n            segReader.getHardLiveDocs(), segReader.numDocs(), true);\n        readerMap.put(newReader.getOriginalSegmentInfo(), new ReadersAndUpdates(segmentInfos.getIndexCreatedVersionMajor(),\n            newReader, newPendingDeletes(newReader, newReader.getOriginalSegmentInfo())));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4e83191a3e02851a0b67e5335e6922f3e9ea86d","date":1583489709,"type":1,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#ReaderPool(Directory,Directory,SegmentInfos,FieldInfos.FieldNumbers,LongSupplier,InfoStream,String,StandardDirectoryReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#ReaderPool(Directory,Directory,SegmentInfos,FieldInfos.FieldNumbers,LongSupplier,InfoStream,String,StandardDirectoryReader,Map[String,String]).mjava","sourceNew":"  ReaderPool(Directory directory, Directory originalDirectory, SegmentInfos segmentInfos,\n             FieldInfos.FieldNumbers fieldNumbers, LongSupplier completedDelGenSupplier, InfoStream infoStream,\n             String softDeletesField, StandardDirectoryReader reader) throws IOException {\n    this.directory = directory;\n    this.originalDirectory = originalDirectory;\n    this.segmentInfos = segmentInfos;\n    this.fieldNumbers = fieldNumbers;\n    this.completedDelGenSupplier = completedDelGenSupplier;\n    this.infoStream = infoStream;\n    this.softDeletesField = softDeletesField;\n    if (reader != null) {\n      // Pre-enroll all segment readers into the reader pool; this is necessary so\n      // any in-memory NRT live docs are correctly carried over, and so NRT readers\n      // pulled from this IW share the same segment reader:\n      List<LeafReaderContext> leaves = reader.leaves();\n      assert segmentInfos.size() == leaves.size();\n      for (int i=0;i<leaves.size();i++) {\n        LeafReaderContext leaf = leaves.get(i);\n        SegmentReader segReader = (SegmentReader) leaf.reader();\n        SegmentReader newReader = new SegmentReader(segmentInfos.info(i), segReader, segReader.getLiveDocs(),\n            segReader.getHardLiveDocs(), segReader.numDocs(), true);\n        readerMap.put(newReader.getOriginalSegmentInfo(), new ReadersAndUpdates(segmentInfos.getIndexCreatedVersionMajor(),\n            newReader, newPendingDeletes(newReader, newReader.getOriginalSegmentInfo())));\n      }\n    }\n  }\n\n","sourceOld":"  ReaderPool(Directory directory, Directory originalDirectory, SegmentInfos segmentInfos,\n             FieldInfos.FieldNumbers fieldNumbers, LongSupplier completedDelGenSupplier, InfoStream infoStream,\n             String softDeletesField, StandardDirectoryReader reader, Map<String, String> readerAttributes) throws IOException {\n    this.directory = directory;\n    this.originalDirectory = originalDirectory;\n    this.segmentInfos = segmentInfos;\n    this.fieldNumbers = fieldNumbers;\n    this.completedDelGenSupplier = completedDelGenSupplier;\n    this.infoStream = infoStream;\n    this.softDeletesField = softDeletesField;\n    this.readerAttributes = readerAttributes;\n    if (reader != null) {\n      // Pre-enroll all segment readers into the reader pool; this is necessary so\n      // any in-memory NRT live docs are correctly carried over, and so NRT readers\n      // pulled from this IW share the same segment reader:\n      List<LeafReaderContext> leaves = reader.leaves();\n      assert segmentInfos.size() == leaves.size();\n      for (int i=0;i<leaves.size();i++) {\n        LeafReaderContext leaf = leaves.get(i);\n        SegmentReader segReader = (SegmentReader) leaf.reader();\n        SegmentReader newReader = new SegmentReader(segmentInfos.info(i), segReader, segReader.getLiveDocs(),\n            segReader.getHardLiveDocs(), segReader.numDocs(), true);\n        readerMap.put(newReader.getOriginalSegmentInfo(), new ReadersAndUpdates(segmentInfos.getIndexCreatedVersionMajor(),\n            newReader, newPendingDeletes(newReader, newReader.getOriginalSegmentInfo()), readerAttributes));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"763da4a9605e47013078edc323b9d4b608f0f9e0":["578a4d73d90ecd838846cc32bf1098aaa262b524"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1926100d9b67becc9701c54266fee3ba7878a5f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"578a4d73d90ecd838846cc32bf1098aaa262b524":["4987206dabc9f3576bb1df72e987094a7dad6e4f"],"4987206dabc9f3576bb1df72e987094a7dad6e4f":["1926100d9b67becc9701c54266fee3ba7878a5f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4e83191a3e02851a0b67e5335e6922f3e9ea86d"],"a4e83191a3e02851a0b67e5335e6922f3e9ea86d":["763da4a9605e47013078edc323b9d4b608f0f9e0"]},"commit2Childs":{"763da4a9605e47013078edc323b9d4b608f0f9e0":["a4e83191a3e02851a0b67e5335e6922f3e9ea86d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1926100d9b67becc9701c54266fee3ba7878a5f0"],"1926100d9b67becc9701c54266fee3ba7878a5f0":["4987206dabc9f3576bb1df72e987094a7dad6e4f"],"578a4d73d90ecd838846cc32bf1098aaa262b524":["763da4a9605e47013078edc323b9d4b608f0f9e0"],"4987206dabc9f3576bb1df72e987094a7dad6e4f":["578a4d73d90ecd838846cc32bf1098aaa262b524"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"a4e83191a3e02851a0b67e5335e6922f3e9ea86d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}