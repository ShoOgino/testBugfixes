{"path":"lucene/src/java/org/apache/lucene/search/ConjunctionTermScorer#doNext(int).mjava","commits":[{"id":"ee1513e4ee2237693ff50a460d78dff5246c3d34","date":1311330418,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/ConjunctionTermScorer#doNext(int).mjava","pathOld":"/dev/null","sourceNew":"  private int doNext(int doc) throws IOException {\n    do {\n      if (lead.doc == DocsEnum.NO_MORE_DOCS) {\n        return NO_MORE_DOCS;\n      }\n      advanceHead: do {\n        for (int i = 1; i < docsAndFreqs.length; i++) {\n          if (docsAndFreqs[i].doc < doc) {\n            docsAndFreqs[i].doc = docsAndFreqs[i].docs.advance(doc);\n          }\n          if (docsAndFreqs[i].doc > doc) {\n            // DocsEnum beyond the current doc - break and advance lead\n            break advanceHead;\n          }\n        }\n        // success - all DocsEnums are on the same doc\n        return doc;\n      } while (true);\n      // advance head for next iteration\n      doc = lead.doc = lead.docs.nextDoc();  \n    } while (true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ad53827f5ab12289afd304fbeb30bf6e13c7c0d6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionTermScorer#doNext(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ConjunctionTermScorer#doNext(int).mjava","sourceNew":"  private int doNext(int doc) throws IOException {\n    do {\n      if (lead.doc == DocsEnum.NO_MORE_DOCS) {\n        return NO_MORE_DOCS;\n      }\n      advanceHead: do {\n        for (int i = 1; i < docsAndFreqs.length; i++) {\n          if (docsAndFreqs[i].doc < doc) {\n            docsAndFreqs[i].doc = docsAndFreqs[i].docs.advance(doc);\n          }\n          if (docsAndFreqs[i].doc > doc) {\n            // DocsEnum beyond the current doc - break and advance lead\n            break advanceHead;\n          }\n        }\n        // success - all DocsEnums are on the same doc\n        return doc;\n      } while (true);\n      // advance head for next iteration\n      doc = lead.doc = lead.docs.nextDoc();  \n    } while (true);\n  }\n\n","sourceOld":"  private int doNext(int doc) throws IOException {\n    do {\n      if (lead.doc == DocsEnum.NO_MORE_DOCS) {\n        return NO_MORE_DOCS;\n      }\n      advanceHead: do {\n        for (int i = 1; i < docsAndFreqs.length; i++) {\n          if (docsAndFreqs[i].doc < doc) {\n            docsAndFreqs[i].doc = docsAndFreqs[i].docs.advance(doc);\n          }\n          if (docsAndFreqs[i].doc > doc) {\n            // DocsEnum beyond the current doc - break and advance lead\n            break advanceHead;\n          }\n        }\n        // success - all DocsEnums are on the same doc\n        return doc;\n      } while (true);\n      // advance head for next iteration\n      doc = lead.doc = lead.docs.nextDoc();  \n    } while (true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ee1513e4ee2237693ff50a460d78dff5246c3d34"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee1513e4ee2237693ff50a460d78dff5246c3d34":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee1513e4ee2237693ff50a460d78dff5246c3d34"],"ee1513e4ee2237693ff50a460d78dff5246c3d34":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}