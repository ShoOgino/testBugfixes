{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#step1(StringBuffer).mjava","commits":[{"id":"a684698d2d785b642cc0dda9c81091abc2bd90b5","date":1078844108,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#step1(StringBuffer).mjava","pathOld":"/dev/null","sourceNew":"\tprivate void step1(StringBuffer sb)\n\t{\n\t\tif (_R1 >= sb.length())\n\t\t\treturn;\n\n\t\tString s = sb.toString();\n\t\tint lengthR1 = sb.length() - _R1;\n\t\tint index;\n\n\t\tif (s.endsWith(\"heden\"))\n\t\t{\n\t\t\tsb.replace(_R1, lengthR1 + _R1, sb.substring(_R1, lengthR1 + _R1).replaceAll(\"heden\", \"heid\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (enEnding(sb))\n\t\t\treturn;\n\n\t\tif (s.endsWith(\"se\")              &&\n\t\t\t (index = s.length() - 2) >= _R1  &&\n\t\t\t isValidSEnding(sb, index -1)\n\t\t\t)\n\t\t{\n\t\t\tsb.delete(index, index + 2);\n\t\t\treturn;\n\t\t}\n\t\tif (s.endsWith(\"s\") &&\n\t\t\t(index = s.length() - 1) >= _R1  &&\n\t\t\tisValidSEnding(sb, index - 1))\n\t\t{\n\t\t\tsb.delete(index, index + 1);\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9","date":1078974336,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#step1(StringBuffer).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#step1(StringBuffer).mjava","sourceNew":"  private void step1(StringBuffer sb) {\n    if (_R1 >= sb.length())\n      return;\n\n    String s = sb.toString();\n    int lengthR1 = sb.length() - _R1;\n    int index;\n\n    if (s.endsWith(\"heden\")) {\n      sb.replace(_R1, lengthR1 + _R1, sb.substring(_R1, lengthR1 + _R1).replaceAll(\"heden\", \"heid\"));\n      return;\n    }\n\n    if (enEnding(sb))\n      return;\n\n    if (s.endsWith(\"se\") &&\n        (index = s.length() - 2) >= _R1 &&\n        isValidSEnding(sb, index - 1)\n    ) {\n      sb.delete(index, index + 2);\n      return;\n    }\n    if (s.endsWith(\"s\") &&\n        (index = s.length() - 1) >= _R1 &&\n        isValidSEnding(sb, index - 1)) {\n      sb.delete(index, index + 1);\n    }\n  }\n\n","sourceOld":"\tprivate void step1(StringBuffer sb)\n\t{\n\t\tif (_R1 >= sb.length())\n\t\t\treturn;\n\n\t\tString s = sb.toString();\n\t\tint lengthR1 = sb.length() - _R1;\n\t\tint index;\n\n\t\tif (s.endsWith(\"heden\"))\n\t\t{\n\t\t\tsb.replace(_R1, lengthR1 + _R1, sb.substring(_R1, lengthR1 + _R1).replaceAll(\"heden\", \"heid\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (enEnding(sb))\n\t\t\treturn;\n\n\t\tif (s.endsWith(\"se\")              &&\n\t\t\t (index = s.length() - 2) >= _R1  &&\n\t\t\t isValidSEnding(sb, index -1)\n\t\t\t)\n\t\t{\n\t\t\tsb.delete(index, index + 2);\n\t\t\treturn;\n\t\t}\n\t\tif (s.endsWith(\"s\") &&\n\t\t\t(index = s.length() - 1) >= _R1  &&\n\t\t\tisValidSEnding(sb, index - 1))\n\t\t{\n\t\t\tsb.delete(index, index + 1);\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#step1(StringBuffer).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#step1(StringBuffer).mjava","sourceNew":"  private void step1(StringBuffer sb) {\n    if (_R1 >= sb.length())\n      return;\n\n    String s = sb.toString();\n    int lengthR1 = sb.length() - _R1;\n    int index;\n\n    if (s.endsWith(\"heden\")) {\n      sb.replace(_R1, lengthR1 + _R1, sb.substring(_R1, lengthR1 + _R1).replaceAll(\"heden\", \"heid\"));\n      return;\n    }\n\n    if (enEnding(sb))\n      return;\n\n    if (s.endsWith(\"se\") &&\n        (index = s.length() - 2) >= _R1 &&\n        isValidSEnding(sb, index - 1)\n    ) {\n      sb.delete(index, index + 2);\n      return;\n    }\n    if (s.endsWith(\"s\") &&\n        (index = s.length() - 1) >= _R1 &&\n        isValidSEnding(sb, index - 1)) {\n      sb.delete(index, index + 1);\n    }\n  }\n\n","sourceOld":"  private void step1(StringBuffer sb) {\n    if (_R1 >= sb.length())\n      return;\n\n    String s = sb.toString();\n    int lengthR1 = sb.length() - _R1;\n    int index;\n\n    if (s.endsWith(\"heden\")) {\n      sb.replace(_R1, lengthR1 + _R1, sb.substring(_R1, lengthR1 + _R1).replaceAll(\"heden\", \"heid\"));\n      return;\n    }\n\n    if (enEnding(sb))\n      return;\n\n    if (s.endsWith(\"se\") &&\n        (index = s.length() - 2) >= _R1 &&\n        isValidSEnding(sb, index - 1)\n    ) {\n      sb.delete(index, index + 2);\n      return;\n    }\n    if (s.endsWith(\"s\") &&\n        (index = s.length() - 1) >= _R1 &&\n        isValidSEnding(sb, index - 1)) {\n      sb.delete(index, index + 1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a684698d2d785b642cc0dda9c81091abc2bd90b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9":["a684698d2d785b642cc0dda9c81091abc2bd90b5"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a684698d2d785b642cc0dda9c81091abc2bd90b5"],"a684698d2d785b642cc0dda9c81091abc2bd90b5":["37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9"],"37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}