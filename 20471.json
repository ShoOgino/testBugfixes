{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNRTSegmentsFile().mjava","commits":[{"id":"e453ee95e5ed4cd001de2d5d3269e25f977980f1","date":1432836708,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNRTSegmentsFile().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-6505\n  public void testNRTSegmentsFile() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // creates segments_1\n    w.commit();\n\n    // newly opened NRT reader should see gen=1 segments file\n    DirectoryReader r = DirectoryReader.open(w, true);\n    assertEquals(1, r.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r.getIndexCommit().getSegmentsFileName());\n\n    // newly opened non-NRT reader should see gen=1 segments file\n    DirectoryReader r2 = DirectoryReader.open(dir);\n    assertEquals(1, r2.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r2.getIndexCommit().getSegmentsFileName());\n    r2.close();\n    \n    // make a change and another commit\n    w.addDocument(new Document());\n    w.commit();\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    r.close();\n    assertNotNull(r3);\n\n    // reopened NRT reader should see gen=2 segments file\n    assertEquals(2, r3.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r3.getIndexCommit().getSegmentsFileName());\n    r3.close();\n\n    // newly opened non-NRT reader should see gen=2 segments file\n    DirectoryReader r4 = DirectoryReader.open(dir);\n    assertEquals(2, r4.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r4.getIndexCommit().getSegmentsFileName());\n    r4.close();\n\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNRTSegmentsFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNRTSegmentsFile().mjava","sourceNew":"  // LUCENE-6505\n  public void testNRTSegmentsFile() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // creates segments_1\n    w.commit();\n\n    // newly opened NRT reader should see gen=1 segments file\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r.getIndexCommit().getSegmentsFileName());\n\n    // newly opened non-NRT reader should see gen=1 segments file\n    DirectoryReader r2 = DirectoryReader.open(dir);\n    assertEquals(1, r2.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r2.getIndexCommit().getSegmentsFileName());\n    r2.close();\n    \n    // make a change and another commit\n    w.addDocument(new Document());\n    w.commit();\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    r.close();\n    assertNotNull(r3);\n\n    // reopened NRT reader should see gen=2 segments file\n    assertEquals(2, r3.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r3.getIndexCommit().getSegmentsFileName());\n    r3.close();\n\n    // newly opened non-NRT reader should see gen=2 segments file\n    DirectoryReader r4 = DirectoryReader.open(dir);\n    assertEquals(2, r4.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r4.getIndexCommit().getSegmentsFileName());\n    r4.close();\n\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-6505\n  public void testNRTSegmentsFile() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // creates segments_1\n    w.commit();\n\n    // newly opened NRT reader should see gen=1 segments file\n    DirectoryReader r = DirectoryReader.open(w, true);\n    assertEquals(1, r.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r.getIndexCommit().getSegmentsFileName());\n\n    // newly opened non-NRT reader should see gen=1 segments file\n    DirectoryReader r2 = DirectoryReader.open(dir);\n    assertEquals(1, r2.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r2.getIndexCommit().getSegmentsFileName());\n    r2.close();\n    \n    // make a change and another commit\n    w.addDocument(new Document());\n    w.commit();\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    r.close();\n    assertNotNull(r3);\n\n    // reopened NRT reader should see gen=2 segments file\n    assertEquals(2, r3.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r3.getIndexCommit().getSegmentsFileName());\n    r3.close();\n\n    // newly opened non-NRT reader should see gen=2 segments file\n    DirectoryReader r4 = DirectoryReader.open(dir);\n    assertEquals(2, r4.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r4.getIndexCommit().getSegmentsFileName());\n    r4.close();\n\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe39f1a106531207c028defebbc9eb5bb489ac50","date":1592513789,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNRTSegmentsFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNRTSegmentsFile().mjava","sourceNew":"  // LUCENE-6505\n  public void testNRTSegmentsFile() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // creates segments_1\n    w.commit();\n\n    // newly opened NRT reader should see gen=1 segments file\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r.getIndexCommit().getSegmentsFileName());\n\n    // newly opened non-NRT reader should see gen=1 segments file\n    DirectoryReader r2 = DirectoryReader.open(dir);\n    assertEquals(1, r2.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r2.getIndexCommit().getSegmentsFileName());\n    r2.close();\n\n    // make a change and another commit\n    w.addDocument(new Document());\n    w.commit();\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    r.close();\n    assertNotNull(r3);\n\n    // reopened NRT reader should see gen=2 segments file\n    assertEquals(2, r3.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r3.getIndexCommit().getSegmentsFileName());\n    r3.close();\n\n    // newly opened non-NRT reader should see gen=2 segments file\n    DirectoryReader r4 = DirectoryReader.open(dir);\n    assertEquals(2, r4.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r4.getIndexCommit().getSegmentsFileName());\n    r4.close();\n\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-6505\n  public void testNRTSegmentsFile() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // creates segments_1\n    w.commit();\n\n    // newly opened NRT reader should see gen=1 segments file\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r.getIndexCommit().getSegmentsFileName());\n\n    // newly opened non-NRT reader should see gen=1 segments file\n    DirectoryReader r2 = DirectoryReader.open(dir);\n    assertEquals(1, r2.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r2.getIndexCommit().getSegmentsFileName());\n    r2.close();\n    \n    // make a change and another commit\n    w.addDocument(new Document());\n    w.commit();\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    r.close();\n    assertNotNull(r3);\n\n    // reopened NRT reader should see gen=2 segments file\n    assertEquals(2, r3.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r3.getIndexCommit().getSegmentsFileName());\n    r3.close();\n\n    // newly opened non-NRT reader should see gen=2 segments file\n    DirectoryReader r4 = DirectoryReader.open(dir);\n    assertEquals(2, r4.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r4.getIndexCommit().getSegmentsFileName());\n    r4.close();\n\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1182fe36fb5df768dc2da53f6d5338cbc07268ae","date":1592861749,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNRTSegmentsFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNRTSegmentsFile().mjava","sourceNew":"  // LUCENE-6505\n  public void testNRTSegmentsFile() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // creates segments_1\n    w.commit();\n\n    // newly opened NRT reader should see gen=1 segments file\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r.getIndexCommit().getSegmentsFileName());\n\n    // newly opened non-NRT reader should see gen=1 segments file\n    DirectoryReader r2 = DirectoryReader.open(dir);\n    assertEquals(1, r2.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r2.getIndexCommit().getSegmentsFileName());\n    r2.close();\n    \n    // make a change and another commit\n    w.addDocument(new Document());\n    w.commit();\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    r.close();\n    assertNotNull(r3);\n\n    // reopened NRT reader should see gen=2 segments file\n    assertEquals(2, r3.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r3.getIndexCommit().getSegmentsFileName());\n    r3.close();\n\n    // newly opened non-NRT reader should see gen=2 segments file\n    DirectoryReader r4 = DirectoryReader.open(dir);\n    assertEquals(2, r4.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r4.getIndexCommit().getSegmentsFileName());\n    r4.close();\n\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-6505\n  public void testNRTSegmentsFile() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // creates segments_1\n    w.commit();\n\n    // newly opened NRT reader should see gen=1 segments file\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r.getIndexCommit().getSegmentsFileName());\n\n    // newly opened non-NRT reader should see gen=1 segments file\n    DirectoryReader r2 = DirectoryReader.open(dir);\n    assertEquals(1, r2.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r2.getIndexCommit().getSegmentsFileName());\n    r2.close();\n\n    // make a change and another commit\n    w.addDocument(new Document());\n    w.commit();\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    r.close();\n    assertNotNull(r3);\n\n    // reopened NRT reader should see gen=2 segments file\n    assertEquals(2, r3.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r3.getIndexCommit().getSegmentsFileName());\n    r3.close();\n\n    // newly opened non-NRT reader should see gen=2 segments file\n    DirectoryReader r4 = DirectoryReader.open(dir);\n    assertEquals(2, r4.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r4.getIndexCommit().getSegmentsFileName());\n    r4.close();\n\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2a23476693f2bd9a4b44cc3187c429a2e21dac2","date":1593289545,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNRTSegmentsFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNRTSegmentsFile().mjava","sourceNew":"  // LUCENE-6505\n  public void testNRTSegmentsFile() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // creates segments_1\n    w.commit();\n\n    // newly opened NRT reader should see gen=1 segments file\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r.getIndexCommit().getSegmentsFileName());\n\n    // newly opened non-NRT reader should see gen=1 segments file\n    DirectoryReader r2 = DirectoryReader.open(dir);\n    assertEquals(1, r2.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r2.getIndexCommit().getSegmentsFileName());\n    r2.close();\n\n    // make a change and another commit\n    w.addDocument(new Document());\n    w.commit();\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    r.close();\n    assertNotNull(r3);\n\n    // reopened NRT reader should see gen=2 segments file\n    assertEquals(2, r3.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r3.getIndexCommit().getSegmentsFileName());\n    r3.close();\n\n    // newly opened non-NRT reader should see gen=2 segments file\n    DirectoryReader r4 = DirectoryReader.open(dir);\n    assertEquals(2, r4.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r4.getIndexCommit().getSegmentsFileName());\n    r4.close();\n\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-6505\n  public void testNRTSegmentsFile() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // creates segments_1\n    w.commit();\n\n    // newly opened NRT reader should see gen=1 segments file\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r.getIndexCommit().getSegmentsFileName());\n\n    // newly opened non-NRT reader should see gen=1 segments file\n    DirectoryReader r2 = DirectoryReader.open(dir);\n    assertEquals(1, r2.getIndexCommit().getGeneration());\n    assertEquals(\"segments_1\", r2.getIndexCommit().getSegmentsFileName());\n    r2.close();\n    \n    // make a change and another commit\n    w.addDocument(new Document());\n    w.commit();\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    r.close();\n    assertNotNull(r3);\n\n    // reopened NRT reader should see gen=2 segments file\n    assertEquals(2, r3.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r3.getIndexCommit().getSegmentsFileName());\n    r3.close();\n\n    // newly opened non-NRT reader should see gen=2 segments file\n    DirectoryReader r4 = DirectoryReader.open(dir);\n    assertEquals(2, r4.getIndexCommit().getGeneration());\n    assertEquals(\"segments_2\", r4.getIndexCommit().getSegmentsFileName());\n    r4.close();\n\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"],"2a1862266772deb28cdcb7d996b64d2177022687":["e453ee95e5ed4cd001de2d5d3269e25f977980f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e453ee95e5ed4cd001de2d5d3269e25f977980f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["fe39f1a106531207c028defebbc9eb5bb489ac50"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"]},"commit2Childs":{"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a1862266772deb28cdcb7d996b64d2177022687":["fe39f1a106531207c028defebbc9eb5bb489ac50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e453ee95e5ed4cd001de2d5d3269e25f977980f1"],"e453ee95e5ed4cd001de2d5d3269e25f977980f1":["2a1862266772deb28cdcb7d996b64d2177022687"],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}