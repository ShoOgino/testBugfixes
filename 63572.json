{"path":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#addFieldToFlush(TermVectorsConsumerPerField).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#addFieldToFlush(TermVectorsConsumerPerField).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsConsumer#addFieldToFlush(TermVectorsConsumerPerField).mjava","sourceNew":"  void addFieldToFlush(TermVectorsConsumerPerField fieldToFlush) {\n    if (numVectorFields == perFields.length) {\n      int newSize = ArrayUtil.oversize(numVectorFields + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      TermVectorsConsumerPerField[] newArray = new TermVectorsConsumerPerField[newSize];\n      System.arraycopy(perFields, 0, newArray, 0, numVectorFields);\n      perFields = newArray;\n    }\n\n    perFields[numVectorFields++] = fieldToFlush;\n  }\n\n","sourceOld":"  void addFieldToFlush(TermVectorsConsumerPerField fieldToFlush) {\n    if (numVectorFields == perFields.length) {\n      int newSize = ArrayUtil.oversize(numVectorFields + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      TermVectorsConsumerPerField[] newArray = new TermVectorsConsumerPerField[newSize];\n      System.arraycopy(perFields, 0, newArray, 0, numVectorFields);\n      perFields = newArray;\n    }\n\n    perFields[numVectorFields++] = fieldToFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34f20fcb907a484d95d88000e78f6ba736452608","date":1370019573,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#addFieldToFlush(TermVectorsConsumerPerField).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#addFieldToFlush(TermVectorsConsumerPerField).mjava","sourceNew":"  void addFieldToFlush(TermVectorsConsumerPerField fieldToFlush) {\n    if (perFields == null) {\n      perFields = new TermVectorsConsumerPerField[1];\n    } else if (numVectorFields == perFields.length) {\n      int newSize = ArrayUtil.oversize(numVectorFields + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      TermVectorsConsumerPerField[] newArray = new TermVectorsConsumerPerField[newSize];\n      System.arraycopy(perFields, 0, newArray, 0, numVectorFields);\n      perFields = newArray;\n    }\n\n    perFields[numVectorFields++] = fieldToFlush;\n  }\n\n","sourceOld":"  void addFieldToFlush(TermVectorsConsumerPerField fieldToFlush) {\n    if (numVectorFields == perFields.length) {\n      int newSize = ArrayUtil.oversize(numVectorFields + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      TermVectorsConsumerPerField[] newArray = new TermVectorsConsumerPerField[newSize];\n      System.arraycopy(perFields, 0, newArray, 0, numVectorFields);\n      perFields = newArray;\n    }\n\n    perFields[numVectorFields++] = fieldToFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4851f51f54c38a114862c7c4b92fb9e2d20e2bdf","date":1370604663,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#addFieldToFlush(TermVectorsConsumerPerField).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#addFieldToFlush(TermVectorsConsumerPerField).mjava","sourceNew":"  void addFieldToFlush(TermVectorsConsumerPerField fieldToFlush) {\n    if (numVectorFields == perFields.length) {\n      int newSize = ArrayUtil.oversize(numVectorFields + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      TermVectorsConsumerPerField[] newArray = new TermVectorsConsumerPerField[newSize];\n      System.arraycopy(perFields, 0, newArray, 0, numVectorFields);\n      perFields = newArray;\n    }\n\n    perFields[numVectorFields++] = fieldToFlush;\n  }\n\n","sourceOld":"  void addFieldToFlush(TermVectorsConsumerPerField fieldToFlush) {\n    if (perFields == null) {\n      perFields = new TermVectorsConsumerPerField[1];\n    } else if (numVectorFields == perFields.length) {\n      int newSize = ArrayUtil.oversize(numVectorFields + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      TermVectorsConsumerPerField[] newArray = new TermVectorsConsumerPerField[newSize];\n      System.arraycopy(perFields, 0, newArray, 0, numVectorFields);\n      perFields = newArray;\n    }\n\n    perFields[numVectorFields++] = fieldToFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34f20fcb907a484d95d88000e78f6ba736452608":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4851f51f54c38a114862c7c4b92fb9e2d20e2bdf":["34f20fcb907a484d95d88000e78f6ba736452608"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4851f51f54c38a114862c7c4b92fb9e2d20e2bdf"]},"commit2Childs":{"34f20fcb907a484d95d88000e78f6ba736452608":["4851f51f54c38a114862c7c4b92fb9e2d20e2bdf"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["34f20fcb907a484d95d88000e78f6ba736452608"],"4851f51f54c38a114862c7c4b92fb9e2d20e2bdf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}