{"path":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(Config).mjava","commits":[{"id":"303b28b90016c2de1b5870759794476dbf4fd6ce","date":1206052767,"type":0,"author":"Mike Klaas","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(Config).mjava","pathOld":"/dev/null","sourceNew":"  public void initalize( final Config config )\n  {\n    formatters.clear();\n    fragmenters.clear();\n    \n    // Load the fragmenters\n    String xpath = \"highlighting/fragmenter\";\n    NamedListPluginLoader<SolrFragmenter> fragloader = new NamedListPluginLoader<SolrFragmenter>( xpath, fragmenters );\n    SolrFragmenter frag = fragloader.load( config.getResourceLoader(), (NodeList)config.evaluate( xpath, XPathConstants.NODESET ) );\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    \n    // Load the formatters\n    xpath = \"highlighting/formatter\";\n    NamedListPluginLoader<SolrFormatter> fmtloader = new NamedListPluginLoader<SolrFormatter>( xpath, formatters );\n    SolrFormatter fmt = fmtloader.load( config.getResourceLoader(), (NodeList)config.evaluate( xpath, XPathConstants.NODESET ) );\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5d451f04bea3df3123dd3c3c2df8010d0f90c23","date":1244615057,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(Config).mjava","sourceNew":"  public void initalize( SolrConfig config) {\n    formatters.clear();\n    fragmenters.clear();\n\n    // Load the fragmenters\n    ResourceLoader loader= config.getResourceLoader();\n    SolrFragmenter frag = null;\n    for (SolrConfig.PluginInfo info : config.getHighlightingFragmenterInfo()) {\n      SolrFragmenter fragmenter = (SolrFragmenter) loader.newInstance(info.className);\n      fragmenter.init(info.initArgs);\n      if(info.isDefault) frag = fragmenter;\n      fragmenters.put(info.name,fragmenter);\n    }\n\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    // Load the formatters\n    SolrFormatter fmt = null;\n    for (SolrConfig.PluginInfo info : config.getHighlightingFormatterInfo()) {\n      SolrFormatter formatter = (SolrFormatter) loader.newInstance(info.className);\n      formatter.init(info.initArgs);\n      formatters.put(info.name, formatter);\n      if(info.isDefault) fmt = formatter;\n    }\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n\n  }\n\n","sourceOld":"  public void initalize( final Config config )\n  {\n    formatters.clear();\n    fragmenters.clear();\n    \n    // Load the fragmenters\n    String xpath = \"highlighting/fragmenter\";\n    NamedListPluginLoader<SolrFragmenter> fragloader = new NamedListPluginLoader<SolrFragmenter>( xpath, fragmenters );\n    SolrFragmenter frag = fragloader.load( config.getResourceLoader(), (NodeList)config.evaluate( xpath, XPathConstants.NODESET ) );\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    \n    // Load the formatters\n    xpath = \"highlighting/formatter\";\n    NamedListPluginLoader<SolrFormatter> fmtloader = new NamedListPluginLoader<SolrFormatter>( xpath, formatters );\n    SolrFormatter fmt = fmtloader.load( config.getResourceLoader(), (NodeList)config.evaluate( xpath, XPathConstants.NODESET ) );\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"e5d451f04bea3df3123dd3c3c2df8010d0f90c23":["303b28b90016c2de1b5870759794476dbf4fd6ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"303b28b90016c2de1b5870759794476dbf4fd6ce":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["303b28b90016c2de1b5870759794476dbf4fd6ce"],"e5d451f04bea3df3123dd3c3c2df8010d0f90c23":[],"303b28b90016c2de1b5870759794476dbf4fd6ce":["e5d451f04bea3df3123dd3c3c2df8010d0f90c23"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e5d451f04bea3df3123dd3c3c2df8010d0f90c23","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}