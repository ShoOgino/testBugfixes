{"path":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","commits":[{"id":"ff93c6759a7da468c20c64fb459f85bccd0af370","date":1249413002,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","pathOld":"/dev/null","sourceNew":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","sourceNew":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","sourceOld":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","sourceNew":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","sourceOld":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87c966e9308847938a7c905c2e46a56d8df788b8","date":1255035452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","sourceNew":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setSimilarity(similarity);\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","sourceOld":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, analyzer, true);\n    writer.setSimilarity(similarity);\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","sourceNew":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setAnalyzer(new PayloadAnalyzer()).setSimilarity(\n        similarity));\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","sourceOld":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setSimilarity(similarity);\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","sourceNew":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setSimilarity(similarity);\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","sourceOld":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setAnalyzer(new PayloadAnalyzer()).setSimilarity(\n        similarity));\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","sourceNew":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(\n        similarity));\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","sourceOld":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    PayloadAnalyzer analyzer = new PayloadAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setSimilarity(similarity);\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","sourceNew":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(\n        similarity));\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","sourceOld":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(\n        similarity));\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["ff93c6759a7da468c20c64fb459f85bccd0af370"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["ff93c6759a7da468c20c64fb459f85bccd0af370","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["87c966e9308847938a7c905c2e46a56d8df788b8"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"87c966e9308847938a7c905c2e46a56d8df788b8":["0a046c0c310bc77931fc8441bd920053b607dd14"],"ff93c6759a7da468c20c64fb459f85bccd0af370":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff93c6759a7da468c20c64fb459f85bccd0af370"],"0a046c0c310bc77931fc8441bd920053b607dd14":["87c966e9308847938a7c905c2e46a56d8df788b8"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"87c966e9308847938a7c905c2e46a56d8df788b8":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"ff93c6759a7da468c20c64fb459f85bccd0af370":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}