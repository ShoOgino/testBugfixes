{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testCustomQueryParserFuzzy().mjava","commits":[{"id":"ee76d213d935c68932ca13b55fa0a8a32bf6af1a","date":1343572717,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testCustomQueryParserFuzzy().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testCustomQueryParserFuzzy().mjava","sourceNew":"  public void testCustomQueryParserFuzzy() throws Exception {\n    try {\n      new QPTestParser(\"contents\", new MockAnalyzer(random(),\n          MockTokenizer.WHITESPACE, false)).parse(\"xunit~\");\n      fail(\"Fuzzy queries should not be allowed\");\n    } catch (ParseException expected) {\n      // expected exception\n    }\n  }\n\n","sourceOld":"  public void testCustomQueryParserFuzzy() throws Exception {\n    try {\n      new QPTestParser(\"contents\", new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).parse(\"xunit~\");\n      fail(\"Fuzzy queries should not be allowed\");\n    } catch (ParseException expected) {\n      // expected exception\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testCustomQueryParserFuzzy().mjava","pathOld":"/dev/null","sourceNew":"  public void testCustomQueryParserFuzzy() throws Exception {\n    try {\n      new QPTestParser(\"contents\", new MockAnalyzer(random(),\n          MockTokenizer.WHITESPACE, false)).parse(\"xunit~\");\n      fail(\"Fuzzy queries should not be allowed\");\n    } catch (ParseException expected) {\n      // expected exception\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testCustomQueryParserFuzzy().mjava","pathOld":"/dev/null","sourceNew":"  public void testCustomQueryParserFuzzy() throws Exception {\n    try {\n      new QPTestParser(\"contents\", new MockAnalyzer(random(),\n          MockTokenizer.WHITESPACE, false)).parse(\"xunit~\");\n      fail(\"Fuzzy queries should not be allowed\");\n    } catch (ParseException expected) {\n      // expected exception\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testCustomQueryParserFuzzy().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testCustomQueryParserFuzzy().mjava","sourceNew":"  // Fuzzy queries should not be allowed\n  public void testCustomQueryParserFuzzy() throws Exception {\n    expectThrows(ParseException.class, () -> {\n      new QPTestParser(\"contents\", new MockAnalyzer(random(),\n          MockTokenizer.WHITESPACE, false)).parse(\"xunit~\");\n    });\n  }\n\n","sourceOld":"  public void testCustomQueryParserFuzzy() throws Exception {\n    try {\n      new QPTestParser(\"contents\", new MockAnalyzer(random(),\n          MockTokenizer.WHITESPACE, false)).parse(\"xunit~\");\n      fail(\"Fuzzy queries should not be allowed\");\n    } catch (ParseException expected) {\n      // expected exception\n    }\n  }\n\n","bugFix":["105b8c63d8ae43de76f14005b62a5657a4b8d9ce","7cecbacd2f253331ff961f96749d7d28ac51bbbf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"05fe562aa248790944d43cdd478f512572835ba0":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","05fe562aa248790944d43cdd478f512572835ba0","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}