{"path":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","commits":[{"id":"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3","date":1282077658,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    return 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["61ab4111d25902ca08254bd3935ec801fbd3885f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e6752308dd2042c383f38182eb70ef1d4e449966","date":1282215512,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","sourceNew":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    return 0;\n  }\n\n","sourceOld":"  @Override\n  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"61ab4111d25902ca08254bd3935ec801fbd3885f","date":1291028825,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","sourceNew":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    // third criteria: term text\n    return second.string.compareTo(first.string);\n  }\n\n","sourceOld":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    return 0;\n  }\n\n","bugFix":["c7006f130a90f88aaa52ca7c0bfe4a204efef6b3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","sourceNew":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    // third criteria: term text\n    return second.string.compareTo(first.string);\n  }\n\n","sourceOld":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","pathOld":"/dev/null","sourceNew":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    // third criteria: term text\n    return second.string.compareTo(first.string);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","sourceNew":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    // third criteria: term text\n    return second.string.compareTo(first.string);\n  }\n\n","sourceOld":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    // third criteria: term text\n    return second.string.compareTo(first.string);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","sourceNew":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    // third criteria: term text\n    return second.string.compareTo(first.string);\n  }\n\n","sourceOld":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    // third criteria: term text\n    return second.string.compareTo(first.string);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SuggestWordFrequencyComparator#compare(SuggestWord,SuggestWord).mjava","sourceNew":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    // third criteria: term text\n    return second.string.compareTo(first.string);\n  }\n\n","sourceOld":"  public int compare(SuggestWord first, SuggestWord second) {\n    // first criteria: the frequency\n    if (first.freq > second.freq) {\n      return 1;\n    }\n    if (first.freq < second.freq) {\n      return -1;\n    }\n\n    // second criteria (if first criteria is equal): the score\n    if (first.score > second.score) {\n      return 1;\n    }\n    if (first.score < second.score) {\n      return -1;\n    }\n    // third criteria: term text\n    return second.string.compareTo(first.string);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e230a61047bc041516c811baa08a7174d6f8322a":["61ab4111d25902ca08254bd3935ec801fbd3885f"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["61ab4111d25902ca08254bd3935ec801fbd3885f","e230a61047bc041516c811baa08a7174d6f8322a"],"e6752308dd2042c383f38182eb70ef1d4e449966":["c7006f130a90f88aaa52ca7c0bfe4a204efef6b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","61ab4111d25902ca08254bd3935ec801fbd3885f"],"3bb13258feba31ab676502787ab2e1779f129b7a":["e6752308dd2042c383f38182eb70ef1d4e449966","61ab4111d25902ca08254bd3935ec801fbd3885f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"61ab4111d25902ca08254bd3935ec801fbd3885f":["e6752308dd2042c383f38182eb70ef1d4e449966"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["3bb13258feba31ab676502787ab2e1779f129b7a","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3":["e6752308dd2042c383f38182eb70ef1d4e449966"],"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7006f130a90f88aaa52ca7c0bfe4a204efef6b3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"e6752308dd2042c383f38182eb70ef1d4e449966":["3bb13258feba31ab676502787ab2e1779f129b7a","61ab4111d25902ca08254bd3935ec801fbd3885f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"61ab4111d25902ca08254bd3935ec801fbd3885f":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}