{"path":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAllVersionHaveCfsAndNocfs().mjava","commits":[{"id":"5a0b6886e871521dbc3495e30ea752689de9023d","date":1410451802,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAllVersionHaveCfsAndNocfs().mjava","pathOld":"/dev/null","sourceNew":"  public void testAllVersionHaveCfsAndNocfs() {\n    // ensure all tested versions with cfs also have nocfs\n    String[] files = new String[oldNames.length];\n    System.arraycopy(oldNames, 0, files, 0, oldNames.length);\n    Arrays.sort(files);\n    String prevFile = \"\";\n    for (String file : files) {\n      if (prevFile.endsWith(\".cfs\")) {\n        String prefix = prevFile.replace(\".cfs\", \"\");\n        assertEquals(\"Missing .nocfs for backcompat index \" + prefix, prefix + \".nocfs\", file);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec8882143e40fbd4aaa2cc02fc4abb1217eb24c7","date":1411591737,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAllVersionHaveCfsAndNocfs().mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAllVersionHaveCfsAndNocfs().mjava","sourceNew":"  public void testAllVersionHaveCfsAndNocfs() {\n    // ensure all tested versions with cfs also have nocfs\n    String[] files = new String[oldNames.length];\n    System.arraycopy(oldNames, 0, files, 0, oldNames.length);\n    Arrays.sort(files);\n    String prevFile = \"\";\n    for (String file : files) {\n      if (prevFile.endsWith(\"-cfs\")) {\n        String prefix = prevFile.replace(\"-cfs\", \"\");\n        assertEquals(\"Missing -nocfs for backcompat index \" + prefix, prefix + \"-nocfs\", file);\n      }\n    }\n  }\n\n","sourceOld":"  public void testAllVersionHaveCfsAndNocfs() {\n    // ensure all tested versions with cfs also have nocfs\n    String[] files = new String[oldNames.length];\n    System.arraycopy(oldNames, 0, files, 0, oldNames.length);\n    Arrays.sort(files);\n    String prevFile = \"\";\n    for (String file : files) {\n      if (prevFile.endsWith(\".cfs\")) {\n        String prefix = prevFile.replace(\".cfs\", \"\");\n        assertEquals(\"Missing .nocfs for backcompat index \" + prefix, prefix + \".nocfs\", file);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a0b6886e871521dbc3495e30ea752689de9023d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ec8882143e40fbd4aaa2cc02fc4abb1217eb24c7":["5a0b6886e871521dbc3495e30ea752689de9023d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec8882143e40fbd4aaa2cc02fc4abb1217eb24c7"]},"commit2Childs":{"5a0b6886e871521dbc3495e30ea752689de9023d":["ec8882143e40fbd4aaa2cc02fc4abb1217eb24c7"],"ec8882143e40fbd4aaa2cc02fc4abb1217eb24c7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a0b6886e871521dbc3495e30ea752689de9023d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}