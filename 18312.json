{"path":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetJoinDomain.TermFacet#randomRefineParam(Random,Integer,Integer).mjava","commits":[{"id":"92910727264a23a47b7a6c94b0f75d655537b9ea","date":1540414655,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetJoinDomain.TermFacet#randomRefineParam(Random,Integer,Integer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudJSONFacetJoinDomain.TermFacet#randomRefineParam(Random,Integer,Integer).mjava","sourceNew":"    /**\n     * picks a random value for the \"refine\" param, that is garunteed to be suitable for\n     * the specified limit &amp; overrequest params.\n     *\n     * @return a value to specify in the request, or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     * @see #randomOverrequestParam\n     * @see #UNIQUE_FIELD_VALS\n     */\n    public static Boolean randomRefineParam(Random r, Integer limitParam, Integer overrequestParam) {\n      if (isRefinementNeeded(limitParam, overrequestParam)) {\n        return true;\n      }\n\n      // refinement is not required\n      if (0 == r.nextInt(10)) { // once in a while, turn on refinement even if it isn't needed.\n        return true;\n      }\n      // explicitly or implicitly indicate refinement is not needed\n      return r.nextBoolean() ? false : null;\n    }\n\n","sourceOld":"    /**\n     * picks a random value for the \"refine\" param, that is garunteed to be suitable for\n     * the specified limit &amp; overrequest params.\n     *\n     * @return a value to specify in the request, or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     * @see #randomOverrequestParam\n     * @see #UNIQUE_FIELD_VALS\n     */\n    public static Boolean randomRefineParam(Random r, Integer limitParam, Integer overrequestParam) {\n      if (isRefinementNeeded(limitParam, overrequestParam)) {\n        return true;\n      }\n\n      // refinement is not required\n      if (0 == r.nextInt(10)) { // once in a while, turn on refinement even if it isn't needed.\n        return true;\n      }\n      // explicitly or implicitly indicate refinement is not needed\n      return r.nextBoolean() ? false : null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92910727264a23a47b7a6c94b0f75d655537b9ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["92910727264a23a47b7a6c94b0f75d655537b9ea"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["92910727264a23a47b7a6c94b0f75d655537b9ea"],"92910727264a23a47b7a6c94b0f75d655537b9ea":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}