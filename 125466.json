{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#create(TokenStream).mjava","commits":[{"id":"a05464f071eda06541fd9ed6f04aaca99b131dfa","date":1343110729,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#create(TokenStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#create(TokenStream).mjava","sourceNew":"  @Override\n  public TokenStream create(TokenStream input) {\n    // if the fst is null, it means there's actually no synonyms... just return the original stream\n    // as there is nothing to do here.\n    return map.fst == null ? input : new SynonymFilter(input, map, ignoreCase);\n  }\n\n","sourceOld":"  @Override\n  public TokenStream create(TokenStream input) {\n    // if the fst is null, it means there's actually no synonyms... just return the original stream\n    // as there is nothing to do here.\n    return map.fst == null ? input : new SynonymFilter(input, map, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#create(TokenStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#create(TokenStream).mjava","sourceNew":"  @Override\n  public TokenStream create(TokenStream input) {\n    // if the fst is null, it means there's actually no synonyms... just return the original stream\n    // as there is nothing to do here.\n    return map.fst == null ? input : new SynonymFilter(input, map, ignoreCase);\n  }\n\n","sourceOld":"  @Override\n  public TokenStream create(TokenStream input) {\n    // if the fst is null, it means there's actually no synonyms... just return the original stream\n    // as there is nothing to do here.\n    return map.fst == null ? input : new SynonymFilter(input, map, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#create(TokenStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#create(TokenStream).mjava","sourceNew":"  @Override\n  public TokenStream create(TokenStream input) {\n    // if the fst is null, it means there's actually no synonyms... just return the original stream\n    // as there is nothing to do here.\n    return map.fst == null ? input : new SynonymFilter(input, map, ignoreCase);\n  }\n\n","sourceOld":"  @Override\n  public TokenStream create(TokenStream input) {\n    // if the fst is null, it means there's actually no synonyms... just return the original stream\n    // as there is nothing to do here.\n    return map.fst == null ? input : new SynonymFilter(input, map, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#create(TokenStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#create(TokenStream).mjava","sourceNew":"  @Override\n  public TokenStream create(TokenStream input) {\n    // if the fst is null, it means there's actually no synonyms... just return the original stream\n    // as there is nothing to do here.\n    return map.fst == null ? input : new SynonymFilter(input, map, ignoreCase);\n  }\n\n","sourceOld":"  @Override\n  public TokenStream create(TokenStream input) {\n    // if the fst is null, it means there's actually no synonyms... just return the original stream\n    // as there is nothing to do here.\n    return map.fst == null ? input : new SynonymFilter(input, map, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a05464f071eda06541fd9ed6f04aaca99b131dfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a05464f071eda06541fd9ed6f04aaca99b131dfa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a1a22b1ad88b436661458df567f3fdb446392a4"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","a05464f071eda06541fd9ed6f04aaca99b131dfa","5a1a22b1ad88b436661458df567f3fdb446392a4"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"a05464f071eda06541fd9ed6f04aaca99b131dfa":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}