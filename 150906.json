{"path":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","commits":[{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"/dev/null","sourceNew":"  protected void setUp() {\n    DocHelper.setupDoc(doc1);\n    DocHelper.writeDoc(merge1Dir, merge1Segment, doc1);\n    DocHelper.setupDoc(doc2);\n    DocHelper.writeDoc(merge2Dir, merge2Segment, doc2);\n    try {\n      reader1 = new SegmentReader(new SegmentInfo(merge1Segment, 1, merge1Dir));\n      reader2 = new SegmentReader(new SegmentInfo(merge2Segment, 1, merge2Dir));\n    } catch (IOException e) {\n      e.printStackTrace();                                                      \n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e5d88b55f1b57feab6da94a5c635a224539bd2a","date":1095877947,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  protected void setUp() {\n    DocHelper.setupDoc(doc1);\n    DocHelper.writeDoc(merge1Dir, merge1Segment, doc1);\n    DocHelper.setupDoc(doc2);\n    DocHelper.writeDoc(merge2Dir, merge2Segment, doc2);\n    try {\n      reader1 = SegmentReader.get(new SegmentInfo(merge1Segment, 1, merge1Dir));\n      reader2 = SegmentReader.get(new SegmentInfo(merge2Segment, 1, merge2Dir));\n    } catch (IOException e) {\n      e.printStackTrace();                                                      \n    }\n\n  }\n\n","sourceOld":"  protected void setUp() {\n    DocHelper.setupDoc(doc1);\n    DocHelper.writeDoc(merge1Dir, merge1Segment, doc1);\n    DocHelper.setupDoc(doc2);\n    DocHelper.writeDoc(merge2Dir, merge2Segment, doc2);\n    try {\n      reader1 = new SegmentReader(new SegmentInfo(merge1Segment, 1, merge1Dir));\n      reader2 = new SegmentReader(new SegmentInfo(merge2Segment, 1, merge2Dir));\n    } catch (IOException e) {\n      e.printStackTrace();                                                      \n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1229e4509cad6bf268c0fe18199b63a72216c66b","date":1120256033,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  protected void setUp() throws IOException {\n    DocHelper.setupDoc(doc1);\n    DocHelper.writeDoc(merge1Dir, merge1Segment, doc1);\n    DocHelper.setupDoc(doc2);\n    DocHelper.writeDoc(merge2Dir, merge2Segment, doc2);\n    reader1 = SegmentReader.get(new SegmentInfo(merge1Segment, 1, merge1Dir));\n    reader2 = SegmentReader.get(new SegmentInfo(merge2Segment, 1, merge2Dir));\n  }\n\n","sourceOld":"  protected void setUp() {\n    DocHelper.setupDoc(doc1);\n    DocHelper.writeDoc(merge1Dir, merge1Segment, doc1);\n    DocHelper.setupDoc(doc2);\n    DocHelper.writeDoc(merge2Dir, merge2Segment, doc2);\n    try {\n      reader1 = SegmentReader.get(new SegmentInfo(merge1Segment, 1, merge1Dir));\n      reader2 = SegmentReader.get(new SegmentInfo(merge2Segment, 1, merge2Dir));\n    } catch (IOException e) {\n      e.printStackTrace();                                                      \n    }\n\n  }\n\n","bugFix":null,"bugIntro":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b20bed3506d9b128ea30a7a62e2a8b1d7df697b0","date":1185569419,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  protected void setUp() throws IOException {\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(merge2Dir, doc2);\n    reader1 = SegmentReader.get(info1);\n    reader2 = SegmentReader.get(info2);\n  }\n\n","sourceOld":"  protected void setUp() throws IOException {\n    DocHelper.setupDoc(doc1);\n    DocHelper.writeDoc(merge1Dir, merge1Segment, doc1);\n    DocHelper.setupDoc(doc2);\n    DocHelper.writeDoc(merge2Dir, merge2Segment, doc2);\n    reader1 = SegmentReader.get(new SegmentInfo(merge1Segment, 1, merge1Dir));\n    reader2 = SegmentReader.get(new SegmentInfo(merge2Segment, 1, merge2Dir));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"290c401c31db375e771805c3ba7ac5f64c7370dc","date":1192034795,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(merge2Dir, doc2);\n    reader1 = SegmentReader.get(info1);\n    reader2 = SegmentReader.get(info2);\n  }\n\n","sourceOld":"  protected void setUp() throws IOException {\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(merge2Dir, doc2);\n    reader1 = SegmentReader.get(info1);\n    reader2 = SegmentReader.get(info2);\n  }\n\n","bugFix":["1229e4509cad6bf268c0fe18199b63a72216c66b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1","date":1255502337,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(merge2Dir, doc2);\n    reader1 = SegmentReader.get(true, info1, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    reader2 = SegmentReader.get(true, info2, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(merge2Dir, doc2);\n    reader1 = SegmentReader.get(info1);\n    reader2 = SegmentReader.get(info2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(merge2Dir, doc2);\n    reader1 = SegmentReader.get(true, info1, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    reader2 = SegmentReader.get(true, info2, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(merge2Dir, doc2);\n    reader1 = SegmentReader.get(true, info1, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    reader2 = SegmentReader.get(true, info2, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(merge2Dir, doc2);\n    reader1 = SegmentReader.get(true, info1, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    reader2 = SegmentReader.get(true, info2, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(merge2Dir, doc2);\n    reader1 = SegmentReader.get(true, info1, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n    reader2 = SegmentReader.get(true, info2, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"],"b20bed3506d9b128ea30a7a62e2a8b1d7df697b0":["1229e4509cad6bf268c0fe18199b63a72216c66b"],"6e5d88b55f1b57feab6da94a5c635a224539bd2a":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"290c401c31db375e771805c3ba7ac5f64c7370dc":["b20bed3506d9b128ea30a7a62e2a8b1d7df697b0"],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"1229e4509cad6bf268c0fe18199b63a72216c66b":["6e5d88b55f1b57feab6da94a5c635a224539bd2a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["6e5d88b55f1b57feab6da94a5c635a224539bd2a"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b20bed3506d9b128ea30a7a62e2a8b1d7df697b0":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"6e5d88b55f1b57feab6da94a5c635a224539bd2a":["1229e4509cad6bf268c0fe18199b63a72216c66b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"290c401c31db375e771805c3ba7ac5f64c7370dc":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"1229e4509cad6bf268c0fe18199b63a72216c66b":["b20bed3506d9b128ea30a7a62e2a8b1d7df697b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}