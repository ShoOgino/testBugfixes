{"path":"src/java/org/apache/solr/search/DisMaxQParser#getPhraseQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser).mjava","commits":[{"id":"50de217601652b8d4bff9f8ac567455920c85891","date":1243497655,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/search/DisMaxQParser#getPhraseQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser).mjava","pathOld":"/dev/null","sourceNew":"  protected Query getPhraseQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser pp) throws ParseException {\n    /* * * Add on Phrases for the Query * * */\n\n    /* build up phrase boosting queries */\n\n    /* if the userQuery already has some quotes, strip them out.\n     * we've already done the phrases they asked for in the main\n     * part of the query, this is to boost docs that may not have\n     * matched those phrases but do match looser phrases.\n    */\n    String userPhraseQuery = userQuery.replace(\"\\\"\", \"\");\n    return pp.parse(\"\\\"\" + userPhraseQuery + \"\\\"\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/DisMaxQParser#getPhraseQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser).mjava","pathOld":"src/java/org/apache/solr/search/DisMaxQParser#getPhraseQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser).mjava","sourceNew":"  protected Query getPhraseQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser pp) throws ParseException {\n    /* * * Add on Phrases for the Query * * */\n\n    /* build up phrase boosting queries */\n\n    /* if the userQuery already has some quotes, strip them out.\n     * we've already done the phrases they asked for in the main\n     * part of the query, this is to boost docs that may not have\n     * matched those phrases but do match looser phrases.\n    */\n    String userPhraseQuery = userQuery.replace(\"\\\"\", \"\");\n    return pp.parse(\"\\\"\" + userPhraseQuery + \"\\\"\");\n  }\n\n","sourceOld":"  protected Query getPhraseQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser pp) throws ParseException {\n    /* * * Add on Phrases for the Query * * */\n\n    /* build up phrase boosting queries */\n\n    /* if the userQuery already has some quotes, strip them out.\n     * we've already done the phrases they asked for in the main\n     * part of the query, this is to boost docs that may not have\n     * matched those phrases but do match looser phrases.\n    */\n    String userPhraseQuery = userQuery.replace(\"\\\"\", \"\");\n    return pp.parse(\"\\\"\" + userPhraseQuery + \"\\\"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["50de217601652b8d4bff9f8ac567455920c85891"],"50de217601652b8d4bff9f8ac567455920c85891":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["50de217601652b8d4bff9f8ac567455920c85891"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"50de217601652b8d4bff9f8ac567455920c85891":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}