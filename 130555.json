{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MonteCarloEvaluator#evaluate(Tuple).mjava","commits":[{"id":"a88ab669a0dfc238c5cdbd5bac2dd6ea147db95e","date":1506186198,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MonteCarloEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object evaluate(Tuple tuple) throws IOException {\n    try{\n\n      StreamEvaluator function = containedEvaluators.get(0);\n      StreamEvaluator iterationsEvaluator = containedEvaluators.get(1);\n      Number itNum = (Number)iterationsEvaluator.evaluate(tuple);\n      int it = itNum.intValue();\n      List<Number> results = new ArrayList();\n      for(int i=0; i<it; i++) {\n        Number result = (Number)function.evaluate(tuple);\n        results.add(result);\n      }\n\n      return results;\n    }\n    catch(UncheckedIOException e){\n      throw e.getCause();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8557552f7ab8e381c4d1a941a269e14f11e779d","date":1506320429,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MonteCarloEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object evaluate(Tuple tuple) throws IOException {\n    try{\n\n      StreamEvaluator function = containedEvaluators.get(0);\n      StreamEvaluator iterationsEvaluator = containedEvaluators.get(1);\n      Number itNum = (Number)iterationsEvaluator.evaluate(tuple);\n      int it = itNum.intValue();\n      List<Number> results = new ArrayList();\n      for(int i=0; i<it; i++) {\n        Number result = (Number)function.evaluate(tuple);\n        results.add(result);\n      }\n\n      return results;\n    }\n    catch(UncheckedIOException e){\n      throw e.getCause();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MonteCarloEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object evaluate(Tuple tuple) throws IOException {\n    try{\n\n      StreamEvaluator function = containedEvaluators.get(0);\n      StreamEvaluator iterationsEvaluator = containedEvaluators.get(1);\n      Number itNum = (Number)iterationsEvaluator.evaluate(tuple);\n      int it = itNum.intValue();\n      List<Number> results = new ArrayList();\n      for(int i=0; i<it; i++) {\n        Number result = (Number)function.evaluate(tuple);\n        results.add(result);\n      }\n\n      return results;\n    }\n    catch(UncheckedIOException e){\n      throw e.getCause();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8f3f292c7ac656734ed297fe52be0e012997e64","date":1523378182,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MonteCarloEvaluator#evaluate(Tuple).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MonteCarloEvaluator#evaluate(Tuple).mjava","sourceNew":"  @Override\n  public Object evaluate(Tuple tuple) throws IOException {\n    try {\n\n      StreamEvaluator function = containedEvaluators.get(0);\n      StreamEvaluator iterationsEvaluator = containedEvaluators.get(1);\n      Number itNum = (Number)iterationsEvaluator.evaluate(tuple);\n      int it = itNum.intValue();\n      List<Number> results = new ArrayList();\n      for(int i=0; i<it; i++) {\n        populateVariables(tuple);\n        Number result = (Number)function.evaluate(tuple);\n        results.add(result);\n      }\n\n      return results;\n    }\n    catch(UncheckedIOException e){\n      throw e.getCause();\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object evaluate(Tuple tuple) throws IOException {\n    try{\n\n      StreamEvaluator function = containedEvaluators.get(0);\n      StreamEvaluator iterationsEvaluator = containedEvaluators.get(1);\n      Number itNum = (Number)iterationsEvaluator.evaluate(tuple);\n      int it = itNum.intValue();\n      List<Number> results = new ArrayList();\n      for(int i=0; i<it; i++) {\n        Number result = (Number)function.evaluate(tuple);\n        results.add(result);\n      }\n\n      return results;\n    }\n    catch(UncheckedIOException e){\n      throw e.getCause();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885","date":1591579911,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MonteCarloEvaluator#evaluate(Tuple).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MonteCarloEvaluator#evaluate(Tuple).mjava","sourceNew":"  @Override\n  public Object evaluate(Tuple tuple) throws IOException {\n    try {\n\n      StreamEvaluator function = containedEvaluators.get(0);\n      StreamEvaluator iterationsEvaluator = containedEvaluators.get(1);\n      Number itNum = (Number)iterationsEvaluator.evaluate(tuple);\n      int it = itNum.intValue();\n      List<Number> results = new ArrayList<>();\n      for(int i=0; i<it; i++) {\n        populateVariables(tuple);\n        Number result = (Number)function.evaluate(tuple);\n        results.add(result);\n      }\n\n      return results;\n    }\n    catch(UncheckedIOException e){\n      throw e.getCause();\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object evaluate(Tuple tuple) throws IOException {\n    try {\n\n      StreamEvaluator function = containedEvaluators.get(0);\n      StreamEvaluator iterationsEvaluator = containedEvaluators.get(1);\n      Number itNum = (Number)iterationsEvaluator.evaluate(tuple);\n      int it = itNum.intValue();\n      List<Number> results = new ArrayList();\n      for(int i=0; i<it; i++) {\n        populateVariables(tuple);\n        Number result = (Number)function.evaluate(tuple);\n        results.add(result);\n      }\n\n      return results;\n    }\n    catch(UncheckedIOException e){\n      throw e.getCause();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["d8f3f292c7ac656734ed297fe52be0e012997e64"],"d8f3f292c7ac656734ed297fe52be0e012997e64":["b8557552f7ab8e381c4d1a941a269e14f11e779d"],"b8557552f7ab8e381c4d1a941a269e14f11e779d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a88ab669a0dfc238c5cdbd5bac2dd6ea147db95e"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b8557552f7ab8e381c4d1a941a269e14f11e779d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a88ab669a0dfc238c5cdbd5bac2dd6ea147db95e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885"]},"commit2Childs":{"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8f3f292c7ac656734ed297fe52be0e012997e64":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885"],"b8557552f7ab8e381c4d1a941a269e14f11e779d":["d8f3f292c7ac656734ed297fe52be0e012997e64","6240b74b884c5587f2a4062dd27d6c32bf228889"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b8557552f7ab8e381c4d1a941a269e14f11e779d","6240b74b884c5587f2a4062dd27d6c32bf228889","a88ab669a0dfc238c5cdbd5bac2dd6ea147db95e"],"a88ab669a0dfc238c5cdbd5bac2dd6ea147db95e":["b8557552f7ab8e381c4d1a941a269e14f11e779d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}