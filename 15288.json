{"path":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#addQuery(Query,int).mjava","commits":[{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#addQuery(Query,int).mjava","pathOld":"/dev/null","sourceNew":"  public void addQuery(Query query, int docIDUpto) {\n    queries.put(query, docIDUpto);\n    bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["32c6b4a2d2cf61fe3748b0e55e793b4c5c42fb8c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#addQuery(Query,int).mjava","pathOld":"/dev/null","sourceNew":"  public void addQuery(Query query, int docIDUpto) {\n    queries.put(query, docIDUpto);\n    bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#addQuery(Query,int).mjava","pathOld":"/dev/null","sourceNew":"  public void addQuery(Query query, int docIDUpto) {\n    queries.put(query, docIDUpto);\n    bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"32c6b4a2d2cf61fe3748b0e55e793b4c5c42fb8c","date":1295883355,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#addQuery(Query,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#addQuery(Query,int).mjava","sourceNew":"  public void addQuery(Query query, int docIDUpto) {\n    Integer current = queries.put(query, docIDUpto);\n    // increment bytes used only if the query wasn't added so far.\n    if (current == null) {\n      bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n    }\n  }\n\n","sourceOld":"  public void addQuery(Query query, int docIDUpto) {\n    queries.put(query, docIDUpto);\n    bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n  }\n\n","bugFix":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#addQuery(Query,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#addQuery(Query,int).mjava","sourceNew":"  public void addQuery(Query query, int docIDUpto) {\n    Integer current = queries.put(query, docIDUpto);\n    // increment bytes used only if the query wasn't added so far.\n    if (current == null) {\n      bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n    }\n  }\n\n","sourceOld":"  public void addQuery(Query query, int docIDUpto) {\n    queries.put(query, docIDUpto);\n    bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BufferedDeletes#addQuery(Query,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#addQuery(Query,int).mjava","sourceNew":"  public void addQuery(Query query, int docIDUpto) {\n    Integer current = queries.put(query, docIDUpto);\n    // increment bytes used only if the query wasn't added so far.\n    if (current == null) {\n      bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n    }\n  }\n\n","sourceOld":"  public void addQuery(Query query, int docIDUpto) {\n    Integer current = queries.put(query, docIDUpto);\n    // increment bytes used only if the query wasn't added so far.\n    if (current == null) {\n      bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#addQuery(Query,int).mjava","sourceNew":null,"sourceOld":"  public void addQuery(Query query, int docIDUpto) {\n    queries.put(query, docIDUpto);\n    bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/BufferedDeletes#addQuery(Query,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#addQuery(Query,int).mjava","sourceNew":"  public void addQuery(Query query, int docIDUpto) {\n    Integer current = queries.put(query, docIDUpto);\n    // increment bytes used only if the query wasn't added so far.\n    if (current == null) {\n      bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n    }\n  }\n\n","sourceOld":"  public void addQuery(Query query, int docIDUpto) {\n    Integer current = queries.put(query, docIDUpto);\n    // increment bytes used only if the query wasn't added so far.\n    if (current == null) {\n      bytesUsed.addAndGet(BYTES_PER_DEL_QUERY);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","c19f985e36a65cc969e8e564fe337a0d41512075"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"c19f985e36a65cc969e8e564fe337a0d41512075":["32c6b4a2d2cf61fe3748b0e55e793b4c5c42fb8c"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","c19f985e36a65cc969e8e564fe337a0d41512075"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c19f985e36a65cc969e8e564fe337a0d41512075"],"32c6b4a2d2cf61fe3748b0e55e793b4c5c42fb8c":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","32c6b4a2d2cf61fe3748b0e55e793b4c5c42fb8c"]},"commit2Childs":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","32c6b4a2d2cf61fe3748b0e55e793b4c5c42fb8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"c19f985e36a65cc969e8e564fe337a0d41512075":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"32c6b4a2d2cf61fe3748b0e55e793b4c5c42fb8c":["c19f985e36a65cc969e8e564fe337a0d41512075","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}