{"path":"lucene/backwards/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","sourceNew":"  /** Construct a SpanOrQuery merging the provided clauses. */\n  public SpanOrQuery(SpanQuery... clauses) {\n\n    // copy clauses array into an ArrayList\n    this.clauses = new ArrayList<SpanQuery>(clauses.length);\n    for (int i = 0; i < clauses.length; i++) {\n      SpanQuery clause = clauses[i];\n      if (i == 0) {                               // check field\n        field = clause.getField();\n      } else if (!clause.getField().equals(field)) {\n        throw new IllegalArgumentException(\"Clauses must have same field.\");\n      }\n      this.clauses.add(clause);\n    }\n  }\n\n","sourceOld":"  /** Construct a SpanOrQuery merging the provided clauses. */\n  public SpanOrQuery(SpanQuery... clauses) {\n\n    // copy clauses array into an ArrayList\n    this.clauses = new ArrayList<SpanQuery>(clauses.length);\n    for (int i = 0; i < clauses.length; i++) {\n      SpanQuery clause = clauses[i];\n      if (i == 0) {                               // check field\n        field = clause.getField();\n      } else if (!clause.getField().equals(field)) {\n        throw new IllegalArgumentException(\"Clauses must have same field.\");\n      }\n      this.clauses.add(clause);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","sourceNew":null,"sourceOld":"  /** Construct a SpanOrQuery merging the provided clauses. */\n  public SpanOrQuery(SpanQuery... clauses) {\n\n    // copy clauses array into an ArrayList\n    this.clauses = new ArrayList<SpanQuery>(clauses.length);\n    for (int i = 0; i < clauses.length; i++) {\n      SpanQuery clause = clauses[i];\n      if (i == 0) {                               // check field\n        field = clause.getField();\n      } else if (!clause.getField().equals(field)) {\n        throw new IllegalArgumentException(\"Clauses must have same field.\");\n      }\n      this.clauses.add(clause);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}