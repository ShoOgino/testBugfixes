{"path":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/NorwegianStemmer#stem().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/NorwegianStemmer#stem().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/NorwegianStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 72\n            // do, line 74\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 74\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 75\n            limit_backward = cursor; cursor = limit;\n            // (, line 75\n            // do, line 76\n            v_2 = limit - cursor;\n            lab1: do {\n                // call main_suffix, line 76\n                if (!r_main_suffix())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = limit - v_2;\n            // do, line 77\n            v_3 = limit - cursor;\n            lab2: do {\n                // call consonant_pair, line 77\n                if (!r_consonant_pair())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 78\n            v_4 = limit - cursor;\n            lab3: do {\n                // call other_suffix, line 78\n                if (!r_other_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            cursor = limit_backward;            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 72\n            // do, line 74\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 74\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 75\n            limit_backward = cursor; cursor = limit;\n            // (, line 75\n            // do, line 76\n            v_2 = limit - cursor;\n            lab1: do {\n                // call main_suffix, line 76\n                if (!r_main_suffix())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = limit - v_2;\n            // do, line 77\n            v_3 = limit - cursor;\n            lab2: do {\n                // call consonant_pair, line 77\n                if (!r_consonant_pair())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 78\n            v_4 = limit - cursor;\n            lab3: do {\n                // call other_suffix, line 78\n                if (!r_other_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            cursor = limit_backward;            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/NorwegianStemmer#stem().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/NorwegianStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 72\n            // do, line 74\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 74\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 75\n            limit_backward = cursor; cursor = limit;\n            // (, line 75\n            // do, line 76\n            v_2 = limit - cursor;\n            lab1: do {\n                // call main_suffix, line 76\n                if (!r_main_suffix())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = limit - v_2;\n            // do, line 77\n            v_3 = limit - cursor;\n            lab2: do {\n                // call consonant_pair, line 77\n                if (!r_consonant_pair())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 78\n            v_4 = limit - cursor;\n            lab3: do {\n                // call other_suffix, line 78\n                if (!r_other_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            cursor = limit_backward;            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 72\n            // do, line 74\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 74\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 75\n            limit_backward = cursor; cursor = limit;\n            // (, line 75\n            // do, line 76\n            v_2 = limit - cursor;\n            lab1: do {\n                // call main_suffix, line 76\n                if (!r_main_suffix())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = limit - v_2;\n            // do, line 77\n            v_3 = limit - cursor;\n            lab2: do {\n                // call consonant_pair, line 77\n                if (!r_consonant_pair())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 78\n            v_4 = limit - cursor;\n            lab3: do {\n                // call other_suffix, line 78\n                if (!r_other_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            cursor = limit_backward;            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}