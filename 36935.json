{"path":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","commits":[{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/params/DefaultFacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list term is $facets:$fulltree$\",\n        new Term(\"$facets\", \"$fulltree$\"), dfip.getCategoryListParams(null).getTerm());\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    CategoryListParams clParams = dfip.getCategoryListParams(null);\n    assertEquals(\"partition for all ordinals is the first\", \"$fulltree$\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, clParams , 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"$fulltree$\", PartitionsUtils.partitionName(clParams, 0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        \"$fulltree$1\", PartitionsUtils.partitionName(clParams, 1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = new DefaultFacetIndexingParams();\n    assertNotNull(\"Missing default category list\", dfip\n        .getAllCategoryListParams());\n    assertEquals(\n        \"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip\n            .getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\n        \"Expected default category list term is $facets:$fulltree$\",\n        new Term(\"$facets\", \"$fulltree$\"), dfip.getCategoryListParams(\n            null).getTerm());\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    CategoryListParams clParams = dfip.getCategoryListParams(null);\n    assertEquals(\"partition for all ordinals is the first\", \"$fulltree$\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, clParams , 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"$fulltree$\", PartitionsUtils.partitionName(clParams, 0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        \"$fulltree$1\", PartitionsUtils.partitionName(clParams, 1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list term is $facets:$fulltree$\",\n        new Term(\"$facets\", \"$fulltree$\"), dfip.getCategoryListParams(null).getTerm());\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    CategoryListParams clParams = dfip.getCategoryListParams(null);\n    assertEquals(\"partition for all ordinals is the first\", \"$fulltree$\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, clParams , 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"$fulltree$\", PartitionsUtils.partitionName(clParams, 0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        \"$fulltree$1\", PartitionsUtils.partitionName(clParams, 1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    CategoryListParams clParams = dfip.getCategoryListParams(null);\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list term is $facets:$fulltree$\",\n        new Term(\"$facets\", \"$fulltree$\"), dfip.getCategoryListParams(null).getTerm());\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    CategoryListParams clParams = dfip.getCategoryListParams(null);\n    assertEquals(\"partition for all ordinals is the first\", \"$fulltree$\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, clParams , 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"$fulltree$\", PartitionsUtils.partitionName(clParams, 0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        \"$fulltree$1\", PartitionsUtils.partitionName(clParams, 1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    CategoryListParams clParams = dfip.getCategoryListParams(null);\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list term is $facets:$fulltree$\",\n        new Term(\"$facets\", \"$fulltree$\"), dfip.getCategoryListParams(null).getTerm());\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    CategoryListParams clParams = dfip.getCategoryListParams(null);\n    assertEquals(\"partition for all ordinals is the first\", \"$fulltree$\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, clParams , 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"$fulltree$\", PartitionsUtils.partitionName(clParams, 0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        \"$fulltree$1\", PartitionsUtils.partitionName(clParams, 1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ffa18fad2d839bbae5054931722c97d04c10258","date":1358772877,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    CategoryListParams clParams = dfip.getCategoryListParams(null);\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    CategoryListParams clParams = dfip.getCategoryListParams(null);\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"607428da722dcb3e86bbd11c63de8986e6275c36":["1ffa18fad2d839bbae5054931722c97d04c10258"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1ffa18fad2d839bbae5054931722c97d04c10258":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"07155cdd910937cdf6877e48884d5782845c8b8b":["c4015cd39dff8d4dec562d909f9766debac53aa6","1ffa18fad2d839bbae5054931722c97d04c10258"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c4015cd39dff8d4dec562d909f9766debac53aa6"],"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["07155cdd910937cdf6877e48884d5782845c8b8b"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"1ffa18fad2d839bbae5054931722c97d04c10258":["607428da722dcb3e86bbd11c63de8986e6275c36","07155cdd910937cdf6877e48884d5782845c8b8b"],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["c4015cd39dff8d4dec562d909f9766debac53aa6","1ffa18fad2d839bbae5054931722c97d04c10258"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}