{"path":"lucene/test-framework/src/java/org/apache/lucene/index/MockIndexInput#readInternal(byte[],int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/MockIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/MockIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(byte[] dest, int destOffset, int len) {\n        int remainder = len;\n        int start = pointer;\n        while (remainder != 0) {\n//          int bufferNumber = start / buffer.length;\n          int bufferOffset = start % buffer.length;\n          int bytesInBuffer = buffer.length - bufferOffset;\n          int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n          System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n          destOffset += bytesToCopy;\n          start += bytesToCopy;\n          remainder -= bytesToCopy;\n        }\n        pointer += len;\n    }\n\n","sourceOld":"    @Override\n    protected void readInternal(byte[] dest, int destOffset, int len) {\n        int remainder = len;\n        int start = pointer;\n        while (remainder != 0) {\n//          int bufferNumber = start / buffer.length;\n          int bufferOffset = start % buffer.length;\n          int bytesInBuffer = buffer.length - bufferOffset;\n          int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n          System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n          destOffset += bytesToCopy;\n          start += bytesToCopy;\n          remainder -= bytesToCopy;\n        }\n        pointer += len;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","date":1400334249,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/MockIndexInput#readInternal(byte[],int,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected void readInternal(byte[] dest, int destOffset, int len) {\n        int remainder = len;\n        int start = pointer;\n        while (remainder != 0) {\n//          int bufferNumber = start / buffer.length;\n          int bufferOffset = start % buffer.length;\n          int bytesInBuffer = buffer.length - bufferOffset;\n          int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n          System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n          destOffset += bytesToCopy;\n          start += bytesToCopy;\n          remainder -= bytesToCopy;\n        }\n        pointer += len;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/MockIndexInput#readInternal(byte[],int,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected void readInternal(byte[] dest, int destOffset, int len) {\n        int remainder = len;\n        int start = pointer;\n        while (remainder != 0) {\n//          int bufferNumber = start / buffer.length;\n          int bufferOffset = start % buffer.length;\n          int bytesInBuffer = buffer.length - bufferOffset;\n          int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n          System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n          destOffset += bytesToCopy;\n          start += bytesToCopy;\n          remainder -= bytesToCopy;\n        }\n        pointer += len;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"]},"commit2Childs":{"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}