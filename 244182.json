{"path":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#fromInputStream(SolrResourceLoader,InputStream).mjava","commits":[{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","sourceNew":"  public static NodeConfig fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        Config config = new Config(loader, null, new InputSource(dup), null, false);\n        return fromConfig(config);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        Config config = new Config(loader, null, new InputSource(dup), null, false);\n        return new ConfigSolrXml(config);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"/dev/null","sourceNew":"  public static NodeConfig fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        Config config = new Config(loader, null, new InputSource(dup), null, false);\n        return fromConfig(config);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee622110ba6021d0390037e77574743c1e55348c","date":1546700916,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#fromInputStream(SolrResourceLoader,InputStream).mjava","sourceNew":"  public static NodeConfig fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        XmlConfigFile config = new XmlConfigFile(loader, null, new InputSource(dup), null, false);\n        return fromConfig(config);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public static NodeConfig fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        Config config = new Config(loader, null, new InputSource(dup), null, false);\n        return fromConfig(config);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#fromInputStream(Path,InputStream,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#fromInputStream(SolrResourceLoader,InputStream).mjava","sourceNew":"  public static NodeConfig fromInputStream(Path solrHome, InputStream is, Properties substituteProps) {\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome);\n    if (substituteProps == null) {\n      substituteProps = new Properties();\n    }\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        XmlConfigFile config = new XmlConfigFile(loader, null, new InputSource(dup), null, substituteProps);\n        return fromConfig(solrHome, config);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public static NodeConfig fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        XmlConfigFile config = new XmlConfigFile(loader, null, new InputSource(dup), null, false);\n        return fromConfig(config);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee622110ba6021d0390037e77574743c1e55348c":["e15199583d3635cb940942caed05132dd6c4c7c6"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e15199583d3635cb940942caed05132dd6c4c7c6"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["ee622110ba6021d0390037e77574743c1e55348c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ee622110ba6021d0390037e77574743c1e55348c":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e15199583d3635cb940942caed05132dd6c4c7c6"],"e15199583d3635cb940942caed05132dd6c4c7c6":["ee622110ba6021d0390037e77574743c1e55348c","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}