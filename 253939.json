{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","commits":[{"id":"55eeb2534cd53d2a985669829df942468ebf5314","date":1354409119,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm =\n      norms!=null ? decodeNormValue((byte) norms.get(doc)) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm =\n      norms!=null ? decodeNormValue((byte) norms.get(doc)) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"496cc26fd7f5a8e2aa6c46d43e50860ef4225098","date":1372185568,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm = norms != null ? decodeNormValue(norms.get(doc)) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm =\n      norms!=null ? decodeNormValue((byte) norms.get(doc)) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm = norms != null ? decodeNormValue(norms.get(doc)) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm =\n      norms!=null ? decodeNormValue((byte) norms.get(doc)) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cceeaf6cff4c1d9504c3f5efa060eabf533bd90c","date":1417019216,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm = norms != null ? decodeNormValue(norms.get(doc)) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm = norms != null ? decodeNormValue(norms.get(doc)) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation queryExpl = explainQuery(stats);\n    Explanation fieldExpl = explainField(doc, freq, stats, norms);\n    if (queryExpl.getValue() == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm = norms != null ? decodeNormValue(norms.get(doc)) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation queryExpl = Explanation.match(stats.boost, \"boost\");\n    Explanation fieldExpl = explainField(doc, freq, stats, norms);\n    if (stats.boost == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation queryExpl = explainQuery(stats);\n    Explanation fieldExpl = explainField(doc, freq, stats, norms);\n    if (queryExpl.getValue() == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation queryExpl = Explanation.match(stats.boost, \"boost\");\n    Explanation fieldExpl = explainField(doc, freq, stats, norms);\n    if (stats.boost == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation queryExpl = Explanation.match(stats.boost, \"boost\");\n    Explanation fieldExpl = explainField(doc, freq, stats, norms);\n    if (stats.boost == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation queryExpl = Explanation.match(stats.boost, \"boost\");\n    Explanation fieldExpl = explainField(doc, freq, stats, norms);\n    if (stats.boost == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation queryExpl = Explanation.match(stats.boost, \"boost\");\n    Explanation fieldExpl = explainField(doc, freq, stats, norms);\n    if (stats.boost == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation queryExpl = Explanation.match(stats.boost, \"boost\");\n    Explanation fieldExpl = explainField(doc, freq, stats, norms);\n    if (stats.boost == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) {\n    Explanation queryExpl = explainQuery(stats);\n    Explanation fieldExpl = explainField(doc, freq, stats, norms);\n    if (queryExpl.getValue() == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues,float[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms, float[] normTable) throws IOException {\n    Explanation queryExpl = Explanation.match(stats.boost, \"boost\");\n    Explanation fieldExpl = explainField(doc, freq, stats, norms, normTable);\n    if (stats.boost == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation queryExpl = Explanation.match(stats.boost, \"boost\");\n    Explanation fieldExpl = explainField(doc, freq, stats, norms);\n    if (stats.boost == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,NumericDocValues).mjava","sourceNew":null,"sourceOld":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms) throws IOException {\n    Explanation queryExpl = Explanation.match(stats.boost, \"boost\");\n    Explanation fieldExpl = explainField(doc, freq, stats, norms);\n    if (stats.boost == 1f) {\n      return fieldExpl;\n    }\n    return Explanation.match(\n        queryExpl.getValue() * fieldExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq.getValue()+\"), product of:\",\n        queryExpl, fieldExpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["d4d69c535930b5cce125cff868d40f6373dc27d4","496cc26fd7f5a8e2aa6c46d43e50860ef4225098"],"cceeaf6cff4c1d9504c3f5efa060eabf533bd90c":["496cc26fd7f5a8e2aa6c46d43e50860ef4225098"],"55eeb2534cd53d2a985669829df942468ebf5314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","615370d2b876c3435773b5174df2e2242ad7981a"],"496cc26fd7f5a8e2aa6c46d43e50860ef4225098":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"615370d2b876c3435773b5174df2e2242ad7981a":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","55eeb2534cd53d2a985669829df942468ebf5314"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["cceeaf6cff4c1d9504c3f5efa060eabf533bd90c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615370d2b876c3435773b5174df2e2242ad7981a"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"cceeaf6cff4c1d9504c3f5efa060eabf533bd90c":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"55eeb2534cd53d2a985669829df942468ebf5314":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"496cc26fd7f5a8e2aa6c46d43e50860ef4225098":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cceeaf6cff4c1d9504c3f5efa060eabf533bd90c"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["37a0f60745e53927c4c876cfe5b5a58170f0646c","496cc26fd7f5a8e2aa6c46d43e50860ef4225098"],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55eeb2534cd53d2a985669829df942468ebf5314","d4d69c535930b5cce125cff868d40f6373dc27d4"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}