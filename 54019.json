{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","commits":[{"id":"2d629ca62e3b8ab6e29a127aebe213163d490413","date":1405524223,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getDataDir());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete data dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + dataDir.getAbsolutePath());\n      }\n    }\n    if (deleteInstanceDir) {\n      File instanceDir = new File(cd.getInstanceDir());\n      try {\n        FileUtils.deleteDirectory(instanceDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete instance dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + instanceDir.getAbsolutePath());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","sourceNew":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getDataDir());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete data dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + dataDir.getAbsolutePath());\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete instance dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + cd.getInstanceDir());\n      }\n    }\n  }\n\n","sourceOld":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getDataDir());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete data dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + dataDir.getAbsolutePath());\n      }\n    }\n    if (deleteInstanceDir) {\n      File instanceDir = new File(cd.getInstanceDir());\n      try {\n        FileUtils.deleteDirectory(instanceDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete instance dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + instanceDir.getAbsolutePath());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92fb09e8bca7aca9e2fdb63aa568597b0b852880","date":1477990966,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","sourceNew":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete data dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + dataDir.getAbsolutePath());\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete instance dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + cd.getInstanceDir());\n      }\n    }\n  }\n\n","sourceOld":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getDataDir());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete data dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + dataDir.getAbsolutePath());\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete instance dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + cd.getInstanceDir());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5809ad14f6ea649a54ac2b8b8826ec0106bd2c3f","date":1478015910,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","sourceNew":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete data dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + dataDir.getAbsolutePath());\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete instance dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + cd.getInstanceDir());\n      }\n    }\n  }\n\n","sourceOld":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getDataDir());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete data dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + dataDir.getAbsolutePath());\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete instance dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + cd.getInstanceDir());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b903176bf663c18b098e700a4eb733e5a8ffe208","date":1479476729,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","sourceNew":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        log.error(\"Failed to delete data dir for unloaded core: {} dir: {}\", cd.getName(), dataDir.getAbsolutePath(), e);\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        log.error(\"Failed to delete instance dir for unloaded core: {} dir: {}\", cd.getName(), cd.getInstanceDir(), e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete data dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + dataDir.getAbsolutePath());\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete instance dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + cd.getInstanceDir());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0fd6b5fef35d64e31781212a2aaeb32ef541acc8","date":1479481182,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","sourceNew":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        log.error(\"Failed to delete data dir for unloaded core: {} dir: {}\", cd.getName(), dataDir.getAbsolutePath(), e);\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        log.error(\"Failed to delete instance dir for unloaded core: {} dir: {}\", cd.getName(), cd.getInstanceDir(), e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete data dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + dataDir.getAbsolutePath());\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete instance dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + cd.getInstanceDir());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e859e664a65796dadf8aaf65db6f66f3a885368","date":1479487334,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","sourceNew":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        log.error(\"Failed to delete data dir for unloaded core: {} dir: {}\", cd.getName(), dataDir.getAbsolutePath(), e);\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        log.error(\"Failed to delete instance dir for unloaded core: {} dir: {}\", cd.getName(), cd.getInstanceDir(), e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete data dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + dataDir.getAbsolutePath());\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        SolrException.log(log, \"Failed to delete instance dir for unloaded core:\" + cd.getName()\n            + \" dir:\" + cd.getInstanceDir());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"078208fb22390fe404cc26e34a439c51e6318ed4","date":1591151812,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#deleteUnloadedCore(CoreDescriptor,boolean,boolean).mjava","sourceNew":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = cd.getInstanceDir().resolve(cd.getDataDir()).toFile();\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        log.error(\"Failed to delete data dir for unloaded core: {} dir: {}\", cd.getName(), dataDir.getAbsolutePath(), e);\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        log.error(\"Failed to delete instance dir for unloaded core: {} dir: {}\", cd.getName(), cd.getInstanceDir(), e);\n      }\n    }\n  }\n\n","sourceOld":"  public static void deleteUnloadedCore(CoreDescriptor cd, boolean deleteDataDir, boolean deleteInstanceDir) {\n    if (deleteDataDir) {\n      File dataDir = new File(cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString());\n      try {\n        FileUtils.deleteDirectory(dataDir);\n      } catch (IOException e) {\n        log.error(\"Failed to delete data dir for unloaded core: {} dir: {}\", cd.getName(), dataDir.getAbsolutePath(), e);\n      }\n    }\n    if (deleteInstanceDir) {\n      try {\n        FileUtils.deleteDirectory(cd.getInstanceDir().toFile());\n      } catch (IOException e) {\n        log.error(\"Failed to delete instance dir for unloaded core: {} dir: {}\", cd.getName(), cd.getInstanceDir(), e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["2d629ca62e3b8ab6e29a127aebe213163d490413"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d629ca62e3b8ab6e29a127aebe213163d490413":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0fd6b5fef35d64e31781212a2aaeb32ef541acc8":["92fb09e8bca7aca9e2fdb63aa568597b0b852880","b903176bf663c18b098e700a4eb733e5a8ffe208"],"b903176bf663c18b098e700a4eb733e5a8ffe208":["92fb09e8bca7aca9e2fdb63aa568597b0b852880"],"078208fb22390fe404cc26e34a439c51e6318ed4":["0fd6b5fef35d64e31781212a2aaeb32ef541acc8"],"2e859e664a65796dadf8aaf65db6f66f3a885368":["5809ad14f6ea649a54ac2b8b8826ec0106bd2c3f","0fd6b5fef35d64e31781212a2aaeb32ef541acc8"],"92fb09e8bca7aca9e2fdb63aa568597b0b852880":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"5809ad14f6ea649a54ac2b8b8826ec0106bd2c3f":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","92fb09e8bca7aca9e2fdb63aa568597b0b852880"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["078208fb22390fe404cc26e34a439c51e6318ed4"]},"commit2Childs":{"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["92fb09e8bca7aca9e2fdb63aa568597b0b852880","5809ad14f6ea649a54ac2b8b8826ec0106bd2c3f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2d629ca62e3b8ab6e29a127aebe213163d490413"],"2d629ca62e3b8ab6e29a127aebe213163d490413":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"0fd6b5fef35d64e31781212a2aaeb32ef541acc8":["078208fb22390fe404cc26e34a439c51e6318ed4","2e859e664a65796dadf8aaf65db6f66f3a885368"],"b903176bf663c18b098e700a4eb733e5a8ffe208":["0fd6b5fef35d64e31781212a2aaeb32ef541acc8"],"078208fb22390fe404cc26e34a439c51e6318ed4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2e859e664a65796dadf8aaf65db6f66f3a885368":[],"92fb09e8bca7aca9e2fdb63aa568597b0b852880":["0fd6b5fef35d64e31781212a2aaeb32ef541acc8","b903176bf663c18b098e700a4eb733e5a8ffe208","5809ad14f6ea649a54ac2b8b8826ec0106bd2c3f"],"5809ad14f6ea649a54ac2b8b8826ec0106bd2c3f":["2e859e664a65796dadf8aaf65db6f66f3a885368"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}