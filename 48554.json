{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","commits":[{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriterImpl#StandardPostingsWriterImpl(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.FREQ_EXTENSION);\n    state.flushedFiles.add(fileName);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public StandardPostingsWriterImpl(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.FREQ_EXTENSION);\n    state.flushedFiles.add(fileName);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16c697f6ca5cdc82f918f753317a4ac9c70d259f","date":1289840486,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    state.flushedFiles.add(fileName);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.FREQ_EXTENSION);\n    state.flushedFiles.add(fileName);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    state.flushedFiles.add(fileName);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.FREQ_EXTENSION);\n    state.flushedFiles.add(fileName);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    state.flushedFiles.add(fileName);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe","date":1294227869,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    state.flushedFiles.add(fileName);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    state.flushedFiles.add(fileName);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    state.flushedFiles.add(fileName);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aff28d83336d21b964812b94574b7e8cea46a3cc","date":1297437050,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(skipInterval,\n                                               maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(skipInterval,\n                                               maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(skipInterval,\n                                               maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(state.skipInterval,\n                                               state.maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n     \n    skipInterval = state.skipInterval;\n    maxSkipLevels = state.maxSkipLevels;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecIdAsString(), StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecIdAsString(), StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(skipInterval,\n                                               maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(skipInterval,\n                                               maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbf673cc117fc27d2c820811d2a886119346b0c9","date":1302615417,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    this(state, DEFAULT_SKIP_INTERVAL);\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(skipInterval,\n                                               maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    this(state, DEFAULT_SKIP_INTERVAL);\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(skipInterval,\n                                               maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    this(state, DEFAULT_SKIP_INTERVAL);\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecIdAsString(), StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecIdAsString(), StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(skipInterval,\n                                               maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    this(state, DEFAULT_SKIP_INTERVAL);\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    super();\n    //this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName);\n\n    if (state.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, StandardCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(fileName);\n    } else {\n      // Every field omits TF so we will write no prox file\n      proxOut = null;\n    }\n\n    totalNumDocs = state.numDocs;\n\n    skipListWriter = new DefaultSkipListWriter(skipInterval,\n                                               maxSkipLevels,\n                                               state.numDocs,\n                                               freqOut,\n                                               proxOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsWriter#Lucene40PostingsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#StandardPostingsWriter(SegmentWriteState).mjava","sourceNew":"  public Lucene40PostingsWriter(SegmentWriteState state) throws IOException {\n    this(state, DEFAULT_SKIP_INTERVAL);\n  }\n\n","sourceOld":"  public StandardPostingsWriter(SegmentWriteState state) throws IOException {\n    this(state, DEFAULT_SKIP_INTERVAL);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","aff28d83336d21b964812b94574b7e8cea46a3cc"],"16c697f6ca5cdc82f918f753317a4ac9c70d259f":["99cf56f3a650b908f7017a72f9d23940418f8a52"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["99cf56f3a650b908f7017a72f9d23940418f8a52","16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"aff28d83336d21b964812b94574b7e8cea46a3cc":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","fbf673cc117fc27d2c820811d2a886119346b0c9"],"fbf673cc117fc27d2c820811d2a886119346b0c9":["aff28d83336d21b964812b94574b7e8cea46a3cc"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","fbf673cc117fc27d2c820811d2a886119346b0c9"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["868da859b43505d9d2a023bfeae6dd0c795f5295","b1add9ddc0005b07550d4350720aac22dc9886b3"],"7b91922b55d15444d554721b352861d028eb8278":["fbf673cc117fc27d2c820811d2a886119346b0c9"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["f1bdbf92da222965b46c0a942c3857ba56e5c638","aff28d83336d21b964812b94574b7e8cea46a3cc"],"a3776dccca01c11e7046323cfad46a3b4a471233":["aff28d83336d21b964812b94574b7e8cea46a3cc","fbf673cc117fc27d2c820811d2a886119346b0c9"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe":["16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["e79a6d080bdd5b2a8f56342cf571b5476de04180","aff28d83336d21b964812b94574b7e8cea46a3cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["70ad682703b8585f5d0a637efec044d57ec05efb"],"16c697f6ca5cdc82f918f753317a4ac9c70d259f":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"aff28d83336d21b964812b94574b7e8cea46a3cc":["f1bdbf92da222965b46c0a942c3857ba56e5c638","fbf673cc117fc27d2c820811d2a886119346b0c9","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"fbf673cc117fc27d2c820811d2a886119346b0c9":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","7b91922b55d15444d554721b352861d028eb8278","a3776dccca01c11e7046323cfad46a3b4a471233"],"962d04139994fce5193143ef35615499a9a96d78":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["aff28d83336d21b964812b94574b7e8cea46a3cc","e79a6d080bdd5b2a8f56342cf571b5476de04180","29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99cf56f3a650b908f7017a72f9d23940418f8a52"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe":["70ad682703b8585f5d0a637efec044d57ec05efb","b1add9ddc0005b07550d4350720aac22dc9886b3","868da859b43505d9d2a023bfeae6dd0c795f5295"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["16c697f6ca5cdc82f918f753317a4ac9c70d259f","9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}