{"path":"lucene/core/src/java/org/apache/lucene/index/LeafReader#getCoreCacheHelper().mjava","commits":[{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#getCoreCacheHelper().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Optional method: Return a {@link CacheHelper} that can be used to cache\n   * based on the content of this leaf regardless of deletions. Two readers\n   * that have the same data but different sets of deleted documents or doc\n   * values updates may be considered equal. Consider using\n   * {@link #getReaderCacheHelper} if you need deletions or dv updates to be\n   * taken into account.\n   * <p>A return value of {@code null} indicates that this reader is not suited\n   * for caching, which is typically the case for short-lived wrappers that\n   * alter the content of the wrapped leaf reader.\n   * @lucene.experimental\n   */\n  public abstract CacheHelper getCoreCacheHelper();\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b6f36bb733c575dd04fdfa785127ebf82b0033f","date":1497502741,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#getCoreCacheHelper().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LeafReader#getCoreCacheHelper().mjava","sourceNew":"  /**\n   * Optional method: Return a {@link IndexReader.CacheHelper} that can be used to cache\n   * based on the content of this leaf regardless of deletions. Two readers\n   * that have the same data but different sets of deleted documents or doc\n   * values updates may be considered equal. Consider using\n   * {@link #getReaderCacheHelper} if you need deletions or dv updates to be\n   * taken into account.\n   * <p>A return value of {@code null} indicates that this reader is not suited\n   * for caching, which is typically the case for short-lived wrappers that\n   * alter the content of the wrapped leaf reader.\n   * @lucene.experimental\n   */\n  public abstract CacheHelper getCoreCacheHelper();\n\n","sourceOld":"  /**\n   * Optional method: Return a {@link CacheHelper} that can be used to cache\n   * based on the content of this leaf regardless of deletions. Two readers\n   * that have the same data but different sets of deleted documents or doc\n   * values updates may be considered equal. Consider using\n   * {@link #getReaderCacheHelper} if you need deletions or dv updates to be\n   * taken into account.\n   * <p>A return value of {@code null} indicates that this reader is not suited\n   * for caching, which is typically the case for short-lived wrappers that\n   * alter the content of the wrapped leaf reader.\n   * @lucene.experimental\n   */\n  public abstract CacheHelper getCoreCacheHelper();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#getCoreCacheHelper().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LeafReader#getCoreCacheHelper().mjava","sourceNew":"  /**\n   * Optional method: Return a {@link IndexReader.CacheHelper} that can be used to cache\n   * based on the content of this leaf regardless of deletions. Two readers\n   * that have the same data but different sets of deleted documents or doc\n   * values updates may be considered equal. Consider using\n   * {@link #getReaderCacheHelper} if you need deletions or dv updates to be\n   * taken into account.\n   * <p>A return value of {@code null} indicates that this reader is not suited\n   * for caching, which is typically the case for short-lived wrappers that\n   * alter the content of the wrapped leaf reader.\n   * @lucene.experimental\n   */\n  public abstract CacheHelper getCoreCacheHelper();\n\n","sourceOld":"  /**\n   * Optional method: Return a {@link CacheHelper} that can be used to cache\n   * based on the content of this leaf regardless of deletions. Two readers\n   * that have the same data but different sets of deleted documents or doc\n   * values updates may be considered equal. Consider using\n   * {@link #getReaderCacheHelper} if you need deletions or dv updates to be\n   * taken into account.\n   * <p>A return value of {@code null} indicates that this reader is not suited\n   * for caching, which is typically the case for short-lived wrappers that\n   * alter the content of the wrapped leaf reader.\n   * @lucene.experimental\n   */\n  public abstract CacheHelper getCoreCacheHelper();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#getCoreCacheHelper().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LeafReader#getCoreCacheHelper().mjava","sourceNew":"  /**\n   * Optional method: Return a {@link IndexReader.CacheHelper} that can be used to cache\n   * based on the content of this leaf regardless of deletions. Two readers\n   * that have the same data but different sets of deleted documents or doc\n   * values updates may be considered equal. Consider using\n   * {@link #getReaderCacheHelper} if you need deletions or dv updates to be\n   * taken into account.\n   * <p>A return value of {@code null} indicates that this reader is not suited\n   * for caching, which is typically the case for short-lived wrappers that\n   * alter the content of the wrapped leaf reader.\n   * @lucene.experimental\n   */\n  public abstract CacheHelper getCoreCacheHelper();\n\n","sourceOld":"  /**\n   * Optional method: Return a {@link CacheHelper} that can be used to cache\n   * based on the content of this leaf regardless of deletions. Two readers\n   * that have the same data but different sets of deleted documents or doc\n   * values updates may be considered equal. Consider using\n   * {@link #getReaderCacheHelper} if you need deletions or dv updates to be\n   * taken into account.\n   * <p>A return value of {@code null} indicates that this reader is not suited\n   * for caching, which is typically the case for short-lived wrappers that\n   * alter the content of the wrapped leaf reader.\n   * @lucene.experimental\n   */\n  public abstract CacheHelper getCoreCacheHelper();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d211216c83f01894810543d1c107160a9ae3650b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b6f36bb733c575dd04fdfa785127ebf82b0033f":["d211216c83f01894810543d1c107160a9ae3650b"],"28288370235ed02234a64753cdbf0c6ec096304a":["d211216c83f01894810543d1c107160a9ae3650b","2b6f36bb733c575dd04fdfa785127ebf82b0033f"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["d211216c83f01894810543d1c107160a9ae3650b","2b6f36bb733c575dd04fdfa785127ebf82b0033f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"d211216c83f01894810543d1c107160a9ae3650b":["2b6f36bb733c575dd04fdfa785127ebf82b0033f","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d211216c83f01894810543d1c107160a9ae3650b"],"2b6f36bb733c575dd04fdfa785127ebf82b0033f":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}