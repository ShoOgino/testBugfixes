{"path":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","commits":[{"id":"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","date":1400334249,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice);\n    clone.isClone = true;\n    return clone;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice);\n    clone.isClone = true;\n    return clone;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4329ea1888f09fb692caf2ad95056327be317144","date":1418146038,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","sourceNew":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    if (dir.verboseClone) {\n      new Exception(\"slice: \" + this).printStackTrace(System.out);\n    }\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice);\n    clone.isClone = true;\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice);\n    clone.isClone = true;\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5e561b4438c227a4d8960523d49ce735652ae66","date":1470733409,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","sourceNew":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    if (dir.verboseClone) {\n      new Exception(\"slice: \" + this).printStackTrace(System.out);\n    }\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice, parent != null ? parent : this);\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    if (dir.verboseClone) {\n      new Exception(\"slice: \" + this).printStackTrace(System.out);\n    }\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice);\n    clone.isClone = true;\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bca25eefa1f2205e2b0ef713701dc3a0fecd702","date":1470810578,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","sourceNew":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    if (dir.verboseClone) {\n      new Exception(\"slice: \" + this).printStackTrace(System.out);\n    }\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice, parent != null ? parent : this);\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    if (dir.verboseClone) {\n      new Exception(\"slice: \" + this).printStackTrace(System.out);\n    }\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice);\n    clone.isClone = true;\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","sourceNew":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    if (dir.verboseClone) {\n      new Exception(\"slice: \" + this).printStackTrace(System.out);\n    }\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice, parent != null ? parent : this);\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    if (dir.verboseClone) {\n      new Exception(\"slice: \" + this).printStackTrace(System.out);\n    }\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice);\n    clone.isClone = true;\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#slice(String,long,long).mjava","sourceNew":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    if (dir.verboseClone) {\n      new Exception(\"slice: \" + this).printStackTrace(System.out);\n    }\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice, parent != null ? parent : this);\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n    ensureOpen();\n    if (dir.verboseClone) {\n      new Exception(\"slice: \" + this).printStackTrace(System.out);\n    }\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput slice = delegate.slice(sliceDescription, offset, length);\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, sliceDescription, slice);\n    clone.isClone = true;\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["4329ea1888f09fb692caf2ad95056327be317144","a5e561b4438c227a4d8960523d49ce735652ae66"],"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4329ea1888f09fb692caf2ad95056327be317144":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5e561b4438c227a4d8960523d49ce735652ae66":["4329ea1888f09fb692caf2ad95056327be317144"],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4329ea1888f09fb692caf2ad95056327be317144","8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["4329ea1888f09fb692caf2ad95056327be317144","8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"]},"commit2Childs":{"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["4329ea1888f09fb692caf2ad95056327be317144","56572ec06f1407c066d6b7399413178b33176cd8"],"4329ea1888f09fb692caf2ad95056327be317144":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702","a5e561b4438c227a4d8960523d49ce735652ae66","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","56572ec06f1407c066d6b7399413178b33176cd8"],"a5e561b4438c227a4d8960523d49ce735652ae66":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}