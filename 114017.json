{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","commits":[{"id":"b47e1512544568a22b82c96169d466fae8a4b79e","date":1354519309,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }});\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }});\n    writer.prepareCommit();\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }});\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }});\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }});\n    writer.prepareCommit();\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }});\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","sourceNew":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }});\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }});\n    writer.prepareCommit();\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }});\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }});\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }});\n    writer.prepareCommit();\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }});\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","sourceNew":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }});\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }});\n    writer.prepareCommit();\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }});\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }});\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }});\n    writer.prepareCommit();\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }});\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","sourceNew":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }});\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }});\n    writer.prepareCommit();\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }});\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }});\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }});\n    writer.prepareCommit();\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }});\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71e1a70f18d64b93db3ef618e606d6df5062f747","date":1466156390,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","sourceNew":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }}.entrySet());\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }}.entrySet());\n    writer.prepareCommit();\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }}.entrySet());\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }});\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }});\n    writer.prepareCommit();\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }});\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":["b47e1512544568a22b82c96169d466fae8a4b79e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","sourceNew":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }}.entrySet());\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }}.entrySet());\n    writer.prepareCommit();\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }}.entrySet());\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }});\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }});\n    writer.prepareCommit();\n    writer.setCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }});\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe39f1a106531207c028defebbc9eb5bb489ac50","date":1592513789,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","sourceNew":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n\n    // this should store the commit data, even though no other changes were made\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }}.entrySet());\n    writer.commit();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n\n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }}.entrySet());\n    writer.prepareCommit();\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }}.entrySet());\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n\n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }}.entrySet());\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }}.entrySet());\n    writer.prepareCommit();\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }}.entrySet());\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1182fe36fb5df768dc2da53f6d5338cbc07268ae","date":1592861749,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","sourceNew":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }}.entrySet());\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }}.entrySet());\n    writer.prepareCommit();\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }}.entrySet());\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n\n    // this should store the commit data, even though no other changes were made\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }}.entrySet());\n    writer.commit();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n\n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }}.entrySet());\n    writer.prepareCommit();\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }}.entrySet());\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n\n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2a23476693f2bd9a4b44cc3187c429a2e21dac2","date":1593289545,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitWithUserDataOnly().mjava","sourceNew":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n\n    // this should store the commit data, even though no other changes were made\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }}.entrySet());\n    writer.commit();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n\n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }}.entrySet());\n    writer.prepareCommit();\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }}.entrySet());\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n\n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4575\n  public void testCommitWithUserDataOnly() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    writer.commit(); // first commit to complete IW create transaction.\n    \n    // this should store the commit data, even though no other changes were made\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value\");\n    }}.entrySet());\n    writer.commit();\n    \n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"value\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now check setCommitData and prepareCommit/commit sequence\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value1\");\n    }}.entrySet());\n    writer.prepareCommit();\n    writer.setLiveCommitData(new HashMap<String,String>() {{\n      put(\"key\", \"value2\");\n    }}.entrySet());\n    writer.commit(); // should commit the first commitData only, per protocol\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"value1\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    // now should commit the second commitData - there was a bug where \n    // IndexWriter.finishCommit overrode the second commitData\n    writer.commit();\n    r = DirectoryReader.open(dir);\n    assertEquals(\"IndexWriter.finishCommit may have overridden the second commitData\",\n        \"value2\", r.getIndexCommit().getUserData().get(\"key\"));\n    r.close();\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b47e1512544568a22b82c96169d466fae8a4b79e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["b47e1512544568a22b82c96169d466fae8a4b79e"],"b47e1512544568a22b82c96169d466fae8a4b79e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["fe39f1a106531207c028defebbc9eb5bb489ac50"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d0ef034a4f10871667ae75181537775ddcf8ade4","71e1a70f18d64b93db3ef618e606d6df5062f747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"]},"commit2Childs":{"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["fe39f1a106531207c028defebbc9eb5bb489ac50","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","b47e1512544568a22b82c96169d466fae8a4b79e"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["71e1a70f18d64b93db3ef618e606d6df5062f747","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"b47e1512544568a22b82c96169d466fae8a4b79e":["407687e67faf6e1f02a211ca078d8e3eed631027","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}