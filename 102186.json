{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","commits":[{"id":"ecd41ba3cdd1b4d825aa53d1987e4360cf45cb05","date":1323284809,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","pathOld":"/dev/null","sourceNew":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false, false, false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","pathOld":"/dev/null","sourceNew":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false, false, false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06","date":1326148180,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","sourceNew":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null);\n  }\n\n","sourceOld":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false, false, false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","sourceNew":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null, null);\n  }\n\n","sourceOld":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","sourceNew":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null, null);\n  }\n\n","sourceOld":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"ecd41ba3cdd1b4d825aa53d1987e4360cf45cb05":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecd41ba3cdd1b4d825aa53d1987e4360cf45cb05"]},"commit2Childs":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ecd41ba3cdd1b4d825aa53d1987e4360cf45cb05","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"ecd41ba3cdd1b4d825aa53d1987e4360cf45cb05":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}