{"path":"lucene/backwards/src/test/org/apache/lucene/search/BaseTestRangeFilter#testPad().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/BaseTestRangeFilter#testPad().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/BaseTestRangeFilter#testPad().mjava","sourceNew":"    public void testPad() {\n\n        int[] tests = new int[] {\n            -9999999, -99560, -100, -3, -1, 0, 3, 9, 10, 1000, 999999999\n        };\n        for (int i = 0; i < tests.length - 1; i++) {\n            int a = tests[i];\n            int b = tests[i+1];\n            String aa = pad(a);\n            String bb = pad(b);\n            String label = a + \":\" + aa + \" vs \" + b + \":\" + bb;\n            assertEquals(\"length of \" + label, aa.length(), bb.length());\n            assertTrue(\"compare less than \" + label, aa.compareTo(bb) < 0);\n        }\n\n    }\n\n","sourceOld":"    public void testPad() {\n\n        int[] tests = new int[] {\n            -9999999, -99560, -100, -3, -1, 0, 3, 9, 10, 1000, 999999999\n        };\n        for (int i = 0; i < tests.length - 1; i++) {\n            int a = tests[i];\n            int b = tests[i+1];\n            String aa = pad(a);\n            String bb = pad(b);\n            String label = a + \":\" + aa + \" vs \" + b + \":\" + bb;\n            assertEquals(\"length of \" + label, aa.length(), bb.length());\n            assertTrue(\"compare less than \" + label, aa.compareTo(bb) < 0);\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/BaseTestRangeFilter#testPad().mjava","sourceNew":null,"sourceOld":"    public void testPad() {\n\n        int[] tests = new int[] {\n            -9999999, -99560, -100, -3, -1, 0, 3, 9, 10, 1000, 999999999\n        };\n        for (int i = 0; i < tests.length - 1; i++) {\n            int a = tests[i];\n            int b = tests[i+1];\n            String aa = pad(a);\n            String bb = pad(b);\n            String label = a + \":\" + aa + \" vs \" + b + \":\" + bb;\n            assertEquals(\"length of \" + label, aa.length(), bb.length());\n            assertTrue(\"compare less than \" + label, aa.compareTo(bb) < 0);\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}