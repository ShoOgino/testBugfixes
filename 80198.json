{"path":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","commits":[{"id":"ccfb40e1834cac1619556a0becf198bb7bad5d63","date":1438887805,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.get(\"realm\") != null) this.realm = (String) pluginConfig.get(\"realm\");\n    else this.realm = \"solr\";\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      BasicAuthPlugin.log.warn(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        BasicAuthPlugin.log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9367dbf5b00d7764583d991c1888f4acc9c9991a","date":1449048142,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.get(\"realm\") != null) this.realm = (String) pluginConfig.get(\"realm\");\n    else this.realm = \"solr\";\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      log.warn(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.get(\"realm\") != null) this.realm = (String) pluginConfig.get(\"realm\");\n    else this.realm = \"solr\";\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      BasicAuthPlugin.log.warn(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        BasicAuthPlugin.log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74a160431b6dbb348b3b55693f541e3632564094","date":1477466575,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.get(\"realm\") != null) this.realm = (String) pluginConfig.get(\"realm\");\n    else this.realm = \"solr\";\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      log.debug(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.get(\"realm\") != null) this.realm = (String) pluginConfig.get(\"realm\");\n    else this.realm = \"solr\";\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      log.warn(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b363b110592b02d7f488aff0dbe40a53d3ce81df","date":1477469211,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.get(\"realm\") != null) this.realm = (String) pluginConfig.get(\"realm\");\n    else this.realm = \"solr\";\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      log.debug(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.get(\"realm\") != null) this.realm = (String) pluginConfig.get(\"realm\");\n    else this.realm = \"solr\";\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      log.warn(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.get(\"realm\") != null) this.realm = (String) pluginConfig.get(\"realm\");\n    else this.realm = \"solr\";\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      log.debug(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.get(\"realm\") != null) this.realm = (String) pluginConfig.get(\"realm\");\n    else this.realm = \"solr\";\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      log.warn(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e5b14c1a3febf27d88acf3083b7551876933aa5","date":1544607443,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.containsKey(BasicAuthPlugin.PROPERTY_REALM)) {\n      this.realm = (String) pluginConfig.get(BasicAuthPlugin.PROPERTY_REALM);\n    } else {\n      this.realm = \"solr\";\n    }\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      log.debug(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.get(\"realm\") != null) this.realm = (String) pluginConfig.get(\"realm\");\n    else this.realm = \"solr\";\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      log.debug(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd","date":1567056470,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.containsKey(BasicAuthPlugin.PROPERTY_REALM)) {\n      this.realm = (String) pluginConfig.get(BasicAuthPlugin.PROPERTY_REALM);\n    } else {\n      this.realm = \"solr\";\n    }\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null || users.isEmpty()) {\n      throw new IllegalStateException(\"No users configured yet. At least one user must be configured in security.json\");\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.containsKey(BasicAuthPlugin.PROPERTY_REALM)) {\n      this.realm = (String) pluginConfig.get(BasicAuthPlugin.PROPERTY_REALM);\n    } else {\n      this.realm = \"solr\";\n    }\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null) {\n      log.debug(\"No users configured yet\");\n      return;\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54faedfb0e03479a38f5ee82f2dfaeea536e9404","date":1587251295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.containsKey(BasicAuthPlugin.PROPERTY_REALM)) {\n      this.realm = (String) pluginConfig.get(BasicAuthPlugin.PROPERTY_REALM);\n    } else {\n      this.realm = \"solr\";\n    }\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null || users.isEmpty()) {\n      throw new IllegalStateException(\"No users configured yet. At least one user must be configured in security.json\");\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        if (log.isWarnEnabled()) {\n          log.warn(\"user has no password {}\", e.getKey());\n        }\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.containsKey(BasicAuthPlugin.PROPERTY_REALM)) {\n      this.realm = (String) pluginConfig.get(BasicAuthPlugin.PROPERTY_REALM);\n    } else {\n      this.realm = \"solr\";\n    }\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null || users.isEmpty()) {\n      throw new IllegalStateException(\"No users configured yet. At least one user must be configured in security.json\");\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password \" + e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.containsKey(BasicAuthPlugin.PROPERTY_REALM)) {\n      this.realm = (String) pluginConfig.get(BasicAuthPlugin.PROPERTY_REALM);\n    } else {\n      this.realm = \"solr\";\n    }\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null || users.isEmpty()) {\n      throw new IllegalStateException(\"No users configured yet. At least one user must be configured in security.json\");\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password {}\", e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.containsKey(BasicAuthPlugin.PROPERTY_REALM)) {\n      this.realm = (String) pluginConfig.get(BasicAuthPlugin.PROPERTY_REALM);\n    } else {\n      this.realm = \"solr\";\n    }\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null || users.isEmpty()) {\n      throw new IllegalStateException(\"No users configured yet. At least one user must be configured in security.json\");\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        if (log.isWarnEnabled()) {\n          log.warn(\"user has no password {}\", e.getKey());\n        }\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.containsKey(BasicAuthPlugin.PROPERTY_REALM)) {\n      this.realm = (String) pluginConfig.get(BasicAuthPlugin.PROPERTY_REALM);\n    } else {\n      this.realm = \"solr\";\n    }\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    @SuppressWarnings({\"unchecked\"})\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null || users.isEmpty()) {\n      throw new IllegalStateException(\"No users configured yet. At least one user must be configured in security.json\");\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password {}\", e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    if (pluginConfig.containsKey(BasicAuthPlugin.PROPERTY_REALM)) {\n      this.realm = (String) pluginConfig.get(BasicAuthPlugin.PROPERTY_REALM);\n    } else {\n      this.realm = \"solr\";\n    }\n    \n    promptHeader = Collections.unmodifiableMap(Collections.singletonMap(\"WWW-Authenticate\", \"Basic realm=\\\"\" + realm + \"\\\"\"));\n    credentials = new LinkedHashMap<>();\n    Map<String,String> users = (Map<String,String>) pluginConfig.get(\"credentials\");\n    if (users == null || users.isEmpty()) {\n      throw new IllegalStateException(\"No users configured yet. At least one user must be configured in security.json\");\n    }\n    for (Map.Entry<String, String> e : users.entrySet()) {\n      String v = e.getValue();\n      if (v == null) {\n        log.warn(\"user has no password {}\", e.getKey());\n        continue;\n      }\n      credentials.put(e.getKey(), v);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"74a160431b6dbb348b3b55693f541e3632564094":["9367dbf5b00d7764583d991c1888f4acc9c9991a"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd"],"5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd":["4e5b14c1a3febf27d88acf3083b7551876933aa5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["9367dbf5b00d7764583d991c1888f4acc9c9991a","b363b110592b02d7f488aff0dbe40a53d3ce81df"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["575e66bd4b2349209027f6801184da7fc3cba13f"],"4e5b14c1a3febf27d88acf3083b7551876933aa5":["b363b110592b02d7f488aff0dbe40a53d3ce81df"],"575e66bd4b2349209027f6801184da7fc3cba13f":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"b363b110592b02d7f488aff0dbe40a53d3ce81df":["9367dbf5b00d7764583d991c1888f4acc9c9991a","74a160431b6dbb348b3b55693f541e3632564094"],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["ccfb40e1834cac1619556a0becf198bb7bad5d63"],"ccfb40e1834cac1619556a0becf198bb7bad5d63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"]},"commit2Childs":{"74a160431b6dbb348b3b55693f541e3632564094":["b363b110592b02d7f488aff0dbe40a53d3ce81df"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["575e66bd4b2349209027f6801184da7fc3cba13f"],"5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ccfb40e1834cac1619556a0becf198bb7bad5d63"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"4e5b14c1a3febf27d88acf3083b7551876933aa5":["5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b363b110592b02d7f488aff0dbe40a53d3ce81df":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","4e5b14c1a3febf27d88acf3083b7551876933aa5"],"575e66bd4b2349209027f6801184da7fc3cba13f":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["74a160431b6dbb348b3b55693f541e3632564094","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","b363b110592b02d7f488aff0dbe40a53d3ce81df"],"ccfb40e1834cac1619556a0becf198bb7bad5d63":["9367dbf5b00d7764583d991c1888f4acc9c9991a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}