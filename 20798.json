{"path":"src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","commits":[{"id":"ef28ac95f5f85bbf872801277448c0924b0a6827","date":1268600312,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","pathOld":"src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int,float).mjava","sourceNew":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","sourceOld":"    public void collect(int doc, float score) {\n      try {\n        searcher.getReader().deleteDocument(doc);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","pathOld":"src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ef28ac95f5f85bbf872801277448c0924b0a6827":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"ef28ac95f5f85bbf872801277448c0924b0a6827":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}