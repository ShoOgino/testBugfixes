{"path":"lucene/backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#testReuseAcrossWriters().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#testReuseAcrossWriters().mjava","pathOld":"backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#testReuseAcrossWriters().mjava","sourceNew":"  public void testReuseAcrossWriters() throws Exception {\n    Directory dir = new MockRAMDirectory();\n\n    SnapshotDeletionPolicy dp = new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), dp, IndexWriter.MaxFieldLength.UNLIMITED);\n    // Force frequent flushes\n    writer.setMaxBufferedDocs(2);\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    for(int i=0;i<7;i++) {\n      writer.addDocument(doc);\n      if (i % 2 == 0) {\n        writer.commit();\n      }\n    }\n    IndexCommit cp = (IndexCommit) dp.snapshot();\n    copyFiles(dir, cp);\n    writer.close();\n    copyFiles(dir, cp);\n    \n    writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), dp, IndexWriter.MaxFieldLength.UNLIMITED);\n    copyFiles(dir, cp);\n    for(int i=0;i<7;i++) {\n      writer.addDocument(doc);\n      if (i % 2 == 0) {\n        writer.commit();\n      }\n    }\n    copyFiles(dir, cp);\n    writer.close();\n    copyFiles(dir, cp);\n    dp.release();\n    writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), dp, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.close();\n    try {\n      copyFiles(dir, cp);\n      fail(\"did not hit expected IOException\");\n    } catch (IOException ioe) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testReuseAcrossWriters() throws Exception {\n    Directory dir = new MockRAMDirectory();\n\n    SnapshotDeletionPolicy dp = new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), dp, IndexWriter.MaxFieldLength.UNLIMITED);\n    // Force frequent flushes\n    writer.setMaxBufferedDocs(2);\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    for(int i=0;i<7;i++) {\n      writer.addDocument(doc);\n      if (i % 2 == 0) {\n        writer.commit();\n      }\n    }\n    IndexCommit cp = (IndexCommit) dp.snapshot();\n    copyFiles(dir, cp);\n    writer.close();\n    copyFiles(dir, cp);\n    \n    writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), dp, IndexWriter.MaxFieldLength.UNLIMITED);\n    copyFiles(dir, cp);\n    for(int i=0;i<7;i++) {\n      writer.addDocument(doc);\n      if (i % 2 == 0) {\n        writer.commit();\n      }\n    }\n    copyFiles(dir, cp);\n    writer.close();\n    copyFiles(dir, cp);\n    dp.release();\n    writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), dp, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.close();\n    try {\n      copyFiles(dir, cp);\n      fail(\"did not hit expected IOException\");\n    } catch (IOException ioe) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#testReuseAcrossWriters().mjava","sourceNew":null,"sourceOld":"  public void testReuseAcrossWriters() throws Exception {\n    Directory dir = new MockRAMDirectory();\n\n    SnapshotDeletionPolicy dp = new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), dp, IndexWriter.MaxFieldLength.UNLIMITED);\n    // Force frequent flushes\n    writer.setMaxBufferedDocs(2);\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    for(int i=0;i<7;i++) {\n      writer.addDocument(doc);\n      if (i % 2 == 0) {\n        writer.commit();\n      }\n    }\n    IndexCommit cp = (IndexCommit) dp.snapshot();\n    copyFiles(dir, cp);\n    writer.close();\n    copyFiles(dir, cp);\n    \n    writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), dp, IndexWriter.MaxFieldLength.UNLIMITED);\n    copyFiles(dir, cp);\n    for(int i=0;i<7;i++) {\n      writer.addDocument(doc);\n      if (i % 2 == 0) {\n        writer.commit();\n      }\n    }\n    copyFiles(dir, cp);\n    writer.close();\n    copyFiles(dir, cp);\n    dp.release();\n    writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), dp, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.close();\n    try {\n      copyFiles(dir, cp);\n      fail(\"did not hit expected IOException\");\n    } catch (IOException ioe) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}