{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","commits":[{"id":"ea1a3e0b93787916a1002c2be9f1043b6575ea69","date":1429103360,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public GeoBBox expand(double angle)\n    {\n        double newTopLat = latitude + angle;\n        double newBottomLat = latitude - angle;\n        // Figuring out when we escalate to a special case requires some prefiguring\n        double currentLonSpan = rightLon - leftLon;\n        if (currentLonSpan < 0.0)\n            currentLonSpan += Math.PI * 2.0;\n        double newLeftLon = leftLon - angle;\n        double newRightLon = rightLon + angle;\n        if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n            newLeftLon = -Math.PI;\n            newRightLon = Math.PI;\n        }\n        return GeoBBoxFactory.makeGeoBBox(newTopLat,newBottomLat,newLeftLon,newRightLon);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0fb9dbed1415914caa27460f8abb7afadaa61451","date":1429504289,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","sourceNew":"    @Override\n    public GeoBBox expand(final double angle)\n    {\n        final double newTopLat = latitude + angle;\n        final double newBottomLat = latitude - angle;\n        // Figuring out when we escalate to a special case requires some prefiguring\n        double currentLonSpan = rightLon - leftLon;\n        if (currentLonSpan < 0.0)\n            currentLonSpan += Math.PI * 2.0;\n        double newLeftLon = leftLon - angle;\n        double newRightLon = rightLon + angle;\n        if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n            newLeftLon = -Math.PI;\n            newRightLon = Math.PI;\n        }\n        return GeoBBoxFactory.makeGeoBBox(newTopLat,newBottomLat,newLeftLon,newRightLon);\n    }\n\n","sourceOld":"    @Override\n    public GeoBBox expand(double angle)\n    {\n        double newTopLat = latitude + angle;\n        double newBottomLat = latitude - angle;\n        // Figuring out when we escalate to a special case requires some prefiguring\n        double currentLonSpan = rightLon - leftLon;\n        if (currentLonSpan < 0.0)\n            currentLonSpan += Math.PI * 2.0;\n        double newLeftLon = leftLon - angle;\n        double newRightLon = rightLon + angle;\n        if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n            newLeftLon = -Math.PI;\n            newRightLon = Math.PI;\n        }\n        return GeoBBoxFactory.makeGeoBBox(newTopLat,newBottomLat,newLeftLon,newRightLon);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","sourceNew":"  @Override\n  public GeoBBox expand(final double angle) {\n    final double newTopLat = latitude + angle;\n    final double newBottomLat = latitude - angle;\n    // Figuring out when we escalate to a special case requires some prefiguring\n    double currentLonSpan = rightLon - leftLon;\n    if (currentLonSpan < 0.0)\n      currentLonSpan += Math.PI * 2.0;\n    double newLeftLon = leftLon - angle;\n    double newRightLon = rightLon + angle;\n    if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n      newLeftLon = -Math.PI;\n      newRightLon = Math.PI;\n    }\n    return GeoBBoxFactory.makeGeoBBox(newTopLat, newBottomLat, newLeftLon, newRightLon);\n  }\n\n","sourceOld":"    @Override\n    public GeoBBox expand(final double angle)\n    {\n        final double newTopLat = latitude + angle;\n        final double newBottomLat = latitude - angle;\n        // Figuring out when we escalate to a special case requires some prefiguring\n        double currentLonSpan = rightLon - leftLon;\n        if (currentLonSpan < 0.0)\n            currentLonSpan += Math.PI * 2.0;\n        double newLeftLon = leftLon - angle;\n        double newRightLon = rightLon + angle;\n        if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n            newLeftLon = -Math.PI;\n            newRightLon = Math.PI;\n        }\n        return GeoBBoxFactory.makeGeoBBox(newTopLat,newBottomLat,newLeftLon,newRightLon);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public GeoBBox expand(final double angle) {\n    final double newTopLat = latitude + angle;\n    final double newBottomLat = latitude - angle;\n    // Figuring out when we escalate to a special case requires some prefiguring\n    double currentLonSpan = rightLon - leftLon;\n    if (currentLonSpan < 0.0)\n      currentLonSpan += Math.PI * 2.0;\n    double newLeftLon = leftLon - angle;\n    double newRightLon = rightLon + angle;\n    if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n      newLeftLon = -Math.PI;\n      newRightLon = Math.PI;\n    }\n    return GeoBBoxFactory.makeGeoBBox(newTopLat, newBottomLat, newLeftLon, newRightLon);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","sourceNew":"  @Override\n  public GeoBBox expand(final double angle) {\n    final double newTopLat = latitude + angle;\n    final double newBottomLat = latitude - angle;\n    // Figuring out when we escalate to a special case requires some prefiguring\n    double currentLonSpan = rightLon - leftLon;\n    if (currentLonSpan < 0.0)\n      currentLonSpan += Math.PI * 2.0;\n    double newLeftLon = leftLon - angle;\n    double newRightLon = rightLon + angle;\n    if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n      newLeftLon = -Math.PI;\n      newRightLon = Math.PI;\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, newTopLat, newBottomLat, newLeftLon, newRightLon);\n  }\n\n","sourceOld":"  @Override\n  public GeoBBox expand(final double angle) {\n    final double newTopLat = latitude + angle;\n    final double newBottomLat = latitude - angle;\n    // Figuring out when we escalate to a special case requires some prefiguring\n    double currentLonSpan = rightLon - leftLon;\n    if (currentLonSpan < 0.0)\n      currentLonSpan += Math.PI * 2.0;\n    double newLeftLon = leftLon - angle;\n    double newRightLon = rightLon + angle;\n    if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n      newLeftLon = -Math.PI;\n      newRightLon = Math.PI;\n    }\n    return GeoBBoxFactory.makeGeoBBox(newTopLat, newBottomLat, newLeftLon, newRightLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":3,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","sourceNew":"  @Override\n  public GeoBBox expand(final double angle) {\n    final double newTopLat = latitude + angle;\n    final double newBottomLat = latitude - angle;\n    // Figuring out when we escalate to a special case requires some prefiguring\n    double currentLonSpan = rightLon - leftLon;\n    if (currentLonSpan < 0.0)\n      currentLonSpan += Math.PI * 2.0;\n    double newLeftLon = leftLon - angle;\n    double newRightLon = rightLon + angle;\n    if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n      newLeftLon = -Math.PI;\n      newRightLon = Math.PI;\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, newTopLat, newBottomLat, newLeftLon, newRightLon);\n  }\n\n","sourceOld":"  @Override\n  public GeoBBox expand(final double angle) {\n    final double newTopLat = latitude + angle;\n    final double newBottomLat = latitude - angle;\n    // Figuring out when we escalate to a special case requires some prefiguring\n    double currentLonSpan = rightLon - leftLon;\n    if (currentLonSpan < 0.0)\n      currentLonSpan += Math.PI * 2.0;\n    double newLeftLon = leftLon - angle;\n    double newRightLon = rightLon + angle;\n    if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n      newLeftLon = -Math.PI;\n      newRightLon = Math.PI;\n    }\n    return GeoBBoxFactory.makeGeoBBox(newTopLat, newBottomLat, newLeftLon, newRightLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#expand(double).mjava","sourceNew":"  @Override\n  public GeoBBox expand(final double angle) {\n    final double newTopLat = latitude + angle;\n    final double newBottomLat = latitude - angle;\n    // Figuring out when we escalate to a special case requires some prefiguring\n    double currentLonSpan = rightLon - leftLon;\n    if (currentLonSpan < 0.0)\n      currentLonSpan += Math.PI * 2.0;\n    double newLeftLon = leftLon - angle;\n    double newRightLon = rightLon + angle;\n    if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n      newLeftLon = -Math.PI;\n      newRightLon = Math.PI;\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, newTopLat, newBottomLat, newLeftLon, newRightLon);\n  }\n\n","sourceOld":"  @Override\n  public GeoBBox expand(final double angle) {\n    final double newTopLat = latitude + angle;\n    final double newBottomLat = latitude - angle;\n    // Figuring out when we escalate to a special case requires some prefiguring\n    double currentLonSpan = rightLon - leftLon;\n    if (currentLonSpan < 0.0)\n      currentLonSpan += Math.PI * 2.0;\n    double newLeftLon = leftLon - angle;\n    double newRightLon = rightLon + angle;\n    if (currentLonSpan + 2.0 * angle >= Math.PI * 2.0) {\n      newLeftLon = -Math.PI;\n      newRightLon = Math.PI;\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, newTopLat, newBottomLat, newLeftLon, newRightLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ea1a3e0b93787916a1002c2be9f1043b6575ea69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0fb9dbed1415914caa27460f8abb7afadaa61451":["ea1a3e0b93787916a1002c2be9f1043b6575ea69"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["fec06d6753751ae302c7d35866763e6cb414112d"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"ea1a3e0b93787916a1002c2be9f1043b6575ea69":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"0fb9dbed1415914caa27460f8abb7afadaa61451":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea1a3e0b93787916a1002c2be9f1043b6575ea69","c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"fec06d6753751ae302c7d35866763e6cb414112d":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}