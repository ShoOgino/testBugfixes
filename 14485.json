{"path":"solr/core/src/java/org/apache/solr/logging/jul/JulWatcher#setLogLevel(String,String).mjava","commits":[{"id":"829761a123d59d7a3c39e5f13fbc03de63f55ce5","date":1334686329,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/jul/JulWatcher#setLogLevel(String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\r\n  public void setLogLevel(String category, String level) {\r\n    if(LoggerInfo.ROOT_NAME.equals(category)) {\r\n      category = \"\";\r\n    }\r\n    \r\n    Logger log = LogManager.getLogManager().getLogger(category);\r\n    if(level==null||\"unset\".equals(level)||\"null\".equals(level)) {\r\n      if(log!=null) {\r\n        log.setLevel(null);\r\n      }\r\n    }\r\n    else {\r\n      if(log==null) {\r\n        log = Logger.getLogger(category); // create it\r\n      }\r\n      log.setLevel(Level.parse(level));\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d681ca1a1c487b2501ef9bde8602a65c4c717a46","date":1346078839,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/jul/JulWatcher#setLogLevel(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/jul/JulWatcher#setLogLevel(String,String).mjava","sourceNew":"  @Override\n  public void setLogLevel(String category, String level) {\n    if(LoggerInfo.ROOT_NAME.equals(category)) {\n      category = \"\";\n    }\n    \n    Logger log = LogManager.getLogManager().getLogger(category);\n    if(level==null||\"unset\".equals(level)||\"null\".equals(level)) {\n      if(log!=null) {\n        log.setLevel(null);\n      }\n    }\n    else {\n      if(log==null) {\n        log = Logger.getLogger(category); // create it\n      }\n      log.setLevel(Level.parse(level));\n    }\n  }\n\n","sourceOld":"  @Override\r\n  public void setLogLevel(String category, String level) {\r\n    if(LoggerInfo.ROOT_NAME.equals(category)) {\r\n      category = \"\";\r\n    }\r\n    \r\n    Logger log = LogManager.getLogManager().getLogger(category);\r\n    if(level==null||\"unset\".equals(level)||\"null\".equals(level)) {\r\n      if(log!=null) {\r\n        log.setLevel(null);\r\n      }\r\n    }\r\n    else {\r\n      if(log==null) {\r\n        log = Logger.getLogger(category); // create it\r\n      }\r\n      log.setLevel(Level.parse(level));\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/logging/jul/JulWatcher#setLogLevel(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/jul/JulWatcher#setLogLevel(String,String).mjava","sourceNew":"  @Override\n  public void setLogLevel(String category, String level) {\n    if(LoggerInfo.ROOT_NAME.equals(category)) {\n      category = \"\";\n    }\n    \n    Logger log = LogManager.getLogManager().getLogger(category);\n    if(level==null||\"unset\".equals(level)||\"null\".equals(level)) {\n      if(log!=null) {\n        log.setLevel(null);\n      }\n    }\n    else {\n      if(log==null) {\n        log = Logger.getLogger(category); // create it\n      }\n      log.setLevel(Level.parse(level));\n    }\n  }\n\n","sourceOld":"  @Override\r\n  public void setLogLevel(String category, String level) {\r\n    if(LoggerInfo.ROOT_NAME.equals(category)) {\r\n      category = \"\";\r\n    }\r\n    \r\n    Logger log = LogManager.getLogManager().getLogger(category);\r\n    if(level==null||\"unset\".equals(level)||\"null\".equals(level)) {\r\n      if(log!=null) {\r\n        log.setLevel(null);\r\n      }\r\n    }\r\n    else {\r\n      if(log==null) {\r\n        log = Logger.getLogger(category); // create it\r\n      }\r\n      log.setLevel(Level.parse(level));\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d681ca1a1c487b2501ef9bde8602a65c4c717a46":["829761a123d59d7a3c39e5f13fbc03de63f55ce5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"829761a123d59d7a3c39e5f13fbc03de63f55ce5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["829761a123d59d7a3c39e5f13fbc03de63f55ce5","d681ca1a1c487b2501ef9bde8602a65c4c717a46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d681ca1a1c487b2501ef9bde8602a65c4c717a46"]},"commit2Childs":{"d681ca1a1c487b2501ef9bde8602a65c4c717a46":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["829761a123d59d7a3c39e5f13fbc03de63f55ce5"],"829761a123d59d7a3c39e5f13fbc03de63f55ce5":["d681ca1a1c487b2501ef9bde8602a65c4c717a46","05a14b2611ead08655a2b2bdc61632eb31316e57"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}