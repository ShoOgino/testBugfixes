{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.TestResultInterceptorRule#apply(Statement,Description).mjava","commits":[{"id":"1e6d0f38037e0125421d8e737992d511b5567b26","date":1329215236,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.TestResultInterceptorRule#apply(Statement,Description).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Statement apply(final Statement base, final Description description) {\n      return new Statement() {\n        @Override\n        public void evaluate() throws Throwable {\n          starting(description);\n          try {\n            base.evaluate();\n          } catch (AssumptionViolatedException e) {\n            assumptionIgnored(e, description);\n            throw e;\n          } catch (Throwable t) {\n            failed(t, description);\n            throw t;\n          } finally {\n            ending(description);\n          }\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0ed97703eb37066163749ca2f635433a2f2184a5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ed97703eb37066163749ca2f635433a2f2184a5","date":1332623674,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.TestResultInterceptorRule#apply(Statement,Description).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.TestResultInterceptorRule#apply(Statement,Description).mjava","sourceNew":"    @Override\n    public Statement apply(final Statement base, final Description description) {\n      return new Statement() {\n        @Override\n        public void evaluate() throws Throwable {\n          try {\n            base.evaluate();\n          } catch (AssumptionViolatedException e) {\n            assumptionIgnored(e, description);\n            throw e;\n          } catch (Throwable t) {\n            failed(t, description);\n            throw t;\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Statement apply(final Statement base, final Description description) {\n      return new Statement() {\n        @Override\n        public void evaluate() throws Throwable {\n          starting(description);\n          try {\n            base.evaluate();\n          } catch (AssumptionViolatedException e) {\n            assumptionIgnored(e, description);\n            throw e;\n          } catch (Throwable t) {\n            failed(t, description);\n            throw t;\n          } finally {\n            ending(description);\n          }\n        }\n      };\n    }\n\n","bugFix":["1e6d0f38037e0125421d8e737992d511b5567b26"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.TestResultInterceptorRule#apply(Statement,Description).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.TestResultInterceptorRule#apply(Statement,Description).mjava","sourceNew":"    @Override\n    public Statement apply(final Statement base, final Description description) {\n      return new Statement() {\n        @Override\n        public void evaluate() throws Throwable {\n          try {\n            base.evaluate();\n          } catch (AssumptionViolatedException t) {\n            throw t;\n          } catch (Throwable t) {\n            failed(t, description);\n            throw t;\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Statement apply(final Statement base, final Description description) {\n      return new Statement() {\n        @Override\n        public void evaluate() throws Throwable {\n          try {\n            base.evaluate();\n          } catch (AssumptionViolatedException e) {\n            assumptionIgnored(e, description);\n            throw e;\n          } catch (Throwable t) {\n            failed(t, description);\n            throw t;\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.TestResultInterceptorRule#apply(Statement,Description).mjava","sourceNew":null,"sourceOld":"    @Override\n    public Statement apply(final Statement base, final Description description) {\n      return new Statement() {\n        @Override\n        public void evaluate() throws Throwable {\n          try {\n            base.evaluate();\n          } catch (AssumptionViolatedException t) {\n            throw t;\n          } catch (Throwable t) {\n            failed(t, description);\n            throw t;\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ed97703eb37066163749ca2f635433a2f2184a5":["1e6d0f38037e0125421d8e737992d511b5567b26"],"1e6d0f38037e0125421d8e737992d511b5567b26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["0ed97703eb37066163749ca2f635433a2f2184a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5da0b42730b6b99b31389ef94cb97384e83b9ede"]},"commit2Childs":{"0ed97703eb37066163749ca2f635433a2f2184a5":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"1e6d0f38037e0125421d8e737992d511b5567b26":["0ed97703eb37066163749ca2f635433a2f2184a5"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6d0f38037e0125421d8e737992d511b5567b26"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}