{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","sourceNew":"  /**\n   * Registers a SolrCore descriptor in the registry using the core's name.\n   * If returnPrev==false, the old core, if different, is closed.\n   * @return a previous core having the same name if it existed and returnPrev==true\n   */\n  public SolrCore register(SolrCore core, boolean returnPrev) {\n    return register(core.getName(), core, returnPrev);\n  }\n\n","sourceOld":"  /**\n   * Registers a SolrCore descriptor in the registry using the core's name.\n   * If returnPrev==false, the old core, if different, is closed.\n   * @return a previous core having the same name if it existed and returnPrev==true\n   */\n  public SolrCore register(SolrCore core, boolean returnPrev) {\n    return register(core.getName(), core, returnPrev);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","sourceNew":"  /**\n   * Registers a SolrCore descriptor in the registry using the core's name.\n   * If returnPrev==false, the old core, if different, is closed.\n   * @return a previous core having the same name if it existed and returnPrev==true\n   */\n  public SolrCore register(SolrCore core, boolean returnPrev) {\n    return register(core.getName(), core, returnPrev);\n  }\n\n","sourceOld":"  /**\n   * Registers a SolrCore descriptor in the registry using the core's name.\n   * If returnPrev==false, the old core, if different, is closed.\n   * @return a previous core having the same name if it existed and returnPrev==true\n   */\n  public SolrCore register(SolrCore core, boolean returnPrev) {\n    return register(core.getName(), core, returnPrev);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","sourceNew":"  /**\n   * Registers a SolrCore descriptor in the registry using the core's name.\n   * If returnPrev==false, the old core, if different, is closed.\n   * @return a previous core having the same name if it existed and returnPrev==true\n   */\n  public SolrCore register(SolrCore core, boolean returnPrev) {\n    return register(core.getName(), core, returnPrev);\n  }\n\n","sourceOld":"  /**\n   * Registers a SolrCore descriptor in the registry using the core's name.\n   * If returnPrev==false, the old core, if different, is closed.\n   * @return a previous core having the same name if it existed and returnPrev==true\n   */\n  public SolrCore register(SolrCore core, boolean returnPrev) {\n    return register(core.getName(), core, returnPrev);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","sourceNew":"  /**\n   * Registers a SolrCore descriptor in the registry using the core's name.\n   * If returnPrev==false, the old core, if different, is closed.\n   * @return a previous core having the same name if it existed and returnPrev==true\n   */\n  public SolrCore register(SolrCore core, boolean returnPrev) {\n    return registerCore(false, core.getName(), core, returnPrev);\n  }\n\n","sourceOld":"  /**\n   * Registers a SolrCore descriptor in the registry using the core's name.\n   * If returnPrev==false, the old core, if different, is closed.\n   * @return a previous core having the same name if it existed and returnPrev==true\n   */\n  public SolrCore register(SolrCore core, boolean returnPrev) {\n    return register(core.getName(), core, returnPrev);\n  }\n\n","bugFix":null,"bugIntro":["8bc9f3cab5bcaa03021a8677cda720596f0da2f8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8bc9f3cab5bcaa03021a8677cda720596f0da2f8","date":1383747827,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","sourceNew":"  /**\n   * Registers a SolrCore descriptor in the registry using the core's name.\n   * If returnPrev==false, the old core, if different, is closed.\n   * @return a previous core having the same name if it existed and returnPrev==true\n   */\n  public SolrCore register(SolrCore core, boolean returnPrev) {\n    return registerCore(core.getCoreDescriptor().isTransient(), core.getName(), core, returnPrev);\n  }\n\n","sourceOld":"  /**\n   * Registers a SolrCore descriptor in the registry using the core's name.\n   * If returnPrev==false, the old core, if different, is closed.\n   * @return a previous core having the same name if it existed and returnPrev==true\n   */\n  public SolrCore register(SolrCore core, boolean returnPrev) {\n    return registerCore(false, core.getName(), core, returnPrev);\n  }\n\n","bugFix":["a837c064b67fa63a9394136e31218b908cdcf783"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85032ab568b3f50eabd577aaa994ba197db93758","date":1404157267,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#register(SolrCore,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Registers a SolrCore descriptor in the registry using the core's name.\n   * If returnPrev==false, the old core, if different, is closed.\n   * @return a previous core having the same name if it existed and returnPrev==true\n   */\n  public SolrCore register(SolrCore core, boolean returnPrev) {\n    return registerCore(core.getCoreDescriptor().isTransient(), core.getName(), core, returnPrev);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a837c064b67fa63a9394136e31218b908cdcf783":["c26f00b574427b55127e869b935845554afde1fa"],"8bc9f3cab5bcaa03021a8677cda720596f0da2f8":["a837c064b67fa63a9394136e31218b908cdcf783"],"85032ab568b3f50eabd577aaa994ba197db93758":["8bc9f3cab5bcaa03021a8677cda720596f0da2f8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85032ab568b3f50eabd577aaa994ba197db93758"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a837c064b67fa63a9394136e31218b908cdcf783"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"a837c064b67fa63a9394136e31218b908cdcf783":["8bc9f3cab5bcaa03021a8677cda720596f0da2f8"],"8bc9f3cab5bcaa03021a8677cda720596f0da2f8":["85032ab568b3f50eabd577aaa994ba197db93758"],"85032ab568b3f50eabd577aaa994ba197db93758":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}