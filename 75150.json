{"path":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","commits":[{"id":"eb58c4024f450cc56f3a748012536d763700adb5","date":1495748960,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","date":1601832109,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n\n","sourceOld":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eb58c4024f450cc56f3a748012536d763700adb5"],"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"eb58c4024f450cc56f3a748012536d763700adb5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eb58c4024f450cc56f3a748012536d763700adb5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eb58c4024f450cc56f3a748012536d763700adb5":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","eb58c4024f450cc56f3a748012536d763700adb5","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}