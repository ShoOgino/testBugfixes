{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterStallControl#updateStalled(boolean).mjava","commits":[{"id":"5e38f40562eb7c165ae08ab2367a031883138354","date":1340287338,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterStallControl#updateStalled(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Update the stalled flag status. This method will set the stalled flag to\n   * <code>true</code> iff the number of flushing\n   * {@link DocumentsWriterPerThread} is greater than the number of active\n   * {@link DocumentsWriterPerThread}. Otherwise it will reset the\n   * {@link DocumentsWriterStallControl} to healthy and release all threads\n   * waiting on {@link #waitIfStalled()}\n   */\n  synchronized void updateStalled(boolean stalled) {\n    this.stalled = stalled;\n    if (stalled) {\n      wasStalled = true;\n    }\n    notifyAll();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterStallControl#updateStalled(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Update the stalled flag status. This method will set the stalled flag to\n   * <code>true</code> iff the number of flushing\n   * {@link DocumentsWriterPerThread} is greater than the number of active\n   * {@link DocumentsWriterPerThread}. Otherwise it will reset the\n   * {@link DocumentsWriterStallControl} to healthy and release all threads\n   * waiting on {@link #waitIfStalled()}\n   */\n  synchronized void updateStalled(boolean stalled) {\n    this.stalled = stalled;\n    if (stalled) {\n      wasStalled = true;\n    }\n    notifyAll();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be382406ee6e8449e49c082b50c31367e7add702","date":1469488703,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterStallControl#updateStalled(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterStallControl#updateStalled(boolean).mjava","sourceNew":"  /**\n   * Update the stalled flag status. This method will set the stalled flag to\n   * <code>true</code> iff the number of flushing\n   * {@link DocumentsWriterPerThread} is greater than the number of active\n   * {@link DocumentsWriterPerThread}. Otherwise it will reset the\n   * {@link DocumentsWriterStallControl} to healthy and release all threads\n   * waiting on {@link #waitIfStalled()}\n   */\n  synchronized void updateStalled(boolean stalled) {\n    if (this.stalled != stalled) {\n      this.stalled = stalled;\n      if (stalled) {\n        wasStalled = true;\n      }\n      notifyAll();\n    }\n  }\n\n","sourceOld":"  /**\n   * Update the stalled flag status. This method will set the stalled flag to\n   * <code>true</code> iff the number of flushing\n   * {@link DocumentsWriterPerThread} is greater than the number of active\n   * {@link DocumentsWriterPerThread}. Otherwise it will reset the\n   * {@link DocumentsWriterStallControl} to healthy and release all threads\n   * waiting on {@link #waitIfStalled()}\n   */\n  synchronized void updateStalled(boolean stalled) {\n    this.stalled = stalled;\n    if (stalled) {\n      wasStalled = true;\n    }\n    notifyAll();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08973aa47f2cf98a588293a53af4e948952ccfb","date":1469518724,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterStallControl#updateStalled(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterStallControl#updateStalled(boolean).mjava","sourceNew":"  /**\n   * Update the stalled flag status. This method will set the stalled flag to\n   * <code>true</code> iff the number of flushing\n   * {@link DocumentsWriterPerThread} is greater than the number of active\n   * {@link DocumentsWriterPerThread}. Otherwise it will reset the\n   * {@link DocumentsWriterStallControl} to healthy and release all threads\n   * waiting on {@link #waitIfStalled()}\n   */\n  synchronized void updateStalled(boolean stalled) {\n    if (this.stalled != stalled) {\n      this.stalled = stalled;\n      if (stalled) {\n        wasStalled = true;\n      }\n      notifyAll();\n    }\n  }\n\n","sourceOld":"  /**\n   * Update the stalled flag status. This method will set the stalled flag to\n   * <code>true</code> iff the number of flushing\n   * {@link DocumentsWriterPerThread} is greater than the number of active\n   * {@link DocumentsWriterPerThread}. Otherwise it will reset the\n   * {@link DocumentsWriterStallControl} to healthy and release all threads\n   * waiting on {@link #waitIfStalled()}\n   */\n  synchronized void updateStalled(boolean stalled) {\n    this.stalled = stalled;\n    if (stalled) {\n      wasStalled = true;\n    }\n    notifyAll();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterStallControl#updateStalled(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterStallControl#updateStalled(boolean).mjava","sourceNew":"  /**\n   * Update the stalled flag status. This method will set the stalled flag to\n   * <code>true</code> iff the number of flushing\n   * {@link DocumentsWriterPerThread} is greater than the number of active\n   * {@link DocumentsWriterPerThread}. Otherwise it will reset the\n   * {@link DocumentsWriterStallControl} to healthy and release all threads\n   * waiting on {@link #waitIfStalled()}\n   */\n  synchronized void updateStalled(boolean stalled) {\n    if (this.stalled != stalled) {\n      this.stalled = stalled;\n      if (stalled) {\n        wasStalled = true;\n      }\n      notifyAll();\n    }\n  }\n\n","sourceOld":"  /**\n   * Update the stalled flag status. This method will set the stalled flag to\n   * <code>true</code> iff the number of flushing\n   * {@link DocumentsWriterPerThread} is greater than the number of active\n   * {@link DocumentsWriterPerThread}. Otherwise it will reset the\n   * {@link DocumentsWriterStallControl} to healthy and release all threads\n   * waiting on {@link #waitIfStalled()}\n   */\n  synchronized void updateStalled(boolean stalled) {\n    this.stalled = stalled;\n    if (stalled) {\n      wasStalled = true;\n    }\n    notifyAll();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5e38f40562eb7c165ae08ab2367a031883138354":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5e38f40562eb7c165ae08ab2367a031883138354"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be382406ee6e8449e49c082b50c31367e7add702":["5e38f40562eb7c165ae08ab2367a031883138354"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["5e38f40562eb7c165ae08ab2367a031883138354","be382406ee6e8449e49c082b50c31367e7add702"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5e38f40562eb7c165ae08ab2367a031883138354","d08973aa47f2cf98a588293a53af4e948952ccfb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d08973aa47f2cf98a588293a53af4e948952ccfb"]},"commit2Childs":{"5e38f40562eb7c165ae08ab2367a031883138354":["fe33227f6805edab2036cbb80645cc4e2d1fa424","be382406ee6e8449e49c082b50c31367e7add702","d08973aa47f2cf98a588293a53af4e948952ccfb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5e38f40562eb7c165ae08ab2367a031883138354","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"be382406ee6e8449e49c082b50c31367e7add702":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}