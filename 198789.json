{"path":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","commits":[{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7","date":1255555265,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT).setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT).setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":["e7bbe2c8b74e0e1582b3bb4518332fef84dcd8cb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexesNoOptimize(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["4256bc1b3c94786287ccdfc751230374521843cf"],"4256bc1b3c94786287ccdfc751230374521843cf":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["4256bc1b3c94786287ccdfc751230374521843cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"4256bc1b3c94786287ccdfc751230374521843cf":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}