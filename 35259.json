{"path":"lucene/sandbox/src/java/org/apache/lucene/search/IndexSortSortedNumericDocValuesRangeQuery#createWeight(IndexSearcher,ScoreMode,float).mjava","commits":[{"id":"5b5ad3c44dc5e1b8edf90947b6d8d2bd24002afb","date":1561533468,"type":0,"author":"Julie Tibshirani","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/IndexSortSortedNumericDocValuesRangeQuery#createWeight(IndexSearcher,ScoreMode,float).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n    Weight fallbackWeight = fallbackQuery.createWeight(searcher, scoreMode, boost);\n\n    return new ConstantScoreWeight(this, boost) {\n      @Override\n      public Scorer scorer(LeafReaderContext context) throws IOException {\n        SortedNumericDocValues sortedNumericValues = DocValues.getSortedNumeric(context.reader(), field);\n        NumericDocValues numericValues = DocValues.unwrapSingleton(sortedNumericValues);\n\n        if (numericValues != null) {\n          Sort indexSort = context.reader().getMetaData().getSort();\n          if (indexSort != null\n              && indexSort.getSort().length > 0\n              && indexSort.getSort()[0].getField().equals(field)) {\n\n            SortField sortField = indexSort.getSort()[0];\n            DocIdSetIterator disi = getDocIdSetIterator(sortField, context, numericValues);\n            return new ConstantScoreScorer(this, score(), scoreMode, disi);\n          }\n        }\n        return fallbackWeight.scorer(context);\n      }\n\n      @Override\n      public boolean isCacheable(LeafReaderContext ctx) {\n        // Both queries should always return the same values, so we can just check\n        // if the fallback query is cacheable.\n        return fallbackWeight.isCacheable(ctx);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b5ad3c44dc5e1b8edf90947b6d8d2bd24002afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b5ad3c44dc5e1b8edf90947b6d8d2bd24002afb"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b5ad3c44dc5e1b8edf90947b6d8d2bd24002afb"],"5b5ad3c44dc5e1b8edf90947b6d8d2bd24002afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}