{"path":"src/java/org/apache/lucene/index/IndexCommit#equals(Object).mjava","commits":[{"id":"8a1559506fd82ede79bd8e60facef2a57524e175","date":1204808228,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexCommit#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Two IndexCommits are equal if both their Directory and\n   * segmentsFileName are equal.\n   */\n  public boolean equals(Object other) {\n    if (other instanceof IndexCommit) {\n      IndexCommit otherCommit = (IndexCommit) other;\n      return otherCommit.getDirectory().equals(getDirectory()) && otherCommit.getSegmentsFileName().equals(getSegmentsFileName());\n    } else\n      return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","2c6d762d78ab230c3cf5f372ce5dac31dbf7a93a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"21d3cf4e18f0d14132783b26d5531fb5e475f575","date":1212886271,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexCommit#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/IndexCommit#equals(Object).mjava","sourceNew":"  /**\n   * Two IndexCommits are equal if both their Directory and\n   * segmentsFileName are equal.\n   */\n  public boolean equals(Object other) {\n    if (other instanceof IndexCommit) {\n      IndexCommit otherCommit = (IndexCommit) other;\n      return otherCommit.getDirectory().equals(getDirectory()) && otherCommit.getVersion() == getVersion();\n    } else\n      return false;\n  }\n\n","sourceOld":"  /**\n   * Two IndexCommits are equal if both their Directory and\n   * segmentsFileName are equal.\n   */\n  public boolean equals(Object other) {\n    if (other instanceof IndexCommit) {\n      IndexCommit otherCommit = (IndexCommit) other;\n      return otherCommit.getDirectory().equals(getDirectory()) && otherCommit.getSegmentsFileName().equals(getSegmentsFileName());\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ac785906c92e4048ffc28f7c23a45541d3cca9bf","date":1214322066,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexCommit#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/IndexCommit#equals(Object).mjava","sourceNew":"  /**\n   * Two IndexCommits are equal if both their Directory and versions are equal.\n   */\n  public boolean equals(Object other) {\n    if (other instanceof IndexCommit) {\n      IndexCommit otherCommit = (IndexCommit) other;\n      return otherCommit.getDirectory().equals(getDirectory()) && otherCommit.getVersion() == getVersion();\n    } else\n      return false;\n  }\n\n","sourceOld":"  /**\n   * Two IndexCommits are equal if both their Directory and\n   * segmentsFileName are equal.\n   */\n  public boolean equals(Object other) {\n    if (other instanceof IndexCommit) {\n      IndexCommit otherCommit = (IndexCommit) other;\n      return otherCommit.getDirectory().equals(getDirectory()) && otherCommit.getVersion() == getVersion();\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":["2c6d762d78ab230c3cf5f372ce5dac31dbf7a93a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexCommit#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/IndexCommit#equals(Object).mjava","sourceNew":"  /**\n   * Two IndexCommits are equal if both their Directory and versions are equal.\n   */\n  @Override\n  public boolean equals(Object other) {\n    if (other instanceof IndexCommit) {\n      IndexCommit otherCommit = (IndexCommit) other;\n      return otherCommit.getDirectory().equals(getDirectory()) && otherCommit.getVersion() == getVersion();\n    } else\n      return false;\n  }\n\n","sourceOld":"  /**\n   * Two IndexCommits are equal if both their Directory and versions are equal.\n   */\n  public boolean equals(Object other) {\n    if (other instanceof IndexCommit) {\n      IndexCommit otherCommit = (IndexCommit) other;\n      return otherCommit.getDirectory().equals(getDirectory()) && otherCommit.getVersion() == getVersion();\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexCommit#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/IndexCommit#equals(Object).mjava","sourceNew":"  /**\n   * Two IndexCommits are equal if both their Directory and versions are equal.\n   */\n  @Override\n  public boolean equals(Object other) {\n    if (other instanceof IndexCommit) {\n      IndexCommit otherCommit = (IndexCommit) other;\n      return otherCommit.getDirectory().equals(getDirectory()) && otherCommit.getVersion() == getVersion();\n    } else\n      return false;\n  }\n\n","sourceOld":"  /**\n   * Two IndexCommits are equal if both their Directory and versions are equal.\n   */\n  @Override\n  public boolean equals(Object other) {\n    if (other instanceof IndexCommit) {\n      IndexCommit otherCommit = (IndexCommit) other;\n      return otherCommit.getDirectory().equals(getDirectory()) && otherCommit.getVersion() == getVersion();\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"8a9e385641d717e641408d8fbbc62be8fc766357":["ac785906c92e4048ffc28f7c23a45541d3cca9bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d3cf4e18f0d14132783b26d5531fb5e475f575":["8a1559506fd82ede79bd8e60facef2a57524e175"],"ac785906c92e4048ffc28f7c23a45541d3cca9bf":["21d3cf4e18f0d14132783b26d5531fb5e475f575"],"8a1559506fd82ede79bd8e60facef2a57524e175":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a1559506fd82ede79bd8e60facef2a57524e175"],"21d3cf4e18f0d14132783b26d5531fb5e475f575":["ac785906c92e4048ffc28f7c23a45541d3cca9bf"],"ac785906c92e4048ffc28f7c23a45541d3cca9bf":["8a9e385641d717e641408d8fbbc62be8fc766357"],"8a1559506fd82ede79bd8e60facef2a57524e175":["21d3cf4e18f0d14132783b26d5531fb5e475f575"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}