{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#nextRow().mjava","commits":[{"id":"758fdd153bb361b47f22db79ace6af6f6b7b9330","date":1240213015,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#nextRow().mjava","pathOld":"/dev/null","sourceNew":"  public Map<String, Object> nextRow() {\n    if (rowcache != null) {\n      return getFromRowCache();\n    }\n    while (true) {\n      Map<String, Object> arow = delegate.nextRow();\n      if (arow == null) {\n        return null;\n      } else {\n        arow = applyTransformer(arow);\n        if (arow != null) return arow;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc522e509547df604bb64534602226d33e841f9a","date":1244725107,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (rowcache != null) {\n      return getFromRowCache();\n    }\n    while (true) {\n      Map<String, Object> arow = delegate.nextRow();\n      if (arow == null) {\n        return null;\n      } else {\n        arow = applyTransformer(arow);\n        if (arow != null) {\n          delegate.postTransform(arow);\n          return arow;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (rowcache != null) {\n      return getFromRowCache();\n    }\n    while (true) {\n      Map<String, Object> arow = delegate.nextRow();\n      if (arow == null) {\n        return null;\n      } else {\n        arow = applyTransformer(arow);\n        if (arow != null) return arow;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dad9d340d298fa5aa8bde353c9543d74070e5c5c","date":1261395775,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (rowcache != null) {\n      return getFromRowCache();\n    }\n    while (true) {\n      Map<String, Object> arow = null;\n      try {\n        arow = delegate.nextRow();\n      } catch (Exception e) {\n        if(ABORT.equals(onError)){\n          wrapAndThrow(SEVERE, e);\n        } else {\n          //SKIP is not really possible. If this calls the nextRow() again the Entityprocessor would be in an inconisttent state           \n          log.error(\"Exception in entity : \"+ entityName, e);          \n          return null;\n        }\n      }\n      if (arow == null) {\n        return null;\n      } else {\n        arow = applyTransformer(arow);\n        if (arow != null) {\n          delegate.postTransform(arow);\n          return arow;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (rowcache != null) {\n      return getFromRowCache();\n    }\n    while (true) {\n      Map<String, Object> arow = delegate.nextRow();\n      if (arow == null) {\n        return null;\n      } else {\n        arow = applyTransformer(arow);\n        if (arow != null) {\n          delegate.postTransform(arow);\n          return arow;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\n    if (rowcache != null) {\n      return getFromRowCache();\n    }\n    while (true) {\n      Map<String, Object> arow = null;\n      try {\n        arow = delegate.nextRow();\n      } catch (Exception e) {\n        if(ABORT.equals(onError)){\n          wrapAndThrow(SEVERE, e);\n        } else {\n          //SKIP is not really possible. If this calls the nextRow() again the Entityprocessor would be in an inconisttent state           \n          log.error(\"Exception in entity : \"+ entityName, e);          \n          return null;\n        }\n      }\n      if (arow == null) {\n        return null;\n      } else {\n        arow = applyTransformer(arow);\n        if (arow != null) {\n          delegate.postTransform(arow);\n          return arow;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public Map<String, Object> nextRow() {\n    if (rowcache != null) {\n      return getFromRowCache();\n    }\n    while (true) {\n      Map<String, Object> arow = null;\n      try {\n        arow = delegate.nextRow();\n      } catch (Exception e) {\n        if(ABORT.equals(onError)){\n          wrapAndThrow(SEVERE, e);\n        } else {\n          //SKIP is not really possible. If this calls the nextRow() again the Entityprocessor would be in an inconisttent state           \n          log.error(\"Exception in entity : \"+ entityName, e);          \n          return null;\n        }\n      }\n      if (arow == null) {\n        return null;\n      } else {\n        arow = applyTransformer(arow);\n        if (arow != null) {\n          delegate.postTransform(arow);\n          return arow;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bc522e509547df604bb64534602226d33e841f9a":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["dad9d340d298fa5aa8bde353c9543d74070e5c5c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dad9d340d298fa5aa8bde353c9543d74070e5c5c":["bc522e509547df604bb64534602226d33e841f9a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bc522e509547df604bb64534602226d33e841f9a":["dad9d340d298fa5aa8bde353c9543d74070e5c5c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["bc522e509547df604bb64534602226d33e841f9a"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"dad9d340d298fa5aa8bde353c9543d74070e5c5c":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}