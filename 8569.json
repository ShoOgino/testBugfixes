{"path":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState,Sorter.DocMap,NormsProducer).mjava","commits":[{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState,Sorter.DocMap,NormsProducer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState,Sorter.DocMap).mjava","sourceNew":"  void flush(Map<String,TermsHashPerField> fieldsToFlush, final SegmentWriteState state,\n      Sorter.DocMap sortMap, NormsProducer norms) throws IOException {\n    if (nextTermsHash != null) {\n      Map<String,TermsHashPerField> nextChildFields = new HashMap<>();\n      for (final Map.Entry<String,TermsHashPerField> entry : fieldsToFlush.entrySet()) {\n        nextChildFields.put(entry.getKey(), entry.getValue().nextPerField);\n      }\n      nextTermsHash.flush(nextChildFields, state, sortMap, norms);\n    }\n  }\n\n","sourceOld":"  void flush(Map<String,TermsHashPerField> fieldsToFlush, final SegmentWriteState state, Sorter.DocMap sortMap) throws IOException {\n    if (nextTermsHash != null) {\n      Map<String,TermsHashPerField> nextChildFields = new HashMap<>();\n      for (final Map.Entry<String,TermsHashPerField> entry : fieldsToFlush.entrySet()) {\n        nextChildFields.put(entry.getKey(), entry.getValue().nextPerField);\n      }\n      nextTermsHash.flush(nextChildFields, state, sortMap);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3cc3fa1ecad75b99ec55169e44628808f9866ad","date":1592311545,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState,Sorter.DocMap,NormsProducer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHash#flush(Map[String,TermsHashPerField],SegmentWriteState,Sorter.DocMap,NormsProducer).mjava","sourceNew":"  void flush(Map<String,TermsHashPerField> fieldsToFlush, final SegmentWriteState state,\n      Sorter.DocMap sortMap, NormsProducer norms) throws IOException {\n    if (nextTermsHash != null) {\n      Map<String,TermsHashPerField> nextChildFields = new HashMap<>();\n      for (final Map.Entry<String,TermsHashPerField> entry : fieldsToFlush.entrySet()) {\n        nextChildFields.put(entry.getKey(), entry.getValue().getNextPerField());\n      }\n      nextTermsHash.flush(nextChildFields, state, sortMap, norms);\n    }\n  }\n\n","sourceOld":"  void flush(Map<String,TermsHashPerField> fieldsToFlush, final SegmentWriteState state,\n      Sorter.DocMap sortMap, NormsProducer norms) throws IOException {\n    if (nextTermsHash != null) {\n      Map<String,TermsHashPerField> nextChildFields = new HashMap<>();\n      for (final Map.Entry<String,TermsHashPerField> entry : fieldsToFlush.entrySet()) {\n        nextChildFields.put(entry.getKey(), entry.getValue().nextPerField);\n      }\n      nextTermsHash.flush(nextChildFields, state, sortMap, norms);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["622a708571e534680618b3c5e0c28ac539a47776"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["622a708571e534680618b3c5e0c28ac539a47776"],"622a708571e534680618b3c5e0c28ac539a47776":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}