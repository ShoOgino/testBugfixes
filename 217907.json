{"path":"lucene/src/java/org/apache/lucene/index/codecs/CodecProvider#copyFrom(CodecProvider).mjava","commits":[{"id":"85130289d2ed101fcc2d8798511c7c5b020ffab4","date":1297239859,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/CodecProvider#copyFrom(CodecProvider).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Registers all codecs from the given provider including the field to codec\n   * mapping and the default field codec.\n   * <p>\n   * NOTE: This method will pass any codec from the given codec to\n   * {@link #register(Codec)} and sets fiels codecs via\n   * {@link #setFieldCodec(String, String)}.\n   */\n  public void copyFrom(CodecProvider other) {\n    final Collection<Codec> values = other.codecs.values();\n    for (Codec codec : values) {\n      register(codec);\n    }\n    final Set<Entry<String, String>> entrySet = other.perFieldMap.entrySet();\n    for (Entry<String, String> entry : entrySet) {\n      setFieldCodec(entry.getKey(), entry.getValue());\n    }\n    setDefaultFieldCodec(other.getDefaultFieldCodec());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0150c6e116b24d66f02d63fcb0758f336e8791e2","date":1307283797,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/CodecProvider#copyFrom(CodecProvider).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/CodecProvider#copyFrom(CodecProvider).mjava","sourceNew":"  /**\n   * Registers all codecs from the given provider including the field to codec\n   * mapping and the default field codec.\n   * <p>\n   * NOTE: This method will pass any codec from the given codec to\n   * {@link #register(Codec)} and sets fiels codecs via\n   * {@link #setFieldCodec(String, String)}.\n   * @return this\n   */\n  public CodecProvider copyFrom(CodecProvider other) {\n    final Collection<Codec> values = other.codecs.values();\n    for (Codec codec : values) {\n      register(codec);\n    }\n    final Set<Entry<String, String>> entrySet = other.perFieldMap.entrySet();\n    for (Entry<String, String> entry : entrySet) {\n      setFieldCodec(entry.getKey(), entry.getValue());\n    }\n    setDefaultFieldCodec(other.getDefaultFieldCodec());\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Registers all codecs from the given provider including the field to codec\n   * mapping and the default field codec.\n   * <p>\n   * NOTE: This method will pass any codec from the given codec to\n   * {@link #register(Codec)} and sets fiels codecs via\n   * {@link #setFieldCodec(String, String)}.\n   */\n  public void copyFrom(CodecProvider other) {\n    final Collection<Codec> values = other.codecs.values();\n    for (Codec codec : values) {\n      register(codec);\n    }\n    final Set<Entry<String, String>> entrySet = other.perFieldMap.entrySet();\n    for (Entry<String, String> entry : entrySet) {\n      setFieldCodec(entry.getKey(), entry.getValue());\n    }\n    setDefaultFieldCodec(other.getDefaultFieldCodec());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e3a8ce369ceb94bf000a72d53cee9dfdbaf0a23","date":1307284460,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/CodecProvider#copyFrom(CodecProvider).mjava","sourceNew":null,"sourceOld":"  /**\n   * Registers all codecs from the given provider including the field to codec\n   * mapping and the default field codec.\n   * <p>\n   * NOTE: This method will pass any codec from the given codec to\n   * {@link #register(Codec)} and sets fiels codecs via\n   * {@link #setFieldCodec(String, String)}.\n   * @return this\n   */\n  public CodecProvider copyFrom(CodecProvider other) {\n    final Collection<Codec> values = other.codecs.values();\n    for (Codec codec : values) {\n      register(codec);\n    }\n    final Set<Entry<String, String>> entrySet = other.perFieldMap.entrySet();\n    for (Entry<String, String> entry : entrySet) {\n      setFieldCodec(entry.getKey(), entry.getValue());\n    }\n    setDefaultFieldCodec(other.getDefaultFieldCodec());\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e3a8ce369ceb94bf000a72d53cee9dfdbaf0a23":["0150c6e116b24d66f02d63fcb0758f336e8791e2"],"0150c6e116b24d66f02d63fcb0758f336e8791e2":["85130289d2ed101fcc2d8798511c7c5b020ffab4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4e3a8ce369ceb94bf000a72d53cee9dfdbaf0a23":[],"0150c6e116b24d66f02d63fcb0758f336e8791e2":["4e3a8ce369ceb94bf000a72d53cee9dfdbaf0a23"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85130289d2ed101fcc2d8798511c7c5b020ffab4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["0150c6e116b24d66f02d63fcb0758f336e8791e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e3a8ce369ceb94bf000a72d53cee9dfdbaf0a23","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}