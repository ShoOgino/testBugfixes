{"path":"solr/core/src/java/org/apache/solr/handler/component/ShardHandlerFactory#newInstance(PluginInfo,SolrResourceLoader).mjava","commits":[{"id":"f225b9b576dc345ee8c27f91147b4afc0350511c","date":1373552135,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardHandlerFactory#newInstance(PluginInfo,SolrResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new ShardHandlerFactory instance\n   * @param info    a PluginInfo object defining which type to create.  If null,\n   *                the default {@link HttpShardHandlerFactory} will be used\n   * @param loader  a SolrResourceLoader used to find the ShardHandlerFactory classes\n   * @return a new, initialized ShardHandlerFactory instance\n   */\n  public static ShardHandlerFactory newInstance(PluginInfo info, SolrResourceLoader loader) {\n\n    if (info == null)\n      info = DEFAULT_SHARDHANDLER_INFO;\n\n    try {\n      ShardHandlerFactory shf = loader.findClass(info.className, ShardHandlerFactory.class).newInstance();\n      if (PluginInfoInitialized.class.isAssignableFrom(shf.getClass()))\n        PluginInfoInitialized.class.cast(shf).init(info);\n      return shf;\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          String.format(Locale.ROOT, \"Error instantiating shardHandlerFactory class [%s]: %s\",\n              info.className, e.getMessage()));\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5f526e91f1504e21ceb8278d23d43033faa33327"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardHandlerFactory#newInstance(PluginInfo,SolrResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new ShardHandlerFactory instance\n   * @param info    a PluginInfo object defining which type to create.  If null,\n   *                the default {@link HttpShardHandlerFactory} will be used\n   * @param loader  a SolrResourceLoader used to find the ShardHandlerFactory classes\n   * @return a new, initialized ShardHandlerFactory instance\n   */\n  public static ShardHandlerFactory newInstance(PluginInfo info, SolrResourceLoader loader) {\n\n    if (info == null)\n      info = DEFAULT_SHARDHANDLER_INFO;\n\n    try {\n      ShardHandlerFactory shf = loader.findClass(info.className, ShardHandlerFactory.class).newInstance();\n      if (PluginInfoInitialized.class.isAssignableFrom(shf.getClass()))\n        PluginInfoInitialized.class.cast(shf).init(info);\n      return shf;\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          String.format(Locale.ROOT, \"Error instantiating shardHandlerFactory class [%s]: %s\",\n              info.className, e.getMessage()));\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardHandlerFactory#newInstance(PluginInfo,SolrResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardHandlerFactory#newInstance(PluginInfo,SolrResourceLoader).mjava","sourceNew":"  /**\n   * Create a new ShardHandlerFactory instance\n   * @param info    a PluginInfo object defining which type to create.  If null,\n   *                the default {@link HttpShardHandlerFactory} will be used\n   * @param loader  a SolrResourceLoader used to find the ShardHandlerFactory classes\n   * @return a new, initialized ShardHandlerFactory instance\n   */\n  public static ShardHandlerFactory newInstance(PluginInfo info, SolrResourceLoader loader) {\n    if (info == null)\n      info = DEFAULT_SHARDHANDLER_INFO;\n\n    try {\n      ShardHandlerFactory shf = loader.findClass(info.className, ShardHandlerFactory.class).newInstance();\n      if (PluginInfoInitialized.class.isAssignableFrom(shf.getClass()))\n        PluginInfoInitialized.class.cast(shf).init(info);\n      return shf;\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          String.format(Locale.ROOT, \"Error instantiating shardHandlerFactory class [%s]: %s\",\n              info.className, e.getMessage()));\n    }\n\n  }\n\n","sourceOld":"  /**\n   * Create a new ShardHandlerFactory instance\n   * @param info    a PluginInfo object defining which type to create.  If null,\n   *                the default {@link HttpShardHandlerFactory} will be used\n   * @param loader  a SolrResourceLoader used to find the ShardHandlerFactory classes\n   * @return a new, initialized ShardHandlerFactory instance\n   */\n  public static ShardHandlerFactory newInstance(PluginInfo info, SolrResourceLoader loader) {\n\n    if (info == null)\n      info = DEFAULT_SHARDHANDLER_INFO;\n\n    try {\n      ShardHandlerFactory shf = loader.findClass(info.className, ShardHandlerFactory.class).newInstance();\n      if (PluginInfoInitialized.class.isAssignableFrom(shf.getClass()))\n        PluginInfoInitialized.class.cast(shf).init(info);\n      return shf;\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          String.format(Locale.ROOT, \"Error instantiating shardHandlerFactory class [%s]: %s\",\n              info.className, e.getMessage()));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f526e91f1504e21ceb8278d23d43033faa33327","date":1461099258,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardHandlerFactory#newInstance(PluginInfo,SolrResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardHandlerFactory#newInstance(PluginInfo,SolrResourceLoader).mjava","sourceNew":"  /**\n   * Create a new ShardHandlerFactory instance\n   * @param info    a PluginInfo object defining which type to create.  If null,\n   *                the default {@link HttpShardHandlerFactory} will be used\n   * @param loader  a SolrResourceLoader used to find the ShardHandlerFactory classes\n   * @return a new, initialized ShardHandlerFactory instance\n   */\n  public static ShardHandlerFactory newInstance(PluginInfo info, SolrResourceLoader loader) {\n    if (info == null)\n      info = DEFAULT_SHARDHANDLER_INFO;\n\n    try {\n      ShardHandlerFactory shf = loader.findClass(info.className, ShardHandlerFactory.class).newInstance();\n      if (PluginInfoInitialized.class.isAssignableFrom(shf.getClass()))\n        PluginInfoInitialized.class.cast(shf).init(info);\n      return shf;\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          String.format(Locale.ROOT, \"Error instantiating shardHandlerFactory class [%s]: %s\",\n                        info.className, e.getMessage()), e);\n    }\n\n  }\n\n","sourceOld":"  /**\n   * Create a new ShardHandlerFactory instance\n   * @param info    a PluginInfo object defining which type to create.  If null,\n   *                the default {@link HttpShardHandlerFactory} will be used\n   * @param loader  a SolrResourceLoader used to find the ShardHandlerFactory classes\n   * @return a new, initialized ShardHandlerFactory instance\n   */\n  public static ShardHandlerFactory newInstance(PluginInfo info, SolrResourceLoader loader) {\n    if (info == null)\n      info = DEFAULT_SHARDHANDLER_INFO;\n\n    try {\n      ShardHandlerFactory shf = loader.findClass(info.className, ShardHandlerFactory.class).newInstance();\n      if (PluginInfoInitialized.class.isAssignableFrom(shf.getClass()))\n        PluginInfoInitialized.class.cast(shf).init(info);\n      return shf;\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          String.format(Locale.ROOT, \"Error instantiating shardHandlerFactory class [%s]: %s\",\n              info.className, e.getMessage()));\n    }\n\n  }\n\n","bugFix":["f225b9b576dc345ee8c27f91147b4afc0350511c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da5b29d71698f5fe4e0552bd2482173a88e3bf9c","date":1461111138,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardHandlerFactory#newInstance(PluginInfo,SolrResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardHandlerFactory#newInstance(PluginInfo,SolrResourceLoader).mjava","sourceNew":"  /**\n   * Create a new ShardHandlerFactory instance\n   * @param info    a PluginInfo object defining which type to create.  If null,\n   *                the default {@link HttpShardHandlerFactory} will be used\n   * @param loader  a SolrResourceLoader used to find the ShardHandlerFactory classes\n   * @return a new, initialized ShardHandlerFactory instance\n   */\n  public static ShardHandlerFactory newInstance(PluginInfo info, SolrResourceLoader loader) {\n    if (info == null)\n      info = DEFAULT_SHARDHANDLER_INFO;\n\n    try {\n      ShardHandlerFactory shf = loader.findClass(info.className, ShardHandlerFactory.class).newInstance();\n      if (PluginInfoInitialized.class.isAssignableFrom(shf.getClass()))\n        PluginInfoInitialized.class.cast(shf).init(info);\n      return shf;\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          String.format(Locale.ROOT, \"Error instantiating shardHandlerFactory class [%s]: %s\",\n                        info.className, e.getMessage()), e);\n    }\n\n  }\n\n","sourceOld":"  /**\n   * Create a new ShardHandlerFactory instance\n   * @param info    a PluginInfo object defining which type to create.  If null,\n   *                the default {@link HttpShardHandlerFactory} will be used\n   * @param loader  a SolrResourceLoader used to find the ShardHandlerFactory classes\n   * @return a new, initialized ShardHandlerFactory instance\n   */\n  public static ShardHandlerFactory newInstance(PluginInfo info, SolrResourceLoader loader) {\n    if (info == null)\n      info = DEFAULT_SHARDHANDLER_INFO;\n\n    try {\n      ShardHandlerFactory shf = loader.findClass(info.className, ShardHandlerFactory.class).newInstance();\n      if (PluginInfoInitialized.class.isAssignableFrom(shf.getClass()))\n        PluginInfoInitialized.class.cast(shf).init(info);\n      return shf;\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          String.format(Locale.ROOT, \"Error instantiating shardHandlerFactory class [%s]: %s\",\n              info.className, e.getMessage()));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardHandlerFactory#newInstance(PluginInfo,SolrResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardHandlerFactory#newInstance(PluginInfo,SolrResourceLoader).mjava","sourceNew":"  /**\n   * Create a new ShardHandlerFactory instance\n   * @param info    a PluginInfo object defining which type to create.  If null,\n   *                the default {@link HttpShardHandlerFactory} will be used\n   * @param loader  a SolrResourceLoader used to find the ShardHandlerFactory classes\n   * @return a new, initialized ShardHandlerFactory instance\n   */\n  public static ShardHandlerFactory newInstance(PluginInfo info, SolrResourceLoader loader) {\n    if (info == null)\n      info = DEFAULT_SHARDHANDLER_INFO;\n\n    try {\n      ShardHandlerFactory shf = loader.findClass(info.className, ShardHandlerFactory.class).getConstructor().newInstance();\n      if (PluginInfoInitialized.class.isAssignableFrom(shf.getClass()))\n        PluginInfoInitialized.class.cast(shf).init(info);\n      return shf;\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          String.format(Locale.ROOT, \"Error instantiating shardHandlerFactory class [%s]: %s\",\n                        info.className, e.getMessage()), e);\n    }\n\n  }\n\n","sourceOld":"  /**\n   * Create a new ShardHandlerFactory instance\n   * @param info    a PluginInfo object defining which type to create.  If null,\n   *                the default {@link HttpShardHandlerFactory} will be used\n   * @param loader  a SolrResourceLoader used to find the ShardHandlerFactory classes\n   * @return a new, initialized ShardHandlerFactory instance\n   */\n  public static ShardHandlerFactory newInstance(PluginInfo info, SolrResourceLoader loader) {\n    if (info == null)\n      info = DEFAULT_SHARDHANDLER_INFO;\n\n    try {\n      ShardHandlerFactory shf = loader.findClass(info.className, ShardHandlerFactory.class).newInstance();\n      if (PluginInfoInitialized.class.isAssignableFrom(shf.getClass()))\n        PluginInfoInitialized.class.cast(shf).init(info);\n      return shf;\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          String.format(Locale.ROOT, \"Error instantiating shardHandlerFactory class [%s]: %s\",\n                        info.className, e.getMessage()), e);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["da5b29d71698f5fe4e0552bd2482173a88e3bf9c"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["f225b9b576dc345ee8c27f91147b4afc0350511c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f225b9b576dc345ee8c27f91147b4afc0350511c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"da5b29d71698f5fe4e0552bd2482173a88e3bf9c":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","5f526e91f1504e21ceb8278d23d43033faa33327"],"5f526e91f1504e21ceb8278d23d43033faa33327":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"f225b9b576dc345ee8c27f91147b4afc0350511c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b88a121b875f9ae2ac50f85cf46dcb680f126357"]},"commit2Childs":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["da5b29d71698f5fe4e0552bd2482173a88e3bf9c","5f526e91f1504e21ceb8278d23d43033faa33327"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","f225b9b576dc345ee8c27f91147b4afc0350511c"],"da5b29d71698f5fe4e0552bd2482173a88e3bf9c":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"5f526e91f1504e21ceb8278d23d43033faa33327":["da5b29d71698f5fe4e0552bd2482173a88e3bf9c"],"f225b9b576dc345ee8c27f91147b4afc0350511c":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}