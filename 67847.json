{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree#find(char[],int).mjava","commits":[{"id":"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a","date":1210940570,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree#find(char[],int).mjava","pathOld":"/dev/null","sourceNew":"  public int find(char[] key, int start) {\n    int d;\n    char p = root;\n    int i = start;\n    char c;\n\n    while (p != 0) {\n      if (sc[p] == 0xFFFF) {\n        if (strcmp(key, i, kv.getArray(), lo[p]) == 0) {\n          return eq[p];\n        } else {\n          return -1;\n        }\n      }\n      c = key[i];\n      d = c - sc[p];\n      if (d == 0) {\n        if (c == 0) {\n          return eq[p];\n        }\n        i++;\n        p = eq[p];\n      } else if (d < 0) {\n        p = lo[p];\n      } else {\n        p = hi[p];\n      }\n    }\n    return -1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree#find(char[],int).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree#find(char[],int).mjava","sourceNew":"  public int find(char[] key, int start) {\n    int d;\n    char p = root;\n    int i = start;\n    char c;\n\n    while (p != 0) {\n      if (sc[p] == 0xFFFF) {\n        if (strcmp(key, i, kv.getArray(), lo[p]) == 0) {\n          return eq[p];\n        } else {\n          return -1;\n        }\n      }\n      c = key[i];\n      d = c - sc[p];\n      if (d == 0) {\n        if (c == 0) {\n          return eq[p];\n        }\n        i++;\n        p = eq[p];\n      } else if (d < 0) {\n        p = lo[p];\n      } else {\n        p = hi[p];\n      }\n    }\n    return -1;\n  }\n\n","sourceOld":"  public int find(char[] key, int start) {\n    int d;\n    char p = root;\n    int i = start;\n    char c;\n\n    while (p != 0) {\n      if (sc[p] == 0xFFFF) {\n        if (strcmp(key, i, kv.getArray(), lo[p]) == 0) {\n          return eq[p];\n        } else {\n          return -1;\n        }\n      }\n      c = key[i];\n      d = c - sc[p];\n      if (d == 0) {\n        if (c == 0) {\n          return eq[p];\n        }\n        i++;\n        p = eq[p];\n      } else if (d < 0) {\n        p = lo[p];\n      } else {\n        p = hi[p];\n      }\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["dbb53146e3651ed4ebca43f69ee26f9150c6cb5a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbb53146e3651ed4ebca43f69ee26f9150c6cb5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}