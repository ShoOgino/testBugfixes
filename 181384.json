{"path":"solr/core/src/java/org/apache/solr/core/SolrConfig#loadPluginInfo(Class,String,PluginOpts...).mjava","commits":[{"id":"e2d531c99815e9282449614650df62aad96c688e","date":1377014558,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#loadPluginInfo(Class,String,PluginOpts...).mjava","pathOld":"/dev/null","sourceNew":"  private void loadPluginInfo(Class clazz, String tag, PluginOpts... opts) {\n    EnumSet<PluginOpts> options = EnumSet.<PluginOpts>of(NOOP, opts);\n    boolean requireName = options.contains(REQUIRE_NAME);\n    boolean requireClass = options.contains(REQUIRE_CLASS);\n\n    List<PluginInfo> result = readPluginInfos(tag, requireName, requireClass);\n\n    if (1 < result.size() && ! options.contains(MULTI_OK)) {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Found \" + result.size() + \" configuration sections when at most \"\n           + \"1 is allowed matching expression: \" + tag);\n    }\n    if(!result.isEmpty()) pluginStore.put(clazz.getName(),result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#loadPluginInfo(Class,String,PluginOpts...).mjava","pathOld":"/dev/null","sourceNew":"  private void loadPluginInfo(Class clazz, String tag, PluginOpts... opts) {\n    EnumSet<PluginOpts> options = EnumSet.<PluginOpts>of(NOOP, opts);\n    boolean requireName = options.contains(REQUIRE_NAME);\n    boolean requireClass = options.contains(REQUIRE_CLASS);\n\n    List<PluginInfo> result = readPluginInfos(tag, requireName, requireClass);\n\n    if (1 < result.size() && ! options.contains(MULTI_OK)) {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Found \" + result.size() + \" configuration sections when at most \"\n           + \"1 is allowed matching expression: \" + tag);\n    }\n    if(!result.isEmpty()) pluginStore.put(clazz.getName(),result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#loadPluginInfo(Class,String,PluginOpts...).mjava","sourceNew":null,"sourceOld":"  private void loadPluginInfo(Class clazz, String tag, PluginOpts... opts) {\n    EnumSet<PluginOpts> options = EnumSet.<PluginOpts>of(NOOP, opts);\n    boolean requireName = options.contains(REQUIRE_NAME);\n    boolean requireClass = options.contains(REQUIRE_CLASS);\n\n    List<PluginInfo> result = readPluginInfos(tag, requireName, requireClass);\n\n    if (1 < result.size() && ! options.contains(MULTI_OK)) {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Found \" + result.size() + \" configuration sections when at most \"\n           + \"1 is allowed matching expression: \" + tag);\n    }\n    if(!result.isEmpty()) pluginStore.put(clazz.getName(),result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"531fe719c7218235a679452eb3d137bfd8fc6af1":["e2d531c99815e9282449614650df62aad96c688e"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2d531c99815e9282449614650df62aad96c688e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"e2d531c99815e9282449614650df62aad96c688e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"531fe719c7218235a679452eb3d137bfd8fc6af1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e2d531c99815e9282449614650df62aad96c688e"],"e2d531c99815e9282449614650df62aad96c688e":["531fe719c7218235a679452eb3d137bfd8fc6af1","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}