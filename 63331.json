{"path":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#newFieldQuery(Analyzer,String,String,boolean,boolean).mjava","commits":[{"id":"e55782fb51a6e9789542818eb2161a3247f39ace","date":1489707707,"type":1,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#newFieldQuery(Analyzer,String,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#newFieldQuery(Analyzer,String,String,boolean).mjava","sourceNew":"  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,\n                                boolean quoted, boolean fieldAutoGenPhraseQueries)  throws SyntaxError {\n    BooleanClause.Occur occur = operator == Operator.AND ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;\n    return createFieldQuery(analyzer, occur, field, queryText,\n        quoted || fieldAutoGenPhraseQueries || autoGeneratePhraseQueries, phraseSlop);\n  }\n\n","sourceOld":"  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText, boolean quoted)  throws SyntaxError {\n    BooleanClause.Occur occur = operator == Operator.AND ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;\n    return createFieldQuery(analyzer, occur, field, queryText, quoted || autoGeneratePhraseQueries, phraseSlop);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c03778630c4604270d88c148afb8c7de35b51d3c","date":1490280010,"type":1,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#newFieldQuery(Analyzer,String,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#newFieldQuery(Analyzer,String,String,boolean).mjava","sourceNew":"  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,\n                                boolean quoted, boolean fieldAutoGenPhraseQueries)  throws SyntaxError {\n    BooleanClause.Occur occur = operator == Operator.AND ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;\n    return createFieldQuery(analyzer, occur, field, queryText,\n        quoted || fieldAutoGenPhraseQueries || autoGeneratePhraseQueries, phraseSlop);\n  }\n\n","sourceOld":"  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText, boolean quoted)  throws SyntaxError {\n    BooleanClause.Occur occur = operator == Operator.AND ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;\n    return createFieldQuery(analyzer, occur, field, queryText, quoted || autoGeneratePhraseQueries, phraseSlop);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d1728ac6bfc0cea61f3e27436b418295d9982a3","date":1491423806,"type":5,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#newFieldQuery(Analyzer,String,String,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#newFieldQuery(Analyzer,String,String,boolean,boolean).mjava","sourceNew":"  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,\n                                boolean quoted, boolean fieldAutoGenPhraseQueries, boolean fieldEnableGraphQueries) \n      throws SyntaxError {\n    BooleanClause.Occur occur = operator == Operator.AND ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;\n    setEnableGraphQueries(fieldEnableGraphQueries);\n    Query query = createFieldQuery(analyzer, occur, field, queryText,\n        quoted || fieldAutoGenPhraseQueries || autoGeneratePhraseQueries, phraseSlop);\n    setEnableGraphQueries(true); // reset back to default\n    return query;\n  }\n\n","sourceOld":"  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,\n                                boolean quoted, boolean fieldAutoGenPhraseQueries)  throws SyntaxError {\n    BooleanClause.Occur occur = operator == Operator.AND ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;\n    return createFieldQuery(analyzer, occur, field, queryText,\n        quoted || fieldAutoGenPhraseQueries || autoGeneratePhraseQueries, phraseSlop);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#newFieldQuery(Analyzer,String,String,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,\n                                boolean quoted, boolean fieldAutoGenPhraseQueries)  throws SyntaxError {\n    BooleanClause.Occur occur = operator == Operator.AND ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;\n    return createFieldQuery(analyzer, occur, field, queryText,\n        quoted || fieldAutoGenPhraseQueries || autoGeneratePhraseQueries, phraseSlop);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["c03778630c4604270d88c148afb8c7de35b51d3c"],"0d1728ac6bfc0cea61f3e27436b418295d9982a3":["e55782fb51a6e9789542818eb2161a3247f39ace"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c03778630c4604270d88c148afb8c7de35b51d3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e55782fb51a6e9789542818eb2161a3247f39ace":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d1728ac6bfc0cea61f3e27436b418295d9982a3"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"0d1728ac6bfc0cea61f3e27436b418295d9982a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c03778630c4604270d88c148afb8c7de35b51d3c","e55782fb51a6e9789542818eb2161a3247f39ace"],"c03778630c4604270d88c148afb8c7de35b51d3c":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"e55782fb51a6e9789542818eb2161a3247f39ace":["0d1728ac6bfc0cea61f3e27436b418295d9982a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}