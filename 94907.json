{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testGetRawStream().mjava","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpSolrClient solrClient = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n                                               client, null);\n    QueryRequest req = new QueryRequest();\n    NamedList response = solrClient.request(req);\n    InputStream stream = (InputStream)response.get(\"stream\");\n    assertNotNull(stream);\n    stream.close();\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() + \"/collection1\", \n                                               client, null);\n    QueryRequest req = new QueryRequest();\n    NamedList response = server.request(req);\n    InputStream stream = (InputStream)response.get(\"stream\");\n    assertNotNull(stream);\n    stream.close();\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    CloseableHttpClient client = HttpClientUtil.createClient(null);\n    try {\n      HttpSolrClient solrClient = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n                                                 client, null);\n      QueryRequest req = new QueryRequest();\n      NamedList response = solrClient.request(req);\n      InputStream stream = (InputStream)response.get(\"stream\");\n      assertNotNull(stream);\n      stream.close();\n    } finally {\n      client.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpSolrClient solrClient = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n                                               client, null);\n    QueryRequest req = new QueryRequest();\n    NamedList response = solrClient.request(req);\n    InputStream stream = (InputStream)response.get(\"stream\");\n    assertNotNull(stream);\n    stream.close();\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":["bafca15d8e408346a67f4282ad1143b88023893b"],"bugIntro":["b4407017a35dea85f652ec066e4565818dd75436"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b4407017a35dea85f652ec066e4565818dd75436","date":1431296729,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    try (CloseableHttpClient client = HttpClientUtil.createClient(null)) {\n      HttpSolrClient solrClient = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n          client, null);\n      QueryRequest req = new QueryRequest();\n      NamedList response = solrClient.request(req);\n      InputStream stream = (InputStream) response.get(\"stream\");\n      assertNotNull(stream);\n      stream.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    CloseableHttpClient client = HttpClientUtil.createClient(null);\n    try {\n      HttpSolrClient solrClient = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n                                                 client, null);\n      QueryRequest req = new QueryRequest();\n      NamedList response = solrClient.request(req);\n      InputStream stream = (InputStream)response.get(\"stream\");\n      assertNotNull(stream);\n      stream.close();\n    } finally {\n      client.close();\n    }\n  }\n\n","bugFix":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    CloseableHttpClient client = HttpClientUtil.createClient(null);\n    try {\n      HttpSolrClient solrClient = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n          client, null);\n      QueryRequest req = new QueryRequest();\n      NamedList response = solrClient.request(req);\n      InputStream stream = (InputStream) response.get(\"stream\");\n      assertNotNull(stream);\n      stream.close();\n    } finally {\n      HttpClientUtil.close(client);;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    try (CloseableHttpClient client = HttpClientUtil.createClient(null)) {\n      HttpSolrClient solrClient = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n          client, null);\n      QueryRequest req = new QueryRequest();\n      NamedList response = solrClient.request(req);\n      InputStream stream = (InputStream) response.get(\"stream\");\n      assertNotNull(stream);\n      stream.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    CloseableHttpClient client = HttpClientUtil.createClient(null);\n    try {\n      HttpSolrClient solrClient = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n          client, null);\n      QueryRequest req = new QueryRequest();\n      NamedList response = solrClient.request(req);\n      InputStream stream = (InputStream) response.get(\"stream\");\n      assertNotNull(stream);\n      stream.close();\n    } finally {\n      HttpClientUtil.close(client);;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    CloseableHttpClient client = HttpClientUtil.createClient(null);\n    try {\n      HttpSolrClient solrClient = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n          client, null);\n      QueryRequest req = new QueryRequest();\n      NamedList response = solrClient.request(req);\n      InputStream stream = (InputStream) response.get(\"stream\");\n      assertNotNull(stream);\n      stream.close();\n    } finally {\n      HttpClientUtil.close(client);;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    CloseableHttpClient client = HttpClientUtil.createClient(null);\n    try {\n      HttpSolrClient solrClient = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n          client, null);\n      QueryRequest req = new QueryRequest();\n      NamedList response = solrClient.request(req);\n      InputStream stream = (InputStream) response.get(\"stream\");\n      assertNotNull(stream);\n      stream.close();\n    } finally {\n      HttpClientUtil.close(client);;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    CloseableHttpClient client = HttpClientUtil.createClient(null);\n    try {\n      HttpSolrClient solrClient = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n          client, null);\n      QueryRequest req = new QueryRequest();\n      NamedList response = solrClient.request(req);\n      InputStream stream = (InputStream) response.get(\"stream\");\n      assertNotNull(stream);\n      stream.close();\n    } finally {\n      HttpClientUtil.close(client);;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    CloseableHttpClient client = HttpClientUtil.createClient(null);\n    try {\n      HttpSolrClient solrClient = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n          client, null);\n      QueryRequest req = new QueryRequest();\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList response = solrClient.request(req);\n      InputStream stream = (InputStream) response.get(\"stream\");\n      assertNotNull(stream);\n      stream.close();\n    } finally {\n      HttpClientUtil.close(client);;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    CloseableHttpClient client = HttpClientUtil.createClient(null);\n    try {\n      HttpSolrClient solrClient = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n          client, null);\n      QueryRequest req = new QueryRequest();\n      NamedList response = solrClient.request(req);\n      InputStream stream = (InputStream) response.get(\"stream\");\n      assertNotNull(stream);\n      stream.close();\n    } finally {\n      HttpClientUtil.close(client);;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"859081acf00749f5dd462772c571d611d4a4d2db":["b4407017a35dea85f652ec066e4565818dd75436"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["859081acf00749f5dd462772c571d611d4a4d2db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["859081acf00749f5dd462772c571d611d4a4d2db","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"b4407017a35dea85f652ec066e4565818dd75436":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"859081acf00749f5dd462772c571d611d4a4d2db":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["9ba1b632c041956c93c41aa1143d16a567014891"],"b4407017a35dea85f652ec066e4565818dd75436":["859081acf00749f5dd462772c571d611d4a4d2db"],"bafca15d8e408346a67f4282ad1143b88023893b":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["b4407017a35dea85f652ec066e4565818dd75436"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}