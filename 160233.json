{"path":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#ShardRoutingTest().mjava","commits":[{"id":"70cbbf09b1986180fc73b08b8ded592b3465806b","date":1355001417,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#ShardRoutingTest().mjava","pathOld":"/dev/null","sourceNew":"  public ShardRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = 4;\n    super.shardCount = 8;\n    super.fixShardCount = true;  // we only want to test with exactly 4 slices.\n\n    // from negative to positive, the upper bits of the hash ranges should be\n    // shard1: top bits:10  80000000:bfffffff\n    // shard2: top bits:11  c0000000:ffffffff\n    // shard3: top bits:00  00000000:3fffffff\n    // shard4: top bits:01  40000000:7fffffff\n\n    /***\n     hash of a is 3c2569b2 high bits=0 shard=shard3\n     hash of b is 95de7e03 high bits=2 shard=shard1\n     hash of c is e132d65f high bits=3 shard=shard2\n     hash of d is 27191473 high bits=0 shard=shard3\n     hash of e is 656c4367 high bits=1 shard=shard4\n     hash of f is 2b64883b high bits=0 shard=shard3\n     hash of g is f18ae416 high bits=3 shard=shard2\n     hash of h is d482b2d3 high bits=3 shard=shard2\n     hash of i is 811a702b high bits=2 shard=shard1\n     hash of j is ca745a39 high bits=3 shard=shard2\n     hash of k is cfbda5d1 high bits=3 shard=shard2\n     hash of l is 1d5d6a2c high bits=0 shard=shard3\n     hash of m is 5ae4385c high bits=1 shard=shard4\n     hash of n is c651d8ac high bits=3 shard=shard2\n     hash of o is 68348473 high bits=1 shard=shard4\n     hash of p is 986fdf9a high bits=2 shard=shard1\n     hash of q is ff8209e8 high bits=3 shard=shard2\n     hash of r is 5c9373f1 high bits=1 shard=shard4\n     hash of s is ff4acaf1 high bits=3 shard=shard2\n     hash of t is ca87df4d high bits=3 shard=shard2\n     hash of u is 62203ae0 high bits=1 shard=shard4\n     hash of v is bdafcc55 high bits=2 shard=shard1\n     hash of w is ff439d1f high bits=3 shard=shard2\n     hash of x is 3e9a9b1b high bits=0 shard=shard3\n     hash of y is 477d9216 high bits=1 shard=shard4\n     hash of z is c1f69a17 high bits=3 shard=shard2\n     ***/\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#ShardRoutingTest().mjava","pathOld":"/dev/null","sourceNew":"  public ShardRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = 4;\n    super.shardCount = 8;\n    super.fixShardCount = true;  // we only want to test with exactly 4 slices.\n\n    // from negative to positive, the upper bits of the hash ranges should be\n    // shard1: top bits:10  80000000:bfffffff\n    // shard2: top bits:11  c0000000:ffffffff\n    // shard3: top bits:00  00000000:3fffffff\n    // shard4: top bits:01  40000000:7fffffff\n\n    /***\n     hash of a is 3c2569b2 high bits=0 shard=shard3\n     hash of b is 95de7e03 high bits=2 shard=shard1\n     hash of c is e132d65f high bits=3 shard=shard2\n     hash of d is 27191473 high bits=0 shard=shard3\n     hash of e is 656c4367 high bits=1 shard=shard4\n     hash of f is 2b64883b high bits=0 shard=shard3\n     hash of g is f18ae416 high bits=3 shard=shard2\n     hash of h is d482b2d3 high bits=3 shard=shard2\n     hash of i is 811a702b high bits=2 shard=shard1\n     hash of j is ca745a39 high bits=3 shard=shard2\n     hash of k is cfbda5d1 high bits=3 shard=shard2\n     hash of l is 1d5d6a2c high bits=0 shard=shard3\n     hash of m is 5ae4385c high bits=1 shard=shard4\n     hash of n is c651d8ac high bits=3 shard=shard2\n     hash of o is 68348473 high bits=1 shard=shard4\n     hash of p is 986fdf9a high bits=2 shard=shard1\n     hash of q is ff8209e8 high bits=3 shard=shard2\n     hash of r is 5c9373f1 high bits=1 shard=shard4\n     hash of s is ff4acaf1 high bits=3 shard=shard2\n     hash of t is ca87df4d high bits=3 shard=shard2\n     hash of u is 62203ae0 high bits=1 shard=shard4\n     hash of v is bdafcc55 high bits=2 shard=shard1\n     hash of w is ff439d1f high bits=3 shard=shard2\n     hash of x is 3e9a9b1b high bits=0 shard=shard3\n     hash of y is 477d9216 high bits=1 shard=shard4\n     hash of z is c1f69a17 high bits=3 shard=shard2\n     ***/\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7623716022a9a68898e329e8ffe6c36d168fba7","date":1384524101,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#ShardRoutingTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#ShardRoutingTest().mjava","sourceNew":"  public ShardRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = 4;\n    super.shardCount = 8;\n    super.fixShardCount = true;  // we only want to test with exactly 4 slices.\n\n    // from negative to positive, the upper bits of the hash ranges should be\n    // shard1: top bits:10  80000000:bfffffff\n    // shard2: top bits:11  c0000000:ffffffff\n    // shard3: top bits:00  00000000:3fffffff\n    // shard4: top bits:01  40000000:7fffffff\n\n    /***\n     hash of a is 3c2569b2 high bits=0 shard=shard3\n     hash of b is 95de7e03 high bits=2 shard=shard1\n     hash of c is e132d65f high bits=3 shard=shard2\n     hash of d is 27191473 high bits=0 shard=shard3\n     hash of e is 656c4367 high bits=1 shard=shard4\n     hash of f is 2b64883b high bits=0 shard=shard3\n     hash of g is f18ae416 high bits=3 shard=shard2\n     hash of h is d482b2d3 high bits=3 shard=shard2\n     hash of i is 811a702b high bits=2 shard=shard1\n     hash of j is ca745a39 high bits=3 shard=shard2\n     hash of k is cfbda5d1 high bits=3 shard=shard2\n     hash of l is 1d5d6a2c high bits=0 shard=shard3\n     hash of m is 5ae4385c high bits=1 shard=shard4\n     hash of n is c651d8ac high bits=3 shard=shard2\n     hash of o is 68348473 high bits=1 shard=shard4\n     hash of p is 986fdf9a high bits=2 shard=shard1\n     hash of q is ff8209e8 high bits=3 shard=shard2\n     hash of r is 5c9373f1 high bits=1 shard=shard4\n     hash of s is ff4acaf1 high bits=3 shard=shard2\n     hash of t is ca87df4d high bits=3 shard=shard2\n     hash of u is 62203ae0 high bits=1 shard=shard4\n     hash of v is bdafcc55 high bits=2 shard=shard1\n     hash of w is ff439d1f high bits=3 shard=shard2\n     hash of x is 3e9a9b1b high bits=0 shard=shard3\n     hash of y is 477d9216 high bits=1 shard=shard4\n     hash of z is c1f69a17 high bits=3 shard=shard2\n\n     hash of f1 is 313bf6b1\n     hash of f2 is ff143f8\n\n     ***/\n  }\n\n","sourceOld":"  public ShardRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = 4;\n    super.shardCount = 8;\n    super.fixShardCount = true;  // we only want to test with exactly 4 slices.\n\n    // from negative to positive, the upper bits of the hash ranges should be\n    // shard1: top bits:10  80000000:bfffffff\n    // shard2: top bits:11  c0000000:ffffffff\n    // shard3: top bits:00  00000000:3fffffff\n    // shard4: top bits:01  40000000:7fffffff\n\n    /***\n     hash of a is 3c2569b2 high bits=0 shard=shard3\n     hash of b is 95de7e03 high bits=2 shard=shard1\n     hash of c is e132d65f high bits=3 shard=shard2\n     hash of d is 27191473 high bits=0 shard=shard3\n     hash of e is 656c4367 high bits=1 shard=shard4\n     hash of f is 2b64883b high bits=0 shard=shard3\n     hash of g is f18ae416 high bits=3 shard=shard2\n     hash of h is d482b2d3 high bits=3 shard=shard2\n     hash of i is 811a702b high bits=2 shard=shard1\n     hash of j is ca745a39 high bits=3 shard=shard2\n     hash of k is cfbda5d1 high bits=3 shard=shard2\n     hash of l is 1d5d6a2c high bits=0 shard=shard3\n     hash of m is 5ae4385c high bits=1 shard=shard4\n     hash of n is c651d8ac high bits=3 shard=shard2\n     hash of o is 68348473 high bits=1 shard=shard4\n     hash of p is 986fdf9a high bits=2 shard=shard1\n     hash of q is ff8209e8 high bits=3 shard=shard2\n     hash of r is 5c9373f1 high bits=1 shard=shard4\n     hash of s is ff4acaf1 high bits=3 shard=shard2\n     hash of t is ca87df4d high bits=3 shard=shard2\n     hash of u is 62203ae0 high bits=1 shard=shard4\n     hash of v is bdafcc55 high bits=2 shard=shard1\n     hash of w is ff439d1f high bits=3 shard=shard2\n     hash of x is 3e9a9b1b high bits=0 shard=shard3\n     hash of y is 477d9216 high bits=1 shard=shard4\n     hash of z is c1f69a17 high bits=3 shard=shard2\n     ***/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#ShardRoutingTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#ShardRoutingTest().mjava","sourceNew":"  public ShardRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = 4;\n    super.shardCount = 8;\n    super.fixShardCount = true;  // we only want to test with exactly 4 slices.\n\n    // from negative to positive, the upper bits of the hash ranges should be\n    // shard1: top bits:10  80000000:bfffffff\n    // shard2: top bits:11  c0000000:ffffffff\n    // shard3: top bits:00  00000000:3fffffff\n    // shard4: top bits:01  40000000:7fffffff\n\n    /***\n     hash of a is 3c2569b2 high bits=0 shard=shard3\n     hash of b is 95de7e03 high bits=2 shard=shard1\n     hash of c is e132d65f high bits=3 shard=shard2\n     hash of d is 27191473 high bits=0 shard=shard3\n     hash of e is 656c4367 high bits=1 shard=shard4\n     hash of f is 2b64883b high bits=0 shard=shard3\n     hash of g is f18ae416 high bits=3 shard=shard2\n     hash of h is d482b2d3 high bits=3 shard=shard2\n     hash of i is 811a702b high bits=2 shard=shard1\n     hash of j is ca745a39 high bits=3 shard=shard2\n     hash of k is cfbda5d1 high bits=3 shard=shard2\n     hash of l is 1d5d6a2c high bits=0 shard=shard3\n     hash of m is 5ae4385c high bits=1 shard=shard4\n     hash of n is c651d8ac high bits=3 shard=shard2\n     hash of o is 68348473 high bits=1 shard=shard4\n     hash of p is 986fdf9a high bits=2 shard=shard1\n     hash of q is ff8209e8 high bits=3 shard=shard2\n     hash of r is 5c9373f1 high bits=1 shard=shard4\n     hash of s is ff4acaf1 high bits=3 shard=shard2\n     hash of t is ca87df4d high bits=3 shard=shard2\n     hash of u is 62203ae0 high bits=1 shard=shard4\n     hash of v is bdafcc55 high bits=2 shard=shard1\n     hash of w is ff439d1f high bits=3 shard=shard2\n     hash of x is 3e9a9b1b high bits=0 shard=shard3\n     hash of y is 477d9216 high bits=1 shard=shard4\n     hash of z is c1f69a17 high bits=3 shard=shard2\n\n     hash of f1 is 313bf6b1\n     hash of f2 is ff143f8\n\n     ***/\n  }\n\n","sourceOld":"  public ShardRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = 4;\n    super.shardCount = 8;\n    super.fixShardCount = true;  // we only want to test with exactly 4 slices.\n\n    // from negative to positive, the upper bits of the hash ranges should be\n    // shard1: top bits:10  80000000:bfffffff\n    // shard2: top bits:11  c0000000:ffffffff\n    // shard3: top bits:00  00000000:3fffffff\n    // shard4: top bits:01  40000000:7fffffff\n\n    /***\n     hash of a is 3c2569b2 high bits=0 shard=shard3\n     hash of b is 95de7e03 high bits=2 shard=shard1\n     hash of c is e132d65f high bits=3 shard=shard2\n     hash of d is 27191473 high bits=0 shard=shard3\n     hash of e is 656c4367 high bits=1 shard=shard4\n     hash of f is 2b64883b high bits=0 shard=shard3\n     hash of g is f18ae416 high bits=3 shard=shard2\n     hash of h is d482b2d3 high bits=3 shard=shard2\n     hash of i is 811a702b high bits=2 shard=shard1\n     hash of j is ca745a39 high bits=3 shard=shard2\n     hash of k is cfbda5d1 high bits=3 shard=shard2\n     hash of l is 1d5d6a2c high bits=0 shard=shard3\n     hash of m is 5ae4385c high bits=1 shard=shard4\n     hash of n is c651d8ac high bits=3 shard=shard2\n     hash of o is 68348473 high bits=1 shard=shard4\n     hash of p is 986fdf9a high bits=2 shard=shard1\n     hash of q is ff8209e8 high bits=3 shard=shard2\n     hash of r is 5c9373f1 high bits=1 shard=shard4\n     hash of s is ff4acaf1 high bits=3 shard=shard2\n     hash of t is ca87df4d high bits=3 shard=shard2\n     hash of u is 62203ae0 high bits=1 shard=shard4\n     hash of v is bdafcc55 high bits=2 shard=shard1\n     hash of w is ff439d1f high bits=3 shard=shard2\n     hash of x is 3e9a9b1b high bits=0 shard=shard3\n     hash of y is 477d9216 high bits=1 shard=shard4\n     hash of z is c1f69a17 high bits=3 shard=shard2\n     ***/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#ShardRoutingTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#ShardRoutingTest().mjava","sourceNew":"  public ShardRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = 4;\n\n    // from negative to positive, the upper bits of the hash ranges should be\n    // shard1: top bits:10  80000000:bfffffff\n    // shard2: top bits:11  c0000000:ffffffff\n    // shard3: top bits:00  00000000:3fffffff\n    // shard4: top bits:01  40000000:7fffffff\n\n    /***\n     hash of a is 3c2569b2 high bits=0 shard=shard3\n     hash of b is 95de7e03 high bits=2 shard=shard1\n     hash of c is e132d65f high bits=3 shard=shard2\n     hash of d is 27191473 high bits=0 shard=shard3\n     hash of e is 656c4367 high bits=1 shard=shard4\n     hash of f is 2b64883b high bits=0 shard=shard3\n     hash of g is f18ae416 high bits=3 shard=shard2\n     hash of h is d482b2d3 high bits=3 shard=shard2\n     hash of i is 811a702b high bits=2 shard=shard1\n     hash of j is ca745a39 high bits=3 shard=shard2\n     hash of k is cfbda5d1 high bits=3 shard=shard2\n     hash of l is 1d5d6a2c high bits=0 shard=shard3\n     hash of m is 5ae4385c high bits=1 shard=shard4\n     hash of n is c651d8ac high bits=3 shard=shard2\n     hash of o is 68348473 high bits=1 shard=shard4\n     hash of p is 986fdf9a high bits=2 shard=shard1\n     hash of q is ff8209e8 high bits=3 shard=shard2\n     hash of r is 5c9373f1 high bits=1 shard=shard4\n     hash of s is ff4acaf1 high bits=3 shard=shard2\n     hash of t is ca87df4d high bits=3 shard=shard2\n     hash of u is 62203ae0 high bits=1 shard=shard4\n     hash of v is bdafcc55 high bits=2 shard=shard1\n     hash of w is ff439d1f high bits=3 shard=shard2\n     hash of x is 3e9a9b1b high bits=0 shard=shard3\n     hash of y is 477d9216 high bits=1 shard=shard4\n     hash of z is c1f69a17 high bits=3 shard=shard2\n\n     hash of f1 is 313bf6b1\n     hash of f2 is ff143f8\n\n     ***/\n  }\n\n","sourceOld":"  public ShardRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = 4;\n    super.shardCount = 8;\n    super.fixShardCount = true;  // we only want to test with exactly 4 slices.\n\n    // from negative to positive, the upper bits of the hash ranges should be\n    // shard1: top bits:10  80000000:bfffffff\n    // shard2: top bits:11  c0000000:ffffffff\n    // shard3: top bits:00  00000000:3fffffff\n    // shard4: top bits:01  40000000:7fffffff\n\n    /***\n     hash of a is 3c2569b2 high bits=0 shard=shard3\n     hash of b is 95de7e03 high bits=2 shard=shard1\n     hash of c is e132d65f high bits=3 shard=shard2\n     hash of d is 27191473 high bits=0 shard=shard3\n     hash of e is 656c4367 high bits=1 shard=shard4\n     hash of f is 2b64883b high bits=0 shard=shard3\n     hash of g is f18ae416 high bits=3 shard=shard2\n     hash of h is d482b2d3 high bits=3 shard=shard2\n     hash of i is 811a702b high bits=2 shard=shard1\n     hash of j is ca745a39 high bits=3 shard=shard2\n     hash of k is cfbda5d1 high bits=3 shard=shard2\n     hash of l is 1d5d6a2c high bits=0 shard=shard3\n     hash of m is 5ae4385c high bits=1 shard=shard4\n     hash of n is c651d8ac high bits=3 shard=shard2\n     hash of o is 68348473 high bits=1 shard=shard4\n     hash of p is 986fdf9a high bits=2 shard=shard1\n     hash of q is ff8209e8 high bits=3 shard=shard2\n     hash of r is 5c9373f1 high bits=1 shard=shard4\n     hash of s is ff4acaf1 high bits=3 shard=shard2\n     hash of t is ca87df4d high bits=3 shard=shard2\n     hash of u is 62203ae0 high bits=1 shard=shard4\n     hash of v is bdafcc55 high bits=2 shard=shard1\n     hash of w is ff439d1f high bits=3 shard=shard2\n     hash of x is 3e9a9b1b high bits=0 shard=shard3\n     hash of y is 477d9216 high bits=1 shard=shard4\n     hash of z is c1f69a17 high bits=3 shard=shard2\n\n     hash of f1 is 313bf6b1\n     hash of f2 is ff143f8\n\n     ***/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abb23fcc2461782ab204e61213240feb77d355aa":["f7623716022a9a68898e329e8ffe6c36d168fba7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70cbbf09b1986180fc73b08b8ded592b3465806b"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["70cbbf09b1986180fc73b08b8ded592b3465806b","f7623716022a9a68898e329e8ffe6c36d168fba7"],"70cbbf09b1986180fc73b08b8ded592b3465806b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f7623716022a9a68898e329e8ffe6c36d168fba7":["70cbbf09b1986180fc73b08b8ded592b3465806b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["abb23fcc2461782ab204e61213240feb77d355aa"]},"commit2Childs":{"abb23fcc2461782ab204e61213240feb77d355aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","70cbbf09b1986180fc73b08b8ded592b3465806b"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"70cbbf09b1986180fc73b08b8ded592b3465806b":["407687e67faf6e1f02a211ca078d8e3eed631027","74f45af4339b0daf7a95c820ab88c1aea74fbce0","f7623716022a9a68898e329e8ffe6c36d168fba7"],"f7623716022a9a68898e329e8ffe6c36d168fba7":["abb23fcc2461782ab204e61213240feb77d355aa","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}