{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/vector/TestPointVectorStrategy#testFieldOptions().mjava","commits":[{"id":"aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","date":1459379660,"type":0,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/vector/TestPointVectorStrategy#testFieldOptions().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFieldOptions() throws IOException, ParseException {\n    // It's not stored; test it isn't.\n    this.strategy = PointVectorStrategy.newInstance(ctx, getClass().getSimpleName());\n    adoc(\"99\", \"POINT(-5.0 8.2)\");\n    commit();\n    SearchResults results = executeQuery(new MatchAllDocsQuery(), 1);\n    Document document = results.results.get(0).document;\n    assertNull(\"not stored\", document.getField(strategy.getFieldName() + PointVectorStrategy.SUFFIX_X));\n    assertNull(\"not stored\", document.getField(strategy.getFieldName() + PointVectorStrategy.SUFFIX_Y));\n    deleteAll();\n\n    // Now we mark it stored.  We also disable pointvalues...\n    FieldType fieldType = new FieldType(PointVectorStrategy.DEFAULT_FIELDTYPE);\n    fieldType.setStored(true);\n    fieldType.setDimensions(0, 0);//disable point values\n    this.strategy = new PointVectorStrategy(ctx, getClass().getSimpleName(), fieldType);\n    adoc(\"99\", \"POINT(-5.0 8.2)\");\n    commit();\n    results = executeQuery(new MatchAllDocsQuery(), 1);\n    document = results.results.get(0).document;\n    assertEquals(\"stored\", -5.0, document.getField(strategy.getFieldName() + PointVectorStrategy.SUFFIX_X).numericValue());\n    assertEquals(\"stored\", 8.2,  document.getField(strategy.getFieldName() + PointVectorStrategy.SUFFIX_Y).numericValue());\n\n    // Test a query fails without point values\n    expectThrows(UnsupportedOperationException.class, () -> {\n      SpatialArgs args = new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(-10.0, 10.0, -5.0, 5.0));\n      this.strategy.makeQuery(args);\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"]},"commit2Childs":{"aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}