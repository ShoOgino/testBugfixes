{"path":"lucene/src/java/org/apache/lucene/index/PrefixCodedTerms.PrefixCodedTermsIterator#next().mjava","commits":[{"id":"9fa5ed548a2e7179ad03d6dfef30e19b8c06a8e2","date":1311898374,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/PrefixCodedTerms.PrefixCodedTermsIterator#next().mjava","pathOld":"/dev/null","sourceNew":"    public Term next() {\n      assert hasNext();\n      try {\n        int code = input.readVInt();\n        if ((code & 1) != 0) {\n          // new field\n          field = input.readString();\n        }\n        int prefix = code >>> 1;\n        int suffix = input.readVInt();\n        bytes.grow(prefix + suffix);\n        input.readBytes(bytes.bytes, prefix, suffix);\n        bytes.length = prefix + suffix;\n        term.set(field, bytes);\n        return term;\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.PrefixCodedTermsIterator#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/PrefixCodedTerms.PrefixCodedTermsIterator#next().mjava","sourceNew":"    public Term next() {\n      assert hasNext();\n      try {\n        int code = input.readVInt();\n        if ((code & 1) != 0) {\n          // new field\n          field = input.readString();\n        }\n        int prefix = code >>> 1;\n        int suffix = input.readVInt();\n        bytes.grow(prefix + suffix);\n        input.readBytes(bytes.bytes, prefix, suffix);\n        bytes.length = prefix + suffix;\n        term.set(field, bytes);\n        return term;\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    public Term next() {\n      assert hasNext();\n      try {\n        int code = input.readVInt();\n        if ((code & 1) != 0) {\n          // new field\n          field = input.readString();\n        }\n        int prefix = code >>> 1;\n        int suffix = input.readVInt();\n        bytes.grow(prefix + suffix);\n        input.readBytes(bytes.bytes, prefix, suffix);\n        bytes.length = prefix + suffix;\n        term.set(field, bytes);\n        return term;\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9fa5ed548a2e7179ad03d6dfef30e19b8c06a8e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9fa5ed548a2e7179ad03d6dfef30e19b8c06a8e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"9fa5ed548a2e7179ad03d6dfef30e19b8c06a8e2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fa5ed548a2e7179ad03d6dfef30e19b8c06a8e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}