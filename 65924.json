{"path":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String,int).mjava","commits":[{"id":"106069d345c14ee5c76f0ea76397b02a656f883c","date":1411998064,"type":1,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String).mjava","sourceNew":"  private static void addFieldTypePost(RestTestHarness publisher, String typeName, int updateTimeoutSecs) throws Exception {\n    final String content = \"[{\\\"name\\\":\\\"\"+typeName+\"\\\",\\\"class\\\":\\\"solr.TrieIntField\\\"}]\";\n    String request = \"/schema/fieldtypes/?wt=xml\";\n    if (updateTimeoutSecs > 0)\n      request += \"&updateTimeoutSecs=\"+updateTimeoutSecs;\n    String response = publisher.post(request, content);\n    verifySuccess(request, response);\n  }\n\n","sourceOld":"  private static void addFieldTypePost(RestTestHarness publisher, String typeName) throws Exception {\n    final String content = \"[{\\\"name\\\":\\\"\"+typeName+\"\\\",\\\"class\\\":\\\"solr.TrieIntField\\\"}]\";\n    String request = \"/schema/fieldtypes/?wt=xml\";\n    String response = publisher.post(request, content);\n    verifySuccess(request, response);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String).mjava","sourceNew":"  private static void addFieldTypePost(RestTestHarness publisher, String typeName, int updateTimeoutSecs) throws Exception {\n    final String content = \"[{\\\"name\\\":\\\"\"+typeName+\"\\\",\\\"class\\\":\\\"solr.TrieIntField\\\"}]\";\n    String request = \"/schema/fieldtypes/?wt=xml\";\n    if (updateTimeoutSecs > 0)\n      request += \"&updateTimeoutSecs=\"+updateTimeoutSecs;\n    String response = publisher.post(request, content);\n    verifySuccess(request, response);\n  }\n\n","sourceOld":"  private static void addFieldTypePost(RestTestHarness publisher, String typeName) throws Exception {\n    final String content = \"[{\\\"name\\\":\\\"\"+typeName+\"\\\",\\\"class\\\":\\\"solr.TrieIntField\\\"}]\";\n    String request = \"/schema/fieldtypes/?wt=xml\";\n    String response = publisher.post(request, content);\n    verifySuccess(request, response);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94a0eda7dbad12579530df39279403d27344ebcb","date":1500511909,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String,int).mjava","sourceNew":"  private static void addFieldTypePost(RestTestHarness publisher, String typeName, int updateTimeoutSecs) throws Exception {\n    final String content = \"[{\\\"name\\\":\\\"\"+typeName+\"\\\",\\\"class\\\":\\\"\"+RANDOMIZED_NUMERIC_FIELDTYPES.get(Integer.class)+\"\\\"}]\";\n    String request = \"/schema/fieldtypes/?wt=xml\";\n    if (updateTimeoutSecs > 0)\n      request += \"&updateTimeoutSecs=\"+updateTimeoutSecs;\n    String response = publisher.post(request, content);\n    verifySuccess(request, response);\n  }\n\n","sourceOld":"  private static void addFieldTypePost(RestTestHarness publisher, String typeName, int updateTimeoutSecs) throws Exception {\n    final String content = \"[{\\\"name\\\":\\\"\"+typeName+\"\\\",\\\"class\\\":\\\"solr.TrieIntField\\\"}]\";\n    String request = \"/schema/fieldtypes/?wt=xml\";\n    if (updateTimeoutSecs > 0)\n      request += \"&updateTimeoutSecs=\"+updateTimeoutSecs;\n    String response = publisher.post(request, content);\n    verifySuccess(request, response);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8c645ec119d18a65174f4cbb1c927792ff814","date":1500897120,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String,int).mjava","sourceNew":null,"sourceOld":"  private static void addFieldTypePost(RestTestHarness publisher, String typeName, int updateTimeoutSecs) throws Exception {\n    final String content = \"[{\\\"name\\\":\\\"\"+typeName+\"\\\",\\\"class\\\":\\\"\"+RANDOMIZED_NUMERIC_FIELDTYPES.get(Integer.class)+\"\\\"}]\";\n    String request = \"/schema/fieldtypes/?wt=xml\";\n    if (updateTimeoutSecs > 0)\n      request += \"&updateTimeoutSecs=\"+updateTimeoutSecs;\n    String response = publisher.post(request, content);\n    verifySuccess(request, response);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":4,"author":"Cao Manh Dat","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String,int).mjava","sourceNew":null,"sourceOld":"  private static void addFieldTypePost(RestTestHarness publisher, String typeName, int updateTimeoutSecs) throws Exception {\n    final String content = \"[{\\\"name\\\":\\\"\"+typeName+\"\\\",\\\"class\\\":\\\"solr.TrieIntField\\\"}]\";\n    String request = \"/schema/fieldtypes/?wt=xml\";\n    if (updateTimeoutSecs > 0)\n      request += \"&updateTimeoutSecs=\"+updateTimeoutSecs;\n    String response = publisher.post(request, content);\n    verifySuccess(request, response);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String,int).mjava","sourceNew":null,"sourceOld":"  private static void addFieldTypePost(RestTestHarness publisher, String typeName, int updateTimeoutSecs) throws Exception {\n    final String content = \"[{\\\"name\\\":\\\"\"+typeName+\"\\\",\\\"class\\\":\\\"\"+RANDOMIZED_NUMERIC_FIELDTYPES.get(Integer.class)+\"\\\"}]\";\n    String request = \"/schema/fieldtypes/?wt=xml\";\n    if (updateTimeoutSecs > 0)\n      request += \"&updateTimeoutSecs=\"+updateTimeoutSecs;\n    String response = publisher.post(request, content);\n    verifySuccess(request, response);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"344b0840364d990b29b97467bfcc766ff8325d11","date":1501574100,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String,int).mjava","pathOld":"/dev/null","sourceNew":"  private static void addFieldTypePost(RestTestHarness publisher, String typeName, int updateTimeoutSecs) throws Exception {\n    final String content = \"[{\\\"name\\\":\\\"\"+typeName+\"\\\",\\\"class\\\":\\\"\"+RANDOMIZED_NUMERIC_FIELDTYPES.get(Integer.class)+\"\\\"}]\";\n    String request = \"/schema/fieldtypes/?wt=xml\";\n    if (updateTimeoutSecs > 0)\n      request += \"&updateTimeoutSecs=\"+updateTimeoutSecs;\n    String response = publisher.post(request, content);\n    verifySuccess(request, response);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c717efc76ccf2ea435c52fa36a4774056fe8b4d4","date":1501575440,"type":4,"author":"Cao Manh Dat","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchemaConcurrent#addFieldTypePost(RestTestHarness,String,int).mjava","sourceNew":null,"sourceOld":"  private static void addFieldTypePost(RestTestHarness publisher, String typeName, int updateTimeoutSecs) throws Exception {\n    final String content = \"[{\\\"name\\\":\\\"\"+typeName+\"\\\",\\\"class\\\":\\\"\"+RANDOMIZED_NUMERIC_FIELDTYPES.get(Integer.class)+\"\\\"}]\";\n    String request = \"/schema/fieldtypes/?wt=xml\";\n    if (updateTimeoutSecs > 0)\n      request += \"&updateTimeoutSecs=\"+updateTimeoutSecs;\n    String response = publisher.post(request, content);\n    verifySuccess(request, response);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"94a0eda7dbad12579530df39279403d27344ebcb":["106069d345c14ee5c76f0ea76397b02a656f883c"],"a52341299179de5479672f7cf518bf4b173f34b3":["94a0eda7dbad12579530df39279403d27344ebcb","c3a8c645ec119d18a65174f4cbb1c927792ff814"],"c717efc76ccf2ea435c52fa36a4774056fe8b4d4":["344b0840364d990b29b97467bfcc766ff8325d11"],"344b0840364d990b29b97467bfcc766ff8325d11":["a52341299179de5479672f7cf518bf4b173f34b3"],"c3a8c645ec119d18a65174f4cbb1c927792ff814":["94a0eda7dbad12579530df39279403d27344ebcb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["106069d345c14ee5c76f0ea76397b02a656f883c","c3a8c645ec119d18a65174f4cbb1c927792ff814"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","106069d345c14ee5c76f0ea76397b02a656f883c"],"106069d345c14ee5c76f0ea76397b02a656f883c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c717efc76ccf2ea435c52fa36a4774056fe8b4d4"]},"commit2Childs":{"94a0eda7dbad12579530df39279403d27344ebcb":["a52341299179de5479672f7cf518bf4b173f34b3","c3a8c645ec119d18a65174f4cbb1c927792ff814"],"a52341299179de5479672f7cf518bf4b173f34b3":["344b0840364d990b29b97467bfcc766ff8325d11"],"c717efc76ccf2ea435c52fa36a4774056fe8b4d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c3a8c645ec119d18a65174f4cbb1c927792ff814":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75"],"344b0840364d990b29b97467bfcc766ff8325d11":["c717efc76ccf2ea435c52fa36a4774056fe8b4d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9a47902d6207303f5ed3e7aaca62ca33433af66","106069d345c14ee5c76f0ea76397b02a656f883c"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"106069d345c14ee5c76f0ea76397b02a656f883c":["94a0eda7dbad12579530df39279403d27344ebcb","936cdd5882761db3b844afd6f84ab81cbb011a75","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}