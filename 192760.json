{"path":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","sourceNew":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"numbers\", English.intToEnglish(i), TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"numbers\", English.intToEnglish(i), TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"numbers\", English.intToEnglish(i), TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"numbers\", English.intToEnglish(i), TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","sourceNew":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"numbers\", English.intToEnglish(i), TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"numbers\", English.intToEnglish(i), TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","sourceNew":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    ir.close();\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","sourceNew":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    ir.close();\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","sourceNew":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, analyzer);\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    IOUtils.close(ir, writer, dir, analyzer);\n  }\n\n","sourceOld":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testSimpleExamples().mjava","sourceNew":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, analyzer);\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    IOUtils.close(ir, writer, dir, analyzer);\n  }\n\n","sourceOld":"  public void testSimpleExamples() throws Exception {\n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMinQueryLength(0);\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    IndexReader ir = writer.getReader();\n\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"numbers\",\n        \"fvie\"), 2, ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"five\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    if (similar.length > 0) {\n      assertFalse(similar[0].string.equals(\"five\")); // don't suggest a word for itself\n    }\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fvie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fiv\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fives\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0);\n    assertEquals(\"five\", similar[0].string);\n\n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"fie\"), 2, ir,\n        SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(\"five\", similar[0].string);\n\n    // add some more documents\n    for (int i = 1000; i < 1100; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"numbers\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    ir.close();\n    ir = writer.getReader();\n\n    // look ma, no spellcheck index rebuild\n    similar = spellChecker.suggestSimilar(new Term(\"numbers\", \"tousand\"), 10,\n        ir, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertTrue(similar.length > 0); \n    assertEquals(\"thousand\", similar[0].string);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d0ef034a4f10871667ae75181537775ddcf8ade4","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}