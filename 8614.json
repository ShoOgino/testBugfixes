{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testMergeStream().mjava","commits":[{"id":"f00f1c5fad501b66705121feb623f8cfbb6712f9","date":1431347838,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testMergeStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMergeStream() throws Exception {\n\n    MergeStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new MergeStream(StreamExpressionParser.parse(\"merge(\"\n                              + \"search(collection1, q=\\\"id:(0 3 4)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"search(collection1, q=\\\"id:(1 2)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"on=\\\"a_f asc, a_s asc\\\")\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"q=\\\"id:(0 3 4)\\\"\"));\n    assertTrue(expressionString.contains(\"q=\\\"id:(1 2)\\\"\"));\n    assertTrue(expressionString.contains(\"on=\\\"a_f asc,a_s asc\\\"\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15af35d55d70c34451f9df5edeaeff6b31f8cbe","date":1519625627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testMergeStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testMergeStream().mjava","sourceNew":"  @Test\n  public void testMergeStream() throws Exception {\n    String expressionString;\n    \n    // Basic test\n    try (MergeStream stream = new MergeStream(StreamExpressionParser.parse(\"merge(\"\n                              + \"search(collection1, q=\\\"id:(0 3 4)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"search(collection1, q=\\\"id:(1 2)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"on=\\\"a_f asc, a_s asc\\\")\"), factory)) {\n      expressionString = stream.toExpression(factory).toString();\n      assertTrue(expressionString.contains(\"q=\\\"id:(0 3 4)\\\"\"));\n      assertTrue(expressionString.contains(\"q=\\\"id:(1 2)\\\"\"));\n      assertTrue(expressionString.contains(\"on=\\\"a_f asc,a_s asc\\\"\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeStream() throws Exception {\n\n    MergeStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new MergeStream(StreamExpressionParser.parse(\"merge(\"\n                              + \"search(collection1, q=\\\"id:(0 3 4)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"search(collection1, q=\\\"id:(1 2)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"on=\\\"a_f asc, a_s asc\\\")\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"q=\\\"id:(0 3 4)\\\"\"));\n    assertTrue(expressionString.contains(\"q=\\\"id:(1 2)\\\"\"));\n    assertTrue(expressionString.contains(\"on=\\\"a_f asc,a_s asc\\\"\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"]},"commit2Childs":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}