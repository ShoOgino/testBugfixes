{"path":"src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","commits":[{"id":"b1405362241b561f5590ff4a87d5d6e173bcd9cf","date":1190107634,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns total size in bytes of all of files used by\n   *  this segment. */\n  long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      List files = files();\n      final int size = files.size();\n      sizeInBytes = 0;\n      for(int i=0;i<size;i++) \n        sizeInBytes += dir.fileLength((String) files.get(i));\n    }\n    return sizeInBytes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9ca8e3e7b05d7108f423be06781dbb3ad85e6b04"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"672a1642d19f38e089cd4c171d2fd7a233833d00","date":1191100955,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","sourceNew":"  /** Returns total size in bytes of all of files used by\n   *  this segment. */\n  long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      List files = files();\n      final int size = files.size();\n      sizeInBytes = 0;\n      for(int i=0;i<size;i++) {\n        final String fileName = (String) files.get(i);\n        // We don't count bytes used by a shared doc store\n        // against this segment:\n        if (docStoreOffset == -1 || !IndexFileNames.isDocStoreFile(fileName))\n          sizeInBytes += dir.fileLength(fileName);\n      }\n    }\n    return sizeInBytes;\n  }\n\n","sourceOld":"  /** Returns total size in bytes of all of files used by\n   *  this segment. */\n  long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      List files = files();\n      final int size = files.size();\n      sizeInBytes = 0;\n      for(int i=0;i<size;i++) \n        sizeInBytes += dir.fileLength((String) files.get(i));\n    }\n    return sizeInBytes;\n  }\n\n","bugFix":null,"bugIntro":["9ca8e3e7b05d7108f423be06781dbb3ad85e6b04"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f33fc116e28d7704378c9dd333711753bd0c9706","date":1248010179,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","sourceNew":"  /** Returns total size in bytes of all of files used by\n   *  this segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      List files = files();\n      final int size = files.size();\n      sizeInBytes = 0;\n      for(int i=0;i<size;i++) {\n        final String fileName = (String) files.get(i);\n        // We don't count bytes used by a shared doc store\n        // against this segment:\n        if (docStoreOffset == -1 || !IndexFileNames.isDocStoreFile(fileName))\n          sizeInBytes += dir.fileLength(fileName);\n      }\n    }\n    return sizeInBytes;\n  }\n\n","sourceOld":"  /** Returns total size in bytes of all of files used by\n   *  this segment. */\n  long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      List files = files();\n      final int size = files.size();\n      sizeInBytes = 0;\n      for(int i=0;i<size;i++) {\n        final String fileName = (String) files.get(i);\n        // We don't count bytes used by a shared doc store\n        // against this segment:\n        if (docStoreOffset == -1 || !IndexFileNames.isDocStoreFile(fileName))\n          sizeInBytes += dir.fileLength(fileName);\n      }\n    }\n    return sizeInBytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d","date":1255859449,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","sourceNew":"  /** Returns total size in bytes of all of files used by\n   *  this segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      List<String> files = files();\n      final int size = files.size();\n      sizeInBytes = 0;\n      for(int i=0;i<size;i++) {\n        final String fileName = (String) files.get(i);\n        // We don't count bytes used by a shared doc store\n        // against this segment:\n        if (docStoreOffset == -1 || !IndexFileNames.isDocStoreFile(fileName))\n          sizeInBytes += dir.fileLength(fileName);\n      }\n    }\n    return sizeInBytes;\n  }\n\n","sourceOld":"  /** Returns total size in bytes of all of files used by\n   *  this segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      List files = files();\n      final int size = files.size();\n      sizeInBytes = 0;\n      for(int i=0;i<size;i++) {\n        final String fileName = (String) files.get(i);\n        // We don't count bytes used by a shared doc store\n        // against this segment:\n        if (docStoreOffset == -1 || !IndexFileNames.isDocStoreFile(fileName))\n          sizeInBytes += dir.fileLength(fileName);\n      }\n    }\n    return sizeInBytes;\n  }\n\n","bugFix":null,"bugIntro":["9ca8e3e7b05d7108f423be06781dbb3ad85e6b04"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","sourceNew":"  /** Returns total size in bytes of all of files used by\n   *  this segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      List<String> files = files();\n      final int size = files.size();\n      sizeInBytes = 0;\n      for(int i=0;i<size;i++) {\n        final String fileName = files.get(i);\n        // We don't count bytes used by a shared doc store\n        // against this segment:\n        if (docStoreOffset == -1 || !IndexFileNames.isDocStoreFile(fileName))\n          sizeInBytes += dir.fileLength(fileName);\n      }\n    }\n    return sizeInBytes;\n  }\n\n","sourceOld":"  /** Returns total size in bytes of all of files used by\n   *  this segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      List<String> files = files();\n      final int size = files.size();\n      sizeInBytes = 0;\n      for(int i=0;i<size;i++) {\n        final String fileName = (String) files.get(i);\n        // We don't count bytes used by a shared doc store\n        // against this segment:\n        if (docStoreOffset == -1 || !IndexFileNames.isDocStoreFile(fileName))\n          sizeInBytes += dir.fileLength(fileName);\n      }\n    }\n    return sizeInBytes;\n  }\n\n","bugFix":null,"bugIntro":["9ca8e3e7b05d7108f423be06781dbb3ad85e6b04"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#sizeInBytes().mjava","sourceNew":"  /** Returns total size in bytes of all of files used by\n   *  this segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      List<String> files = files();\n      final int size = files.size();\n      sizeInBytes = 0;\n      for(int i=0;i<size;i++) {\n        final String fileName = files.get(i);\n        // We don't count bytes used by a shared doc store\n        // against this segment:\n        if (docStoreOffset == -1 || !IndexFileNames.isDocStoreFile(fileName))\n          sizeInBytes += dir.fileLength(fileName);\n      }\n    }\n    return sizeInBytes;\n  }\n\n","sourceOld":"  /** Returns total size in bytes of all of files used by\n   *  this segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      List<String> files = files();\n      final int size = files.size();\n      sizeInBytes = 0;\n      for(int i=0;i<size;i++) {\n        final String fileName = files.get(i);\n        // We don't count bytes used by a shared doc store\n        // against this segment:\n        if (docStoreOffset == -1 || !IndexFileNames.isDocStoreFile(fileName))\n          sizeInBytes += dir.fileLength(fileName);\n      }\n    }\n    return sizeInBytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"672a1642d19f38e089cd4c171d2fd7a233833d00":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"f33fc116e28d7704378c9dd333711753bd0c9706":["672a1642d19f38e089cd4c171d2fd7a233833d00"],"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e1ce9be74263e9659aad8a6ee1f213193710b71":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"],"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["f33fc116e28d7704378c9dd333711753bd0c9706"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4e1ce9be74263e9659aad8a6ee1f213193710b71"]},"commit2Childs":{"672a1642d19f38e089cd4c171d2fd7a233833d00":["f33fc116e28d7704378c9dd333711753bd0c9706"],"f33fc116e28d7704378c9dd333711753bd0c9706":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"],"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["672a1642d19f38e089cd4c171d2fd7a233833d00"],"4e1ce9be74263e9659aad8a6ee1f213193710b71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}