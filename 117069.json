{"path":"lucene/src/java/org/apache/lucene/util/TermContext#TermContext(ReaderContext).mjava","commits":[{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/TermContext#TermContext(ReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/PerReaderTermState#PerReaderTermState(ReaderContext).mjava","sourceNew":"  /**\n   * Creates an empty {@link TermContext} from a {@link ReaderContext}\n   */\n  public TermContext(ReaderContext context) {\n    assert context != null && context.isTopLevel;\n    topReaderContext = context;\n    docFreq = 0;\n    final int len;\n    if (context.leaves() == null) {\n      len = 1;\n    } else {\n      len = context.leaves().length;\n    }\n    states = new TermState[len];\n  }\n\n","sourceOld":"  /**\n   * Creates an empty {@link PerReaderTermState} from a {@link ReaderContext}\n   */\n  public PerReaderTermState(ReaderContext context) {\n    assert context != null && context.isTopLevel;\n    topReaderContext = context;\n    docFreq = 0;\n    final int len;\n    if (context.leaves() == null) {\n      len = 1;\n    } else {\n      len = context.leaves().length;\n    }\n    states = new TermState[len];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/TermContext#TermContext(ReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/PerReaderTermState#PerReaderTermState(ReaderContext).mjava","sourceNew":"  /**\n   * Creates an empty {@link TermContext} from a {@link ReaderContext}\n   */\n  public TermContext(ReaderContext context) {\n    assert context != null && context.isTopLevel;\n    topReaderContext = context;\n    docFreq = 0;\n    final int len;\n    if (context.leaves() == null) {\n      len = 1;\n    } else {\n      len = context.leaves().length;\n    }\n    states = new TermState[len];\n  }\n\n","sourceOld":"  /**\n   * Creates an empty {@link PerReaderTermState} from a {@link ReaderContext}\n   */\n  public PerReaderTermState(ReaderContext context) {\n    assert context != null && context.isTopLevel;\n    topReaderContext = context;\n    docFreq = 0;\n    final int len;\n    if (context.leaves() == null) {\n      len = 1;\n    } else {\n      len = context.leaves().length;\n    }\n    states = new TermState[len];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/TermContext#TermContext(ReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/PerReaderTermState#PerReaderTermState(ReaderContext).mjava","sourceNew":"  /**\n   * Creates an empty {@link TermContext} from a {@link ReaderContext}\n   */\n  public TermContext(ReaderContext context) {\n    assert context != null && context.isTopLevel;\n    topReaderContext = context;\n    docFreq = 0;\n    final int len;\n    if (context.leaves() == null) {\n      len = 1;\n    } else {\n      len = context.leaves().length;\n    }\n    states = new TermState[len];\n  }\n\n","sourceOld":"  /**\n   * Creates an empty {@link PerReaderTermState} from a {@link ReaderContext}\n   */\n  public PerReaderTermState(ReaderContext context) {\n    assert context != null && context.isTopLevel;\n    topReaderContext = context;\n    docFreq = 0;\n    final int len;\n    if (context.leaves() == null) {\n      len = 1;\n    } else {\n      len = context.leaves().length;\n    }\n    states = new TermState[len];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8493985e6883b3fa8231d172694d2aa3a85cb182","date":1327920390,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/TermContext#TermContext(IndexReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/TermContext#TermContext(ReaderContext).mjava","sourceNew":"  /**\n   * Creates an empty {@link TermContext} from a {@link IndexReaderContext}\n   */\n  public TermContext(IndexReaderContext context) {\n    assert context != null && context.isTopLevel;\n    topReaderContext = context;\n    docFreq = 0;\n    final int len;\n    if (context.leaves() == null) {\n      len = 1;\n    } else {\n      len = context.leaves().length;\n    }\n    states = new TermState[len];\n  }\n\n","sourceOld":"  /**\n   * Creates an empty {@link TermContext} from a {@link ReaderContext}\n   */\n  public TermContext(ReaderContext context) {\n    assert context != null && context.isTopLevel;\n    topReaderContext = context;\n    docFreq = 0;\n    final int len;\n    if (context.leaves() == null) {\n      len = 1;\n    } else {\n      len = context.leaves().length;\n    }\n    states = new TermState[len];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/TermContext#TermContext(IndexReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/TermContext#TermContext(ReaderContext).mjava","sourceNew":"  /**\n   * Creates an empty {@link TermContext} from a {@link IndexReaderContext}\n   */\n  public TermContext(IndexReaderContext context) {\n    assert context != null && context.isTopLevel;\n    topReaderContext = context;\n    docFreq = 0;\n    final int len;\n    if (context.leaves() == null) {\n      len = 1;\n    } else {\n      len = context.leaves().length;\n    }\n    states = new TermState[len];\n  }\n\n","sourceOld":"  /**\n   * Creates an empty {@link TermContext} from a {@link ReaderContext}\n   */\n  public TermContext(ReaderContext context) {\n    assert context != null && context.isTopLevel;\n    topReaderContext = context;\n    docFreq = 0;\n    final int len;\n    if (context.leaves() == null) {\n      len = 1;\n    } else {\n      len = context.leaves().length;\n    }\n    states = new TermState[len];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"1291e4568eb7d9463d751627596ef14baf4c1603":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0f3cee3d20b0c786e6fca20539454262e29edcab"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0f3cee3d20b0c786e6fca20539454262e29edcab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["0f3cee3d20b0c786e6fca20539454262e29edcab","8493985e6883b3fa8231d172694d2aa3a85cb182"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"]},"commit2Childs":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"0f3cee3d20b0c786e6fca20539454262e29edcab":["8493985e6883b3fa8231d172694d2aa3a85cb182","1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","5cab9a86bd67202d20b6adc463008c8e982b070a"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1291e4568eb7d9463d751627596ef14baf4c1603","0f3cee3d20b0c786e6fca20539454262e29edcab","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}