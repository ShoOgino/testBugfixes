{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#putInternal(FieldInfo).mjava","commits":[{"id":"a851824c09818632c94eba41e60ef5e72e323c8e","date":1337355760,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#putInternal(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * adds the given field to this FieldInfos name / number mapping. The given FI\n     * must be present in the global field number mapping before this method it\n     * called\n     */\n    private void putInternal(FieldInfo fi) {\n      assert !byNumber.containsKey(fi.number);\n      assert !byName.containsKey(fi.name);\n      assert globalFieldNumbers == null || globalFieldNumbers.containsConsistent(Integer.valueOf(fi.number), fi.name);\n      byNumber.put(fi.number, fi);\n      byName.put(fi.name, fi);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db170c1c8faa054c4e52af9aadc6cd12460af7a9","date":1337357757,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#putInternal(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#putInternal(FieldInfo).mjava","sourceNew":"    /**\n     * adds the given field to this FieldInfos name / number mapping. The given FI\n     * must be present in the global field number mapping before this method it\n     * called\n     */\n    private void putInternal(FieldInfo fi) {\n      assert !byName.containsKey(fi.name);\n      assert globalFieldNumbers.containsConsistent(Integer.valueOf(fi.number), fi.name);\n      byName.put(fi.name, fi);\n    }\n\n","sourceOld":"    /**\n     * adds the given field to this FieldInfos name / number mapping. The given FI\n     * must be present in the global field number mapping before this method it\n     * called\n     */\n    private void putInternal(FieldInfo fi) {\n      assert !byNumber.containsKey(fi.number);\n      assert !byName.containsKey(fi.name);\n      assert globalFieldNumbers == null || globalFieldNumbers.containsConsistent(Integer.valueOf(fi.number), fi.name);\n      byNumber.put(fi.number, fi);\n      byName.put(fi.name, fi);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#putInternal(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * adds the given field to this FieldInfos name / number mapping. The given FI\n     * must be present in the global field number mapping before this method it\n     * called\n     */\n    private void putInternal(FieldInfo fi) {\n      assert !byName.containsKey(fi.name);\n      assert globalFieldNumbers.containsConsistent(Integer.valueOf(fi.number), fi.name);\n      byName.put(fi.name, fi);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e2893fd5349134af382d33ccc3d84840394c6c1","date":1353682567,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#putInternal(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#putInternal(FieldInfo).mjava","sourceNew":"    /**\n     * adds the given field to this FieldInfos name / number mapping. The given FI\n     * must be present in the global field number mapping before this method it\n     * called\n     */\n    private void putInternal(FieldInfo fi) {\n      assert !byName.containsKey(fi.name);\n      assert globalFieldNumbers.containsConsistent(Integer.valueOf(fi.number), fi.name, fi.getDocValuesType());\n      byName.put(fi.name, fi);\n    }\n\n","sourceOld":"    /**\n     * adds the given field to this FieldInfos name / number mapping. The given FI\n     * must be present in the global field number mapping before this method it\n     * called\n     */\n    private void putInternal(FieldInfo fi) {\n      assert !byName.containsKey(fi.name);\n      assert globalFieldNumbers.containsConsistent(Integer.valueOf(fi.number), fi.name);\n      byName.put(fi.name, fi);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50110fe9088380a4f557899cce4a52f1257c8494","date":1359751675,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#putInternal(FieldInfo).mjava","sourceNew":null,"sourceOld":"    /**\n     * adds the given field to this FieldInfos name / number mapping. The given FI\n     * must be present in the global field number mapping before this method it\n     * called\n     */\n    private void putInternal(FieldInfo fi) {\n      assert !byName.containsKey(fi.name);\n      assert globalFieldNumbers.containsConsistent(Integer.valueOf(fi.number), fi.name, fi.getDocValuesType());\n      byName.put(fi.name, fi);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#putInternal(FieldInfo).mjava","sourceNew":null,"sourceOld":"    /**\n     * adds the given field to this FieldInfos name / number mapping. The given FI\n     * must be present in the global field number mapping before this method it\n     * called\n     */\n    private void putInternal(FieldInfo fi) {\n      assert !byName.containsKey(fi.name);\n      assert globalFieldNumbers.containsConsistent(Integer.valueOf(fi.number), fi.name);\n      byName.put(fi.name, fi);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","db170c1c8faa054c4e52af9aadc6cd12460af7a9"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","50110fe9088380a4f557899cce4a52f1257c8494"],"db170c1c8faa054c4e52af9aadc6cd12460af7a9":["a851824c09818632c94eba41e60ef5e72e323c8e"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a851824c09818632c94eba41e60ef5e72e323c8e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"50110fe9088380a4f557899cce4a52f1257c8494":["6e2893fd5349134af382d33ccc3d84840394c6c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["d4d69c535930b5cce125cff868d40f6373dc27d4","6e2893fd5349134af382d33ccc3d84840394c6c1"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"db170c1c8faa054c4e52af9aadc6cd12460af7a9":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["50110fe9088380a4f557899cce4a52f1257c8494"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","a851824c09818632c94eba41e60ef5e72e323c8e"],"a851824c09818632c94eba41e60ef5e72e323c8e":["db170c1c8faa054c4e52af9aadc6cd12460af7a9"],"50110fe9088380a4f557899cce4a52f1257c8494":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}