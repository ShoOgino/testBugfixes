{"path":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(Path,ClassLoader).mjava","commits":[{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(Path,ClassLoader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   */\n  public SolrResourceLoader(Path instanceDir, ClassLoader parent)\n  {\n    this(instanceDir, parent, null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954ae83b7dfacaa33d48ea056448ae11f7745a93","date":1571867711,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(Path,ClassLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(Path,ClassLoader).mjava","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   */\n  public SolrResourceLoader(Path instanceDir, ClassLoader parent) {\n    this(instanceDir, parent, null);\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   */\n  public SolrResourceLoader(Path instanceDir, ClassLoader parent)\n  {\n    this(instanceDir, parent, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(Path,ClassLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(Path,ClassLoader).mjava","sourceNew":"  /**\n   * This loader will delegate to Solr's classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   *\n   * @param instanceDir - base directory for this resource loader, if null locateSolrHome() will be used.\n   * @see SolrPaths#locateSolrHome()\n   */\n  public SolrResourceLoader(Path instanceDir, ClassLoader parent) {\n    if (instanceDir == null) {\n      this.instanceDir = SolrPaths.locateSolrHome().toAbsolutePath().normalize();\n      log.debug(\"new SolrResourceLoader for deduced Solr Home: '{}'\", this.instanceDir);\n    } else {\n      this.instanceDir = instanceDir.toAbsolutePath().normalize();\n      log.debug(\"new SolrResourceLoader for directory: '{}'\", this.instanceDir);\n    }\n\n    if (parent == null) {\n      parent = getClass().getClassLoader();\n    }\n    this.classLoader = URLClassLoader.newInstance(new URL[0], parent);\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   */\n  public SolrResourceLoader(Path instanceDir, ClassLoader parent) {\n    this(instanceDir, parent, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dfc068060fd93e9c7417d1271ca797dc90496f67","date":1592771305,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(Path,ClassLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(Path,ClassLoader).mjava","sourceNew":"  /**\n   * This loader will delegate to Solr's classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   *\n   * @param instanceDir - base directory for this resource loader, if null locateSolrHome() will be used.\n   * @see SolrPaths#locateSolrHome()\n   */\n  public SolrResourceLoader(Path instanceDir, ClassLoader parent) {\n    if (instanceDir == null) {\n      this.instanceDir = SolrPaths.locateSolrHome();\n      log.debug(\"new SolrResourceLoader for deduced Solr Home: '{}'\", this.instanceDir);\n    } else {\n      this.instanceDir = instanceDir;\n      log.debug(\"new SolrResourceLoader for directory: '{}'\", this.instanceDir);\n    }\n\n    if (parent == null) {\n      parent = getClass().getClassLoader();\n    }\n    this.classLoader = URLClassLoader.newInstance(new URL[0], parent);\n  }\n\n","sourceOld":"  /**\n   * This loader will delegate to Solr's classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   *\n   * @param instanceDir - base directory for this resource loader, if null locateSolrHome() will be used.\n   * @see SolrPaths#locateSolrHome()\n   */\n  public SolrResourceLoader(Path instanceDir, ClassLoader parent) {\n    if (instanceDir == null) {\n      this.instanceDir = SolrPaths.locateSolrHome().toAbsolutePath().normalize();\n      log.debug(\"new SolrResourceLoader for deduced Solr Home: '{}'\", this.instanceDir);\n    } else {\n      this.instanceDir = instanceDir.toAbsolutePath().normalize();\n      log.debug(\"new SolrResourceLoader for directory: '{}'\", this.instanceDir);\n    }\n\n    if (parent == null) {\n      parent = getClass().getClassLoader();\n    }\n    this.classLoader = URLClassLoader.newInstance(new URL[0], parent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dfc068060fd93e9c7417d1271ca797dc90496f67":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dfc068060fd93e9c7417d1271ca797dc90496f67"]},"commit2Childs":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["dfc068060fd93e9c7417d1271ca797dc90496f67"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"dfc068060fd93e9c7417d1271ca797dc90496f67":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}