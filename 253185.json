{"path":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","pathOld":"/dev/null","sourceNew":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when SOLAR starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return searcher.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, searcher, 0, newQuery, newFilter);\n\n      // TODO REMOVE\n      if (newFilter[0]!=null) {\n        // System.out.println(\"OPTIMIZED QUERY: FILTER=\" + newFilter[0]);\n      }\n\n      return searcher.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f43319eb38e3b77b7040b7b9a718e91ec61d55df","date":1141363177,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","pathOld":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","sourceNew":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when Solr starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return searcher.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, searcher, 0, newQuery, newFilter);\n\n      // TODO REMOVE\n      if (newFilter[0]!=null) {\n        // System.out.println(\"OPTIMIZED QUERY: FILTER=\" + newFilter[0]);\n      }\n\n      return searcher.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","sourceOld":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when SOLAR starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return searcher.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, searcher, 0, newQuery, newFilter);\n\n      // TODO REMOVE\n      if (newFilter[0]!=null) {\n        // System.out.println(\"OPTIMIZED QUERY: FILTER=\" + newFilter[0]);\n      }\n\n      return searcher.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c686ad76bb74d110ec3c727914fb5693a7da23","date":1158901446,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","pathOld":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","sourceNew":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when Solr starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return searcher.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, searcher, 0, newQuery, newFilter);\n\n      return searcher.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","sourceOld":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when Solr starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return searcher.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, searcher, 0, newQuery, newFilter);\n\n      // TODO REMOVE\n      if (newFilter[0]!=null) {\n        // System.out.println(\"OPTIMIZED QUERY: FILTER=\" + newFilter[0]);\n      }\n\n      return searcher.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ceb8ef10f044820fbd058f02d5a8e26539d255c","date":1242149378,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","pathOld":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","sourceNew":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when Solr starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return super.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, this, 0, newQuery, newFilter);\n\n      return super.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","sourceOld":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when Solr starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return searcher.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, searcher, 0, newQuery, newFilter);\n\n      return searcher.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"029ffe7502a7a8ff1f425020bc204311ade99687","date":1243301392,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","pathOld":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","sourceNew":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when Solr starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return searcher.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, searcher, 0, newQuery, newFilter);\n\n      return searcher.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","sourceOld":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when Solr starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return super.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, this, 0, newQuery, newFilter);\n\n      return super.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac3e6437547a34cce2b5405ce0cf9e3af578401e","date":1243373693,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","pathOld":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","sourceNew":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when Solr starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return super.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, this, 0, newQuery, newFilter);\n\n      return super.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","sourceOld":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when Solr starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return searcher.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, searcher, 0, newQuery, newFilter);\n\n      return searcher.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef28ac95f5f85bbf872801277448c0924b0a6827","date":1268600312,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/search/SolrIndexSearcher#search(Query,Filter,Sort).mjava","sourceNew":null,"sourceOld":"  public Hits search(Query query, Filter filter, Sort sort) throws IOException {\n    // todo - when Solr starts accepting filters, need to\n    // change this conditional check (filter!=null) and create a new filter\n    // that ANDs them together if it already exists.\n\n    if (optimizer==null || filter!=null || !(query instanceof BooleanQuery)\n    ) {\n      return super.search(query,filter,sort);\n    } else {\n      Query[] newQuery = new Query[1];\n      Filter[] newFilter = new Filter[1];\n      optimizer.optimize((BooleanQuery)query, this, 0, newQuery, newFilter);\n\n      return super.search(newQuery[0], newFilter[0], sort);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ac3e6437547a34cce2b5405ce0cf9e3af578401e":["029ffe7502a7a8ff1f425020bc204311ade99687"],"7ceb8ef10f044820fbd058f02d5a8e26539d255c":["79c686ad76bb74d110ec3c727914fb5693a7da23"],"79c686ad76bb74d110ec3c727914fb5693a7da23":["f43319eb38e3b77b7040b7b9a718e91ec61d55df"],"f43319eb38e3b77b7040b7b9a718e91ec61d55df":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"029ffe7502a7a8ff1f425020bc204311ade99687":["7ceb8ef10f044820fbd058f02d5a8e26539d255c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ef28ac95f5f85bbf872801277448c0924b0a6827":["ac3e6437547a34cce2b5405ce0cf9e3af578401e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ac3e6437547a34cce2b5405ce0cf9e3af578401e":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"7ceb8ef10f044820fbd058f02d5a8e26539d255c":["029ffe7502a7a8ff1f425020bc204311ade99687"],"79c686ad76bb74d110ec3c727914fb5693a7da23":["7ceb8ef10f044820fbd058f02d5a8e26539d255c"],"f43319eb38e3b77b7040b7b9a718e91ec61d55df":["79c686ad76bb74d110ec3c727914fb5693a7da23"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["f43319eb38e3b77b7040b7b9a718e91ec61d55df"],"029ffe7502a7a8ff1f425020bc204311ade99687":["ac3e6437547a34cce2b5405ce0cf9e3af578401e"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef28ac95f5f85bbf872801277448c0924b0a6827":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef28ac95f5f85bbf872801277448c0924b0a6827","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}