{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsWriter.SimpleTextPostingsWriter#addPosition(int,BytesRef,int,int).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsWriter.SimpleTextPostingsWriter#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsWriter.SimpleTextPostingsWriter#addPosition(int,BytesRef,int,int).mjava","sourceNew":"    @Override\n    public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n      if (writePositions) {\n        write(POS);\n        write(Integer.toString(position));\n        newline();\n      }\n\n      if (writeOffsets) {\n        assert endOffset >= startOffset;\n        assert startOffset >= lastStartOffset: \"startOffset=\" + startOffset + \" lastStartOffset=\" + lastStartOffset;\n        lastStartOffset = startOffset;\n        write(START_OFFSET);\n        write(Integer.toString(startOffset));\n        newline();\n        write(END_OFFSET);\n        write(Integer.toString(endOffset));\n        newline();\n      }\n\n      if (payload != null && payload.length > 0) {\n        assert payload.length != 0;\n        write(PAYLOAD);\n        write(payload);\n        newline();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n      if (writePositions) {\n        write(POS);\n        write(Integer.toString(position));\n        newline();\n      }\n\n      if (writeOffsets) {\n        assert endOffset >= startOffset;\n        assert startOffset >= lastStartOffset: \"startOffset=\" + startOffset + \" lastStartOffset=\" + lastStartOffset;\n        lastStartOffset = startOffset;\n        write(START_OFFSET);\n        write(Integer.toString(startOffset));\n        newline();\n        write(END_OFFSET);\n        write(Integer.toString(endOffset));\n        newline();\n      }\n\n      if (payload != null && payload.length > 0) {\n        assert payload.length != 0;\n        write(PAYLOAD);\n        write(payload);\n        newline();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","date":1379624229,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsWriter.SimpleTextPostingsWriter#addPosition(int,BytesRef,int,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException {\n      if (writePositions) {\n        write(POS);\n        write(Integer.toString(position));\n        newline();\n      }\n\n      if (writeOffsets) {\n        assert endOffset >= startOffset;\n        assert startOffset >= lastStartOffset: \"startOffset=\" + startOffset + \" lastStartOffset=\" + lastStartOffset;\n        lastStartOffset = startOffset;\n        write(START_OFFSET);\n        write(Integer.toString(startOffset));\n        newline();\n        write(END_OFFSET);\n        write(Integer.toString(endOffset));\n        newline();\n      }\n\n      if (payload != null && payload.length > 0) {\n        assert payload.length != 0;\n        write(PAYLOAD);\n        write(payload);\n        newline();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}