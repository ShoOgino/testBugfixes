{"path":"src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","commits":[{"id":"1ab51a69d46b495c00b86cf406ed599035e94d70","date":1161321049,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"/dev/null","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1);\n      doTest(10,100);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["63a3550ed15a7106c8349f6bb7df67ca50068de7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cb1066f2afe9450585d0d10063ea4450085236f1","date":1233870820,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1);\n      doTest(10,100);\n    }\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1);\n      doTest(10,100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1);\n      doTest(10,100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1);\n      doTest(10,100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1ab51a69d46b495c00b86cf406ed599035e94d70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cb1066f2afe9450585d0d10063ea4450085236f1":["1ab51a69d46b495c00b86cf406ed599035e94d70"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["cb1066f2afe9450585d0d10063ea4450085236f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["cb1066f2afe9450585d0d10063ea4450085236f1","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0a046c0c310bc77931fc8441bd920053b607dd14"]},"commit2Childs":{"1ab51a69d46b495c00b86cf406ed599035e94d70":["cb1066f2afe9450585d0d10063ea4450085236f1"],"cb1066f2afe9450585d0d10063ea4450085236f1":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1ab51a69d46b495c00b86cf406ed599035e94d70"],"0a046c0c310bc77931fc8441bd920053b607dd14":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}