{"path":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache.CachingWrapperWeight#cacheEntryHasReasonableWorstCaseSize(int).mjava","commits":[{"id":"f24c20ef0735cfb643ce2b0309b9e94aaf75f16a","date":1430251781,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache.CachingWrapperWeight#cacheEntryHasReasonableWorstCaseSize(int).mjava","pathOld":"/dev/null","sourceNew":"    private boolean cacheEntryHasReasonableWorstCaseSize(int maxDoc) {\n      // The worst-case (dense) is a bit set which needs one bit per document\n      final long worstCaseRamUsage = maxDoc / 8;\n      final long totalRamAvailable = maxRamBytesUsed;\n      // Imagine the worst-case that a cache entry is large than the size of\n      // the cache: not only will this entry be trashed immediately but it\n      // will also evict all current entries from the cache. For this reason\n      // we only cache on an IndexReader if we have available room for\n      // 5 different filters on this reader to avoid excessive trashing\n      return worstCaseRamUsage * 5 < totalRamAvailable;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f24c20ef0735cfb643ce2b0309b9e94aaf75f16a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f24c20ef0735cfb643ce2b0309b9e94aaf75f16a"]},"commit2Childs":{"f24c20ef0735cfb643ce2b0309b9e94aaf75f16a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f24c20ef0735cfb643ce2b0309b9e94aaf75f16a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}