{"path":"solr/core/src/java/org/apache/solr/core/SolrXMLCoresLocator#buildCoreTag(CoreDescriptor).mjava","commits":[{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXMLCoresLocator#buildCoreTag(CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Serialize a coredescriptor as a String containing an XML &lt;core> tag.\n   * @param cd the CoreDescriptor\n   * @return an XML representation of the CoreDescriptor\n   */\n  protected static String buildCoreTag(CoreDescriptor cd) {\n\n    StringBuilder builder = new StringBuilder(NEWLINE).append(INDENT).append(\"<core\");\n    for (Map.Entry<Object, Object> entry : cd.getPersistableStandardProperties().entrySet()) {\n      builder.append(\" \").append(entry.getKey()).append(\"=\\\"\").append(entry.getValue()).append(\"\\\"\");\n    }\n\n    Properties userProperties = cd.getPersistableUserProperties();\n    if (userProperties.isEmpty()) {\n      return builder.append(\"/>\").append(NEWLINE).toString();\n    }\n\n    builder.append(\">\").append(NEWLINE);\n    for (Map.Entry<Object, Object> entry : userProperties.entrySet()) {\n      builder.append(INDENT).append(INDENT)\n          .append(\"<property name=\\\"\").append(entry.getKey()).append(\"\\\" value=\\\"\")\n          .append(entry.getValue()).append(\"\\\"/>\").append(NEWLINE);\n    }\n\n    return builder.append(\"</core>\").append(NEWLINE).toString();\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXMLCoresLocator#buildCoreTag(CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Serialize a coredescriptor as a String containing an XML &lt;core> tag.\n   * @param cd the CoreDescriptor\n   * @return an XML representation of the CoreDescriptor\n   */\n  protected static String buildCoreTag(CoreDescriptor cd) {\n\n    StringBuilder builder = new StringBuilder(NEWLINE).append(INDENT).append(\"<core\");\n    for (Map.Entry<Object, Object> entry : cd.getPersistableStandardProperties().entrySet()) {\n      builder.append(\" \").append(entry.getKey()).append(\"=\\\"\").append(entry.getValue()).append(\"\\\"\");\n    }\n\n    Properties userProperties = cd.getPersistableUserProperties();\n    if (userProperties.isEmpty()) {\n      return builder.append(\"/>\").append(NEWLINE).toString();\n    }\n\n    builder.append(\">\").append(NEWLINE);\n    for (Map.Entry<Object, Object> entry : userProperties.entrySet()) {\n      builder.append(INDENT).append(INDENT)\n          .append(\"<property name=\\\"\").append(entry.getKey()).append(\"\\\" value=\\\"\")\n          .append(entry.getValue()).append(\"\\\"/>\").append(NEWLINE);\n    }\n\n    return builder.append(\"</core>\").append(NEWLINE).toString();\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXMLCoresLocator#buildCoreTag(CoreDescriptor).mjava","sourceNew":null,"sourceOld":"  /**\n   * Serialize a coredescriptor as a String containing an XML &lt;core> tag.\n   * @param cd the CoreDescriptor\n   * @return an XML representation of the CoreDescriptor\n   */\n  protected static String buildCoreTag(CoreDescriptor cd) {\n\n    StringBuilder builder = new StringBuilder(NEWLINE).append(INDENT).append(\"<core\");\n    for (Map.Entry<Object, Object> entry : cd.getPersistableStandardProperties().entrySet()) {\n      builder.append(\" \").append(entry.getKey()).append(\"=\\\"\").append(entry.getValue()).append(\"\\\"\");\n    }\n\n    Properties userProperties = cd.getPersistableUserProperties();\n    if (userProperties.isEmpty()) {\n      return builder.append(\"/>\").append(NEWLINE).toString();\n    }\n\n    builder.append(\">\").append(NEWLINE);\n    for (Map.Entry<Object, Object> entry : userProperties.entrySet()) {\n      builder.append(INDENT).append(INDENT)\n          .append(\"<property name=\\\"\").append(entry.getKey()).append(\"\\\" value=\\\"\")\n          .append(entry.getValue()).append(\"\\\"/>\").append(NEWLINE);\n    }\n\n    return builder.append(\"</core>\").append(NEWLINE).toString();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}