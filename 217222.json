{"path":"lucene/core/src/java/org/apache/lucene/util/MathUtil#sumRelativeErrorBound(int).mjava","commits":[{"id":"4874ce841615411ddc4f5998fc9db9a533827976","date":1514294366,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/MathUtil#sumRelativeErrorBound(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a relative error bound for a sum of {@code numValues} positive doubles,\n   * computed using recursive summation, ie. sum = x1 + ... + xn.\n   * NOTE: This only works if all values are POSITIVE so that Σ |xi| == |Σ xi|.\n   * This uses formula 3.5 from Higham, Nicholas J. (1993),\n   * \"The accuracy of floating point summation\", SIAM Journal on Scientific Computing.\n   */\n  public static double sumRelativeErrorBound(int numValues) {\n    if (numValues <= 1) {\n      return 0;\n    }\n    // u = unit roundoff in the paper, also called machine precision or machine epsilon\n    double u = Math.scalb(1.0, -52);\n    return (numValues - 1) * u;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4874ce841615411ddc4f5998fc9db9a533827976":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4874ce841615411ddc4f5998fc9db9a533827976"]},"commit2Childs":{"4874ce841615411ddc4f5998fc9db9a533827976":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4874ce841615411ddc4f5998fc9db9a533827976"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}