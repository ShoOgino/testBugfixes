{"path":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#KNearestNeighborClassifier(int).mjava","commits":[{"id":"db318054409ed0abffd7a36b3f0ac61693f45684","date":1351009122,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#KNearestNeighborClassifier(int).mjava","pathOld":"/dev/null","sourceNew":"  public KNearestNeighborClassifier(int k) {\n    this.k = k;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e52115b56781006682fd92c6938efaf174304d","date":1351014780,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#KNearestNeighborClassifier(int).mjava","pathOld":"/dev/null","sourceNew":"  public KNearestNeighborClassifier(int k) {\n    this.k = k;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"918b34b1bc099d512594e846097446fccfe971f7","date":1351087146,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#KNearestNeighborClassifier(int).mjava","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#KNearestNeighborClassifier(int).mjava","sourceNew":"  /**\n   * Create a {@link Classifier} using kNN algorithm\n   * @param k the number of neighbors to analyze as an <code>int</code>\n   */\n  public KNearestNeighborClassifier(int k) {\n    this.k = k;\n  }\n\n","sourceOld":"  public KNearestNeighborClassifier(int k) {\n    this.k = k;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#KNearestNeighborClassifier(int).mjava","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#KNearestNeighborClassifier(int).mjava","sourceNew":"  /**\n   * Create a {@link Classifier} using kNN algorithm\n   * @param k the number of neighbors to analyze as an <code>int</code>\n   */\n  public KNearestNeighborClassifier(int k) {\n    this.k = k;\n  }\n\n","sourceOld":"  public KNearestNeighborClassifier(int k) {\n    this.k = k;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c8e3a945180659ef49c6b1e7eeb48083fb72c30","date":1351618892,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#KNearestNeighborClassifier(int).mjava","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#KNearestNeighborClassifier(int).mjava","sourceNew":"  /**\n   * Create a {@link Classifier} using kNN algorithm\n   *\n   * @param k the number of neighbors to analyze as an <code>int</code>\n   */\n  public KNearestNeighborClassifier(int k) {\n    this.k = k;\n  }\n\n","sourceOld":"  /**\n   * Create a {@link Classifier} using kNN algorithm\n   * @param k the number of neighbors to analyze as an <code>int</code>\n   */\n  public KNearestNeighborClassifier(int k) {\n    this.k = k;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"360ff513ddb24a30ffa2111a3ef0f91038803100","date":1430403123,"type":4,"author":"Tommaso Teofili","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/KNearestNeighborClassifier#KNearestNeighborClassifier(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a {@link Classifier} using kNN algorithm\n   *\n   * @param k the number of neighbors to analyze as an <code>int</code>\n   */\n  public KNearestNeighborClassifier(int k) {\n    this.k = k;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"62e52115b56781006682fd92c6938efaf174304d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","db318054409ed0abffd7a36b3f0ac61693f45684"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"918b34b1bc099d512594e846097446fccfe971f7":["db318054409ed0abffd7a36b3f0ac61693f45684"],"db318054409ed0abffd7a36b3f0ac61693f45684":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2126b84bd093fa3d921582a109a0ee578c28126":["62e52115b56781006682fd92c6938efaf174304d","918b34b1bc099d512594e846097446fccfe971f7"],"9c8e3a945180659ef49c6b1e7eeb48083fb72c30":["918b34b1bc099d512594e846097446fccfe971f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["360ff513ddb24a30ffa2111a3ef0f91038803100"],"360ff513ddb24a30ffa2111a3ef0f91038803100":["9c8e3a945180659ef49c6b1e7eeb48083fb72c30"]},"commit2Childs":{"62e52115b56781006682fd92c6938efaf174304d":["f2126b84bd093fa3d921582a109a0ee578c28126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["62e52115b56781006682fd92c6938efaf174304d","db318054409ed0abffd7a36b3f0ac61693f45684"],"db318054409ed0abffd7a36b3f0ac61693f45684":["62e52115b56781006682fd92c6938efaf174304d","918b34b1bc099d512594e846097446fccfe971f7"],"918b34b1bc099d512594e846097446fccfe971f7":["f2126b84bd093fa3d921582a109a0ee578c28126","9c8e3a945180659ef49c6b1e7eeb48083fb72c30"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"9c8e3a945180659ef49c6b1e7eeb48083fb72c30":["360ff513ddb24a30ffa2111a3ef0f91038803100"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"360ff513ddb24a30ffa2111a3ef0f91038803100":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}