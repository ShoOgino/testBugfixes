{"path":"src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","commits":[{"id":"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","date":1218639440,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","pathOld":"src/java/org/apache/solr/core/MultiCore#fileCopy(File,File).mjava","sourceNew":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy\n      fcin.transferTo(0, fcin.size(), fcout);\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","sourceOld":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy\n      fcin.transferTo(0, fcin.size(), fcout);\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4926b5318ba4167d360445a0c5f3fc8af2cf8c49","date":1218678599,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","sourceNew":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32*1024*1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","sourceOld":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy\n      fcin.transferTo(0, fcin.size(), fcout);\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#fileCopy(File,File).mjava","sourceNew":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32*1024*1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","sourceOld":"  /** Copies a src file to a dest file:\n   *  used to circumvent the platform discrepancies regarding renaming files.\n   */\n  public static void fileCopy(File src, File dest) throws IOException {\n    IOException xforward = null;\n    FileInputStream fis =  null;\n    FileOutputStream fos = null;\n    FileChannel fcin = null;\n    FileChannel fcout = null;\n    try {\n      fis = new FileInputStream(src);\n      fos = new FileOutputStream(dest);\n      fcin = fis.getChannel();\n      fcout = fos.getChannel();\n      // do the file copy 32Mb at a time\n      final int MB32 = 32*1024*1024;\n      long size = fcin.size();\n      long position = 0;\n      while (position < size) {\n        position += fcin.transferTo(position, MB32, fcout);\n      }\n    } \n    catch(IOException xio) {\n      xforward = xio;\n    } \n    finally {\n      if (fis   != null) try { fis.close(); fis = null; } catch(IOException xio) {}\n      if (fos   != null) try { fos.close(); fos = null; } catch(IOException xio) {}\n      if (fcin  != null && fcin.isOpen() ) try { fcin.close();  fcin = null;  } catch(IOException xio) {}\n      if (fcout != null && fcout.isOpen()) try { fcout.close(); fcout = null; } catch(IOException xio) {}\n    }\n    if (xforward != null) {\n      throw xforward;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}