{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#makePath(String,byte[],CreateMode,boolean).mjava","commits":[{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#makePath(String,byte[],CreateMode,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#makePath(String,byte[],CreateMode,boolean).mjava","sourceNew":"  @Override\n  public void makePath(String path, byte[] data, CreateMode createMode, boolean failOnExists) throws AlreadyExistsException, IOException, KeeperException, InterruptedException {\n    Node n = null;\n    multiLock.lock();\n    try {\n      if (failOnExists && hasData(path)) {\n        throw new AlreadyExistsException(path);\n      }\n      n = traverse(path, true, createMode);\n    } finally {\n      multiLock.unlock();\n    }\n    try {\n      n.setData(data, -1);\n    } catch (BadVersionException e) {\n      throw new IOException(\"should not happen!\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void makePath(String path, byte[] data, CreateMode createMode, boolean failOnExists) throws AlreadyExistsException, IOException, KeeperException, InterruptedException {\n    Node n = null;\n    multiLock.lock();\n    try {\n      if (failOnExists && hasData(path)) {\n        throw new AlreadyExistsException(path);\n      }\n      n = traverse(path, true, createMode);\n    } finally {\n      multiLock.unlock();\n    }\n    try {\n      n.setData(data, -1);\n    } catch (BadVersionException e) {\n      throw new IOException(\"should not happen!\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#makePath(String,byte[],CreateMode,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void makePath(String path, byte[] data, CreateMode createMode, boolean failOnExists) throws AlreadyExistsException, IOException, KeeperException, InterruptedException {\n    Node n = null;\n    multiLock.lock();\n    try {\n      if (failOnExists && hasData(path)) {\n        throw new AlreadyExistsException(path);\n      }\n      n = traverse(path, true, createMode);\n    } finally {\n      multiLock.unlock();\n    }\n    try {\n      n.setData(data, -1);\n    } catch (BadVersionException e) {\n      throw new IOException(\"should not happen!\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}