{"path":"src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","commits":[{"id":"777266061356b1925b597f20861d8e2e67650716","date":1149891347,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab seperated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    HashMap result = new HashMap();\n    BufferedReader br = null;\n    FileReader fr = null;\n    try {\n      fr = new FileReader(wordstemfile);\n      br = new BufferedReader(fr);\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if (fr != null)\n        fr.close();\n      if (br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc","date":1255773182,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","pathOld":"src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","sourceNew":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab seperated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap<String, String> getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    HashMap<String, String> result = new HashMap<String, String>();\n    BufferedReader br = null;\n    FileReader fr = null;\n    try {\n      fr = new FileReader(wordstemfile);\n      br = new BufferedReader(fr);\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if (fr != null)\n        fr.close();\n      if (br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab seperated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    HashMap result = new HashMap();\n    BufferedReader br = null;\n    FileReader fr = null;\n    try {\n      fr = new FileReader(wordstemfile);\n      br = new BufferedReader(fr);\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if (fr != null)\n        fr.close();\n      if (br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc5fbfd4c64963aba52713a4496522540294d69","date":1262508497,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","pathOld":"src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","sourceNew":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab seperated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap<String, String> getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    final HashMap<String, String> result = new HashMap<String,String>();\n    BufferedReader br = null;\n    \n    try {\n      br = new BufferedReader(new FileReader(wordstemfile));\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if(br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab seperated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap<String, String> getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    HashMap<String, String> result = new HashMap<String, String>();\n    BufferedReader br = null;\n    FileReader fr = null;\n    try {\n      fr = new FileReader(wordstemfile);\n      br = new BufferedReader(fr);\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if (fr != null)\n        fr.close();\n      if (br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4dbe3150e00d45eded0dd2b3d495024b232dfb39","date":1263390611,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","pathOld":"src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","sourceNew":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab separated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap<String, String> getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    final HashMap<String, String> result = new HashMap<String,String>();\n    BufferedReader br = null;\n    \n    try {\n      br = new BufferedReader(new FileReader(wordstemfile));\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if(br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab seperated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap<String, String> getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    final HashMap<String, String> result = new HashMap<String,String>();\n    BufferedReader br = null;\n    \n    try {\n      br = new BufferedReader(new FileReader(wordstemfile));\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if(br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","pathOld":"src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","sourceNew":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab separated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap<String, String> getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    final HashMap<String, String> result = new HashMap<String,String>();\n    BufferedReader br = null;\n    \n    try {\n      br = new BufferedReader(new FileReader(wordstemfile));\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if(br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab separated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap<String, String> getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    final HashMap<String, String> result = new HashMap<String,String>();\n    BufferedReader br = null;\n    \n    try {\n      br = new BufferedReader(new FileReader(wordstemfile));\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if(br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4dbe3150e00d45eded0dd2b3d495024b232dfb39":["ddc5fbfd4c64963aba52713a4496522540294d69"],"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc":["777266061356b1925b597f20861d8e2e67650716"],"777266061356b1925b597f20861d8e2e67650716":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ddc5fbfd4c64963aba52713a4496522540294d69":["b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4dbe3150e00d45eded0dd2b3d495024b232dfb39"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["777266061356b1925b597f20861d8e2e67650716"],"4dbe3150e00d45eded0dd2b3d495024b232dfb39":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc":["ddc5fbfd4c64963aba52713a4496522540294d69"],"777266061356b1925b597f20861d8e2e67650716":["b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc"],"ddc5fbfd4c64963aba52713a4496522540294d69":["4dbe3150e00d45eded0dd2b3d495024b232dfb39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}