{"path":"lucene/facet/src/java/org/apache/lucene/facet/collections/IntToIntMap#prvt_put(int,int).mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/collections/IntToIntMap#prvt_put(int,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToIntMap#prvt_put(int,int).mjava","sourceNew":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link #firstEmpty}.\n   * \n   * New pairs are always inserted to baseHash, and are followed by the old\n   * colliding pair.\n   * \n   * @param key\n   *            integer which maps the given value\n   * @param e\n   *            value which is being mapped using the given key\n   */\n  private void prvt_put(int key, int e) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = e;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","sourceOld":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link #firstEmpty}.\n   * \n   * New pairs are always inserted to baseHash, and are followed by the old\n   * colliding pair.\n   * \n   * @param key\n   *            integer which maps the given value\n   * @param e\n   *            value which is being mapped using the given key\n   */\n  private void prvt_put(int key, int e) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = e;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/collections/IntToIntMap#prvt_put(int,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link #firstEmpty}.\n   * \n   * New pairs are always inserted to baseHash, and are followed by the old\n   * colliding pair.\n   * \n   * @param key\n   *            integer which maps the given value\n   * @param e\n   *            value which is being mapped using the given key\n   */\n  private void prvt_put(int key, int e) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = e;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/collections/IntToIntMap#prvt_put(int,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link #firstEmpty}.\n   * \n   * New pairs are always inserted to baseHash, and are followed by the old\n   * colliding pair.\n   * \n   * @param key\n   *            integer which maps the given value\n   * @param e\n   *            value which is being mapped using the given key\n   */\n  private void prvt_put(int key, int e) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = e;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["607428da722dcb3e86bbd11c63de8986e6275c36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["607428da722dcb3e86bbd11c63de8986e6275c36","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}