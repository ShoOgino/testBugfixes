{"path":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#addPosition(int,BytesRef).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#addPosition(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter.PostingsWriter#addPosition(int,BytesRef).mjava","sourceNew":"      @Override\n      public void addPosition(int pos, BytesRef payload) throws IOException {\n        assert payload == null || field.storePayloads;\n\n        if (VERBOSE) System.out.println(\"      addPos pos=\" + pos + \" payload=\" + payload);\n\n        final int delta = pos - lastPos;\n        assert delta >= 0;\n        lastPos = pos;\n        \n        if (field.storePayloads) {\n          final int payloadLen = payload == null ? 0 : payload.length;\n          if (payloadLen != lastPayloadLen) {\n            lastPayloadLen = payloadLen;\n            buffer.writeVInt((delta<<1)|1);\n            buffer.writeVInt(payloadLen);\n          } else {\n            buffer.writeVInt(delta<<1);\n          }\n\n          if (payloadLen > 0) {\n            buffer.writeBytes(payload.bytes, payload.offset, payloadLen);\n          }\n        } else {\n          buffer.writeVInt(delta);\n        }\n      }\n\n","sourceOld":"      @Override\n      public void addPosition(int pos, BytesRef payload) throws IOException {\n        assert payload == null || field.storePayloads;\n\n        if (VERBOSE) System.out.println(\"      addPos pos=\" + pos + \" payload=\" + payload);\n\n        final int delta = pos - lastPos;\n        assert delta >= 0;\n        lastPos = pos;\n        \n        if (field.storePayloads) {\n          final int payloadLen = payload == null ? 0 : payload.length;\n          if (payloadLen != lastPayloadLen) {\n            lastPayloadLen = payloadLen;\n            buffer.writeVInt((delta<<1)|1);\n            buffer.writeVInt(payloadLen);\n          } else {\n            buffer.writeVInt(delta<<1);\n          }\n\n          if (payloadLen > 0) {\n            buffer.writeBytes(payload.bytes, payload.offset, payloadLen);\n          }\n        } else {\n          buffer.writeVInt(delta);\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#addPosition(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#addPosition(int,BytesRef).mjava","sourceNew":"      @Override\n      public void addPosition(int pos, BytesRef payload) throws IOException {\n        assert payload == null || field.storePayloads;\n\n        if (VERBOSE) System.out.println(\"      addPos pos=\" + pos + \" payload=\" + payload);\n\n        final int delta = pos - lastPos;\n        assert delta >= 0;\n        lastPos = pos;\n        \n        if (field.storePayloads) {\n          final int payloadLen = payload == null ? 0 : payload.length;\n          if (payloadLen != lastPayloadLen) {\n            lastPayloadLen = payloadLen;\n            buffer.writeVInt((delta<<1)|1);\n            buffer.writeVInt(payloadLen);\n          } else {\n            buffer.writeVInt(delta<<1);\n          }\n\n          if (payloadLen > 0) {\n            buffer.writeBytes(payload.bytes, payload.offset, payloadLen);\n          }\n        } else {\n          buffer.writeVInt(delta);\n        }\n      }\n\n","sourceOld":"      @Override\n      public void addPosition(int pos, BytesRef payload) throws IOException {\n        assert payload == null || field.storePayloads;\n\n        if (VERBOSE) System.out.println(\"      addPos pos=\" + pos + \" payload=\" + payload);\n\n        final int delta = pos - lastPos;\n        assert delta >= 0;\n        lastPos = pos;\n        \n        if (field.storePayloads) {\n          final int payloadLen = payload == null ? 0 : payload.length;\n          if (payloadLen != lastPayloadLen) {\n            lastPayloadLen = payloadLen;\n            buffer.writeVInt((delta<<1)|1);\n            buffer.writeVInt(payloadLen);\n          } else {\n            buffer.writeVInt(delta<<1);\n          }\n\n          if (payloadLen > 0) {\n            buffer.writeBytes(payload.bytes, payload.offset, payloadLen);\n          }\n        } else {\n          buffer.writeVInt(delta);\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}