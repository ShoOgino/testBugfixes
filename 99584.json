{"path":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#makeDocument().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#makeDocument().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#makeDocument().mjava","sourceNew":"  /**\n   * Creates a {@link Document} object ready for indexing. This method uses the\n   * {@link ContentSource} to get the next document from the source, and creates\n   * a {@link Document} object from the returned fields. If\n   * <code>reuseFields</code> was set to true, it will reuse {@link Document}\n   * and {@link Field} instances.\n   */\n  public Document makeDocument() throws Exception {\n    resetLeftovers();\n    DocData docData = source.getNextDocData(getDocState().docData);\n    Document doc = createDocument(docData, 0, -1);\n    return doc;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link Document} object ready for indexing. This method uses the\n   * {@link ContentSource} to get the next document from the source, and creates\n   * a {@link Document} object from the returned fields. If\n   * <code>reuseFields</code> was set to true, it will reuse {@link Document}\n   * and {@link Field} instances.\n   */\n  public Document makeDocument() throws Exception {\n    resetLeftovers();\n    DocData docData = source.getNextDocData(getDocState().docData);\n    Document doc = createDocument(docData, 0, -1);\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#makeDocument().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#makeDocument().mjava","sourceNew":"  /**\n   * Creates a {@link Document} object ready for indexing. This method uses the\n   * {@link ContentSource} to get the next document from the source, and creates\n   * a {@link Document} object from the returned fields. If\n   * <code>reuseFields</code> was set to true, it will reuse {@link Document}\n   * and {@link Field} instances.\n   */\n  public Document makeDocument() throws Exception {\n    resetLeftovers();\n    DocData docData = source.getNextDocData(getDocState().docData);\n    Document doc = createDocument(docData, 0, -1);\n    return doc;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link Document} object ready for indexing. This method uses the\n   * {@link ContentSource} to get the next document from the source, and creates\n   * a {@link Document} object from the returned fields. If\n   * <code>reuseFields</code> was set to true, it will reuse {@link Document}\n   * and {@link Field} instances.\n   */\n  public Document makeDocument() throws Exception {\n    resetLeftovers();\n    DocData docData = source.getNextDocData(getDocState().docData);\n    Document doc = createDocument(docData, 0, -1);\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#makeDocument().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#makeDocument().mjava","sourceNew":"  /**\n   * Creates a {@link Document} object ready for indexing. This method uses the\n   * {@link ContentSource} to get the next document from the source, and creates\n   * a {@link Document} object from the returned fields. If\n   * <code>reuseFields</code> was set to true, it will reuse {@link Document}\n   * and {@link Field} instances.\n   */\n  public Document makeDocument() throws Exception {\n    resetLeftovers();\n    DocData docData = source.getNextDocData(getDocState().docData);\n    Document doc = createDocument(docData, 0, -1);\n    return doc;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link Document} object ready for indexing. This method uses the\n   * {@link ContentSource} to get the next document from the source, and creates\n   * a {@link Document} object from the returned fields. If\n   * <code>reuseFields</code> was set to true, it will reuse {@link Document}\n   * and {@link Field} instances.\n   */\n  public Document makeDocument() throws Exception {\n    resetLeftovers();\n    DocData docData = source.getNextDocData(getDocState().docData);\n    Document doc = createDocument(docData, 0, -1);\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#makeDocument().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#makeDocument().mjava","sourceNew":"  /**\n   * Creates a {@link Document} object ready for indexing. This method uses the\n   * {@link ContentSource} to get the next document from the source, and creates\n   * a {@link Document} object from the returned fields. If\n   * <code>reuseFields</code> was set to true, it will reuse {@link Document}\n   * and {@link Field} instances.\n   */\n  public Document makeDocument() throws Exception {\n    resetLeftovers();\n    DocData docData = source.getNextDocData(getDocState().docData);\n    Document doc = createDocument(docData, 0, -1);\n    return doc;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link Document} object ready for indexing. This method uses the\n   * {@link ContentSource} to get the next document from the source, and creates\n   * a {@link Document} object from the returned fields. If\n   * <code>reuseFields</code> was set to true, it will reuse {@link Document}\n   * and {@link Field} instances.\n   */\n  public Document makeDocument() throws Exception {\n    resetLeftovers();\n    DocData docData = source.getNextDocData(getDocState().docData);\n    Document doc = createDocument(docData, 0, -1);\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["9454a6510e2db155fb01faa5c049b06ece95fab9","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["9454a6510e2db155fb01faa5c049b06ece95fab9","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}