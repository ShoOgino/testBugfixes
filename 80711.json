{"path":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#write(BytesRef,TermsEnum).mjava","commits":[{"id":"fa80a35d7c4b2b1e83082b275e3e8328ab93db52","date":1381766157,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#write(BytesRef,TermsEnum).mjava","pathOld":"/dev/null","sourceNew":"    /** Writes one term's worth of postings. */\n    public void write(BytesRef text, TermsEnum termsEnum) throws IOException {\n\n      BlockTermState state = postingsWriter.writeTerm(text, termsEnum, docsSeen);\n      if (state != null) {\n        assert state.docFreq != 0;\n        assert fieldInfo.getIndexOptions() == IndexOptions.DOCS_ONLY || state.totalTermFreq >= state.docFreq: \"postingsWriter=\" + postingsWriter;\n        sumDocFreq += state.docFreq;\n        sumTotalTermFreq += state.totalTermFreq;\n        blockBuilder.add(Util.toIntsRef(text, scratchIntsRef), noOutputs.getNoOutput());\n\n        PendingTerm term = new PendingTerm(BytesRef.deepCopyOf(text), state);\n        pending.add(term);\n        numTerms++;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ad80176d91a6f70fe93880e43dfd697dc4e63ed","date":1400176913,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.TermsWriter#write(BytesRef,TermsEnum).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#write(BytesRef,TermsEnum).mjava","sourceNew":"    /** Writes one term's worth of postings. */\n    public void write(BytesRef text, TermsEnum termsEnum) throws IOException {\n\n      BlockTermState state = postingsWriter.writeTerm(text, termsEnum, docsSeen);\n      if (state != null) {\n        assert state.docFreq != 0;\n        assert fieldInfo.getIndexOptions() == IndexOptions.DOCS_ONLY || state.totalTermFreq >= state.docFreq: \"postingsWriter=\" + postingsWriter;\n        sumDocFreq += state.docFreq;\n        sumTotalTermFreq += state.totalTermFreq;\n        blockBuilder.add(Util.toIntsRef(text, scratchIntsRef), noOutputs.getNoOutput());\n\n        PendingTerm term = new PendingTerm(BytesRef.deepCopyOf(text), state);\n        pending.add(term);\n        numTerms++;\n      }\n    }\n\n","sourceOld":"    /** Writes one term's worth of postings. */\n    public void write(BytesRef text, TermsEnum termsEnum) throws IOException {\n\n      BlockTermState state = postingsWriter.writeTerm(text, termsEnum, docsSeen);\n      if (state != null) {\n        assert state.docFreq != 0;\n        assert fieldInfo.getIndexOptions() == IndexOptions.DOCS_ONLY || state.totalTermFreq >= state.docFreq: \"postingsWriter=\" + postingsWriter;\n        sumDocFreq += state.docFreq;\n        sumTotalTermFreq += state.totalTermFreq;\n        blockBuilder.add(Util.toIntsRef(text, scratchIntsRef), noOutputs.getNoOutput());\n\n        PendingTerm term = new PendingTerm(BytesRef.deepCopyOf(text), state);\n        pending.add(term);\n        numTerms++;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.TermsWriter#write(BytesRef,TermsEnum).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#write(BytesRef,TermsEnum).mjava","sourceNew":"    /** Writes one term's worth of postings. */\n    public void write(BytesRef text, TermsEnum termsEnum) throws IOException {\n\n      BlockTermState state = postingsWriter.writeTerm(text, termsEnum, docsSeen);\n      if (state != null) {\n        assert state.docFreq != 0;\n        assert fieldInfo.getIndexOptions() == IndexOptions.DOCS_ONLY || state.totalTermFreq >= state.docFreq: \"postingsWriter=\" + postingsWriter;\n        sumDocFreq += state.docFreq;\n        sumTotalTermFreq += state.totalTermFreq;\n        blockBuilder.add(Util.toIntsRef(text, scratchIntsRef), noOutputs.getNoOutput());\n\n        PendingTerm term = new PendingTerm(BytesRef.deepCopyOf(text), state);\n        pending.add(term);\n        numTerms++;\n      }\n    }\n\n","sourceOld":"    /** Writes one term's worth of postings. */\n    public void write(BytesRef text, TermsEnum termsEnum) throws IOException {\n\n      BlockTermState state = postingsWriter.writeTerm(text, termsEnum, docsSeen);\n      if (state != null) {\n        assert state.docFreq != 0;\n        assert fieldInfo.getIndexOptions() == IndexOptions.DOCS_ONLY || state.totalTermFreq >= state.docFreq: \"postingsWriter=\" + postingsWriter;\n        sumDocFreq += state.docFreq;\n        sumTotalTermFreq += state.totalTermFreq;\n        blockBuilder.add(Util.toIntsRef(text, scratchIntsRef), noOutputs.getNoOutput());\n\n        PendingTerm term = new PendingTerm(BytesRef.deepCopyOf(text), state);\n        pending.add(term);\n        numTerms++;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d637064d608752565d4f9f41b2497dfdfdde50e"]},"commit2Childs":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["4d637064d608752565d4f9f41b2497dfdfdde50e","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}