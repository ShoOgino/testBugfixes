{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","sourceNew":"  public void testLowerCaseTokenizer() throws IOException {\n    StringReader reader = new StringReader(\"Tokenizer \\ud801\\udc1ctest\");\n    LowerCaseTokenizer tokenizer = new LowerCaseTokenizer(TEST_VERSION_CURRENT,\n        reader);\n    assertTokenStreamContents(tokenizer, new String[] { \"tokenizer\",\n        \"\\ud801\\udc44test\" });\n  }\n\n","sourceOld":"  public void testLowerCaseTokenizer() throws IOException {\n    StringReader reader = new StringReader(\"Tokenizer \\ud801\\udc1ctest\");\n    LowerCaseTokenizer tokenizer = new LowerCaseTokenizer(TEST_VERSION_CURRENT,\n        reader);\n    assertTokenStreamContents(tokenizer, new String[] { \"tokenizer\",\n        \"\\ud801\\udc44test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","sourceNew":"  public void testLowerCaseTokenizer() throws IOException {\n    StringReader reader = new StringReader(\"Tokenizer \\ud801\\udc1ctest\");\n    LowerCaseTokenizer tokenizer = new LowerCaseTokenizer(TEST_VERSION_CURRENT);\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer, new String[] { \"tokenizer\",\n        \"\\ud801\\udc44test\" });\n  }\n\n","sourceOld":"  public void testLowerCaseTokenizer() throws IOException {\n    StringReader reader = new StringReader(\"Tokenizer \\ud801\\udc1ctest\");\n    LowerCaseTokenizer tokenizer = new LowerCaseTokenizer(TEST_VERSION_CURRENT,\n        reader);\n    assertTokenStreamContents(tokenizer, new String[] { \"tokenizer\",\n        \"\\ud801\\udc44test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","sourceNew":"  public void testLowerCaseTokenizer() throws IOException {\n    StringReader reader = new StringReader(\"Tokenizer \\ud801\\udc1ctest\");\n    LowerCaseTokenizer tokenizer = new LowerCaseTokenizer();\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer, new String[] { \"tokenizer\",\n        \"\\ud801\\udc44test\" });\n  }\n\n","sourceOld":"  public void testLowerCaseTokenizer() throws IOException {\n    StringReader reader = new StringReader(\"Tokenizer \\ud801\\udc1ctest\");\n    LowerCaseTokenizer tokenizer = new LowerCaseTokenizer(TEST_VERSION_CURRENT);\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer, new String[] { \"tokenizer\",\n        \"\\ud801\\udc44test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","sourceNew":"  public void testLowerCaseTokenizer() throws IOException {\n    StringReader reader = new StringReader(\"Tokenizer \\ud801\\udc1ctest\");\n    LowerCaseTokenizer tokenizer = new LowerCaseTokenizer(TEST_VERSION_CURRENT);\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer, new String[] { \"tokenizer\",\n        \"\\ud801\\udc44test\" });\n  }\n\n","sourceOld":"  public void testLowerCaseTokenizer() throws IOException {\n    StringReader reader = new StringReader(\"Tokenizer \\ud801\\udc1ctest\");\n    LowerCaseTokenizer tokenizer = new LowerCaseTokenizer();\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer, new String[] { \"tokenizer\",\n        \"\\ud801\\udc44test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","sourceNew":"  public void testLowerCaseTokenizer() throws IOException {\n    StringReader reader = new StringReader(\"Tokenizer \\ud801\\udc1ctest\");\n    LowerCaseTokenizer tokenizer = new LowerCaseTokenizer();\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer, new String[] { \"tokenizer\",\n        \"\\ud801\\udc44test\" });\n  }\n\n","sourceOld":"  public void testLowerCaseTokenizer() throws IOException {\n    StringReader reader = new StringReader(\"Tokenizer \\ud801\\udc1ctest\");\n    LowerCaseTokenizer tokenizer = new LowerCaseTokenizer(TEST_VERSION_CURRENT);\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer, new String[] { \"tokenizer\",\n        \"\\ud801\\udc44test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3780f02dd8e07e1feb00e1a4f522c4dedb85d9c0","date":1537441025,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseTokenizer().mjava","sourceNew":null,"sourceOld":"  public void testLowerCaseTokenizer() throws IOException {\n    StringReader reader = new StringReader(\"Tokenizer \\ud801\\udc1ctest\");\n    LowerCaseTokenizer tokenizer = new LowerCaseTokenizer();\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer, new String[] { \"tokenizer\",\n        \"\\ud801\\udc44test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3780f02dd8e07e1feb00e1a4f522c4dedb85d9c0":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"ff4227bb146f97aabae888091c19e48c88dbb0db":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3780f02dd8e07e1feb00e1a4f522c4dedb85d9c0"]},"commit2Childs":{"3780f02dd8e07e1feb00e1a4f522c4dedb85d9c0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["3780f02dd8e07e1feb00e1a4f522c4dedb85d9c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}