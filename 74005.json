{"path":"lucene/core/src/test/org/apache/lucene/search/TestTermVectors#testFullMergeAddIndexesReader().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermVectors#testFullMergeAddIndexesReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestTermVectors#testFullMergeAddIndexesReader().mjava","sourceNew":"  public void testFullMergeAddIndexesReader() throws Exception {\n    Directory[] input = new Directory[] { newDirectory(), newDirectory() };\n    Directory target = newDirectory();\n    \n    for (Directory dir : input) {\n      createDir(dir);\n    }\n    \n    IndexWriter writer = createWriter(target);\n    for (Directory dir : input) {\n      IndexReader r = IndexReader.open(dir);\n      writer.addIndexes(r);\n      r.close();\n    }\n    writer.forceMerge(1);\n    writer.close();\n    \n    verifyIndex(target);\n    IOUtils.close(target, input[0], input[1]);\n  }\n\n","sourceOld":"  public void testFullMergeAddIndexesReader() throws Exception {\n    Directory[] input = new Directory[] { newDirectory(), newDirectory() };\n    Directory target = newDirectory();\n    \n    for (Directory dir : input) {\n      createDir(dir);\n    }\n    \n    IndexWriter writer = createWriter(target);\n    for (Directory dir : input) {\n      IndexReader r = IndexReader.open(dir);\n      writer.addIndexes(r);\n      r.close();\n    }\n    writer.forceMerge(1);\n    writer.close();\n    \n    verifyIndex(target);\n    IOUtils.close(target, input[0], input[1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermVectors#testFullMergeAddIndexesReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermVectors#testFullMergeAddIndexesReader().mjava","sourceNew":"  public void testFullMergeAddIndexesReader() throws Exception {\n    Directory[] input = new Directory[] { newDirectory(), newDirectory() };\n    Directory target = newDirectory();\n    \n    for (Directory dir : input) {\n      createDir(dir);\n    }\n    \n    IndexWriter writer = createWriter(target);\n    for (Directory dir : input) {\n      IndexReader r = DirectoryReader.open(dir);\n      writer.addIndexes(r);\n      r.close();\n    }\n    writer.forceMerge(1);\n    writer.close();\n    \n    verifyIndex(target);\n    IOUtils.close(target, input[0], input[1]);\n  }\n\n","sourceOld":"  public void testFullMergeAddIndexesReader() throws Exception {\n    Directory[] input = new Directory[] { newDirectory(), newDirectory() };\n    Directory target = newDirectory();\n    \n    for (Directory dir : input) {\n      createDir(dir);\n    }\n    \n    IndexWriter writer = createWriter(target);\n    for (Directory dir : input) {\n      IndexReader r = IndexReader.open(dir);\n      writer.addIndexes(r);\n      r.close();\n    }\n    writer.forceMerge(1);\n    writer.close();\n    \n    verifyIndex(target);\n    IOUtils.close(target, input[0], input[1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermVectors#testFullMergeAddIndexesReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermVectors#testFullMergeAddIndexesReader().mjava","sourceNew":"  public void testFullMergeAddIndexesReader() throws Exception {\n    Directory[] input = new Directory[] { newDirectory(), newDirectory() };\n    Directory target = newDirectory();\n    \n    for (Directory dir : input) {\n      createDir(dir);\n    }\n    \n    IndexWriter writer = createWriter(target);\n    for (Directory dir : input) {\n      IndexReader r = DirectoryReader.open(dir);\n      writer.addIndexes(r);\n      r.close();\n    }\n    writer.forceMerge(1);\n    writer.shutdown();\n    \n    verifyIndex(target);\n    IOUtils.close(target, input[0], input[1]);\n  }\n\n","sourceOld":"  public void testFullMergeAddIndexesReader() throws Exception {\n    Directory[] input = new Directory[] { newDirectory(), newDirectory() };\n    Directory target = newDirectory();\n    \n    for (Directory dir : input) {\n      createDir(dir);\n    }\n    \n    IndexWriter writer = createWriter(target);\n    for (Directory dir : input) {\n      IndexReader r = DirectoryReader.open(dir);\n      writer.addIndexes(r);\n      r.close();\n    }\n    writer.forceMerge(1);\n    writer.close();\n    \n    verifyIndex(target);\n    IOUtils.close(target, input[0], input[1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermVectors#testFullMergeAddIndexesReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermVectors#testFullMergeAddIndexesReader().mjava","sourceNew":"  public void testFullMergeAddIndexesReader() throws Exception {\n    Directory[] input = new Directory[] { newDirectory(), newDirectory() };\n    Directory target = newDirectory();\n    \n    for (Directory dir : input) {\n      createDir(dir);\n    }\n    \n    IndexWriter writer = createWriter(target);\n    for (Directory dir : input) {\n      IndexReader r = DirectoryReader.open(dir);\n      writer.addIndexes(r);\n      r.close();\n    }\n    writer.forceMerge(1);\n    writer.close();\n    \n    verifyIndex(target);\n    IOUtils.close(target, input[0], input[1]);\n  }\n\n","sourceOld":"  public void testFullMergeAddIndexesReader() throws Exception {\n    Directory[] input = new Directory[] { newDirectory(), newDirectory() };\n    Directory target = newDirectory();\n    \n    for (Directory dir : input) {\n      createDir(dir);\n    }\n    \n    IndexWriter writer = createWriter(target);\n    for (Directory dir : input) {\n      IndexReader r = DirectoryReader.open(dir);\n      writer.addIndexes(r);\n      r.close();\n    }\n    writer.forceMerge(1);\n    writer.shutdown();\n    \n    verifyIndex(target);\n    IOUtils.close(target, input[0], input[1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa","date":1420599177,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectors#testFullMergeAddIndexesReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermVectors#testFullMergeAddIndexesReader().mjava","sourceNew":"  public void testFullMergeAddIndexesReader() throws Exception {\n    Directory[] input = new Directory[] { newDirectory(), newDirectory() };\n    Directory target = newDirectory();\n    \n    for (Directory dir : input) {\n      createDir(dir);\n    }\n    \n    IndexWriter writer = createWriter(target);\n    for (Directory dir : input) {\n      DirectoryReader r = DirectoryReader.open(dir);\n      TestUtil.addIndexesSlowly(writer, r);\n      r.close();\n    }\n    writer.forceMerge(1);\n    writer.close();\n    \n    verifyIndex(target);\n    IOUtils.close(target, input[0], input[1]);\n  }\n\n","sourceOld":"  public void testFullMergeAddIndexesReader() throws Exception {\n    Directory[] input = new Directory[] { newDirectory(), newDirectory() };\n    Directory target = newDirectory();\n    \n    for (Directory dir : input) {\n      createDir(dir);\n    }\n    \n    IndexWriter writer = createWriter(target);\n    for (Directory dir : input) {\n      IndexReader r = DirectoryReader.open(dir);\n      writer.addIndexes(r);\n      r.close();\n    }\n    writer.forceMerge(1);\n    writer.close();\n    \n    verifyIndex(target);\n    IOUtils.close(target, input[0], input[1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"]},"commit2Childs":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}