{"path":"solr/contrib/analytics/src/java/org/apache/solr/analytics/AnalyticsRequestParser#constructOthers(List[String],String).mjava","commits":[{"id":"c495edcca4d0bc51bf62d9be3527c87bf9b44ded","date":1498673617,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/AnalyticsRequestParser#constructOthers(List[String],String).mjava","pathOld":"/dev/null","sourceNew":"  private static EnumSet<FacetRangeOther> constructOthers(List<String> othersRequest, String facetName) throws SolrException {\n    EnumSet<FacetRangeOther> others = EnumSet.noneOf(FacetRangeOther.class);\n    for (String rawOther : othersRequest) {\n      if (!others.add(FacetRangeOther.get(rawOther))) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Duplicate include value '\" + rawOther + \"' found in range facet '\" + facetName + \"'\");\n      }\n    }\n    if (others.contains(FacetRangeOther.NONE)) {\n      if (others.size() > 1) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Include value 'NONE' is used with other includes in a range facet '\" + facetName + \"'. \"\n            + \"If 'NONE' is used, it must be the only include.\");\n      }\n      return EnumSet.noneOf(FacetRangeOther.class);\n    }\n    if (others.contains(FacetRangeOther.ALL)) {\n      if (others.size() > 1) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Include value 'ALL' is used with other includes in a range facet '\" + facetName + \"'. \"\n            + \"If 'ALL' is used, it must be the only include.\");\n      }\n      return EnumSet.of(FacetRangeOther.BEFORE, FacetRangeOther.BETWEEN, FacetRangeOther.AFTER);\n    }\n    return others;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/AnalyticsRequestParser#constructOthers(List[String],String).mjava","pathOld":"/dev/null","sourceNew":"  private static EnumSet<FacetRangeOther> constructOthers(List<String> othersRequest, String facetName) throws SolrException {\n    EnumSet<FacetRangeOther> others = EnumSet.noneOf(FacetRangeOther.class);\n    for (String rawOther : othersRequest) {\n      if (!others.add(FacetRangeOther.get(rawOther))) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Duplicate include value '\" + rawOther + \"' found in range facet '\" + facetName + \"'\");\n      }\n    }\n    if (others.contains(FacetRangeOther.NONE)) {\n      if (others.size() > 1) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Include value 'NONE' is used with other includes in a range facet '\" + facetName + \"'. \"\n            + \"If 'NONE' is used, it must be the only include.\");\n      }\n      return EnumSet.noneOf(FacetRangeOther.class);\n    }\n    if (others.contains(FacetRangeOther.ALL)) {\n      if (others.size() > 1) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Include value 'ALL' is used with other includes in a range facet '\" + facetName + \"'. \"\n            + \"If 'ALL' is used, it must be the only include.\");\n      }\n      return EnumSet.of(FacetRangeOther.BEFORE, FacetRangeOther.BETWEEN, FacetRangeOther.AFTER);\n    }\n    return others;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/AnalyticsRequestParser#constructOthers(List[String],String).mjava","pathOld":"/dev/null","sourceNew":"  private static EnumSet<FacetRangeOther> constructOthers(List<String> othersRequest, String facetName) throws SolrException {\n    EnumSet<FacetRangeOther> others = EnumSet.noneOf(FacetRangeOther.class);\n    for (String rawOther : othersRequest) {\n      if (!others.add(FacetRangeOther.get(rawOther))) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Duplicate include value '\" + rawOther + \"' found in range facet '\" + facetName + \"'\");\n      }\n    }\n    if (others.contains(FacetRangeOther.NONE)) {\n      if (others.size() > 1) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Include value 'NONE' is used with other includes in a range facet '\" + facetName + \"'. \"\n            + \"If 'NONE' is used, it must be the only include.\");\n      }\n      return EnumSet.noneOf(FacetRangeOther.class);\n    }\n    if (others.contains(FacetRangeOther.ALL)) {\n      if (others.size() > 1) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Include value 'ALL' is used with other includes in a range facet '\" + facetName + \"'. \"\n            + \"If 'ALL' is used, it must be the only include.\");\n      }\n      return EnumSet.of(FacetRangeOther.BEFORE, FacetRangeOther.BETWEEN, FacetRangeOther.AFTER);\n    }\n    return others;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","28288370235ed02234a64753cdbf0c6ec096304a"],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c495edcca4d0bc51bf62d9be3527c87bf9b44ded"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30c8e5574b55d57947e989443dfde611646530ee","c495edcca4d0bc51bf62d9be3527c87bf9b44ded","28288370235ed02234a64753cdbf0c6ec096304a"],"30c8e5574b55d57947e989443dfde611646530ee":[],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}