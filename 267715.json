{"path":"lucene/src/java/org/apache/lucene/search/TermRangeFilter#TermRangeFilter(String,String,String,boolean,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermRangeFilter#TermRangeFilter(String,String,String,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/TermRangeFilter#TermRangeFilter(String,String,String,boolean,boolean).mjava","sourceNew":"  /**\n   * @param fieldName The field this range applies to\n   * @param lowerTerm The lower bound on this range\n   * @param upperTerm The upper bound on this range\n   * @param includeLower Does this range include the lower bound?\n   * @param includeUpper Does this range include the upper bound?\n   * @throws IllegalArgumentException if both terms are null or if\n   *  lowerTerm is null and includeLower is true (similar for upperTerm\n   *  and includeUpper)\n   */\n  public TermRangeFilter(String fieldName, String lowerTerm, String upperTerm,\n                     boolean includeLower, boolean includeUpper) {\n      super(new TermRangeQuery(fieldName, lowerTerm, upperTerm, includeLower, includeUpper));\n  }\n\n","sourceOld":"  /**\n   * @param fieldName The field this range applies to\n   * @param lowerTerm The lower bound on this range\n   * @param upperTerm The upper bound on this range\n   * @param includeLower Does this range include the lower bound?\n   * @param includeUpper Does this range include the upper bound?\n   * @throws IllegalArgumentException if both terms are null or if\n   *  lowerTerm is null and includeLower is true (similar for upperTerm\n   *  and includeUpper)\n   */\n  public TermRangeFilter(String fieldName, String lowerTerm, String upperTerm,\n                     boolean includeLower, boolean includeUpper) {\n      super(new TermRangeQuery(fieldName, lowerTerm, upperTerm, includeLower, includeUpper));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e492fb0f2bb0b4b47208286f9331ff55963c656","date":1298870150,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermRangeFilter#TermRangeFilter(String,BytesRef,BytesRef,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermRangeFilter#TermRangeFilter(String,String,String,boolean,boolean).mjava","sourceNew":"  /**\n   * @param fieldName The field this range applies to\n   * @param lowerTerm The lower bound on this range\n   * @param upperTerm The upper bound on this range\n   * @param includeLower Does this range include the lower bound?\n   * @param includeUpper Does this range include the upper bound?\n   * @throws IllegalArgumentException if both terms are null or if\n   *  lowerTerm is null and includeLower is true (similar for upperTerm\n   *  and includeUpper)\n   */\n  public TermRangeFilter(String fieldName, BytesRef lowerTerm, BytesRef upperTerm,\n                     boolean includeLower, boolean includeUpper) {\n      super(new TermRangeQuery(fieldName, lowerTerm, upperTerm, includeLower, includeUpper));\n  }\n\n","sourceOld":"  /**\n   * @param fieldName The field this range applies to\n   * @param lowerTerm The lower bound on this range\n   * @param upperTerm The upper bound on this range\n   * @param includeLower Does this range include the lower bound?\n   * @param includeUpper Does this range include the upper bound?\n   * @throws IllegalArgumentException if both terms are null or if\n   *  lowerTerm is null and includeLower is true (similar for upperTerm\n   *  and includeUpper)\n   */\n  public TermRangeFilter(String fieldName, String lowerTerm, String upperTerm,\n                     boolean includeLower, boolean includeUpper) {\n      super(new TermRangeQuery(fieldName, lowerTerm, upperTerm, includeLower, includeUpper));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/TermRangeFilter#TermRangeFilter(String,String,String,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * @param fieldName The field this range applies to\n   * @param lowerTerm The lower bound on this range\n   * @param upperTerm The upper bound on this range\n   * @param includeLower Does this range include the lower bound?\n   * @param includeUpper Does this range include the upper bound?\n   * @throws IllegalArgumentException if both terms are null or if\n   *  lowerTerm is null and includeLower is true (similar for upperTerm\n   *  and includeUpper)\n   */\n  public TermRangeFilter(String fieldName, String lowerTerm, String upperTerm,\n                     boolean includeLower, boolean includeUpper) {\n      super(new TermRangeQuery(fieldName, lowerTerm, upperTerm, includeLower, includeUpper));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/TermRangeFilter#TermRangeFilter(String,String,String,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * @param fieldName The field this range applies to\n   * @param lowerTerm The lower bound on this range\n   * @param upperTerm The upper bound on this range\n   * @param includeLower Does this range include the lower bound?\n   * @param includeUpper Does this range include the upper bound?\n   * @throws IllegalArgumentException if both terms are null or if\n   *  lowerTerm is null and includeLower is true (similar for upperTerm\n   *  and includeUpper)\n   */\n  public TermRangeFilter(String fieldName, String lowerTerm, String upperTerm,\n                     boolean includeLower, boolean includeUpper) {\n      super(new TermRangeQuery(fieldName, lowerTerm, upperTerm, includeLower, includeUpper));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["9454a6510e2db155fb01faa5c049b06ece95fab9","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["9454a6510e2db155fb01faa5c049b06ece95fab9","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e492fb0f2bb0b4b47208286f9331ff55963c656"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}