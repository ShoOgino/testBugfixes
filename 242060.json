{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getSet(Map[String,String],String).mjava","commits":[{"id":"dcae30df9fe9300569835aef42ec65802c7c0afb","date":1364859933,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getSet(Map[String,String],String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns whitespace- and/or comma-separated set of values, or null if none are found */\n  public Set<String> getSet(Map<String,String> args, String name) {\n    String s = args.remove(name);\n    if (s == null) {\n     return null;\n    } else {\n      Set<String> set = null;\n      Matcher matcher = ITEM_PATTERN.matcher(s);\n      if (matcher.find()) {\n        set = new HashSet<String>();\n        set.add(matcher.group(0));\n        while (matcher.find()) {\n          set.add(matcher.group(0));\n        }\n      }\n      return set;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getSet(Map[String,String],String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getSet(Map[String,String],String).mjava","sourceNew":"  /** Returns whitespace- and/or comma-separated set of values, or null if none are found */\n  public Set<String> getSet(Map<String,String> args, String name) {\n    String s = args.remove(name);\n    if (s == null) {\n     return null;\n    } else {\n      Set<String> set = null;\n      Matcher matcher = ITEM_PATTERN.matcher(s);\n      if (matcher.find()) {\n        set = new HashSet<>();\n        set.add(matcher.group(0));\n        while (matcher.find()) {\n          set.add(matcher.group(0));\n        }\n      }\n      return set;\n    }\n  }\n\n","sourceOld":"  /** Returns whitespace- and/or comma-separated set of values, or null if none are found */\n  public Set<String> getSet(Map<String,String> args, String name) {\n    String s = args.remove(name);\n    if (s == null) {\n     return null;\n    } else {\n      Set<String> set = null;\n      Matcher matcher = ITEM_PATTERN.matcher(s);\n      if (matcher.find()) {\n        set = new HashSet<String>();\n        set.add(matcher.group(0));\n        while (matcher.find()) {\n          set.add(matcher.group(0));\n        }\n      }\n      return set;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":5,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/AbstractAnalysisFactory#getSet(Map[String,String],String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getSet(Map[String,String],String).mjava","sourceNew":"  /** Returns whitespace- and/or comma-separated set of values, or null if none are found */\n  public Set<String> getSet(Map<String,String> args, String name) {\n    String s = args.remove(name);\n    if (s == null) {\n     return null;\n    } else {\n      Set<String> set = null;\n      Matcher matcher = ITEM_PATTERN.matcher(s);\n      if (matcher.find()) {\n        set = new HashSet<>();\n        set.add(matcher.group(0));\n        while (matcher.find()) {\n          set.add(matcher.group(0));\n        }\n      }\n      return set;\n    }\n  }\n\n","sourceOld":"  /** Returns whitespace- and/or comma-separated set of values, or null if none are found */\n  public Set<String> getSet(Map<String,String> args, String name) {\n    String s = args.remove(name);\n    if (s == null) {\n     return null;\n    } else {\n      Set<String> set = null;\n      Matcher matcher = ITEM_PATTERN.matcher(s);\n      if (matcher.find()) {\n        set = new HashSet<>();\n        set.add(matcher.group(0));\n        while (matcher.find()) {\n          set.add(matcher.group(0));\n        }\n      }\n      return set;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"dcae30df9fe9300569835aef42ec65802c7c0afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"dcae30df9fe9300569835aef42ec65802c7c0afb":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}