{"path":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter#toString().mjava","commits":[{"id":"4107dd39b127d892359c5c1d67d0f14d92f1a9bf","date":1351689723,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder builder = new StringBuilder();\n    BytesRef spare = new BytesRef(termsBytes);\n    for (int i = 0; i < termsAndFields.length; i++) {\n      TermsAndField current = termsAndFields[i];\n      for (int j = current.start; j < current.end; j++) {\n        spare.offset = offsets[j];\n        spare.length = offsets[j+1] - offsets[j];\n        builder.append(current.field).append(':');\n        builder.append(spare.utf8ToString());\n        builder.append(' ');\n      }\n\n    }\n    return builder.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4424b1e998f5336cc9ee92ff484e659c2db60afb","date":1354542013,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter#toString().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder builder = new StringBuilder();\n    BytesRef spare = new BytesRef(termsBytes);\n    boolean first = true;\n    for (int i = 0; i < termsAndFields.length; i++) {\n      TermsAndField current = termsAndFields[i];\n      for (int j = current.start; j < current.end; j++) {\n        spare.offset = offsets[j];\n        spare.length = offsets[j+1] - offsets[j];\n        if (!first) {\n          builder.append(' ');\n        }\n        first = false;\n        builder.append(current.field).append(':');\n        builder.append(spare.utf8ToString());\n      }\n    }\n\n    return builder.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder builder = new StringBuilder();\n    BytesRef spare = new BytesRef(termsBytes);\n    for (int i = 0; i < termsAndFields.length; i++) {\n      TermsAndField current = termsAndFields[i];\n      for (int j = current.start; j < current.end; j++) {\n        spare.offset = offsets[j];\n        spare.length = offsets[j+1] - offsets[j];\n        builder.append(current.field).append(':');\n        builder.append(spare.utf8ToString());\n        builder.append(' ');\n      }\n\n    }\n    return builder.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter#toString().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder builder = new StringBuilder();\n    BytesRef spare = new BytesRef(termsBytes);\n    boolean first = true;\n    for (int i = 0; i < termsAndFields.length; i++) {\n      TermsAndField current = termsAndFields[i];\n      for (int j = current.start; j < current.end; j++) {\n        spare.offset = offsets[j];\n        spare.length = offsets[j+1] - offsets[j];\n        if (!first) {\n          builder.append(' ');\n        }\n        first = false;\n        builder.append(current.field).append(':');\n        builder.append(spare.utf8ToString());\n      }\n    }\n\n    return builder.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder builder = new StringBuilder();\n    BytesRef spare = new BytesRef(termsBytes);\n    for (int i = 0; i < termsAndFields.length; i++) {\n      TermsAndField current = termsAndFields[i];\n      for (int j = current.start; j < current.end; j++) {\n        spare.offset = offsets[j];\n        spare.length = offsets[j+1] - offsets[j];\n        builder.append(current.field).append(':');\n        builder.append(spare.utf8ToString());\n        builder.append(' ');\n      }\n\n    }\n    return builder.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"933780884e79144ac5dbe8785ec03c5f4ed3f218","date":1423843143,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter#toString(String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter#toString().mjava","sourceNew":"  @Override\n  public String toString(String defaultField) {\n    StringBuilder builder = new StringBuilder();\n    BytesRef spare = new BytesRef(termsBytes);\n    boolean first = true;\n    for (int i = 0; i < termsAndFields.length; i++) {\n      TermsAndField current = termsAndFields[i];\n      for (int j = current.start; j < current.end; j++) {\n        spare.offset = offsets[j];\n        spare.length = offsets[j+1] - offsets[j];\n        if (!first) {\n          builder.append(' ');\n        }\n        first = false;\n        builder.append(current.field).append(':');\n        builder.append(spare.utf8ToString());\n      }\n    }\n\n    return builder.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder builder = new StringBuilder();\n    BytesRef spare = new BytesRef(termsBytes);\n    boolean first = true;\n    for (int i = 0; i < termsAndFields.length; i++) {\n      TermsAndField current = termsAndFields[i];\n      for (int j = current.start; j < current.end; j++) {\n        spare.offset = offsets[j];\n        spare.length = offsets[j+1] - offsets[j];\n        if (!first) {\n          builder.append(' ');\n        }\n        first = false;\n        builder.append(current.field).append(':');\n        builder.append(spare.utf8ToString());\n      }\n    }\n\n    return builder.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4107dd39b127d892359c5c1d67d0f14d92f1a9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["4107dd39b127d892359c5c1d67d0f14d92f1a9bf","4424b1e998f5336cc9ee92ff484e659c2db60afb"],"4424b1e998f5336cc9ee92ff484e659c2db60afb":["4107dd39b127d892359c5c1d67d0f14d92f1a9bf"],"933780884e79144ac5dbe8785ec03c5f4ed3f218":["4424b1e998f5336cc9ee92ff484e659c2db60afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["933780884e79144ac5dbe8785ec03c5f4ed3f218"]},"commit2Childs":{"4107dd39b127d892359c5c1d67d0f14d92f1a9bf":["407687e67faf6e1f02a211ca078d8e3eed631027","4424b1e998f5336cc9ee92ff484e659c2db60afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4107dd39b127d892359c5c1d67d0f14d92f1a9bf"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"4424b1e998f5336cc9ee92ff484e659c2db60afb":["407687e67faf6e1f02a211ca078d8e3eed631027","933780884e79144ac5dbe8785ec03c5f4ed3f218"],"933780884e79144ac5dbe8785ec03c5f4ed3f218":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}