{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#shutdown().mjava","commits":[{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#shutdown().mjava","pathOld":"/dev/null","sourceNew":"  public synchronized boolean shutdown() {\n    lock.lock();\n    try {\n      System.out.println(\"PARENT: now shutdown node=\" + id + \" isOpen=\" + isOpen);\n      if (isOpen) {\n        // Ask the child process to shutdown gracefully:\n        isOpen = false;\n        System.out.println(\"PARENT: send CMD_CLOSE to node=\" + id);\n        try (Connection c = new Connection(tcpPort)) {\n          c.out.writeByte(SimplePrimaryNode.CMD_CLOSE);\n          c.flush();\n          if (c.in.readByte() != 1) {\n            throw new RuntimeException(\"shutdown failed\");\n          }\n        } catch (Throwable t) {\n          System.out.println(\"top: shutdown failed; skipping\");\n          t.printStackTrace(System.out);\n          return false;\n        }\n        try {\n          p.waitFor();\n          pumper.join();\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n\n      return true;\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb660d79ac69f7c87415d142088d74821daeba85","date":1454535946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#shutdown().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#shutdown().mjava","sourceNew":"  public synchronized boolean shutdown() {\n    lock.lock();\n    try {\n      System.out.println(\"PARENT: now shutdown node=\" + id + \" isOpen=\" + isOpen);\n      if (isOpen) {\n        // Ask the child process to shutdown gracefully:\n        isOpen = false;\n        System.out.println(\"PARENT: send CMD_CLOSE to node=\" + id);\n        try (Connection c = new Connection(tcpPort)) {\n          c.out.writeByte(SimplePrimaryNode.CMD_CLOSE);\n          c.flush();\n          if (c.in.readByte() != 1) {\n            throw new RuntimeException(\"shutdown failed\");\n          }\n        } catch (Throwable t) {\n          System.out.println(\"top: shutdown failed; ignoring\");\n        }\n        try {\n          p.waitFor();\n          pumper.join();\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n\n      return true;\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  public synchronized boolean shutdown() {\n    lock.lock();\n    try {\n      System.out.println(\"PARENT: now shutdown node=\" + id + \" isOpen=\" + isOpen);\n      if (isOpen) {\n        // Ask the child process to shutdown gracefully:\n        isOpen = false;\n        System.out.println(\"PARENT: send CMD_CLOSE to node=\" + id);\n        try (Connection c = new Connection(tcpPort)) {\n          c.out.writeByte(SimplePrimaryNode.CMD_CLOSE);\n          c.flush();\n          if (c.in.readByte() != 1) {\n            throw new RuntimeException(\"shutdown failed\");\n          }\n        } catch (Throwable t) {\n          System.out.println(\"top: shutdown failed; skipping\");\n          t.printStackTrace(System.out);\n          return false;\n        }\n        try {\n          p.waitFor();\n          pumper.join();\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n\n      return true;\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec","date":1454767455,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#shutdown().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#shutdown().mjava","sourceNew":"  public synchronized boolean shutdown() {\n    lock.lock();\n    try {\n      //System.out.println(\"PARENT: now shutdown node=\" + id + \" isOpen=\" + isOpen);\n      if (isOpen) {\n        // Ask the child process to shutdown gracefully:\n        isOpen = false;\n        //System.out.println(\"PARENT: send CMD_CLOSE to node=\" + id);\n        try (Connection c = new Connection(tcpPort)) {\n          c.out.writeByte(SimplePrimaryNode.CMD_CLOSE);\n          c.flush();\n          if (c.in.readByte() != 1) {\n            throw new RuntimeException(\"shutdown failed\");\n          }\n        } catch (Throwable t) {\n          System.out.println(\"top: shutdown failed; ignoring\");\n        }\n        try {\n          p.waitFor();\n          pumper.join();\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n\n      return true;\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  public synchronized boolean shutdown() {\n    lock.lock();\n    try {\n      System.out.println(\"PARENT: now shutdown node=\" + id + \" isOpen=\" + isOpen);\n      if (isOpen) {\n        // Ask the child process to shutdown gracefully:\n        isOpen = false;\n        System.out.println(\"PARENT: send CMD_CLOSE to node=\" + id);\n        try (Connection c = new Connection(tcpPort)) {\n          c.out.writeByte(SimplePrimaryNode.CMD_CLOSE);\n          c.flush();\n          if (c.in.readByte() != 1) {\n            throw new RuntimeException(\"shutdown failed\");\n          }\n        } catch (Throwable t) {\n          System.out.println(\"top: shutdown failed; ignoring\");\n        }\n        try {\n          p.waitFor();\n          pumper.join();\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n\n      return true;\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13ea66b549e25413e4e3057bf3492ab828899110","date":1454958424,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#shutdown().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#shutdown().mjava","sourceNew":"  public synchronized boolean shutdown() {\n    lock.lock();\n    try {\n      //System.out.println(\"PARENT: now shutdown node=\" + id + \" isOpen=\" + isOpen);\n      if (isOpen) {\n        // Ask the child process to shutdown gracefully:\n        isOpen = false;\n        //System.out.println(\"PARENT: send CMD_CLOSE to node=\" + id);\n        try (Connection c = new Connection(tcpPort)) {\n          c.out.writeByte(SimplePrimaryNode.CMD_CLOSE);\n          c.flush();\n          if (c.in.readByte() != 1) {\n            throw new RuntimeException(\"shutdown failed\");\n          }\n        } catch (Throwable t) {\n          System.out.println(\"top: shutdown failed; ignoring\");\n          t.printStackTrace(System.out);\n        }\n        try {\n          p.waitFor();\n          pumper.join();\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n\n      return true;\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  public synchronized boolean shutdown() {\n    lock.lock();\n    try {\n      //System.out.println(\"PARENT: now shutdown node=\" + id + \" isOpen=\" + isOpen);\n      if (isOpen) {\n        // Ask the child process to shutdown gracefully:\n        isOpen = false;\n        //System.out.println(\"PARENT: send CMD_CLOSE to node=\" + id);\n        try (Connection c = new Connection(tcpPort)) {\n          c.out.writeByte(SimplePrimaryNode.CMD_CLOSE);\n          c.flush();\n          if (c.in.readByte() != 1) {\n            throw new RuntimeException(\"shutdown failed\");\n          }\n        } catch (Throwable t) {\n          System.out.println(\"top: shutdown failed; ignoring\");\n        }\n        try {\n          p.waitFor();\n          pumper.join();\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n\n      return true;\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b0febf62c2d9baeee7db38998d9197700ccbab9","date":1454958476,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#shutdown().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#shutdown().mjava","sourceNew":"  public synchronized boolean shutdown() {\n    lock.lock();\n    try {\n      //System.out.println(\"PARENT: now shutdown node=\" + id + \" isOpen=\" + isOpen);\n      if (isOpen) {\n        // Ask the child process to shutdown gracefully:\n        isOpen = false;\n        //System.out.println(\"PARENT: send CMD_CLOSE to node=\" + id);\n        try (Connection c = new Connection(tcpPort)) {\n          c.out.writeByte(SimplePrimaryNode.CMD_CLOSE);\n          c.flush();\n          if (c.in.readByte() != 1) {\n            throw new RuntimeException(\"shutdown failed\");\n          }\n        } catch (Throwable t) {\n          System.out.println(\"top: shutdown failed; ignoring\");\n          t.printStackTrace(System.out);\n        }\n        try {\n          p.waitFor();\n          pumper.join();\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n\n      return true;\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  public synchronized boolean shutdown() {\n    lock.lock();\n    try {\n      //System.out.println(\"PARENT: now shutdown node=\" + id + \" isOpen=\" + isOpen);\n      if (isOpen) {\n        // Ask the child process to shutdown gracefully:\n        isOpen = false;\n        //System.out.println(\"PARENT: send CMD_CLOSE to node=\" + id);\n        try (Connection c = new Connection(tcpPort)) {\n          c.out.writeByte(SimplePrimaryNode.CMD_CLOSE);\n          c.flush();\n          if (c.in.readByte() != 1) {\n            throw new RuntimeException(\"shutdown failed\");\n          }\n        } catch (Throwable t) {\n          System.out.println(\"top: shutdown failed; ignoring\");\n        }\n        try {\n          p.waitFor();\n          pumper.join();\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n\n      return true;\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#shutdown().mjava","pathOld":"/dev/null","sourceNew":"  public synchronized boolean shutdown() {\n    lock.lock();\n    try {\n      //System.out.println(\"PARENT: now shutdown node=\" + id + \" isOpen=\" + isOpen);\n      if (isOpen) {\n        // Ask the child process to shutdown gracefully:\n        isOpen = false;\n        //System.out.println(\"PARENT: send CMD_CLOSE to node=\" + id);\n        try (Connection c = new Connection(tcpPort)) {\n          c.out.writeByte(SimplePrimaryNode.CMD_CLOSE);\n          c.flush();\n          if (c.in.readByte() != 1) {\n            throw new RuntimeException(\"shutdown failed\");\n          }\n        } catch (Throwable t) {\n          System.out.println(\"top: shutdown failed; ignoring\");\n          t.printStackTrace(System.out);\n        }\n        try {\n          p.waitFor();\n          pumper.join();\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n\n      return true;\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1b0febf62c2d9baeee7db38998d9197700ccbab9":["38cf1409ac117286eb0df7d6ef31d9cfdad8cfec","13ea66b549e25413e4e3057bf3492ab828899110"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","13ea66b549e25413e4e3057bf3492ab828899110"],"cb660d79ac69f7c87415d142088d74821daeba85":["0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"13ea66b549e25413e4e3057bf3492ab828899110":["38cf1409ac117286eb0df7d6ef31d9cfdad8cfec"],"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec":["cb660d79ac69f7c87415d142088d74821daeba85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1b0febf62c2d9baeee7db38998d9197700ccbab9":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cb660d79ac69f7c87415d142088d74821daeba85":["38cf1409ac117286eb0df7d6ef31d9cfdad8cfec"],"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec":["1b0febf62c2d9baeee7db38998d9197700ccbab9","13ea66b549e25413e4e3057bf3492ab828899110"],"13ea66b549e25413e4e3057bf3492ab828899110":["1b0febf62c2d9baeee7db38998d9197700ccbab9","68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["cb660d79ac69f7c87415d142088d74821daeba85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1b0febf62c2d9baeee7db38998d9197700ccbab9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}