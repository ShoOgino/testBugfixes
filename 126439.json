{"path":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryWithAuthIntegrationTest#testValuesAreCollected().mjava","commits":[{"id":"6b11c50db1921cb554d8de6fdb3a310b4db3b6c2","date":1555057273,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryWithAuthIntegrationTest#testValuesAreCollected().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testValuesAreCollected() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(params(\n        CommonParams.ACTION, \"get\", CommonParams.NAME, \"solr.jvm\")));\n    assertNotNull(rsp);\n    // default format is LIST\n    NamedList<Object> data = (NamedList<Object>)rsp.findRecursive(\"metrics\", \"solr.jvm\", \"data\");\n    assertNotNull(data);\n\n    // Has actual values. These will be 0.0 if metrics could not be collected\n    NamedList<Object> memEntry = (NamedList<Object>) ((NamedList<Object>) data.iterator().next().getValue()).get(\"values\");\n    List<Double> heap = (List<Double>) memEntry.getAll(\"memory.heap.used\").get(0);\n    assertTrue(\"Expected memory.heap.used > 0 in history\", heap.get(240) > 0.01);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6b11c50db1921cb554d8de6fdb3a310b4db3b6c2"],"6b11c50db1921cb554d8de6fdb3a310b4db3b6c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6b11c50db1921cb554d8de6fdb3a310b4db3b6c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6b11c50db1921cb554d8de6fdb3a310b4db3b6c2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}