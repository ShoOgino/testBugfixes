{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/graph/Transition[DistanceCount]#Transition(Node,Node,boolean).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/graph/Transition[DistanceCount]#Transition(Node,Node,boolean).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Constructor for the Transition object\n     *\n     * @param from     Description of the Parameter\n     * @param to       Description of the Parameter\n     * @param isFrame  Description of the Parameter\n     */\n    public Transition(Node from, Node to, boolean isFrame)\n    {\n        LinkedList l = from.getOutgoing();\n        Iterator i = l.iterator();\n        while(i.hasNext())\n        {\n            Transition t = (Transition)i.next();\n            if(t.getTo() == to)\n            {\n                return; // schon enthalten\n            }\n        }\n        this.from = from;\n        this.to = to;\n        from.addOutgoing(this);\n        to.addIncoming(this);\n        this.distance = Integer.MAX_VALUE;\n        this.isFrame = isFrame;\n        this.linkRank[0] = this.linkRank[1] = 1;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21b526e3e9974b2651365fbae52a976e6fc77aa4","date":1022108962,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/graph/Transition[DistanceCount]#Transition(Node,Node,boolean).mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/graph/Transition[DistanceCount]#Transition(Node,Node,boolean).mjava","sourceNew":"    /**\n     * Constructor for the Transition object\n     *\n     * @param from     Description of the Parameter\n     * @param to       Description of the Parameter\n     * @param isFrame  Description of the Parameter\n     */\n\n    public Transition(Node from, Node to, boolean isFrame)\n    {\n\n        LinkedList l = from.getOutgoing();\n\n        Iterator i = l.iterator();\n\n        while (i.hasNext())\n        {\n\n            Transition t = (Transition) i.next();\n\n            if (t.getTo() == to)\n            {\n\n                return;\n                // schon enthalten\n\n            }\n\n        }\n\n        this.from = from;\n\n        this.to = to;\n\n        from.addOutgoing(this);\n\n        to.addIncoming(this);\n\n        this.distance = Integer.MAX_VALUE;\n\n        this.isFrame = isFrame;\n\n        this.linkRank[0] = this.linkRank[1] = 1;\n\n    }\n\n","sourceOld":"    /**\n     * Constructor for the Transition object\n     *\n     * @param from     Description of the Parameter\n     * @param to       Description of the Parameter\n     * @param isFrame  Description of the Parameter\n     */\n    public Transition(Node from, Node to, boolean isFrame)\n    {\n        LinkedList l = from.getOutgoing();\n        Iterator i = l.iterator();\n        while(i.hasNext())\n        {\n            Transition t = (Transition)i.next();\n            if(t.getTo() == to)\n            {\n                return; // schon enthalten\n            }\n        }\n        this.from = from;\n        this.to = to;\n        from.addOutgoing(this);\n        to.addIncoming(this);\n        this.distance = Integer.MAX_VALUE;\n        this.isFrame = isFrame;\n        this.linkRank[0] = this.linkRank[1] = 1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/graph/Transition[DistanceCount]#Transition(Node,Node,boolean).mjava","sourceNew":null,"sourceOld":"    /**\n     * Constructor for the Transition object\n     *\n     * @param from     Description of the Parameter\n     * @param to       Description of the Parameter\n     * @param isFrame  Description of the Parameter\n     */\n\n    public Transition(Node from, Node to, boolean isFrame)\n    {\n\n        LinkedList l = from.getOutgoing();\n\n        Iterator i = l.iterator();\n\n        while (i.hasNext())\n        {\n\n            Transition t = (Transition) i.next();\n\n            if (t.getTo() == to)\n            {\n\n                return;\n                // schon enthalten\n\n            }\n\n        }\n\n        this.from = from;\n\n        this.to = to;\n\n        from.addOutgoing(this);\n\n        to.addIncoming(this);\n\n        this.distance = Integer.MAX_VALUE;\n\n        this.isFrame = isFrame;\n\n        this.linkRank[0] = this.linkRank[1] = 1;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21b526e3e9974b2651365fbae52a976e6fc77aa4":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["21b526e3e9974b2651365fbae52a976e6fc77aa4"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"21b526e3e9974b2651365fbae52a976e6fc77aa4":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["21b526e3e9974b2651365fbae52a976e6fc77aa4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}