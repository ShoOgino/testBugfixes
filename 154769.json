{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#commitCallBack(String).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#commitCallBack(String).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/search/index/IndexController#commitCallBack(String).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.search.index.IndexEventListener#commitCallBack(java.lang.String)\n     */\n    public synchronized void commitCallBack(final String service) {\n        checkDestroyed();\n        if(LOG.isInfoEnabled())\n            LOG.info(\"CommitCallback triggered - register new searcher for service: \"+service);\n        /*\n         * get the old searcher and replace it if possible.\n         */\n        ServiceIndex index = this.indexerMap.get(service);\n        ReferenceCounter<IndexSearcher> searcher = index.getSearcher();\n\n        try {\n            index.setSearcher(getNewServiceSearcher(index.getDirectory()));\n        } catch (IOException e) {\n            LOG.fatal(\"Can not create new Searcher -- keep the old one \", e);\n            return;\n        }\n        /*\n         * if new searcher if registered decrement old one to get it destroyed if unused\n         */\n        searcher.decrementRef();\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.search.index.IndexEventListener#commitCallBack(java.lang.String)\n     */\n    public synchronized void commitCallBack(final String service) {\n        checkDestroyed();\n        if(LOG.isInfoEnabled())\n            LOG.info(\"CommitCallback triggered - register new searcher for service: \"+service);\n        /*\n         * get the old searcher and replace it if possible.\n         */\n        ServiceIndex index = this.indexerMap.get(service);\n        ReferenceCounter<IndexSearcher> searcher = index.getSearcher();\n\n        try {\n            index.setSearcher(getNewServiceSearcher(index.getDirectory()));\n        } catch (IOException e) {\n            LOG.fatal(\"Can not create new Searcher -- keep the old one \", e);\n            return;\n        }\n        /*\n         * if new searcher if registered decrement old one to get it destroyed if unused\n         */\n        searcher.decrementRef();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#commitCallBack(String).mjava","sourceNew":null,"sourceOld":"    /**\n     * @see org.apache.lucene.gdata.search.index.IndexEventListener#commitCallBack(java.lang.String)\n     */\n    public synchronized void commitCallBack(final String service) {\n        checkDestroyed();\n        if(LOG.isInfoEnabled())\n            LOG.info(\"CommitCallback triggered - register new searcher for service: \"+service);\n        /*\n         * get the old searcher and replace it if possible.\n         */\n        ServiceIndex index = this.indexerMap.get(service);\n        ReferenceCounter<IndexSearcher> searcher = index.getSearcher();\n\n        try {\n            index.setSearcher(getNewServiceSearcher(index.getDirectory()));\n        } catch (IOException e) {\n            LOG.fatal(\"Can not create new Searcher -- keep the old one \", e);\n            return;\n        }\n        /*\n         * if new searcher if registered decrement old one to get it destroyed if unused\n         */\n        searcher.decrementRef();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}