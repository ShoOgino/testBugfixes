{"path":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#setExpectations(String,int,boolean,boolean).mjava","commits":[{"id":"3a04bdb295a363a052bdc5a2fcd6e8ce977aa51c","date":1224776958,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#setExpectations(String,int,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public void setExpectations(String field, int numTerms, boolean storeOffsets, boolean storePositions) {\n\n      if (idf == true && reader != null) {\n        this.currentTerm = new Term(field);\n      }\n      useOffsets = storeOffsets && offsets;\n      usePositions = storePositions && positions;\n      if (fields.isEmpty() || fields.contains(field)) {\n        map = true;\n        fieldNL = new NamedList();\n        docNL.add(field, fieldNL);\n      } else {\n        map = false;\n        fieldNL = null;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["df18b2465217a237531d0d944c22ea4a4316411e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a2686717a32b40222a4361bd16ae295511cb8ce7","date":1226500515,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#setExpectations(String,int,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#setExpectations(String,int,boolean,boolean).mjava","sourceNew":"    public void setExpectations(String field, int numTerms, boolean storeOffsets, boolean storePositions) {\n\n      if (docFreq == true && reader != null) {\n        this.currentTerm = new Term(field);\n      }\n      useOffsets = storeOffsets && offsets;\n      usePositions = storePositions && positions;\n      if (fields.isEmpty() || fields.contains(field)) {\n        map = true;\n        fieldNL = new NamedList();\n        docNL.add(field, fieldNL);\n      } else {\n        map = false;\n        fieldNL = null;\n      }\n    }\n\n","sourceOld":"    public void setExpectations(String field, int numTerms, boolean storeOffsets, boolean storePositions) {\n\n      if (idf == true && reader != null) {\n        this.currentTerm = new Term(field);\n      }\n      useOffsets = storeOffsets && offsets;\n      usePositions = storePositions && positions;\n      if (fields.isEmpty() || fields.contains(field)) {\n        map = true;\n        fieldNL = new NamedList();\n        docNL.add(field, fieldNL);\n      } else {\n        map = false;\n        fieldNL = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":["df18b2465217a237531d0d944c22ea4a4316411e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#setExpectations(String,int,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#setExpectations(String,int,boolean,boolean).mjava","sourceNew":"    public void setExpectations(String field, int numTerms, boolean storeOffsets, boolean storePositions) {\n\n      if (docFreq == true && reader != null) {\n        this.currentTerm = new Term(field);\n      }\n      useOffsets = storeOffsets && offsets;\n      usePositions = storePositions && positions;\n      if (fields.isEmpty() || fields.contains(field)) {\n        map = true;\n        fieldNL = new NamedList();\n        docNL.add(field, fieldNL);\n      } else {\n        map = false;\n        fieldNL = null;\n      }\n    }\n\n","sourceOld":"    public void setExpectations(String field, int numTerms, boolean storeOffsets, boolean storePositions) {\n\n      if (docFreq == true && reader != null) {\n        this.currentTerm = new Term(field);\n      }\n      useOffsets = storeOffsets && offsets;\n      usePositions = storePositions && positions;\n      if (fields.isEmpty() || fields.contains(field)) {\n        map = true;\n        fieldNL = new NamedList();\n        docNL.add(field, fieldNL);\n      } else {\n        map = false;\n        fieldNL = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"a2686717a32b40222a4361bd16ae295511cb8ce7":["3a04bdb295a363a052bdc5a2fcd6e8ce977aa51c"],"ad94625fb8d088209f46650c8097196fec67f00c":["a2686717a32b40222a4361bd16ae295511cb8ce7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a04bdb295a363a052bdc5a2fcd6e8ce977aa51c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3a04bdb295a363a052bdc5a2fcd6e8ce977aa51c"],"a2686717a32b40222a4361bd16ae295511cb8ce7":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"3a04bdb295a363a052bdc5a2fcd6e8ce977aa51c":["a2686717a32b40222a4361bd16ae295511cb8ce7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}