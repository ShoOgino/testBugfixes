{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseIndexFileFormatTestCase.ReadBytesDirectoryWrapper#openChecksumInput(String,IOContext).mjava","commits":[{"id":"a8ca1c1149d3818e44210900695de1d6f7f5f259","date":1582895996,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseIndexFileFormatTestCase.ReadBytesDirectoryWrapper#openChecksumInput(String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public ChecksumIndexInput openChecksumInput(String name, IOContext context) throws IOException {\n      ChecksumIndexInput in = super.openChecksumInput(name, context);\n      final FixedBitSet set = readBytes.computeIfAbsent(name, n -> new FixedBitSet(Math.toIntExact(in.length())));\n      if (set.length() != in.length()) {\n        throw new IllegalStateException();\n      }\n      return new ChecksumIndexInput(in.toString()) {\n\n        @Override\n        public void readBytes(byte[] b, int offset, int len) throws IOException {\n          final int fp = Math.toIntExact(getFilePointer());\n          set.set(fp, Math.addExact(fp, len));\n          in.readBytes(b, offset, len);\n        }\n\n        @Override\n        public byte readByte() throws IOException {\n          set.set(Math.toIntExact(getFilePointer()));\n          return in.readByte();\n        }\n\n        @Override\n        public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long length() {\n          return in.length();\n        }\n\n        @Override\n        public long getFilePointer() {\n          return in.getFilePointer();\n        }\n\n        @Override\n        public void close() throws IOException {\n          in.close();\n        }\n\n        @Override\n        public long getChecksum() throws IOException {\n          return in.getChecksum();\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a8ca1c1149d3818e44210900695de1d6f7f5f259":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a8ca1c1149d3818e44210900695de1d6f7f5f259"]},"commit2Childs":{"a8ca1c1149d3818e44210900695de1d6f7f5f259":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a8ca1c1149d3818e44210900695de1d6f7f5f259"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}