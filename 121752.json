{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/builders/OriginalBooleanQueryNodeBuilder#build(QueryNode).mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/builders/OriginalBooleanQueryNodeBuilder#build(QueryNode).mjava","pathOld":"/dev/null","sourceNew":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    OriginalBooleanQueryNode booleanNode = (OriginalBooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery(booleanNode.isDisableCoord());\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/StandardBooleanQueryNodeBuilder#build(QueryNode).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/builders/OriginalBooleanQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    StandardBooleanQueryNode booleanNode = (StandardBooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery(booleanNode.isDisableCoord());\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","sourceOld":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    OriginalBooleanQueryNode booleanNode = (OriginalBooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery(booleanNode.isDisableCoord());\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8a848e758754282137f42bf85793c278e250390"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}