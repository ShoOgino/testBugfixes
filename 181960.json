{"path":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory#getSortFieldType(SolrCore,String).mjava","commits":[{"id":"7f2e96099703c24c0c63d27806ba7020626b649b","date":1385214372,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory#getSortFieldType(SolrCore,String).mjava","pathOld":"/dev/null","sourceNew":"  private SortField.Type getSortFieldType(SolrCore core, String sortFieldName) {\n    SortField.Type type = null;\n    String fieldTypeName = core.getLatestSchema().getField(sortFieldName).getType().getTypeName();\n    FieldType ft = core.getLatestSchema().getFieldTypes().get(fieldTypeName);\n    if (ft instanceof FloatField || ft instanceof TrieFloatField) {\n      type = SortField.Type.FLOAT;\n    } else if (ft instanceof IntField || ft instanceof TrieIntField) {\n      type = SortField.Type.INT;\n    } else if (ft instanceof LongField || ft instanceof TrieLongField) {\n      type = SortField.Type.LONG;\n    } else if (ft instanceof DoubleField || ft instanceof TrieDoubleField) {\n      type = SortField.Type.DOUBLE;\n    }\n    return type;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory#getSortFieldType(SolrCore,String).mjava","pathOld":"/dev/null","sourceNew":"  private SortField.Type getSortFieldType(SolrCore core, String sortFieldName) {\n    SortField.Type type = null;\n    String fieldTypeName = core.getLatestSchema().getField(sortFieldName).getType().getTypeName();\n    FieldType ft = core.getLatestSchema().getFieldTypes().get(fieldTypeName);\n    if (ft instanceof FloatField || ft instanceof TrieFloatField) {\n      type = SortField.Type.FLOAT;\n    } else if (ft instanceof IntField || ft instanceof TrieIntField) {\n      type = SortField.Type.INT;\n    } else if (ft instanceof LongField || ft instanceof TrieLongField) {\n      type = SortField.Type.LONG;\n    } else if (ft instanceof DoubleField || ft instanceof TrieDoubleField) {\n      type = SortField.Type.DOUBLE;\n    }\n    return type;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2106271e380c198349e0f6eac0395bb462913fab","date":1397072894,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory#getSortFieldType(SolrCore,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory#getSortFieldType(SolrCore,String).mjava","sourceNew":"  private SortField.Type getSortFieldType(SolrCore core, String sortFieldName) {\n    SortField.Type type = null;\n    String fieldTypeName = core.getLatestSchema().getField(sortFieldName).getType().getTypeName();\n    FieldType ft = core.getLatestSchema().getFieldTypes().get(fieldTypeName);\n    if (ft instanceof TrieFloatField) {\n      type = SortField.Type.FLOAT;\n    } else if (ft instanceof TrieIntField) {\n      type = SortField.Type.INT;\n    } else if (ft instanceof TrieLongField) {\n      type = SortField.Type.LONG;\n    } else if (ft instanceof TrieDoubleField) {\n      type = SortField.Type.DOUBLE;\n    }\n    return type;\n  }\n\n","sourceOld":"  private SortField.Type getSortFieldType(SolrCore core, String sortFieldName) {\n    SortField.Type type = null;\n    String fieldTypeName = core.getLatestSchema().getField(sortFieldName).getType().getTypeName();\n    FieldType ft = core.getLatestSchema().getFieldTypes().get(fieldTypeName);\n    if (ft instanceof FloatField || ft instanceof TrieFloatField) {\n      type = SortField.Type.FLOAT;\n    } else if (ft instanceof IntField || ft instanceof TrieIntField) {\n      type = SortField.Type.INT;\n    } else if (ft instanceof LongField || ft instanceof TrieLongField) {\n      type = SortField.Type.LONG;\n    } else if (ft instanceof DoubleField || ft instanceof TrieDoubleField) {\n      type = SortField.Type.DOUBLE;\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46dc9ac8b3e748407baaef82453138ff3974480c","date":1484789241,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory#getSortFieldType(SolrCore,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory#getSortFieldType(SolrCore,String).mjava","sourceNew":"  private SortField.Type getSortFieldType(SolrCore core, String sortFieldName) {\n    SortField.Type type = null;\n    String fieldTypeName = core.getLatestSchema().getField(sortFieldName).getType().getTypeName();\n    FieldType ft = core.getLatestSchema().getFieldTypes().get(fieldTypeName);\n    if (ft instanceof TrieFloatField || ft instanceof FloatPointField) {\n      type = SortField.Type.FLOAT;\n    } else if (ft instanceof TrieIntField || ft instanceof IntPointField) {\n      type = SortField.Type.INT;\n    } else if (ft instanceof TrieLongField || ft instanceof LongPointField) {\n      type = SortField.Type.LONG;\n    } else if (ft instanceof TrieDoubleField || ft instanceof DoublePointField) {\n      type = SortField.Type.DOUBLE;\n    }\n    return type;\n  }\n\n","sourceOld":"  private SortField.Type getSortFieldType(SolrCore core, String sortFieldName) {\n    SortField.Type type = null;\n    String fieldTypeName = core.getLatestSchema().getField(sortFieldName).getType().getTypeName();\n    FieldType ft = core.getLatestSchema().getFieldTypes().get(fieldTypeName);\n    if (ft instanceof TrieFloatField) {\n      type = SortField.Type.FLOAT;\n    } else if (ft instanceof TrieIntField) {\n      type = SortField.Type.INT;\n    } else if (ft instanceof TrieLongField) {\n      type = SortField.Type.LONG;\n    } else if (ft instanceof TrieDoubleField) {\n      type = SortField.Type.DOUBLE;\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory#getSortFieldType(SolrCore,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory#getSortFieldType(SolrCore,String).mjava","sourceNew":"  private SortField.Type getSortFieldType(SolrCore core, String sortFieldName) {\n    SortField.Type type = null;\n    String fieldTypeName = core.getLatestSchema().getField(sortFieldName).getType().getTypeName();\n    FieldType ft = core.getLatestSchema().getFieldTypes().get(fieldTypeName);\n    if (ft instanceof TrieFloatField || ft instanceof FloatPointField) {\n      type = SortField.Type.FLOAT;\n    } else if (ft instanceof TrieIntField || ft instanceof IntPointField) {\n      type = SortField.Type.INT;\n    } else if (ft instanceof TrieLongField || ft instanceof LongPointField) {\n      type = SortField.Type.LONG;\n    } else if (ft instanceof TrieDoubleField || ft instanceof DoublePointField) {\n      type = SortField.Type.DOUBLE;\n    }\n    return type;\n  }\n\n","sourceOld":"  private SortField.Type getSortFieldType(SolrCore core, String sortFieldName) {\n    SortField.Type type = null;\n    String fieldTypeName = core.getLatestSchema().getField(sortFieldName).getType().getTypeName();\n    FieldType ft = core.getLatestSchema().getFieldTypes().get(fieldTypeName);\n    if (ft instanceof TrieFloatField) {\n      type = SortField.Type.FLOAT;\n    } else if (ft instanceof TrieIntField) {\n      type = SortField.Type.INT;\n    } else if (ft instanceof TrieLongField) {\n      type = SortField.Type.LONG;\n    } else if (ft instanceof TrieDoubleField) {\n      type = SortField.Type.DOUBLE;\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d048016075a0b8589fcfc77fdf8e2a29fc80964","date":1494631326,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory#getSortFieldType(SolrCore,String).mjava","sourceNew":null,"sourceOld":"  private SortField.Type getSortFieldType(SolrCore core, String sortFieldName) {\n    SortField.Type type = null;\n    String fieldTypeName = core.getLatestSchema().getField(sortFieldName).getType().getTypeName();\n    FieldType ft = core.getLatestSchema().getFieldTypes().get(fieldTypeName);\n    if (ft instanceof TrieFloatField || ft instanceof FloatPointField) {\n      type = SortField.Type.FLOAT;\n    } else if (ft instanceof TrieIntField || ft instanceof IntPointField) {\n      type = SortField.Type.INT;\n    } else if (ft instanceof TrieLongField || ft instanceof LongPointField) {\n      type = SortField.Type.LONG;\n    } else if (ft instanceof TrieDoubleField || ft instanceof DoublePointField) {\n      type = SortField.Type.DOUBLE;\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory#getSortFieldType(SolrCore,String).mjava","sourceNew":null,"sourceOld":"  private SortField.Type getSortFieldType(SolrCore core, String sortFieldName) {\n    SortField.Type type = null;\n    String fieldTypeName = core.getLatestSchema().getField(sortFieldName).getType().getTypeName();\n    FieldType ft = core.getLatestSchema().getFieldTypes().get(fieldTypeName);\n    if (ft instanceof TrieFloatField || ft instanceof FloatPointField) {\n      type = SortField.Type.FLOAT;\n    } else if (ft instanceof TrieIntField || ft instanceof IntPointField) {\n      type = SortField.Type.INT;\n    } else if (ft instanceof TrieLongField || ft instanceof LongPointField) {\n      type = SortField.Type.LONG;\n    } else if (ft instanceof TrieDoubleField || ft instanceof DoublePointField) {\n      type = SortField.Type.DOUBLE;\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["46dc9ac8b3e748407baaef82453138ff3974480c","4d048016075a0b8589fcfc77fdf8e2a29fc80964"],"4d048016075a0b8589fcfc77fdf8e2a29fc80964":["46dc9ac8b3e748407baaef82453138ff3974480c"],"46dc9ac8b3e748407baaef82453138ff3974480c":["2106271e380c198349e0f6eac0395bb462913fab"],"2106271e380c198349e0f6eac0395bb462913fab":["7f2e96099703c24c0c63d27806ba7020626b649b"],"7f2e96099703c24c0c63d27806ba7020626b649b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7f2e96099703c24c0c63d27806ba7020626b649b"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["2106271e380c198349e0f6eac0395bb462913fab","46dc9ac8b3e748407baaef82453138ff3974480c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d048016075a0b8589fcfc77fdf8e2a29fc80964"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"4d048016075a0b8589fcfc77fdf8e2a29fc80964":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"46dc9ac8b3e748407baaef82453138ff3974480c":["e9017cf144952056066919f1ebc7897ff9bd71b1","4d048016075a0b8589fcfc77fdf8e2a29fc80964","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"2106271e380c198349e0f6eac0395bb462913fab":["46dc9ac8b3e748407baaef82453138ff3974480c","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"7f2e96099703c24c0c63d27806ba7020626b649b":["2106271e380c198349e0f6eac0395bb462913fab","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f2e96099703c24c0c63d27806ba7020626b649b","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","74f45af4339b0daf7a95c820ab88c1aea74fbce0","90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}