{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getSuggester(Policy.Session,TriggerEvent).mjava","commits":[{"id":"1f6b20dc453cee198956989b90aa24bef0232bcf","date":1498221066,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getSuggester(Policy.Session,TriggerEvent).mjava","pathOld":"/dev/null","sourceNew":"  private Policy.Suggester getSuggester(Policy.Session session, TriggerEvent event) {\n    Policy.Suggester suggester;\n    switch (event.getEventType()) {\n      case NODEADDED:\n        NodeAddedTrigger.NodeAddedEvent nodeAddedEvent = (NodeAddedTrigger.NodeAddedEvent) event;\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.TARGET_NODE, nodeAddedEvent.getProperty(TriggerEvent.NODE_NAME));\n        log.debug(\"Created suggester with targetNode: {}\", nodeAddedEvent.getProperty(TriggerEvent.NODE_NAME));\n        break;\n      case NODELOST:\n        NodeLostTrigger.NodeLostEvent nodeLostEvent = (NodeLostTrigger.NodeLostEvent) event;\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.SRC_NODE, nodeLostEvent.getProperty(TriggerEvent.NODE_NAME));\n        log.debug(\"Created suggester with srcNode: {}\", nodeLostEvent.getProperty(TriggerEvent.NODE_NAME));\n        break;\n      default:\n        throw new UnsupportedOperationException(\"No support for events other than nodeAdded and nodeLost, received: \" + event.getEventType());\n    }\n    return suggester;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47a99fe8ee3f74e8da2ece1bddbc059d1e1beffa","date":1498706808,"type":5,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getSuggester(Policy.Session,TriggerEvent,ZkStateReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getSuggester(Policy.Session,TriggerEvent).mjava","sourceNew":"  protected Policy.Suggester getSuggester(Policy.Session session, TriggerEvent event, ZkStateReader zkStateReader) {\n    Policy.Suggester suggester;\n    switch (event.getEventType()) {\n      case NODEADDED:\n        NodeAddedTrigger.NodeAddedEvent nodeAddedEvent = (NodeAddedTrigger.NodeAddedEvent) event;\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.TARGET_NODE, nodeAddedEvent.getProperty(TriggerEvent.NODE_NAME));\n        log.debug(\"Created suggester with targetNode: {}\", nodeAddedEvent.getProperty(TriggerEvent.NODE_NAME));\n        break;\n      case NODELOST:\n        NodeLostTrigger.NodeLostEvent nodeLostEvent = (NodeLostTrigger.NodeLostEvent) event;\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.SRC_NODE, nodeLostEvent.getProperty(TriggerEvent.NODE_NAME));\n        log.debug(\"Created suggester with srcNode: {}\", nodeLostEvent.getProperty(TriggerEvent.NODE_NAME));\n        break;\n      default:\n        throw new UnsupportedOperationException(\"No support for events other than nodeAdded and nodeLost, received: \" + event.getEventType());\n    }\n    return suggester;\n  }\n\n","sourceOld":"  private Policy.Suggester getSuggester(Policy.Session session, TriggerEvent event) {\n    Policy.Suggester suggester;\n    switch (event.getEventType()) {\n      case NODEADDED:\n        NodeAddedTrigger.NodeAddedEvent nodeAddedEvent = (NodeAddedTrigger.NodeAddedEvent) event;\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.TARGET_NODE, nodeAddedEvent.getProperty(TriggerEvent.NODE_NAME));\n        log.debug(\"Created suggester with targetNode: {}\", nodeAddedEvent.getProperty(TriggerEvent.NODE_NAME));\n        break;\n      case NODELOST:\n        NodeLostTrigger.NodeLostEvent nodeLostEvent = (NodeLostTrigger.NodeLostEvent) event;\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.SRC_NODE, nodeLostEvent.getProperty(TriggerEvent.NODE_NAME));\n        log.debug(\"Created suggester with srcNode: {}\", nodeLostEvent.getProperty(TriggerEvent.NODE_NAME));\n        break;\n      default:\n        throw new UnsupportedOperationException(\"No support for events other than nodeAdded and nodeLost, received: \" + event.getEventType());\n    }\n    return suggester;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"47a99fe8ee3f74e8da2ece1bddbc059d1e1beffa":["1f6b20dc453cee198956989b90aa24bef0232bcf"],"1f6b20dc453cee198956989b90aa24bef0232bcf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f6b20dc453cee198956989b90aa24bef0232bcf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"47a99fe8ee3f74e8da2ece1bddbc059d1e1beffa":[],"1f6b20dc453cee198956989b90aa24bef0232bcf":["47a99fe8ee3f74e8da2ece1bddbc059d1e1beffa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["47a99fe8ee3f74e8da2ece1bddbc059d1e1beffa","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}