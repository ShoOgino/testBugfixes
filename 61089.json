{"path":"lucene/core/src/test/org/apache/lucene/index/TestFilterDirectoryReader#testFilterDirectoryReaderNumDocsIsLazy().mjava","commits":[{"id":"847bd9a78f79c81e9f9a2a64410c4805e6501143","date":1571071678,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFilterDirectoryReader#testFilterDirectoryReaderNumDocsIsLazy().mjava","pathOld":"/dev/null","sourceNew":"  public void testFilterDirectoryReaderNumDocsIsLazy() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    DirectoryReader directoryReader = DirectoryReader.open(w);\n    w.close();\n\n    AtomicLong numDocsCallCount = new AtomicLong();\n    DirectoryReader directoryReaderWrapper = new NumDocsCountingFilterDirectoryReader(directoryReader, numDocsCallCount);\n    assertEquals(0L, numDocsCallCount.get());\n    assertEquals(1, directoryReaderWrapper.numDocs());\n    assertEquals(1L, numDocsCallCount.get()); // one segment, so called once\n    assertEquals(1, directoryReaderWrapper.numDocs());\n    assertEquals(1L, numDocsCallCount.get());\n\n    directoryReader.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFilterDirectoryReader#testFilterDirectoryReaderNumDocsIsLazy().mjava","pathOld":"/dev/null","sourceNew":"  public void testFilterDirectoryReaderNumDocsIsLazy() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    w.addDocument(new Document());\n    DirectoryReader directoryReader = DirectoryReader.open(w);\n    w.close();\n\n    AtomicLong numDocsCallCount = new AtomicLong();\n    DirectoryReader directoryReaderWrapper = new NumDocsCountingFilterDirectoryReader(directoryReader, numDocsCallCount);\n    assertEquals(0L, numDocsCallCount.get());\n    assertEquals(1, directoryReaderWrapper.numDocs());\n    assertEquals(1L, numDocsCallCount.get()); // one segment, so called once\n    assertEquals(1, directoryReaderWrapper.numDocs());\n    assertEquals(1L, numDocsCallCount.get());\n\n    directoryReader.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"847bd9a78f79c81e9f9a2a64410c4805e6501143":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["847bd9a78f79c81e9f9a2a64410c4805e6501143"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","847bd9a78f79c81e9f9a2a64410c4805e6501143"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["847bd9a78f79c81e9f9a2a64410c4805e6501143","b0b597c65628ca9e73913a07e81691f8229bae35"],"847bd9a78f79c81e9f9a2a64410c4805e6501143":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}