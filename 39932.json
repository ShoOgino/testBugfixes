{"path":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","commits":[{"id":"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","date":1218639440,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/MultiCore#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the multicore instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader);\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    dcore.setCore(core);\n    \n    // Register the new core\n    CoreDescriptor old = this.register(dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the multicore instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader);\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    dcore.setCore(core);\n    \n    // Register the new core\n    CoreDescriptor old = this.register(dcore);\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2284f4281eb212e60f8318c30e1d67c7d25422a7","date":1218739496,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader);\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    dcore.setCore(core);\n    \n    // Register the new core\n    CoreDescriptor old = this.register(dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the multicore instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader);\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    dcore.setCore(core);\n    \n    // Register the new core\n    CoreDescriptor old = this.register(dcore);\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c28792ff7d1774c306e16afbd44ded91a417049b","date":1219072108,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader);\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader);\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    dcore.setCore(core);\n    \n    // Register the new core\n    CoreDescriptor old = this.register(dcore);\n    return core;\n  }\n\n","bugFix":["6dc6ab6902f8f70ae43365947ccf44c25986906d"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1ddc2fd411184c85d1baed1e8d24840a151d6ba1","date":1219508719,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, dcore.getCoreProperties());\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader);\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b9d276eb109a378752200f97f11d8d5b6dba9cb2","date":1243336660,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, dcore.getCoreProperties());\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File  schemFile = new File(dcore.getInstanceDir() + dcore.getSchemaName());\n      if(schemFile. exists()){\n        String key = schemFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, dcore.getCoreProperties());\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","bugFix":null,"bugIntro":["cdc01831d23fd34cb2b98b30d3b4db6131757ef0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"84d15438b5de9907dde5c67c25946892146b8917","date":1244697330,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, dcore.getCoreProperties());\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemFile = new File(dcore.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      if(schemFile. exists()){\n        String key = schemFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, dcore.getCoreProperties());\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File  schemFile = new File(dcore.getInstanceDir() + dcore.getSchemaName());\n      if(schemFile. exists()){\n        String key = schemFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"baf5396191fd3f561aa9c6af0633bae3500799ba","date":1245405538,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, dcore.getCoreProperties());\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemFile = new File(dcore.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      if(schemFile. exists()){\n        String key = schemFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(loader.getInstanceDir(), dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, dcore.getCoreProperties());\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemFile = new File(dcore.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      if(schemFile. exists()){\n        String key = schemFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0e35f69f5bf6e8ffd2f3f4e4a9165956e4661c6b","date":1245662965,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, dcore.getCoreProperties());\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemFile = new File(solrLoader.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      if(schemFile. exists()){\n        String key = schemFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, dcore.getCoreProperties());\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemFile = new File(dcore.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      if(schemFile. exists()){\n        String key = schemFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","bugFix":null,"bugIntro":["cdc01831d23fd34cb2b98b30d3b4db6131757ef0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7800b737e8d04d70bd0c747ff5efaaf6e74aeb77","date":1251272782,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, getCoreProps(instanceDir, dcore.getPropertiesName(),dcore.getCoreProperties()));\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemFile = new File(solrLoader.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      if(schemFile. exists()){\n        String key = schemFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, dcore.getCoreProperties());\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemFile = new File(solrLoader.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      if(schemFile. exists()){\n        String key = schemFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cdc01831d23fd34cb2b98b30d3b4db6131757ef0","date":1256823365,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, getCoreProps(instanceDir, dcore.getPropertiesName(),dcore.getCoreProperties()));\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      }\n      if(schemaFile. exists()){\n        String key = schemaFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, getCoreProps(instanceDir, dcore.getPropertiesName(),dcore.getCoreProperties()));\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemFile = new File(solrLoader.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      if(schemFile. exists()){\n        String key = schemFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","bugFix":["0e35f69f5bf6e8ffd2f3f4e4a9165956e4661c6b","b9d276eb109a378752200f97f11d8d5b6dba9cb2"],"bugIntro":["08fd846faeaddb28f2b20f569afe4f79b394f62d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e90d4b14ac52c437faaf05e0b0523f83bc4cf65f","date":1268762566,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, getCoreProps(instanceDir, dcore.getPropertiesName(),dcore.getCoreProperties()));\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n\n    if (config.getBool(\"abortOnConfigurationError\",defaultAbortOnConfigError)) {\n      numCoresAbortOnConfigError++;\n    }\n    \n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      }\n      if(schemaFile. exists()){\n        String key = schemaFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, getCoreProps(instanceDir, dcore.getPropertiesName(),dcore.getCoreProperties()));\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      }\n      if(schemaFile. exists()){\n        String key = schemaFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","bugFix":null,"bugIntro":["0aea57ab530d174e645bf6e14d04db1e243e13d7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1d76efa24e968bc7896338b3dc41294d5c320f40","date":1268783982,"type":3,"author":"Yonik Seeley","isMerge":true,"pathNew":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, getCoreProps(instanceDir, dcore.getPropertiesName(),dcore.getCoreProperties()));\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n\n    if (config.getBool(\"abortOnConfigurationError\",defaultAbortOnConfigError)) {\n      numCoresAbortOnConfigError++;\n    }\n    \n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      }\n      if(schemaFile. exists()){\n        String key = schemaFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, getCoreProps(instanceDir, dcore.getPropertiesName(),dcore.getCoreProperties()));\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      }\n      if(schemaFile. exists()){\n        String key = schemaFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#create(CoreDescriptor).mjava","sourceNew":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, getCoreProps(instanceDir, dcore.getPropertiesName(),dcore.getCoreProperties()));\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n\n    if (config.getBool(\"abortOnConfigurationError\",defaultAbortOnConfigError)) {\n      numCoresAbortOnConfigError++;\n    }\n    \n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      }\n      if(schemaFile. exists()){\n        String key = schemaFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","sourceOld":"  /**\n   * Creates a new core based on a descriptor but does not register it.\n   *\n   * @param dcore a core descriptor\n   * @return the newly created core\n   * @throws javax.xml.parsers.ParserConfigurationException\n   * @throws java.io.IOException\n   * @throws org.xml.sax.SAXException\n   */\n  public SolrCore create(CoreDescriptor dcore)  throws ParserConfigurationException, IOException, SAXException {\n    // Make the instanceDir relative to the cores instanceDir if not absolute\n    File idir = new File(dcore.getInstanceDir());\n    if (!idir.isAbsolute()) {\n      idir = new File(solrHome, dcore.getInstanceDir());\n    }\n    String instanceDir = idir.getPath();\n    \n    // Initialize the solr config\n    SolrResourceLoader solrLoader = new SolrResourceLoader(instanceDir, libLoader, getCoreProps(instanceDir, dcore.getPropertiesName(),dcore.getCoreProperties()));\n    SolrConfig config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n\n    if (config.getBool(\"abortOnConfigurationError\",defaultAbortOnConfigError)) {\n      numCoresAbortOnConfigError++;\n    }\n    \n    IndexSchema schema = null;\n    if(indexSchemaCache != null){\n      //schema sharing is enabled. so check if it already is loaded\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\" + File.separator + dcore.getSchemaName());\n      }\n      if(schemaFile. exists()){\n        String key = schemaFile.getAbsolutePath()+\":\"+new SimpleDateFormat(\"yyyyMMddhhmmss\").format(new Date(schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if(schema == null){\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key,schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n    if(schema == null){\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e90d4b14ac52c437faaf05e0b0523f83bc4cf65f":["cdc01831d23fd34cb2b98b30d3b4db6131757ef0"],"cdc01831d23fd34cb2b98b30d3b4db6131757ef0":["7800b737e8d04d70bd0c747ff5efaaf6e74aeb77"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c28792ff7d1774c306e16afbd44ded91a417049b":["2284f4281eb212e60f8318c30e1d67c7d25422a7"],"b9d276eb109a378752200f97f11d8d5b6dba9cb2":["1ddc2fd411184c85d1baed1e8d24840a151d6ba1"],"1d76efa24e968bc7896338b3dc41294d5c320f40":["cdc01831d23fd34cb2b98b30d3b4db6131757ef0","e90d4b14ac52c437faaf05e0b0523f83bc4cf65f"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"0e35f69f5bf6e8ffd2f3f4e4a9165956e4661c6b":["baf5396191fd3f561aa9c6af0633bae3500799ba"],"2284f4281eb212e60f8318c30e1d67c7d25422a7":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"baf5396191fd3f561aa9c6af0633bae3500799ba":["84d15438b5de9907dde5c67c25946892146b8917"],"84d15438b5de9907dde5c67c25946892146b8917":["b9d276eb109a378752200f97f11d8d5b6dba9cb2"],"ad94625fb8d088209f46650c8097196fec67f00c":["1d76efa24e968bc7896338b3dc41294d5c320f40"],"7800b737e8d04d70bd0c747ff5efaaf6e74aeb77":["0e35f69f5bf6e8ffd2f3f4e4a9165956e4661c6b"],"1ddc2fd411184c85d1baed1e8d24840a151d6ba1":["c28792ff7d1774c306e16afbd44ded91a417049b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e90d4b14ac52c437faaf05e0b0523f83bc4cf65f":["1d76efa24e968bc7896338b3dc41294d5c320f40"],"cdc01831d23fd34cb2b98b30d3b4db6131757ef0":["e90d4b14ac52c437faaf05e0b0523f83bc4cf65f","1d76efa24e968bc7896338b3dc41294d5c320f40"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"c28792ff7d1774c306e16afbd44ded91a417049b":["1ddc2fd411184c85d1baed1e8d24840a151d6ba1"],"b9d276eb109a378752200f97f11d8d5b6dba9cb2":["84d15438b5de9907dde5c67c25946892146b8917"],"1d76efa24e968bc7896338b3dc41294d5c320f40":["ad94625fb8d088209f46650c8097196fec67f00c"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["2284f4281eb212e60f8318c30e1d67c7d25422a7"],"2284f4281eb212e60f8318c30e1d67c7d25422a7":["c28792ff7d1774c306e16afbd44ded91a417049b"],"0e35f69f5bf6e8ffd2f3f4e4a9165956e4661c6b":["7800b737e8d04d70bd0c747ff5efaaf6e74aeb77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"baf5396191fd3f561aa9c6af0633bae3500799ba":["0e35f69f5bf6e8ffd2f3f4e4a9165956e4661c6b"],"84d15438b5de9907dde5c67c25946892146b8917":["baf5396191fd3f561aa9c6af0633bae3500799ba"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"7800b737e8d04d70bd0c747ff5efaaf6e74aeb77":["cdc01831d23fd34cb2b98b30d3b4db6131757ef0"],"1ddc2fd411184c85d1baed1e8d24840a151d6ba1":["b9d276eb109a378752200f97f11d8d5b6dba9cb2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}