{"path":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader.OrdinalMappingSource#getBytes(int,BytesRef).mjava","commits":[{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader.OrdinalMappingSource#getBytes(int,BytesRef).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader.OrdinalMappingDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    @SuppressWarnings(\"synthetic-access\")\n    @Override\n    public BytesRef getBytes(int docID, BytesRef ref) {\n      ref = delegate.getBytes(docID, ref);\n      if (ref == null || ref.length == 0) {\n        return ref;\n      } else {\n        decoder.decode(ref, ordinals);\n        \n        // map the ordinals\n        for (int i = 0; i < ordinals.length; i++) {\n          ordinals.ints[i] = ordinalMap[ordinals.ints[i]];\n        }\n        \n        encoder.encode(ordinals, ref);\n        return ref;\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getPayload() throws IOException {\n      BytesRef payload = super.getPayload();\n      if (payload == null) {\n        return payload;\n      } else {\n        decoder.decode(payload, ordinals);\n        \n        // map the ordinals\n        for (int i = 0; i < ordinals.length; i++) {\n          ordinals.ints[i] = ordinalMap[ordinals.ints[i]];\n        }\n        \n        encoder.encode(ordinals, payloadOut);\n        return payloadOut;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader.OrdinalMappingSource#getBytes(int,BytesRef).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader.OrdinalMappingDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    @SuppressWarnings(\"synthetic-access\")\n    @Override\n    public BytesRef getBytes(int docID, BytesRef ref) {\n      ref = delegate.getBytes(docID, ref);\n      if (ref == null || ref.length == 0) {\n        return ref;\n      } else {\n        decoder.decode(ref, ordinals);\n        \n        // map the ordinals\n        for (int i = 0; i < ordinals.length; i++) {\n          ordinals.ints[i] = ordinalMap[ordinals.ints[i]];\n        }\n        \n        encoder.encode(ordinals, ref);\n        return ref;\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getPayload() throws IOException {\n      BytesRef payload = super.getPayload();\n      if (payload == null) {\n        return payload;\n      } else {\n        decoder.decode(payload, ordinals);\n        \n        // map the ordinals\n        for (int i = 0; i < ordinals.length; i++) {\n          ordinals.ints[i] = ordinalMap[ordinals.ints[i]];\n        }\n        \n        encoder.encode(ordinals, payloadOut);\n        return payloadOut;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6503b8135290d25521790aa4d084472fdf7d8561","date":1358800765,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader.OrdinalMappingSource#getBytes(int,BytesRef).mjava","sourceNew":null,"sourceOld":"    @SuppressWarnings(\"synthetic-access\")\n    @Override\n    public BytesRef getBytes(int docID, BytesRef ref) {\n      ref = delegate.getBytes(docID, ref);\n      if (ref == null || ref.length == 0) {\n        return ref;\n      } else {\n        decoder.decode(ref, ordinals);\n        \n        // map the ordinals\n        for (int i = 0; i < ordinals.length; i++) {\n          ordinals.ints[i] = ordinalMap[ordinals.ints[i]];\n        }\n        \n        encoder.encode(ordinals, ref);\n        return ref;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader.OrdinalMappingSource#getBytes(int,BytesRef).mjava","sourceNew":null,"sourceOld":"    @SuppressWarnings(\"synthetic-access\")\n    @Override\n    public BytesRef getBytes(int docID, BytesRef ref) {\n      ref = delegate.getBytes(docID, ref);\n      if (ref == null || ref.length == 0) {\n        return ref;\n      } else {\n        decoder.decode(ref, ordinals);\n        \n        // map the ordinals\n        for (int i = 0; i < ordinals.length; i++) {\n          ordinals.ints[i] = ordinalMap[ordinals.ints[i]];\n        }\n        \n        encoder.encode(ordinals, ref);\n        return ref;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0","6503b8135290d25521790aa4d084472fdf7d8561"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6503b8135290d25521790aa4d084472fdf7d8561":["c4015cd39dff8d4dec562d909f9766debac53aa6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["6503b8135290d25521790aa4d084472fdf7d8561"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c4015cd39dff8d4dec562d909f9766debac53aa6","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["d4d69c535930b5cce125cff868d40f6373dc27d4","c4015cd39dff8d4dec562d909f9766debac53aa6"],"6503b8135290d25521790aa4d084472fdf7d8561":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}