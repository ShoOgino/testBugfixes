{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#missingDefaultTest().mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#missingDefaultTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void missingDefaultTest() throws Exception { \n    String[] params = new String[] {\n        \"o.misr.s.int_id\", \"missing(int_id)\",\n        \"o.misr.s.long_ld\", \"missing(long_ld)\",\n        \"o.misr.s.float_fd\", \"missing(float_fd)\",\n        \"o.misr.s.double_dd\", \"missing(double_dd)\",\n        \"o.misr.s.date_dtd\", \"missing(date_dtd)\",\n        \"o.misr.s.string_sd\", \"missing(string_sd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int\n    long intResult = getValue(response, \"misr\", \"int_id\");\n    assertEquals(responseStr, intMissing,intResult);\n\n    //Long\n    long longResult = getValue(response, \"misr\", \"long_ld\");\n    assertEquals(responseStr, longMissing,longResult);\n\n    //Float\n    long floatResult = getValue(response, \"misr\", \"float_fd\");\n    assertEquals(responseStr, floatMissing,floatResult);\n\n    //Double\n    long doubleResult = getValue(response, \"misr\", \"double_dd\");\n    assertEquals(responseStr, doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = getValue(response, \"misr\", \"date_dtd\");\n    assertEquals(responseStr, dateMissing,dateResult);\n\n    //String\n    long stringResult = getValue(response, \"misr\", \"string_sd\");\n    assertEquals(responseStr, stringMissing, stringResult);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#missingDefaultTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#missingDefaultTest().mjava","sourceNew":"  @Test\n  public void missingDefaultTest() throws Exception {\n    String[] params = new String[] {\n        \"o.misr.s.int_id\", \"missing(int_id)\",\n        \"o.misr.s.long_ld\", \"missing(long_ld)\",\n        \"o.misr.s.float_fd\", \"missing(float_fd)\",\n        \"o.misr.s.double_dd\", \"missing(double_dd)\",\n        \"o.misr.s.date_dtd\", \"missing(date_dtd)\",\n        \"o.misr.s.string_sd\", \"missing(string_sd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    //Int\n    long intResult = getValue(response, \"misr\", \"int_id\");\n    assertEquals(responseStr, intMissing,intResult);\n\n    //Long\n    long longResult = getValue(response, \"misr\", \"long_ld\");\n    assertEquals(responseStr, longMissing,longResult);\n\n    //Float\n    long floatResult = getValue(response, \"misr\", \"float_fd\");\n    assertEquals(responseStr, floatMissing,floatResult);\n\n    //Double\n    long doubleResult = getValue(response, \"misr\", \"double_dd\");\n    assertEquals(responseStr, doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = getValue(response, \"misr\", \"date_dtd\");\n    assertEquals(responseStr, dateMissing,dateResult);\n\n    //String\n    long stringResult = getValue(response, \"misr\", \"string_sd\");\n    assertEquals(responseStr, stringMissing, stringResult);\n  }\n\n","sourceOld":"  @Test\n  public void missingDefaultTest() throws Exception { \n    String[] params = new String[] {\n        \"o.misr.s.int_id\", \"missing(int_id)\",\n        \"o.misr.s.long_ld\", \"missing(long_ld)\",\n        \"o.misr.s.float_fd\", \"missing(float_fd)\",\n        \"o.misr.s.double_dd\", \"missing(double_dd)\",\n        \"o.misr.s.date_dtd\", \"missing(date_dtd)\",\n        \"o.misr.s.string_sd\", \"missing(string_sd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int\n    long intResult = getValue(response, \"misr\", \"int_id\");\n    assertEquals(responseStr, intMissing,intResult);\n\n    //Long\n    long longResult = getValue(response, \"misr\", \"long_ld\");\n    assertEquals(responseStr, longMissing,longResult);\n\n    //Float\n    long floatResult = getValue(response, \"misr\", \"float_fd\");\n    assertEquals(responseStr, floatMissing,floatResult);\n\n    //Double\n    long doubleResult = getValue(response, \"misr\", \"double_dd\");\n    assertEquals(responseStr, doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = getValue(response, \"misr\", \"date_dtd\");\n    assertEquals(responseStr, dateMissing,dateResult);\n\n    //String\n    long stringResult = getValue(response, \"misr\", \"string_sd\");\n    assertEquals(responseStr, stringMissing, stringResult);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#missingDefaultTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest#missingDefaultTest().mjava","sourceNew":"  @Test\n  public void missingDefaultTest() throws Exception {\n    String[] params = new String[] {\n        \"o.misr.s.int_id\", \"missing(int_id)\",\n        \"o.misr.s.long_ld\", \"missing(long_ld)\",\n        \"o.misr.s.float_fd\", \"missing(float_fd)\",\n        \"o.misr.s.double_dd\", \"missing(double_dd)\",\n        \"o.misr.s.date_dtd\", \"missing(date_dtd)\",\n        \"o.misr.s.string_sd\", \"missing(string_sd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    //Int\n    long intResult = getValue(response, \"misr\", \"int_id\");\n    assertEquals(responseStr, intMissing,intResult);\n\n    //Long\n    long longResult = getValue(response, \"misr\", \"long_ld\");\n    assertEquals(responseStr, longMissing,longResult);\n\n    //Float\n    long floatResult = getValue(response, \"misr\", \"float_fd\");\n    assertEquals(responseStr, floatMissing,floatResult);\n\n    //Double\n    long doubleResult = getValue(response, \"misr\", \"double_dd\");\n    assertEquals(responseStr, doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = getValue(response, \"misr\", \"date_dtd\");\n    assertEquals(responseStr, dateMissing,dateResult);\n\n    //String\n    long stringResult = getValue(response, \"misr\", \"string_sd\");\n    assertEquals(responseStr, stringMissing, stringResult);\n  }\n\n","sourceOld":"  @Test\n  public void missingDefaultTest() throws Exception { \n    String[] params = new String[] {\n        \"o.misr.s.int_id\", \"missing(int_id)\",\n        \"o.misr.s.long_ld\", \"missing(long_ld)\",\n        \"o.misr.s.float_fd\", \"missing(float_fd)\",\n        \"o.misr.s.double_dd\", \"missing(double_dd)\",\n        \"o.misr.s.date_dtd\", \"missing(date_dtd)\",\n        \"o.misr.s.string_sd\", \"missing(string_sd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int\n    long intResult = getValue(response, \"misr\", \"int_id\");\n    assertEquals(responseStr, intMissing,intResult);\n\n    //Long\n    long longResult = getValue(response, \"misr\", \"long_ld\");\n    assertEquals(responseStr, longMissing,longResult);\n\n    //Float\n    long floatResult = getValue(response, \"misr\", \"float_fd\");\n    assertEquals(responseStr, floatMissing,floatResult);\n\n    //Double\n    long doubleResult = getValue(response, \"misr\", \"double_dd\");\n    assertEquals(responseStr, doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = getValue(response, \"misr\", \"date_dtd\");\n    assertEquals(responseStr, dateMissing,dateResult);\n\n    //String\n    long stringResult = getValue(response, \"misr\", \"string_sd\");\n    assertEquals(responseStr, stringMissing, stringResult);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}