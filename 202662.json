{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#readTermState().mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#readTermState().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Reads the {@link BlockTermState} on the current line.\n   * Sets {@link #termState}.\n   * <p>\n   * Overriding method may return null if there is no {@link BlockTermState}\n   * (in this case the extending class must support a null {@link #termState}).\n   *\n   * @return The {@link BlockTermState}; or null if none.\n   */\n  protected BlockTermState readTermState() throws IOException {\n    // We reuse scratchTermState safely as the read TermState is cloned in the termState() method.\n    termStatesReadBuffer.setPosition(blockFirstLineStart + blockHeader.getTermStatesBaseOffset() + blockLine.getTermStateRelativeOffset());\n    return termState = termStateSerializer.readTermState(\n        blockHeader.getBaseDocsFP(), blockHeader.getBasePositionsFP(), blockHeader.getBasePayloadsFP(),\n        termStatesReadBuffer, fieldMetadata.getFieldInfo(), scratchTermState\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}