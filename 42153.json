{"path":"lucene/core/src/java/org/apache/lucene/search/MultiCollector#getLeafCollector(LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n    final LeafCollector[] leafCollectors = new LeafCollector[collectors.length];\n    for (int i = 0; i < collectors.length; ++i) {\n      leafCollectors[i] = collectors[i].getLeafCollector(context);\n    }\n    return new MultiLeafCollector(leafCollectors);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2a6737f45b7f17c3b7802101ea3949a4f52a84e7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d19aa12f12779ee822b14c5f0479847274d077ff","date":1424529172,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiCollector#getLeafCollector(LeafReaderContext).mjava","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n    final LeafCollector[] leafCollectors = new LeafCollector[collectors.length];\n    for (int i = 0; i < collectors.length; ++i) {\n      leafCollectors[i] = collectors[i].getLeafCollector(context);\n    }\n    return new MultiLeafCollector(leafCollectors, cacheScores);\n  }\n\n","sourceOld":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n    final LeafCollector[] leafCollectors = new LeafCollector[collectors.length];\n    for (int i = 0; i < collectors.length; ++i) {\n      leafCollectors[i] = collectors[i].getLeafCollector(context);\n    }\n    return new MultiLeafCollector(leafCollectors);\n  }\n\n","bugFix":null,"bugIntro":["2a6737f45b7f17c3b7802101ea3949a4f52a84e7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a6737f45b7f17c3b7802101ea3949a4f52a84e7","date":1441368824,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiCollector#getLeafCollector(LeafReaderContext).mjava","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n    final List<LeafCollector> leafCollectors = new ArrayList<>();\n    for (Collector collector : collectors) {\n      final LeafCollector leafCollector;\n      try {\n        leafCollector = collector.getLeafCollector(context);\n      } catch (CollectionTerminatedException e) {\n        // this leaf collector does not need this segment\n        continue;\n      }\n      leafCollectors.add(leafCollector);\n    }\n    switch (leafCollectors.size()) {\n      case 0:\n        throw new CollectionTerminatedException();\n      case 1:\n        return leafCollectors.get(0);\n      default:\n        return new MultiLeafCollector(leafCollectors, cacheScores);\n    }\n  }\n\n","sourceOld":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n    final LeafCollector[] leafCollectors = new LeafCollector[collectors.length];\n    for (int i = 0; i < collectors.length; ++i) {\n      leafCollectors[i] = collectors[i].getLeafCollector(context);\n    }\n    return new MultiLeafCollector(leafCollectors, cacheScores);\n  }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87","d19aa12f12779ee822b14c5f0479847274d077ff"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"063dae9421f2da2fe272aee10b891f49d21538bd","date":1592500789,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiCollector#getLeafCollector(LeafReaderContext).mjava","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n    final List<LeafCollector> leafCollectors = new ArrayList<>(collectors.length);\n    for (Collector collector : collectors) {\n      final LeafCollector leafCollector;\n      try {\n        leafCollector = collector.getLeafCollector(context);\n      } catch (CollectionTerminatedException e) {\n        // this leaf collector does not need this segment\n        continue;\n      }\n      leafCollectors.add(leafCollector);\n    }\n    switch (leafCollectors.size()) {\n      case 0:\n        throw new CollectionTerminatedException();\n      case 1:\n        return leafCollectors.get(0);\n      default:\n        return new MultiLeafCollector(leafCollectors, cacheScores, scoreMode() == ScoreMode.TOP_SCORES);\n    }\n  }\n\n","sourceOld":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n    final List<LeafCollector> leafCollectors = new ArrayList<>();\n    for (Collector collector : collectors) {\n      final LeafCollector leafCollector;\n      try {\n        leafCollector = collector.getLeafCollector(context);\n      } catch (CollectionTerminatedException e) {\n        // this leaf collector does not need this segment\n        continue;\n      }\n      leafCollectors.add(leafCollector);\n    }\n    switch (leafCollectors.size()) {\n      case 0:\n        throw new CollectionTerminatedException();\n      case 1:\n        return leafCollectors.get(0);\n      default:\n        return new MultiLeafCollector(leafCollectors, cacheScores);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"063dae9421f2da2fe272aee10b891f49d21538bd":["2a6737f45b7f17c3b7802101ea3949a4f52a84e7"],"d19aa12f12779ee822b14c5f0479847274d077ff":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["063dae9421f2da2fe272aee10b891f49d21538bd"],"2a6737f45b7f17c3b7802101ea3949a4f52a84e7":["d19aa12f12779ee822b14c5f0479847274d077ff"]},"commit2Childs":{"063dae9421f2da2fe272aee10b891f49d21538bd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d19aa12f12779ee822b14c5f0479847274d077ff":["2a6737f45b7f17c3b7802101ea3949a4f52a84e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["d19aa12f12779ee822b14c5f0479847274d077ff"],"2a6737f45b7f17c3b7802101ea3949a4f52a84e7":["063dae9421f2da2fe272aee10b891f49d21538bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}