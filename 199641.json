{"path":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","commits":[{"id":"7f1955b33190fda0d16dcbbd3d794e9d15cb692f","date":1394704239,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","pathOld":"/dev/null","sourceNew":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    Filter parentsFilter = new FixedBitSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter, random().nextBoolean());\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    Filter parentsFilter = new FixedBitSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter, random().nextBoolean());\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    Filter parentsFilter = new FixedBitSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter, random().nextBoolean());\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    Filter parentsFilter = new FixedBitSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter, random().nextBoolean());\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    Filter parentsFilter = new FixedBitSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter, random().nextBoolean());\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b012914a8110b2ff1d075ed1ef72aa57084d4897","date":1414685177,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitDocIdSetFilter parentsFilter = new BitDocIdSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter, random().nextBoolean());\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    Filter parentsFilter = new FixedBitSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter, random().nextBoolean());\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitDocIdSetFilter parentsFilter = new BitDocIdSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitDocIdSetFilter parentsFilter = new BitDocIdSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter, random().nextBoolean());\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b3915945926c0bf7def01b0c504977709d3aed3","date":1436197708,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"isparent\", \"yes\")));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitDocIdSetFilter parentsFilter = new BitDocIdSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a67f37df79147ed4dd608300c2336c2979db98be","date":1436271524,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(r, parentsFilter);\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"isparent\", \"yes\")));\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(r, parentsFilter);\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(r, parentsFilter);\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(r, parentsFilter);\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(r, parentsFilter);\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n    \n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleDeletedParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(r, parentsFilter);\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits.value);\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleDeletedParentNoChild() throws Exception {\n\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    // First doc with 1 children\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"1\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    w.deleteDocuments(new Term(\"parent\", \"2\"));\n\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(r, parentsFilter);\n\n    Query parentQuery = new TermQuery(new Term(\"parent\", \"2\"));\n\n    ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);\n    TopDocs topdocs = s.search(parentJoinQuery, 3);\n    assertEquals(1, topdocs.totalHits);\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["b012914a8110b2ff1d075ed1ef72aa57084d4897"],"b012914a8110b2ff1d075ed1ef72aa57084d4897":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"7f1955b33190fda0d16dcbbd3d794e9d15cb692f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a67f37df79147ed4dd608300c2336c2979db98be":["4b3915945926c0bf7def01b0c504977709d3aed3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["a67f37df79147ed4dd608300c2336c2979db98be"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["7f1955b33190fda0d16dcbbd3d794e9d15cb692f"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["0e7bc21595222ae4f75509300fbb7726691f387f"],"4b3915945926c0bf7def01b0c504977709d3aed3":["fb17639909a369c1e64866842e5c213440acc17e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a67f37df79147ed4dd608300c2336c2979db98be","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["4b3915945926c0bf7def01b0c504977709d3aed3"],"b012914a8110b2ff1d075ed1ef72aa57084d4897":["fb17639909a369c1e64866842e5c213440acc17e"],"7f1955b33190fda0d16dcbbd3d794e9d15cb692f":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a67f37df79147ed4dd608300c2336c2979db98be":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f1955b33190fda0d16dcbbd3d794e9d15cb692f"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["b012914a8110b2ff1d075ed1ef72aa57084d4897"],"0e7bc21595222ae4f75509300fbb7726691f387f":["83788ad129a5154d5c6562c4e8ce3db48793aada","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4b3915945926c0bf7def01b0c504977709d3aed3":["a67f37df79147ed4dd608300c2336c2979db98be"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}