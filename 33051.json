{"path":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidPayload().mjava","commits":[{"id":"0a16b40feb4e6e0d55c1716733bde48296bedd20","date":1400540388,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidPayload().mjava","pathOld":"/dev/null","sourceNew":"  public void testInvalidPayload() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new StringAndPayloadField(\"id\", \"id\", new BytesRef(\"foo\")));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n             \n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidPayload().mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidPayload().mjava","sourceNew":"  public void testInvalidPayload() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new StringAndPayloadField(\"id\", \"id\", new BytesRef(\"foo\")));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n             \n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testInvalidPayload() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new StringAndPayloadField(\"id\", \"id\", new BytesRef(\"foo\")));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n             \n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["0a16b40feb4e6e0d55c1716733bde48296bedd20"],"0a16b40feb4e6e0d55c1716733bde48296bedd20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":[],"0a16b40feb4e6e0d55c1716733bde48296bedd20":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a16b40feb4e6e0d55c1716733bde48296bedd20","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}