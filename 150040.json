{"path":"src/java/org/apache/solr/request/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"da0acfe5ceed804451d76c8f887855b3d060e132","date":1208287358,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    NamedListCodec codec = new NamedListCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe2cae244107da19ba84a7482bbbdf98eea79c92","date":1224588086,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/request/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    NamedListCodec codec = new NamedListCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    NamedListCodec codec = new NamedListCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":["754182f2def7aee06292f7daf04ebaceb970e931"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"754182f2def7aee06292f7daf04ebaceb970e931","date":1229276256,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/request/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    NamedListCodec codec = new NamedListCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    NamedListCodec codec = new NamedListCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":["fe2cae244107da19ba84a7482bbbdf98eea79c92"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18a1b51b47d1035bf90ecfc7d16c739fe983647a","date":1229928361,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/request/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    NamedListCodec codec = new NamedListCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10b17ff7ad534c3b34a34944d80a87d217011d9c","date":1263262796,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da0acfe5ceed804451d76c8f887855b3d060e132":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"fe2cae244107da19ba84a7482bbbdf98eea79c92":["da0acfe5ceed804451d76c8f887855b3d060e132"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"18a1b51b47d1035bf90ecfc7d16c739fe983647a":["754182f2def7aee06292f7daf04ebaceb970e931"],"10b17ff7ad534c3b34a34944d80a87d217011d9c":["18a1b51b47d1035bf90ecfc7d16c739fe983647a"],"754182f2def7aee06292f7daf04ebaceb970e931":["fe2cae244107da19ba84a7482bbbdf98eea79c92"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"da0acfe5ceed804451d76c8f887855b3d060e132":["fe2cae244107da19ba84a7482bbbdf98eea79c92"],"fe2cae244107da19ba84a7482bbbdf98eea79c92":["754182f2def7aee06292f7daf04ebaceb970e931"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["da0acfe5ceed804451d76c8f887855b3d060e132"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"18a1b51b47d1035bf90ecfc7d16c739fe983647a":["10b17ff7ad534c3b34a34944d80a87d217011d9c"],"10b17ff7ad534c3b34a34944d80a87d217011d9c":[],"754182f2def7aee06292f7daf04ebaceb970e931":["18a1b51b47d1035bf90ecfc7d16c739fe983647a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["10b17ff7ad534c3b34a34944d80a87d217011d9c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}