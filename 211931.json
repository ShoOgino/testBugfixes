{"path":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildSSLContext().mjava","commits":[{"id":"9dee311b2816356910363a8d15fc076caf6367eb","date":1392012517,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildSSLContext().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Builds a new SSLContext with the given configuration and allows the uses of\n   * self-signed certificates during testing.\n   */\n  protected SSLContext buildSSLContext() throws KeyManagementException, \n    UnrecoverableKeyException, NoSuchAlgorithmException, KeyStoreException {\n    \n    return SSLContexts.custom()\n        .loadKeyMaterial(buildKeyStore(getKeyStore(), getKeyStorePassword()), getKeyStorePassword().toCharArray())\n        .loadTrustMaterial(buildKeyStore(getTrustStore(), getTrustStorePassword()), new TrustSelfSignedStrategy()).build();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db474afed4ffdc5df350db03f966d41dfdf1a9b","date":1397776827,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildSSLContext().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildSSLContext().mjava","sourceNew":"  /**\n   * Builds a new SSLContext with the given configuration and allows the uses of\n   * self-signed certificates during testing.\n   */\n  protected SSLContext buildSSLContext() throws KeyManagementException, \n    UnrecoverableKeyException, NoSuchAlgorithmException, KeyStoreException {\n\n    return SSLContexts.custom()\n        .loadKeyMaterial(buildKeyStore(getKeyStore(), getKeyStorePassword()), getKeyStorePassword().toCharArray())\n        .loadTrustMaterial(buildKeyStore(getTrustStore(), getTrustStorePassword()), new TrustSelfSignedStrategy())\n        .setSecureRandom(new NullSecureRandom()).build();\n  }\n\n","sourceOld":"  /**\n   * Builds a new SSLContext with the given configuration and allows the uses of\n   * self-signed certificates during testing.\n   */\n  protected SSLContext buildSSLContext() throws KeyManagementException, \n    UnrecoverableKeyException, NoSuchAlgorithmException, KeyStoreException {\n    \n    return SSLContexts.custom()\n        .loadKeyMaterial(buildKeyStore(getKeyStore(), getKeyStorePassword()), getKeyStorePassword().toCharArray())\n        .loadTrustMaterial(buildKeyStore(getTrustStore(), getTrustStorePassword()), new TrustSelfSignedStrategy()).build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd","date":1397789808,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildSSLContext().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildSSLContext().mjava","sourceNew":"  /**\n   * Builds a new SSLContext with the given configuration and allows the uses of\n   * self-signed certificates during testing.\n   */\n  protected SSLContext buildSSLContext() throws KeyManagementException, \n    UnrecoverableKeyException, NoSuchAlgorithmException, KeyStoreException {\n    \n    return SSLContexts.custom()\n        .loadKeyMaterial(buildKeyStore(getKeyStore(), getKeyStorePassword()), getKeyStorePassword().toCharArray())\n        .loadTrustMaterial(buildKeyStore(getTrustStore(), getTrustStorePassword()), new TrustSelfSignedStrategy()).build();\n  }\n\n","sourceOld":"  /**\n   * Builds a new SSLContext with the given configuration and allows the uses of\n   * self-signed certificates during testing.\n   */\n  protected SSLContext buildSSLContext() throws KeyManagementException, \n    UnrecoverableKeyException, NoSuchAlgorithmException, KeyStoreException {\n\n    return SSLContexts.custom()\n        .loadKeyMaterial(buildKeyStore(getKeyStore(), getKeyStorePassword()), getKeyStorePassword().toCharArray())\n        .loadTrustMaterial(buildKeyStore(getTrustStore(), getTrustStorePassword()), new TrustSelfSignedStrategy())\n        .setSecureRandom(new NullSecureRandom()).build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e58bb31b4af6b8eeb1539849575c59df745bc6e6","date":1461874681,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildSSLContext().mjava","sourceNew":null,"sourceOld":"  /**\n   * Builds a new SSLContext with the given configuration and allows the uses of\n   * self-signed certificates during testing.\n   */\n  protected SSLContext buildSSLContext() throws KeyManagementException, \n    UnrecoverableKeyException, NoSuchAlgorithmException, KeyStoreException {\n    \n    return SSLContexts.custom()\n        .loadKeyMaterial(buildKeyStore(getKeyStore(), getKeyStorePassword()), getKeyStorePassword().toCharArray())\n        .loadTrustMaterial(buildKeyStore(getTrustStore(), getTrustStorePassword()), new TrustSelfSignedStrategy()).build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildSSLContext().mjava","sourceNew":null,"sourceOld":"  /**\n   * Builds a new SSLContext with the given configuration and allows the uses of\n   * self-signed certificates during testing.\n   */\n  protected SSLContext buildSSLContext() throws KeyManagementException, \n    UnrecoverableKeyException, NoSuchAlgorithmException, KeyStoreException {\n    \n    return SSLContexts.custom()\n        .loadKeyMaterial(buildKeyStore(getKeyStore(), getKeyStorePassword()), getKeyStorePassword().toCharArray())\n        .loadTrustMaterial(buildKeyStore(getTrustStore(), getTrustStorePassword()), new TrustSelfSignedStrategy()).build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd":["0db474afed4ffdc5df350db03f966d41dfdf1a9b"],"0db474afed4ffdc5df350db03f966d41dfdf1a9b":["9dee311b2816356910363a8d15fc076caf6367eb"],"e58bb31b4af6b8eeb1539849575c59df745bc6e6":["a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dee311b2816356910363a8d15fc076caf6367eb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e58bb31b4af6b8eeb1539849575c59df745bc6e6"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd","e58bb31b4af6b8eeb1539849575c59df745bc6e6"]},"commit2Childs":{"a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd":["e58bb31b4af6b8eeb1539849575c59df745bc6e6","55b50463286869f584cf849d1587a0fcd54d1dfa"],"0db474afed4ffdc5df350db03f966d41dfdf1a9b":["a62ecbb7d4c5e8e9fb0b2d3dedb2d84a8d388efd"],"e58bb31b4af6b8eeb1539849575c59df745bc6e6":["cd5edd1f2b162a5cfa08efd17851a07373a96817","55b50463286869f584cf849d1587a0fcd54d1dfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dee311b2816356910363a8d15fc076caf6367eb"],"9dee311b2816356910363a8d15fc076caf6367eb":["0db474afed4ffdc5df350db03f966d41dfdf1a9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"55b50463286869f584cf849d1587a0fcd54d1dfa":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","55b50463286869f584cf849d1587a0fcd54d1dfa"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}