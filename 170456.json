{"path":"src/java/org/apache/solr/handler/component/DistribFieldFacet[FacetComponent]#getSorted().mjava","commits":[{"id":"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76","date":1204055227,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/DistribFieldFacet[FacetComponent]#getSorted().mjava","pathOld":"/dev/null","sourceNew":"  ShardFacetCount[] getSorted() {\n    ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n    Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n      public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n        if (o2.count < o1.count) return -1;\n        else if (o1.count < o2.count) return 1;\n        // TODO: handle tiebreaks for types other than strings\n        return o1.name.compareTo(o2.name);\n      }\n    });\n    countSorted = arr;\n    return arr;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5a95ce1d7a3779af6db59b6b39d3b89172d7445","date":1228620032,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/DistribFieldFacet[FacetComponent]#getCountSorted().mjava","pathOld":"src/java/org/apache/solr/handler/component/DistribFieldFacet[FacetComponent]#getSorted().mjava","sourceNew":"  ShardFacetCount[] getCountSorted() {\n    ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n    Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n      public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n        if (o2.count < o1.count) return -1;\n        else if (o1.count < o2.count) return 1;\n        // TODO: handle tiebreaks for types other than strings\n        return o1.name.compareTo(o2.name);\n      }\n    });\n    countSorted = arr;\n    return arr;\n  }\n\n","sourceOld":"  ShardFacetCount[] getSorted() {\n    ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n    Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n      public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n        if (o2.count < o1.count) return -1;\n        else if (o1.count < o2.count) return 1;\n        // TODO: handle tiebreaks for types other than strings\n        return o1.name.compareTo(o2.name);\n      }\n    });\n    countSorted = arr;\n    return arr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5a95ce1d7a3779af6db59b6b39d3b89172d7445","date":1228620032,"type":6,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/DistribFieldFacet[FacetComponent]#getLexSorted().mjava","pathOld":"src/java/org/apache/solr/handler/component/DistribFieldFacet[FacetComponent]#getSorted().mjava","sourceNew":"  ShardFacetCount[] getLexSorted() {\n    ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n    Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n      public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n        return o1.name.compareTo(o2.name);\n      }\n    });\n    countSorted = arr;\n    return arr;\n  }\n\n","sourceOld":"  ShardFacetCount[] getSorted() {\n    ShardFacetCount[] arr = counts.values().toArray(new ShardFacetCount[counts.size()]);\n    Arrays.sort(arr, new Comparator<ShardFacetCount>() {\n      public int compare(ShardFacetCount o1, ShardFacetCount o2) {\n        if (o2.count < o1.count) return -1;\n        else if (o1.count < o2.count) return 1;\n        // TODO: handle tiebreaks for types other than strings\n        return o1.name.compareTo(o2.name);\n      }\n    });\n    countSorted = arr;\n    return arr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"e5a95ce1d7a3779af6db59b6b39d3b89172d7445":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["e5a95ce1d7a3779af6db59b6b39d3b89172d7445"],"e5a95ce1d7a3779af6db59b6b39d3b89172d7445":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e5a95ce1d7a3779af6db59b6b39d3b89172d7445","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}