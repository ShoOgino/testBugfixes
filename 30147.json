{"path":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","commits":[{"id":"33c290fa45cdfec3aaa108916ec4b6017d0616cc","date":1432654478,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"/dev/null","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String solrClientPrincipal = \"solr\";\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3cc56892371c2fde6f65948862e91c81a2f2503","date":1466364454,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String solrClientPrincipal = \"solr\";\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String solrClientPrincipal = \"solr\";\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20be168d828ac40d262f85364d02f15b491dd88b","date":1469725145,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String solrClientPrincipal = \"solr\";\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String solrClientPrincipal = \"solr\";\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    kdc = KerberosTestUtil.getKdc(new File(kdcDir));\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    String solrClientPrincipal = \"solr\";\n    kdc.start();\n    kdc.createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    Configuration conf = new KerberosTestUtil.JaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\");\n    Configuration.setConfiguration(conf);\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5719bfb2650ba43855e20564d39873bbbdc7f02c","date":1500676092,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    /*System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", Boolean.toString(enableDt));\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", Boolean.toString(enableDt));\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", Boolean.toString(enableDt));\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", new Boolean(enableDt).toString());\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt#setupMiniKdc().mjava","sourceNew":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: {}\", enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", Boolean.toString(enableDt));\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");\n  }\n\n","sourceOld":"  private void setupMiniKdc() throws Exception {\n    System.setProperty(\"solr.jaas.debug\", \"true\");\n    String kdcDir = createTempDir()+File.separator+\"minikdc\";\n    String solrClientPrincipal = \"solr\";\n    File keytabFile = new File(kdcDir, \"keytabs\");\n    kerberosTestServices = KerberosTestServices.builder()\n        .withKdc(new File(kdcDir))\n        .withJaasConfiguration(solrClientPrincipal, keytabFile, \"SolrClient\")\n        .build();\n    String solrServerPrincipal = \"HTTP/127.0.0.1\";\n    kerberosTestServices.start();\n    kerberosTestServices.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);\n\n    String jaas = \"SolrClient {\\n\"\n        + \" com.sun.security.auth.module.Krb5LoginModule required\\n\"\n        + \" useKeyTab=true\\n\"\n        + \" keyTab=\\\"\" + keytabFile.getAbsolutePath() + \"\\\"\\n\"\n        + \" storeKey=true\\n\"\n        + \" useTicketCache=false\\n\"\n        + \" doNotPrompt=true\\n\"\n        + \" debug=true\\n\"\n        + \" principal=\\\"\" + solrClientPrincipal + \"\\\";\\n\"\n        + \"};\";\n\n    String jaasFilePath = kdcDir+File.separator+\"jaas-client.conf\";\n    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);\n    System.setProperty(\"java.security.auth.login.config\", jaasFilePath);\n    System.setProperty(\"solr.kerberos.jaas.appname\", \"SolrClient\"); // Get this app name from the jaas file\n    System.setProperty(\"solr.kerberos.cookie.domain\", \"127.0.0.1\");\n    System.setProperty(\"solr.kerberos.principal\", solrServerPrincipal);\n    System.setProperty(\"solr.kerberos.keytab\", keytabFile.getAbsolutePath());\n    System.setProperty(\"authenticationPlugin\", \"org.apache.solr.security.KerberosPlugin\");\n    boolean enableDt = random().nextBoolean();\n    log.info(\"Enable delegation token: \" + enableDt);\n    System.setProperty(\"solr.kerberos.delegation.token.enabled\", Boolean.toString(enableDt));\n    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM\n    System.setProperty(\"solr.kerberos.name.rules\", \"RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//\"\n        + \"\\nDEFAULT\"\n        );\n\n    // more debugging, if needed\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n    // System.setProperty(\"sun.security.jgss.debug\", \"true\");\n    // System.setProperty(\"java.security.debug\", \"logincontext,policy,scl,gssloginconfig\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["a52341299179de5479672f7cf518bf4b173f34b3"],"936cdd5882761db3b844afd6f84ab81cbb011a75":["20be168d828ac40d262f85364d02f15b491dd88b","5719bfb2650ba43855e20564d39873bbbdc7f02c"],"5719bfb2650ba43855e20564d39873bbbdc7f02c":["20be168d828ac40d262f85364d02f15b491dd88b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["a52341299179de5479672f7cf518bf4b173f34b3","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["33c290fa45cdfec3aaa108916ec4b6017d0616cc","20be168d828ac40d262f85364d02f15b491dd88b"],"a52341299179de5479672f7cf518bf4b173f34b3":["20be168d828ac40d262f85364d02f15b491dd88b","5719bfb2650ba43855e20564d39873bbbdc7f02c"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a52341299179de5479672f7cf518bf4b173f34b3","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"33c290fa45cdfec3aaa108916ec4b6017d0616cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f3cc56892371c2fde6f65948862e91c81a2f2503":["33c290fa45cdfec3aaa108916ec4b6017d0616cc"],"20be168d828ac40d262f85364d02f15b491dd88b":["f3cc56892371c2fde6f65948862e91c81a2f2503"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["f3cc56892371c2fde6f65948862e91c81a2f2503","20be168d828ac40d262f85364d02f15b491dd88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"5719bfb2650ba43855e20564d39873bbbdc7f02c":["936cdd5882761db3b844afd6f84ab81cbb011a75","a52341299179de5479672f7cf518bf4b173f34b3"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["a966532d92cf9ba2856f15a8140151bb6b518e4b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"a52341299179de5479672f7cf518bf4b173f34b3":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","628903f37b6c442da0d390db1c6af9a0e74d41a7","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"33c290fa45cdfec3aaa108916ec4b6017d0616cc":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","f3cc56892371c2fde6f65948862e91c81a2f2503"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33c290fa45cdfec3aaa108916ec4b6017d0616cc"],"f3cc56892371c2fde6f65948862e91c81a2f2503":["20be168d828ac40d262f85364d02f15b491dd88b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"20be168d828ac40d262f85364d02f15b491dd88b":["936cdd5882761db3b844afd6f84ab81cbb011a75","5719bfb2650ba43855e20564d39873bbbdc7f02c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a52341299179de5479672f7cf518bf4b173f34b3","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}