{"path":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(DocValues,DocValues).mjava","commits":[{"id":"0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d","date":1325789720,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(DocValues,DocValues).mjava","pathOld":"/dev/null","sourceNew":"  public void assertDocValues(DocValues leftDocValues, DocValues rightDocValues) throws Exception {\n    assertNotNull(info, leftDocValues);\n    assertNotNull(info, rightDocValues);\n    assertEquals(info, leftDocValues.type(), rightDocValues.type());\n    assertEquals(info, leftDocValues.getValueSize(), rightDocValues.getValueSize());\n    assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n    assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(DocValues,DocValues).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(DocValues,DocValues).mjava","sourceNew":"  public void assertDocValues(DocValues leftDocValues, DocValues rightDocValues) throws Exception {\n    assertNotNull(info, leftDocValues);\n    assertNotNull(info, rightDocValues);\n    assertEquals(info, leftDocValues.type(), rightDocValues.type());\n    assertEquals(info, leftDocValues.getValueSize(), rightDocValues.getValueSize());\n    assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n    assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n  }\n\n","sourceOld":"  public void assertDocValues(DocValues leftDocValues, DocValues rightDocValues) throws Exception {\n    assertNotNull(info, leftDocValues);\n    assertNotNull(info, rightDocValues);\n    assertEquals(info, leftDocValues.type(), rightDocValues.type());\n    assertEquals(info, leftDocValues.getValueSize(), rightDocValues.getValueSize());\n    assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());\n    assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}