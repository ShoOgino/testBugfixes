{"path":"lucene/core/src/java/org/apache/lucene/search/DisiWrapper#DisiWrapper(Spans).mjava","commits":[{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisiWrapper#DisiWrapper(Spans).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisiWrapper#DisiWrapper(Iter).mjava","sourceNew":"  public DisiWrapper(Spans spans) {\n    this.scorer = null;\n    this.spans = spans;\n    this.iterator = spans;\n    this.cost = iterator.cost();\n    this.doc = -1;\n    this.twoPhaseView = spans.asTwoPhaseIterator();\n      \n    if (twoPhaseView != null) {\n      approximation = twoPhaseView.approximation();\n    } else {\n      approximation = iterator;\n    }\n    this.lastApproxNonMatchDoc = -2;\n    this.lastApproxMatchDoc = -2;\n  }\n\n","sourceOld":"  public DisiWrapper(Iter iterator) {\n    this.iterator = iterator;\n    this.cost = iterator.cost();\n    this.doc = -1;\n    this.twoPhaseView = TwoPhaseIterator.asTwoPhaseIterator(iterator);\n      \n    if (twoPhaseView != null) {\n      approximation = twoPhaseView.approximation();\n    } else {\n      approximation = iterator;\n    }\n    this.lastApproxNonMatchDoc = -2;\n    this.lastApproxMatchDoc = -2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac8ce4febd838561b4317a75f81313066e6d91c3","date":1449851410,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisiWrapper#DisiWrapper(Spans).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisiWrapper#DisiWrapper(Spans).mjava","sourceNew":"  public DisiWrapper(Spans spans) {\n    this.scorer = null;\n    this.spans = spans;\n    this.iterator = spans;\n    this.cost = iterator.cost();\n    this.doc = -1;\n    this.twoPhaseView = spans.asTwoPhaseIterator();\n      \n    if (twoPhaseView != null) {\n      approximation = twoPhaseView.approximation();\n      matchCost = twoPhaseView.matchCost();\n    } else {\n      approximation = iterator;\n      matchCost = 0f;\n    }\n    this.lastApproxNonMatchDoc = -2;\n    this.lastApproxMatchDoc = -2;\n  }\n\n","sourceOld":"  public DisiWrapper(Spans spans) {\n    this.scorer = null;\n    this.spans = spans;\n    this.iterator = spans;\n    this.cost = iterator.cost();\n    this.doc = -1;\n    this.twoPhaseView = spans.asTwoPhaseIterator();\n      \n    if (twoPhaseView != null) {\n      approximation = twoPhaseView.approximation();\n    } else {\n      approximation = iterator;\n    }\n    this.lastApproxNonMatchDoc = -2;\n    this.lastApproxMatchDoc = -2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac8ce4febd838561b4317a75f81313066e6d91c3":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac8ce4febd838561b4317a75f81313066e6d91c3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"ac8ce4febd838561b4317a75f81313066e6d91c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["ac8ce4febd838561b4317a75f81313066e6d91c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}