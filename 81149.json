{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestTransactionRollback#checkExpecteds(BitSet).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestTransactionRollback#checkExpecteds(BitSet).mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestTransactionRollback#checkExpecteds(BitSet).mjava","sourceNew":"  private void checkExpecteds(BitSet expecteds) throws Exception {\n    IndexReader r = IndexReader.open(dir, true);\n\t\t\n    //Perhaps not the most efficient approach but meets our needs here.\n    for (int i = 0; i < r.maxDoc(); i++) {\n      if(!r.isDeleted(i)) {\n        String sval=r.document(i).get(FIELD_RECORD_ID);\n        if(sval!=null) {\n          int val=Integer.parseInt(sval);\n          assertTrue(\"Did not expect document #\"+val, expecteds.get(val));\n          expecteds.set(val,false);\n        }\n      }\n    }\n    r.close();\n    assertEquals(\"Should have 0 docs remaining \", 0 ,expecteds.cardinality());\n  }\n\n","sourceOld":"  private void checkExpecteds(BitSet expecteds) throws Exception {\n    IndexReader r = IndexReader.open(dir, true);\n\t\t\n    //Perhaps not the most efficient approach but meets our needs here.\n    for (int i = 0; i < r.maxDoc(); i++) {\n      if(!r.isDeleted(i)) {\n        String sval=r.document(i).get(FIELD_RECORD_ID);\n        if(sval!=null) {\n          int val=Integer.parseInt(sval);\n          assertTrue(\"Did not expect document #\"+val, expecteds.get(val));\n          expecteds.set(val,false);\n        }\n      }\n    }\n    r.close();\n    assertEquals(\"Should have 0 docs remaining \", 0 ,expecteds.cardinality());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestTransactionRollback#checkExpecteds(BitSet).mjava","sourceNew":null,"sourceOld":"  private void checkExpecteds(BitSet expecteds) throws Exception {\n    IndexReader r = IndexReader.open(dir, true);\n\t\t\n    //Perhaps not the most efficient approach but meets our needs here.\n    for (int i = 0; i < r.maxDoc(); i++) {\n      if(!r.isDeleted(i)) {\n        String sval=r.document(i).get(FIELD_RECORD_ID);\n        if(sval!=null) {\n          int val=Integer.parseInt(sval);\n          assertTrue(\"Did not expect document #\"+val, expecteds.get(val));\n          expecteds.set(val,false);\n        }\n      }\n    }\n    r.close();\n    assertEquals(\"Should have 0 docs remaining \", 0 ,expecteds.cardinality());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}