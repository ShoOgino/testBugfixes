{"path":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","commits":[{"id":"3e1de378515e2ab9bcfd5b80901238a3f9078a7c","date":1385904665,"type":2,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestRangeFacetCounts#testDistanceRangeFaceting().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // Add documents with latitude/longitude location:\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","sourceOld":"  public void testDistanceRangeFaceting() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    \n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n\n    FacetsCollector fc = new FacetsCollector();\n\n    IndexReader r = writer.getReader();\n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new DoubleRangeFacetCounts(\"field\", distance.getValueSource(bindings), fc,\n        new DoubleRange(\"< 1 km\", 0.0, true, 1.0, false),\n        new DoubleRange(\"< 2 km\", 0.0, true, 2.0, false),\n        new DoubleRange(\"< 5 km\", 0.0, true, 5.0, false),\n        new DoubleRange(\"< 10 km\", 0.0, true, 10.0, false),\n        new DoubleRange(\"< 20 km\", 0.0, true, 20.0, false),\n        new DoubleRange(\"< 50 km\", 0.0, true, 50.0, false));\n\n    assertEquals(\"value=3 childCount=6\\n  < 1 km (1)\\n  < 2 km (2)\\n  < 5 km (2)\\n  < 10 km (3)\\n  < 20 km (3)\\n  < 50 km (3)\\n\", facets.getTopChildren(10, \"field\").toString());\n    IOUtils.close(r, writer, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"/dev/null","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // Add documents with latitude/longitude location:\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40640359164f629dd440a47df2e145d084ce9645","date":1391711808,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // Add documents with latitude/longitude location:\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e09e6234d6806d0dcbe1d896f3c4ddb6a72782bd","date":1399822654,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer()));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer()));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer()));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer(FacetExamples.EXAMPLES_VER)));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(\n        new WhitespaceAnalyzer()));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(FacetExamples.EXAMPLES_VER, \n        new WhitespaceAnalyzer()));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8c2b960c3e30fc944295dd33fe340e06d0d9ada","date":1412078901,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(\n        new WhitespaceAnalyzer()).setOpenMode(OpenMode.CREATE));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(\n        new WhitespaceAnalyzer()));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(\n        new WhitespaceAnalyzer()).setOpenMode(OpenMode.CREATE));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(\n        new WhitespaceAnalyzer()));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(\n        new WhitespaceAnalyzer()).setOpenMode(OpenMode.CREATE));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DimensionalDoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.759011));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -73.9844722));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.718266));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -74.007819));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.7051157));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -74.0088305));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(\n        new WhitespaceAnalyzer()).setOpenMode(OpenMode.CREATE));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(\n        new WhitespaceAnalyzer()).setOpenMode(OpenMode.CREATE));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DimensionalDoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.759011));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -73.9844722));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.718266));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -74.007819));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.7051157));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -74.0088305));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer));\n    writer.close();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(\n        new WhitespaceAnalyzer()).setOpenMode(OpenMode.CREATE));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DimensionalDoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.759011));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -73.9844722));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.718266));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -74.007819));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.7051157));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -74.0088305));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#index().mjava","sourceNew":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(\n        new WhitespaceAnalyzer()).setOpenMode(OpenMode.CREATE));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DoublePoints (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DoublePoint(\"latitude\", 40.759011));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DoublePoint(\"longitude\", -73.9844722));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoublePoint(\"latitude\", 40.718266));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DoublePoint(\"longitude\", -74.007819));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoublePoint(\"latitude\", 40.7051157));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DoublePoint(\"longitude\", -74.0088305));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer));\n    writer.close();\n  }\n\n","sourceOld":"  /** Build the example index. */\n  public void index() throws IOException {\n    IndexWriter writer = new IndexWriter(indexDir, new IndexWriterConfig(\n        new WhitespaceAnalyzer()).setOpenMode(OpenMode.CREATE));\n\n    // TODO: we could index in radians instead ... saves all the conversions in getBoundingBoxFilter\n\n    // Add documents with latitude/longitude location:\n    // we index these both as DimensionalDoubleFields (for bounding box/ranges) and as NumericDocValuesFields (for scoring)\n    Document doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.759011));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.759011)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -73.9844722));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-73.9844722)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.718266));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.718266)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -74.007819));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.007819)));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DimensionalDoubleField(\"latitude\", 40.7051157));\n    doc.add(new NumericDocValuesField(\"latitude\", Double.doubleToRawLongBits(40.7051157)));\n    doc.add(new DimensionalDoubleField(\"longitude\", -74.0088305));\n    doc.add(new NumericDocValuesField(\"longitude\", Double.doubleToRawLongBits(-74.0088305)));\n    writer.addDocument(doc);\n\n    // Open near-real-time searcher\n    searcher = new IndexSearcher(DirectoryReader.open(writer));\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["2a1862266772deb28cdcb7d996b64d2177022687"],"e09e6234d6806d0dcbe1d896f3c4ddb6a72782bd":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["d0ef034a4f10871667ae75181537775ddcf8ade4","c8c2b960c3e30fc944295dd33fe340e06d0d9ada"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"40640359164f629dd440a47df2e145d084ce9645":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3e1de378515e2ab9bcfd5b80901238a3f9078a7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"770342641f7b505eaa8dccdc666158bff2419109":["c8c2b960c3e30fc944295dd33fe340e06d0d9ada"],"c8c2b960c3e30fc944295dd33fe340e06d0d9ada":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"2a1862266772deb28cdcb7d996b64d2177022687":["770342641f7b505eaa8dccdc666158bff2419109"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","e09e6234d6806d0dcbe1d896f3c4ddb6a72782bd"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["40640359164f629dd440a47df2e145d084ce9645"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e1de378515e2ab9bcfd5b80901238a3f9078a7c"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e09e6234d6806d0dcbe1d896f3c4ddb6a72782bd":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"56572ec06f1407c066d6b7399413178b33176cd8":[],"40640359164f629dd440a47df2e145d084ce9645":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3e1de378515e2ab9bcfd5b80901238a3f9078a7c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"770342641f7b505eaa8dccdc666158bff2419109":["2a1862266772deb28cdcb7d996b64d2177022687"],"c8c2b960c3e30fc944295dd33fe340e06d0d9ada":["d9a47902d6207303f5ed3e7aaca62ca33433af66","770342641f7b505eaa8dccdc666158bff2419109"],"2a1862266772deb28cdcb7d996b64d2177022687":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["ff4227bb146f97aabae888091c19e48c88dbb0db","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e1de378515e2ab9bcfd5b80901238a3f9078a7c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["d9a47902d6207303f5ed3e7aaca62ca33433af66","c8c2b960c3e30fc944295dd33fe340e06d0d9ada"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["e09e6234d6806d0dcbe1d896f3c4ddb6a72782bd","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["40640359164f629dd440a47df2e145d084ce9645"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}