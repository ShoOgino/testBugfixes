{"path":"modules/analysis/common/src/java/org/tartarus/snowball/ext/CatalanStemmer#r_cleaning().mjava","commits":[{"id":"a4193dd6874631c7088239f186fb6e5b2f02eeb1","date":1283035345,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/CatalanStemmer#r_cleaning().mjava","pathOld":"/dev/null","sourceNew":"                private boolean r_cleaning() {\n            int among_var;\n            int v_1;\n                    // repeat, line 52\n                    replab0: while(true)\n                    {\n                        v_1 = cursor;\n                        lab1: do {\n                            // (, line 52\n                            // [, line 53\n                            bra = cursor;\n                            // substring, line 53\n                            among_var = find_among(a_0, 13);\n                            if (among_var == 0)\n                            {\n                                break lab1;\n                            }\n                            // ], line 53\n                            ket = cursor;\n                            switch(among_var) {\n                                case 0:\n                                    break lab1;\n                                case 1:\n                                    // (, line 54\n                                    // <-, line 54\n                                    slice_from(\"a\");\n                                    break;\n                                case 2:\n                                    // (, line 55\n                                    // <-, line 55\n                                    slice_from(\"a\");\n                                    break;\n                                case 3:\n                                    // (, line 56\n                                    // <-, line 56\n                                    slice_from(\"e\");\n                                    break;\n                                case 4:\n                                    // (, line 57\n                                    // <-, line 57\n                                    slice_from(\"e\");\n                                    break;\n                                case 5:\n                                    // (, line 58\n                                    // <-, line 58\n                                    slice_from(\"i\");\n                                    break;\n                                case 6:\n                                    // (, line 59\n                                    // <-, line 59\n                                    slice_from(\"i\");\n                                    break;\n                                case 7:\n                                    // (, line 60\n                                    // <-, line 60\n                                    slice_from(\"o\");\n                                    break;\n                                case 8:\n                                    // (, line 61\n                                    // <-, line 61\n                                    slice_from(\"o\");\n                                    break;\n                                case 9:\n                                    // (, line 62\n                                    // <-, line 62\n                                    slice_from(\"u\");\n                                    break;\n                                case 10:\n                                    // (, line 63\n                                    // <-, line 63\n                                    slice_from(\"u\");\n                                    break;\n                                case 11:\n                                    // (, line 64\n                                    // <-, line 64\n                                    slice_from(\"i\");\n                                    break;\n                                case 12:\n                                    // (, line 65\n                                    // <-, line 65\n                                    slice_from(\".\");\n                                    break;\n                                case 13:\n                                    // (, line 66\n                                    // next, line 66\n                                    if (cursor >= limit)\n                                    {\n                                        break lab1;\n                                    }\n                                    cursor++;\n                                    break;\n                            }\n                            continue replab0;\n                        } while (false);\n                        cursor = v_1;\n                        break replab0;\n                    }\n                    return true;\n                }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/CatalanStemmer#r_cleaning().mjava","pathOld":"/dev/null","sourceNew":"                private boolean r_cleaning() {\n            int among_var;\n            int v_1;\n                    // repeat, line 52\n                    replab0: while(true)\n                    {\n                        v_1 = cursor;\n                        lab1: do {\n                            // (, line 52\n                            // [, line 53\n                            bra = cursor;\n                            // substring, line 53\n                            among_var = find_among(a_0, 13);\n                            if (among_var == 0)\n                            {\n                                break lab1;\n                            }\n                            // ], line 53\n                            ket = cursor;\n                            switch(among_var) {\n                                case 0:\n                                    break lab1;\n                                case 1:\n                                    // (, line 54\n                                    // <-, line 54\n                                    slice_from(\"a\");\n                                    break;\n                                case 2:\n                                    // (, line 55\n                                    // <-, line 55\n                                    slice_from(\"a\");\n                                    break;\n                                case 3:\n                                    // (, line 56\n                                    // <-, line 56\n                                    slice_from(\"e\");\n                                    break;\n                                case 4:\n                                    // (, line 57\n                                    // <-, line 57\n                                    slice_from(\"e\");\n                                    break;\n                                case 5:\n                                    // (, line 58\n                                    // <-, line 58\n                                    slice_from(\"i\");\n                                    break;\n                                case 6:\n                                    // (, line 59\n                                    // <-, line 59\n                                    slice_from(\"i\");\n                                    break;\n                                case 7:\n                                    // (, line 60\n                                    // <-, line 60\n                                    slice_from(\"o\");\n                                    break;\n                                case 8:\n                                    // (, line 61\n                                    // <-, line 61\n                                    slice_from(\"o\");\n                                    break;\n                                case 9:\n                                    // (, line 62\n                                    // <-, line 62\n                                    slice_from(\"u\");\n                                    break;\n                                case 10:\n                                    // (, line 63\n                                    // <-, line 63\n                                    slice_from(\"u\");\n                                    break;\n                                case 11:\n                                    // (, line 64\n                                    // <-, line 64\n                                    slice_from(\"i\");\n                                    break;\n                                case 12:\n                                    // (, line 65\n                                    // <-, line 65\n                                    slice_from(\".\");\n                                    break;\n                                case 13:\n                                    // (, line 66\n                                    // next, line 66\n                                    if (cursor >= limit)\n                                    {\n                                        break lab1;\n                                    }\n                                    cursor++;\n                                    break;\n                            }\n                            continue replab0;\n                        } while (false);\n                        cursor = v_1;\n                        break replab0;\n                    }\n                    return true;\n                }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/CatalanStemmer#r_cleaning().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/CatalanStemmer#r_cleaning().mjava","sourceNew":"                private boolean r_cleaning() {\n            int among_var;\n            int v_1;\n                    // repeat, line 52\n                    replab0: while(true)\n                    {\n                        v_1 = cursor;\n                        lab1: do {\n                            // (, line 52\n                            // [, line 53\n                            bra = cursor;\n                            // substring, line 53\n                            among_var = find_among(a_0, 13);\n                            if (among_var == 0)\n                            {\n                                break lab1;\n                            }\n                            // ], line 53\n                            ket = cursor;\n                            switch(among_var) {\n                                case 0:\n                                    break lab1;\n                                case 1:\n                                    // (, line 54\n                                    // <-, line 54\n                                    slice_from(\"a\");\n                                    break;\n                                case 2:\n                                    // (, line 55\n                                    // <-, line 55\n                                    slice_from(\"a\");\n                                    break;\n                                case 3:\n                                    // (, line 56\n                                    // <-, line 56\n                                    slice_from(\"e\");\n                                    break;\n                                case 4:\n                                    // (, line 57\n                                    // <-, line 57\n                                    slice_from(\"e\");\n                                    break;\n                                case 5:\n                                    // (, line 58\n                                    // <-, line 58\n                                    slice_from(\"i\");\n                                    break;\n                                case 6:\n                                    // (, line 59\n                                    // <-, line 59\n                                    slice_from(\"i\");\n                                    break;\n                                case 7:\n                                    // (, line 60\n                                    // <-, line 60\n                                    slice_from(\"o\");\n                                    break;\n                                case 8:\n                                    // (, line 61\n                                    // <-, line 61\n                                    slice_from(\"o\");\n                                    break;\n                                case 9:\n                                    // (, line 62\n                                    // <-, line 62\n                                    slice_from(\"u\");\n                                    break;\n                                case 10:\n                                    // (, line 63\n                                    // <-, line 63\n                                    slice_from(\"u\");\n                                    break;\n                                case 11:\n                                    // (, line 64\n                                    // <-, line 64\n                                    slice_from(\"i\");\n                                    break;\n                                case 12:\n                                    // (, line 65\n                                    // <-, line 65\n                                    slice_from(\".\");\n                                    break;\n                                case 13:\n                                    // (, line 66\n                                    // next, line 66\n                                    if (cursor >= limit)\n                                    {\n                                        break lab1;\n                                    }\n                                    cursor++;\n                                    break;\n                            }\n                            continue replab0;\n                        } while (false);\n                        cursor = v_1;\n                        break replab0;\n                    }\n                    return true;\n                }\n\n","sourceOld":"                private boolean r_cleaning() {\n            int among_var;\n            int v_1;\n                    // repeat, line 52\n                    replab0: while(true)\n                    {\n                        v_1 = cursor;\n                        lab1: do {\n                            // (, line 52\n                            // [, line 53\n                            bra = cursor;\n                            // substring, line 53\n                            among_var = find_among(a_0, 13);\n                            if (among_var == 0)\n                            {\n                                break lab1;\n                            }\n                            // ], line 53\n                            ket = cursor;\n                            switch(among_var) {\n                                case 0:\n                                    break lab1;\n                                case 1:\n                                    // (, line 54\n                                    // <-, line 54\n                                    slice_from(\"a\");\n                                    break;\n                                case 2:\n                                    // (, line 55\n                                    // <-, line 55\n                                    slice_from(\"a\");\n                                    break;\n                                case 3:\n                                    // (, line 56\n                                    // <-, line 56\n                                    slice_from(\"e\");\n                                    break;\n                                case 4:\n                                    // (, line 57\n                                    // <-, line 57\n                                    slice_from(\"e\");\n                                    break;\n                                case 5:\n                                    // (, line 58\n                                    // <-, line 58\n                                    slice_from(\"i\");\n                                    break;\n                                case 6:\n                                    // (, line 59\n                                    // <-, line 59\n                                    slice_from(\"i\");\n                                    break;\n                                case 7:\n                                    // (, line 60\n                                    // <-, line 60\n                                    slice_from(\"o\");\n                                    break;\n                                case 8:\n                                    // (, line 61\n                                    // <-, line 61\n                                    slice_from(\"o\");\n                                    break;\n                                case 9:\n                                    // (, line 62\n                                    // <-, line 62\n                                    slice_from(\"u\");\n                                    break;\n                                case 10:\n                                    // (, line 63\n                                    // <-, line 63\n                                    slice_from(\"u\");\n                                    break;\n                                case 11:\n                                    // (, line 64\n                                    // <-, line 64\n                                    slice_from(\"i\");\n                                    break;\n                                case 12:\n                                    // (, line 65\n                                    // <-, line 65\n                                    slice_from(\".\");\n                                    break;\n                                case 13:\n                                    // (, line 66\n                                    // next, line 66\n                                    if (cursor >= limit)\n                                    {\n                                        break lab1;\n                                    }\n                                    cursor++;\n                                    break;\n                            }\n                            continue replab0;\n                        } while (false);\n                        cursor = v_1;\n                        break replab0;\n                    }\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4193dd6874631c7088239f186fb6e5b2f02eeb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a4193dd6874631c7088239f186fb6e5b2f02eeb1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a4193dd6874631c7088239f186fb6e5b2f02eeb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"a4193dd6874631c7088239f186fb6e5b2f02eeb1":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4193dd6874631c7088239f186fb6e5b2f02eeb1","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}