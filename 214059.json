{"path":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#checkAborted(Directory).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#checkAborted(Directory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#checkAborted(Directory).mjava","sourceNew":"    public synchronized void checkAborted(Directory dir) throws MergeAbortedException {\n      if (aborted) {\n        throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n      }\n\n      while (paused) {\n        try {\n          // In theory we could wait() indefinitely, but we\n          // do 1000 msec, defensively\n          wait(1000);\n        } catch (InterruptedException ie) {\n          throw new RuntimeException(ie);\n        }\n        if (aborted) {\n          throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n        }\n      }\n    }\n\n","sourceOld":"    public synchronized void checkAborted(Directory dir) throws MergeAbortedException {\n      if (aborted) {\n        throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n      }\n\n      while (paused) {\n        try {\n          // In theory we could wait() indefinitely, but we\n          // do 1000 msec, defensively\n          wait(1000);\n        } catch (InterruptedException ie) {\n          throw new RuntimeException(ie);\n        }\n        if (aborted) {\n          throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c14aed69f37b57db63b1fccc0740b17060a08f2b","date":1348227091,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#checkAborted(Directory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#checkAborted(Directory).mjava","sourceNew":"    /** Called periodically by {@link IndexWriter} while\n     *  merging to see if the merge is aborted. */\n    public synchronized void checkAborted(Directory dir) throws MergeAbortedException {\n      if (aborted) {\n        throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n      }\n\n      while (paused) {\n        try {\n          // In theory we could wait() indefinitely, but we\n          // do 1000 msec, defensively\n          wait(1000);\n        } catch (InterruptedException ie) {\n          throw new RuntimeException(ie);\n        }\n        if (aborted) {\n          throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n        }\n      }\n    }\n\n","sourceOld":"    public synchronized void checkAborted(Directory dir) throws MergeAbortedException {\n      if (aborted) {\n        throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n      }\n\n      while (paused) {\n        try {\n          // In theory we could wait() indefinitely, but we\n          // do 1000 msec, defensively\n          wait(1000);\n        } catch (InterruptedException ie) {\n          throw new RuntimeException(ie);\n        }\n        if (aborted) {\n          throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a1346c5dacb766a49ec3b6160a23d2e80073501c","date":1417857339,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#checkAborted(Directory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#checkAborted(Directory).mjava","sourceNew":"    /** Called periodically by {@link IndexWriter} while\n     *  merging to see if the merge is aborted. */\n    public synchronized void checkAborted(Directory dir) throws MergeAbortedException {\n      if (aborted) {\n        throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n      }\n\n      while (paused) {\n        try {\n          // In theory we could wait() indefinitely, but we\n          // do 250 msec, defensively\n          wait(250);\n        } catch (InterruptedException ie) {\n          throw new RuntimeException(ie);\n        }\n        if (aborted) {\n          throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n        }\n      }\n    }\n\n","sourceOld":"    /** Called periodically by {@link IndexWriter} while\n     *  merging to see if the merge is aborted. */\n    public synchronized void checkAborted(Directory dir) throws MergeAbortedException {\n      if (aborted) {\n        throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n      }\n\n      while (paused) {\n        try {\n          // In theory we could wait() indefinitely, but we\n          // do 1000 msec, defensively\n          wait(1000);\n        } catch (InterruptedException ie) {\n          throw new RuntimeException(ie);\n        }\n        if (aborted) {\n          throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n        }\n      }\n    }\n\n","bugFix":["8984893e6e8e4eaf80ab863dafae092a2e9b0eaa"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5faf65b6692f15cca0f87bf8666c87899afc619f","date":1420468108,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#checkAborted(Directory).mjava","sourceNew":null,"sourceOld":"    /** Called periodically by {@link IndexWriter} while\n     *  merging to see if the merge is aborted. */\n    public synchronized void checkAborted(Directory dir) throws MergeAbortedException {\n      if (aborted) {\n        throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n      }\n\n      while (paused) {\n        try {\n          // In theory we could wait() indefinitely, but we\n          // do 250 msec, defensively\n          wait(250);\n        } catch (InterruptedException ie) {\n          throw new RuntimeException(ie);\n        }\n        if (aborted) {\n          throw new MergeAbortedException(\"merge is aborted: \" + segString(dir));\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a1346c5dacb766a49ec3b6160a23d2e80073501c":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5faf65b6692f15cca0f87bf8666c87899afc619f":["a1346c5dacb766a49ec3b6160a23d2e80073501c"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5faf65b6692f15cca0f87bf8666c87899afc619f"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a1346c5dacb766a49ec3b6160a23d2e80073501c":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["a1346c5dacb766a49ec3b6160a23d2e80073501c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}