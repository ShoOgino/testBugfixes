{"path":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","sourceNew":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n    lock.lock();\n    try {\n      if (cache == null) {\n        cache = new WeakHashMap<IndexReader,SpanFilterResult>();\n      }\n      final SpanFilterResult cached = cache.get(reader);\n      if (cached != null) return cached;\n    } finally {\n      lock.unlock();\n    }\n    \n    final SpanFilterResult result = filter.bitSpans(reader);\n    lock.lock();\n    try {\n      cache.put(reader, result);\n    } finally {\n      lock.unlock();\n    }\n    \n    return result;\n  }\n\n","sourceOld":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n    lock.lock();\n    try {\n      if (cache == null) {\n        cache = new WeakHashMap<IndexReader,SpanFilterResult>();\n      }\n      final SpanFilterResult cached = cache.get(reader);\n      if (cached != null) return cached;\n    } finally {\n      lock.unlock();\n    }\n    \n    final SpanFilterResult result = filter.bitSpans(reader);\n    lock.lock();\n    try {\n      cache.put(reader, result);\n    } finally {\n      lock.unlock();\n    }\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbf497fc92342be81ff184a144dfa7c96264116b","date":1275079529,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","sourceNew":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? MultiFields.getDeletedDocs(reader) : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(reader);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","sourceOld":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n    lock.lock();\n    try {\n      if (cache == null) {\n        cache = new WeakHashMap<IndexReader,SpanFilterResult>();\n      }\n      final SpanFilterResult cached = cache.get(reader);\n      if (cached != null) return cached;\n    } finally {\n      lock.unlock();\n    }\n    \n    final SpanFilterResult result = filter.bitSpans(reader);\n    lock.lock();\n    try {\n      cache.put(reader, result);\n    } finally {\n      lock.unlock();\n    }\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df3efec034da1483899681baabb1df029e8628c4","date":1294243646,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","sourceNew":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(reader);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","sourceOld":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? MultiFields.getDeletedDocs(reader) : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(reader);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","sourceNew":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(reader);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","sourceOld":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? MultiFields.getDeletedDocs(reader) : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(reader);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","sourceNew":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(reader);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","sourceOld":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? MultiFields.getDeletedDocs(reader) : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(reader);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8323d210478d76a02372693d254b69aac614689","date":1295877066,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","sourceNew":"  private SpanFilterResult getCachedResult(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(context);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","sourceOld":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(reader);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","sourceNew":"  private SpanFilterResult getCachedResult(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(context);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","sourceOld":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(reader);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/CachingSpanFilter#getCachedResult(IndexReader).mjava","sourceNew":null,"sourceOld":"  private SpanFilterResult getCachedResult(IndexReader reader) throws IOException {\n\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    SpanFilterResult result = cache.get(reader, coreKey, delCoreKey);\n    if (result != null) {\n      hitCount++;\n      return result;\n    }\n\n    missCount++;\n    result = filter.bitSpans(reader);\n\n    cache.put(coreKey, delCoreKey, result);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df3efec034da1483899681baabb1df029e8628c4":["cbf497fc92342be81ff184a144dfa7c96264116b"],"70ad682703b8585f5d0a637efec044d57ec05efb":["cbf497fc92342be81ff184a144dfa7c96264116b","df3efec034da1483899681baabb1df029e8628c4"],"c8323d210478d76a02372693d254b69aac614689":["df3efec034da1483899681baabb1df029e8628c4"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","c8323d210478d76a02372693d254b69aac614689"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["cbf497fc92342be81ff184a144dfa7c96264116b","df3efec034da1483899681baabb1df029e8628c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8323d210478d76a02372693d254b69aac614689"],"cbf497fc92342be81ff184a144dfa7c96264116b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["868da859b43505d9d2a023bfeae6dd0c795f5295","c8323d210478d76a02372693d254b69aac614689"]},"commit2Childs":{"df3efec034da1483899681baabb1df029e8628c4":["70ad682703b8585f5d0a637efec044d57ec05efb","c8323d210478d76a02372693d254b69aac614689","868da859b43505d9d2a023bfeae6dd0c795f5295"],"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"c8323d210478d76a02372693d254b69aac614689":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"cbf497fc92342be81ff184a144dfa7c96264116b":["df3efec034da1483899681baabb1df029e8628c4","70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cbf497fc92342be81ff184a144dfa7c96264116b"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}