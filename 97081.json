{"path":"solr/core/src/test/org/apache/solr/search/TestFiltering#frangeStr(boolean,int,int,boolean,int,boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFiltering#frangeStr(boolean,int,int,boolean,int,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestFiltering#frangeStr(boolean,int,int,boolean,int,boolean).mjava","sourceNew":"  String frangeStr(boolean negative, int l, int u, boolean cache, int cost, boolean exclude) {\n\n    String topLev=\"\";\n    if (!cache || exclude) {\n      topLev = \"\" + (cache || random.nextBoolean() ? \" cache=\"+cache : \"\")\n        + (cost!=0 ? \" cost=\"+cost : \"\")\n        + ((exclude) ? \" tag=t\" : \"\");\n    }\n\n    String ret = \"{!frange v=\"+f+\" l=\"+l+\" u=\"+u;\n    if (negative) {\n      ret = \"-_query_:\\\"\" + ret + \"}\\\"\";\n      if (topLev.length()>0) {\n        ret = \"{!\" + topLev + \"}\" + ret; // add options at top level (can't be on frange)\n      }\n    } else {\n      ret += topLev + \"}\"; // add options right to frange\n    }\n\n    return ret;\n  }\n\n","sourceOld":"  String frangeStr(boolean negative, int l, int u, boolean cache, int cost, boolean exclude) {\n\n    String topLev=\"\";\n    if (!cache || exclude) {\n      topLev = \"\" + (cache || random.nextBoolean() ? \" cache=\"+cache : \"\")\n        + (cost!=0 ? \" cost=\"+cost : \"\")\n        + ((exclude) ? \" tag=t\" : \"\");\n    }\n\n    String ret = \"{!frange v=\"+f+\" l=\"+l+\" u=\"+u;\n    if (negative) {\n      ret = \"-_query_:\\\"\" + ret + \"}\\\"\";\n      if (topLev.length()>0) {\n        ret = \"{!\" + topLev + \"}\" + ret; // add options at top level (can't be on frange)\n      }\n    } else {\n      ret += topLev + \"}\"; // add options right to frange\n    }\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFiltering#frangeStr(boolean,int,int,boolean,int,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestFiltering#frangeStr(boolean,int,int,boolean,int,boolean).mjava","sourceNew":"  String frangeStr(boolean negative, int l, int u, boolean cache, int cost, boolean exclude) {\n\n    String topLev=\"\";\n    if (!cache || exclude) {\n      topLev = \"\" + (cache || random.nextBoolean() ? \" cache=\"+cache : \"\")\n        + (cost!=0 ? \" cost=\"+cost : \"\")\n        + ((exclude) ? \" tag=t\" : \"\");\n    }\n\n    String ret = \"{!frange v=\"+f+\" l=\"+l+\" u=\"+u;\n    if (negative) {\n      ret = \"-_query_:\\\"\" + ret + \"}\\\"\";\n      if (topLev.length()>0) {\n        ret = \"{!\" + topLev + \"}\" + ret; // add options at top level (can't be on frange)\n      }\n    } else {\n      ret += topLev + \"}\"; // add options right to frange\n    }\n\n    return ret;\n  }\n\n","sourceOld":"  String frangeStr(boolean negative, int l, int u, boolean cache, int cost, boolean exclude) {\n\n    String topLev=\"\";\n    if (!cache || exclude) {\n      topLev = \"\" + (cache || random.nextBoolean() ? \" cache=\"+cache : \"\")\n        + (cost!=0 ? \" cost=\"+cost : \"\")\n        + ((exclude) ? \" tag=t\" : \"\");\n    }\n\n    String ret = \"{!frange v=\"+f+\" l=\"+l+\" u=\"+u;\n    if (negative) {\n      ret = \"-_query_:\\\"\" + ret + \"}\\\"\";\n      if (topLev.length()>0) {\n        ret = \"{!\" + topLev + \"}\" + ret; // add options at top level (can't be on frange)\n      }\n    } else {\n      ret += topLev + \"}\"; // add options right to frange\n    }\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFiltering#frangeStr(boolean,int,int,boolean,int,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestFiltering#frangeStr(boolean,int,int,boolean,int,boolean).mjava","sourceNew":"  String frangeStr(boolean negative, int l, int u, boolean cache, int cost, boolean exclude) {\n\n    String topLev=\"\";\n    if (!cache || exclude) {\n      topLev = \"\" + (cache || random.nextBoolean() ? \" cache=\"+cache : \"\")\n        + (cost!=0 ? \" cost=\"+cost : \"\")\n        + ((exclude) ? \" tag=t\" : \"\");\n    }\n\n    String ret = \"{!frange v=\"+f+\" l=\"+l+\" u=\"+u;\n    if (negative) {\n      ret = \"-_query_:\\\"\" + ret + \"}\\\"\";\n      if (topLev.length()>0) {\n        ret = \"{!\" + topLev + \"}\" + ret; // add options at top level (can't be on frange)\n      }\n    } else {\n      ret += topLev + \"}\"; // add options right to frange\n    }\n\n    return ret;\n  }\n\n","sourceOld":"  String frangeStr(boolean negative, int l, int u, boolean cache, int cost, boolean exclude) {\n\n    String topLev=\"\";\n    if (!cache || exclude) {\n      topLev = \"\" + (cache || random.nextBoolean() ? \" cache=\"+cache : \"\")\n        + (cost!=0 ? \" cost=\"+cost : \"\")\n        + ((exclude) ? \" tag=t\" : \"\");\n    }\n\n    String ret = \"{!frange v=\"+f+\" l=\"+l+\" u=\"+u;\n    if (negative) {\n      ret = \"-_query_:\\\"\" + ret + \"}\\\"\";\n      if (topLev.length()>0) {\n        ret = \"{!\" + topLev + \"}\" + ret; // add options at top level (can't be on frange)\n      }\n    } else {\n      ret += topLev + \"}\"; // add options right to frange\n    }\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFiltering#frangeStr(boolean,int,int,boolean,int,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFiltering#frangeStr(boolean,int,int,boolean,int,boolean).mjava","sourceNew":"  String frangeStr(boolean negative, int l, int u, boolean cache, int cost, boolean exclude) {\n\n    String topLev=\"\";\n    if (!cache || exclude) {\n      topLev = \"\" + (cache || random().nextBoolean() ? \" cache=\"+cache : \"\")\n        + (cost!=0 ? \" cost=\"+cost : \"\")\n        + ((exclude) ? \" tag=t\" : \"\");\n    }\n\n    String ret = \"{!frange v=\"+f+\" l=\"+l+\" u=\"+u;\n    if (negative) {\n      ret = \"-_query_:\\\"\" + ret + \"}\\\"\";\n      if (topLev.length()>0) {\n        ret = \"{!\" + topLev + \"}\" + ret; // add options at top level (can't be on frange)\n      }\n    } else {\n      ret += topLev + \"}\"; // add options right to frange\n    }\n\n    return ret;\n  }\n\n","sourceOld":"  String frangeStr(boolean negative, int l, int u, boolean cache, int cost, boolean exclude) {\n\n    String topLev=\"\";\n    if (!cache || exclude) {\n      topLev = \"\" + (cache || random.nextBoolean() ? \" cache=\"+cache : \"\")\n        + (cost!=0 ? \" cost=\"+cost : \"\")\n        + ((exclude) ? \" tag=t\" : \"\");\n    }\n\n    String ret = \"{!frange v=\"+f+\" l=\"+l+\" u=\"+u;\n    if (negative) {\n      ret = \"-_query_:\\\"\" + ret + \"}\\\"\";\n      if (topLev.length()>0) {\n        ret = \"{!\" + topLev + \"}\" + ret; // add options at top level (can't be on frange)\n      }\n    } else {\n      ret += topLev + \"}\"; // add options right to frange\n    }\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16b25963ad38ed289ebf0f7af31269fa1ce80a11","date":1442083896,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFiltering#frangeStr(String,boolean,int,int,boolean,int,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFiltering#frangeStr(boolean,int,int,boolean,int,boolean).mjava","sourceNew":"  String frangeStr(String field, boolean negative, int l, int u, boolean cache, int cost, boolean exclude) {\n\n    String topLev=\"\";\n    if (!cache || exclude) {\n      topLev = \"\" + (cache || random().nextBoolean() ? \" cache=\"+cache : \"\")\n        + (cost!=0 ? \" cost=\"+cost : \"\")\n        + ((exclude) ? \" tag=t\" : \"\");\n    }\n\n    String ret = \"{!frange v=\"+field+\" l=\"+l+\" u=\"+u;\n    if (negative) {\n      ret = \"-_query_:\\\"\" + ret + \"}\\\"\";\n      if (topLev.length()>0) {\n        ret = \"{!\" + topLev + \"}\" + ret; // add options at top level (can't be on frange)\n      }\n    } else {\n      ret += topLev + \"}\"; // add options right to frange\n    }\n\n    return ret;\n  }\n\n","sourceOld":"  String frangeStr(boolean negative, int l, int u, boolean cache, int cost, boolean exclude) {\n\n    String topLev=\"\";\n    if (!cache || exclude) {\n      topLev = \"\" + (cache || random().nextBoolean() ? \" cache=\"+cache : \"\")\n        + (cost!=0 ? \" cost=\"+cost : \"\")\n        + ((exclude) ? \" tag=t\" : \"\");\n    }\n\n    String ret = \"{!frange v=\"+f+\" l=\"+l+\" u=\"+u;\n    if (negative) {\n      ret = \"-_query_:\\\"\" + ret + \"}\\\"\";\n      if (topLev.length()>0) {\n        ret = \"{!\" + topLev + \"}\" + ret; // add options at top level (can't be on frange)\n      }\n    } else {\n      ret += topLev + \"}\"; // add options right to frange\n    }\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"16b25963ad38ed289ebf0f7af31269fa1ce80a11":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["16b25963ad38ed289ebf0f7af31269fa1ce80a11"]},"commit2Childs":{"16b25963ad38ed289ebf0f7af31269fa1ce80a11":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["16b25963ad38ed289ebf0f7af31269fa1ce80a11"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}