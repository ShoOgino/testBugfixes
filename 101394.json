{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/DocRouter.Range#compareTo(Range).mjava","commits":[{"id":"cee263b0163fa111cfda384934079baae77fccac","date":1382523980,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/DocRouter.Range#compareTo(Range).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int compareTo(Range that) {\n      int mincomp = Integer.valueOf(this.min).compareTo(that.min);\n      return mincomp == 0 ? Integer.valueOf(this.max).compareTo(that.max) : mincomp;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02a44d5e01a267563c3713e7a918b6ad08cc8052","date":1490708104,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/DocRouter.Range#compareTo(Range).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/DocRouter.Range#compareTo(Range).mjava","sourceNew":"    @Override\n    public int compareTo(Range that) {\n      int mincomp = Integer.compare(this.min, that.min);\n      return mincomp == 0 ? Integer.compare(this.max, that.max) : mincomp;\n    }\n\n","sourceOld":"    @Override\n    public int compareTo(Range that) {\n      int mincomp = Integer.valueOf(this.min).compareTo(that.min);\n      return mincomp == 0 ? Integer.valueOf(this.max).compareTo(that.max) : mincomp;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e10a66eeb8616a226c44e77c45ed0afc96ef423","date":1490873945,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/DocRouter.Range#compareTo(Range).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/DocRouter.Range#compareTo(Range).mjava","sourceNew":"    @Override\n    public int compareTo(Range that) {\n      int mincomp = Integer.compare(this.min, that.min);\n      return mincomp == 0 ? Integer.compare(this.max, that.max) : mincomp;\n    }\n\n","sourceOld":"    @Override\n    public int compareTo(Range that) {\n      int mincomp = Integer.valueOf(this.min).compareTo(that.min);\n      return mincomp == 0 ? Integer.valueOf(this.max).compareTo(that.max) : mincomp;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cee263b0163fa111cfda384934079baae77fccac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5e10a66eeb8616a226c44e77c45ed0afc96ef423":["cee263b0163fa111cfda384934079baae77fccac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02a44d5e01a267563c3713e7a918b6ad08cc8052"],"02a44d5e01a267563c3713e7a918b6ad08cc8052":["cee263b0163fa111cfda384934079baae77fccac"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cee263b0163fa111cfda384934079baae77fccac"],"cee263b0163fa111cfda384934079baae77fccac":["5e10a66eeb8616a226c44e77c45ed0afc96ef423","02a44d5e01a267563c3713e7a918b6ad08cc8052"],"5e10a66eeb8616a226c44e77c45ed0afc96ef423":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"02a44d5e01a267563c3713e7a918b6ad08cc8052":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["5e10a66eeb8616a226c44e77c45ed0afc96ef423","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}