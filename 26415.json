{"path":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil.Pair#equals(Object,Object,Object,Object).mjava","commits":[{"id":"5c9841ea9df1e03b039e461a66bccbf584ef78ce","date":1164236101,"type":0,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil.Pair#equals(Object,Object,Object,Object).mjava","pathOld":"/dev/null","sourceNew":"    /** Compares two 'pairs' <code>x</code> and <code>y</code> for equality.\n     * \n     * In other words determines <code>xA.equals(yA)</code> and <code>xB.equals(yB)</code>, \n     * taking care of <code>null</code> values.\n     * This is a static method that avoids the inefficiency of temporary {@link Pair} objects.\n     * \n     * @return <code>true</code> if the pair <code>x</code> and the pair <code>y</code> are equal; <code>false</code> otherwise.\n     */\n    public static boolean equals(Object xA, Object yA, Object xB, Object yB) {\n      // compare A\n      if (xA != yA) {\n        if (xA == null && yA != null)\n          return false;\n        if (xA != null && yA == null)\n          return false;\n        if (!xA.equals(yA))\n          return false;\n      }\n\n      // compare B\n      if (xB != yB) {\n        if (xB == null && yB != null)\n          return false;\n        if (xB != null && yB == null)\n          return false;\n        if (!xB.equals(yB))\n          return false;\n      }\n\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4f6aaa14836889ddc3c570c5637720aa36b01b","date":1164238182,"type":4,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil.Pair#equals(Object,Object,Object,Object).mjava","sourceNew":null,"sourceOld":"    /** Compares two 'pairs' <code>x</code> and <code>y</code> for equality.\n     * \n     * In other words determines <code>xA.equals(yA)</code> and <code>xB.equals(yB)</code>, \n     * taking care of <code>null</code> values.\n     * This is a static method that avoids the inefficiency of temporary {@link Pair} objects.\n     * \n     * @return <code>true</code> if the pair <code>x</code> and the pair <code>y</code> are equal; <code>false</code> otherwise.\n     */\n    public static boolean equals(Object xA, Object yA, Object xB, Object yB) {\n      // compare A\n      if (xA != yA) {\n        if (xA == null && yA != null)\n          return false;\n        if (xA != null && yA == null)\n          return false;\n        if (!xA.equals(yA))\n          return false;\n      }\n\n      // compare B\n      if (xB != yB) {\n        if (xB == null && yB != null)\n          return false;\n        if (xB != null && yB == null)\n          return false;\n        if (!xB.equals(yB))\n          return false;\n      }\n\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4f6aaa14836889ddc3c570c5637720aa36b01b":["5c9841ea9df1e03b039e461a66bccbf584ef78ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4f6aaa14836889ddc3c570c5637720aa36b01b"],"5c9841ea9df1e03b039e461a66bccbf584ef78ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4f6aaa14836889ddc3c570c5637720aa36b01b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5c9841ea9df1e03b039e461a66bccbf584ef78ce"],"5c9841ea9df1e03b039e461a66bccbf584ef78ce":["1e4f6aaa14836889ddc3c570c5637720aa36b01b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}