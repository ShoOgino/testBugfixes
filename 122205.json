{"path":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#copyNamedListIntoArrayByDocPosInResponse(NamedList,Map[Object,ShardDoc],Map.Entry[String,Object][]).mjava","commits":[{"id":"6fbf043f7a109d13b86b6fc6fee3953b0c103c24","date":1450713625,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#copyNamedListIntoArrayByDocPosInResponse(NamedList,Map[Object,ShardDoc],Map.Entry[String,Object][]).mjava","pathOld":"/dev/null","sourceNew":"  /** Copies the given {@code namedList} assumed to have doc uniqueKey keyed data into {@code destArr}\n   * at the position of the document in the response.  destArr is assumed to be the same size as\n   * {@code resultIds} is.  {@code resultIds} comes from {@link ResponseBuilder#resultIds}.  If the doc key\n   * isn't in {@code resultIds} then it is ignored.\n   * Note: most likely you will call {@link #removeNulls(Map.Entry[], NamedList)} sometime after calling this. */\n  public static void copyNamedListIntoArrayByDocPosInResponse(NamedList namedList, Map<Object, ShardDoc> resultIds,\n                                                              Map.Entry<String, Object>[] destArr) {\n    assert resultIds.size() == destArr.length;\n    for (int i = 0; i < namedList.size(); i++) {\n      String id = namedList.getName(i);\n      // TODO: lookup won't work for non-string ids... String vs Float\n      ShardDoc sdoc = resultIds.get(id);\n      if (sdoc != null) { // maybe null when rb.onePassDistributedQuery\n        int idx = sdoc.positionInResponse;\n        destArr[idx] = new NamedList.NamedListEntry<>(id, namedList.getVal(i));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#copyNamedListIntoArrayByDocPosInResponse(NamedList,Map[Object,ShardDoc],Map.Entry[String,Object][]).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#copyNamedListIntoArrayByDocPosInResponse(NamedList,Map[Object,ShardDoc],Map.Entry[String,Object][]).mjava","sourceNew":"  /** Copies the given {@code namedList} assumed to have doc uniqueKey keyed data into {@code destArr}\n   * at the position of the document in the response.  destArr is assumed to be the same size as\n   * {@code resultIds} is.  {@code resultIds} comes from {@link ResponseBuilder#resultIds}.  If the doc key\n   * isn't in {@code resultIds} then it is ignored.\n   * Note: most likely you will call {@link #removeNulls(Map.Entry[], NamedList)} sometime after calling this. */\n  public static void copyNamedListIntoArrayByDocPosInResponse(@SuppressWarnings({\"rawtypes\"})NamedList namedList, Map<Object, ShardDoc> resultIds,\n                                                              Map.Entry<String, Object>[] destArr) {\n    assert resultIds.size() == destArr.length;\n    for (int i = 0; i < namedList.size(); i++) {\n      String id = namedList.getName(i);\n      // TODO: lookup won't work for non-string ids... String vs Float\n      ShardDoc sdoc = resultIds.get(id);\n      if (sdoc != null) { // maybe null when rb.onePassDistributedQuery\n        int idx = sdoc.positionInResponse;\n        destArr[idx] = new NamedList.NamedListEntry<>(id, namedList.getVal(i));\n      }\n    }\n  }\n\n","sourceOld":"  /** Copies the given {@code namedList} assumed to have doc uniqueKey keyed data into {@code destArr}\n   * at the position of the document in the response.  destArr is assumed to be the same size as\n   * {@code resultIds} is.  {@code resultIds} comes from {@link ResponseBuilder#resultIds}.  If the doc key\n   * isn't in {@code resultIds} then it is ignored.\n   * Note: most likely you will call {@link #removeNulls(Map.Entry[], NamedList)} sometime after calling this. */\n  public static void copyNamedListIntoArrayByDocPosInResponse(NamedList namedList, Map<Object, ShardDoc> resultIds,\n                                                              Map.Entry<String, Object>[] destArr) {\n    assert resultIds.size() == destArr.length;\n    for (int i = 0; i < namedList.size(); i++) {\n      String id = namedList.getName(i);\n      // TODO: lookup won't work for non-string ids... String vs Float\n      ShardDoc sdoc = resultIds.get(id);\n      if (sdoc != null) { // maybe null when rb.onePassDistributedQuery\n        int idx = sdoc.positionInResponse;\n        destArr[idx] = new NamedList.NamedListEntry<>(id, namedList.getVal(i));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06a8891f085f71282bb3ece1b1732b68f07813a3":["6fbf043f7a109d13b86b6fc6fee3953b0c103c24"],"6fbf043f7a109d13b86b6fc6fee3953b0c103c24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6fbf043f7a109d13b86b6fc6fee3953b0c103c24"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6fbf043f7a109d13b86b6fc6fee3953b0c103c24":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}