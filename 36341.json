{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#disableScoring(BulkScorer).mjava","commits":[{"id":"b2262f0d8ead49d04485950fba849e166dbe28fb","date":1451569279,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#disableScoring(BulkScorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#disableScoring(BulkScorer).mjava","sourceNew":"  static BulkScorer disableScoring(final BulkScorer scorer) {\n    return new BulkScorer() {\n\n      @Override\n      public int score(final LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n        final LeafCollector noScoreCollector = new LeafCollector() {\n          FakeScorer fake = new FakeScorer();\n\n          @Override\n          public void setScorer(Scorer scorer) throws IOException {\n            collector.setScorer(fake);\n          }\n\n          @Override\n          public void collect(int doc) throws IOException {\n            fake.doc = doc;\n            collector.collect(doc);\n          }\n        };\n        return scorer.score(noScoreCollector, acceptDocs, min, max);\n      }\n\n      @Override\n      public long cost() {\n        return scorer.cost();\n      }\n    };\n  }\n\n","sourceOld":"  private static BulkScorer disableScoring(final BulkScorer scorer) {\n    return new BulkScorer() {\n\n      @Override\n      public int score(final LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n        final LeafCollector noScoreCollector = new LeafCollector() {\n          FakeScorer fake = new FakeScorer();\n\n          @Override\n          public void setScorer(Scorer scorer) throws IOException {\n            collector.setScorer(fake);\n          }\n\n          @Override\n          public void collect(int doc) throws IOException {\n            fake.doc = doc;\n            collector.collect(doc);\n          }\n        };\n        return scorer.score(noScoreCollector, acceptDocs, min, max);\n      }\n\n      @Override\n      public long cost() {\n        return scorer.cost();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#disableScoring(BulkScorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#disableScoring(BulkScorer).mjava","sourceNew":"  static BulkScorer disableScoring(final BulkScorer scorer) {\n    return new BulkScorer() {\n\n      @Override\n      public int score(final LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n        final LeafCollector noScoreCollector = new LeafCollector() {\n          FakeScorer fake = new FakeScorer();\n\n          @Override\n          public void setScorer(Scorable scorer) throws IOException {\n            collector.setScorer(fake);\n          }\n\n          @Override\n          public void collect(int doc) throws IOException {\n            fake.doc = doc;\n            collector.collect(doc);\n          }\n        };\n        return scorer.score(noScoreCollector, acceptDocs, min, max);\n      }\n\n      @Override\n      public long cost() {\n        return scorer.cost();\n      }\n    };\n  }\n\n","sourceOld":"  static BulkScorer disableScoring(final BulkScorer scorer) {\n    return new BulkScorer() {\n\n      @Override\n      public int score(final LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n        final LeafCollector noScoreCollector = new LeafCollector() {\n          FakeScorer fake = new FakeScorer();\n\n          @Override\n          public void setScorer(Scorer scorer) throws IOException {\n            collector.setScorer(fake);\n          }\n\n          @Override\n          public void collect(int doc) throws IOException {\n            fake.doc = doc;\n            collector.collect(doc);\n          }\n        };\n        return scorer.score(noScoreCollector, acceptDocs, min, max);\n      }\n\n      @Override\n      public long cost() {\n        return scorer.cost();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3","date":1536316907,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#disableScoring(BulkScorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#disableScoring(BulkScorer).mjava","sourceNew":"  static BulkScorer disableScoring(final BulkScorer scorer) {\n    return new BulkScorer() {\n\n      @Override\n      public int score(final LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n        final LeafCollector noScoreCollector = new LeafCollector() {\n          ScoreAndDoc fake = new ScoreAndDoc();\n\n          @Override\n          public void setScorer(Scorable scorer) throws IOException {\n            collector.setScorer(fake);\n          }\n\n          @Override\n          public void collect(int doc) throws IOException {\n            fake.doc = doc;\n            collector.collect(doc);\n          }\n        };\n        return scorer.score(noScoreCollector, acceptDocs, min, max);\n      }\n\n      @Override\n      public long cost() {\n        return scorer.cost();\n      }\n    };\n  }\n\n","sourceOld":"  static BulkScorer disableScoring(final BulkScorer scorer) {\n    return new BulkScorer() {\n\n      @Override\n      public int score(final LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n        final LeafCollector noScoreCollector = new LeafCollector() {\n          FakeScorer fake = new FakeScorer();\n\n          @Override\n          public void setScorer(Scorable scorer) throws IOException {\n            collector.setScorer(fake);\n          }\n\n          @Override\n          public void collect(int doc) throws IOException {\n            fake.doc = doc;\n            collector.collect(doc);\n          }\n        };\n        return scorer.score(noScoreCollector, acceptDocs, min, max);\n      }\n\n      @Override\n      public long cost() {\n        return scorer.cost();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["b2262f0d8ead49d04485950fba849e166dbe28fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"b2262f0d8ead49d04485950fba849e166dbe28fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"]},"commit2Childs":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b2262f0d8ead49d04485950fba849e166dbe28fb"],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b2262f0d8ead49d04485950fba849e166dbe28fb":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}