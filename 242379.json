{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/SimplePatternTokenizer#nextCodeUnit().mjava","commits":[{"id":"5ddee54b1c3df60fd6198e3aa64c78038a1be8df","date":1487008231,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/SimplePatternTokenizer#nextCodeUnit().mjava","pathOld":"/dev/null","sourceNew":"  private int nextCodeUnit() throws IOException {\n    int result;\n    if (pendingUpto < pendingLimit) {\n      result = pendingChars[pendingUpto++];\n      if (pendingUpto == pendingLimit) {\n        // We used up the pending buffer\n        pendingUpto = 0;\n        pendingLimit = 0;\n      }\n      appendToToken((char) result);\n      offset++;\n    } else if (bufferLimit == -1) {\n      return -1;\n    } else {\n      assert bufferNextRead <= bufferLimit: \"bufferNextRead=\" + bufferNextRead + \" bufferLimit=\" + bufferLimit;\n      if (bufferNextRead == bufferLimit) {\n        bufferLimit = input.read(buffer, 0, buffer.length);\n        if (bufferLimit == -1) {\n          return -1;\n        }\n        bufferNextRead = 0;\n      }\n      result = buffer[bufferNextRead++];\n      offset++;\n      appendToToken((char) result);\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"022a4de90e0479b604264ca9c2e134c996454ab3","date":1487118265,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/SimplePatternTokenizer#nextCodeUnit().mjava","pathOld":"/dev/null","sourceNew":"  private int nextCodeUnit() throws IOException {\n    int result;\n    if (pendingUpto < pendingLimit) {\n      result = pendingChars[pendingUpto++];\n      if (pendingUpto == pendingLimit) {\n        // We used up the pending buffer\n        pendingUpto = 0;\n        pendingLimit = 0;\n      }\n      appendToToken((char) result);\n      offset++;\n    } else if (bufferLimit == -1) {\n      return -1;\n    } else {\n      assert bufferNextRead <= bufferLimit: \"bufferNextRead=\" + bufferNextRead + \" bufferLimit=\" + bufferLimit;\n      if (bufferNextRead == bufferLimit) {\n        bufferLimit = input.read(buffer, 0, buffer.length);\n        if (bufferLimit == -1) {\n          return -1;\n        }\n        bufferNextRead = 0;\n      }\n      result = buffer[bufferNextRead++];\n      offset++;\n      appendToToken((char) result);\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96","date":1487122334,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/SimplePatternTokenizer#nextCodeUnit().mjava","sourceNew":null,"sourceOld":"  private int nextCodeUnit() throws IOException {\n    int result;\n    if (pendingUpto < pendingLimit) {\n      result = pendingChars[pendingUpto++];\n      if (pendingUpto == pendingLimit) {\n        // We used up the pending buffer\n        pendingUpto = 0;\n        pendingLimit = 0;\n      }\n      appendToToken((char) result);\n      offset++;\n    } else if (bufferLimit == -1) {\n      return -1;\n    } else {\n      assert bufferNextRead <= bufferLimit: \"bufferNextRead=\" + bufferNextRead + \" bufferLimit=\" + bufferLimit;\n      if (bufferNextRead == bufferLimit) {\n        bufferLimit = input.read(buffer, 0, buffer.length);\n        if (bufferLimit == -1) {\n          return -1;\n        }\n        bufferNextRead = 0;\n      }\n      result = buffer[bufferNextRead++];\n      offset++;\n      appendToToken((char) result);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"897b06b1364bd1f658a8be7591e43f0851458e7f","date":1487123008,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/SimplePatternTokenizer#nextCodeUnit().mjava","pathOld":"/dev/null","sourceNew":"  private int nextCodeUnit() throws IOException {\n    int result;\n    if (pendingUpto < pendingLimit) {\n      result = pendingChars[pendingUpto++];\n      if (pendingUpto == pendingLimit) {\n        // We used up the pending buffer\n        pendingUpto = 0;\n        pendingLimit = 0;\n      }\n      appendToToken((char) result);\n      offset++;\n    } else if (bufferLimit == -1) {\n      return -1;\n    } else {\n      assert bufferNextRead <= bufferLimit: \"bufferNextRead=\" + bufferNextRead + \" bufferLimit=\" + bufferLimit;\n      if (bufferNextRead == bufferLimit) {\n        bufferLimit = input.read(buffer, 0, buffer.length);\n        if (bufferLimit == -1) {\n          return -1;\n        }\n        bufferNextRead = 0;\n      }\n      result = buffer[bufferNextRead++];\n      offset++;\n      appendToToken((char) result);\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["022a4de90e0479b604264ca9c2e134c996454ab3"],"022a4de90e0479b604264ca9c2e134c996454ab3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ddee54b1c3df60fd6198e3aa64c78038a1be8df"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"5ddee54b1c3df60fd6198e3aa64c78038a1be8df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"022a4de90e0479b604264ca9c2e134c996454ab3":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["022a4de90e0479b604264ca9c2e134c996454ab3","5ddee54b1c3df60fd6198e3aa64c78038a1be8df"],"5ddee54b1c3df60fd6198e3aa64c78038a1be8df":["022a4de90e0479b604264ca9c2e134c996454ab3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}