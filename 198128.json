{"path":"lucene/contrib/analyzers/stempel/src/java/org/egothor/stemmer/Trie#getAll(CharSequence).mjava","commits":[{"id":"67748b41458c73d49a48168362cc7f4c960a2542","date":1272890662,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/stempel/src/java/org/egothor/stemmer/Trie#getAll(CharSequence).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Gets the all attribute of the Trie object\n   * \n   * @param key Description of the Parameter\n   * @return The all value\n   */\n  public CharSequence[] getAll(CharSequence key) {\n    int res[] = new int[key.length()];\n    int resc = 0;\n    Row now = getRow(root);\n    int w;\n    StrEnum e = new StrEnum(key, forward);\n    boolean br = false;\n    \n    for (int i = 0; i < key.length() - 1; i++) {\n      Character ch = new Character(e.next());\n      w = now.getCmd(ch);\n      if (w >= 0) {\n        int n = w;\n        for (int j = 0; j < resc; j++) {\n          if (n == res[j]) {\n            n = -1;\n            break;\n          }\n        }\n        if (n >= 0) {\n          res[resc++] = n;\n        }\n      }\n      w = now.getRef(ch);\n      if (w >= 0) {\n        now = getRow(w);\n      } else {\n        br = true;\n        break;\n      }\n    }\n    if (br == false) {\n      w = now.getCmd(new Character(e.next()));\n      if (w >= 0) {\n        int n = w;\n        for (int j = 0; j < resc; j++) {\n          if (n == res[j]) {\n            n = -1;\n            break;\n          }\n        }\n        if (n >= 0) {\n          res[resc++] = n;\n        }\n      }\n    }\n    \n    if (resc < 1) {\n      return null;\n    }\n    CharSequence R[] = new CharSequence[resc];\n    for (int j = 0; j < resc; j++) {\n      R[j] = cmds.get(res[j]);\n    }\n    return R;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/stempel/src/java/org/egothor/stemmer/Trie#getAll(CharSequence).mjava","pathOld":"lucene/contrib/analyzers/stempel/src/java/org/egothor/stemmer/Trie#getAll(CharSequence).mjava","sourceNew":"  /**\n   * Gets the all attribute of the Trie object\n   * \n   * @param key Description of the Parameter\n   * @return The all value\n   */\n  public CharSequence[] getAll(CharSequence key) {\n    int res[] = new int[key.length()];\n    int resc = 0;\n    Row now = getRow(root);\n    int w;\n    StrEnum e = new StrEnum(key, forward);\n    boolean br = false;\n    \n    for (int i = 0; i < key.length() - 1; i++) {\n      Character ch = new Character(e.next());\n      w = now.getCmd(ch);\n      if (w >= 0) {\n        int n = w;\n        for (int j = 0; j < resc; j++) {\n          if (n == res[j]) {\n            n = -1;\n            break;\n          }\n        }\n        if (n >= 0) {\n          res[resc++] = n;\n        }\n      }\n      w = now.getRef(ch);\n      if (w >= 0) {\n        now = getRow(w);\n      } else {\n        br = true;\n        break;\n      }\n    }\n    if (br == false) {\n      w = now.getCmd(new Character(e.next()));\n      if (w >= 0) {\n        int n = w;\n        for (int j = 0; j < resc; j++) {\n          if (n == res[j]) {\n            n = -1;\n            break;\n          }\n        }\n        if (n >= 0) {\n          res[resc++] = n;\n        }\n      }\n    }\n    \n    if (resc < 1) {\n      return null;\n    }\n    CharSequence R[] = new CharSequence[resc];\n    for (int j = 0; j < resc; j++) {\n      R[j] = cmds.get(res[j]);\n    }\n    return R;\n  }\n\n","sourceOld":"  /**\n   * Gets the all attribute of the Trie object\n   * \n   * @param key Description of the Parameter\n   * @return The all value\n   */\n  public CharSequence[] getAll(CharSequence key) {\n    int res[] = new int[key.length()];\n    int resc = 0;\n    Row now = getRow(root);\n    int w;\n    StrEnum e = new StrEnum(key, forward);\n    boolean br = false;\n    \n    for (int i = 0; i < key.length() - 1; i++) {\n      Character ch = new Character(e.next());\n      w = now.getCmd(ch);\n      if (w >= 0) {\n        int n = w;\n        for (int j = 0; j < resc; j++) {\n          if (n == res[j]) {\n            n = -1;\n            break;\n          }\n        }\n        if (n >= 0) {\n          res[resc++] = n;\n        }\n      }\n      w = now.getRef(ch);\n      if (w >= 0) {\n        now = getRow(w);\n      } else {\n        br = true;\n        break;\n      }\n    }\n    if (br == false) {\n      w = now.getCmd(new Character(e.next()));\n      if (w >= 0) {\n        int n = w;\n        for (int j = 0; j < resc; j++) {\n          if (n == res[j]) {\n            n = -1;\n            break;\n          }\n        }\n        if (n >= 0) {\n          res[resc++] = n;\n        }\n      }\n    }\n    \n    if (resc < 1) {\n      return null;\n    }\n    CharSequence R[] = new CharSequence[resc];\n    for (int j = 0; j < resc; j++) {\n      R[j] = cmds.get(res[j]);\n    }\n    return R;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"67748b41458c73d49a48168362cc7f4c960a2542":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["67748b41458c73d49a48168362cc7f4c960a2542"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["67748b41458c73d49a48168362cc7f4c960a2542"],"67748b41458c73d49a48168362cc7f4c960a2542":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}