{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    MockRAMDirectory rd = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(rd, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    Random random = newRandom();\n    rd = newDirectory(random);\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(random, TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    MockRAMDirectory rd = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(rd, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    Random random = newRandom();\n    rd = newDirectory(random);\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(random, TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(newField(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(newField(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(newField(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(newField(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory rd = new RAMDirectory();\n    IndexWriter w = new IndexWriter(rd, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(new Field(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a53a291ad9b1cc050d846b68758c061a55d52734","date":1310437344,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(newField(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(newField(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af","43b04c27924fe393e38e9f0986e32c634f261859"],"a53a291ad9b1cc050d846b68758c061a55d52734":["43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a53a291ad9b1cc050d846b68758c061a55d52734"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["43b04c27924fe393e38e9f0986e32c634f261859"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"a53a291ad9b1cc050d846b68758c061a55d52734":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43b04c27924fe393e38e9f0986e32c634f261859":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a53a291ad9b1cc050d846b68758c061a55d52734"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}