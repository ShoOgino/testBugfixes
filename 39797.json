{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcbc12aa8147f5203ca283e7252ba4280d6ffd16","date":1305663400,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", TextField.TYPE_STORED, variedFieldValue));\n      doc.add(new Field(\"repetitiveField\", TextField.TYPE_STORED, repetitiveFieldValue));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"193a8346fc41165af561d084bb5f40a62125a878","date":1315971230,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", TextField.TYPE_STORED, variedFieldValue));\n      doc.add(new Field(\"repetitiveField\", TextField.TYPE_STORED, repetitiveFieldValue));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", TextField.TYPE_STORED, variedFieldValue));\n      doc.add(new Field(\"repetitiveField\", TextField.TYPE_STORED, repetitiveFieldValue));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, TextField.TYPE_STORED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", TextField.TYPE_STORED, variedFieldValue));\n      doc.add(new Field(\"repetitiveField\", TextField.TYPE_STORED, repetitiveFieldValue));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf","date":1323050351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, TextField.TYPE_STORED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, TextField.TYPE_STORED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, TextField.TYPE_STORED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, TextField.TYPE_STORED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, TextField.TYPE_STORED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, TextField.TYPE_STORED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, TextField.TYPE_STORED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, TextField.TYPE_STORED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, TextField.TYPE_STORED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, TextField.TYPE_STORED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["0f080986da691a3bba7b757f43ab72cdc82b57ce","43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["43b04c27924fe393e38e9f0986e32c634f261859"],"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["43b04c27924fe393e38e9f0986e32c634f261859","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"a3776dccca01c11e7046323cfad46a3b4a471233":["43b04c27924fe393e38e9f0986e32c634f261859","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"193a8346fc41165af561d084bb5f40a62125a878":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["193a8346fc41165af561d084bb5f40a62125a878"]},"commit2Childs":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","43b04c27924fe393e38e9f0986e32c634f261859"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"43b04c27924fe393e38e9f0986e32c634f261859":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fcbc12aa8147f5203ca283e7252ba4280d6ffd16","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"193a8346fc41165af561d084bb5f40a62125a878":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["193a8346fc41165af561d084bb5f40a62125a878"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}