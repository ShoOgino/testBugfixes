{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/el/GreekLowerCaseFilter#lowerCase(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/el/GreekLowerCaseFilter#lowerCase(int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/el/GreekLowerCaseFilter#lowerCase(int).mjava","sourceNew":"    private int lowerCase(int codepoint) {\n      switch(codepoint) {\n        /* There are two lowercase forms of sigma:\n         *   U+03C2: small final sigma (end of word)\n         *   U+03C3: small sigma (otherwise)\n         *   \n         * Standardize both to U+03C3\n         */\n        case '\\u03C2': /* small final sigma */\n          return '\\u03C3'; /* small sigma */\n        \n        /* Some greek characters contain diacritics.\n         * This filter removes these, converting to the lowercase base form.\n         */\n        \n        case '\\u0386': /* capital alpha with tonos */\n        case '\\u03AC': /* small alpha with tonos */\n          return '\\u03B1'; /* small alpha */\n          \n        case '\\u0388': /* capital epsilon with tonos */\n        case '\\u03AD': /* small epsilon with tonos */\n          return '\\u03B5'; /* small epsilon */\n          \n        case '\\u0389': /* capital eta with tonos */\n        case '\\u03AE': /* small eta with tonos */\n          return '\\u03B7'; /* small eta */\n        \n        case '\\u038A': /* capital iota with tonos */\n        case '\\u03AA': /* capital iota with dialytika */\n        case '\\u03AF': /* small iota with tonos */\n        case '\\u03CA': /* small iota with dialytika */\n        case '\\u0390': /* small iota with dialytika and tonos */\n          return '\\u03B9'; /* small iota */\n          \n        case '\\u038E': /* capital upsilon with tonos */\n        case '\\u03AB': /* capital upsilon with dialytika */\n        case '\\u03CD': /* small upsilon with tonos */\n        case '\\u03CB': /* small upsilon with dialytika */\n        case '\\u03B0': /* small upsilon with dialytika and tonos */\n          return '\\u03C5'; /* small upsilon */\n          \n        case '\\u038C': /* capital omicron with tonos */\n        case '\\u03CC': /* small omicron with tonos */\n          return '\\u03BF'; /* small omicron */\n          \n        case '\\u038F': /* capital omega with tonos */\n        case '\\u03CE': /* small omega with tonos */\n          return '\\u03C9'; /* small omega */\n          \n        /* The previous implementation did the conversion below.\n         * Only implemented for backwards compatibility with old indexes.\n         */\n          \n        case '\\u03A2': /* reserved */\n          return '\\u03C2'; /* small final sigma */\n          \n        default:\n          return Character.toLowerCase(codepoint);\n      }\n    }\n\n","sourceOld":"    private int lowerCase(int codepoint) {\n      switch(codepoint) {\n        /* There are two lowercase forms of sigma:\n         *   U+03C2: small final sigma (end of word)\n         *   U+03C3: small sigma (otherwise)\n         *   \n         * Standardize both to U+03C3\n         */\n        case '\\u03C2': /* small final sigma */\n          return '\\u03C3'; /* small sigma */\n        \n        /* Some greek characters contain diacritics.\n         * This filter removes these, converting to the lowercase base form.\n         */\n        \n        case '\\u0386': /* capital alpha with tonos */\n        case '\\u03AC': /* small alpha with tonos */\n          return '\\u03B1'; /* small alpha */\n          \n        case '\\u0388': /* capital epsilon with tonos */\n        case '\\u03AD': /* small epsilon with tonos */\n          return '\\u03B5'; /* small epsilon */\n          \n        case '\\u0389': /* capital eta with tonos */\n        case '\\u03AE': /* small eta with tonos */\n          return '\\u03B7'; /* small eta */\n        \n        case '\\u038A': /* capital iota with tonos */\n        case '\\u03AA': /* capital iota with dialytika */\n        case '\\u03AF': /* small iota with tonos */\n        case '\\u03CA': /* small iota with dialytika */\n        case '\\u0390': /* small iota with dialytika and tonos */\n          return '\\u03B9'; /* small iota */\n          \n        case '\\u038E': /* capital upsilon with tonos */\n        case '\\u03AB': /* capital upsilon with dialytika */\n        case '\\u03CD': /* small upsilon with tonos */\n        case '\\u03CB': /* small upsilon with dialytika */\n        case '\\u03B0': /* small upsilon with dialytika and tonos */\n          return '\\u03C5'; /* small upsilon */\n          \n        case '\\u038C': /* capital omicron with tonos */\n        case '\\u03CC': /* small omicron with tonos */\n          return '\\u03BF'; /* small omicron */\n          \n        case '\\u038F': /* capital omega with tonos */\n        case '\\u03CE': /* small omega with tonos */\n          return '\\u03C9'; /* small omega */\n          \n        /* The previous implementation did the conversion below.\n         * Only implemented for backwards compatibility with old indexes.\n         */\n          \n        case '\\u03A2': /* reserved */\n          return '\\u03C2'; /* small final sigma */\n          \n        default:\n          return Character.toLowerCase(codepoint);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/el/GreekLowerCaseFilter#lowerCase(int).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/el/GreekLowerCaseFilter#lowerCase(int).mjava","sourceNew":"    private int lowerCase(int codepoint) {\n      switch(codepoint) {\n        /* There are two lowercase forms of sigma:\n         *   U+03C2: small final sigma (end of word)\n         *   U+03C3: small sigma (otherwise)\n         *   \n         * Standardize both to U+03C3\n         */\n        case '\\u03C2': /* small final sigma */\n          return '\\u03C3'; /* small sigma */\n        \n        /* Some greek characters contain diacritics.\n         * This filter removes these, converting to the lowercase base form.\n         */\n        \n        case '\\u0386': /* capital alpha with tonos */\n        case '\\u03AC': /* small alpha with tonos */\n          return '\\u03B1'; /* small alpha */\n          \n        case '\\u0388': /* capital epsilon with tonos */\n        case '\\u03AD': /* small epsilon with tonos */\n          return '\\u03B5'; /* small epsilon */\n          \n        case '\\u0389': /* capital eta with tonos */\n        case '\\u03AE': /* small eta with tonos */\n          return '\\u03B7'; /* small eta */\n        \n        case '\\u038A': /* capital iota with tonos */\n        case '\\u03AA': /* capital iota with dialytika */\n        case '\\u03AF': /* small iota with tonos */\n        case '\\u03CA': /* small iota with dialytika */\n        case '\\u0390': /* small iota with dialytika and tonos */\n          return '\\u03B9'; /* small iota */\n          \n        case '\\u038E': /* capital upsilon with tonos */\n        case '\\u03AB': /* capital upsilon with dialytika */\n        case '\\u03CD': /* small upsilon with tonos */\n        case '\\u03CB': /* small upsilon with dialytika */\n        case '\\u03B0': /* small upsilon with dialytika and tonos */\n          return '\\u03C5'; /* small upsilon */\n          \n        case '\\u038C': /* capital omicron with tonos */\n        case '\\u03CC': /* small omicron with tonos */\n          return '\\u03BF'; /* small omicron */\n          \n        case '\\u038F': /* capital omega with tonos */\n        case '\\u03CE': /* small omega with tonos */\n          return '\\u03C9'; /* small omega */\n          \n        /* The previous implementation did the conversion below.\n         * Only implemented for backwards compatibility with old indexes.\n         */\n          \n        case '\\u03A2': /* reserved */\n          return '\\u03C2'; /* small final sigma */\n          \n        default:\n          return Character.toLowerCase(codepoint);\n      }\n    }\n\n","sourceOld":"    private int lowerCase(int codepoint) {\n      switch(codepoint) {\n        /* There are two lowercase forms of sigma:\n         *   U+03C2: small final sigma (end of word)\n         *   U+03C3: small sigma (otherwise)\n         *   \n         * Standardize both to U+03C3\n         */\n        case '\\u03C2': /* small final sigma */\n          return '\\u03C3'; /* small sigma */\n        \n        /* Some greek characters contain diacritics.\n         * This filter removes these, converting to the lowercase base form.\n         */\n        \n        case '\\u0386': /* capital alpha with tonos */\n        case '\\u03AC': /* small alpha with tonos */\n          return '\\u03B1'; /* small alpha */\n          \n        case '\\u0388': /* capital epsilon with tonos */\n        case '\\u03AD': /* small epsilon with tonos */\n          return '\\u03B5'; /* small epsilon */\n          \n        case '\\u0389': /* capital eta with tonos */\n        case '\\u03AE': /* small eta with tonos */\n          return '\\u03B7'; /* small eta */\n        \n        case '\\u038A': /* capital iota with tonos */\n        case '\\u03AA': /* capital iota with dialytika */\n        case '\\u03AF': /* small iota with tonos */\n        case '\\u03CA': /* small iota with dialytika */\n        case '\\u0390': /* small iota with dialytika and tonos */\n          return '\\u03B9'; /* small iota */\n          \n        case '\\u038E': /* capital upsilon with tonos */\n        case '\\u03AB': /* capital upsilon with dialytika */\n        case '\\u03CD': /* small upsilon with tonos */\n        case '\\u03CB': /* small upsilon with dialytika */\n        case '\\u03B0': /* small upsilon with dialytika and tonos */\n          return '\\u03C5'; /* small upsilon */\n          \n        case '\\u038C': /* capital omicron with tonos */\n        case '\\u03CC': /* small omicron with tonos */\n          return '\\u03BF'; /* small omicron */\n          \n        case '\\u038F': /* capital omega with tonos */\n        case '\\u03CE': /* small omega with tonos */\n          return '\\u03C9'; /* small omega */\n          \n        /* The previous implementation did the conversion below.\n         * Only implemented for backwards compatibility with old indexes.\n         */\n          \n        case '\\u03A2': /* reserved */\n          return '\\u03C2'; /* small final sigma */\n          \n        default:\n          return Character.toLowerCase(codepoint);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}