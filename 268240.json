{"path":"src/java/org/apache/lucene/index/Term#equals(Object).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/Term#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  /** Compares two terms, returning true iff they have the same\n      field and text. */\n  public final boolean equals(Object o) {\n    if (o == null)\n      return false;\n    Term other = (Term)o;\n    return field == other.field && text.equals(other.text);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38dfab784059c7bde15a02375f5adf58bf1f8f51","date":1174058465,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/Term#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/Term#equals(Object).mjava","sourceNew":"  /** Compares two terms, returning true iff they have the same\n      field and text. */\n  public final boolean equals(Object o) {\n    if (o == this)\n      return true;\n    if (o == null)\n      return false;\n    if (!(o instanceof Term))\n      return false;\n    Term other = (Term)o;\n    return field == other.field && text.equals(other.text);\n  }\n\n","sourceOld":"  /** Compares two terms, returning true iff they have the same\n      field and text. */\n  public final boolean equals(Object o) {\n    if (o == null)\n      return false;\n    Term other = (Term)o;\n    return field == other.field && text.equals(other.text);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58d0a32bc578c175fa42d65d95f21290d3473d84","date":1241610125,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/Term#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/Term#equals(Object).mjava","sourceNew":"  //@Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (text == null) {\n      if (other.text != null)\n        return false;\n    } else if (!text.equals(other.text))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  /** Compares two terms, returning true iff they have the same\n      field and text. */\n  public final boolean equals(Object o) {\n    if (o == this)\n      return true;\n    if (o == null)\n      return false;\n    if (!(o instanceof Term))\n      return false;\n    Term other = (Term)o;\n    return field == other.field && text.equals(other.text);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d62b1ed69b2d54a65df6f993499b39562d1dc1f9","date":1255700561,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/Term#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/Term#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (text == null) {\n      if (other.text != null)\n        return false;\n    } else if (!text.equals(other.text))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  //@Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (text == null) {\n      if (other.text != null)\n        return false;\n    } else if (!text.equals(other.text))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/Term#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/Term#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (text == null) {\n      if (other.text != null)\n        return false;\n    } else if (!text.equals(other.text))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (text == null) {\n      if (other.text != null)\n        return false;\n    } else if (!text.equals(other.text))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d62b1ed69b2d54a65df6f993499b39562d1dc1f9":["58d0a32bc578c175fa42d65d95f21290d3473d84"],"58d0a32bc578c175fa42d65d95f21290d3473d84":["38dfab784059c7bde15a02375f5adf58bf1f8f51"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"38dfab784059c7bde15a02375f5adf58bf1f8f51":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d62b1ed69b2d54a65df6f993499b39562d1dc1f9"]},"commit2Childs":{"d62b1ed69b2d54a65df6f993499b39562d1dc1f9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"58d0a32bc578c175fa42d65d95f21290d3473d84":["d62b1ed69b2d54a65df6f993499b39562d1dc1f9"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["38dfab784059c7bde15a02375f5adf58bf1f8f51"],"38dfab784059c7bde15a02375f5adf58bf1f8f51":["58d0a32bc578c175fa42d65d95f21290d3473d84"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}