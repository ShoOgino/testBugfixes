{"path":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,Sorter.DocMap,DocValuesConsumer).mjava","commits":[{"id":"86a0a50d2d14aaee1e635bbec914468551f7f9a2","date":1482234306,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,Sorter.DocMap,DocValuesConsumer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,DocValuesConsumer).mjava","sourceNew":"  @Override\n  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, DocValuesConsumer dvConsumer) throws IOException {\n    bytes.freeze(false);\n    final PackedLongValues lengths = this.lengths.build();\n    final SortingLeafReader.CachedBinaryDVs sorted;\n    if (sortMap != null) {\n      sorted = sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedBinaryDocValues(lengths, maxLength, bytes.getDataInput(), docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    dvConsumer.addBinaryField(fieldInfo,\n                              new EmptyDocValuesProducer() {\n                                @Override\n                                public BinaryDocValues getBinary(FieldInfo fieldInfoIn) {\n                                  if (fieldInfoIn != fieldInfo) {\n                                    throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                  }\n                                  if (sorted == null) {\n                                    return new BufferedBinaryDocValues(lengths, maxLength, bytes.getDataInput(), docsWithField.iterator());\n                                  } else {\n                                    return new SortingLeafReader.SortingBinaryDocValues(sorted);\n                                  }\n                                }\n                              });\n  }\n\n","sourceOld":"  @Override\n  public void flush(SegmentWriteState state, DocValuesConsumer dvConsumer) throws IOException {\n    bytes.freeze(false);\n    final PackedLongValues lengths = this.lengths.build();\n    dvConsumer.addBinaryField(fieldInfo,\n                              new EmptyDocValuesProducer() {\n                                @Override\n                                public BinaryDocValues getBinary(FieldInfo fieldInfoIn) {\n                                  if (fieldInfoIn != fieldInfo) {\n                                    throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                  }\n                                  return new BufferedBinaryDocValues(lengths, maxLength, bytes.getDataInput(), docsWithField.iterator());\n                                }\n                              });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,Sorter.DocMap,DocValuesConsumer).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, DocValuesConsumer dvConsumer) throws IOException {\n    bytes.freeze(false);\n    final PackedLongValues lengths = this.lengths.build();\n    final SortingLeafReader.CachedBinaryDVs sorted;\n    if (sortMap != null) {\n      sorted = sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedBinaryDocValues(lengths, maxLength, bytes.getDataInput(), docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    dvConsumer.addBinaryField(fieldInfo,\n                              new EmptyDocValuesProducer() {\n                                @Override\n                                public BinaryDocValues getBinary(FieldInfo fieldInfoIn) {\n                                  if (fieldInfoIn != fieldInfo) {\n                                    throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                  }\n                                  if (sorted == null) {\n                                    return new BufferedBinaryDocValues(lengths, maxLength, bytes.getDataInput(), docsWithField.iterator());\n                                  } else {\n                                    return new SortingLeafReader.SortingBinaryDocValues(sorted);\n                                  }\n                                }\n                              });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"773bf150032d3ef6c95997a154fb914b82875cb8","date":1590150786,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,Sorter.DocMap,DocValuesConsumer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,Sorter.DocMap,DocValuesConsumer).mjava","sourceNew":"  @Override\n  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, DocValuesConsumer dvConsumer) throws IOException {\n    bytes.freeze(false);\n    if (finalLengths == null) {\n      finalLengths = this.lengths.build();\n    }\n    final SortingLeafReader.CachedBinaryDVs sorted;\n    if (sortMap != null) {\n      sorted = sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    dvConsumer.addBinaryField(fieldInfo,\n                              new EmptyDocValuesProducer() {\n                                @Override\n                                public BinaryDocValues getBinary(FieldInfo fieldInfoIn) {\n                                  if (fieldInfoIn != fieldInfo) {\n                                    throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                  }\n                                  if (sorted == null) {\n                                    return new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator());\n                                  } else {\n                                    return new SortingLeafReader.SortingBinaryDocValues(sorted);\n                                  }\n                                }\n                              });\n  }\n\n","sourceOld":"  @Override\n  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, DocValuesConsumer dvConsumer) throws IOException {\n    bytes.freeze(false);\n    final PackedLongValues lengths = this.lengths.build();\n    final SortingLeafReader.CachedBinaryDVs sorted;\n    if (sortMap != null) {\n      sorted = sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedBinaryDocValues(lengths, maxLength, bytes.getDataInput(), docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    dvConsumer.addBinaryField(fieldInfo,\n                              new EmptyDocValuesProducer() {\n                                @Override\n                                public BinaryDocValues getBinary(FieldInfo fieldInfoIn) {\n                                  if (fieldInfoIn != fieldInfo) {\n                                    throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                  }\n                                  if (sorted == null) {\n                                    return new BufferedBinaryDocValues(lengths, maxLength, bytes.getDataInput(), docsWithField.iterator());\n                                  } else {\n                                    return new SortingLeafReader.SortingBinaryDocValues(sorted);\n                                  }\n                                }\n                              });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63","date":1599130480,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,Sorter.DocMap,DocValuesConsumer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,Sorter.DocMap,DocValuesConsumer).mjava","sourceNew":"  @Override\n  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, DocValuesConsumer dvConsumer) throws IOException {\n    bytes.freeze(false);\n    if (finalLengths == null) {\n      finalLengths = this.lengths.build();\n    }\n    final CachedBinaryDVs sorted;\n    if (sortMap != null) {\n      sorted = sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    dvConsumer.addBinaryField(fieldInfo,\n                              new EmptyDocValuesProducer() {\n                                @Override\n                                public BinaryDocValues getBinary(FieldInfo fieldInfoIn) {\n                                  if (fieldInfoIn != fieldInfo) {\n                                    throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                  }\n                                  if (sorted == null) {\n                                    return new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator());\n                                  } else {\n                                    return new SortingBinaryDocValues(sorted);\n                                  }\n                                }\n                              });\n  }\n\n","sourceOld":"  @Override\n  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, DocValuesConsumer dvConsumer) throws IOException {\n    bytes.freeze(false);\n    if (finalLengths == null) {\n      finalLengths = this.lengths.build();\n    }\n    final SortingLeafReader.CachedBinaryDVs sorted;\n    if (sortMap != null) {\n      sorted = sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    dvConsumer.addBinaryField(fieldInfo,\n                              new EmptyDocValuesProducer() {\n                                @Override\n                                public BinaryDocValues getBinary(FieldInfo fieldInfoIn) {\n                                  if (fieldInfoIn != fieldInfo) {\n                                    throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                  }\n                                  if (sorted == null) {\n                                    return new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator());\n                                  } else {\n                                    return new SortingLeafReader.SortingBinaryDocValues(sorted);\n                                  }\n                                }\n                              });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46a689927fad636f7324c6166ffe3df0b93d7ce6","date":1600780253,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,Sorter.DocMap,DocValuesConsumer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,Sorter.DocMap,DocValuesConsumer).mjava","sourceNew":"  @Override\n  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, DocValuesConsumer dvConsumer) throws IOException {\n    bytes.freeze(false);\n    if (finalLengths == null) {\n      finalLengths = this.lengths.build();\n    }\n    final CachedBinaryDVs sorted;\n    if (sortMap != null) {\n      sorted = new CachedBinaryDVs(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    dvConsumer.addBinaryField(fieldInfo,\n                              new EmptyDocValuesProducer() {\n                                @Override\n                                public BinaryDocValues getBinary(FieldInfo fieldInfoIn) {\n                                  if (fieldInfoIn != fieldInfo) {\n                                    throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                  }\n                                  if (sorted == null) {\n                                    return new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator());\n                                  } else {\n                                    return new SortingBinaryDocValues(sorted);\n                                  }\n                                }\n                              });\n  }\n\n","sourceOld":"  @Override\n  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, DocValuesConsumer dvConsumer) throws IOException {\n    bytes.freeze(false);\n    if (finalLengths == null) {\n      finalLengths = this.lengths.build();\n    }\n    final CachedBinaryDVs sorted;\n    if (sortMap != null) {\n      sorted = sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    dvConsumer.addBinaryField(fieldInfo,\n                              new EmptyDocValuesProducer() {\n                                @Override\n                                public BinaryDocValues getBinary(FieldInfo fieldInfoIn) {\n                                  if (fieldInfoIn != fieldInfo) {\n                                    throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                  }\n                                  if (sorted == null) {\n                                    return new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator());\n                                  } else {\n                                    return new SortingBinaryDocValues(sorted);\n                                  }\n                                }\n                              });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6109eb85278a3a0b573c754977177cbad278c6c","date":1600863688,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,Sorter.DocMap,DocValuesConsumer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#flush(SegmentWriteState,Sorter.DocMap,DocValuesConsumer).mjava","sourceNew":"  @Override\n  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, DocValuesConsumer dvConsumer) throws IOException {\n    bytes.freeze(false);\n    if (finalLengths == null) {\n      finalLengths = this.lengths.build();\n    }\n    final BinaryDVs sorted;\n    if (sortMap != null) {\n      sorted = new BinaryDVs(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    dvConsumer.addBinaryField(fieldInfo,\n                              new EmptyDocValuesProducer() {\n                                @Override\n                                public BinaryDocValues getBinary(FieldInfo fieldInfoIn) {\n                                  if (fieldInfoIn != fieldInfo) {\n                                    throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                  }\n                                  if (sorted == null) {\n                                    return new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator());\n                                  } else {\n                                    return new SortingBinaryDocValues(sorted);\n                                  }\n                                }\n                              });\n  }\n\n","sourceOld":"  @Override\n  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, DocValuesConsumer dvConsumer) throws IOException {\n    bytes.freeze(false);\n    if (finalLengths == null) {\n      finalLengths = this.lengths.build();\n    }\n    final CachedBinaryDVs sorted;\n    if (sortMap != null) {\n      sorted = new CachedBinaryDVs(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    dvConsumer.addBinaryField(fieldInfo,\n                              new EmptyDocValuesProducer() {\n                                @Override\n                                public BinaryDocValues getBinary(FieldInfo fieldInfoIn) {\n                                  if (fieldInfoIn != fieldInfo) {\n                                    throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                  }\n                                  if (sorted == null) {\n                                    return new BufferedBinaryDocValues(finalLengths, maxLength, bytes.getDataInput(), docsWithField.iterator());\n                                  } else {\n                                    return new SortingBinaryDocValues(sorted);\n                                  }\n                                }\n                              });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"773bf150032d3ef6c95997a154fb914b82875cb8":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6109eb85278a3a0b573c754977177cbad278c6c":["46a689927fad636f7324c6166ffe3df0b93d7ce6"],"46a689927fad636f7324c6166ffe3df0b93d7ce6":["19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63":["773bf150032d3ef6c95997a154fb914b82875cb8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c6109eb85278a3a0b573c754977177cbad278c6c"]},"commit2Childs":{"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"773bf150032d3ef6c95997a154fb914b82875cb8":["19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63"],"c6109eb85278a3a0b573c754977177cbad278c6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","773bf150032d3ef6c95997a154fb914b82875cb8"],"46a689927fad636f7324c6166ffe3df0b93d7ce6":["c6109eb85278a3a0b573c754977177cbad278c6c"],"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63":["46a689927fad636f7324c6166ffe3df0b93d7ce6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}