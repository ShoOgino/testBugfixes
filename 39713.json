{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newField(\"content3\", \"\", TextField.TYPE_UNSTORED));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_UNSTORED; \n        doc.add(newField(\"content1\", contents, TextField.TYPE_UNSTORED));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setUseCompoundFile(false);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setUseCompoundFile(false);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.shutdown();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.shutdown();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                  .setMaxBufferedDocs(2)\n                                                  .setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.shutdown();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.shutdown();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.shutdown();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.shutdown();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                  .setMaxBufferedDocs(2)\n                                                  .setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                  .setMaxBufferedDocs(2)\n                                                  .setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.shutdown();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.shutdown();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe39f1a106531207c028defebbc9eb5bb489ac50","date":1592513789,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                  .setMaxBufferedDocs(2)\n                                                  .setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED;\n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                  .setMaxBufferedDocs(2)\n                                                  .setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1182fe36fb5df768dc2da53f6d5338cbc07268ae","date":1592861749,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                  .setMaxBufferedDocs(2)\n                                                  .setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                  .setMaxBufferedDocs(2)\n                                                  .setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED;\n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2a23476693f2bd9a4b44cc3187c429a2e21dac2","date":1593289545,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testVariableSchema().mjava","sourceNew":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                  .setMaxBufferedDocs(2)\n                                                  .setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED;\n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","sourceOld":"  public void testVariableSchema() throws Exception {\n    Directory dir = newDirectory();\n    for(int i=0;i<20;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + i);\n      }\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                  .setMaxBufferedDocs(2)\n                                                  .setMergePolicy(newLogMergePolicy()));\n      //LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n      //lmp.setMergeFactor(2);\n      //lmp.setNoCFSRatio(0.0);\n      Document doc = new Document();\n      String contents = \"aa bb cc dd ee ff gg hh ii jj kk\";\n\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      FieldType type = null;\n      if (i == 7) {\n        // Add empty docs here\n        doc.add(newTextField(\"content3\", \"\", Field.Store.NO));\n      } else {\n        if (i%2 == 0) {\n          doc.add(newField(\"content4\", contents, customType));\n          type = customType;\n        } else\n          type = TextField.TYPE_NOT_STORED; \n        doc.add(newTextField(\"content1\", contents, Field.Store.NO));\n        doc.add(newField(\"content3\", \"\", customType));\n        doc.add(newField(\"content5\", \"\", type));\n      }\n\n      for(int j=0;j<4;j++)\n        writer.addDocument(doc);\n\n      writer.close();\n\n      if (0 == i % 4) {\n        writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        //LogMergePolicy lmp2 = (LogMergePolicy) writer.getConfig().getMergePolicy();\n        //lmp2.setNoCFSRatio(0.0);\n        writer.forceMerge(1);\n        writer.close();\n      }\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["fe39f1a106531207c028defebbc9eb5bb489ac50"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["fe39f1a106531207c028defebbc9eb5bb489ac50"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"1182fe36fb5df768dc2da53f6d5338cbc07268ae":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"],"fe39f1a106531207c028defebbc9eb5bb489ac50":["1182fe36fb5df768dc2da53f6d5338cbc07268ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}