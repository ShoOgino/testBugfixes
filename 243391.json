{"path":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","sourceNew":"\t/**\n\t * Returns the names of fields that will be delivering the actual\n\t * content for clustering. Currently, there are two such fields: document\n\t * title and document content.\n\t */\n\tprivate Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleField = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetField = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleField);\n    if (StringUtils.isBlank(snippetField)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    return Sets.newHashSet(titleField, snippetField);\n\t}\n\n","sourceOld":"\t/**\n\t * Returns the names of fields that will be delivering the actual\n\t * content for clustering. Currently, there are two such fields: document\n\t * title and document content.\n\t */\n\tprivate Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleField = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetField = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleField);\n    if (StringUtils.isBlank(snippetField)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    return Sets.newHashSet(titleField, snippetField);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","sourceNew":"\t/**\n\t * Returns the names of fields that will be delivering the actual\n\t * content for clustering. Currently, there are two such fields: document\n\t * title and document content.\n\t */\n\tprivate Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleField = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetField = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleField);\n    if (StringUtils.isBlank(snippetField)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    return Sets.newHashSet(titleField, snippetField);\n\t}\n\n","sourceOld":"\t/**\n\t * Returns the names of fields that will be delivering the actual\n\t * content for clustering. Currently, there are two such fields: document\n\t * title and document content.\n\t */\n\tprivate Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleField = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetField = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleField);\n    if (StringUtils.isBlank(snippetField)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    return Sets.newHashSet(titleField, snippetField);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef9e7ba08c124ce913ef60415c21ae1ca833d211","date":1323446079,"type":3,"author":"Stanisław Osiński","isMerge":false,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","pathOld":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","sourceNew":"  /**\n   * Returns the names of fields that will be delivering the actual\n   * content for clustering. Currently, there are two such fields: document\n   * title and document content.\n   */\n  private Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleField = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetField = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleField);\n    if (StringUtils.isBlank(snippetField)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    return Sets.newHashSet(titleField, snippetField);\n  }\n\n","sourceOld":"\t/**\n\t * Returns the names of fields that will be delivering the actual\n\t * content for clustering. Currently, there are two such fields: document\n\t * title and document content.\n\t */\n\tprivate Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleField = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetField = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleField);\n    if (StringUtils.isBlank(snippetField)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    return Sets.newHashSet(titleField, snippetField);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f25fe5576647e3bdd2a797a9900982532d5e2e97","date":1323446322,"type":3,"author":"Stanisław Osiński","isMerge":false,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","pathOld":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","sourceNew":"  /**\n   * Returns the names of fields that will be delivering the actual\n   * content for clustering. Currently, there are two such fields: document\n   * title and document content.\n   */\n  private Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleFieldSpec = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetFieldSpec = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleFieldSpec);\n    if (StringUtils.isBlank(snippetFieldSpec)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    \n    final Set<String> fields = Sets.newHashSet();\n    fields.addAll(Arrays.asList(titleFieldSpec.split(\"[, ]\")));\n    fields.addAll(Arrays.asList(snippetFieldSpec.split(\"[, ]\")));\n    return fields;\n  }\n\n","sourceOld":"  /**\n   * Returns the names of fields that will be delivering the actual\n   * content for clustering. Currently, there are two such fields: document\n   * title and document content.\n   */\n  private Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleField = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetField = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleField);\n    if (StringUtils.isBlank(snippetField)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    return Sets.newHashSet(titleField, snippetField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","date":1323540308,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","pathOld":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","sourceNew":"  /**\n   * Returns the names of fields that will be delivering the actual\n   * content for clustering. Currently, there are two such fields: document\n   * title and document content.\n   */\n  private Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleFieldSpec = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetFieldSpec = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleFieldSpec);\n    if (StringUtils.isBlank(snippetFieldSpec)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    \n    final Set<String> fields = Sets.newHashSet();\n    fields.addAll(Arrays.asList(titleFieldSpec.split(\"[, ]\")));\n    fields.addAll(Arrays.asList(snippetFieldSpec.split(\"[, ]\")));\n    return fields;\n  }\n\n","sourceOld":"\t/**\n\t * Returns the names of fields that will be delivering the actual\n\t * content for clustering. Currently, there are two such fields: document\n\t * title and document content.\n\t */\n\tprivate Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleField = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetField = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleField);\n    if (StringUtils.isBlank(snippetField)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    return Sets.newHashSet(titleField, snippetField);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f","date":1478271720,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","pathOld":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","sourceNew":"  /**\n   * Returns the names of fields that will be delivering the actual\n   * content for clustering. Currently, there are two such fields: document\n   * title and document content.\n   */\n  private Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleFieldSpec = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetFieldSpec = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleFieldSpec);\n    if (StringUtils.isBlank(snippetFieldSpec)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    \n    final Set<String> fields = new HashSet<>();\n    fields.addAll(Arrays.asList(titleFieldSpec.split(\"[, ]\")));\n    fields.addAll(Arrays.asList(snippetFieldSpec.split(\"[, ]\")));\n    return fields;\n  }\n\n","sourceOld":"  /**\n   * Returns the names of fields that will be delivering the actual\n   * content for clustering. Currently, there are two such fields: document\n   * title and document content.\n   */\n  private Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleFieldSpec = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetFieldSpec = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleFieldSpec);\n    if (StringUtils.isBlank(snippetFieldSpec)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    \n    final Set<String> fields = Sets.newHashSet();\n    fields.addAll(Arrays.asList(titleFieldSpec.split(\"[, ]\")));\n    fields.addAll(Arrays.asList(snippetFieldSpec.split(\"[, ]\")));\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","pathOld":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#getFieldsForClustering(SolrQueryRequest).mjava","sourceNew":"  /**\n   * Returns the names of fields that will be delivering the actual\n   * content for clustering. Currently, there are two such fields: document\n   * title and document content.\n   */\n  private Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleFieldSpec = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetFieldSpec = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleFieldSpec);\n    if (StringUtils.isBlank(snippetFieldSpec)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    \n    final Set<String> fields = new HashSet<>();\n    fields.addAll(Arrays.asList(titleFieldSpec.split(\"[, ]\")));\n    fields.addAll(Arrays.asList(snippetFieldSpec.split(\"[, ]\")));\n    return fields;\n  }\n\n","sourceOld":"  /**\n   * Returns the names of fields that will be delivering the actual\n   * content for clustering. Currently, there are two such fields: document\n   * title and document content.\n   */\n  private Set<String> getFieldsForClustering(SolrQueryRequest sreq) {\n    SolrParams solrParams = sreq.getParams();\n\n    String titleFieldSpec = solrParams.get(CarrotParams.TITLE_FIELD_NAME, \"title\");\n    String snippetFieldSpec = solrParams.get(CarrotParams.SNIPPET_FIELD_NAME, titleFieldSpec);\n    if (StringUtils.isBlank(snippetFieldSpec)) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, CarrotParams.SNIPPET_FIELD_NAME\n              + \" must not be blank.\");\n    }\n    \n    final Set<String> fields = Sets.newHashSet();\n    fields.addAll(Arrays.asList(titleFieldSpec.split(\"[, ]\")));\n    fields.addAll(Arrays.asList(snippetFieldSpec.split(\"[, ]\")));\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f":["f25fe5576647e3bdd2a797a9900982532d5e2e97"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["f25fe5576647e3bdd2a797a9900982532d5e2e97","7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f"],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":["c26f00b574427b55127e869b935845554afde1fa","f25fe5576647e3bdd2a797a9900982532d5e2e97"],"ef9e7ba08c124ce913ef60415c21ae1ca833d211":["c26f00b574427b55127e869b935845554afde1fa"],"f25fe5576647e3bdd2a797a9900982532d5e2e97":["ef9e7ba08c124ce913ef60415c21ae1ca833d211"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c26f00b574427b55127e869b935845554afde1fa":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","ef9e7ba08c124ce913ef60415c21ae1ca833d211"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":[],"ef9e7ba08c124ce913ef60415c21ae1ca833d211":["f25fe5576647e3bdd2a797a9900982532d5e2e97"],"f25fe5576647e3bdd2a797a9900982532d5e2e97":["7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f","199dfa410f1fdbfd3294106b04096cce5ed34b21","ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}