{"path":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean,boolean).mjava","commits":[{"id":"68c354ba50abc8ed5c5fe98901e61d68f93952bb","date":1479836000,"type":1,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean).mjava","sourceNew":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted, boolean raw) throws SyntaxError {\n      this.type = quoted ? QType.PHRASE : QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","sourceOld":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted) throws SyntaxError {\n      this.type = QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean).mjava","sourceNew":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted, boolean raw) throws SyntaxError {\n      this.type = quoted ? QType.PHRASE : QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","sourceOld":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted) throws SyntaxError {\n      this.type = QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e55782fb51a6e9789542818eb2161a3247f39ace","date":1489707707,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean,boolean).mjava","sourceNew":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted, boolean raw) throws SyntaxError {\n      this.type = quoted ? QType.PHRASE : QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.vals = null;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","sourceOld":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted, boolean raw) throws SyntaxError {\n      this.type = quoted ? QType.PHRASE : QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c03778630c4604270d88c148afb8c7de35b51d3c","date":1490280010,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#getFieldQuery(String,String,boolean,boolean).mjava","sourceNew":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted, boolean raw) throws SyntaxError {\n      this.type = quoted ? QType.PHRASE : QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.vals = null;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","sourceOld":"    @Override\n    protected Query getFieldQuery(String field, String val, boolean quoted, boolean raw) throws SyntaxError {\n      this.type = quoted ? QType.PHRASE : QType.FIELD;\n      this.field = field;\n      this.val = val;\n      this.slop = getPhraseSlop(); // unspecified\n      return getAliasedQuery();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"727bb765ff2542275f6d31f67be18d7104bae148":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","68c354ba50abc8ed5c5fe98901e61d68f93952bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c03778630c4604270d88c148afb8c7de35b51d3c":["68c354ba50abc8ed5c5fe98901e61d68f93952bb"],"e55782fb51a6e9789542818eb2161a3247f39ace":["68c354ba50abc8ed5c5fe98901e61d68f93952bb"],"68c354ba50abc8ed5c5fe98901e61d68f93952bb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e55782fb51a6e9789542818eb2161a3247f39ace"]},"commit2Childs":{"727bb765ff2542275f6d31f67be18d7104bae148":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["727bb765ff2542275f6d31f67be18d7104bae148","68c354ba50abc8ed5c5fe98901e61d68f93952bb"],"c03778630c4604270d88c148afb8c7de35b51d3c":[],"68c354ba50abc8ed5c5fe98901e61d68f93952bb":["727bb765ff2542275f6d31f67be18d7104bae148","c03778630c4604270d88c148afb8c7de35b51d3c","e55782fb51a6e9789542818eb2161a3247f39ace"],"e55782fb51a6e9789542818eb2161a3247f39ace":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["727bb765ff2542275f6d31f67be18d7104bae148","c03778630c4604270d88c148afb8c7de35b51d3c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}