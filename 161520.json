{"path":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFacetStatisticsMissingResult(String,SolrParams[]).mjava","commits":[{"id":"511309ff970d3c2a68d1ac453cc187df1198f0d1","date":1410303604,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFacetStatisticsMissingResult(String,SolrParams[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFacetStatisticsMissingResult(String).mjava","sourceNew":"  public void doTestFacetStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"10\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"20\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"40\", \"active_s\", \"false\"));\n    assertU(commit());\n    \n    // status should be the same regardless of baseParams\n    for (SolrParams baseParams : baseParamsSet) {\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='10.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='20.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='30.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='2']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n              , \"//lst[@name='true']/long[@name='countDistinct'][.='2']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=2\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='15.0']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='7.0710678118654755']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n              , \"//lst[@name='false']/double[@name='min'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='40.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='1']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='false']/long[@name='countDistinct'][.='1']\"\n              , \"count(//lst[@name='false']/arr[@name='distinctValues']/*)=1\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='1600.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='0.0']\"\n              );\n    }\n  }\n\n","sourceOld":"  public void doTestFacetStatisticsMissingResult(String f) throws Exception {\n      assertU(adoc(\"id\", \"1\", f, \"10\", \"active_s\", \"true\"));\n      assertU(adoc(\"id\", \"2\", f, \"20\", \"active_s\", \"true\"));\n      assertU(commit());\n      assertU(adoc(\"id\", \"3\", \"active_s\", \"false\"));\n      assertU(adoc(\"id\", \"4\", f, \"40\", \"active_s\", \"false\"));\n      assertU(commit());\n\n    assertQ(\"test value for active_s=true\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n              , \"//lst[@name='true']/double[@name='min'][.='10.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='20.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='30.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='2']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n              , \"//lst[@name='true']/long[@name='countDistinct'][.='2']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=2\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='15.0']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='7.0710678118654755']\"\n      );\n\n    assertQ(\"test value for active_s=false\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n              , \"//lst[@name='false']/double[@name='min'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='40.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='1']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='false']/long[@name='countDistinct'][.='1']\"\n              , \"count(//lst[@name='false']/arr[@name='distinctValues']/*)=1\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='1600.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='0.0']\"\n      );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"283ff02f401ec3e7a2fad73643970f052383fb0c","date":1411407953,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFacetStatisticsMissingResult(String,SolrParams[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFacetStatisticsMissingResult(String,SolrParams[]).mjava","sourceNew":"  public void doTestFacetStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"10\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"20\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"40\", \"active_s\", \"false\"));\n    assertU(commit());\n    \n    // status should be the same regardless of baseParams\n    for (SolrParams baseParams : baseParamsSet) {\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='10.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='20.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='30.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='2']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n              , \"//lst[@name='true']/long[@name='countDistinct'][.='2']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=2\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='15.0']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='7.0710678118654755']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n              , \"//lst[@name='false']/double[@name='min'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='40.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='1']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='false']/long[@name='countDistinct'][.='1']\"\n              , \"count(//lst[@name='false']/arr[@name='distinctValues']/*)=1\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='1600.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='0.0']\"\n              );\n    }\n\n  }\n\n","sourceOld":"  public void doTestFacetStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"10\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"20\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"40\", \"active_s\", \"false\"));\n    assertU(commit());\n    \n    // status should be the same regardless of baseParams\n    for (SolrParams baseParams : baseParamsSet) {\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='10.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='20.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='30.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='2']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n              , \"//lst[@name='true']/long[@name='countDistinct'][.='2']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=2\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='15.0']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='7.0710678118654755']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n              , \"//lst[@name='false']/double[@name='min'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='40.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='1']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='false']/long[@name='countDistinct'][.='1']\"\n              , \"count(//lst[@name='false']/arr[@name='distinctValues']/*)=1\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='1600.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='0.0']\"\n              );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a4e2c829188fb99886a64558664d79c9ac0fdf1","date":1431021538,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFacetStatisticsMissingResult(String,SolrParams[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFacetStatisticsMissingResult(String,SolrParams[]).mjava","sourceNew":"  public void doTestFacetStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"10\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"20\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"40\", \"active_s\", \"false\"));\n    assertU(commit());\n    \n    // status should be the same regardless of baseParams\n    for (SolrParams baseParams : baseParamsSet) {\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='10.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='20.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='30.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='2']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n              , \"//lst[@name='true']/long[@name='countDistinct'][.='2']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=2\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='15.0']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='7.0710678118654755']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n              , \"//lst[@name='false']/double[@name='min'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='40.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='1']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='false']/long[@name='countDistinct'][.='1']\"\n              , \"count(//lst[@name='false']/arr[@name='distinctValues']/*)=1\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='1600.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='0.0']\"\n              );\n    }\n\n    assertQ(\"stats.facet w/ cardinality\"\n            , req(\"q\", \"*:*\", \"stats\", \"true\", \n                  \"stats.facet\", \"active_s\", \n                  \"stats.field\", \"{!cardinality=true}\"+f)\n            , \"//lst[@name='active_s']/lst[@name='true' ]/long[@name='cardinality'][.='2']\"\n            , \"//lst[@name='active_s']/lst[@name='false']/long[@name='cardinality'][.='1']\"\n            );\n  }\n\n","sourceOld":"  public void doTestFacetStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"10\", \"active_s\", \"true\"));\n    assertU(adoc(\"id\", \"2\", f, \"20\", \"active_s\", \"true\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", \"active_s\", \"false\"));\n    assertU(adoc(\"id\", \"4\", f, \"40\", \"active_s\", \"false\"));\n    assertU(commit());\n    \n    // status should be the same regardless of baseParams\n    for (SolrParams baseParams : baseParamsSet) {\n      \n      assertQ(\"test value for active_s=true\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\", \"stats.facet\", \"active_s\")\n              , \"//lst[@name='true']/double[@name='min'][.='10.0']\"\n              , \"//lst[@name='true']/double[@name='max'][.='20.0']\"\n              , \"//lst[@name='true']/double[@name='sum'][.='30.0']\"\n              , \"//lst[@name='true']/long[@name='count'][.='2']\"\n              , \"//lst[@name='true']/long[@name='missing'][.='0']\"\n              , \"//lst[@name='true']/long[@name='countDistinct'][.='2']\"\n              , \"count(//lst[@name='true']/arr[@name='distinctValues']/*)=2\"\n              , \"//lst[@name='true']/double[@name='sumOfSquares'][.='500.0']\"\n              , \"//lst[@name='true']/double[@name='mean'][.='15.0']\"\n              , \"//lst[@name='true']/double[@name='stddev'][.='7.0710678118654755']\"\n              );\n      \n      assertQ(\"test value for active_s=false\", \n              req(baseParams, \"q\", \"*:*\", \"stats.facet\", \"active_s\", \"stats.calcdistinct\", \"true\")\n              , \"//lst[@name='false']/double[@name='min'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='max'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='sum'][.='40.0']\"\n              , \"//lst[@name='false']/long[@name='count'][.='1']\"\n              , \"//lst[@name='false']/long[@name='missing'][.='1']\"\n              , \"//lst[@name='false']/long[@name='countDistinct'][.='1']\"\n              , \"count(//lst[@name='false']/arr[@name='distinctValues']/*)=1\"\n              , \"//lst[@name='false']/double[@name='sumOfSquares'][.='1600.0']\"\n              , \"//lst[@name='false']/double[@name='mean'][.='40.0']\"\n              , \"//lst[@name='false']/double[@name='stddev'][.='0.0']\"\n              );\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"283ff02f401ec3e7a2fad73643970f052383fb0c":["511309ff970d3c2a68d1ac453cc187df1198f0d1"],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["283ff02f401ec3e7a2fad73643970f052383fb0c"],"511309ff970d3c2a68d1ac453cc187df1198f0d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a4e2c829188fb99886a64558664d79c9ac0fdf1"]},"commit2Childs":{"283ff02f401ec3e7a2fad73643970f052383fb0c":["4a4e2c829188fb99886a64558664d79c9ac0fdf1"],"511309ff970d3c2a68d1ac453cc187df1198f0d1":["283ff02f401ec3e7a2fad73643970f052383fb0c"],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["511309ff970d3c2a68d1ac453cc187df1198f0d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}