{"path":"src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","commits":[{"id":"17b0b2ef6bf07717f15a0a22432cc7a15cb43af2","date":1260876747,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Uses the supplied HttpClient to send documents to the solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f93b56c42efb8f552fd3c79a559b7f46cecaf432","date":1261651809,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","sourceNew":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","sourceOld":"  /**\n   * Uses the supplied HttpClient to send documents to the solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#StreamingUpdateSolrServer(String,HttpClient,int,int).mjava","sourceNew":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","sourceOld":"  /**\n   * Uses the supplied HttpClient to send documents to the Solr server, the HttpClient should be instantiated using a\n   * MultiThreadedHttpConnectionManager.\n   */\n  public StreamingUpdateSolrServer(String solrServerUrl, HttpClient client, int queueSize, int threadCount) throws MalformedURLException {\n    super(solrServerUrl, client);\n    queue = new LinkedBlockingQueue<UpdateRequest>(queueSize);\n    this.threadCount = threadCount;\n    runners = new LinkedList<Runner>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"17b0b2ef6bf07717f15a0a22432cc7a15cb43af2":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["f93b56c42efb8f552fd3c79a559b7f46cecaf432"],"f93b56c42efb8f552fd3c79a559b7f46cecaf432":["17b0b2ef6bf07717f15a0a22432cc7a15cb43af2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["17b0b2ef6bf07717f15a0a22432cc7a15cb43af2"],"17b0b2ef6bf07717f15a0a22432cc7a15cb43af2":["f93b56c42efb8f552fd3c79a559b7f46cecaf432"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"f93b56c42efb8f552fd3c79a559b7f46cecaf432":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}