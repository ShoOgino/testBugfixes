{"path":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","commits":[{"id":"46855a2e3c096d06b604f73733ed9fefa822ba45","date":1305654486,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized void deleteFile(String name) throws IOException {\n    // Delete from both, in case we are currently uncaching:\n    if (VERBOSE) {\n      System.out.println(\"nrtdir.deleteFile name=\" + name);\n    }\n    cache.deleteFile(name);\n    delegate.deleteFile(name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["22b304619b4d7096d3e5f8d2712e34e92151cc8e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized void deleteFile(String name) throws IOException {\n    // Delete from both, in case we are currently uncaching:\n    if (VERBOSE) {\n      System.out.println(\"nrtdir.deleteFile name=\" + name);\n    }\n    cache.deleteFile(name);\n    delegate.deleteFile(name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized void deleteFile(String name) throws IOException {\n    // Delete from both, in case we are currently uncaching:\n    if (VERBOSE) {\n      System.out.println(\"nrtdir.deleteFile name=\" + name);\n    }\n    cache.deleteFile(name);\n    delegate.deleteFile(name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"22b304619b4d7096d3e5f8d2712e34e92151cc8e","date":1307566750,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","sourceNew":"  @Override\n  public synchronized void deleteFile(String name) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"nrtdir.deleteFile name=\" + name);\n    }\n    if (cache.fileExists(name)) {\n      assert !delegate.fileExists(name);\n      cache.deleteFile(name);\n    } else {\n      delegate.deleteFile(name);\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized void deleteFile(String name) throws IOException {\n    // Delete from both, in case we are currently uncaching:\n    if (VERBOSE) {\n      System.out.println(\"nrtdir.deleteFile name=\" + name);\n    }\n    cache.deleteFile(name);\n    delegate.deleteFile(name);\n  }\n\n","bugFix":["46855a2e3c096d06b604f73733ed9fefa822ba45"],"bugIntro":["f592e183306e8e4efabf3e7e08d3e709c9b97dbb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","sourceNew":"  @Override\n  public synchronized void deleteFile(String name) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"nrtdir.deleteFile name=\" + name);\n    }\n    if (cache.fileExists(name)) {\n      assert !delegate.fileExists(name);\n      cache.deleteFile(name);\n    } else {\n      delegate.deleteFile(name);\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized void deleteFile(String name) throws IOException {\n    // Delete from both, in case we are currently uncaching:\n    if (VERBOSE) {\n      System.out.println(\"nrtdir.deleteFile name=\" + name);\n    }\n    cache.deleteFile(name);\n    delegate.deleteFile(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","sourceNew":"  @Override\n  public synchronized void deleteFile(String name) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"nrtdir.deleteFile name=\" + name);\n    }\n    if (cache.fileExists(name)) {\n      assert !delegate.fileExists(name);\n      cache.deleteFile(name);\n    } else {\n      delegate.deleteFile(name);\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized void deleteFile(String name) throws IOException {\n    // Delete from both, in case we are currently uncaching:\n    if (VERBOSE) {\n      System.out.println(\"nrtdir.deleteFile name=\" + name);\n    }\n    cache.deleteFile(name);\n    delegate.deleteFile(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df16fc2e9b615e0138edac46655ae628f5d098ad","date":1320876869,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#deleteFile(String).mjava","sourceNew":"  @Override\n  public synchronized void deleteFile(String name) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"nrtdir.deleteFile name=\" + name);\n    }\n    if (cache.fileExists(name)) {\n      assert !delegate.fileExists(name);\n      cache.deleteFile(name);\n    } else {\n      delegate.deleteFile(name);\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized void deleteFile(String name) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"nrtdir.deleteFile name=\" + name);\n    }\n    if (cache.fileExists(name)) {\n      assert !delegate.fileExists(name);\n      cache.deleteFile(name);\n    } else {\n      delegate.deleteFile(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a3776dccca01c11e7046323cfad46a3b4a471233","22b304619b4d7096d3e5f8d2712e34e92151cc8e"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","46855a2e3c096d06b604f73733ed9fefa822ba45"],"df16fc2e9b615e0138edac46655ae628f5d098ad":["22b304619b4d7096d3e5f8d2712e34e92151cc8e"],"46855a2e3c096d06b604f73733ed9fefa822ba45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","46855a2e3c096d06b604f73733ed9fefa822ba45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["c3a8a449466c1ff7ce2274fe73dab487256964b4","22b304619b4d7096d3e5f8d2712e34e92151cc8e"],"22b304619b4d7096d3e5f8d2712e34e92151cc8e":["46855a2e3c096d06b604f73733ed9fefa822ba45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df16fc2e9b615e0138edac46655ae628f5d098ad"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"46855a2e3c096d06b604f73733ed9fefa822ba45":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","22b304619b4d7096d3e5f8d2712e34e92151cc8e"],"df16fc2e9b615e0138edac46655ae628f5d098ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3a8a449466c1ff7ce2274fe73dab487256964b4","46855a2e3c096d06b604f73733ed9fefa822ba45","a3776dccca01c11e7046323cfad46a3b4a471233"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"22b304619b4d7096d3e5f8d2712e34e92151cc8e":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","df16fc2e9b615e0138edac46655ae628f5d098ad","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}