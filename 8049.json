{"path":"lucene/src/java/org/apache/lucene/index/MultiTermsEnum#pullTop().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiTermsEnum#pullTop().mjava","pathOld":"/dev/null","sourceNew":"  private final void pullTop() {\n    // extract all subs from the queue that have the same\n    // top term\n    assert numTop == 0;\n    while(true) {\n      top[numTop++] = queue.pop();\n      if (queue.size() == 0 || !(queue.top()).current.bytesEquals(top[0].current)) {\n        break;\n      }\n    } \n    current = top[0].current;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"825bcb488bc228d1fb6a19c1f441a2181f7d766d","date":1285691504,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiTermsEnum#pullTop().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiTermsEnum#pullTop().mjava","sourceNew":"  private void pullTop() {\n    // extract all subs from the queue that have the same\n    // top term\n    assert numTop == 0;\n    while(true) {\n      top[numTop++] = queue.pop();\n      if (queue.size() == 0 || !(queue.top()).current.bytesEquals(top[0].current)) {\n        break;\n      }\n    } \n    current = top[0].current;\n  }\n\n","sourceOld":"  private final void pullTop() {\n    // extract all subs from the queue that have the same\n    // top term\n    assert numTop == 0;\n    while(true) {\n      top[numTop++] = queue.pop();\n      if (queue.size() == 0 || !(queue.top()).current.bytesEquals(top[0].current)) {\n        break;\n      }\n    } \n    current = top[0].current;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiTermsEnum#pullTop().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiTermsEnum#pullTop().mjava","sourceNew":"  private void pullTop() {\n    // extract all subs from the queue that have the same\n    // top term\n    assert numTop == 0;\n    while(true) {\n      top[numTop++] = queue.pop();\n      if (queue.size() == 0 || !(queue.top()).current.bytesEquals(top[0].current)) {\n        break;\n      }\n    } \n    current = top[0].current;\n  }\n\n","sourceOld":"  private final void pullTop() {\n    // extract all subs from the queue that have the same\n    // top term\n    assert numTop == 0;\n    while(true) {\n      top[numTop++] = queue.pop();\n      if (queue.size() == 0 || !(queue.top()).current.bytesEquals(top[0].current)) {\n        break;\n      }\n    } \n    current = top[0].current;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiTermsEnum#pullTop().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiTermsEnum#pullTop().mjava","sourceNew":"  private void pullTop() {\n    // extract all subs from the queue that have the same\n    // top term\n    assert numTop == 0;\n    while(true) {\n      top[numTop++] = queue.pop();\n      if (queue.size() == 0 || !(queue.top()).current.bytesEquals(top[0].current)) {\n        break;\n      }\n    } \n    current = top[0].current;\n  }\n\n","sourceOld":"  private void pullTop() {\n    // extract all subs from the queue that have the same\n    // top term\n    assert numTop == 0;\n    while(true) {\n      top[numTop++] = queue.pop();\n      if (queue.size() == 0 || !(queue.top()).current.bytesEquals(top[0].current)) {\n        break;\n      }\n    } \n    current = top[0].current;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"825bcb488bc228d1fb6a19c1f441a2181f7d766d":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["825bcb488bc228d1fb6a19c1f441a2181f7d766d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","825bcb488bc228d1fb6a19c1f441a2181f7d766d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"825bcb488bc228d1fb6a19c1f441a2181f7d766d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["825bcb488bc228d1fb6a19c1f441a2181f7d766d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}