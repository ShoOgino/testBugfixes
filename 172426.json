{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/IsNullEvaluator#doWork(Object...).mjava","commits":[{"id":"bb4014503b6717004572b6f357fe1487f018d9a9","date":1560911620,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/IsNullEvaluator#doWork(Object...).mjava","pathOld":"/dev/null","sourceNew":"  public Object doWork(Object ... values) throws IOException {\n\n    if(values[0] instanceof String) {\n      //Check to see if the this tuple had a null value for that string.\n      Map tupleContext = getStreamContext().getTupleContext();\n      String nullField = (String)tupleContext.get(\"null\");\n      if(nullField != null && nullField.equals(values[0])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35cc45f54fe95a5534e02f9b8ca2a54af211ded5","date":1564774706,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/IsNullEvaluator#doWork(Object...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/IsNullEvaluator#doWork(Object...).mjava","sourceNew":"  public Object doWork(Object ... values) throws IOException {\n\n    if(values[0] == null) {\n      return true;\n    }\n\n    if(values[0] instanceof String) {\n      //Check to see if the this tuple had a null value for that string.\n      Map tupleContext = getStreamContext().getTupleContext();\n      String nullField = (String)tupleContext.get(\"null\");\n      if(nullField != null && nullField.equals(values[0])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  public Object doWork(Object ... values) throws IOException {\n\n    if(values[0] instanceof String) {\n      //Check to see if the this tuple had a null value for that string.\n      Map tupleContext = getStreamContext().getTupleContext();\n      String nullField = (String)tupleContext.get(\"null\");\n      if(nullField != null && nullField.equals(values[0])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/IsNullEvaluator#doWork(Object...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/IsNullEvaluator#doWork(Object...).mjava","sourceNew":"  public Object doWork(Object ... values) throws IOException {\n\n    if(values[0] == null) {\n      return true;\n    }\n\n    if(values[0] instanceof String) {\n      //Check to see if the this tuple had a null value for that string.\n      Map tupleContext = getStreamContext().getTupleContext();\n      String nullField = (String)tupleContext.get(\"null\");\n      if(nullField != null && nullField.equals(values[0])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  public Object doWork(Object ... values) throws IOException {\n\n    if(values[0] instanceof String) {\n      //Check to see if the this tuple had a null value for that string.\n      Map tupleContext = getStreamContext().getTupleContext();\n      String nullField = (String)tupleContext.get(\"null\");\n      if(nullField != null && nullField.equals(values[0])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/IsNullEvaluator#doWork(Object...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/IsNullEvaluator#doWork(Object...).mjava","sourceNew":"  public Object doWork(Object ... values) throws IOException {\n\n    if(values[0] == null) {\n      return true;\n    }\n\n    if(values[0] instanceof String) {\n      //Check to see if the this tuple had a null value for that string.\n      Map tupleContext = getStreamContext().getTupleContext();\n      String nullField = (String)tupleContext.get(\"null\");\n      if(nullField != null && nullField.equals(values[0])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  public Object doWork(Object ... values) throws IOException {\n\n    if(values[0] instanceof String) {\n      //Check to see if the this tuple had a null value for that string.\n      Map tupleContext = getStreamContext().getTupleContext();\n      String nullField = (String)tupleContext.get(\"null\");\n      if(nullField != null && nullField.equals(values[0])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885","date":1591579911,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/IsNullEvaluator#doWork(Object...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/IsNullEvaluator#doWork(Object...).mjava","sourceNew":"  public Object doWork(Object ... values) throws IOException {\n\n    if(values[0] == null) {\n      return true;\n    }\n\n    if(values[0] instanceof String) {\n      //Check to see if the this tuple had a null value for that string.\n      @SuppressWarnings({\"rawtypes\"})\n      Map tupleContext = getStreamContext().getTupleContext();\n      String nullField = (String)tupleContext.get(\"null\");\n      if(nullField != null && nullField.equals(values[0])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  public Object doWork(Object ... values) throws IOException {\n\n    if(values[0] == null) {\n      return true;\n    }\n\n    if(values[0] instanceof String) {\n      //Check to see if the this tuple had a null value for that string.\n      Map tupleContext = getStreamContext().getTupleContext();\n      String nullField = (String)tupleContext.get(\"null\");\n      if(nullField != null && nullField.equals(values[0])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["35cc45f54fe95a5534e02f9b8ca2a54af211ded5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb4014503b6717004572b6f357fe1487f018d9a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["bb4014503b6717004572b6f357fe1487f018d9a9","35cc45f54fe95a5534e02f9b8ca2a54af211ded5"],"35cc45f54fe95a5534e02f9b8ca2a54af211ded5":["bb4014503b6717004572b6f357fe1487f018d9a9"],"f8061ddd97f3352007d927dae445884a6f3d857b":["bb4014503b6717004572b6f357fe1487f018d9a9","35cc45f54fe95a5534e02f9b8ca2a54af211ded5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885"]},"commit2Childs":{"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb4014503b6717004572b6f357fe1487f018d9a9"],"bb4014503b6717004572b6f357fe1487f018d9a9":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","35cc45f54fe95a5534e02f9b8ca2a54af211ded5","f8061ddd97f3352007d927dae445884a6f3d857b"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"35cc45f54fe95a5534e02f9b8ca2a54af211ded5":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}