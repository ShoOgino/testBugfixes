{"path":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#equals(Object).mjava","commits":[{"id":"50e7972fe4865715af8951d4ba15555e3426fc5d","date":1115024647,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"\t/**  Indicates whether some other object is \"equal to\" this one. */\n\tpublic boolean equals(Object other) {\n\t\tif (this == other) return true;\n\t\tif (other instanceof PatternAnalyzer) {\n\t\t\tPatternAnalyzer p2 = (PatternAnalyzer) other;\n\t\t\treturn \n\t\t\t\ttoLowerCase == p2.toLowerCase &&\n\t\t\t\teqPattern(pattern, p2.pattern) &&\n\t\t\t\teq(stopWords, p2.stopWords);\n\t\t}\n\t\treturn false;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8f14489323057ef6de92ba5ea2d0cfe6e34755f","date":1120167605,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#equals(Object).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#equals(Object).mjava","sourceNew":"\t/**  Indicates whether some other object is \"equal to\" this one. */\r\n\tpublic boolean equals(Object other) {\r\n\t\tif (this  == other) return true;\r\n\t\tif (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\r\n\t\tif (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\r\n\t\t\r\n\t\tif (other instanceof PatternAnalyzer) {\r\n\t\t\tPatternAnalyzer p2 = (PatternAnalyzer) other;\r\n\t\t\treturn \r\n\t\t\t\ttoLowerCase == p2.toLowerCase &&\r\n\t\t\t\teqPattern(pattern, p2.pattern) &&\r\n\t\t\t\teq(stopWords, p2.stopWords);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\n","sourceOld":"\t/**  Indicates whether some other object is \"equal to\" this one. */\n\tpublic boolean equals(Object other) {\n\t\tif (this == other) return true;\n\t\tif (other instanceof PatternAnalyzer) {\n\t\t\tPatternAnalyzer p2 = (PatternAnalyzer) other;\n\t\t\treturn \n\t\t\t\ttoLowerCase == p2.toLowerCase &&\n\t\t\t\teqPattern(pattern, p2.pattern) &&\n\t\t\t\teq(stopWords, p2.stopWords);\n\t\t}\n\t\treturn false;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2542e236e1661f6d0e8e4aa8f09dd1495e58e35a","date":1133587576,"type":4,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#equals(Object).mjava","sourceNew":null,"sourceOld":"\t/**  Indicates whether some other object is \"equal to\" this one. */\r\n\tpublic boolean equals(Object other) {\r\n\t\tif (this  == other) return true;\r\n\t\tif (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\r\n\t\tif (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\r\n\t\t\r\n\t\tif (other instanceof PatternAnalyzer) {\r\n\t\t\tPatternAnalyzer p2 = (PatternAnalyzer) other;\r\n\t\t\treturn \r\n\t\t\t\ttoLowerCase == p2.toLowerCase &&\r\n\t\t\t\teqPattern(pattern, p2.pattern) &&\r\n\t\t\t\teq(stopWords, p2.stopWords);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29bb5af2486a9a013c0a0daffdb51dce2a3adb8e","date":1133587670,"type":0,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"\t/**  Indicates whether some other object is \"equal to\" this one. */\n\tpublic boolean equals(Object other) {\n\t\tif (this  == other) return true;\n\t\tif (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\n\t\tif (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\n\t\t\n\t\tif (other instanceof PatternAnalyzer) {\n\t\t\tPatternAnalyzer p2 = (PatternAnalyzer) other;\n\t\t\treturn \n\t\t\t\ttoLowerCase == p2.toLowerCase &&\n\t\t\t\teqPattern(pattern, p2.pattern) &&\n\t\t\t\teq(stopWords, p2.stopWords);\n\t\t}\n\t\treturn false;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b08308242cb802f3a154e260d3881c2ed523c52b","date":1133766662,"type":3,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#equals(Object).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#equals(Object).mjava","sourceNew":"\t/**\n\t * Indicates whether some other object is \"equal to\" this one.\n\t * \n\t * @param other\n\t *            the reference object with which to compare.\n\t * @return true if equal, false otherwise\n\t */\n\tpublic boolean equals(Object other) {\n\t\tif (this  == other) return true;\n\t\tif (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\n\t\tif (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\n\t\t\n\t\tif (other instanceof PatternAnalyzer) {\n\t\t\tPatternAnalyzer p2 = (PatternAnalyzer) other;\n\t\t\treturn \n\t\t\t\ttoLowerCase == p2.toLowerCase &&\n\t\t\t\teqPattern(pattern, p2.pattern) &&\n\t\t\t\teq(stopWords, p2.stopWords);\n\t\t}\n\t\treturn false;\n\t}\n\n","sourceOld":"\t/**  Indicates whether some other object is \"equal to\" this one. */\n\tpublic boolean equals(Object other) {\n\t\tif (this  == other) return true;\n\t\tif (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\n\t\tif (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\n\t\t\n\t\tif (other instanceof PatternAnalyzer) {\n\t\t\tPatternAnalyzer p2 = (PatternAnalyzer) other;\n\t\t\treturn \n\t\t\t\ttoLowerCase == p2.toLowerCase &&\n\t\t\t\teqPattern(pattern, p2.pattern) &&\n\t\t\t\teq(stopWords, p2.stopWords);\n\t\t}\n\t\treturn false;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f68e24227d5556d33ee6d586fd9010cd9ff8bec","date":1150091176,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#equals(Object).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#equals(Object).mjava","sourceNew":"  /**\n   * Indicates whether some other object is \"equal to\" this one.\n   * \n   * @param other\n   *            the reference object with which to compare.\n   * @return true if equal, false otherwise\n   */\n  public boolean equals(Object other) {\n    if (this  == other) return true;\n    if (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\n    if (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\n    \n    if (other instanceof PatternAnalyzer) {\n      PatternAnalyzer p2 = (PatternAnalyzer) other;\n      return \n        toLowerCase == p2.toLowerCase &&\n        eqPattern(pattern, p2.pattern) &&\n        eq(stopWords, p2.stopWords);\n    }\n    return false;\n  }\n\n","sourceOld":"\t/**\n\t * Indicates whether some other object is \"equal to\" this one.\n\t * \n\t * @param other\n\t *            the reference object with which to compare.\n\t * @return true if equal, false otherwise\n\t */\n\tpublic boolean equals(Object other) {\n\t\tif (this  == other) return true;\n\t\tif (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\n\t\tif (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\n\t\t\n\t\tif (other instanceof PatternAnalyzer) {\n\t\t\tPatternAnalyzer p2 = (PatternAnalyzer) other;\n\t\t\treturn \n\t\t\t\ttoLowerCase == p2.toLowerCase &&\n\t\t\t\teqPattern(pattern, p2.pattern) &&\n\t\t\t\teq(stopWords, p2.stopWords);\n\t\t}\n\t\treturn false;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d8c222875ac4ef7e08f3e25d40508b821d711ff","date":1257374221,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#equals(Object).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#equals(Object).mjava","sourceNew":"  /**\n   * Indicates whether some other object is \"equal to\" this one.\n   * \n   * @param other\n   *            the reference object with which to compare.\n   * @return true if equal, false otherwise\n   */\n  public boolean equals(Object other) {\n    if (this  == other) return true;\n    if (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\n    if (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\n    \n    if (other instanceof PatternAnalyzer) {\n      PatternAnalyzer p2 = (PatternAnalyzer) other;\n      return \n        toLowerCase == p2.toLowerCase &&\n        eqPattern(pattern, p2.pattern) &&\n        eq(stopWords, p2.stopWords);\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Indicates whether some other object is \"equal to\" this one.\n   * \n   * @param other\n   *            the reference object with which to compare.\n   * @return true if equal, false otherwise\n   */\n  public boolean equals(Object other) {\n    if (this  == other) return true;\n    if (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\n    if (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\n    \n    if (other instanceof PatternAnalyzer) {\n      PatternAnalyzer p2 = (PatternAnalyzer) other;\n      return \n        toLowerCase == p2.toLowerCase &&\n        eqPattern(pattern, p2.pattern) &&\n        eq(stopWords, p2.stopWords);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2542e236e1661f6d0e8e4aa8f09dd1495e58e35a":["c8f14489323057ef6de92ba5ea2d0cfe6e34755f"],"0d8c222875ac4ef7e08f3e25d40508b821d711ff":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"],"b08308242cb802f3a154e260d3881c2ed523c52b":["29bb5af2486a9a013c0a0daffdb51dce2a3adb8e"],"29bb5af2486a9a013c0a0daffdb51dce2a3adb8e":["2542e236e1661f6d0e8e4aa8f09dd1495e58e35a"],"c8f14489323057ef6de92ba5ea2d0cfe6e34755f":["50e7972fe4865715af8951d4ba15555e3426fc5d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["b08308242cb802f3a154e260d3881c2ed523c52b"],"50e7972fe4865715af8951d4ba15555e3426fc5d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d8c222875ac4ef7e08f3e25d40508b821d711ff"]},"commit2Childs":{"2542e236e1661f6d0e8e4aa8f09dd1495e58e35a":["29bb5af2486a9a013c0a0daffdb51dce2a3adb8e"],"0d8c222875ac4ef7e08f3e25d40508b821d711ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b08308242cb802f3a154e260d3881c2ed523c52b":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"],"29bb5af2486a9a013c0a0daffdb51dce2a3adb8e":["b08308242cb802f3a154e260d3881c2ed523c52b"],"c8f14489323057ef6de92ba5ea2d0cfe6e34755f":["2542e236e1661f6d0e8e4aa8f09dd1495e58e35a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["50e7972fe4865715af8951d4ba15555e3426fc5d"],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["0d8c222875ac4ef7e08f3e25d40508b821d711ff"],"50e7972fe4865715af8951d4ba15555e3426fc5d":["c8f14489323057ef6de92ba5ea2d0cfe6e34755f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}