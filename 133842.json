{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","commits":[{"id":"8521d944f9dfb45692ec28235dbf116d47ef69ba","date":1417535150,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"/dev/null","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79700663e164dece87bed4adfd3e28bab6cb1385","date":1425241849,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    try {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n      fail(\"attributes map should be immutable\");\n    } catch (UnsupportedOperationException expected) {\n      // ok\n    }\n    dir.close();\n  }\n\n","sourceOld":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"299a2348fa24151d150182211b6208a38e5e3450","date":1425304608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    try {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n      fail(\"attributes map should be immutable\");\n    } catch (UnsupportedOperationException expected) {\n      // ok\n    }\n    dir.close();\n  }\n\n","sourceOld":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    try {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n      fail(\"attributes map should be immutable\");\n    } catch (UnsupportedOperationException expected) {\n      // ok\n    }\n    dir.close();\n  }\n\n","sourceOld":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    try {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n      fail(\"attributes map should be immutable\");\n    } catch (UnsupportedOperationException expected) {\n      // ok\n    }\n    dir.close();\n  }\n\n","bugFix":["79700663e164dece87bed4adfd3e28bab6cb1385"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes, null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes, null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes, null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes, null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes, null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes, null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes, null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#testAttributes().mjava","sourceNew":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes, null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  /** Test attributes map */\n  public void testAttributes() throws Exception {\n    Directory dir = newDirectory();\n    Codec codec = getCodec();\n    byte id[] = StringHelper.randomId();\n    Map<String,String> attributes = new HashMap<>();\n    attributes.put(\"key1\", \"value1\");\n    attributes.put(\"key2\", \"value2\");\n    SegmentInfo info = new SegmentInfo(dir, getVersions()[0], \"_123\", 1, false, codec, \n                                       Collections.emptyMap(), id, attributes, null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentInfo info2 = codec.segmentInfoFormat().read(dir, \"_123\", id, IOContext.DEFAULT);\n    assertEquals(attributes, info2.getAttributes());\n    \n    // attributes map should be immutable\n    expectThrows(UnsupportedOperationException.class, () -> {\n      info2.getAttributes().put(\"bogus\", \"bogus\");\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"05fe562aa248790944d43cdd478f512572835ba0":["79700663e164dece87bed4adfd3e28bab6cb1385"],"0ad30c6a479e764150a3316e57263319775f1df2":["05fe562aa248790944d43cdd478f512572835ba0","3d33e731a93d4b57e662ff094f64f94a745422d4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["05fe562aa248790944d43cdd478f512572835ba0","d470c8182e92b264680e34081b75e70a9f2b3c89"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["05fe562aa248790944d43cdd478f512572835ba0","0ad30c6a479e764150a3316e57263319775f1df2"],"8521d944f9dfb45692ec28235dbf116d47ef69ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["8521d944f9dfb45692ec28235dbf116d47ef69ba","79700663e164dece87bed4adfd3e28bab6cb1385"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"79700663e164dece87bed4adfd3e28bab6cb1385":["8521d944f9dfb45692ec28235dbf116d47ef69ba"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["05fe562aa248790944d43cdd478f512572835ba0","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"299a2348fa24151d150182211b6208a38e5e3450":["8521d944f9dfb45692ec28235dbf116d47ef69ba","79700663e164dece87bed4adfd3e28bab6cb1385"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["31741cf1390044e38a2ec3127cf302ba841bfd75"]},"commit2Childs":{"05fe562aa248790944d43cdd478f512572835ba0":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","ceaef6cfc68c8ab22a684192e469a8280f9e6e70","3d33e731a93d4b57e662ff094f64f94a745422d4"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","31741cf1390044e38a2ec3127cf302ba841bfd75","92212fd254551a0b1156aafc3a1a6ed1a43932ad"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8521d944f9dfb45692ec28235dbf116d47ef69ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","79700663e164dece87bed4adfd3e28bab6cb1385","299a2348fa24151d150182211b6208a38e5e3450"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8521d944f9dfb45692ec28235dbf116d47ef69ba"],"79700663e164dece87bed4adfd3e28bab6cb1385":["05fe562aa248790944d43cdd478f512572835ba0","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","299a2348fa24151d150182211b6208a38e5e3450"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":[],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"299a2348fa24151d150182211b6208a38e5e3450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","92212fd254551a0b1156aafc3a1a6ed1a43932ad","299a2348fa24151d150182211b6208a38e5e3450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}