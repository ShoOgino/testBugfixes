{"path":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCollatorTest#doTest().mjava","commits":[{"id":"cdcf766020b9b159d0b3a6ecae90ff1998ded019","date":1286818331,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCollatorTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"2\" , \"lowerfilt\", \"The quack rex fox jumped over the lazy brown dogs.\");\n    index(id, \"3\" , \"lowerfilt\", \"The quote rex fox jumped over the lazy brown dogs.\");\n    index(id, \"4\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"5\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"6\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"7\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"8\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"9\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"11\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"12\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"13\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");    \n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n        \n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    \n\t\t// Ensure that each iteration of test uses a fresh Jetty data directory.\n\t\t// Otherwise we get incorrect # hits\n\t\t// This probably should be fixed in BaseDistributedSearch in its own issue,\n\t\t// but I needed this test to pass now...\n\t\tAbstractSolrTestCase.recurseDelete(testDir);\n\t\ttestDir = new File(System.getProperty(\"java.io.tmpdir\")\n\t\t\t\t+ System.getProperty(\"file.separator\") + getClass().getName() + \"-\"\n\t\t\t\t+ System.currentTimeMillis());\n\t\ttestDir.mkdirs();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1","date":1287105540,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCollatorTest#doTest().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"2\" , \"lowerfilt\", \"The quack rex fox jumped over the lazy brown dogs.\");\n    index(id, \"3\" , \"lowerfilt\", \"The quote rex fox jumped over the lazy brown dogs.\");\n    index(id, \"4\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"5\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"6\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"7\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"8\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"9\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"11\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"12\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"13\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");    \n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n        \n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    \n\t\t// Ensure that each iteration of test uses a fresh Jetty data directory.\n\t\t// Otherwise we get incorrect # hits\n\t\t// This probably should be fixed in BaseDistributedSearch in its own issue,\n\t\t// but I needed this test to pass now...\n\t\tAbstractSolrTestCase.recurseDelete(testDir);\n\t\ttestDir = new File(System.getProperty(\"java.io.tmpdir\")\n\t\t\t\t+ System.getProperty(\"file.separator\") + getClass().getName() + \"-\"\n\t\t\t\t+ System.currentTimeMillis());\n\t\ttestDir.mkdirs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCollatorTest#doTest().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"2\" , \"lowerfilt\", \"The quack rex fox jumped over the lazy brown dogs.\");\n    index(id, \"3\" , \"lowerfilt\", \"The quote rex fox jumped over the lazy brown dogs.\");\n    index(id, \"4\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"5\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"6\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"7\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"8\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"9\" , \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"11\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"12\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"13\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote redo fox jumped over the lazy brown dogs.\");    \n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n        \n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    \n\t\t// Ensure that each iteration of test uses a fresh Jetty data directory.\n\t\t// Otherwise we get incorrect # hits\n\t\t// This probably should be fixed in BaseDistributedSearch in its own issue,\n\t\t// but I needed this test to pass now...\n\t\tAbstractSolrTestCase.recurseDelete(testDir);\n\t\ttestDir = new File(System.getProperty(\"java.io.tmpdir\")\n\t\t\t\t+ System.getProperty(\"file.separator\") + getClass().getName() + \"-\"\n\t\t\t\t+ System.currentTimeMillis());\n\t\ttestDir.mkdirs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cdcf766020b9b159d0b3a6ecae90ff1998ded019":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["cdcf766020b9b159d0b3a6ecae90ff1998ded019","6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1"],"6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1":["cdcf766020b9b159d0b3a6ecae90ff1998ded019"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1"]},"commit2Childs":{"cdcf766020b9b159d0b3a6ecae90ff1998ded019":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cdcf766020b9b159d0b3a6ecae90ff1998ded019"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}