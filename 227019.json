{"path":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfigs(SolrConfig,String).mjava","commits":[{"id":"053c4cbd30d228154839dc536ca5a15a5f0c48bf","date":1564559417,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      Map<String, String> args = DOMUtil.toMap(nodes.item(i).getAttributes());\n      result.put(args.get(NAME), new CacheConfig(args));\n    }\n    return result;\n  }\n\n","sourceOld":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":1,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      Map<String, String> args = DOMUtil.toMap(nodes.item(i).getAttributes());\n      result.put(args.get(NAME), new CacheConfig(args));\n    }\n    return result;\n  }\n\n","sourceOld":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c","date":1566455239,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      Map<String, String> args = DOMUtil.toMap(nodes.item(i).getAttributes());\n      result.put(args.get(NAME), new CacheConfig(args, configPath+\"/\"+args.get(NAME)));\n    }\n    return result;\n  }\n\n","sourceOld":"  public static Map<String, CacheConfig> getConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      Map<String, String> args = DOMUtil.toMap(nodes.item(i).getAttributes());\n      result.put(args.get(NAME), new CacheConfig(args));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":5,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getMultipleConfigs(SolrConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfigs(SolrConfig,String).mjava","sourceNew":"  public static Map<String, CacheConfig> getMultipleConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      CacheConfig config = getConfig(solrConfig, nodes.item(i).getNodeName(), DOMUtil.toMap(nodes.item(i).getAttributes()), configPath);\n      result.put(config.args.get(NAME), config);\n    }\n    return result;\n  }\n\n","sourceOld":"  public static Map<String, CacheConfig> getConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      Map<String, String> args = DOMUtil.toMap(nodes.item(i).getAttributes());\n      result.put(args.get(NAME), new CacheConfig(args, configPath+\"/\"+args.get(NAME)));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":4,"author":"jimczi","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfigs(SolrConfig,String).mjava","sourceNew":null,"sourceOld":"  public static Map<String, CacheConfig> getConfigs(SolrConfig solrConfig, String configPath) {\n    NodeList nodes = (NodeList) solrConfig.evaluate(configPath, XPathConstants.NODESET);\n    if (nodes == null || nodes.getLength() == 0) return new LinkedHashMap<>();\n    Map<String, CacheConfig> result = new HashMap<>(nodes.getLength());\n    for (int i = 0; i < nodes.getLength(); i++) {\n      Map<String, String> args = DOMUtil.toMap(nodes.item(i).getAttributes());\n      result.put(args.get(NAME), new CacheConfig(args, configPath+\"/\"+args.get(NAME)));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"053c4cbd30d228154839dc536ca5a15a5f0c48bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c":["053c4cbd30d228154839dc536ca5a15a5f0c48bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c44cc06c26e456fe9c215072b79fce30babe3975":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c"],"f8061ddd97f3352007d927dae445884a6f3d857b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","053c4cbd30d228154839dc536ca5a15a5f0c48bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c44cc06c26e456fe9c215072b79fce30babe3975"],"b0b597c65628ca9e73913a07e81691f8229bae35":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"053c4cbd30d228154839dc536ca5a15a5f0c48bf":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c","f8061ddd97f3352007d927dae445884a6f3d857b"],"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["053c4cbd30d228154839dc536ca5a15a5f0c48bf","f8061ddd97f3352007d927dae445884a6f3d857b"],"c44cc06c26e456fe9c215072b79fce30babe3975":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}