{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","commits":[{"id":"dcbd002c99aef3270139740af0ec9da6b2adf894","date":1528201746,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","pathOld":"/dev/null","sourceNew":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    System.out.println(response);\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f3c682f1bf5662bceb61e634f8ed0d058216a8b1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","pathOld":"/dev/null","sourceNew":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    System.out.println(response);\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f3c682f1bf5662bceb61e634f8ed0d058216a8b1","date":1528254800,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","sourceNew":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    assertEquals(\"<3\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n\n  }\n\n","sourceOld":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    System.out.println(response);\n\n\n  }\n\n","bugFix":["dcbd002c99aef3270139740af0ec9da6b2adf894"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","pathOld":"/dev/null","sourceNew":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    assertEquals(\"<3\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","sourceNew":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    assertEquals(\"<3\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n\n  }\n\n","sourceOld":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    System.out.println(response);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89948af0461fead48f44ba8fb7866f107ce83f22","date":1545157711,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","sourceNew":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    assertEquals(\"<3\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n\n  }\n\n","sourceOld":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    assertEquals(\"<3\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d3a1cba0d84384334e5c75e77d139a3a9e480fa","date":1557955868,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","sourceNew":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", response._get(\"cluster-policy[0]/cores\", null));\n    assertEquals(\"#ANY\", response._get(\"cluster-policy[0]/node\", null));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    assertEquals(\"<3\", response._get(\"cluster-policy[0]/cores\", null));\n    assertEquals(\"#ANY\", response._get(\"cluster-policy[0]/node\", null));\n\n  }\n\n","sourceOld":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    assertEquals(\"<3\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/cores\"));\n    assertEquals(\"#ANY\", Utils.getObjectByPath(response,false,\"cluster-policy[0]/node\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","sourceNew":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    @SuppressWarnings({\"rawtypes\"})\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", response._get(\"cluster-policy[0]/cores\", null));\n    assertEquals(\"#ANY\", response._get(\"cluster-policy[0]/node\", null));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    assertEquals(\"<3\", response._get(\"cluster-policy[0]/cores\", null));\n    assertEquals(\"#ANY\", response._get(\"cluster-policy[0]/node\", null));\n\n  }\n\n","sourceOld":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", response._get(\"cluster-policy[0]/cores\", null));\n    assertEquals(\"#ANY\", response._get(\"cluster-policy[0]/node\", null));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    assertEquals(\"<3\", response._get(\"cluster-policy[0]/cores\", null));\n    assertEquals(\"#ANY\", response._get(\"cluster-policy[0]/node\", null));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/AutoScalingHandlerTest#testUpdatePolicy().mjava","sourceNew":null,"sourceOld":"  public void testUpdatePolicy() throws IOException, SolrServerException {\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<4','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    @SuppressWarnings({\"rawtypes\"})\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(\"<4\", response._get(\"cluster-policy[0]/cores\", null));\n    assertEquals(\"#ANY\", response._get(\"cluster-policy[0]/node\", null));\n    setPropertiesCommand = \"{'set-cluster-policy': [\" +\n        \"{'cores': '<3','node': '#ANY'}]}\";\n    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    req = AutoScalingRequest.create(SolrRequest.METHOD.GET, null);\n    response = solrClient.request(req);\n    assertEquals(\"<3\", response._get(\"cluster-policy[0]/cores\", null));\n    assertEquals(\"#ANY\", response._get(\"cluster-policy[0]/node\", null));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["0d3a1cba0d84384334e5c75e77d139a3a9e480fa"],"f3c682f1bf5662bceb61e634f8ed0d058216a8b1":["dcbd002c99aef3270139740af0ec9da6b2adf894"],"3f504512a03d978990cbff30db0522b354e846db":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"dcbd002c99aef3270139740af0ec9da6b2adf894":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f3c682f1bf5662bceb61e634f8ed0d058216a8b1"],"0d3a1cba0d84384334e5c75e77d139a3a9e480fa":["89948af0461fead48f44ba8fb7866f107ce83f22"],"89948af0461fead48f44ba8fb7866f107ce83f22":["f3c682f1bf5662bceb61e634f8ed0d058216a8b1"],"f592209545c71895260367152601e9200399776d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dcbd002c99aef3270139740af0ec9da6b2adf894"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["f592209545c71895260367152601e9200399776d","f3c682f1bf5662bceb61e634f8ed0d058216a8b1"]},"commit2Childs":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["3f504512a03d978990cbff30db0522b354e846db"],"f3c682f1bf5662bceb61e634f8ed0d058216a8b1":["b70042a8a492f7054d480ccdd2be9796510d4327","89948af0461fead48f44ba8fb7866f107ce83f22","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dcbd002c99aef3270139740af0ec9da6b2adf894":["f3c682f1bf5662bceb61e634f8ed0d058216a8b1","f592209545c71895260367152601e9200399776d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dcbd002c99aef3270139740af0ec9da6b2adf894","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"0d3a1cba0d84384334e5c75e77d139a3a9e480fa":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"89948af0461fead48f44ba8fb7866f107ce83f22":["0d3a1cba0d84384334e5c75e77d139a3a9e480fa"],"f592209545c71895260367152601e9200399776d":["7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}