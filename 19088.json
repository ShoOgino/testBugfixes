{"path":"lucene/core/src/java/org/apache/lucene/codecs/bulkvint/BulkVIntPostingsFormat.BulkVIntFactory#createOutput(Directory,String,IOContext).mjava","commits":[{"id":"2f4bfabd14c1907ffd2cf3cba86be71520983b20","date":1341424058,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bulkvint/BulkVIntPostingsFormat.BulkVIntFactory#createOutput(Directory,String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FixedIntBlockIndexOutput createOutput(Directory dir, String fileName, IOContext context) throws IOException {\n      return new FixedIntBlockIndexOutput(dir.createOutput(fileName, context), blockSize) {\n        private final byte bytes[] = new byte[blockSize*5]; // header * max(Vint)\n        \n        @Override\n        protected void flushBlock() throws IOException {\n          int upto = 0;\n          \n          boolean allOnes = true;\n          // encode ints\n          for(int i=0;i<buffer.length;i++) {\n            int j = buffer[i];\n            if (j != 1) {\n              allOnes = false;\n            }\n            while ((j & ~0x7F) != 0) {\n              bytes[upto++] = (byte)((j & 0x7f) | 0x80);\n              j >>>= 7;\n            }\n            bytes[upto++] = (byte)j;\n          }\n          \n          if (allOnes) {\n            // the most common int pattern (all 1's)\n            // write a special header (numBytes=0) for this case.\n            out.writeVInt(0);\n          } else {\n            // write header (length in bytes)\n            out.writeVInt(upto);\n          \n            // write block\n            out.writeBytes(bytes, 0, upto);\n          }\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc3aebee6cb78722e5bc6e2baced39db7a5412eb","date":1345028634,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/bulkvint/BulkVIntPostingsFormat.BulkVIntFactory#createOutput(Directory,String,IOContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    public FixedIntBlockIndexOutput createOutput(Directory dir, String fileName, IOContext context) throws IOException {\n      return new FixedIntBlockIndexOutput(dir.createOutput(fileName, context), blockSize) {\n        private final byte bytes[] = new byte[blockSize*5]; // header * max(Vint)\n        \n        @Override\n        protected void flushBlock() throws IOException {\n          int upto = 0;\n          \n          boolean allOnes = true;\n          // encode ints\n          for(int i=0;i<buffer.length;i++) {\n            int j = buffer[i];\n            if (j != 1) {\n              allOnes = false;\n            }\n            while ((j & ~0x7F) != 0) {\n              bytes[upto++] = (byte)((j & 0x7f) | 0x80);\n              j >>>= 7;\n            }\n            bytes[upto++] = (byte)j;\n          }\n          \n          if (allOnes) {\n            // the most common int pattern (all 1's)\n            // write a special header (numBytes=0) for this case.\n            out.writeVInt(0);\n          } else {\n            // write header (length in bytes)\n            out.writeVInt(upto);\n          \n            // write block\n            out.writeBytes(bytes, 0, upto);\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f4bfabd14c1907ffd2cf3cba86be71520983b20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dc3aebee6cb78722e5bc6e2baced39db7a5412eb":["2f4bfabd14c1907ffd2cf3cba86be71520983b20"]},"commit2Childs":{"2f4bfabd14c1907ffd2cf3cba86be71520983b20":["dc3aebee6cb78722e5bc6e2baced39db7a5412eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f4bfabd14c1907ffd2cf3cba86be71520983b20","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"dc3aebee6cb78722e5bc6e2baced39db7a5412eb":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","dc3aebee6cb78722e5bc6e2baced39db7a5412eb"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}