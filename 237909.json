{"path":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer.Lattice#reserve(int).mjava","commits":[{"id":"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4","date":1449124064,"type":0,"author":"Christian Moen","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer.Lattice#reserve(int).mjava","pathOld":"/dev/null","sourceNew":"    // Reserve at least N nodes.\n    private void reserve(int n) {\n      if (capacity < n) {\n        int oversize = ArrayUtil.oversize(n, RamUsageEstimator.NUM_BYTES_INT);\n        nodeDicType = new Type[oversize];\n        nodeWordID = new int[oversize];\n        nodeMark = new int[oversize];\n        nodeLeftID = new int[oversize];\n        nodeRightID = new int[oversize];\n        nodeWordCost = new int[oversize];\n        nodeLeftCost = new int[oversize];\n        nodeRightCost = new int[oversize];\n        nodeLeftNode = new int[oversize];\n        nodeRightNode = new int[oversize];\n        nodeLeft = new int[oversize];\n        nodeRight = new int[oversize];\n        nodeLeftChain = new int[oversize];\n        nodeRightChain = new int[oversize];\n        capacity = oversize;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f226a8b088dd9c8f6ab287a77237c4aa00a238e5","date":1456187572,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer.Lattice#reserve(int).mjava","pathOld":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer.Lattice#reserve(int).mjava","sourceNew":"    // Reserve at least N nodes.\n    private void reserve(int n) {\n      if (capacity < n) {\n        int oversize = ArrayUtil.oversize(n, Integer.BYTES);\n        nodeDicType = new Type[oversize];\n        nodeWordID = new int[oversize];\n        nodeMark = new int[oversize];\n        nodeLeftID = new int[oversize];\n        nodeRightID = new int[oversize];\n        nodeWordCost = new int[oversize];\n        nodeLeftCost = new int[oversize];\n        nodeRightCost = new int[oversize];\n        nodeLeftNode = new int[oversize];\n        nodeRightNode = new int[oversize];\n        nodeLeft = new int[oversize];\n        nodeRight = new int[oversize];\n        nodeLeftChain = new int[oversize];\n        nodeRightChain = new int[oversize];\n        capacity = oversize;\n      }\n    }\n\n","sourceOld":"    // Reserve at least N nodes.\n    private void reserve(int n) {\n      if (capacity < n) {\n        int oversize = ArrayUtil.oversize(n, RamUsageEstimator.NUM_BYTES_INT);\n        nodeDicType = new Type[oversize];\n        nodeWordID = new int[oversize];\n        nodeMark = new int[oversize];\n        nodeLeftID = new int[oversize];\n        nodeRightID = new int[oversize];\n        nodeWordCost = new int[oversize];\n        nodeLeftCost = new int[oversize];\n        nodeRightCost = new int[oversize];\n        nodeLeftNode = new int[oversize];\n        nodeRightNode = new int[oversize];\n        nodeLeft = new int[oversize];\n        nodeRight = new int[oversize];\n        nodeLeftChain = new int[oversize];\n        nodeRightChain = new int[oversize];\n        capacity = oversize;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer.Lattice#reserve(int).mjava","pathOld":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer.Lattice#reserve(int).mjava","sourceNew":"    // Reserve at least N nodes.\n    private void reserve(int n) {\n      if (capacity < n) {\n        int oversize = ArrayUtil.oversize(n, Integer.BYTES);\n        nodeDicType = new Type[oversize];\n        nodeWordID = new int[oversize];\n        nodeMark = new int[oversize];\n        nodeLeftID = new int[oversize];\n        nodeRightID = new int[oversize];\n        nodeWordCost = new int[oversize];\n        nodeLeftCost = new int[oversize];\n        nodeRightCost = new int[oversize];\n        nodeLeftNode = new int[oversize];\n        nodeRightNode = new int[oversize];\n        nodeLeft = new int[oversize];\n        nodeRight = new int[oversize];\n        nodeLeftChain = new int[oversize];\n        nodeRightChain = new int[oversize];\n        capacity = oversize;\n      }\n    }\n\n","sourceOld":"    // Reserve at least N nodes.\n    private void reserve(int n) {\n      if (capacity < n) {\n        int oversize = ArrayUtil.oversize(n, RamUsageEstimator.NUM_BYTES_INT);\n        nodeDicType = new Type[oversize];\n        nodeWordID = new int[oversize];\n        nodeMark = new int[oversize];\n        nodeLeftID = new int[oversize];\n        nodeRightID = new int[oversize];\n        nodeWordCost = new int[oversize];\n        nodeLeftCost = new int[oversize];\n        nodeRightCost = new int[oversize];\n        nodeLeftNode = new int[oversize];\n        nodeRightNode = new int[oversize];\n        nodeLeft = new int[oversize];\n        nodeRight = new int[oversize];\n        nodeLeftChain = new int[oversize];\n        nodeRightChain = new int[oversize];\n        capacity = oversize;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"419a8f52c6635419beb951255cacbbb281044c57":["f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4"],"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["419a8f52c6635419beb951255cacbbb281044c57"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4"],"419a8f52c6635419beb951255cacbbb281044c57":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["419a8f52c6635419beb951255cacbbb281044c57"],"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4":["419a8f52c6635419beb951255cacbbb281044c57","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}