{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#addDocument(IndexDocument,Analyzer).mjava","commits":[{"id":"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a","date":1341524239,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#addDocument(IndexDocument,Analyzer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#addDocument(Iterable[#-extends-IndexableField],Analyzer).mjava","sourceNew":"  /**\n   * Adds a document to this index, using the provided analyzer instead of the\n   * value of {@link #getAnalyzer()}.\n   *\n   * <p>See {@link #addDocument(Iterable)} for details on\n   * index and IndexWriter state after an Exception, and\n   * flushing/merging temporary free space requirements.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(IndexDocument doc, Analyzer analyzer) throws IOException {\n    updateDocument(null, doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index, using the provided analyzer instead of the\n   * value of {@link #getAnalyzer()}.\n   *\n   * <p>See {@link #addDocument(Iterable)} for details on\n   * index and IndexWriter state after an Exception, and\n   * flushing/merging temporary free space requirements.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Iterable<? extends IndexableField> doc, Analyzer analyzer) throws IOException {\n    updateDocument(null, doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"247f702b944ff0da1ba56a06fc13bd3eeefd2c01","date":1345138682,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#addDocument(IndexDocument,Analyzer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#addDocument(IndexDocument,Analyzer).mjava","sourceNew":"  /**\n   * Adds a document to this index, using the provided analyzer instead of the\n   * value of {@link #getAnalyzer()}.\n   *\n   * <p>See {@link #addDocument(IndexDocument)} for details on\n   * index and IndexWriter state after an Exception, and\n   * flushing/merging temporary free space requirements.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(IndexDocument doc, Analyzer analyzer) throws IOException {\n    updateDocument(null, doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index, using the provided analyzer instead of the\n   * value of {@link #getAnalyzer()}.\n   *\n   * <p>See {@link #addDocument(Iterable)} for details on\n   * index and IndexWriter state after an Exception, and\n   * flushing/merging temporary free space requirements.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(IndexDocument doc, Analyzer analyzer) throws IOException {\n    updateDocument(null, doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#addDocument(IndexDocument,Analyzer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#addDocument(Iterable[#-extends-IndexableField],Analyzer).mjava","sourceNew":"  /**\n   * Adds a document to this index, using the provided analyzer instead of the\n   * value of {@link #getAnalyzer()}.\n   *\n   * <p>See {@link #addDocument(IndexDocument)} for details on\n   * index and IndexWriter state after an Exception, and\n   * flushing/merging temporary free space requirements.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(IndexDocument doc, Analyzer analyzer) throws IOException {\n    updateDocument(null, doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index, using the provided analyzer instead of the\n   * value of {@link #getAnalyzer()}.\n   *\n   * <p>See {@link #addDocument(Iterable)} for details on\n   * index and IndexWriter state after an Exception, and\n   * flushing/merging temporary free space requirements.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Iterable<? extends IndexableField> doc, Analyzer analyzer) throws IOException {\n    updateDocument(null, doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"949847c0040cd70a68222d526cb0da7bf6cbb3c2","date":1410997182,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#addDocument(IndexDocument,Analyzer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#addDocument(IndexDocument,Analyzer).mjava","sourceNew":"  /**\n   * Adds a document to this index, using the provided analyzer instead of the\n   * value of {@link #getAnalyzer()}.\n   *\n   * <p>See {@link #addDocument(IndexDocument)} for details on\n   * index and IndexWriter state after an Exception, and\n   * flushing/merging temporary free space requirements.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(IndexDocument doc, Analyzer analyzer) throws IOException {\n    updateDocument(null, doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index, using the provided analyzer instead of the\n   * value of {@link #getAnalyzer()}.\n   *\n   * <p>See {@link #addDocument(IndexDocument)} for details on\n   * index and IndexWriter state after an Exception, and\n   * flushing/merging temporary free space requirements.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(IndexDocument doc, Analyzer analyzer) throws IOException {\n    updateDocument(null, doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0","date":1422781929,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#addDocument(IndexDocument,Analyzer).mjava","sourceNew":null,"sourceOld":"  /**\n   * Adds a document to this index, using the provided analyzer instead of the\n   * value of {@link #getAnalyzer()}.\n   *\n   * <p>See {@link #addDocument(IndexDocument)} for details on\n   * index and IndexWriter state after an Exception, and\n   * flushing/merging temporary free space requirements.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(IndexDocument doc, Analyzer analyzer) throws IOException {\n    updateDocument(null, doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d028314cced5858683a1bb4741423d0f934257b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","247f702b944ff0da1ba56a06fc13bd3eeefd2c01"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"247f702b944ff0da1ba56a06fc13bd3eeefd2c01":["33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"949847c0040cd70a68222d526cb0da7bf6cbb3c2":["1d028314cced5858683a1bb4741423d0f934257b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["949847c0040cd70a68222d526cb0da7bf6cbb3c2"]},"commit2Childs":{"1d028314cced5858683a1bb4741423d0f934257b":["949847c0040cd70a68222d526cb0da7bf6cbb3c2"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["247f702b944ff0da1ba56a06fc13bd3eeefd2c01"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d028314cced5858683a1bb4741423d0f934257b","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"247f702b944ff0da1ba56a06fc13bd3eeefd2c01":["1d028314cced5858683a1bb4741423d0f934257b"],"949847c0040cd70a68222d526cb0da7bf6cbb3c2":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}