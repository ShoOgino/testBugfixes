{"path":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildKeyStore(Resource,String).mjava","commits":[{"id":"04effb6bae0254b6d8632d67c1ec9121b33aa56e","date":1463009303,"type":1,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildKeyStore(Resource,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildKeyStore(String,String).mjava","sourceNew":"  /**\n   * Constructs a KeyStore using the specified filename and password\n   */\n  protected static KeyStore buildKeyStore(Resource resource, String password) {\n    try {\n      return CertificateUtils.getKeyStore(resource, \"JKS\", null, password);\n    } catch (Exception ex) {\n      throw new IllegalStateException(\"Unable to build KeyStore from resource: \" + resource.getName(), ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Constructs a KeyStore using the specified filename and password\n   */\n  protected static KeyStore buildKeyStore(String keyStoreLocation, String password) {\n    try {\n      return CertificateUtils.getKeyStore(Resource.newResource(keyStoreLocation), \"JKS\", null, password);\n    } catch (Exception ex) {\n      throw new IllegalStateException(\"Unable to build KeyStore from file: \" + keyStoreLocation, ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildKeyStore(Resource,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildKeyStore(String,String).mjava","sourceNew":"  /**\n   * Constructs a KeyStore using the specified filename and password\n   */\n  protected static KeyStore buildKeyStore(Resource resource, String password) {\n    try {\n      return CertificateUtils.getKeyStore(resource, \"JKS\", null, password);\n    } catch (Exception ex) {\n      throw new IllegalStateException(\"Unable to build KeyStore from resource: \" + resource.getName(), ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Constructs a KeyStore using the specified filename and password\n   */\n  protected static KeyStore buildKeyStore(String keyStoreLocation, String password) {\n    try {\n      return CertificateUtils.getKeyStore(Resource.newResource(keyStoreLocation), \"JKS\", null, password);\n    } catch (Exception ex) {\n      throw new IllegalStateException(\"Unable to build KeyStore from file: \" + keyStoreLocation, ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildKeyStore(Resource,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructs a KeyStore using the specified filename and password\n   */\n  protected static KeyStore buildKeyStore(Resource resource, String password) {\n    try {\n      return CertificateUtils.getKeyStore(resource, \"JKS\", null, password);\n    } catch (Exception ex) {\n      throw new IllegalStateException(\"Unable to build KeyStore from resource: \" + resource.getName(), ex);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildKeyStore(Resource,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#buildKeyStore(Resource,String).mjava","sourceNew":"  /**\n   * Constructs a KeyStore using the specified filename and password\n   */\n  private static KeyStore buildKeyStore(Resource resource, String password) {\n    try {\n      return CertificateUtils.getKeyStore(resource, \"JKS\", null, password);\n    } catch (Exception ex) {\n      throw new IllegalStateException(\"Unable to build KeyStore from resource: \" + resource.getName(), ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Constructs a KeyStore using the specified filename and password\n   */\n  protected static KeyStore buildKeyStore(Resource resource, String password) {\n    try {\n      return CertificateUtils.getKeyStore(resource, \"JKS\", null, password);\n    } catch (Exception ex) {\n      throw new IllegalStateException(\"Unable to build KeyStore from resource: \" + resource.getName(), ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"04effb6bae0254b6d8632d67c1ec9121b33aa56e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","04effb6bae0254b6d8632d67c1ec9121b33aa56e"]},"commit2Childs":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"04effb6bae0254b6d8632d67c1ec9121b33aa56e":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04effb6bae0254b6d8632d67c1ec9121b33aa56e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["1a77e5e21cbd575a8240b0e3926164f15295f4e8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}