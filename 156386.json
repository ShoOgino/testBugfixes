{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","commits":[{"id":"0552957099a974d3ed0dfc06d8d282b483e1273f","date":1337912313,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","pathOld":"/dev/null","sourceNew":"  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new InitializationException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new InitializationException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6f80818731469e00f54165ec94aae2db868ea05","date":1343266866,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","sourceNew":"  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","sourceOld":"  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new InitializationException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new InitializationException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","sourceNew":"  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","sourceOld":"  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new InitializationException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new InitializationException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","sourceNew":"  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","sourceOld":"  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new InitializationException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new InitializationException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9a3ed419c1884f0e54e360fb84804e574c21ac","date":1346127290,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","sourceNew":"  /**\n   * Compiles a pattern for the value of the specified argument key <code>name</code> \n   */\n  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","sourceOld":"  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","sourceNew":"  /**\n   * Compiles a pattern for the value of the specified argument key <code>name</code> \n   */\n  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","sourceOld":"  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(Map[String,String],String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getPattern(String).mjava","sourceNew":"  /**\n   * Compiles a pattern for the value of the specified argument key <code>name</code> \n   */\n  protected final Pattern getPattern(Map<String,String> args, String name) {\n    try {\n      String pat = args.remove(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(pat);\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Compiles a pattern for the value of the specified argument key <code>name</code> \n   */\n  protected Pattern getPattern(String name) {\n    try {\n      String pat = args.get(name);\n      if (null == pat) {\n        throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n      }\n      return Pattern.compile(args.get(name));\n    } catch (PatternSyntaxException e) {\n      throw new IllegalArgumentException\n        (\"Configuration Error: '\" + name + \"' can not be parsed in \" +\n         this.getClass().getSimpleName(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["0552957099a974d3ed0dfc06d8d282b483e1273f","f6f80818731469e00f54165ec94aae2db868ea05"],"0552957099a974d3ed0dfc06d8d282b483e1273f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["0552957099a974d3ed0dfc06d8d282b483e1273f","f6f80818731469e00f54165ec94aae2db868ea05"],"f6f80818731469e00f54165ec94aae2db868ea05":["0552957099a974d3ed0dfc06d8d282b483e1273f"],"ff9a3ed419c1884f0e54e360fb84804e574c21ac":["f6f80818731469e00f54165ec94aae2db868ea05"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ff9a3ed419c1884f0e54e360fb84804e574c21ac"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["aba371508186796cc6151d8223a5b4e16d02e26e","ff9a3ed419c1884f0e54e360fb84804e574c21ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":["05a14b2611ead08655a2b2bdc61632eb31316e57"],"0552957099a974d3ed0dfc06d8d282b483e1273f":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","f6f80818731469e00f54165ec94aae2db868ea05"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0552957099a974d3ed0dfc06d8d282b483e1273f"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"f6f80818731469e00f54165ec94aae2db868ea05":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","ff9a3ed419c1884f0e54e360fb84804e574c21ac"],"ff9a3ed419c1884f0e54e360fb84804e574c21ac":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd","05a14b2611ead08655a2b2bdc61632eb31316e57"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}