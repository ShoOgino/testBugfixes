{"path":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testSimpleJsonQuery().mjava","commits":[{"id":"a1f685bdd8a6bd0db4f9fb53514bf80b6b1fe8f6","date":1541507693,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testSimpleJsonQuery().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSimpleJsonQuery() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n    final int expectedResults = 3;\n\n    // tag::solrj-json-query-simple[]\n    final JsonQueryRequest simpleQuery = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\");\n    QueryResponse queryResponse = simpleQuery.process(solrClient, COLLECTION_NAME);\n    // end::solrj-json-query-simple[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(expectedResults, queryResponse.getResults().size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e361c91e3f3d36ea61c7ab9f2d4459792480783e","date":1541904265,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testSimpleJsonQuery().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testSimpleJsonQuery().mjava","sourceNew":"  @Test\n  public void testSimpleJsonQuery() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n    final int expectedResults = 4;\n\n    // tag::solrj-json-query-simple[]\n    final JsonQueryRequest simpleQuery = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\");\n    QueryResponse queryResponse = simpleQuery.process(solrClient, COLLECTION_NAME);\n    // end::solrj-json-query-simple[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(expectedResults, queryResponse.getResults().size());\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleJsonQuery() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n    final int expectedResults = 3;\n\n    // tag::solrj-json-query-simple[]\n    final JsonQueryRequest simpleQuery = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\");\n    QueryResponse queryResponse = simpleQuery.process(solrClient, COLLECTION_NAME);\n    // end::solrj-json-query-simple[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(expectedResults, queryResponse.getResults().size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"890d9da8d20886190a080e375f93341a779474e4","date":1549505353,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testSimpleJsonQuery().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testSimpleJsonQuery().mjava","sourceNew":"  @Test\n  public void testSimpleJsonQuery() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n    final int expectedResults = 4;\n\n    // tag::solrj-json-query-simple[]\n    final JsonQueryRequest simpleQuery = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\");\n    QueryResponse queryResponse = simpleQuery.process(solrClient, COLLECTION_NAME);\n    // end::solrj-json-query-simple[]\n\n    assertResponseFoundNumDocs(queryResponse, expectedResults);\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleJsonQuery() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n    final int expectedResults = 4;\n\n    // tag::solrj-json-query-simple[]\n    final JsonQueryRequest simpleQuery = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\");\n    QueryResponse queryResponse = simpleQuery.process(solrClient, COLLECTION_NAME);\n    // end::solrj-json-query-simple[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(expectedResults, queryResponse.getResults().size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"890d9da8d20886190a080e375f93341a779474e4":["e361c91e3f3d36ea61c7ab9f2d4459792480783e"],"e361c91e3f3d36ea61c7ab9f2d4459792480783e":["a1f685bdd8a6bd0db4f9fb53514bf80b6b1fe8f6"],"a1f685bdd8a6bd0db4f9fb53514bf80b6b1fe8f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["890d9da8d20886190a080e375f93341a779474e4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a1f685bdd8a6bd0db4f9fb53514bf80b6b1fe8f6"],"890d9da8d20886190a080e375f93341a779474e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e361c91e3f3d36ea61c7ab9f2d4459792480783e":["890d9da8d20886190a080e375f93341a779474e4"],"a1f685bdd8a6bd0db4f9fb53514bf80b6b1fe8f6":["e361c91e3f3d36ea61c7ab9f2d4459792480783e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}