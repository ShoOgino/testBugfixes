{"path":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer#twoPhaseIterator().mjava","commits":[{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer#twoPhaseIterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer#asTwoPhaseIterator().mjava","sourceNew":"  @Override\n  public TwoPhaseIterator twoPhaseIterator() {\n    return new TwoPhaseIterator(conjunction) {\n      @Override\n      public boolean matches() throws IOException {\n        sloppyFreq = phraseFreq(); // check for phrase\n        return sloppyFreq != 0F;\n      }\n\n      @Override\n      public float matchCost() {\n        return matchCost;\n      }\n\n      @Override\n      public String toString() {\n        return \"SloppyPhraseScorer@asTwoPhaseIterator(\" + SloppyPhraseScorer.this + \")\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public TwoPhaseIterator asTwoPhaseIterator() {\n    return new TwoPhaseIterator(conjunction) {\n      @Override\n      public boolean matches() throws IOException {\n        sloppyFreq = phraseFreq(); // check for phrase\n        return sloppyFreq != 0F;\n      }\n\n      @Override\n      public float matchCost() {\n        return matchCost;\n      }\n\n      @Override\n      public String toString() {\n        return \"SloppyPhraseScorer@asTwoPhaseIterator(\" + SloppyPhraseScorer.this + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b11b9d5eaf9707760ca5151530830a825197023","date":1525941319,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer#twoPhaseIterator().mjava","sourceNew":null,"sourceOld":"  @Override\n  public TwoPhaseIterator twoPhaseIterator() {\n    return new TwoPhaseIterator(conjunction) {\n      @Override\n      public boolean matches() throws IOException {\n        sloppyFreq = phraseFreq(); // check for phrase\n        return sloppyFreq != 0F;\n      }\n\n      @Override\n      public float matchCost() {\n        return matchCost;\n      }\n\n      @Override\n      public String toString() {\n        return \"SloppyPhraseScorer@asTwoPhaseIterator(\" + SloppyPhraseScorer.this + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3b11b9d5eaf9707760ca5151530830a825197023":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b11b9d5eaf9707760ca5151530830a825197023"]},"commit2Childs":{"3b11b9d5eaf9707760ca5151530830a825197023":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["3b11b9d5eaf9707760ca5151530830a825197023"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}