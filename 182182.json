{"path":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","commits":[{"id":"9b31138e7b06f84b96de212b2102103cb629ee68","date":1272962032,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/HTMLStripCharFilterTest#test().mjava","sourceNew":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \" this is some text  here is a  link  and \" +\n            \"another  link . \" +\n            \"This is an entity: & plus a <.  Here is an &.  \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(gold, builder.toString());\n  }\n\n","sourceOld":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \" this is some text  here is a  link  and \" +\n            \"another  link . \" +\n            \"This is an entity: & plus a <.  Here is an &.  \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(gold, builder.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","sourceNew":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \" this is some text  here is a  link  and \" +\n            \"another  link . \" +\n            \"This is an entity: & plus a <.  Here is an &.  \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(gold, builder.toString());\n  }\n\n","sourceOld":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \" this is some text  here is a  link  and \" +\n            \"another  link . \" +\n            \"This is an entity: & plus a <.  Here is an &.  \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(gold, builder.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9b31138e7b06f84b96de212b2102103cb629ee68":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9b31138e7b06f84b96de212b2102103cb629ee68"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"9b31138e7b06f84b96de212b2102103cb629ee68":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b31138e7b06f84b96de212b2102103cb629ee68"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}