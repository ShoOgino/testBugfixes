{"path":"lucene/sandbox/src/java/org/apache/lucene/rangetree/RangeTreeDocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","commits":[{"id":"8c12c43c449a172df0f2b122918f0f5fc0e9a470","date":1438415333,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/rangetree/RangeTreeDocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrdCount, Iterable<Number> ords) throws IOException {\n    delegate.addSortedSetField(field, values, docToOrdCount, ords);\n    RangeTreeWriter writer = new RangeTreeWriter(maxPointsInLeafNode, maxPointsSortInHeap);\n    Iterator<Number> docToOrdCountIt = docToOrdCount.iterator();\n    Iterator<Number> ordsIt = ords.iterator();\n    //System.out.println(\"\\nSSF: field=\" + field.name);\n    for (int docID=0;docID<state.segmentInfo.maxDoc();docID++) {\n      assert docToOrdCountIt.hasNext();\n      int count = docToOrdCountIt.next().intValue();\n      for(int i=0;i<count;i++) {\n        assert ordsIt.hasNext();\n        long ord = ordsIt.next().longValue();\n        writer.add(ord, docID);\n      }\n    }\n\n    long indexStartFP = writer.finish(out);\n\n    fieldIndexFPs.put(field.number, indexStartFP);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/rangetree/RangeTreeDocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/rangetree/RangeTreeDocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrdCount, Iterable<Number> ords) throws IOException {\n    delegate.addSortedSetField(field, values, docToOrdCount, ords);\n    RangeTreeWriter writer = new RangeTreeWriter(state.directory, state.segmentInfo.name, maxPointsInLeafNode, maxPointsSortInHeap);\n    Iterator<Number> docToOrdCountIt = docToOrdCount.iterator();\n    Iterator<Number> ordsIt = ords.iterator();\n    //System.out.println(\"\\nSSF: field=\" + field.name);\n    for (int docID=0;docID<state.segmentInfo.maxDoc();docID++) {\n      assert docToOrdCountIt.hasNext();\n      int count = docToOrdCountIt.next().intValue();\n      for(int i=0;i<count;i++) {\n        assert ordsIt.hasNext();\n        long ord = ordsIt.next().longValue();\n        writer.add(ord, docID);\n      }\n    }\n\n    long indexStartFP = writer.finish(out);\n\n    fieldIndexFPs.put(field.number, indexStartFP);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrdCount, Iterable<Number> ords) throws IOException {\n    delegate.addSortedSetField(field, values, docToOrdCount, ords);\n    RangeTreeWriter writer = new RangeTreeWriter(maxPointsInLeafNode, maxPointsSortInHeap);\n    Iterator<Number> docToOrdCountIt = docToOrdCount.iterator();\n    Iterator<Number> ordsIt = ords.iterator();\n    //System.out.println(\"\\nSSF: field=\" + field.name);\n    for (int docID=0;docID<state.segmentInfo.maxDoc();docID++) {\n      assert docToOrdCountIt.hasNext();\n      int count = docToOrdCountIt.next().intValue();\n      for(int i=0;i<count;i++) {\n        assert ordsIt.hasNext();\n        long ord = ordsIt.next().longValue();\n        writer.add(ord, docID);\n      }\n    }\n\n    long indexStartFP = writer.finish(out);\n\n    fieldIndexFPs.put(field.number, indexStartFP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/rangetree/RangeTreeDocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrdCount, Iterable<Number> ords) throws IOException {\n    delegate.addSortedSetField(field, values, docToOrdCount, ords);\n    RangeTreeWriter writer = new RangeTreeWriter(state.directory, state.segmentInfo.name, maxPointsInLeafNode, maxPointsSortInHeap);\n    Iterator<Number> docToOrdCountIt = docToOrdCount.iterator();\n    Iterator<Number> ordsIt = ords.iterator();\n    //System.out.println(\"\\nSSF: field=\" + field.name);\n    for (int docID=0;docID<state.segmentInfo.maxDoc();docID++) {\n      assert docToOrdCountIt.hasNext();\n      int count = docToOrdCountIt.next().intValue();\n      for(int i=0;i<count;i++) {\n        assert ordsIt.hasNext();\n        long ord = ordsIt.next().longValue();\n        writer.add(ord, docID);\n      }\n    }\n\n    long indexStartFP = writer.finish(out);\n\n    fieldIndexFPs.put(field.number, indexStartFP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8c12c43c449a172df0f2b122918f0f5fc0e9a470":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["8c12c43c449a172df0f2b122918f0f5fc0e9a470"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1904709ea0185dc04e3d77ea01c79e909caf2796"]},"commit2Childs":{"8c12c43c449a172df0f2b122918f0f5fc0e9a470":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c12c43c449a172df0f2b122918f0f5fc0e9a470"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}