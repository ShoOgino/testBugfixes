{"path":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#getDir1(Random).mjava","commits":[{"id":"6e09a3a223be07d75777515a717312813221fe58","date":1328908385,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#getDir1(Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelReader#getDir1(Random).mjava","sourceNew":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    w1.addDocument(d2);\n    w1.close();\n    return dir1;\n  }\n\n","sourceOld":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    w1.addDocument(d2);\n    w1.close();\n    return dir1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#getDir1(Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#getDir1(Random).mjava","sourceNew":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f1\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f2\", \"v1\", Field.Store.YES));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newTextField(\"f1\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f2\", \"v2\", Field.Store.YES));\n    w1.addDocument(d2);\n    w1.close();\n    return dir1;\n  }\n\n","sourceOld":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    w1.addDocument(d2);\n    w1.close();\n    return dir1;\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#getDir1(Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#getDir1(Random).mjava","sourceNew":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f1\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f2\", \"v1\", Field.Store.YES));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newTextField(\"f1\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f2\", \"v2\", Field.Store.YES));\n    w1.addDocument(d2);\n    w1.shutdown();\n    return dir1;\n  }\n\n","sourceOld":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f1\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f2\", \"v1\", Field.Store.YES));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newTextField(\"f1\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f2\", \"v2\", Field.Store.YES));\n    w1.addDocument(d2);\n    w1.close();\n    return dir1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#getDir1(Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#getDir1(Random).mjava","sourceNew":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f1\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f2\", \"v1\", Field.Store.YES));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newTextField(\"f1\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f2\", \"v2\", Field.Store.YES));\n    w1.addDocument(d2);\n    w1.shutdown();\n    return dir1;\n  }\n\n","sourceOld":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f1\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f2\", \"v1\", Field.Store.YES));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newTextField(\"f1\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f2\", \"v2\", Field.Store.YES));\n    w1.addDocument(d2);\n    w1.shutdown();\n    return dir1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#getDir1(Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#getDir1(Random).mjava","sourceNew":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f1\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f2\", \"v1\", Field.Store.YES));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newTextField(\"f1\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f2\", \"v2\", Field.Store.YES));\n    w1.addDocument(d2);\n    w1.close();\n    return dir1;\n  }\n\n","sourceOld":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f1\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f2\", \"v1\", Field.Store.YES));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newTextField(\"f1\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f2\", \"v2\", Field.Store.YES));\n    w1.addDocument(d2);\n    w1.shutdown();\n    return dir1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9644a32526f2e2ae87543b00e8be543aa25f29c","date":1411548458,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#getDir1(Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#getDir1(Random).mjava","sourceNew":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f1\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f2\", \"v1\", Field.Store.YES));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newTextField(\"f1\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f2\", \"v2\", Field.Store.YES));\n    w1.addDocument(d2);\n    w1.close();\n    return dir1;\n  }\n\n","sourceOld":"  private Directory getDir1(Random random) throws IOException {\n    Directory dir1 = newDirectory();\n    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f1\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f2\", \"v1\", Field.Store.YES));\n    w1.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newTextField(\"f1\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f2\", \"v2\", Field.Store.YES));\n    w1.addDocument(d2);\n    w1.close();\n    return dir1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["6e09a3a223be07d75777515a717312813221fe58"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"c9644a32526f2e2ae87543b00e8be543aa25f29c":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"6e09a3a223be07d75777515a717312813221fe58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9644a32526f2e2ae87543b00e8be543aa25f29c"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"c9644a32526f2e2ae87543b00e8be543aa25f29c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e09a3a223be07d75777515a717312813221fe58"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["c9644a32526f2e2ae87543b00e8be543aa25f29c"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"6e09a3a223be07d75777515a717312813221fe58":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}