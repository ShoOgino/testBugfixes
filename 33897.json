{"path":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortFieldDocValues#testMissingFirst().mjava","commits":[{"id":"bc45495cddab770758da8a7fe79f01747b83c9ee","date":1392859277,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortFieldDocValues#testMissingFirst().mjava","pathOld":"/dev/null","sourceNew":"  public void testMissingFirst() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    SortField sortField = new SortedSetSortField(\"value\", false);\n    sortField.setMissingValue(SortField.STRING_FIRST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'bar' comes before 'baz'\n    // null comes first\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    assertNoFieldCaches();\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortFieldDocValues#testMissingFirst().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortFieldDocValues#testMissingFirst().mjava","sourceNew":"  public void testMissingFirst() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    SortField sortField = new SortedSetSortField(\"value\", false);\n    sortField.setMissingValue(SortField.STRING_FIRST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'bar' comes before 'baz'\n    // null comes first\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    assertNoFieldCaches();\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMissingFirst() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    SortField sortField = new SortedSetSortField(\"value\", false);\n    sortField.setMissingValue(SortField.STRING_FIRST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'bar' comes before 'baz'\n    // null comes first\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    assertNoFieldCaches();\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortFieldDocValues#testMissingFirst().mjava","sourceNew":null,"sourceOld":"  public void testMissingFirst() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    SortField sortField = new SortedSetSortField(\"value\", false);\n    sortField.setMissingValue(SortField.STRING_FIRST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'bar' comes before 'baz'\n    // null comes first\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    assertNoFieldCaches();\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedSetSortField#testMissingFirst().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortFieldDocValues#testMissingFirst().mjava","sourceNew":"  public void testMissingFirst() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    SortField sortField = new SortedSetSortField(\"value\", false);\n    sortField.setMissingValue(SortField.STRING_FIRST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'bar' comes before 'baz'\n    // null comes first\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMissingFirst() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    SortField sortField = new SortedSetSortField(\"value\", false);\n    sortField.setMissingValue(SortField.STRING_FIRST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'bar' comes before 'baz'\n    // null comes first\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    assertNoFieldCaches();\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedSetSortField#testMissingFirst().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortFieldDocValues#testMissingFirst().mjava","sourceNew":"  public void testMissingFirst() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    SortField sortField = new SortedSetSortField(\"value\", false);\n    sortField.setMissingValue(SortField.STRING_FIRST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'bar' comes before 'baz'\n    // null comes first\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMissingFirst() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    SortField sortField = new SortedSetSortField(\"value\", false);\n    sortField.setMissingValue(SortField.STRING_FIRST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'bar' comes before 'baz'\n    // null comes first\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    assertNoFieldCaches();\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"bc45495cddab770758da8a7fe79f01747b83c9ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["bc45495cddab770758da8a7fe79f01747b83c9ee"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bc45495cddab770758da8a7fe79f01747b83c9ee":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc45495cddab770758da8a7fe79f01747b83c9ee"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}