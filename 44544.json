{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter#LimitTokenCountFilter(TokenStream,int,boolean).mjava","commits":[{"id":"5009d80b96d7223e4120e40035a8b8c1d48cb134","date":1353482392,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter#LimitTokenCountFilter(TokenStream,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Build an filter that limits the maximum number of tokens per field.\n   * @param in the stream to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the input must be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountFilter(TokenStream in, int maxTokenCount, boolean consumeAllTokens) {\n    super(in);\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter#LimitTokenCountFilter(TokenStream,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Build an filter that limits the maximum number of tokens per field.\n   * @param in the stream to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the input must be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountFilter(TokenStream in, int maxTokenCount, boolean consumeAllTokens) {\n    super(in);\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43acd3a99a12a5bec9c72097de0e294c80cb6daa","date":1396327381,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter#LimitTokenCountFilter(TokenStream,int,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter#LimitTokenCountFilter(TokenStream,int,boolean).mjava","sourceNew":"  /**\n   * Build an filter that limits the maximum number of tokens per field.\n   * @param in the stream to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the input must be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountFilter(TokenStream in, int maxTokenCount, boolean consumeAllTokens) {\n    super(in);\n    if (maxTokenCount < 1) {\n      throw new IllegalArgumentException(\"maxTokenCount must be greater than zero\");\n    }\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","sourceOld":"  /**\n   * Build an filter that limits the maximum number of tokens per field.\n   * @param in the stream to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the input must be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountFilter(TokenStream in, int maxTokenCount, boolean consumeAllTokens) {\n    super(in);\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter#LimitTokenCountFilter(TokenStream,int,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter#LimitTokenCountFilter(TokenStream,int,boolean).mjava","sourceNew":"  /**\n   * Build an filter that limits the maximum number of tokens per field.\n   * @param in the stream to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the input must be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountFilter(TokenStream in, int maxTokenCount, boolean consumeAllTokens) {\n    super(in);\n    if (maxTokenCount < 1) {\n      throw new IllegalArgumentException(\"maxTokenCount must be greater than zero\");\n    }\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","sourceOld":"  /**\n   * Build an filter that limits the maximum number of tokens per field.\n   * @param in the stream to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the input must be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountFilter(TokenStream in, int maxTokenCount, boolean consumeAllTokens) {\n    super(in);\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["5009d80b96d7223e4120e40035a8b8c1d48cb134","43acd3a99a12a5bec9c72097de0e294c80cb6daa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5009d80b96d7223e4120e40035a8b8c1d48cb134"],"43acd3a99a12a5bec9c72097de0e294c80cb6daa":["5009d80b96d7223e4120e40035a8b8c1d48cb134"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43acd3a99a12a5bec9c72097de0e294c80cb6daa"],"5009d80b96d7223e4120e40035a8b8c1d48cb134":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","5009d80b96d7223e4120e40035a8b8c1d48cb134"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"43acd3a99a12a5bec9c72097de0e294c80cb6daa":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5009d80b96d7223e4120e40035a8b8c1d48cb134":["5eb2511ababf862ea11e10761c70ee560cd84510","407687e67faf6e1f02a211ca078d8e3eed631027","43acd3a99a12a5bec9c72097de0e294c80cb6daa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}