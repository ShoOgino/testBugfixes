{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#isFeedStored(String).mjava","commits":[{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#isFeedStored(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Checks whether a feed for the given feedID is stored\n     * @param feedId - the feed ID\n     * @return <code>true</code> if and only if a feed is stored for the provided feed ID, <code>false</code> if no feed for the given id is stored\n     * @throws IOException\n     */\n    public boolean isFeedStored(String feedId)throws IOException{\n        Hits h = storageFeedQuery(feedId);\n        return (h.length() > 0);\n            \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"303ca293666286b4ae2b0b4dbf10d3bf60ed727c","date":1153866181,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#isFeedStored(String).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#isFeedStored(String).mjava","sourceNew":"    /**\n     * Checks whether a feed for the given feedID is stored\n     * \n     * @param feedId -\n     *            the feed ID\n     * @return <code>true</code> if and only if a feed is stored for the\n     *         provided feed ID, <code>false</code> if no feed for the given\n     *         id is stored\n     * @throws IOException\n     */\n    public boolean isFeedStored(String feedId) throws IOException {\n        Hits h = storageFeedQuery(feedId);\n        return (h.length() > 0);\n\n    }\n\n","sourceOld":"    /**\n     * Checks whether a feed for the given feedID is stored\n     * @param feedId - the feed ID\n     * @return <code>true</code> if and only if a feed is stored for the provided feed ID, <code>false</code> if no feed for the given id is stored\n     * @throws IOException\n     */\n    public boolean isFeedStored(String feedId)throws IOException{\n        Hits h = storageFeedQuery(feedId);\n        return (h.length() > 0);\n            \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#isFeedStored(String).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#isFeedStored(String).mjava","sourceNew":"    /**\n     * Checks whether a feed for the given feedID is stored\n     * \n     * @param feedId -\n     *            the feed ID\n     * @return <code>true</code> if and only if a feed is stored for the\n     *         provided feed ID, <code>false</code> if no feed for the given\n     *         id is stored\n     * @throws IOException\n     */\n    public boolean isFeedStored(String feedId) throws IOException {\n        Hits h = storageFeedQuery(feedId);\n        return (h.length() > 0);\n\n    }\n\n","sourceOld":"    /**\n     * Checks whether a feed for the given feedID is stored\n     * \n     * @param feedId -\n     *            the feed ID\n     * @return <code>true</code> if and only if a feed is stored for the\n     *         provided feed ID, <code>false</code> if no feed for the given\n     *         id is stored\n     * @throws IOException\n     */\n    public boolean isFeedStored(String feedId) throws IOException {\n        Hits h = storageFeedQuery(feedId);\n        return (h.length() > 0);\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["52754a40a1550056d5637c8992b4076b5ed77328"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["52754a40a1550056d5637c8992b4076b5ed77328"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}