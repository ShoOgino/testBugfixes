{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#createClassName(String).mjava","commits":[{"id":"dff991bc1e4ede83dd48c3f349bbbc6e9e54378e","date":1379071362,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#createClassName(String).mjava","pathOld":"/dev/null","sourceNew":"  private String createClassName(String sourceText) {\n    final StringBuilder sb = new StringBuilder(sourceText.length() / 2);\n    boolean wasIdentifierPart = true;\n    for (int i = 0, c = sourceText.length(); i < c; i++) {\n      final char ch = sourceText.charAt(i);\n      if (Character.isJavaIdentifierPart(ch)) {\n        sb.append(ch);\n        wasIdentifierPart = true;\n      } else if (wasIdentifierPart) {\n        sb.append('_');\n        wasIdentifierPart = false;\n      }\n    }\n    for (int i = sb.length() - 1; i >= 0; i--) {\n      if (sb.charAt(i) == '_') {\n        sb.setLength(i);\n      } else {\n        break;\n      }\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4f65ed08cb31248f6997ba39d1a293b3c3cfa30","date":1379071646,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#createClassName(String).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#createClassName(String).mjava","sourceNew":"  private String createClassName(String sourceText) {\n    final StringBuilder sb = new StringBuilder(sourceText.length() / 2);\n    boolean wasIdentifierPart = true;\n    for (int i = 0, c = sourceText.length(); i < c; i++) {\n      final char ch = sourceText.charAt(i);\n      if (Character.isJavaIdentifierPart(ch)) {\n        sb.append(ch);\n        wasIdentifierPart = true;\n      } else if (wasIdentifierPart) {\n        sb.append('_');\n        wasIdentifierPart = false;\n      }\n    }\n    // limit maximum length, theoretically 65536 is allowed in constant pool (in UTF-8 format).\n    if (sb.length() > 1204) sb.setLength(1024);\n    // remove trailing underscores\n    for (int i = sb.length() - 1; i >= 0; i--) {\n      if (sb.charAt(i) == '_') {\n        sb.setLength(i);\n      } else {\n        break;\n      }\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  private String createClassName(String sourceText) {\n    final StringBuilder sb = new StringBuilder(sourceText.length() / 2);\n    boolean wasIdentifierPart = true;\n    for (int i = 0, c = sourceText.length(); i < c; i++) {\n      final char ch = sourceText.charAt(i);\n      if (Character.isJavaIdentifierPart(ch)) {\n        sb.append(ch);\n        wasIdentifierPart = true;\n      } else if (wasIdentifierPart) {\n        sb.append('_');\n        wasIdentifierPart = false;\n      }\n    }\n    for (int i = sb.length() - 1; i >= 0; i--) {\n      if (sb.charAt(i) == '_') {\n        sb.setLength(i);\n      } else {\n        break;\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9cb13c127c1ea13fcdb3a400a9e66aae6a4c0f8","date":1379073986,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#createClassName(String).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#createClassName(String).mjava","sourceNew":"  private String createClassName(String sourceText) {\n    final StringBuilder sb = new StringBuilder(Math.min(sourceText.length() / 2, MAX_CLASS_NAME_LENGTH));\n    boolean wasIdentifierPart = true;\n    for (int i = 0, c = sourceText.length(); i < c && sb.length() < MAX_CLASS_NAME_LENGTH; i++) {\n      final char ch = sourceText.charAt(i);\n      if (Character.isJavaIdentifierPart(ch)) {\n        sb.append(ch);\n        wasIdentifierPart = true;\n      } else if (wasIdentifierPart) {\n        sb.append('_');\n        wasIdentifierPart = false;\n      }\n    }\n    // remove trailing underscores\n    for (int i = sb.length() - 1; i >= 0; i--) {\n      if (sb.charAt(i) == '_') {\n        sb.setLength(i);\n      } else {\n        break;\n      }\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  private String createClassName(String sourceText) {\n    final StringBuilder sb = new StringBuilder(sourceText.length() / 2);\n    boolean wasIdentifierPart = true;\n    for (int i = 0, c = sourceText.length(); i < c; i++) {\n      final char ch = sourceText.charAt(i);\n      if (Character.isJavaIdentifierPart(ch)) {\n        sb.append(ch);\n        wasIdentifierPart = true;\n      } else if (wasIdentifierPart) {\n        sb.append('_');\n        wasIdentifierPart = false;\n      }\n    }\n    // limit maximum length, theoretically 65536 is allowed in constant pool (in UTF-8 format).\n    if (sb.length() > 1204) sb.setLength(1024);\n    // remove trailing underscores\n    for (int i = sb.length() - 1; i >= 0; i--) {\n      if (sb.charAt(i) == '_') {\n        sb.setLength(i);\n      } else {\n        break;\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4840d86b4a8fb4132704815ad31ae0d146f20946","date":1379076869,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#createClassName(String).mjava","sourceNew":null,"sourceOld":"  private String createClassName(String sourceText) {\n    final StringBuilder sb = new StringBuilder(Math.min(sourceText.length() / 2, MAX_CLASS_NAME_LENGTH));\n    boolean wasIdentifierPart = true;\n    for (int i = 0, c = sourceText.length(); i < c && sb.length() < MAX_CLASS_NAME_LENGTH; i++) {\n      final char ch = sourceText.charAt(i);\n      if (Character.isJavaIdentifierPart(ch)) {\n        sb.append(ch);\n        wasIdentifierPart = true;\n      } else if (wasIdentifierPart) {\n        sb.append('_');\n        wasIdentifierPart = false;\n      }\n    }\n    // remove trailing underscores\n    for (int i = sb.length() - 1; i >= 0; i--) {\n      if (sb.charAt(i) == '_') {\n        sb.setLength(i);\n      } else {\n        break;\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4840d86b4a8fb4132704815ad31ae0d146f20946":["c9cb13c127c1ea13fcdb3a400a9e66aae6a4c0f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9cb13c127c1ea13fcdb3a400a9e66aae6a4c0f8":["e4f65ed08cb31248f6997ba39d1a293b3c3cfa30"],"e4f65ed08cb31248f6997ba39d1a293b3c3cfa30":["dff991bc1e4ede83dd48c3f349bbbc6e9e54378e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dff991bc1e4ede83dd48c3f349bbbc6e9e54378e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4840d86b4a8fb4132704815ad31ae0d146f20946":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","dff991bc1e4ede83dd48c3f349bbbc6e9e54378e"],"c9cb13c127c1ea13fcdb3a400a9e66aae6a4c0f8":["4840d86b4a8fb4132704815ad31ae0d146f20946"],"e4f65ed08cb31248f6997ba39d1a293b3c3cfa30":["c9cb13c127c1ea13fcdb3a400a9e66aae6a4c0f8"],"dff991bc1e4ede83dd48c3f349bbbc6e9e54378e":["e4f65ed08cb31248f6997ba39d1a293b3c3cfa30"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4840d86b4a8fb4132704815ad31ae0d146f20946","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}