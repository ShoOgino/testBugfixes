{"path":"src/test/org/apache/lucene/search/TestFuzzyQuery#testDefaultFuzziness().mjava","commits":[{"id":"12056d6fe7f31fb827126f5e3b307e6af56cb080","date":1091398799,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFuzzyQuery#testDefaultFuzziness().mjava","pathOld":"/dev/null","sourceNew":"  public void testDefaultFuzziness() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    addDoc(\"aaaaa\", writer);\n    addDoc(\"aaaab\", writer);\n    addDoc(\"aaabb\", writer);\n    addDoc(\"aabbb\", writer);\n    addDoc(\"abbbb\", writer);\n    addDoc(\"bbbbb\", writer);\n    addDoc(\"ddddd\", writer);\n    writer.optimize();\n    writer.close();\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"aaaaa\"));   \n    Hits hits = searcher.search(query);\n    assertEquals(3, hits.length());\n\n    // not similar enough:\n    query = new FuzzyQuery(new Term(\"field\", \"xxxxx\"));  \t\n    hits = searcher.search(query);\n    assertEquals(0, hits.length());\n    query = new FuzzyQuery(new Term(\"field\", \"aaccc\"));   // edit distance to \"aaaaa\" = 3\n    hits = searcher.search(query);\n    assertEquals(0, hits.length());\n\n    // query identical to a word in the index:\n    query = new FuzzyQuery(new Term(\"field\", \"aaaaa\"));   \n    hits = searcher.search(query);\n    assertEquals(3, hits.length());\n    assertEquals(hits.doc(0).get(\"field\"), (\"aaaaa\"));\n    // default allows for up to two edits:\n    assertEquals(hits.doc(1).get(\"field\"), (\"aaaab\"));\n    assertEquals(hits.doc(2).get(\"field\"), (\"aaabb\"));\n\n    // query similar to a word in the index:\n    query = new FuzzyQuery(new Term(\"field\", \"aaaac\"));   \n    hits = searcher.search(query);\n    assertEquals(3, hits.length());\n    assertEquals(hits.doc(0).get(\"field\"), (\"aaaaa\"));\n    assertEquals(hits.doc(1).get(\"field\"), (\"aaaab\"));\n    assertEquals(hits.doc(2).get(\"field\"), (\"aaabb\"));\n\n    query = new FuzzyQuery(new Term(\"field\", \"ddddX\"));   \n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    assertEquals(hits.doc(0).get(\"field\"), (\"ddddd\"));\n\n    // different field = no match:\n    query = new FuzzyQuery(new Term(\"anotherfield\", \"ddddX\"));   \n    hits = searcher.search(query);\n    assertEquals(0, hits.length());\n\n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c16787e95e3c32c394cf5195e223e39ff5cbda3a","date":1092422102,"type":5,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFuzzyQuery#testFuzziness().mjava","pathOld":"src/test/org/apache/lucene/search/TestFuzzyQuery#testDefaultFuzziness().mjava","sourceNew":"  public void testFuzziness() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    addDoc(\"aaaaa\", writer);\n    addDoc(\"aaaab\", writer);\n    addDoc(\"aaabb\", writer);\n    addDoc(\"aabbb\", writer);\n    addDoc(\"abbbb\", writer);\n    addDoc(\"bbbbb\", writer);\n    addDoc(\"ddddd\", writer);\n    writer.optimize();\n    writer.close();\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"aaaaa\"));   \n    Hits hits = searcher.search(query);\n    assertEquals(3, hits.length());\n\n    // not similar enough:\n    query = new FuzzyQuery(new Term(\"field\", \"xxxxx\"));  \t\n    hits = searcher.search(query);\n    assertEquals(0, hits.length());\n    query = new FuzzyQuery(new Term(\"field\", \"aaccc\"));   // edit distance to \"aaaaa\" = 3\n    hits = searcher.search(query);\n    assertEquals(0, hits.length());\n\n    // query identical to a word in the index:\n    query = new FuzzyQuery(new Term(\"field\", \"aaaaa\"));   \n    hits = searcher.search(query);\n    assertEquals(3, hits.length());\n    assertEquals(hits.doc(0).get(\"field\"), (\"aaaaa\"));\n    // default allows for up to two edits:\n    assertEquals(hits.doc(1).get(\"field\"), (\"aaaab\"));\n    assertEquals(hits.doc(2).get(\"field\"), (\"aaabb\"));\n\n    // query similar to a word in the index:\n    query = new FuzzyQuery(new Term(\"field\", \"aaaac\"));   \n    hits = searcher.search(query);\n    assertEquals(3, hits.length());\n    assertEquals(hits.doc(0).get(\"field\"), (\"aaaaa\"));\n    assertEquals(hits.doc(1).get(\"field\"), (\"aaaab\"));\n    assertEquals(hits.doc(2).get(\"field\"), (\"aaabb\"));\n\n    query = new FuzzyQuery(new Term(\"field\", \"ddddX\"));   \n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    assertEquals(hits.doc(0).get(\"field\"), (\"ddddd\"));\n\n    // different field = no match:\n    query = new FuzzyQuery(new Term(\"anotherfield\", \"ddddX\"));   \n    hits = searcher.search(query);\n    assertEquals(0, hits.length());\n\n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testDefaultFuzziness() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    addDoc(\"aaaaa\", writer);\n    addDoc(\"aaaab\", writer);\n    addDoc(\"aaabb\", writer);\n    addDoc(\"aabbb\", writer);\n    addDoc(\"abbbb\", writer);\n    addDoc(\"bbbbb\", writer);\n    addDoc(\"ddddd\", writer);\n    writer.optimize();\n    writer.close();\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"aaaaa\"));   \n    Hits hits = searcher.search(query);\n    assertEquals(3, hits.length());\n\n    // not similar enough:\n    query = new FuzzyQuery(new Term(\"field\", \"xxxxx\"));  \t\n    hits = searcher.search(query);\n    assertEquals(0, hits.length());\n    query = new FuzzyQuery(new Term(\"field\", \"aaccc\"));   // edit distance to \"aaaaa\" = 3\n    hits = searcher.search(query);\n    assertEquals(0, hits.length());\n\n    // query identical to a word in the index:\n    query = new FuzzyQuery(new Term(\"field\", \"aaaaa\"));   \n    hits = searcher.search(query);\n    assertEquals(3, hits.length());\n    assertEquals(hits.doc(0).get(\"field\"), (\"aaaaa\"));\n    // default allows for up to two edits:\n    assertEquals(hits.doc(1).get(\"field\"), (\"aaaab\"));\n    assertEquals(hits.doc(2).get(\"field\"), (\"aaabb\"));\n\n    // query similar to a word in the index:\n    query = new FuzzyQuery(new Term(\"field\", \"aaaac\"));   \n    hits = searcher.search(query);\n    assertEquals(3, hits.length());\n    assertEquals(hits.doc(0).get(\"field\"), (\"aaaaa\"));\n    assertEquals(hits.doc(1).get(\"field\"), (\"aaaab\"));\n    assertEquals(hits.doc(2).get(\"field\"), (\"aaabb\"));\n\n    query = new FuzzyQuery(new Term(\"field\", \"ddddX\"));   \n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    assertEquals(hits.doc(0).get(\"field\"), (\"ddddd\"));\n\n    // different field = no match:\n    query = new FuzzyQuery(new Term(\"anotherfield\", \"ddddX\"));   \n    hits = searcher.search(query);\n    assertEquals(0, hits.length());\n\n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12056d6fe7f31fb827126f5e3b307e6af56cb080":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c16787e95e3c32c394cf5195e223e39ff5cbda3a":["12056d6fe7f31fb827126f5e3b307e6af56cb080"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c16787e95e3c32c394cf5195e223e39ff5cbda3a"]},"commit2Childs":{"12056d6fe7f31fb827126f5e3b307e6af56cb080":["c16787e95e3c32c394cf5195e223e39ff5cbda3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12056d6fe7f31fb827126f5e3b307e6af56cb080"],"c16787e95e3c32c394cf5195e223e39ff5cbda3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}