{"path":"src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","commits":[{"id":"0bcbf4ed0baed877c8b36d024e17a99bedfdd904","date":1075500600,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Skips to the first match beyond the current whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  boolean skipTo(int target) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":["07c6861cb029cd251d930aa4c4578c8ca21aa957","9fe23c4eedde49293de662daf1efc224a458d86a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5af54d2e9e95d08aae526fa69cdd34b66a49b763","date":1075728472,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","sourceNew":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  boolean skipTo(int target) throws IOException;\n\n","sourceOld":"  /** Skips to the first match beyond the current whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  boolean skipTo(int target) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9fe23c4eedde49293de662daf1efc224a458d86a","date":1250108897,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","sourceNew":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","sourceOld":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  boolean skipTo(int target) throws IOException;\n\n","bugFix":["0bcbf4ed0baed877c8b36d024e17a99bedfdd904"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","sourceNew":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","sourceOld":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9fe23c4eedde49293de662daf1efc224a458d86a":["5af54d2e9e95d08aae526fa69cdd34b66a49b763"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0bcbf4ed0baed877c8b36d024e17a99bedfdd904":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["9fe23c4eedde49293de662daf1efc224a458d86a"],"5af54d2e9e95d08aae526fa69cdd34b66a49b763":["0bcbf4ed0baed877c8b36d024e17a99bedfdd904"]},"commit2Childs":{"9fe23c4eedde49293de662daf1efc224a458d86a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0bcbf4ed0baed877c8b36d024e17a99bedfdd904"],"0bcbf4ed0baed877c8b36d024e17a99bedfdd904":["5af54d2e9e95d08aae526fa69cdd34b66a49b763"],"5af54d2e9e95d08aae526fa69cdd34b66a49b763":["9fe23c4eedde49293de662daf1efc224a458d86a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}