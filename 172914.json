{"path":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","commits":[{"id":"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","date":1323543613,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#initialize(SegmentReader[]).mjava","sourceNew":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n    topLevelContext = ReaderUtil.buildReaderContext(this);\n  }\n\n","sourceOld":"  private void initialize(SegmentReader[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    final AtomicReaderContext[] subReaderCtx = new AtomicReaderContext[subReaders.length];\n    topLevelReaderContext = new CompositeReaderContext(this, subReaderCtx, subReaderCtx);\n    final List<Fields> subFields = new ArrayList<Fields>();\n    \n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      subReaderCtx[i] = new AtomicReaderContext(topLevelReaderContext, subReaders[i], i, maxDoc, i, maxDoc);\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n      \n      final Fields f = subReaders[i].fields();\n      if (f != null) {\n        subFields.add(f);\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#initialize(SegmentReader[]).mjava","sourceNew":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n    topLevelContext = ReaderUtil.buildReaderContext(this);\n  }\n\n","sourceOld":"  private void initialize(SegmentReader[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    final AtomicReaderContext[] subReaderCtx = new AtomicReaderContext[subReaders.length];\n    topLevelReaderContext = new CompositeReaderContext(this, subReaderCtx, subReaderCtx);\n    final List<Fields> subFields = new ArrayList<Fields>();\n    \n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      subReaderCtx[i] = new AtomicReaderContext(topLevelReaderContext, subReaders[i], i, maxDoc, i, maxDoc);\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n      \n      final Fields f = subReaders[i].fields();\n      if (f != null) {\n        subFields.add(f);\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","sourceNew":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n    topLevelContext = (CompositeReaderContext) ReaderUtil.buildReaderContext(this);\n  }\n\n","sourceOld":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n    topLevelContext = ReaderUtil.buildReaderContext(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"72eb67b05aa3b9d64968e9a9086135c2e969e681","date":1327844263,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","sourceNew":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n  }\n\n","sourceOld":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n    topLevelContext = (CompositeReaderContext) ReaderUtil.buildReaderContext(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","sourceNew":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n  }\n\n","sourceOld":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n    topLevelContext = ReaderUtil.buildReaderContext(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#BaseMultiReader(R[]).mjava","sourceNew":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n  }\n\n","sourceOld":"  protected BaseMultiReader(R[] subReaders) throws IOException {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    int maxDoc = 0, numDocs = 0;\n    boolean hasDeletions = false;\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n      numDocs += subReaders[i].numDocs();    // compute numDocs\n      if (subReaders[i].hasDeletions()) {\n        hasDeletions = true;\n      }\n    }\n    starts[subReaders.length] = maxDoc;\n    this.maxDoc = maxDoc;\n    this.numDocs = numDocs;\n    this.hasDeletions = hasDeletions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"72eb67b05aa3b9d64968e9a9086135c2e969e681":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","72eb67b05aa3b9d64968e9a9086135c2e969e681"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4"]},"commit2Childs":{"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"72eb67b05aa3b9d64968e9a9086135c2e969e681":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["72eb67b05aa3b9d64968e9a9086135c2e969e681"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}