{"path":"solr/core/src/java/org/apache/solr/schema/BoolField#createFields(SchemaField,Object,float).mjava","commits":[{"id":"7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5","date":1465691899,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolField#createFields(SchemaField,Object,float).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    IndexableField fval = createField(field, value, boost);\n\n    if (field.hasDocValues()) {\n      IndexableField docval;\n      final BytesRef bytes = new BytesRef(toInternal(value.toString()));\n      if (field.multiValued()) {\n        docval = new SortedSetDocValuesField(field.getName(), bytes);\n      } else {\n        docval = new SortedDocValuesField(field.getName(), bytes);\n      }\n\n      // Only create a list of we have 2 values...\n      if (fval != null) {\n        List<IndexableField> fields = new ArrayList<>(2);\n        fields.add(fval);\n        fields.add(docval);\n        return fields;\n      }\n\n      fval = docval;\n    }\n    return Collections.singletonList(fval);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolField#createFields(SchemaField,Object,float).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    IndexableField fval = createField(field, value, boost);\n\n    if (field.hasDocValues()) {\n      IndexableField docval;\n      final BytesRef bytes = new BytesRef(toInternal(value.toString()));\n      if (field.multiValued()) {\n        docval = new SortedSetDocValuesField(field.getName(), bytes);\n      } else {\n        docval = new SortedDocValuesField(field.getName(), bytes);\n      }\n\n      // Only create a list of we have 2 values...\n      if (fval != null) {\n        List<IndexableField> fields = new ArrayList<>(2);\n        fields.add(fval);\n        fields.add(docval);\n        return fields;\n      }\n\n      fval = docval;\n    }\n    return Collections.singletonList(fval);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolField#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/BoolField#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value) {\n    IndexableField fval = createField(field, value);\n\n    if (field.hasDocValues()) {\n      IndexableField docval;\n      final BytesRef bytes = new BytesRef(toInternal(value.toString()));\n      if (field.multiValued()) {\n        docval = new SortedSetDocValuesField(field.getName(), bytes);\n      } else {\n        docval = new SortedDocValuesField(field.getName(), bytes);\n      }\n\n      // Only create a list of we have 2 values...\n      if (fval != null) {\n        List<IndexableField> fields = new ArrayList<>(2);\n        fields.add(fval);\n        fields.add(docval);\n        return fields;\n      }\n\n      fval = docval;\n    }\n    return Collections.singletonList(fval);\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    IndexableField fval = createField(field, value, boost);\n\n    if (field.hasDocValues()) {\n      IndexableField docval;\n      final BytesRef bytes = new BytesRef(toInternal(value.toString()));\n      if (field.multiValued()) {\n        docval = new SortedSetDocValuesField(field.getName(), bytes);\n      } else {\n        docval = new SortedDocValuesField(field.getName(), bytes);\n      }\n\n      // Only create a list of we have 2 values...\n      if (fval != null) {\n        List<IndexableField> fields = new ArrayList<>(2);\n        fields.add(fval);\n        fields.add(docval);\n        return fields;\n      }\n\n      fval = docval;\n    }\n    return Collections.singletonList(fval);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5":["acd9883560fd89e6448b2b447302fe543040cd4f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}