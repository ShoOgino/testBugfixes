{"path":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Field luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","sourceNew":null,"sourceOld":"  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Field luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","pathOld":"src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","sourceNew":"  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Field luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","sourceOld":"  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Field luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Field luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"398bfcb539107b92d9af0013294b442326b314a6","date":1269035614,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","sourceNew":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Field luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","sourceOld":"  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Field luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f78c4193e9cdb55c470990e3b32f3a02c446812b","date":1294090250,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","sourceNew":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Fieldable luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Field luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","sourceNew":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Fieldable luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Field luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","sourceNew":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Fieldable luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Field luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","sourceNew":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Fieldable luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Fieldable luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","sourceNew":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Fieldable luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Fieldable luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testTermVectorFields().mjava","sourceNew":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Fieldable luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorFields() {\n    \n    IndexSchema ischema = new IndexSchema(solrConfig, getSchemaFile(), null);\n    SchemaField f; // Solr field type\n    Fieldable luf; // Lucene field\n\n    f = ischema.getField(\"test_basictv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector());\n    assertTrue(luf.isTermVectorStored());\n\n    f = ischema.getField(\"test_notv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(!f.storeTermVector());\n    assertTrue(!luf.isTermVectorStored());    \n\n    f = ischema.getField(\"test_postv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions());\n    assertTrue(luf.isStorePositionWithTermVector());\n\n    f = ischema.getField(\"test_offtv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector());\n\n    f = ischema.getField(\"test_posofftv\");\n    luf = f.createField(\"test\", 0f);\n    assertTrue(f.storeTermVector() && f.storeTermPositions() && f.storeTermOffsets());\n    assertTrue(luf.isStoreOffsetWithTermVector() && luf.isStorePositionWithTermVector());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["398bfcb539107b92d9af0013294b442326b314a6","f78c4193e9cdb55c470990e3b32f3a02c446812b"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["f78c4193e9cdb55c470990e3b32f3a02c446812b","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"398bfcb539107b92d9af0013294b442326b314a6":["1da8d55113b689b06716246649de6f62430f15c0"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["f78c4193e9cdb55c470990e3b32f3a02c446812b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["f78c4193e9cdb55c470990e3b32f3a02c446812b"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["398bfcb539107b92d9af0013294b442326b314a6","f78c4193e9cdb55c470990e3b32f3a02c446812b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"f78c4193e9cdb55c470990e3b32f3a02c446812b":["398bfcb539107b92d9af0013294b442326b314a6"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"398bfcb539107b92d9af0013294b442326b314a6":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","f78c4193e9cdb55c470990e3b32f3a02c446812b"],"1da8d55113b689b06716246649de6f62430f15c0":["398bfcb539107b92d9af0013294b442326b314a6"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"f78c4193e9cdb55c470990e3b32f3a02c446812b":["70ad682703b8585f5d0a637efec044d57ec05efb","c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}