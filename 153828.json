{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVGroupFacetCollector.GroupSortedBR.FacetSortedBR#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2","date":1331803866,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVGroupFacetCollector.GroupSortedBR.FacetSortedBR#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"      public void setNextReader(AtomicReaderContext context) throws IOException {\n        if (segmentFacetCounts != null) {\n          segmentResults.add(createSegmentResult());\n        }\n\n        groupFieldSource = getDocValuesSortedSource(groupField, groupDvType, groupDiskResident, context.reader());\n        facetFieldSource = getDocValuesSortedSource(facetField, facetFieldDvType, facetDiskResident, context.reader());\n        segmentFacetCounts = new int[facetFieldSource.getValueCount()];\n        segmentTotalCount = 0;\n\n        segmentGroupedFacetHits.clear();\n        for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n          int facetOrd = facetFieldSource.getOrdByValue(groupedFacetHit.facetValue, facetSpare);\n          if (facetOrd < 0) {\n            continue;\n          }\n\n          int groupOrd = groupFieldSource.getOrdByValue(groupedFacetHit.groupValue, groupSpare);\n          if (groupOrd < 0) {\n            continue;\n          }\n\n          int segmentGroupedFacetsIndex = (groupOrd * facetFieldSource.getValueCount()) + facetOrd;\n          segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n        }\n\n        if (facetPrefix != null) {\n          startFacetOrd = facetFieldSource.getOrdByValue(facetPrefix, facetSpare);\n          if (startFacetOrd < 0) {\n            // Points to the ord one higher than facetPrefix\n            startFacetOrd = -startFacetOrd - 1;\n          }\n          BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n          facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n          endFacetOrd = facetFieldSource.getOrdByValue(facetEndPrefix, facetSpare);\n          endFacetOrd = -endFacetOrd - 1; // Points to the ord one higher than facetEndPrefix\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = facetFieldSource.getValueCount();\n        }\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/dv/DVGroupFacetCollector.GroupSortedBR.FacetSortedBR#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVGroupFacetCollector.GroupSortedBR.FacetSortedBR#setNextReader(AtomicReaderContext).mjava","sourceNew":"      public void setNextReader(AtomicReaderContext context) throws IOException {\n        if (segmentFacetCounts != null) {\n          segmentResults.add(createSegmentResult());\n        }\n\n        groupFieldSource = getDocValuesSortedSource(groupField, groupDvType, groupDiskResident, context.reader());\n        facetFieldSource = getDocValuesSortedSource(facetField, facetFieldDvType, facetDiskResident, context.reader());\n        segmentFacetCounts = new int[facetFieldSource.getValueCount()];\n        segmentTotalCount = 0;\n\n        segmentGroupedFacetHits.clear();\n        for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n          int facetOrd = facetFieldSource.getOrdByValue(groupedFacetHit.facetValue, facetSpare);\n          if (facetOrd < 0) {\n            continue;\n          }\n\n          int groupOrd = groupFieldSource.getOrdByValue(groupedFacetHit.groupValue, groupSpare);\n          if (groupOrd < 0) {\n            continue;\n          }\n\n          int segmentGroupedFacetsIndex = (groupOrd * facetFieldSource.getValueCount()) + facetOrd;\n          segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n        }\n\n        if (facetPrefix != null) {\n          startFacetOrd = facetFieldSource.getOrdByValue(facetPrefix, facetSpare);\n          if (startFacetOrd < 0) {\n            // Points to the ord one higher than facetPrefix\n            startFacetOrd = -startFacetOrd - 1;\n          }\n          BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n          facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n          endFacetOrd = facetFieldSource.getOrdByValue(facetEndPrefix, facetSpare);\n          endFacetOrd = -endFacetOrd - 1; // Points to the ord one higher than facetEndPrefix\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = facetFieldSource.getValueCount();\n        }\n      }\n\n","sourceOld":"      public void setNextReader(AtomicReaderContext context) throws IOException {\n        if (segmentFacetCounts != null) {\n          segmentResults.add(createSegmentResult());\n        }\n\n        groupFieldSource = getDocValuesSortedSource(groupField, groupDvType, groupDiskResident, context.reader());\n        facetFieldSource = getDocValuesSortedSource(facetField, facetFieldDvType, facetDiskResident, context.reader());\n        segmentFacetCounts = new int[facetFieldSource.getValueCount()];\n        segmentTotalCount = 0;\n\n        segmentGroupedFacetHits.clear();\n        for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n          int facetOrd = facetFieldSource.getOrdByValue(groupedFacetHit.facetValue, facetSpare);\n          if (facetOrd < 0) {\n            continue;\n          }\n\n          int groupOrd = groupFieldSource.getOrdByValue(groupedFacetHit.groupValue, groupSpare);\n          if (groupOrd < 0) {\n            continue;\n          }\n\n          int segmentGroupedFacetsIndex = (groupOrd * facetFieldSource.getValueCount()) + facetOrd;\n          segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n        }\n\n        if (facetPrefix != null) {\n          startFacetOrd = facetFieldSource.getOrdByValue(facetPrefix, facetSpare);\n          if (startFacetOrd < 0) {\n            // Points to the ord one higher than facetPrefix\n            startFacetOrd = -startFacetOrd - 1;\n          }\n          BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n          facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n          endFacetOrd = facetFieldSource.getOrdByValue(facetEndPrefix, facetSpare);\n          endFacetOrd = -endFacetOrd - 1; // Points to the ord one higher than facetEndPrefix\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = facetFieldSource.getValueCount();\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2"],"8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}