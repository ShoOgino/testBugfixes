{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testPositionIncrements().mjava","commits":[{"id":"2ef33643766c9307007cb3a10ac655ee47a20893","date":1256873204,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testPositionIncrements().mjava","pathOld":"/dev/null","sourceNew":"\t/*\n\t * Test that position increments are adjusted correctly for stopwords.\n\t */\n\tpublic void testPositionIncrements() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_CURRENT);\n\n\t  assertAnalyzesTo(analyzer, \"ประโยคว่า the ประโยคว่า\",\n\t          new String[] { \"ประโยค\", \"ว่า\", \"ประโยค\", \"ว่า\" },\n\t          new int[] { 0, 6, 14, 20 },\n\t          new int[] { 6, 9, 20, 23 },\n\t          new int[] { 1, 1, 2, 1 });\n\t \n\t  // case that a stopword is adjacent to thai text, with no whitespace\n\t  assertAnalyzesTo(analyzer, \"ประโยคว่าtheประโยคว่า\",\n\t      new String[] { \"ประโยค\", \"ว่า\", \"ประโยค\", \"ว่า\" },\n\t      new int[] { 0, 6, 12, 18 },\n\t      new int[] { 6, 9, 18, 21 },\n\t      new int[] { 1, 1, 2, 1 });\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testPositionIncrements().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testPositionIncrements().mjava","sourceNew":"\t/*\n\t * Test that position increments are adjusted correctly for stopwords.\n\t */\n\tpublic void testPositionIncrements() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\n\t  assertAnalyzesTo(analyzer, \"ประโยคว่า the ประโยคว่า\",\n\t          new String[] { \"ประโยค\", \"ว่า\", \"ประโยค\", \"ว่า\" },\n\t          new int[] { 0, 6, 14, 20 },\n\t          new int[] { 6, 9, 20, 23 },\n\t          new int[] { 1, 1, 2, 1 });\n\t \n\t  // case that a stopword is adjacent to thai text, with no whitespace\n\t  assertAnalyzesTo(analyzer, \"ประโยคว่าtheประโยคว่า\",\n\t      new String[] { \"ประโยค\", \"ว่า\", \"ประโยค\", \"ว่า\" },\n\t      new int[] { 0, 6, 12, 18 },\n\t      new int[] { 6, 9, 18, 21 },\n\t      new int[] { 1, 1, 2, 1 });\n\t}\n\n","sourceOld":"\t/*\n\t * Test that position increments are adjusted correctly for stopwords.\n\t */\n\tpublic void testPositionIncrements() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(Version.LUCENE_CURRENT);\n\n\t  assertAnalyzesTo(analyzer, \"ประโยคว่า the ประโยคว่า\",\n\t          new String[] { \"ประโยค\", \"ว่า\", \"ประโยค\", \"ว่า\" },\n\t          new int[] { 0, 6, 14, 20 },\n\t          new int[] { 6, 9, 20, 23 },\n\t          new int[] { 1, 1, 2, 1 });\n\t \n\t  // case that a stopword is adjacent to thai text, with no whitespace\n\t  assertAnalyzesTo(analyzer, \"ประโยคว่าtheประโยคว่า\",\n\t      new String[] { \"ประโยค\", \"ว่า\", \"ประโยค\", \"ว่า\" },\n\t      new int[] { 0, 6, 12, 18 },\n\t      new int[] { 6, 9, 18, 21 },\n\t      new int[] { 1, 1, 2, 1 });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testPositionIncrements().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testPositionIncrements().mjava","sourceNew":"\t/*\n\t * Test that position increments are adjusted correctly for stopwords.\n\t */\n\tpublic void testPositionIncrements() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\n\t  assertAnalyzesTo(analyzer, \"ประโยคว่า the ประโยคว่า\",\n\t          new String[] { \"ประโยค\", \"ว่า\", \"ประโยค\", \"ว่า\" },\n\t          new int[] { 0, 6, 14, 20 },\n\t          new int[] { 6, 9, 20, 23 },\n\t          new int[] { 1, 1, 2, 1 });\n\t \n\t  // case that a stopword is adjacent to thai text, with no whitespace\n\t  assertAnalyzesTo(analyzer, \"ประโยคว่าtheประโยคว่า\",\n\t      new String[] { \"ประโยค\", \"ว่า\", \"ประโยค\", \"ว่า\" },\n\t      new int[] { 0, 6, 12, 18 },\n\t      new int[] { 6, 9, 18, 21 },\n\t      new int[] { 1, 1, 2, 1 });\n\t}\n\n","sourceOld":"\t/*\n\t * Test that position increments are adjusted correctly for stopwords.\n\t */\n\tpublic void testPositionIncrements() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\n\t  assertAnalyzesTo(analyzer, \"ประโยคว่า the ประโยคว่า\",\n\t          new String[] { \"ประโยค\", \"ว่า\", \"ประโยค\", \"ว่า\" },\n\t          new int[] { 0, 6, 14, 20 },\n\t          new int[] { 6, 9, 20, 23 },\n\t          new int[] { 1, 1, 2, 1 });\n\t \n\t  // case that a stopword is adjacent to thai text, with no whitespace\n\t  assertAnalyzesTo(analyzer, \"ประโยคว่าtheประโยคว่า\",\n\t      new String[] { \"ประโยค\", \"ว่า\", \"ประโยค\", \"ว่า\" },\n\t      new int[] { 0, 6, 12, 18 },\n\t      new int[] { 6, 9, 18, 21 },\n\t      new int[] { 1, 1, 2, 1 });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ef33643766c9307007cb3a10ac655ee47a20893":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["2ef33643766c9307007cb3a10ac655ee47a20893"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"2ef33643766c9307007cb3a10ac655ee47a20893":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2ef33643766c9307007cb3a10ac655ee47a20893"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}