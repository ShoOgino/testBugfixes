{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#req(List[Scorer],boolean).mjava","commits":[{"id":"a18a03f140cbd3f78694787c9f98cf452aab7b7f","date":1423241474,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#req(List[Scorer],boolean).mjava","pathOld":"/dev/null","sourceNew":"  private Scorer req(List<Scorer> required, boolean disableCoord) {\n    if (required.size() == 1) {\n      Scorer req = required.get(0);\n      if (!disableCoord && maxCoord > 1) {\n        return new BooleanTopLevelScorers.BoostedScorer(req, coord(1, maxCoord));\n      } else {\n        return req;\n      }\n    } else {\n      return new ConjunctionScorer(this, \n                                   required.toArray(new Scorer[required.size()]),\n                                   disableCoord ? 1.0F : coord(required.size(), maxCoord));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25f698887111a682424e759ba36083180899a1fd","date":1423588899,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#req(List[Scorer],List[Scorer],boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#req(List[Scorer],boolean).mjava","sourceNew":"  /** Create a new scorer for the given required clauses. Note that\n   *  {@code requiredScoring} is a subset of {@code required} containing\n   *  required clauses that should participate in scoring. */\n  private Scorer req(List<Scorer> required, List<Scorer> requiredScoring, boolean disableCoord) {\n    if (required.size() == 1) {\n      Scorer req = required.get(0);\n\n      if (needsScores == false ||\n          (requiredScoring.size() == 1 && (disableCoord || maxCoord == 1))) {\n        return req;\n      } else {\n        return new BooleanTopLevelScorers.BoostedScorer(req, coord(requiredScoring.size(), maxCoord));\n      }\n    } else {\n      return new ConjunctionScorer(this, required, requiredScoring,\n                                   disableCoord ? 1.0F : coord(requiredScoring.size(), maxCoord));\n    }\n  }\n\n","sourceOld":"  private Scorer req(List<Scorer> required, boolean disableCoord) {\n    if (required.size() == 1) {\n      Scorer req = required.get(0);\n      if (!disableCoord && maxCoord > 1) {\n        return new BooleanTopLevelScorers.BoostedScorer(req, coord(1, maxCoord));\n      } else {\n        return req;\n      }\n    } else {\n      return new ConjunctionScorer(this, \n                                   required.toArray(new Scorer[required.size()]),\n                                   disableCoord ? 1.0F : coord(required.size(), maxCoord));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a18a03f140cbd3f78694787c9f98cf452aab7b7f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"25f698887111a682424e759ba36083180899a1fd":["a18a03f140cbd3f78694787c9f98cf452aab7b7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["25f698887111a682424e759ba36083180899a1fd"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a18a03f140cbd3f78694787c9f98cf452aab7b7f"],"a18a03f140cbd3f78694787c9f98cf452aab7b7f":["25f698887111a682424e759ba36083180899a1fd"],"25f698887111a682424e759ba36083180899a1fd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}