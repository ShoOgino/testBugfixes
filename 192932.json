{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#init(Query,String,CachingTokenFilter,IndexReader).mjava","commits":[{"id":"296b8b38a87feb478921f77834a2302dfe77641c","date":1209506838,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#init(Query,String,CachingTokenFilter,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * @param query\r\n   * @param field\r\n   * @param tokenStream\r\n   * @param reader\r\n   * @throws IOException\r\n   */\r\n  private void init(Query query, String field,\r\n    CachingTokenFilter cachingTokenFilter, IndexReader reader)\r\n    throws IOException {\r\n    WeightedSpanTermExtractor qse = defaultField == null ? new WeightedSpanTermExtractor()\r\n      : new WeightedSpanTermExtractor(defaultField);\r\n    \r\n    qse.setHighlightCnstScrRngQuery(highlightCnstScrRngQuery);\r\n\r\n    if (reader == null) {\r\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTerms(query,\r\n          cachingTokenFilter, field);\r\n    } else {\r\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTermsWithScores(query,\r\n          cachingTokenFilter, field, reader);\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#init(Query,String,CachingTokenFilter,IndexReader).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#init(Query,String,CachingTokenFilter,IndexReader).mjava","sourceNew":"  /**\n   * @param query\n   * @param field\n   * @param tokenStream\n   * @param reader\n   * @throws IOException\n   */\n  private void init(Query query, String field,\n    CachingTokenFilter cachingTokenFilter, IndexReader reader)\n    throws IOException {\n    WeightedSpanTermExtractor qse = defaultField == null ? new WeightedSpanTermExtractor()\n      : new WeightedSpanTermExtractor(defaultField);\n    \n    qse.setHighlightCnstScrRngQuery(highlightCnstScrRngQuery);\n\n    if (reader == null) {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTerms(query,\n          cachingTokenFilter, field);\n    } else {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTermsWithScores(query,\n          cachingTokenFilter, field, reader);\n    }\n  }\n\n","sourceOld":"  /**\r\n   * @param query\r\n   * @param field\r\n   * @param tokenStream\r\n   * @param reader\r\n   * @throws IOException\r\n   */\r\n  private void init(Query query, String field,\r\n    CachingTokenFilter cachingTokenFilter, IndexReader reader)\r\n    throws IOException {\r\n    WeightedSpanTermExtractor qse = defaultField == null ? new WeightedSpanTermExtractor()\r\n      : new WeightedSpanTermExtractor(defaultField);\r\n    \r\n    qse.setHighlightCnstScrRngQuery(highlightCnstScrRngQuery);\r\n\r\n    if (reader == null) {\r\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTerms(query,\r\n          cachingTokenFilter, field);\r\n    } else {\r\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTermsWithScores(query,\r\n          cachingTokenFilter, field, reader);\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e89ac7460543b39f8de96654421e96790abaa26","date":1239329386,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#init(Query,String,CachingTokenFilter,IndexReader,boolean).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#init(Query,String,CachingTokenFilter,IndexReader).mjava","sourceNew":"  /**\n   * @param query\n   * @param field\n   * @param tokenStream\n   * @param reader\n   * @throws IOException\n   */\n  private void init(Query query, String field,\n    CachingTokenFilter cachingTokenFilter, IndexReader reader, boolean expandMultiTermQuery)\n    throws IOException {\n    WeightedSpanTermExtractor qse = defaultField == null ? new WeightedSpanTermExtractor()\n      : new WeightedSpanTermExtractor(defaultField);\n    \n    qse.setHighlightCnstScrRngQuery(highlightCnstScrRngQuery);\n    qse.setExpandMultiTermQuery(expandMultiTermQuery);\n    if (reader == null) {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTerms(query,\n          cachingTokenFilter, field);\n    } else {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTermsWithScores(query,\n          cachingTokenFilter, field, reader);\n    }\n  }\n\n","sourceOld":"  /**\n   * @param query\n   * @param field\n   * @param tokenStream\n   * @param reader\n   * @throws IOException\n   */\n  private void init(Query query, String field,\n    CachingTokenFilter cachingTokenFilter, IndexReader reader)\n    throws IOException {\n    WeightedSpanTermExtractor qse = defaultField == null ? new WeightedSpanTermExtractor()\n      : new WeightedSpanTermExtractor(defaultField);\n    \n    qse.setHighlightCnstScrRngQuery(highlightCnstScrRngQuery);\n\n    if (reader == null) {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTerms(query,\n          cachingTokenFilter, field);\n    } else {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTermsWithScores(query,\n          cachingTokenFilter, field, reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["296b8b38a87feb478921f77834a2302dfe77641c"],"1e89ac7460543b39f8de96654421e96790abaa26":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"296b8b38a87feb478921f77834a2302dfe77641c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e89ac7460543b39f8de96654421e96790abaa26"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["296b8b38a87feb478921f77834a2302dfe77641c"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["1e89ac7460543b39f8de96654421e96790abaa26"],"1e89ac7460543b39f8de96654421e96790abaa26":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"296b8b38a87feb478921f77834a2302dfe77641c":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}