{"path":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/AttrListImpl#main(String[]).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/AttrListImpl#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"    /**/\n    // for testing\n    public static void main(String[] args) throws Exception {\n        AttrListImpl alist;\n        Attribute attr;\n        java.io.BufferedReader r;\n        java.util.StringTokenizer tok;\n        String op;\n        \n        if (args.length > 1) {\n            alist = new AttrListImpl(Integer.parseInt(args[0]));\n        } else {\n            alist = new AttrListImpl();\n        }\n        \n        System.out.println(\n            \"Enter operations... op's are one of\\n\"+\n            \"put <key> <val>\\n\"+\n            \"get <key>\\n\"+\n            \"rem <key>\\n\"+\n            \"size\\n\"+\n            \"quit\\n\");\n        \n        r = new java.io.BufferedReader(\n                new java.io.InputStreamReader(System.in)); \n        while (true) {\n            System.out.print(\"doyourworst> \");\n            tok = new java.util.StringTokenizer(r.readLine());\n            op = tok.nextToken();\n            if (\"put\".equals(op)) {\n                attr = new AttrImpl(tok.nextToken(), tok.nextToken());\n                System.out.println(\"Value: \" +\n                        alist.setAttribute(attr));\n            } else if (\"get\".equals(op)) {\n                attr = alist.getAttribute(tok.nextToken());\n                System.out.println(\"Value: \" +\n                        (attr == null ? \"No such element\" : attr.toString()));\n            } else if (\"rem\".equals(op)) {\n                attr = alist.remove(tok.nextToken());\n                System.out.println(\"Value: \" + attr);\n            } else if (op.startsWith(\"s\")) {\n                System.out.println(\"Size: \" + alist.getLength());\n            } else if (op.startsWith(\"q\")) {\n                break;\n            } else {\n                System.out.println(\"Unrecognized op: \" + op);\n            }\n            \n            System.out.println(\"AttributeList: \" + alist);\n            System.out.println(\"Size: \" + alist.getLength());\n            System.out.println();\n        }\n    }\n    //*/\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e","date":1022957716,"type":4,"author":"cmarschner","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/AttrListImpl#main(String[]).mjava","sourceNew":null,"sourceOld":"    /**/\n    // for testing\n    public static void main(String[] args) throws Exception {\n        AttrListImpl alist;\n        Attribute attr;\n        java.io.BufferedReader r;\n        java.util.StringTokenizer tok;\n        String op;\n        \n        if (args.length > 1) {\n            alist = new AttrListImpl(Integer.parseInt(args[0]));\n        } else {\n            alist = new AttrListImpl();\n        }\n        \n        System.out.println(\n            \"Enter operations... op's are one of\\n\"+\n            \"put <key> <val>\\n\"+\n            \"get <key>\\n\"+\n            \"rem <key>\\n\"+\n            \"size\\n\"+\n            \"quit\\n\");\n        \n        r = new java.io.BufferedReader(\n                new java.io.InputStreamReader(System.in)); \n        while (true) {\n            System.out.print(\"doyourworst> \");\n            tok = new java.util.StringTokenizer(r.readLine());\n            op = tok.nextToken();\n            if (\"put\".equals(op)) {\n                attr = new AttrImpl(tok.nextToken(), tok.nextToken());\n                System.out.println(\"Value: \" +\n                        alist.setAttribute(attr));\n            } else if (\"get\".equals(op)) {\n                attr = alist.getAttribute(tok.nextToken());\n                System.out.println(\"Value: \" +\n                        (attr == null ? \"No such element\" : attr.toString()));\n            } else if (\"rem\".equals(op)) {\n                attr = alist.remove(tok.nextToken());\n                System.out.println(\"Value: \" + attr);\n            } else if (op.startsWith(\"s\")) {\n                System.out.println(\"Size: \" + alist.getLength());\n            } else if (op.startsWith(\"q\")) {\n                break;\n            } else {\n                System.out.println(\"Unrecognized op: \" + op);\n            }\n            \n            System.out.println(\"AttributeList: \" + alist);\n            System.out.println(\"Size: \" + alist.getLength());\n            System.out.println();\n        }\n    }\n    //*/\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"]},"commit2Childs":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}