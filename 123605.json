{"path":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlBackCompat#getCoreNameFromOrig(String,SolrResourceLoader,String).mjava","commits":[{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlBackCompat#getCoreNameFromOrig(String,SolrResourceLoader,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String getCoreNameFromOrig(String origCoreName, SolrResourceLoader loader, String coreName) {\n\n    // look for an existing node\n    synchronized (coreNodes) {\n      // first look for an exact match\n      Node coreNode = null;\n      for (int i = 0; i < coreNodes.getLength(); i++) {\n        Node node = coreNodes.item(i);\n\n        String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n        if (origCoreName.equals(name)) {\n          if (coreName.equals(origCoreName)) {\n            return name;\n          }\n          return coreName;\n        }\n      }\n\n      if (coreNode == null) {\n        // see if we match with substitution\n        for (int i = 0; i < coreNodes.getLength(); i++) {\n          Node node = coreNodes.item(i);\n          String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n          if (origCoreName.equals(PropertiesUtil.substituteProperty(name,\n              loader.getCoreProperties()))) {\n            if (coreName.equals(origCoreName)) {\n              return name;\n            }\n            return coreName;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9818efa55563ddfecdecafbdd43f4bee9f252e7d","date":1364853872,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#getCoreNameFromOrig(String,SolrResourceLoader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlBackCompat#getCoreNameFromOrig(String,SolrResourceLoader,String).mjava","sourceNew":"  @Override\n  public String getCoreNameFromOrig(String origCoreName, SolrResourceLoader loader, String coreName) {\n\n    if (isAutoDiscover) {\n      // first look for an exact match\n      for (Map.Entry<String, CoreDescriptorPlus> ent : coreDescriptorPlusMap.entrySet()) {\n\n        String name = ent.getValue().getCoreDescriptor().getProperty(CoreDescriptor.CORE_NAME, null);\n        if (origCoreName.equals(name)) {\n          if (coreName.equals(origCoreName)) {\n            return name;\n          }\n          return coreName;\n        }\n      }\n\n      for (Map.Entry<String, CoreDescriptorPlus> ent : coreDescriptorPlusMap.entrySet()) {\n        String name = ent.getValue().getCoreDescriptor().getProperty(CoreDescriptor.CORE_NAME, null);\n        // see if we match with substitution\n        if (origCoreName.equals(PropertiesUtil.substituteProperty(name, loader.getCoreProperties()))) {\n          if (coreName.equals(origCoreName)) {\n            return name;\n          }\n          return coreName;\n        }\n      }\n    } else {\n      // look for an existing node\n      synchronized (coreNodes) {\n        // first look for an exact match\n        Node coreNode = null;\n        for (int i = 0; i < coreNodes.getLength(); i++) {\n          Node node = coreNodes.item(i);\n\n          String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n          if (origCoreName.equals(name)) {\n            if (coreName.equals(origCoreName)) {\n              return name;\n            }\n            return coreName;\n          }\n        }\n\n        if (coreNode == null) {\n          // see if we match with substitution\n          for (int i = 0; i < coreNodes.getLength(); i++) {\n            Node node = coreNodes.item(i);\n            String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n            if (origCoreName.equals(PropertiesUtil.substituteProperty(name,\n                loader.getCoreProperties()))) {\n              if (coreName.equals(origCoreName)) {\n                return name;\n              }\n              return coreName;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public String getCoreNameFromOrig(String origCoreName, SolrResourceLoader loader, String coreName) {\n\n    // look for an existing node\n    synchronized (coreNodes) {\n      // first look for an exact match\n      Node coreNode = null;\n      for (int i = 0; i < coreNodes.getLength(); i++) {\n        Node node = coreNodes.item(i);\n\n        String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n        if (origCoreName.equals(name)) {\n          if (coreName.equals(origCoreName)) {\n            return name;\n          }\n          return coreName;\n        }\n      }\n\n      if (coreNode == null) {\n        // see if we match with substitution\n        for (int i = 0; i < coreNodes.getLength(); i++) {\n          Node node = coreNodes.item(i);\n          String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n          if (origCoreName.equals(PropertiesUtil.substituteProperty(name,\n              loader.getCoreProperties()))) {\n            if (coreName.equals(origCoreName)) {\n              return name;\n            }\n            return coreName;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9818efa55563ddfecdecafbdd43f4bee9f252e7d":["a837c064b67fa63a9394136e31218b908cdcf783"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a837c064b67fa63a9394136e31218b908cdcf783":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9818efa55563ddfecdecafbdd43f4bee9f252e7d"]},"commit2Childs":{"9818efa55563ddfecdecafbdd43f4bee9f252e7d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a837c064b67fa63a9394136e31218b908cdcf783"],"a837c064b67fa63a9394136e31218b908cdcf783":["9818efa55563ddfecdecafbdd43f4bee9f252e7d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}