{"path":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eafa8c5eabc3dacd34680054e6a33bda024080ac","date":1367691488,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.shutdown();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.shutdown();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.shutdown();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.shutdown();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f077558a20149ff0f23405cbae03daeb5aa5a29d","date":1415893048,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aeebe27bce18b879b80f68494c52cda1021b5705","date":1417792137,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":["02d468a946da60dfedb2d8d178fc0c40461f9798"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0","date":1422781929,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new DimensionalIntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DimensionalIntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DimensionalIntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DimensionalIntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7, Field.Store.NO));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new DimensionalIntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DimensionalIntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DimensionalIntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DimensionalIntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"02d468a946da60dfedb2d8d178fc0c40461f9798","date":1465542675,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","bugFix":["aeebe27bce18b879b80f68494c52cda1021b5705"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir1 = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    dir2 = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(dir2, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(dir2);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    //Not many use this setup:\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    dir = newDirectory();\n\n    //Most tests use this setup:\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    ramDir = newDirectory();\n    fieldType = random().nextBoolean() ? FIELD_TYPE_TV : TextField.TYPE_STORED;\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n\n    for (String text : texts) {\n      writer.addDocument(doc(FIELD_NAME, text));\n    }\n\n    // a few tests need other docs...:\n    Document doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc);\n\n    Document childDoc = doc(FIELD_NAME, \"child document\");\n    Document parentDoc = doc(FIELD_NAME, \"parent document\");\n    writer.addDocuments(Arrays.asList(childDoc, parentDoc));\n    \n    writer.forceMerge(1);\n    writer.close();\n    reader = DirectoryReader.open(ramDir);\n\n    //Misc:\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["770342641f7b505eaa8dccdc666158bff2419109"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"d77dafd89756a5161d244985903e3487ca109182":["02d468a946da60dfedb2d8d178fc0c40461f9798"],"f077558a20149ff0f23405cbae03daeb5aa5a29d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"770342641f7b505eaa8dccdc666158bff2419109":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","02d468a946da60dfedb2d8d178fc0c40461f9798"],"02d468a946da60dfedb2d8d178fc0c40461f9798":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["aeebe27bce18b879b80f68494c52cda1021b5705"],"aeebe27bce18b879b80f68494c52cda1021b5705":["f077558a20149ff0f23405cbae03daeb5aa5a29d"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","02d468a946da60dfedb2d8d178fc0c40461f9798"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f077558a20149ff0f23405cbae03daeb5aa5a29d":["aeebe27bce18b879b80f68494c52cda1021b5705"],"770342641f7b505eaa8dccdc666158bff2419109":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"02d468a946da60dfedb2d8d178fc0c40461f9798":["d77dafd89756a5161d244985903e3487ca109182","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["770342641f7b505eaa8dccdc666158bff2419109"],"aeebe27bce18b879b80f68494c52cda1021b5705":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f077558a20149ff0f23405cbae03daeb5aa5a29d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}