{"path":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","commits":[{"id":"0567bdc5c86c94ced64201187cfcef2417d76dda","date":1400678298,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"/dev/null","sourceNew":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.getFieldInfosWriter().write(trackingDir, info.info.name, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a656b32c3aa151037a8c52e9b134acc3cbf482bc","date":1400688195,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"/dev/null","sourceNew":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.getFieldInfosWriter().write(trackingDir, info.info.name, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"/dev/null","sourceNew":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.getFieldInfosWriter().write(trackingDir, info.info.name, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb","date":1411653326,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.getFieldInfosWriter().write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.getFieldInfosWriter().write(trackingDir, info.info.name, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.getFieldInfosWriter().write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.getFieldInfosWriter().write(trackingDir, info.info.name, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":["0567bdc5c86c94ced64201187cfcef2417d76dda"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2fe60a17a7a0cfd101b1169acf089221bc6c166","date":1412767493,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.getFieldInfosWriter().write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.getFieldInfosWriter().write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0267c69e2456a3477a1ad785723f2135da3117e","date":1425317087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.getDocCount(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d60c1bb96a28a26d197c36299f7b6c9c5da617a1","date":1522484702,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir,\n                                                      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa5e39259dfd4a68287c824d3b7e1bc9097dc895","date":1522505041,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir,\n                                                      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e2fe60a17a7a0cfd101b1169acf089221bc6c166":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"55980207f1977bd1463465de1659b821347e2fa8":["c65d2864d936ccf22dc7ec14dd48b4dff7bacceb","e2fe60a17a7a0cfd101b1169acf089221bc6c166"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b0267c69e2456a3477a1ad785723f2135da3117e"],"b0267c69e2456a3477a1ad785723f2135da3117e":["e2fe60a17a7a0cfd101b1169acf089221bc6c166"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["0567bdc5c86c94ced64201187cfcef2417d76dda","c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"0567bdc5c86c94ced64201187cfcef2417d76dda":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["28288370235ed02234a64753cdbf0c6ec096304a","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["28288370235ed02234a64753cdbf0c6ec096304a"],"b7605579001505896d48b07160075a5c8b8e128e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0567bdc5c86c94ced64201187cfcef2417d76dda"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["b0267c69e2456a3477a1ad785723f2135da3117e","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["b0267c69e2456a3477a1ad785723f2135da3117e","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["e2fe60a17a7a0cfd101b1169acf089221bc6c166","b0267c69e2456a3477a1ad785723f2135da3117e"],"b06445ae1731e049327712db0454e5643ca9b7fe":["e2fe60a17a7a0cfd101b1169acf089221bc6c166","b0267c69e2456a3477a1ad785723f2135da3117e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0567bdc5c86c94ced64201187cfcef2417d76dda"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb":["0567bdc5c86c94ced64201187cfcef2417d76dda"]},"commit2Childs":{"e2fe60a17a7a0cfd101b1169acf089221bc6c166":["55980207f1977bd1463465de1659b821347e2fa8","b0267c69e2456a3477a1ad785723f2135da3117e","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe"],"55980207f1977bd1463465de1659b821347e2fa8":[],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["e2fe60a17a7a0cfd101b1169acf089221bc6c166"],"b0267c69e2456a3477a1ad785723f2135da3117e":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe"],"0567bdc5c86c94ced64201187cfcef2417d76dda":["5f6bd27530a2846413fe2d00030493c0e2d3a072","b7605579001505896d48b07160075a5c8b8e128e","a656b32c3aa151037a8c52e9b134acc3cbf482bc","c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"b7605579001505896d48b07160075a5c8b8e128e":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0567bdc5c86c94ced64201187cfcef2417d76dda","b7605579001505896d48b07160075a5c8b8e128e","a656b32c3aa151037a8c52e9b134acc3cbf482bc"],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":[],"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb":["55980207f1977bd1463465de1659b821347e2fa8","5f6bd27530a2846413fe2d00030493c0e2d3a072"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","b7605579001505896d48b07160075a5c8b8e128e","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","a656b32c3aa151037a8c52e9b134acc3cbf482bc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}