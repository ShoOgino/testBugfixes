{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","sourceNew":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n\t    ts = new HyphenatedWordsFilter(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t}\n\n","sourceOld":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n\t    ts = new HyphenatedWordsFilter(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","sourceNew":"  /**\n   * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n   */\n  public void testHyphenAtEnd() throws Exception {\n      String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n      // first test\n      TokenStream ts = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n      ts = new HyphenatedWordsFilter(ts);\n      assertTokenStreamContents(ts,\n          new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n  }\n\n","sourceOld":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n\t    ts = new HyphenatedWordsFilter(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","sourceNew":"  /**\n   * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n   */\n  public void testHyphenAtEnd() throws Exception {\n      String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n      // first test\n      TokenStream ts = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n      ts = new HyphenatedWordsFilter(ts);\n      assertTokenStreamContents(ts,\n          new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n  }\n\n","sourceOld":"  /**\n   * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n   */\n  public void testHyphenAtEnd() throws Exception {\n      String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n      // first test\n      TokenStream ts = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n      ts = new HyphenatedWordsFilter(ts);\n      assertTokenStreamContents(ts,\n          new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","sourceNew":"  /**\n   * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n   */\n  public void testHyphenAtEnd() throws Exception {\n      String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n      // first test\n      TokenStream ts = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n      ts = new HyphenatedWordsFilter(ts);\n      assertTokenStreamContents(ts,\n          new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n  }\n\n","sourceOld":"  /**\n   * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n   */\n  public void testHyphenAtEnd() throws Exception {\n      String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n      // first test\n      TokenStream ts = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n      ts = new HyphenatedWordsFilter(ts);\n      assertTokenStreamContents(ts,\n          new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","sourceNew":"  /**\n   * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n   */\n  public void testHyphenAtEnd() throws Exception {\n    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n      // first test\n    TokenStream ts = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    ((Tokenizer)ts).setReader(new StringReader(input));\n    ts = new HyphenatedWordsFilter(ts);\n    assertTokenStreamContents(ts,\n        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n  }\n\n","sourceOld":"  /**\n   * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n   */\n  public void testHyphenAtEnd() throws Exception {\n      String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n      // first test\n      TokenStream ts = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n      ts = new HyphenatedWordsFilter(ts);\n      assertTokenStreamContents(ts,\n          new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}