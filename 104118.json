{"path":"lucene/core/src/java/org/apache/lucene/index/LeafReader#terms(String).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/AtomicReader#terms(String).mjava","sourceNew":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.terms(field);\n  }\n\n","sourceOld":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.terms(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8028ab7a24273833d53d35eb160dba5b57283cf5","date":1416767720,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LeafReader#terms(String).mjava","sourceNew":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    return fields().terms(field);\n  }\n\n","sourceOld":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.terms(field);\n  }\n\n","bugFix":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b6f36bb733c575dd04fdfa785127ebf82b0033f","date":1497502741,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LeafReader#terms(String).mjava","sourceNew":"  /** Returns the {@link Terms} index for this field, or null if it has none. */\n  public abstract Terms terms(String field) throws IOException;\n\n","sourceOld":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    return fields().terms(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LeafReader#terms(String).mjava","sourceNew":"  /** Returns the {@link Terms} index for this field, or null if it has none. */\n  public abstract Terms terms(String field) throws IOException;\n\n","sourceOld":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    return fields().terms(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LeafReader#terms(String).mjava","sourceNew":"  /** Returns the {@link Terms} index for this field, or null if it has none. */\n  public abstract Terms terms(String field) throws IOException;\n\n","sourceOld":"  /** This may return null if the field does not exist.*/\n  public final Terms terms(String field) throws IOException {\n    return fields().terms(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8028ab7a24273833d53d35eb160dba5b57283cf5":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b6f36bb733c575dd04fdfa785127ebf82b0033f":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["8028ab7a24273833d53d35eb160dba5b57283cf5","2b6f36bb733c575dd04fdfa785127ebf82b0033f"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["8028ab7a24273833d53d35eb160dba5b57283cf5","2b6f36bb733c575dd04fdfa785127ebf82b0033f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"8028ab7a24273833d53d35eb160dba5b57283cf5":["2b6f36bb733c575dd04fdfa785127ebf82b0033f","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"2b6f36bb733c575dd04fdfa785127ebf82b0033f":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}