{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClientBadInputTest#testDeleteByIdReportsInvalidIdLists().mjava","commits":[{"id":"8f9b0f8c5b9a784bf4fd8edc474e270470d1c417","date":1539483336,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClientBadInputTest#testDeleteByIdReportsInvalidIdLists().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDeleteByIdReportsInvalidIdLists() throws Exception {\n    try (SolrClient client = getConcurrentUpdateSolrClient(jetty.getBaseUrl().toString() + \"/\" + ANY_COLLECTION, ANY_QUEUE_SIZE, ANY_MAX_NUM_THREADS)) {\n      assertExceptionThrownWithMessageContaining(IllegalArgumentException.class, Lists.newArrayList(\"ids\", \"null\"), () -> {\n        client.deleteById(NULL_STR_LIST);\n      });\n      assertExceptionThrownWithMessageContaining(IllegalArgumentException.class, Lists.newArrayList(\"ids\", \"empty\"), () -> {\n        client.deleteById(EMPTY_STR_LIST);\n      });\n      assertExceptionThrownWithMessageContaining(IllegalArgumentException.class, Lists.newArrayList(\"ids\", \"null\"), () -> {\n        client.deleteById(NULL_STR_LIST, ANY_COMMIT_WITHIN_TIME);\n      });\n      assertExceptionThrownWithMessageContaining(IllegalArgumentException.class, Lists.newArrayList(\"ids\", \"empty\"), () -> {\n        client.deleteById(EMPTY_STR_LIST, ANY_COMMIT_WITHIN_TIME);\n      });\n    }\n\n    try (SolrClient client = getConcurrentUpdateSolrClient(jetty.getBaseUrl().toString(), ANY_QUEUE_SIZE, ANY_MAX_NUM_THREADS)) {\n      assertExceptionThrownWithMessageContaining(IllegalArgumentException.class, Lists.newArrayList(\"ids\", \"null\"), () -> {\n        client.deleteById(ANY_COLLECTION, NULL_STR_LIST);\n      });\n      assertExceptionThrownWithMessageContaining(IllegalArgumentException.class, Lists.newArrayList(\"ids\", \"empty\"), () -> {\n        client.deleteById(ANY_COLLECTION, EMPTY_STR_LIST);\n      });\n      assertExceptionThrownWithMessageContaining(IllegalArgumentException.class, Lists.newArrayList(\"ids\", \"null\"), () -> {\n        client.deleteById(ANY_COLLECTION, NULL_STR_LIST, ANY_COMMIT_WITHIN_TIME);\n      });\n      assertExceptionThrownWithMessageContaining(IllegalArgumentException.class, Lists.newArrayList(\"ids\", \"empty\"), () -> {\n        client.deleteById(ANY_COLLECTION, EMPTY_STR_LIST, ANY_COMMIT_WITHIN_TIME);\n      });\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8f9b0f8c5b9a784bf4fd8edc474e270470d1c417":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8f9b0f8c5b9a784bf4fd8edc474e270470d1c417"]},"commit2Childs":{"8f9b0f8c5b9a784bf4fd8edc474e270470d1c417":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8f9b0f8c5b9a784bf4fd8edc474e270470d1c417"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}