{"path":"solr/core/src/java/org/apache/solr/core/SolrCores#queueCoreClose(SolrCore).mjava","commits":[{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#queueCoreClose(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","sourceNew":"  // Let transient cache implementation tell us when it ages out a core\n  @Override\n  public void queueCoreClose(SolrCore core) {\n    synchronized (modifyLock) {\n      // Erick Erickson debugging TestLazyCores. With this un-commented, we get no testLazyCores failures.\n//      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n//      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n//      cmd.openSearcher = false;\n//      cmd.waitSearcher = false;\n//      try {\n//        core.getUpdateHandler().commit(cmd);\n//      } catch (IOException e) {\n//        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n//      }\n      pendingCloses.add(core); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","sourceOld":"  // Let transient cache implementation tell us when it ages out a core\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      // Erick Erickson debugging TestLazyCores. With this un-commented, we get no testLazyCores failures.\n//      SolrCore core = (SolrCore) arg;\n//      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n//      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n//      cmd.openSearcher = false;\n//      cmd.waitSearcher = false;\n//      try {\n//        core.getUpdateHandler().commit(cmd);\n//      } catch (IOException e) {\n//        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n//      }\n      pendingCloses.add((SolrCore) arg); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba387e642aff5fc3b3ff8c76a01f40e4d2e8e29f","date":1555718441,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#queueCoreClose(SolrCore).mjava","sourceNew":null,"sourceOld":"  // Let transient cache implementation tell us when it ages out a core\n  @Override\n  public void queueCoreClose(SolrCore core) {\n    synchronized (modifyLock) {\n      // Erick Erickson debugging TestLazyCores. With this un-commented, we get no testLazyCores failures.\n//      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n//      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n//      cmd.openSearcher = false;\n//      cmd.waitSearcher = false;\n//      try {\n//        core.getUpdateHandler().commit(cmd);\n//      } catch (IOException e) {\n//        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n//      }\n      pendingCloses.add(core); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba387e642aff5fc3b3ff8c76a01f40e4d2e8e29f":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba387e642aff5fc3b3ff8c76a01f40e4d2e8e29f"]},"commit2Childs":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["ba387e642aff5fc3b3ff8c76a01f40e4d2e8e29f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"ba387e642aff5fc3b3ff8c76a01f40e4d2e8e29f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}