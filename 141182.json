{"path":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetEmptyIndex().mjava","commits":[{"id":"7249bf663236743660155abfc0941aebf4245391","date":1433953380,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetEmptyIndex().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortedSetEmptyIndex() throws IOException {\n    final Directory dir = newDirectory();\n    final IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.close();\n    \n    final Map<String,Type> UNINVERT_MAP = new LinkedHashMap<String,Type>();\n    for (Type t : EnumSet.allOf(Type.class)) {\n      UNINVERT_MAP.put(t.name(), t);\n    }\n\n    final DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), UNINVERT_MAP);\n    TestUtil.checkReader(ir);\n    \n    final LeafReader composite = SlowCompositeReaderWrapper.wrap(ir);\n    TestUtil.checkReader(composite);\n    \n    for (String f : UNINVERT_MAP.keySet()) { \n      // check the leaves\n      // (normally there are none for an empty index, so this is really just future\n      // proofing in case that changes for some reason)\n      for (LeafReaderContext rc : ir.leaves()) {\n        final LeafReader ar = rc.reader();\n        assertNull(f + \": Expected no doc values from empty index (leaf)\",\n                   ar.getSortedSetDocValues(f));\n      }\n      \n      // check the composite\n      assertNull(f + \": Expected no doc values from empty index (composite)\",\n                 composite.getSortedSetDocValues(f));\n      \n    }\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestUninvertingReader#testSortedSetEmptyIndex().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetEmptyIndex().mjava","sourceNew":"  public void testSortedSetEmptyIndex() throws IOException {\n    final Directory dir = newDirectory();\n    final IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.close();\n    \n    final Map<String,Type> UNINVERT_MAP = new LinkedHashMap<String,Type>();\n    for (Type t : EnumSet.allOf(Type.class)) {\n      UNINVERT_MAP.put(t.name(), t);\n    }\n\n    final DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), UNINVERT_MAP);\n    TestUtil.checkReader(ir);\n    \n    final LeafReader composite = SlowCompositeReaderWrapper.wrap(ir);\n    TestUtil.checkReader(composite);\n    \n    for (String f : UNINVERT_MAP.keySet()) { \n      // check the leaves\n      // (normally there are none for an empty index, so this is really just future\n      // proofing in case that changes for some reason)\n      for (LeafReaderContext rc : ir.leaves()) {\n        final LeafReader ar = rc.reader();\n        assertNull(f + \": Expected no doc values from empty index (leaf)\",\n                   ar.getSortedSetDocValues(f));\n      }\n      \n      // check the composite\n      assertNull(f + \": Expected no doc values from empty index (composite)\",\n                 composite.getSortedSetDocValues(f));\n      \n    }\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetEmptyIndex() throws IOException {\n    final Directory dir = newDirectory();\n    final IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.close();\n    \n    final Map<String,Type> UNINVERT_MAP = new LinkedHashMap<String,Type>();\n    for (Type t : EnumSet.allOf(Type.class)) {\n      UNINVERT_MAP.put(t.name(), t);\n    }\n\n    final DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), UNINVERT_MAP);\n    TestUtil.checkReader(ir);\n    \n    final LeafReader composite = SlowCompositeReaderWrapper.wrap(ir);\n    TestUtil.checkReader(composite);\n    \n    for (String f : UNINVERT_MAP.keySet()) { \n      // check the leaves\n      // (normally there are none for an empty index, so this is really just future\n      // proofing in case that changes for some reason)\n      for (LeafReaderContext rc : ir.leaves()) {\n        final LeafReader ar = rc.reader();\n        assertNull(f + \": Expected no doc values from empty index (leaf)\",\n                   ar.getSortedSetDocValues(f));\n      }\n      \n      // check the composite\n      assertNull(f + \": Expected no doc values from empty index (composite)\",\n                 composite.getSortedSetDocValues(f));\n      \n    }\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestUninvertingReader#testSortedSetEmptyIndex().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetEmptyIndex().mjava","sourceNew":"  public void testSortedSetEmptyIndex() throws IOException {\n    final Directory dir = newDirectory();\n    final IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.close();\n    \n    final Map<String,Type> UNINVERT_MAP = new LinkedHashMap<String,Type>();\n    for (Type t : EnumSet.allOf(Type.class)) {\n      UNINVERT_MAP.put(t.name(), t);\n    }\n\n    final DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), UNINVERT_MAP);\n    TestUtil.checkReader(ir);\n    \n    final LeafReader composite = SlowCompositeReaderWrapper.wrap(ir);\n    TestUtil.checkReader(composite);\n    \n    for (String f : UNINVERT_MAP.keySet()) { \n      // check the leaves\n      // (normally there are none for an empty index, so this is really just future\n      // proofing in case that changes for some reason)\n      for (LeafReaderContext rc : ir.leaves()) {\n        final LeafReader ar = rc.reader();\n        assertNull(f + \": Expected no doc values from empty index (leaf)\",\n                   ar.getSortedSetDocValues(f));\n      }\n      \n      // check the composite\n      assertNull(f + \": Expected no doc values from empty index (composite)\",\n                 composite.getSortedSetDocValues(f));\n      \n    }\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetEmptyIndex() throws IOException {\n    final Directory dir = newDirectory();\n    final IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.close();\n    \n    final Map<String,Type> UNINVERT_MAP = new LinkedHashMap<String,Type>();\n    for (Type t : EnumSet.allOf(Type.class)) {\n      UNINVERT_MAP.put(t.name(), t);\n    }\n\n    final DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), UNINVERT_MAP);\n    TestUtil.checkReader(ir);\n    \n    final LeafReader composite = SlowCompositeReaderWrapper.wrap(ir);\n    TestUtil.checkReader(composite);\n    \n    for (String f : UNINVERT_MAP.keySet()) { \n      // check the leaves\n      // (normally there are none for an empty index, so this is really just future\n      // proofing in case that changes for some reason)\n      for (LeafReaderContext rc : ir.leaves()) {\n        final LeafReader ar = rc.reader();\n        assertNull(f + \": Expected no doc values from empty index (leaf)\",\n                   ar.getSortedSetDocValues(f));\n      }\n      \n      // check the composite\n      assertNull(f + \": Expected no doc values from empty index (composite)\",\n                 composite.getSortedSetDocValues(f));\n      \n    }\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestUninvertingReader#testSortedSetEmptyIndex().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetEmptyIndex().mjava","sourceNew":"  public void testSortedSetEmptyIndex() throws IOException {\n    final Directory dir = newDirectory();\n    final IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.close();\n    \n    final Map<String,Type> UNINVERT_MAP = new LinkedHashMap<String,Type>();\n    for (Type t : EnumSet.allOf(Type.class)) {\n      UNINVERT_MAP.put(t.name(), t);\n    }\n\n    final DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), UNINVERT_MAP);\n    TestUtil.checkReader(ir);\n    \n    final LeafReader composite = SlowCompositeReaderWrapper.wrap(ir);\n    TestUtil.checkReader(composite);\n    \n    for (String f : UNINVERT_MAP.keySet()) { \n      // check the leaves\n      // (normally there are none for an empty index, so this is really just future\n      // proofing in case that changes for some reason)\n      for (LeafReaderContext rc : ir.leaves()) {\n        final LeafReader ar = rc.reader();\n        assertNull(f + \": Expected no doc values from empty index (leaf)\",\n                   ar.getSortedSetDocValues(f));\n      }\n      \n      // check the composite\n      assertNull(f + \": Expected no doc values from empty index (composite)\",\n                 composite.getSortedSetDocValues(f));\n      \n    }\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetEmptyIndex() throws IOException {\n    final Directory dir = newDirectory();\n    final IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.close();\n    \n    final Map<String,Type> UNINVERT_MAP = new LinkedHashMap<String,Type>();\n    for (Type t : EnumSet.allOf(Type.class)) {\n      UNINVERT_MAP.put(t.name(), t);\n    }\n\n    final DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), UNINVERT_MAP);\n    TestUtil.checkReader(ir);\n    \n    final LeafReader composite = SlowCompositeReaderWrapper.wrap(ir);\n    TestUtil.checkReader(composite);\n    \n    for (String f : UNINVERT_MAP.keySet()) { \n      // check the leaves\n      // (normally there are none for an empty index, so this is really just future\n      // proofing in case that changes for some reason)\n      for (LeafReaderContext rc : ir.leaves()) {\n        final LeafReader ar = rc.reader();\n        assertNull(f + \": Expected no doc values from empty index (leaf)\",\n                   ar.getSortedSetDocValues(f));\n      }\n      \n      // check the composite\n      assertNull(f + \": Expected no doc values from empty index (composite)\",\n                 composite.getSortedSetDocValues(f));\n      \n    }\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestUninvertingReader#testSortedSetEmptyIndex().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetEmptyIndex().mjava","sourceNew":"  public void testSortedSetEmptyIndex() throws IOException {\n    final Directory dir = newDirectory();\n    final IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.close();\n    \n    final Map<String,Type> UNINVERT_MAP = new LinkedHashMap<String,Type>();\n    for (Type t : EnumSet.allOf(Type.class)) {\n      UNINVERT_MAP.put(t.name(), t);\n    }\n\n    final DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), UNINVERT_MAP);\n    TestUtil.checkReader(ir);\n    \n    final LeafReader composite = SlowCompositeReaderWrapper.wrap(ir);\n    TestUtil.checkReader(composite);\n    \n    for (String f : UNINVERT_MAP.keySet()) { \n      // check the leaves\n      // (normally there are none for an empty index, so this is really just future\n      // proofing in case that changes for some reason)\n      for (LeafReaderContext rc : ir.leaves()) {\n        final LeafReader ar = rc.reader();\n        assertNull(f + \": Expected no doc values from empty index (leaf)\",\n                   ar.getSortedSetDocValues(f));\n      }\n      \n      // check the composite\n      assertNull(f + \": Expected no doc values from empty index (composite)\",\n                 composite.getSortedSetDocValues(f));\n      \n    }\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetEmptyIndex() throws IOException {\n    final Directory dir = newDirectory();\n    final IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    iw.close();\n    \n    final Map<String,Type> UNINVERT_MAP = new LinkedHashMap<String,Type>();\n    for (Type t : EnumSet.allOf(Type.class)) {\n      UNINVERT_MAP.put(t.name(), t);\n    }\n\n    final DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), UNINVERT_MAP);\n    TestUtil.checkReader(ir);\n    \n    final LeafReader composite = SlowCompositeReaderWrapper.wrap(ir);\n    TestUtil.checkReader(composite);\n    \n    for (String f : UNINVERT_MAP.keySet()) { \n      // check the leaves\n      // (normally there are none for an empty index, so this is really just future\n      // proofing in case that changes for some reason)\n      for (LeafReaderContext rc : ir.leaves()) {\n        final LeafReader ar = rc.reader();\n        assertNull(f + \": Expected no doc values from empty index (leaf)\",\n                   ar.getSortedSetDocValues(f));\n      }\n      \n      // check the composite\n      assertNull(f + \": Expected no doc values from empty index (composite)\",\n                 composite.getSortedSetDocValues(f));\n      \n    }\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["7249bf663236743660155abfc0941aebf4245391"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["7249bf663236743660155abfc0941aebf4245391","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"7249bf663236743660155abfc0941aebf4245391":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83870855d82aba6819217abeff5a40779dbb28b4":["7249bf663236743660155abfc0941aebf4245391","0e121d43b5a10f2df530f406f935102656e9c4e8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7249bf663236743660155abfc0941aebf4245391","0e121d43b5a10f2df530f406f935102656e9c4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e121d43b5a10f2df530f406f935102656e9c4e8"]},"commit2Childs":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7249bf663236743660155abfc0941aebf4245391":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7249bf663236743660155abfc0941aebf4245391"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}