{"path":"solr/solr-ref-guide/tools/BuildNavAndPDFBody.Page#buildKidsRecursive(Map[String,Page]).mjava","commits":[{"id":"d911f2420bc2c190c6ca1cbded67eca0f2bdf932","date":1494452425,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solr-ref-guide/tools/BuildNavAndPDFBody.Page#buildKidsRecursive(Map[String,Page]).mjava","pathOld":"/dev/null","sourceNew":"    /** Recursively populates {@link #kids} from {@link #kidShortnames} via the <code>allPages</code> Map */\n    public void buildKidsRecursive(Map<String,Page> allPages) {\n      for (String kidShortname : kidShortnames) {\n        Page kid = allPages.get(kidShortname);\n        if (null == kid) {\n          throw new RuntimeException(\"Unable to locate \" + kidShortname + \"; child of \" + shortname + \"(\"+file.toString());\n        }\n        mutableKids.add(kid);\n        kid.buildKidsRecursive(allPages);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b31ebc7a867ddea79d438a8fca876a94e644d11a","date":1494496172,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solr-ref-guide/tools/BuildNavAndPDFBody.Page#buildKidsRecursive(Map[String,Page]).mjava","pathOld":"/dev/null","sourceNew":"    /** Recursively populates {@link #kids} from {@link #kidShortnames} via the <code>allPages</code> Map */\n    public void buildKidsRecursive(Map<String,Page> allPages) {\n      for (String kidShortname : kidShortnames) {\n        Page kid = allPages.get(kidShortname);\n        if (null == kid) {\n          throw new RuntimeException(\"Unable to locate \" + kidShortname + \"; child of \" + shortname + \"(\"+file.toString());\n        }\n        mutableKids.add(kid);\n        kid.buildKidsRecursive(allPages);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solr-ref-guide/tools/BuildNavAndPDFBody.Page#buildKidsRecursive(Map[String,Page]).mjava","pathOld":"/dev/null","sourceNew":"    /** Recursively populates {@link #kids} from {@link #kidShortnames} via the <code>allPages</code> Map */\n    public void buildKidsRecursive(Map<String,Page> allPages) {\n      for (String kidShortname : kidShortnames) {\n        Page kid = allPages.get(kidShortname);\n        if (null == kid) {\n          throw new RuntimeException(\"Unable to locate \" + kidShortname + \"; child of \" + shortname + \"(\"+file.toString());\n        }\n        mutableKids.add(kid);\n        kid.buildKidsRecursive(allPages);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"171df45763ac908e39a8c33b0c742ffb59a1ba53","date":1509039449,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solr-ref-guide/tools/BuildNavAndPDFBody.Page#buildKidsRecursive(Map[String,Page]).mjava","sourceNew":null,"sourceOld":"    /** Recursively populates {@link #kids} from {@link #kidShortnames} via the <code>allPages</code> Map */\n    public void buildKidsRecursive(Map<String,Page> allPages) {\n      for (String kidShortname : kidShortnames) {\n        Page kid = allPages.get(kidShortname);\n        if (null == kid) {\n          throw new RuntimeException(\"Unable to locate \" + kidShortname + \"; child of \" + shortname + \"(\"+file.toString());\n        }\n        mutableKids.add(kid);\n        kid.buildKidsRecursive(allPages);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d911f2420bc2c190c6ca1cbded67eca0f2bdf932"],"b31ebc7a867ddea79d438a8fca876a94e644d11a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d911f2420bc2c190c6ca1cbded67eca0f2bdf932"],"171df45763ac908e39a8c33b0c742ffb59a1ba53":["d911f2420bc2c190c6ca1cbded67eca0f2bdf932"],"d911f2420bc2c190c6ca1cbded67eca0f2bdf932":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["171df45763ac908e39a8c33b0c742ffb59a1ba53"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"b31ebc7a867ddea79d438a8fca876a94e644d11a":[],"d911f2420bc2c190c6ca1cbded67eca0f2bdf932":["e9017cf144952056066919f1ebc7897ff9bd71b1","b31ebc7a867ddea79d438a8fca876a94e644d11a","171df45763ac908e39a8c33b0c742ffb59a1ba53"],"171df45763ac908e39a8c33b0c742ffb59a1ba53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","b31ebc7a867ddea79d438a8fca876a94e644d11a","d911f2420bc2c190c6ca1cbded67eca0f2bdf932"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","b31ebc7a867ddea79d438a8fca876a94e644d11a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}