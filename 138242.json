{"path":"lucene/core/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","commits":[{"id":"0274c27988a26cb0cda3a0d15b282221b1b453f0","date":1343923460,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f,  new MurmurHash2());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f,  new MurmurHash2());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f,  new MurmurHash2());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","sourceNew":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f,  new MurmurHash2());\n  }\n\n","sourceOld":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f,  new MurmurHash2());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["0274c27988a26cb0cda3a0d15b282221b1b453f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0274c27988a26cb0cda3a0d15b282221b1b453f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0274c27988a26cb0cda3a0d15b282221b1b453f0"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0274c27988a26cb0cda3a0d15b282221b1b453f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0274c27988a26cb0cda3a0d15b282221b1b453f0","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"0274c27988a26cb0cda3a0d15b282221b1b453f0":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}