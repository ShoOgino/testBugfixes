{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#addToken(SegToken).mjava","commits":[{"id":"05ff0cc6e864c7d71a48579f2acfca4f58943568","date":1242295762,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#addToken(SegToken).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * 向Map中增加一个Token，这些Token按照相同startOffset放在同一个列表中，\n   * \n   * @param token\n   */\n  public void addToken(SegToken token) {\n    int s = token.startOffset;\n    if (!isStartExist(s)) {\n      ArrayList newlist = new ArrayList();\n      newlist.add(token);\n      tokenListTable.put((Object) (new Integer(s)), newlist);\n    } else {\n      List tokenList = (List) tokenListTable.get((Object) (new Integer(s)));\n      tokenList.add(token);\n    }\n    if (s > maxStart)\n      maxStart = s;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be5ef2f970a6c1141562b06dd26ed04c3dc29d70","date":1246444343,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#addToken(SegToken).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#addToken(SegToken).mjava","sourceNew":"  /**\n   * Add a {@link SegToken} to the mapping, creating a new mapping at the token's startOffset if one does not exist. \n   * @param token {@link SegToken}\n   */\n  public void addToken(SegToken token) {\n    int s = token.startOffset;\n    if (!isStartExist(s)) {\n      ArrayList newlist = new ArrayList();\n      newlist.add(token);\n      tokenListTable.put((Object) (new Integer(s)), newlist);\n    } else {\n      List tokenList = (List) tokenListTable.get((Object) (new Integer(s)));\n      tokenList.add(token);\n    }\n    if (s > maxStart)\n      maxStart = s;\n  }\n\n","sourceOld":"  /**\n   * 向Map中增加一个Token，这些Token按照相同startOffset放在同一个列表中，\n   * \n   * @param token\n   */\n  public void addToken(SegToken token) {\n    int s = token.startOffset;\n    if (!isStartExist(s)) {\n      ArrayList newlist = new ArrayList();\n      newlist.add(token);\n      tokenListTable.put((Object) (new Integer(s)), newlist);\n    } else {\n      List tokenList = (List) tokenListTable.get((Object) (new Integer(s)));\n      tokenList.add(token);\n    }\n    if (s > maxStart)\n      maxStart = s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#addToken(SegToken).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#addToken(SegToken).mjava","sourceNew":"  /**\n   * Add a {@link SegToken} to the mapping, creating a new mapping at the token's startOffset if one does not exist. \n   * @param token {@link SegToken}\n   */\n  public void addToken(SegToken token) {\n    int s = token.startOffset;\n    if (!isStartExist(s)) {\n      ArrayList newlist = new ArrayList();\n      newlist.add(token);\n      tokenListTable.put((Object) (new Integer(s)), newlist);\n    } else {\n      List tokenList = (List) tokenListTable.get((Object) (new Integer(s)));\n      tokenList.add(token);\n    }\n    if (s > maxStart)\n      maxStart = s;\n  }\n\n","sourceOld":"  /**\n   * Add a {@link SegToken} to the mapping, creating a new mapping at the token's startOffset if one does not exist. \n   * @param token {@link SegToken}\n   */\n  public void addToken(SegToken token) {\n    int s = token.startOffset;\n    if (!isStartExist(s)) {\n      ArrayList newlist = new ArrayList();\n      newlist.add(token);\n      tokenListTable.put((Object) (new Integer(s)), newlist);\n    } else {\n      List tokenList = (List) tokenListTable.get((Object) (new Integer(s)));\n      tokenList.add(token);\n    }\n    if (s > maxStart)\n      maxStart = s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}