{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", Lucene40StoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < Lucene40StoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n      if (format > Lucene40StoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", Lucene40StoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < Lucene40StoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n      if (format > Lucene40StoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", Lucene40StoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < Lucene40StoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n      if (format > Lucene40StoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", Lucene40StoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < Lucene40StoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n      if (format > Lucene40StoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":["b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30","date":1327936772,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n      if (format > FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", Lucene40StoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < Lucene40StoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n      if (format > Lucene40StoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n      if (format > FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", Lucene40StoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < Lucene40StoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n      if (format > Lucene40StoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n      if (format > FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", Lucene40StoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < Lucene40StoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n      if (format > Lucene40StoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"410e066f093e407222d9681429d209084e783149":["fa0f44f887719e97183771e977cfc4bfb485b766","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["fa0f44f887719e97183771e977cfc4bfb485b766","1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30":["fa0f44f887719e97183771e977cfc4bfb485b766"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"]},"commit2Childs":{"410e066f093e407222d9681429d209084e783149":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"fa0f44f887719e97183771e977cfc4bfb485b766":["410e066f093e407222d9681429d209084e783149","296df632fd63421ea20756fa11ad36fbc6f4c8a9","1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["fa0f44f887719e97183771e977cfc4bfb485b766"],"1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}