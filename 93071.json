{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource#init(Context,Properties).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource#init(Context,Properties).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/URLDataSource#init(Context,Properties).mjava","sourceNew":"  @Override\n  public void init(Context context, Properties initProps) {\n    this.context = context;\n    this.initProps = initProps;\n    \n    baseUrl = getInitPropWithReplacements(BASE_URL);\n    if (getInitPropWithReplacements(ENCODING) != null)\n      encoding = getInitPropWithReplacements(ENCODING);\n    String cTimeout = getInitPropWithReplacements(CONNECTION_TIMEOUT_FIELD_NAME);\n    String rTimeout = getInitPropWithReplacements(READ_TIMEOUT_FIELD_NAME);\n    if (cTimeout != null) {\n      try {\n        connectionTimeout = Integer.parseInt(cTimeout);\n      } catch (NumberFormatException e) {\n        LOG.warn(\"Invalid connection timeout: \" + cTimeout);\n      }\n    }\n    if (rTimeout != null) {\n      try {\n        readTimeout = Integer.parseInt(rTimeout);\n      } catch (NumberFormatException e) {\n        LOG.warn(\"Invalid read timeout: \" + rTimeout);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Context context, Properties initProps) {\n    this.context = context;\n    this.initProps = initProps;\n    \n    baseUrl = getInitPropWithReplacements(BASE_URL);\n    if (getInitPropWithReplacements(ENCODING) != null)\n      encoding = getInitPropWithReplacements(ENCODING);\n    String cTimeout = getInitPropWithReplacements(CONNECTION_TIMEOUT_FIELD_NAME);\n    String rTimeout = getInitPropWithReplacements(READ_TIMEOUT_FIELD_NAME);\n    if (cTimeout != null) {\n      try {\n        connectionTimeout = Integer.parseInt(cTimeout);\n      } catch (NumberFormatException e) {\n        LOG.warn(\"Invalid connection timeout: \" + cTimeout);\n      }\n    }\n    if (rTimeout != null) {\n      try {\n        readTimeout = Integer.parseInt(rTimeout);\n      } catch (NumberFormatException e) {\n        LOG.warn(\"Invalid read timeout: \" + rTimeout);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource#init(Context,Properties).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/URLDataSource#init(Context,Properties).mjava","sourceNew":"  @Override\n  public void init(Context context, Properties initProps) {\n    this.context = context;\n    this.initProps = initProps;\n    \n    baseUrl = getInitPropWithReplacements(BASE_URL);\n    if (getInitPropWithReplacements(ENCODING) != null)\n      encoding = getInitPropWithReplacements(ENCODING);\n    String cTimeout = getInitPropWithReplacements(CONNECTION_TIMEOUT_FIELD_NAME);\n    String rTimeout = getInitPropWithReplacements(READ_TIMEOUT_FIELD_NAME);\n    if (cTimeout != null) {\n      try {\n        connectionTimeout = Integer.parseInt(cTimeout);\n      } catch (NumberFormatException e) {\n        LOG.warn(\"Invalid connection timeout: \" + cTimeout);\n      }\n    }\n    if (rTimeout != null) {\n      try {\n        readTimeout = Integer.parseInt(rTimeout);\n      } catch (NumberFormatException e) {\n        LOG.warn(\"Invalid read timeout: \" + rTimeout);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Context context, Properties initProps) {\n    this.context = context;\n    this.initProps = initProps;\n    \n    baseUrl = getInitPropWithReplacements(BASE_URL);\n    if (getInitPropWithReplacements(ENCODING) != null)\n      encoding = getInitPropWithReplacements(ENCODING);\n    String cTimeout = getInitPropWithReplacements(CONNECTION_TIMEOUT_FIELD_NAME);\n    String rTimeout = getInitPropWithReplacements(READ_TIMEOUT_FIELD_NAME);\n    if (cTimeout != null) {\n      try {\n        connectionTimeout = Integer.parseInt(cTimeout);\n      } catch (NumberFormatException e) {\n        LOG.warn(\"Invalid connection timeout: \" + cTimeout);\n      }\n    }\n    if (rTimeout != null) {\n      try {\n        readTimeout = Integer.parseInt(rTimeout);\n      } catch (NumberFormatException e) {\n        LOG.warn(\"Invalid read timeout: \" + rTimeout);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource#init(Context,Properties).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource#init(Context,Properties).mjava","sourceNew":"  @Override\n  public void init(Context context, Properties initProps) {\n    this.context = context;\n    this.initProps = initProps;\n    \n    baseUrl = getInitPropWithReplacements(BASE_URL);\n    if (getInitPropWithReplacements(ENCODING) != null)\n      encoding = getInitPropWithReplacements(ENCODING);\n    String cTimeout = getInitPropWithReplacements(CONNECTION_TIMEOUT_FIELD_NAME);\n    String rTimeout = getInitPropWithReplacements(READ_TIMEOUT_FIELD_NAME);\n    if (cTimeout != null) {\n      try {\n        connectionTimeout = Integer.parseInt(cTimeout);\n      } catch (NumberFormatException e) {\n        log.warn(\"Invalid connection timeout: \" + cTimeout);\n      }\n    }\n    if (rTimeout != null) {\n      try {\n        readTimeout = Integer.parseInt(rTimeout);\n      } catch (NumberFormatException e) {\n        log.warn(\"Invalid read timeout: \" + rTimeout);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Context context, Properties initProps) {\n    this.context = context;\n    this.initProps = initProps;\n    \n    baseUrl = getInitPropWithReplacements(BASE_URL);\n    if (getInitPropWithReplacements(ENCODING) != null)\n      encoding = getInitPropWithReplacements(ENCODING);\n    String cTimeout = getInitPropWithReplacements(CONNECTION_TIMEOUT_FIELD_NAME);\n    String rTimeout = getInitPropWithReplacements(READ_TIMEOUT_FIELD_NAME);\n    if (cTimeout != null) {\n      try {\n        connectionTimeout = Integer.parseInt(cTimeout);\n      } catch (NumberFormatException e) {\n        LOG.warn(\"Invalid connection timeout: \" + cTimeout);\n      }\n    }\n    if (rTimeout != null) {\n      try {\n        readTimeout = Integer.parseInt(rTimeout);\n      } catch (NumberFormatException e) {\n        LOG.warn(\"Invalid read timeout: \" + rTimeout);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource#init(Context,Properties).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource#init(Context,Properties).mjava","sourceNew":"  @Override\n  public void init(Context context, Properties initProps) {\n    this.context = context;\n    this.initProps = initProps;\n    \n    baseUrl = getInitPropWithReplacements(BASE_URL);\n    if (getInitPropWithReplacements(ENCODING) != null)\n      encoding = getInitPropWithReplacements(ENCODING);\n    String cTimeout = getInitPropWithReplacements(CONNECTION_TIMEOUT_FIELD_NAME);\n    String rTimeout = getInitPropWithReplacements(READ_TIMEOUT_FIELD_NAME);\n    if (cTimeout != null) {\n      try {\n        connectionTimeout = Integer.parseInt(cTimeout);\n      } catch (NumberFormatException e) {\n        log.warn(\"Invalid connection timeout: {}\", cTimeout);\n      }\n    }\n    if (rTimeout != null) {\n      try {\n        readTimeout = Integer.parseInt(rTimeout);\n      } catch (NumberFormatException e) {\n        log.warn(\"Invalid read timeout: {}\", rTimeout);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Context context, Properties initProps) {\n    this.context = context;\n    this.initProps = initProps;\n    \n    baseUrl = getInitPropWithReplacements(BASE_URL);\n    if (getInitPropWithReplacements(ENCODING) != null)\n      encoding = getInitPropWithReplacements(ENCODING);\n    String cTimeout = getInitPropWithReplacements(CONNECTION_TIMEOUT_FIELD_NAME);\n    String rTimeout = getInitPropWithReplacements(READ_TIMEOUT_FIELD_NAME);\n    if (cTimeout != null) {\n      try {\n        connectionTimeout = Integer.parseInt(cTimeout);\n      } catch (NumberFormatException e) {\n        log.warn(\"Invalid connection timeout: \" + cTimeout);\n      }\n    }\n    if (rTimeout != null) {\n      try {\n        readTimeout = Integer.parseInt(rTimeout);\n      } catch (NumberFormatException e) {\n        log.warn(\"Invalid read timeout: \" + rTimeout);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/URLDataSource#init(Context,Properties).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void init(Context context, Properties initProps) {\n    this.context = context;\n    this.initProps = initProps;\n    \n    baseUrl = getInitPropWithReplacements(BASE_URL);\n    if (getInitPropWithReplacements(ENCODING) != null)\n      encoding = getInitPropWithReplacements(ENCODING);\n    String cTimeout = getInitPropWithReplacements(CONNECTION_TIMEOUT_FIELD_NAME);\n    String rTimeout = getInitPropWithReplacements(READ_TIMEOUT_FIELD_NAME);\n    if (cTimeout != null) {\n      try {\n        connectionTimeout = Integer.parseInt(cTimeout);\n      } catch (NumberFormatException e) {\n        log.warn(\"Invalid connection timeout: {}\", cTimeout);\n      }\n    }\n    if (rTimeout != null) {\n      try {\n        readTimeout = Integer.parseInt(rTimeout);\n      } catch (NumberFormatException e) {\n        log.warn(\"Invalid read timeout: {}\", rTimeout);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}