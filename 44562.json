{"path":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/SegmenterTest#doTestBocchan(int).mjava","commits":[{"id":"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","date":1326399048,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/SegmenterTest#doTestBocchan(int).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestBocchan(int numIterations) throws Exception {\n    LineNumberReader reader = new LineNumberReader(new InputStreamReader(\n        this.getClass().getResourceAsStream(\"bocchan.utf-8\")));\n    \n    String line = reader.readLine();\n    reader.close();\n    \n    if (VERBOSE) {\n      System.out.println(\"Test for Bocchan without pre-splitting sentences\");\n    }\n    long totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++){\n      segmenter.tokenize(line);\n    }\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n      System.out.println(\"Test for Bocchan with pre-splitting sentences\");\n    }\n    String[] sentences = line.split(\"、|。\");\n    totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      for (String sentence: sentences) {\n        segmenter.tokenize(sentence);       \n      }\n    }\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0984ad47974c2d5d354519ddb2aa8358973a6271","date":1330868053,"type":5,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiTokenizer#doTestBocchan(int).mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/SegmenterTest#doTestBocchan(int).mjava","sourceNew":"  private void doTestBocchan(int numIterations) throws Exception {\n    LineNumberReader reader = new LineNumberReader(new InputStreamReader(\n        this.getClass().getResourceAsStream(\"bocchan.utf-8\")));\n    String line = reader.readLine();\n    reader.close();\n    \n    if (VERBOSE) {\n      System.out.println(\"Test for Bocchan without pre-splitting sentences\");\n    }\n\n    /*\n    if (numIterations > 1) {\n      // warmup\n      for (int i = 0; i < numIterations; i++) {\n        final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(line));\n        ts.reset();\n        while(ts.incrementToken());\n      }\n    }\n    */\n\n    long totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(line));\n      ts.reset();\n      while(ts.incrementToken());\n    }\n    String[] sentences = line.split(\"、|。\");\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n      System.out.println(\"Test for Bocchan with pre-splitting sentences (\" + sentences.length + \" sentences)\");\n    }\n    totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      for (String sentence: sentences) {\n        final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(sentence));\n        ts.reset();\n        while(ts.incrementToken());\n      }\n    }\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n    }\n  }\n\n","sourceOld":"  private void doTestBocchan(int numIterations) throws Exception {\n    LineNumberReader reader = new LineNumberReader(new InputStreamReader(\n        this.getClass().getResourceAsStream(\"bocchan.utf-8\")));\n    \n    String line = reader.readLine();\n    reader.close();\n    \n    if (VERBOSE) {\n      System.out.println(\"Test for Bocchan without pre-splitting sentences\");\n    }\n    long totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++){\n      segmenter.tokenize(line);\n    }\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n      System.out.println(\"Test for Bocchan with pre-splitting sentences\");\n    }\n    String[] sentences = line.split(\"、|。\");\n    totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      for (String sentence: sentences) {\n        segmenter.tokenize(sentence);       \n      }\n    }\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n    }\n  }\n\n","bugFix":null,"bugIntro":["c83d6c4335f31cae14f625a222bc842f20073dcd","782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/SegmenterTest#doTestBocchan(int).mjava","sourceNew":null,"sourceOld":"  private void doTestBocchan(int numIterations) throws Exception {\n    LineNumberReader reader = new LineNumberReader(new InputStreamReader(\n        this.getClass().getResourceAsStream(\"bocchan.utf-8\")));\n    \n    String line = reader.readLine();\n    reader.close();\n    \n    if (VERBOSE) {\n      System.out.println(\"Test for Bocchan without pre-splitting sentences\");\n    }\n    long totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++){\n      segmenter.tokenize(line);\n    }\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n      System.out.println(\"Test for Bocchan with pre-splitting sentences\");\n    }\n    String[] sentences = line.split(\"、|。\");\n    totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      for (String sentence: sentences) {\n        segmenter.tokenize(sentence);       \n      }\n    }\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","0984ad47974c2d5d354519ddb2aa8358973a6271"],"0984ad47974c2d5d354519ddb2aa8358973a6271":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0984ad47974c2d5d354519ddb2aa8358973a6271"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"0984ad47974c2d5d354519ddb2aa8358973a6271":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","0984ad47974c2d5d354519ddb2aa8358973a6271"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}