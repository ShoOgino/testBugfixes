{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","sourceNew":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.toString());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","sourceOld":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.toString());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76fa9933adb0556e752e8af9734c4d0ae14622ff","date":1339178321,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","sourceNew":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.toString());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new BytesRef(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","sourceOld":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.toString());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["76fa9933adb0556e752e8af9734c4d0ae14622ff"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["76fa9933adb0556e752e8af9734c4d0ae14622ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}