{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/FuzzyCompletionQuery.FuzzyCompletionWeight#setNextMatch(IntsRef).mjava","commits":[{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/FuzzyCompletionQuery.FuzzyCompletionWeight#setNextMatch(IntsRef).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected void setNextMatch(IntsRef pathPrefix) {\n      // NOTE: the last letter of the matched prefix for the exact\n      // match never makes it through here\n      // so an exact match and a match with only a edit at the\n      // end is boosted the same\n      int maxCount = 0;\n      for (IntsRef ref : refs) {\n        int minLength = Math.min(ref.length, pathPrefix.length);\n        int count = 0;\n        for (int i = 0; i < minLength; i++) {\n          if (ref.ints[i + ref.offset] == pathPrefix.ints[i + pathPrefix.offset]) {\n            count++;\n          } else {\n            break;\n          }\n        }\n        maxCount = Math.max(maxCount, count);\n      }\n      currentBoost = maxCount;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8c33f6677a2078739058f81eca1df69d12cd62b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c33f6677a2078739058f81eca1df69d12cd62b0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}