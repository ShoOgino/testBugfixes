{"path":"contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#extractCarrotAttributes(SolrParams,Map[String,Object]).mjava","commits":[{"id":"3ee70799f6a87a250e98ce10a7bc3e28d41eac23","date":1242826192,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#extractCarrotAttributes(SolrParams,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Extracts parameters that can possibly match some attributes of Carrot2 algorithms.\n\t */\n\tprivate void extractCarrotAttributes(SolrParams solrParams,\n\t\t\tMap<String, Object> attributes) {\n\t\t// Extract all non-predefined parameters. This way, we'll be able to set all \n\t\t// parameters of Carrot2 algorithms without defining their names as constants.\n\t\tfor (Iterator<String> paramNames = solrParams.getParameterNamesIterator(); paramNames\n\t\t\t\t.hasNext();) {\n\t\t\tString paramName = paramNames.next();\n\t\t\tif (!CarrotParams.CARROT_PARAM_NAMES.contains(paramName)) {\n\t\t\t\tattributes.put(paramName, solrParams.get(paramName));\n\t\t\t}\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2771e5f68dda632a1044fdfecbc7bffae0a4ea8","date":1246543717,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#extractCarrotAttributes(SolrParams,Map[String,Object]).mjava","pathOld":"contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#extractCarrotAttributes(SolrParams,Map[String,Object]).mjava","sourceNew":"  /**\n   * Extracts parameters that can possibly match some attributes of Carrot2 algorithms.\n   */\n  private void extractCarrotAttributes(SolrParams solrParams,\n                                       Map<String, Object> attributes) {\n    // Extract all non-predefined parameters. This way, we'll be able to set all\n    // parameters of Carrot2 algorithms without defining their names as constants.\n    for (Iterator<String> paramNames = solrParams.getParameterNamesIterator(); paramNames\n            .hasNext();) {\n      String paramName = paramNames.next();\n      if (!CarrotParams.CARROT_PARAM_NAMES.contains(paramName)) {\n        attributes.put(paramName, solrParams.get(paramName));\n      }\n    }\n  }\n\n","sourceOld":"\t/**\n\t * Extracts parameters that can possibly match some attributes of Carrot2 algorithms.\n\t */\n\tprivate void extractCarrotAttributes(SolrParams solrParams,\n\t\t\tMap<String, Object> attributes) {\n\t\t// Extract all non-predefined parameters. This way, we'll be able to set all \n\t\t// parameters of Carrot2 algorithms without defining their names as constants.\n\t\tfor (Iterator<String> paramNames = solrParams.getParameterNamesIterator(); paramNames\n\t\t\t\t.hasNext();) {\n\t\t\tString paramName = paramNames.next();\n\t\t\tif (!CarrotParams.CARROT_PARAM_NAMES.contains(paramName)) {\n\t\t\t\tattributes.put(paramName, solrParams.get(paramName));\n\t\t\t}\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#extractCarrotAttributes(SolrParams,Map[String,Object]).mjava","pathOld":"contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#extractCarrotAttributes(SolrParams,Map[String,Object]).mjava","sourceNew":"  /**\n   * Extracts parameters that can possibly match some attributes of Carrot2 algorithms.\n   */\n  private void extractCarrotAttributes(SolrParams solrParams,\n                                       Map<String, Object> attributes) {\n    // Extract all non-predefined parameters. This way, we'll be able to set all\n    // parameters of Carrot2 algorithms without defining their names as constants.\n    for (Iterator<String> paramNames = solrParams.getParameterNamesIterator(); paramNames\n            .hasNext();) {\n      String paramName = paramNames.next();\n      if (!CarrotParams.CARROT_PARAM_NAMES.contains(paramName)) {\n        attributes.put(paramName, solrParams.get(paramName));\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Extracts parameters that can possibly match some attributes of Carrot2 algorithms.\n   */\n  private void extractCarrotAttributes(SolrParams solrParams,\n                                       Map<String, Object> attributes) {\n    // Extract all non-predefined parameters. This way, we'll be able to set all\n    // parameters of Carrot2 algorithms without defining their names as constants.\n    for (Iterator<String> paramNames = solrParams.getParameterNamesIterator(); paramNames\n            .hasNext();) {\n      String paramName = paramNames.next();\n      if (!CarrotParams.CARROT_PARAM_NAMES.contains(paramName)) {\n        attributes.put(paramName, solrParams.get(paramName));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ee70799f6a87a250e98ce10a7bc3e28d41eac23":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2771e5f68dda632a1044fdfecbc7bffae0a4ea8":["3ee70799f6a87a250e98ce10a7bc3e28d41eac23"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["d2771e5f68dda632a1044fdfecbc7bffae0a4ea8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3ee70799f6a87a250e98ce10a7bc3e28d41eac23":["d2771e5f68dda632a1044fdfecbc7bffae0a4ea8"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3ee70799f6a87a250e98ce10a7bc3e28d41eac23"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d2771e5f68dda632a1044fdfecbc7bffae0a4ea8":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}