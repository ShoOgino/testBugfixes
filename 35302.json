{"path":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d302ba328993a5b449c2e0b3b5e15ae53e45879","date":1281609097,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    rand = newRandom();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    rand = newRandom();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53a31399f2471493d67b19a95c028a74e0113b6a","date":1289817072,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(random, similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(random, similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(random, similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(random, similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    PayloadHelper helper = new PayloadHelper();\n    searcher = helper.setUp(random, similarity, 1000);\n    indexReader = searcher.getIndexReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"53a31399f2471493d67b19a95c028a74e0113b6a":["43b04c27924fe393e38e9f0986e32c634f261859"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["43b04c27924fe393e38e9f0986e32c634f261859","53a31399f2471493d67b19a95c028a74e0113b6a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["53a31399f2471493d67b19a95c028a74e0113b6a"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["0d302ba328993a5b449c2e0b3b5e15ae53e45879"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d302ba328993a5b449c2e0b3b5e15ae53e45879":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","53a31399f2471493d67b19a95c028a74e0113b6a"],"43b04c27924fe393e38e9f0986e32c634f261859":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"53a31399f2471493d67b19a95c028a74e0113b6a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["43b04c27924fe393e38e9f0986e32c634f261859"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0d302ba328993a5b449c2e0b3b5e15ae53e45879":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"43b04c27924fe393e38e9f0986e32c634f261859":["53a31399f2471493d67b19a95c028a74e0113b6a","9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0d302ba328993a5b449c2e0b3b5e15ae53e45879","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}