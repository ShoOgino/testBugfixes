{"path":"solr/core/src/java/org/apache/solr/highlight/PostingsSolrHighlighter#toDocIDs(DocList).mjava","commits":[{"id":"603175ca08914b73fa328e1ac07c772f8103ecd0","date":1363642166,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/PostingsSolrHighlighter#toDocIDs(DocList).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/PostingsSolrHighlighter#toTopDocs(DocList).mjava","sourceNew":"  /** Converts solr's DocList to the int[] docIDs */\n  protected int[] toDocIDs(DocList docs) {\n    int[] docIDs = new int[docs.size()];\n    DocIterator iterator = docs.iterator();\n    for (int i = 0; i < docIDs.length; i++) {\n      if (!iterator.hasNext()) {\n        throw new AssertionError();\n      }\n      docIDs[i] = iterator.nextDoc();\n    }\n    if (iterator.hasNext()) {\n      throw new AssertionError();\n    }\n    return docIDs;\n  }\n\n","sourceOld":"  /** Converts solr's DocList to a lucene TopDocs */\n  protected TopDocs toTopDocs(DocList docs) {\n    ScoreDoc[] scoreDocs = new ScoreDoc[docs.size()];\n    DocIterator iterator = docs.iterator();\n    for (int i = 0; i < scoreDocs.length; i++) {\n      if (!iterator.hasNext()) {\n        throw new AssertionError();\n      }\n      scoreDocs[i] = new ScoreDoc(iterator.nextDoc(), Float.NaN);\n    }\n    if (iterator.hasNext()) {\n      throw new AssertionError();\n    }\n    return new TopDocs(docs.matches(), scoreDocs, Float.NaN);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"424b0811c7309a660798cd4e2939a8adee546665","date":1495551772,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/highlight/PostingsSolrHighlighter#toDocIDs(DocList).mjava","sourceNew":null,"sourceOld":"  /** Converts solr's DocList to the int[] docIDs */\n  protected int[] toDocIDs(DocList docs) {\n    int[] docIDs = new int[docs.size()];\n    DocIterator iterator = docs.iterator();\n    for (int i = 0; i < docIDs.length; i++) {\n      if (!iterator.hasNext()) {\n        throw new AssertionError();\n      }\n      docIDs[i] = iterator.nextDoc();\n    }\n    if (iterator.hasNext()) {\n      throw new AssertionError();\n    }\n    return docIDs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/highlight/PostingsSolrHighlighter#toDocIDs(DocList).mjava","sourceNew":null,"sourceOld":"  /** Converts solr's DocList to the int[] docIDs */\n  protected int[] toDocIDs(DocList docs) {\n    int[] docIDs = new int[docs.size()];\n    DocIterator iterator = docs.iterator();\n    for (int i = 0; i < docIDs.length; i++) {\n      if (!iterator.hasNext()) {\n        throw new AssertionError();\n      }\n      docIDs[i] = iterator.nextDoc();\n    }\n    if (iterator.hasNext()) {\n      throw new AssertionError();\n    }\n    return docIDs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["603175ca08914b73fa328e1ac07c772f8103ecd0","424b0811c7309a660798cd4e2939a8adee546665"],"603175ca08914b73fa328e1ac07c772f8103ecd0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"424b0811c7309a660798cd4e2939a8adee546665":["603175ca08914b73fa328e1ac07c772f8103ecd0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["424b0811c7309a660798cd4e2939a8adee546665"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"603175ca08914b73fa328e1ac07c772f8103ecd0":["e9017cf144952056066919f1ebc7897ff9bd71b1","424b0811c7309a660798cd4e2939a8adee546665"],"424b0811c7309a660798cd4e2939a8adee546665":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["603175ca08914b73fa328e1ac07c772f8103ecd0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}