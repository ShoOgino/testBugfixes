{"path":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#deleteAll().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#deleteAll().mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexWriter#deleteAll().mjava","sourceNew":"  /**\n   * Delete all documents in the index.\n   *\n   * <p>This method will drop all buffered documents and will \n   *    remove all segments from the index. This change will not be\n   *    visible until a {@link #commit()} has been called. This method\n   *    can be rolled back using {@link #rollback()}.</p>\n   *\n   * <p>NOTE: this method is much faster than using deleteDocuments( new MatchAllDocsQuery() ).</p>\n   *\n   * <p>NOTE: this method will forcefully abort all merges\n   *    in progress.  If other threads are running {@link\n   *    #optimize()} or any of the addIndexes methods, they\n   *    will receive {@link MergePolicy.MergeAbortedException}s.\n   */\n  public synchronized void deleteAll() throws IOException {\n    docWriter.pauseAllThreads();\n    try {\n\n      // Abort any running merges\n      finishMerges(false);\n\n      // Remove any buffered docs\n      docWriter.abort();\n      docWriter.setFlushedDocCount(0);\n\n      // Remove all segments\n      segmentInfos.clear();\n\n      // Ask deleter to locate unreferenced files & remove them:\n      deleter.checkpoint(segmentInfos, false);\n      deleter.refresh();\n\n      // Don't bother saving any changes in our segmentInfos\n      readerPool.clear(null);      \n\n      // Mark that the index has changed\n      ++changeCount;\n    } catch (OutOfMemoryError oom) {\n      handleOOM(oom, \"deleteAll\");\n    } finally {\n      docWriter.resumeAllThreads();\n      if (infoStream != null) {\n        message(\"hit exception during deleteAll\");\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Delete all documents in the index.\n   *\n   * <p>This method will drop all buffered documents and will \n   *    remove all segments from the index. This change will not be\n   *    visible until a {@link #commit()} has been called. This method\n   *    can be rolled back using {@link #rollback()}.</p>\n   *\n   * <p>NOTE: this method is much faster than using deleteDocuments( new MatchAllDocsQuery() ).</p>\n   *\n   * <p>NOTE: this method will forcefully abort all merges\n   *    in progress.  If other threads are running {@link\n   *    #optimize()} or any of the addIndexes methods, they\n   *    will receive {@link MergePolicy.MergeAbortedException}s.\n   */\n  public synchronized void deleteAll() throws IOException {\n    docWriter.pauseAllThreads();\n    try {\n\n      // Abort any running merges\n      finishMerges(false);\n\n      // Remove any buffered docs\n      docWriter.abort();\n      docWriter.setFlushedDocCount(0);\n\n      // Remove all segments\n      segmentInfos.clear();\n\n      // Ask deleter to locate unreferenced files & remove them:\n      deleter.checkpoint(segmentInfos, false);\n      deleter.refresh();\n\n      // Don't bother saving any changes in our segmentInfos\n      readerPool.clear(null);      \n\n      // Mark that the index has changed\n      ++changeCount;\n    } catch (OutOfMemoryError oom) {\n      handleOOM(oom, \"deleteAll\");\n    } finally {\n      docWriter.resumeAllThreads();\n      if (infoStream != null) {\n        message(\"hit exception during deleteAll\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#deleteAll().mjava","sourceNew":null,"sourceOld":"  /**\n   * Delete all documents in the index.\n   *\n   * <p>This method will drop all buffered documents and will \n   *    remove all segments from the index. This change will not be\n   *    visible until a {@link #commit()} has been called. This method\n   *    can be rolled back using {@link #rollback()}.</p>\n   *\n   * <p>NOTE: this method is much faster than using deleteDocuments( new MatchAllDocsQuery() ).</p>\n   *\n   * <p>NOTE: this method will forcefully abort all merges\n   *    in progress.  If other threads are running {@link\n   *    #optimize()} or any of the addIndexes methods, they\n   *    will receive {@link MergePolicy.MergeAbortedException}s.\n   */\n  public synchronized void deleteAll() throws IOException {\n    docWriter.pauseAllThreads();\n    try {\n\n      // Abort any running merges\n      finishMerges(false);\n\n      // Remove any buffered docs\n      docWriter.abort();\n      docWriter.setFlushedDocCount(0);\n\n      // Remove all segments\n      segmentInfos.clear();\n\n      // Ask deleter to locate unreferenced files & remove them:\n      deleter.checkpoint(segmentInfos, false);\n      deleter.refresh();\n\n      // Don't bother saving any changes in our segmentInfos\n      readerPool.clear(null);      \n\n      // Mark that the index has changed\n      ++changeCount;\n    } catch (OutOfMemoryError oom) {\n      handleOOM(oom, \"deleteAll\");\n    } finally {\n      docWriter.resumeAllThreads();\n      if (infoStream != null) {\n        message(\"hit exception during deleteAll\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}