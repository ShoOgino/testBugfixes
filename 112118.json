{"path":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","commits":[{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","sourceNew":"  void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","sourceOld":"  private void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b7d6828c28d816ec85be0b8d7b134f9df62b65c","date":1308748110,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","sourceNew":"  synchronized void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","sourceOld":"  void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","sourceNew":"  synchronized void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","sourceOld":"  private void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","sourceNew":"  synchronized void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","sourceOld":"  private void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67aadace85f701c87a4e0721eedcda25d8415a70","date":1314201925,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,Handle).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper#addFileHandle(Closeable,String,boolean).mjava","sourceNew":"  synchronized void addFileHandle(Closeable c, String name, Handle handle) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + handle.name() + \": \" + name));\n  }\n\n","sourceOld":"  synchronized void addFileHandle(Closeable c, String name, boolean input) {\n    Integer v = openFiles.get(name);\n    if (v != null) {\n      v = Integer.valueOf(v.intValue()+1);\n      openFiles.put(name, v);\n    } else {\n      openFiles.put(name, Integer.valueOf(1));\n    }\n    \n    openFileHandles.put(c, new RuntimeException(\"unclosed Index\" + (input ? \"Input\" : \"Output\") + \": \" + name));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"67aadace85f701c87a4e0721eedcda25d8415a70":["6b7d6828c28d816ec85be0b8d7b134f9df62b65c"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","efb7a19703a037c29e30440260d393500febc1f4"],"efb7a19703a037c29e30440260d393500febc1f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["efb7a19703a037c29e30440260d393500febc1f4"],"6b7d6828c28d816ec85be0b8d7b134f9df62b65c":["0aab6e810b4b0d3743d6a048be0602801f4b3920"],"2553b00f699380c64959ccb27991289aae87be2e":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","6b7d6828c28d816ec85be0b8d7b134f9df62b65c"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["efb7a19703a037c29e30440260d393500febc1f4","6b7d6828c28d816ec85be0b8d7b134f9df62b65c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["67aadace85f701c87a4e0721eedcda25d8415a70"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"67aadace85f701c87a4e0721eedcda25d8415a70":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["2553b00f699380c64959ccb27991289aae87be2e"],"efb7a19703a037c29e30440260d393500febc1f4":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","0aab6e810b4b0d3743d6a048be0602801f4b3920","d083e83f225b11e5fdd900e83d26ddb385b6955c","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","efb7a19703a037c29e30440260d393500febc1f4","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["6b7d6828c28d816ec85be0b8d7b134f9df62b65c"],"6b7d6828c28d816ec85be0b8d7b134f9df62b65c":["67aadace85f701c87a4e0721eedcda25d8415a70","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}