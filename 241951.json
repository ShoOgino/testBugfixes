{"path":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testExpandNotFieldMatch().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testExpandNotFieldMatch().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testExpandNotFieldMatch().mjava","sourceNew":"  public void testExpandNotFieldMatch() throws Exception {\n    Query dummy = pqF( \"DUMMY\" );\n    FieldQuery fq = new FieldQuery( dummy, true, false );\n\n    // f1:\"a b\",f2:\"b c\" => f1:\"a b\",f2:\"b c\",f1:\"a b c\"\n    Set<Query> flatQueries = new HashSet<Query>();\n    flatQueries.add( pq( F1, \"a\", \"b\" ) );\n    flatQueries.add( pq( F2, \"b\", \"c\" ) );\n    assertCollectionQueries( fq.expand( flatQueries ),\n        pq( F1, \"a\", \"b\" ), pq( F2, \"b\", \"c\" ), pq( F1, \"a\", \"b\", \"c\" ) );\n  }\n\n","sourceOld":"  public void testExpandNotFieldMatch() throws Exception {\n    Query dummy = pqF( \"DUMMY\" );\n    FieldQuery fq = new FieldQuery( dummy, true, false );\n\n    // f1:\"a b\",f2:\"b c\" => f1:\"a b\",f2:\"b c\",f1:\"a b c\"\n    Set<Query> flatQueries = new HashSet<Query>();\n    flatQueries.add( pq( F1, \"a\", \"b\" ) );\n    flatQueries.add( pq( F2, \"b\", \"c\" ) );\n    assertCollectionQueries( fq.expand( flatQueries ),\n        pq( F1, \"a\", \"b\" ), pq( F2, \"b\", \"c\" ), pq( F1, \"a\", \"b\", \"c\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testExpandNotFieldMatch().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testExpandNotFieldMatch().mjava","sourceNew":"  public void testExpandNotFieldMatch() throws Exception {\n    Query dummy = pqF( \"DUMMY\" );\n    FieldQuery fq = new FieldQuery( dummy, true, false );\n\n    // f1:\"a b\",f2:\"b c\" => f1:\"a b\",f2:\"b c\",f1:\"a b c\"\n    Set<Query> flatQueries = new HashSet<>();\n    flatQueries.add( pq( F1, \"a\", \"b\" ) );\n    flatQueries.add( pq( F2, \"b\", \"c\" ) );\n    assertCollectionQueries( fq.expand( flatQueries ),\n        pq( F1, \"a\", \"b\" ), pq( F2, \"b\", \"c\" ), pq( F1, \"a\", \"b\", \"c\" ) );\n  }\n\n","sourceOld":"  public void testExpandNotFieldMatch() throws Exception {\n    Query dummy = pqF( \"DUMMY\" );\n    FieldQuery fq = new FieldQuery( dummy, true, false );\n\n    // f1:\"a b\",f2:\"b c\" => f1:\"a b\",f2:\"b c\",f1:\"a b c\"\n    Set<Query> flatQueries = new HashSet<Query>();\n    flatQueries.add( pq( F1, \"a\", \"b\" ) );\n    flatQueries.add( pq( F2, \"b\", \"c\" ) );\n    assertCollectionQueries( fq.expand( flatQueries ),\n        pq( F1, \"a\", \"b\" ), pq( F2, \"b\", \"c\" ), pq( F1, \"a\", \"b\", \"c\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}