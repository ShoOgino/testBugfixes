{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/SelectWithEvaluatorsTest#assertList(List,Object...).mjava","commits":[{"id":"88073e8783f450d4c0218decc2f001a1ac2c7e7c","date":1486705191,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/SelectWithEvaluatorsTest#assertList(List,Object...).mjava","pathOld":"/dev/null","sourceNew":"  private boolean assertList(List list, Object... vals) throws Exception {\n\n    if(list.size() != vals.length) {\n      throw new Exception(\"Lists are not the same size:\"+list.size() +\" : \"+vals.length);\n    }\n\n    for(int i=0; i<list.size(); i++) {\n      Object a = list.get(i);\n      Object b = vals[i];\n      if(!a.equals(b)) {\n        throw new Exception(\"List items not equals:\"+a+\" : \"+b);\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/SelectWithEvaluatorsTest#assertList(List,Object...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/SelectWithEvaluatorsTest#assertList(List,Object...).mjava","sourceNew":"  private boolean assertList(@SuppressWarnings({\"rawtypes\"})List list, Object... vals) throws Exception {\n\n    if(list.size() != vals.length) {\n      throw new Exception(\"Lists are not the same size:\"+list.size() +\" : \"+vals.length);\n    }\n\n    for(int i=0; i<list.size(); i++) {\n      Object a = list.get(i);\n      Object b = vals[i];\n      if(!a.equals(b)) {\n        throw new Exception(\"List items not equals:\"+a+\" : \"+b);\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":"  private boolean assertList(List list, Object... vals) throws Exception {\n\n    if(list.size() != vals.length) {\n      throw new Exception(\"Lists are not the same size:\"+list.size() +\" : \"+vals.length);\n    }\n\n    for(int i=0; i<list.size(); i++) {\n      Object a = list.get(i);\n      Object b = vals[i];\n      if(!a.equals(b)) {\n        throw new Exception(\"List items not equals:\"+a+\" : \"+b);\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["9ba1b632c041956c93c41aa1143d16a567014891"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}