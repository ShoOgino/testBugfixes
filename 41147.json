{"path":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#init(NamedList).mjava","commits":[{"id":"9e2656623e57ced6c16aae473bab02019c951802","date":1342126181,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(NamedList args) {\n    Collection<String> scripts = \n      FieldMutatingUpdateProcessorFactory.oneOrMany(args, SCRIPT_ARG);\n    if (scripts.isEmpty()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"StatelessScriptUpdateProcessorFactory must be \" +\n                              \"initialized with at least one \" + SCRIPT_ARG);\n    }\n    scriptFiles = new ArrayList<ScriptFile>();\n    for (String script : scripts) {\n      scriptFiles.add(new ScriptFile(script));\n    }\n\n    params = args.remove(PARAMS_ARG);\n\n    Object engine = args.remove(ENGINE_NAME_ARG);\n    if (engine != null) {\n      if (engine instanceof String) {\n        engineName = (String)engine;\n      } else {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR, \n           \"'\" + ENGINE_NAME_ARG + \"' init param must be a String (found: \" + \n           engine.getClass() + \")\");\n      }\n    }\n\n    super.init(args);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(NamedList args) {\n    Collection<String> scripts = \n      FieldMutatingUpdateProcessorFactory.oneOrMany(args, SCRIPT_ARG);\n    if (scripts.isEmpty()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"StatelessScriptUpdateProcessorFactory must be \" +\n                              \"initialized with at least one \" + SCRIPT_ARG);\n    }\n    scriptFiles = new ArrayList<ScriptFile>();\n    for (String script : scripts) {\n      scriptFiles.add(new ScriptFile(script));\n    }\n\n    params = args.remove(PARAMS_ARG);\n\n    Object engine = args.remove(ENGINE_NAME_ARG);\n    if (engine != null) {\n      if (engine instanceof String) {\n        engineName = (String)engine;\n      } else {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR, \n           \"'\" + ENGINE_NAME_ARG + \"' init param must be a String (found: \" + \n           engine.getClass() + \")\");\n      }\n    }\n\n    super.init(args);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(NamedList args) {\n    Collection<String> scripts = \n      FieldMutatingUpdateProcessorFactory.oneOrMany(args, SCRIPT_ARG);\n    if (scripts.isEmpty()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"StatelessScriptUpdateProcessorFactory must be \" +\n                              \"initialized with at least one \" + SCRIPT_ARG);\n    }\n    scriptFiles = new ArrayList<ScriptFile>();\n    for (String script : scripts) {\n      scriptFiles.add(new ScriptFile(script));\n    }\n\n    params = args.remove(PARAMS_ARG);\n\n    Object engine = args.remove(ENGINE_NAME_ARG);\n    if (engine != null) {\n      if (engine instanceof String) {\n        engineName = (String)engine;\n      } else {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR, \n           \"'\" + ENGINE_NAME_ARG + \"' init param must be a String (found: \" + \n           engine.getClass() + \")\");\n      }\n    }\n\n    super.init(args);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd","date":1380757525,"type":3,"author":"Shawn Heisey","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    Collection<String> scripts = \n      args.removeConfigArgs(SCRIPT_ARG);\n    if (scripts.isEmpty()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"StatelessScriptUpdateProcessorFactory must be \" +\n                              \"initialized with at least one \" + SCRIPT_ARG);\n    }\n    scriptFiles = new ArrayList<ScriptFile>();\n    for (String script : scripts) {\n      scriptFiles.add(new ScriptFile(script));\n    }\n\n    params = args.remove(PARAMS_ARG);\n\n    Object engine = args.remove(ENGINE_NAME_ARG);\n    if (engine != null) {\n      if (engine instanceof String) {\n        engineName = (String)engine;\n      } else {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR, \n           \"'\" + ENGINE_NAME_ARG + \"' init param must be a String (found: \" + \n           engine.getClass() + \")\");\n      }\n    }\n\n    super.init(args);\n\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    Collection<String> scripts = \n      FieldMutatingUpdateProcessorFactory.oneOrMany(args, SCRIPT_ARG);\n    if (scripts.isEmpty()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"StatelessScriptUpdateProcessorFactory must be \" +\n                              \"initialized with at least one \" + SCRIPT_ARG);\n    }\n    scriptFiles = new ArrayList<ScriptFile>();\n    for (String script : scripts) {\n      scriptFiles.add(new ScriptFile(script));\n    }\n\n    params = args.remove(PARAMS_ARG);\n\n    Object engine = args.remove(ENGINE_NAME_ARG);\n    if (engine != null) {\n      if (engine instanceof String) {\n        engineName = (String)engine;\n      } else {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR, \n           \"'\" + ENGINE_NAME_ARG + \"' init param must be a String (found: \" + \n           engine.getClass() + \")\");\n      }\n    }\n\n    super.init(args);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    Collection<String> scripts = \n      args.removeConfigArgs(SCRIPT_ARG);\n    if (scripts.isEmpty()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"StatelessScriptUpdateProcessorFactory must be \" +\n                              \"initialized with at least one \" + SCRIPT_ARG);\n    }\n    scriptFiles = new ArrayList<>();\n    for (String script : scripts) {\n      scriptFiles.add(new ScriptFile(script));\n    }\n\n    params = args.remove(PARAMS_ARG);\n\n    Object engine = args.remove(ENGINE_NAME_ARG);\n    if (engine != null) {\n      if (engine instanceof String) {\n        engineName = (String)engine;\n      } else {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR, \n           \"'\" + ENGINE_NAME_ARG + \"' init param must be a String (found: \" + \n           engine.getClass() + \")\");\n      }\n    }\n\n    super.init(args);\n\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    Collection<String> scripts = \n      args.removeConfigArgs(SCRIPT_ARG);\n    if (scripts.isEmpty()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"StatelessScriptUpdateProcessorFactory must be \" +\n                              \"initialized with at least one \" + SCRIPT_ARG);\n    }\n    scriptFiles = new ArrayList<ScriptFile>();\n    for (String script : scripts) {\n      scriptFiles.add(new ScriptFile(script));\n    }\n\n    params = args.remove(PARAMS_ARG);\n\n    Object engine = args.remove(ENGINE_NAME_ARG);\n    if (engine != null) {\n      if (engine instanceof String) {\n        engineName = (String)engine;\n      } else {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR, \n           \"'\" + ENGINE_NAME_ARG + \"' init param must be a String (found: \" + \n           engine.getClass() + \")\");\n      }\n    }\n\n    super.init(args);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"018a36ff4088cb91ab12cbe44f696d81d1fadd77","date":1591657414,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n    @SuppressWarnings({\"unchecked\"})\n    Collection<String> scripts =\n      args.removeConfigArgs(SCRIPT_ARG);\n    if (scripts.isEmpty()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"StatelessScriptUpdateProcessorFactory must be \" +\n                              \"initialized with at least one \" + SCRIPT_ARG);\n    }\n    scriptFiles = new ArrayList<>();\n    for (String script : scripts) {\n      scriptFiles.add(new ScriptFile(script));\n    }\n\n    params = args.remove(PARAMS_ARG);\n\n    Object engine = args.remove(ENGINE_NAME_ARG);\n    if (engine != null) {\n      if (engine instanceof String) {\n        engineName = (String)engine;\n      } else {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR, \n           \"'\" + ENGINE_NAME_ARG + \"' init param must be a String (found: \" + \n           engine.getClass() + \")\");\n      }\n    }\n\n    super.init(args);\n\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    Collection<String> scripts = \n      args.removeConfigArgs(SCRIPT_ARG);\n    if (scripts.isEmpty()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"StatelessScriptUpdateProcessorFactory must be \" +\n                              \"initialized with at least one \" + SCRIPT_ARG);\n    }\n    scriptFiles = new ArrayList<>();\n    for (String script : scripts) {\n      scriptFiles.add(new ScriptFile(script));\n    }\n\n    params = args.remove(PARAMS_ARG);\n\n    Object engine = args.remove(ENGINE_NAME_ARG);\n    if (engine != null) {\n      if (engine instanceof String) {\n        engineName = (String)engine;\n      } else {\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR, \n           \"'\" + ENGINE_NAME_ARG + \"' init param must be a String (found: \" + \n           engine.getClass() + \")\");\n      }\n    }\n\n    super.init(args);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3ae0c36347d7586e501169851eb8fe2ad2b8f0dd"],"9e2656623e57ced6c16aae473bab02019c951802":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"018a36ff4088cb91ab12cbe44f696d81d1fadd77":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e2656623e57ced6c16aae473bab02019c951802"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e2656623e57ced6c16aae473bab02019c951802"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["018a36ff4088cb91ab12cbe44f696d81d1fadd77"],"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd":["9e2656623e57ced6c16aae473bab02019c951802"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["018a36ff4088cb91ab12cbe44f696d81d1fadd77"],"9e2656623e57ced6c16aae473bab02019c951802":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","3ae0c36347d7586e501169851eb8fe2ad2b8f0dd"],"018a36ff4088cb91ab12cbe44f696d81d1fadd77":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e2656623e57ced6c16aae473bab02019c951802","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}