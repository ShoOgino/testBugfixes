{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#codecSupportsDocsWithField().mjava","commits":[{"id":"ad2a673349939e48652bf304cccf673c3412198f","date":1409585169,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#codecSupportsDocsWithField().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField().mjava","sourceNew":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  protected boolean codecSupportsDocsWithField() {\n    return true;\n  }\n\n","sourceOld":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean defaultCodecSupportsDocsWithField() {\n    String name = Codec.getDefault().getName();\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene41\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#codecSupportsDocsWithField().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField().mjava","sourceNew":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  protected boolean codecSupportsDocsWithField() {\n    return true;\n  }\n\n","sourceOld":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean defaultCodecSupportsDocsWithField() {\n    String name = Codec.getDefault().getName();\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene41\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#codecSupportsDocsWithField().mjava","sourceNew":null,"sourceOld":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  protected boolean codecSupportsDocsWithField() {\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#codecSupportsDocsWithField().mjava","sourceNew":null,"sourceOld":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  protected boolean codecSupportsDocsWithField() {\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#codecSupportsDocsWithField().mjava","sourceNew":null,"sourceOld":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  protected boolean codecSupportsDocsWithField() {\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"ad2a673349939e48652bf304cccf673c3412198f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ad2a673349939e48652bf304cccf673c3412198f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ad2a673349939e48652bf304cccf673c3412198f","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"ad2a673349939e48652bf304cccf673c3412198f":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}