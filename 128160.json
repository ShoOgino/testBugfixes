{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n\n\t\t@Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":["b07da04837dda68434fe9bba384d3c4faaa21235"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b07da04837dda68434fe9bba384d3c4faaa21235","date":1339673862,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          lastError = ex;\n        }\n      };\n\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n\n\t\t@Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":["b22ada474ccaadf111a2d0dbb50135f2dd2fddc7","7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"bugIntro":["ed0dd3d82be806ac8ab4e15bf5b89310270c0210"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"47c952a4f0f0e9b74763a0609a3726dbb217164a","date":1347968413,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://127.0.0.1:\"+port+context;       // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          lastError = ex;\n        }\n      };\n\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          lastError = ex;\n        }\n      };\n\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ed0dd3d82be806ac8ab4e15bf5b89310270c0210","date":1349302029,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://127.0.0.1:\"+port+context;       // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          handledException = lastError = ex;\n        }\n      };\n\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://127.0.0.1:\"+port+context;       // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          lastError = ex;\n        }\n      };\n\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":["b07da04837dda68434fe9bba384d3c4faaa21235"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa11c355cd3b3b9207608b85fbd33b34f6f1966e","date":1361303536,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString();\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          handledException = lastError = ex;\n        }\n      };\n\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://127.0.0.1:\"+port+context;       // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          handledException = lastError = ex;\n        }\n      };\n\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9","date":1366986755,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          handledException = lastError = ex;\n        }\n      };\n\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString();\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          handledException = lastError = ex;\n        }\n      };\n\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrClient().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrClient createNewSolrClient()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrClient concurrentClient = new ConcurrentUpdateSolrClient( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          handledException = lastError = ex;\n        }\n      };\n\n      concurrentClient.setParser(new XMLResponseParser());\n      concurrentClient.setRequestWriter(new RequestWriter());\n      return concurrentClient;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          handledException = lastError = ex;\n        }\n      };\n\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fa11c355cd3b3b9207608b85fbd33b34f6f1966e":["ed0dd3d82be806ac8ab4e15bf5b89310270c0210"],"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["fa11c355cd3b3b9207608b85fbd33b34f6f1966e"],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["b07da04837dda68434fe9bba384d3c4faaa21235"],"b07da04837dda68434fe9bba384d3c4faaa21235":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["c26f00b574427b55127e869b935845554afde1fa"],"bafca15d8e408346a67f4282ad1143b88023893b":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ed0dd3d82be806ac8ab4e15bf5b89310270c0210":["47c952a4f0f0e9b74763a0609a3726dbb217164a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"fa11c355cd3b3b9207608b85fbd33b34f6f1966e":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["bafca15d8e408346a67f4282ad1143b88023893b"],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["ed0dd3d82be806ac8ab4e15bf5b89310270c0210"],"b07da04837dda68434fe9bba384d3c4faaa21235":["47c952a4f0f0e9b74763a0609a3726dbb217164a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["b07da04837dda68434fe9bba384d3c4faaa21235"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ed0dd3d82be806ac8ab4e15bf5b89310270c0210":["fa11c355cd3b3b9207608b85fbd33b34f6f1966e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}