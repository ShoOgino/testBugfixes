{"path":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"/dev/null","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { \"dedupe\" });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":null,"sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { \"dedupe\" });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { \"dedupe\" });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { \"dedupe\" });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"/dev/null","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { \"dedupe\" });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"80caeb078026be414380723b9c6baed49c20b354","date":1273870709,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { processor });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { \"dedupe\" });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":["80c633e661becbcb6deb6ea2ef4588d230102f50"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4c2e9f25f325d433a32d82f39896388097ddc2f7","date":1287332184,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { processor });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { processor });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":["090bca5f286f0964e1a8b6f6e617e2c4e1a59a21","090bca5f286f0964e1a8b6f6e617e2c4e1a59a21","090bca5f286f0964e1a8b6f6e617e2c4e1a59a21"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { processor });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { processor });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { processor });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { processor });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64cae353de680169c133e0a9f4debee071ad3241","date":1303312298,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { processor });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":["090bca5f286f0964e1a8b6f6e617e2c4e1a59a21","090bca5f286f0964e1a8b6f6e617e2c4e1a59a21","090bca5f286f0964e1a8b6f6e617e2c4e1a59a21"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d493718201f0d0c54c773fb323d87bbd2fbffe41","date":1303546048,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { processor });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { processor });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_PROCESSOR, new String[] { processor });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#addDoc(String).mjava","sourceNew":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","sourceOld":"  private void addDoc(String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(),\n        (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["64cae353de680169c133e0a9f4debee071ad3241","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","64cae353de680169c133e0a9f4debee071ad3241"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["80caeb078026be414380723b9c6baed49c20b354","4c2e9f25f325d433a32d82f39896388097ddc2f7"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","64cae353de680169c133e0a9f4debee071ad3241"],"64cae353de680169c133e0a9f4debee071ad3241":["4c2e9f25f325d433a32d82f39896388097ddc2f7"],"4c2e9f25f325d433a32d82f39896388097ddc2f7":["80caeb078026be414380723b9c6baed49c20b354"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4c2e9f25f325d433a32d82f39896388097ddc2f7","64cae353de680169c133e0a9f4debee071ad3241"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80caeb078026be414380723b9c6baed49c20b354":["1da8d55113b689b06716246649de6f62430f15c0"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["64cae353de680169c133e0a9f4debee071ad3241"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["80caeb078026be414380723b9c6baed49c20b354","4c2e9f25f325d433a32d82f39896388097ddc2f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d493718201f0d0c54c773fb323d87bbd2fbffe41"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":[],"64cae353de680169c133e0a9f4debee071ad3241":["c26f00b574427b55127e869b935845554afde1fa","135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","a3776dccca01c11e7046323cfad46a3b4a471233","a258fbb26824fd104ed795e5d9033d2d040049ee"],"4c2e9f25f325d433a32d82f39896388097ddc2f7":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","64cae353de680169c133e0a9f4debee071ad3241","a3776dccca01c11e7046323cfad46a3b4a471233","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"1da8d55113b689b06716246649de6f62430f15c0":["80caeb078026be414380723b9c6baed49c20b354"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"80caeb078026be414380723b9c6baed49c20b354":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4c2e9f25f325d433a32d82f39896388097ddc2f7","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}