{"path":"src/java/org/apache/lucene/index/IndexWriter#maybeMerge().mjava","commits":[{"id":"b1405362241b561f5590ff4a87d5d6e173bcd9cf","date":1190107634,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#maybeMerge().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: asks the mergePolicy whether any merges are\n   * necessary now and if so, runs the requested merges and\n   * then iterate (test again if merges are needed) until no\n   * more merges are returned by the mergePolicy.\n   *\n   * Explicit calls to maybeMerge() are usually not\n   * necessary. The most common case is when merge policy\n   * parameters have changed.\n   */\n  public final void maybeMerge() throws CorruptIndexException, IOException {\n    maybeMerge(false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9665d17707cc21b1db995118ff36129723139ab","date":1225384420,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#maybeMerge().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#maybeMerge().mjava","sourceNew":"  /**\n   * Expert: asks the mergePolicy whether any merges are\n   * necessary now and if so, runs the requested merges and\n   * then iterate (test again if merges are needed) until no\n   * more merges are returned by the mergePolicy.\n   *\n   * Explicit calls to maybeMerge() are usually not\n   * necessary. The most common case is when merge policy\n   * parameters have changed.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   */\n  public final void maybeMerge() throws CorruptIndexException, IOException {\n    maybeMerge(false);\n  }\n\n","sourceOld":"  /**\n   * Expert: asks the mergePolicy whether any merges are\n   * necessary now and if so, runs the requested merges and\n   * then iterate (test again if merges are needed) until no\n   * more merges are returned by the mergePolicy.\n   *\n   * Explicit calls to maybeMerge() are usually not\n   * necessary. The most common case is when merge policy\n   * parameters have changed.\n   */\n  public final void maybeMerge() throws CorruptIndexException, IOException {\n    maybeMerge(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#maybeMerge().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#maybeMerge().mjava","sourceNew":"  /**\n   * Expert: asks the mergePolicy whether any merges are\n   * necessary now and if so, runs the requested merges and\n   * then iterate (test again if merges are needed) until no\n   * more merges are returned by the mergePolicy.\n   *\n   * Explicit calls to maybeMerge() are usually not\n   * necessary. The most common case is when merge policy\n   * parameters have changed.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   */\n  public final void maybeMerge() throws CorruptIndexException, IOException {\n    maybeMerge(false);\n  }\n\n","sourceOld":"  /**\n   * Expert: asks the mergePolicy whether any merges are\n   * necessary now and if so, runs the requested merges and\n   * then iterate (test again if merges are needed) until no\n   * more merges are returned by the mergePolicy.\n   *\n   * Explicit calls to maybeMerge() are usually not\n   * necessary. The most common case is when merge policy\n   * parameters have changed.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   */\n  public final void maybeMerge() throws CorruptIndexException, IOException {\n    maybeMerge(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e9665d17707cc21b1db995118ff36129723139ab":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e9665d17707cc21b1db995118ff36129723139ab"]},"commit2Childs":{"e9665d17707cc21b1db995118ff36129723139ab":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["e9665d17707cc21b1db995118ff36129723139ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}