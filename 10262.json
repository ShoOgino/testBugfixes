{"path":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(\n        TEST_VERSION_CURRENT)).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(\n        TEST_VERSION_CURRENT)).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(\n        TEST_VERSION_CURRENT)).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(\n        TEST_VERSION_CURRENT)).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(\n        TEST_VERSION_CURRENT)).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    MockRAMDirectory indexStore = new MockRAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    MockRAMDirectory indexStore = newDirectory (random);\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    MockRAMDirectory indexStore = new MockRAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory (random);\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    MockRAMDirectory indexStore = newDirectory (random);\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory (random);\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", customType, num));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new StringField (\"string\", num));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new StringField (\"string2\", num2));\n        doc.add (new Field (\"tracer2\", customType, num2));\n        for(IndexableField f : doc.getFields()) {\n          ((Field) f).setBoost(2.0f);\n        }\n        writer.addDocument (doc);\n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, customType));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new StringField (\"string\", num));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new StringField (\"string2\", num2));\n        doc.add (new Field (\"tracer2\", num2, customType));\n        for(IndexableField f : doc.getFields()) {\n          ((Field) f).setBoost(2.0f);\n        }\n        writer.addDocument (doc);\n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", customType, num));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new StringField (\"string\", num));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new StringField (\"string2\", num2));\n        doc.add (new Field (\"tracer2\", customType, num2));\n        for(IndexableField f : doc.getFields()) {\n          ((Field) f).setBoost(2.0f);\n        }\n        writer.addDocument (doc);\n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, customType));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new StringField (\"string\", num));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new StringField (\"string2\", num2));\n        doc.add (new Field (\"tracer2\", num2, customType));\n        for(IndexableField f : doc.getFields()) {\n          ((Field) f).setBoost(2.0f);\n        }\n        writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, customType));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new StringField (\"string\", num));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new StringField (\"string2\", num2));\n        doc.add (new Field (\"tracer2\", num2, customType));\n        for(IndexableField f : doc.getFields()) {\n          ((Field) f).setBoost(2.0f);\n        }\n        writer.addDocument (doc);\n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"28088b0a688977b79dec2cc9119cff2fb4aab7ee","date":1321197996,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, customType));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new StringField (\"string\", num));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new StringField (\"string2\", num2));\n        doc.add (new Field (\"tracer2\", num2, customType));\n        for(IndexableField f : doc.getFields()) {\n          ((Field) f).setBoost(2.0f);\n        }\n        writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":["fa0f44f887719e97183771e977cfc4bfb485b766","d4d69c535930b5cce125cff868d40f6373dc27d4","d1336abe0899b2984e5652903556c1925fbdca9f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3a0403b45dfe384fae4a1b6e96c3265d000c498","date":1321445981,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return new IndexSearcher (reader);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return new IndexSearcher (reader);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return new IndexSearcher (reader);\n  }\n\n","bugFix":null,"bugIntro":["fa0f44f887719e97183771e977cfc4bfb485b766"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return new IndexSearcher (reader);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = IndexDocValuesField.build(f, ValueType.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return new IndexSearcher (reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8be580b58bcc650d428f3f22de81cadcf51d650a","date":1325279655,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return new IndexSearcher (reader);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(4).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return new IndexSearcher (reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eae7c5ddae4b9692a6691d2d252ab6a4229457b","date":1325870827,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return newSearcher(reader);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return new IndexSearcher (reader);\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(new StringField(\"string\", num));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string\", new BytesRef(num), DocValues.Type.BYTES_VAR_SORTED));\n      }\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      doc.add(new StringField (\"string2\", num2));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string2\", new BytesRef(num2), DocValues.Type.BYTES_VAR_SORTED));\n      }\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(new StringField(\"string_fixed\", numFixed));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string_fixed\", new BytesRef(numFixed), DocValues.Type.BYTES_FIXED_SORTED));\n      }\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      doc.add(new StringField (\"string2_fixed\", num2Fixed));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string2_fixed\", new BytesRef(num2Fixed), DocValues.Type.BYTES_FIXED_SORTED));\n      }\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return newSearcher(reader);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      Field f = new StringField(\"string\", num);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      f = new StringField (\"string2\", num2);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_VAR_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      f = new StringField(\"string_fixed\", numFixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      f = new StringField (\"string2_fixed\", num2Fixed);\n      if (supportsDocValues) {\n        f = DocValuesField.build(f, DocValues.Type.BYTES_FIXED_SORTED);\n      }\n      doc.add (f);\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return newSearcher(reader);\n  }\n\n","bugFix":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2","cd659803551ebd8ca09b9e4ad7abd18d3d558f9d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(new StringField(\"string\", num));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string\", new BytesRef(num), DocValues.Type.BYTES_VAR_SORTED));\n      }\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      doc.add(new StringField (\"string2\", num2));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string2\", new BytesRef(num2), DocValues.Type.BYTES_VAR_SORTED));\n      }\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(new StringField(\"string_fixed\", numFixed));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string_fixed\", new BytesRef(numFixed), DocValues.Type.BYTES_FIXED_SORTED));\n      }\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      doc.add(new StringField (\"string2_fixed\", num2Fixed));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string2_fixed\", new BytesRef(num2Fixed), DocValues.Type.BYTES_FIXED_SORTED));\n      }\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return newSearcher(reader);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory indexStore = newDirectory();\n    dirs.add(indexStore);\n    IndexWriter writer = new IndexWriter(\n        indexStore,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(97))\n    );\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    final int fixedLen = getRandomNumber(2, 8);\n    final int fixedLen2 = getRandomNumber(1, 4);\n    for (int i=0; i<NUM_STRINGS; i++) {\n      Document doc = new Document();\n      String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n      doc.add (new Field (\"tracer\", num, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(new StringField(\"string\", num));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string\", new BytesRef(num), DocValues.Type.BYTES_VAR_SORTED));\n      }\n      String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n      doc.add(new StringField (\"string2\", num2));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string2\", new BytesRef(num2), DocValues.Type.BYTES_VAR_SORTED));\n      }\n      doc.add (new Field (\"tracer2\", num2, onlyStored));\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      String numFixed = getRandomCharString(fixedLen, 48, 52);\n      doc.add (new Field (\"fixed_tracer\", numFixed, onlyStored));\n      //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(new StringField(\"string_fixed\", numFixed));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string_fixed\", new BytesRef(numFixed), DocValues.Type.BYTES_FIXED_SORTED));\n      }\n      String num2Fixed = getRandomCharString(fixedLen2, 48, 52);\n      doc.add(new StringField (\"string2_fixed\", num2Fixed));\n      if (supportsDocValues) {\n        doc.add(new DocValuesField(\"string2_fixed\", new BytesRef(num2Fixed), DocValues.Type.BYTES_FIXED_SORTED));\n      }\n      doc.add (new Field (\"tracer2_fixed\", num2Fixed, onlyStored));\n\n      for(IndexableField f2 : doc.getFields()) {\n        ((Field) f2).setBoost(2.0f);\n      }\n\n      writer.addDocument (doc);\n    }\n    //writer.forceMerge(1);\n    //System.out.println(writer.getSegmentCount());\n    writer.close();\n    IndexReader reader = IndexReader.open(indexStore);\n    return newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fa0f44f887719e97183771e977cfc4bfb485b766"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a3a0403b45dfe384fae4a1b6e96c3265d000c498","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["d572389229127c297dd1fa5ce4758e1cec41e799"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"fa0f44f887719e97183771e977cfc4bfb485b766":["5eae7c5ddae4b9692a6691d2d252ab6a4229457b"],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"28088b0a688977b79dec2cc9119cff2fb4aab7ee":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"5eae7c5ddae4b9692a6691d2d252ab6a4229457b":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3bb13258feba31ab676502787ab2e1779f129b7a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4e8cc373c801e54cec75daf9f52792cb4b17f536","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"3bb13258feba31ab676502787ab2e1779f129b7a":["1f653cfcf159baeaafe5d01682a911e95bba4012","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1f653cfcf159baeaafe5d01682a911e95bba4012"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["1509f151d7692d84fae414b2b799ac06ba60fcb4","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"fa0f44f887719e97183771e977cfc4bfb485b766":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["d638301ad1cfcae567b681b893bc8781f0ee48a5","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"28088b0a688977b79dec2cc9119cff2fb4aab7ee":["a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"5eae7c5ddae4b9692a6691d2d252ab6a4229457b":["fa0f44f887719e97183771e977cfc4bfb485b766"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["d572389229127c297dd1fa5ce4758e1cec41e799"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["5eae7c5ddae4b9692a6691d2d252ab6a4229457b"],"962d04139994fce5193143ef35615499a9a96d78":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"3bb13258feba31ab676502787ab2e1779f129b7a":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}