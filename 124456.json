{"path":"solr/solrj/src/java/org/apache/solr/recipe/Preference#setApproxVal(List[Row]).mjava","commits":[{"id":"c09a89337c5a3688436fd158575e28cdbb4fe28e","date":1490706842,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/recipe/Preference#setApproxVal(List[Row]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Preference#setApproxVal(List[RuleSorter.Row]).mjava","sourceNew":"  //sets the new value according to precision in val_\n  void setApproxVal(List<Row> tmpMatrix) {\n    Object prevVal = null;\n    for (Row row : tmpMatrix) {\n      prevVal = row.cells[idx].val_ =\n          prevVal == null || Math.abs(((Number) prevVal).longValue() - ((Number) row.cells[idx].val).longValue()) > precision ?\n              row.cells[idx].val :\n              prevVal;\n    }\n  }\n\n","sourceOld":"  //sets the new value according to precision in val_\n  void setApproxVal(List<RuleSorter.Row> tmpMatrix) {\n    Object prevVal = null;\n    for (RuleSorter.Row row : tmpMatrix) {\n      prevVal = row.cells[idx].val_ =\n          prevVal == null || Math.abs(((Number) prevVal).longValue() - ((Number) row.cells[idx].val).longValue()) > precision ?\n              row.cells[idx].val :\n              prevVal;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"653c1ca305e0065ee988a09e59c8316b8cde02fd","date":1492506780,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Preference#setApproxVal(List[Row]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Preference#setApproxVal(List[Row]).mjava","sourceNew":"  //sets the new value according to precision in val_\n  void setApproxVal(List<Row> tmpMatrix) {\n    Object prevVal = null;\n    for (Row row : tmpMatrix) {\n      prevVal = row.cells[idx].val_ =\n          prevVal == null || Math.abs(((Number) prevVal).longValue() - ((Number) row.cells[idx].val).longValue()) > precision ?\n              row.cells[idx].val :\n              prevVal;\n    }\n  }\n\n","sourceOld":"  //sets the new value according to precision in val_\n  void setApproxVal(List<Row> tmpMatrix) {\n    Object prevVal = null;\n    for (Row row : tmpMatrix) {\n      prevVal = row.cells[idx].val_ =\n          prevVal == null || Math.abs(((Number) prevVal).longValue() - ((Number) row.cells[idx].val).longValue()) > precision ?\n              row.cells[idx].val :\n              prevVal;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"653c1ca305e0065ee988a09e59c8316b8cde02fd":["c09a89337c5a3688436fd158575e28cdbb4fe28e"],"c09a89337c5a3688436fd158575e28cdbb4fe28e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c09a89337c5a3688436fd158575e28cdbb4fe28e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"653c1ca305e0065ee988a09e59c8316b8cde02fd":[],"c09a89337c5a3688436fd158575e28cdbb4fe28e":["653c1ca305e0065ee988a09e59c8316b8cde02fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["653c1ca305e0065ee988a09e59c8316b8cde02fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}