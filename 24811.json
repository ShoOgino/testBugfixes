{"path":"lucene/core/src/test/org/apache/lucene/index/Test2BPostings.MyTokenStream#incrementToken().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/Test2BPostings.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BPostings.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (index <= 'z') {\n        buffer[0] = (char) index++;\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (index <= 'z') {\n        buffer[0] = (char) index++;\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/Test2BPostings.MyTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/Test2BPostings.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (index <= 'z') {\n        buffer[0] = (char) index++;\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (index <= 'z') {\n        buffer[0] = (char) index++;\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":["1c2689487624ee0efdf9d3ed6b3a224200be7dac"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/Test2BPostings.MyTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/Test2BPostings.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (index <= 'z') {\n        buffer[0] = (char) index++;\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (index <= 'z') {\n        buffer[0] = (char) index++;\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08283065e7777f6164a373e75d42a4e7f750e98","date":1377038394,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/Test2BPostings.MyTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/Test2BPostings.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (index <= 'z') {\n        clearAttributes();\n        termAtt.setLength(1);\n        termAtt.buffer()[0] = (char) index++;\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (index <= 'z') {\n        buffer[0] = (char) index++;\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":["1c2689487624ee0efdf9d3ed6b3a224200be7dac"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/Test2BPostings.MyTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/Test2BPostings.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (index <= 'z') {\n        clearAttributes();\n        termAtt.setLength(1);\n        termAtt.buffer()[0] = (char) index++;\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (index <= 'z') {\n        buffer[0] = (char) index++;\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","f08283065e7777f6164a373e75d42a4e7f750e98"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f08283065e7777f6164a373e75d42a4e7f750e98":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f08283065e7777f6164a373e75d42a4e7f750e98"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","fe33227f6805edab2036cbb80645cc4e2d1fa424","f08283065e7777f6164a373e75d42a4e7f750e98"],"f08283065e7777f6164a373e75d42a4e7f750e98":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}