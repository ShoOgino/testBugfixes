{"path":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertFieldStatistics(Fields,Fields).mjava","commits":[{"id":"0445bcd8433e331f296f5502fc089b336cbac3a6","date":1322630375,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertFieldStatistics(Fields,Fields).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * checks that top-level statistics on Fields are the same \n   */\n  public void assertFieldStatistics(Fields leftFields, Fields rightFields) throws Exception {\n    if (leftFields.getUniqueFieldCount() != -1 && rightFields.getUniqueFieldCount() != -1) {\n      assertEquals(info, leftFields.getUniqueFieldCount(), rightFields.getUniqueFieldCount());\n    }\n    \n    if (leftFields.getUniqueTermCount() != -1 && rightFields.getUniqueTermCount() != -1) {\n      assertEquals(info, leftFields.getUniqueTermCount(), rightFields.getUniqueTermCount());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertFieldStatistics(Fields,Fields).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertFieldStatistics(Fields,Fields).mjava","sourceNew":"  /** \n   * checks that top-level statistics on Fields are the same \n   */\n  public void assertFieldStatistics(Fields leftFields, Fields rightFields) throws Exception {\n    if (leftFields.getUniqueFieldCount() != -1 && rightFields.getUniqueFieldCount() != -1) {\n      assertEquals(info, leftFields.getUniqueFieldCount(), rightFields.getUniqueFieldCount());\n    }\n    \n    if (leftFields.getUniqueTermCount() != -1 && rightFields.getUniqueTermCount() != -1) {\n      assertEquals(info, leftFields.getUniqueTermCount(), rightFields.getUniqueTermCount());\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that top-level statistics on Fields are the same \n   */\n  public void assertFieldStatistics(Fields leftFields, Fields rightFields) throws Exception {\n    if (leftFields.getUniqueFieldCount() != -1 && rightFields.getUniqueFieldCount() != -1) {\n      assertEquals(info, leftFields.getUniqueFieldCount(), rightFields.getUniqueFieldCount());\n    }\n    \n    if (leftFields.getUniqueTermCount() != -1 && rightFields.getUniqueTermCount() != -1) {\n      assertEquals(info, leftFields.getUniqueTermCount(), rightFields.getUniqueTermCount());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0445bcd8433e331f296f5502fc089b336cbac3a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0445bcd8433e331f296f5502fc089b336cbac3a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"0445bcd8433e331f296f5502fc089b336cbac3a6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0445bcd8433e331f296f5502fc089b336cbac3a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}