{"path":"src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","commits":[{"id":"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e","date":1263329721,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new instance for the given {@code baseClass} and method declaration.\n   * @throws UnsupportedOperationException if you create a second instance of the same\n   *  {@code baseClass} and method declaration combination. This enforces the singleton status.\n   * @throws IllegalArgumentException if {@code baseClass} does not declare the given method.\n   */\n  public VirtualMethod(Class<C> baseClass, String method, Class<?>... parameters) {\n    this.baseClass = baseClass;\n    this.method = method;\n    this.parameters = parameters;\n    try {\n      if (!singletonSet.add(baseClass.getDeclaredMethod(method, parameters)))\n        throw new UnsupportedOperationException(\n          \"VirtualMethod instances must be singletons and therefore \" +\n          \"assigned to static final members in the same class, they use as baseClass ctor param.\"\n        );\n    } catch (NoSuchMethodException nsme) {\n      throw new IllegalArgumentException(baseClass.getName() + \" has no such method: \"+nsme.getMessage());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","pathOld":"src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","sourceNew":"  /**\n   * Creates a new instance for the given {@code baseClass} and method declaration.\n   * @throws UnsupportedOperationException if you create a second instance of the same\n   *  {@code baseClass} and method declaration combination. This enforces the singleton status.\n   * @throws IllegalArgumentException if {@code baseClass} does not declare the given method.\n   */\n  public VirtualMethod(Class<C> baseClass, String method, Class<?>... parameters) {\n    this.baseClass = baseClass;\n    this.method = method;\n    this.parameters = parameters;\n    try {\n      if (!singletonSet.add(baseClass.getDeclaredMethod(method, parameters)))\n        throw new UnsupportedOperationException(\n          \"VirtualMethod instances must be singletons and therefore \" +\n          \"assigned to static final members in the same class, they use as baseClass ctor param.\"\n        );\n    } catch (NoSuchMethodException nsme) {\n      throw new IllegalArgumentException(baseClass.getName() + \" has no such method: \"+nsme.getMessage());\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance for the given {@code baseClass} and method declaration.\n   * @throws UnsupportedOperationException if you create a second instance of the same\n   *  {@code baseClass} and method declaration combination. This enforces the singleton status.\n   * @throws IllegalArgumentException if {@code baseClass} does not declare the given method.\n   */\n  public VirtualMethod(Class<C> baseClass, String method, Class<?>... parameters) {\n    this.baseClass = baseClass;\n    this.method = method;\n    this.parameters = parameters;\n    try {\n      if (!singletonSet.add(baseClass.getDeclaredMethod(method, parameters)))\n        throw new UnsupportedOperationException(\n          \"VirtualMethod instances must be singletons and therefore \" +\n          \"assigned to static final members in the same class, they use as baseClass ctor param.\"\n        );\n    } catch (NoSuchMethodException nsme) {\n      throw new IllegalArgumentException(baseClass.getName() + \" has no such method: \"+nsme.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e"]},"commit2Childs":{"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}