{"path":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","sourceNew":"  public static String decompressString(byte[] value, int offset, int length) throws DataFormatException {\n    final byte[] bytes = decompress(value, offset, length);\n    CharsRef result = new CharsRef(bytes.length);\n    UnicodeUtil.UTF8toUTF16(bytes, 0, bytes.length, result);\n    return new String(result.chars, 0, result.length);\n  }\n\n","sourceOld":"  public static String decompressString(byte[] value, int offset, int length) throws DataFormatException {\n    final byte[] bytes = decompress(value, offset, length);\n    CharsRef result = new CharsRef(bytes.length);\n    UnicodeUtil.UTF8toUTF16(bytes, 0, bytes.length, result);\n    return new String(result.chars, 0, result.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d","date":1346337224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","sourceNew":"  /** Decompress the byte array previously returned by\n   *  compressString back into a String */\n  public static String decompressString(byte[] value, int offset, int length) throws DataFormatException {\n    final byte[] bytes = decompress(value, offset, length);\n    CharsRef result = new CharsRef(bytes.length);\n    UnicodeUtil.UTF8toUTF16(bytes, 0, bytes.length, result);\n    return new String(result.chars, 0, result.length);\n  }\n\n","sourceOld":"  public static String decompressString(byte[] value, int offset, int length) throws DataFormatException {\n    final byte[] bytes = decompress(value, offset, length);\n    CharsRef result = new CharsRef(bytes.length);\n    UnicodeUtil.UTF8toUTF16(bytes, 0, bytes.length, result);\n    return new String(result.chars, 0, result.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","sourceNew":"  /** Decompress the byte array previously returned by\n   *  compressString back into a String */\n  public static String decompressString(byte[] value, int offset, int length) throws DataFormatException {\n    final byte[] bytes = decompress(value, offset, length);\n    CharsRef result = new CharsRef(bytes.length);\n    UnicodeUtil.UTF8toUTF16(bytes, 0, bytes.length, result);\n    return new String(result.chars, 0, result.length);\n  }\n\n","sourceOld":"  public static String decompressString(byte[] value, int offset, int length) throws DataFormatException {\n    final byte[] bytes = decompress(value, offset, length);\n    CharsRef result = new CharsRef(bytes.length);\n    UnicodeUtil.UTF8toUTF16(bytes, 0, bytes.length, result);\n    return new String(result.chars, 0, result.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","sourceNew":"  /** Decompress the byte array previously returned by\n   *  compressString back into a String */\n  public static String decompressString(byte[] value, int offset, int length) throws DataFormatException {\n    final byte[] bytes = decompress(value, offset, length);\n    final char[] result = new char[bytes.length];\n    final int len = UnicodeUtil.UTF8toUTF16(bytes, 0, bytes.length, result);\n    return new String(result, 0, len);\n  }\n\n","sourceOld":"  /** Decompress the byte array previously returned by\n   *  compressString back into a String */\n  public static String decompressString(byte[] value, int offset, int length) throws DataFormatException {\n    final byte[] bytes = decompress(value, offset, length);\n    CharsRef result = new CharsRef(bytes.length);\n    UnicodeUtil.UTF8toUTF16(bytes, 0, bytes.length, result);\n    return new String(result.chars, 0, result.length);\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c84aedcfa68275a8218f47c728d71c04303ca6e","date":1466407290,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","sourceNew":null,"sourceOld":"  /** Decompress the byte array previously returned by\n   *  compressString back into a String */\n  public static String decompressString(byte[] value, int offset, int length) throws DataFormatException {\n    final byte[] bytes = decompress(value, offset, length);\n    final char[] result = new char[bytes.length];\n    final int len = UnicodeUtil.UTF8toUTF16(bytes, 0, bytes.length, result);\n    return new String(result, 0, len);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6aaba221b22442bdf0ef28770c25fe259dfb3f55","date":1466496193,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","sourceNew":null,"sourceOld":"  /** Decompress the byte array previously returned by\n   *  compressString back into a String */\n  public static String decompressString(byte[] value, int offset, int length) throws DataFormatException {\n    final byte[] bytes = decompress(value, offset, length);\n    final char[] result = new char[bytes.length];\n    final int len = UnicodeUtil.UTF8toUTF16(bytes, 0, bytes.length, result);\n    return new String(result, 0, len);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#decompressString(byte[],int,int).mjava","sourceNew":null,"sourceOld":"  /** Decompress the byte array previously returned by\n   *  compressString back into a String */\n  public static String decompressString(byte[] value, int offset, int length) throws DataFormatException {\n    final byte[] bytes = decompress(value, offset, length);\n    final char[] result = new char[bytes.length];\n    final int len = UnicodeUtil.UTF8toUTF16(bytes, 0, bytes.length, result);\n    return new String(result, 0, len);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","6c84aedcfa68275a8218f47c728d71c04303ca6e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c84aedcfa68275a8218f47c728d71c04303ca6e":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"]},"commit2Childs":{"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["05a14b2611ead08655a2b2bdc61632eb31316e57","6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6c84aedcfa68275a8218f47c728d71c04303ca6e":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["6aaba221b22442bdf0ef28770c25fe259dfb3f55","6c84aedcfa68275a8218f47c728d71c04303ca6e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","05a14b2611ead08655a2b2bdc61632eb31316e57"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}