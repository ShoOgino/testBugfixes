{"path":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testRandomChunkSizes().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testRandomChunkSizes().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestMultiMMap#testRandomChunkSizes().mjava","sourceNew":"  public void testRandomChunkSizes() throws Exception {\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++)\n      assertChunking(random, _TestUtil.nextInt(random, 20, 100));\n  }\n\n","sourceOld":"  public void testRandomChunkSizes() throws Exception {\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++)\n      assertChunking(random, _TestUtil.nextInt(random, 20, 100));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testRandomChunkSizes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testRandomChunkSizes().mjava","sourceNew":"  public void testRandomChunkSizes() throws Exception {\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++)\n      assertChunking(random(), _TestUtil.nextInt(random(), 20, 100));\n  }\n\n","sourceOld":"  public void testRandomChunkSizes() throws Exception {\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++)\n      assertChunking(random, _TestUtil.nextInt(random, 20, 100));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testRandomChunkSizes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testRandomChunkSizes().mjava","sourceNew":"  public void testRandomChunkSizes() throws Exception {\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++)\n      assertChunking(random(), TestUtil.nextInt(random(), 20, 100));\n  }\n\n","sourceOld":"  public void testRandomChunkSizes() throws Exception {\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++)\n      assertChunking(random(), _TestUtil.nextInt(random(), 20, 100));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testRandomChunkSizes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testRandomChunkSizes().mjava","sourceNew":"  public void testRandomChunkSizes() throws Exception {\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++) {\n      assertChunking(random(), TestUtil.nextInt(random(), 20, 100));\n    }\n  }\n\n","sourceOld":"  public void testRandomChunkSizes() throws Exception {\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++)\n      assertChunking(random(), TestUtil.nextInt(random(), 20, 100));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6a2469c81a34d38d9edbf0763494a526e29db0a","date":1417052082,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testRandomChunkSizes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testRandomChunkSizes().mjava","sourceNew":"  public void testRandomChunkSizes() throws Exception {\n    int num = TEST_NIGHTLY ? atLeast(10) : 3;\n    for (int i = 0; i < num; i++) {\n      assertChunking(random(), TestUtil.nextInt(random(), 20, 100));\n    }\n  }\n\n","sourceOld":"  public void testRandomChunkSizes() throws Exception {\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++) {\n      assertChunking(random(), TestUtil.nextInt(random(), 20, 100));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c6a2469c81a34d38d9edbf0763494a526e29db0a":["285cdc737de75b7cc7c284a156b20214deb67bca"],"6613659748fe4411a7dcf85266e55db1f95f7315":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"285cdc737de75b7cc7c284a156b20214deb67bca":["6613659748fe4411a7dcf85266e55db1f95f7315"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c6a2469c81a34d38d9edbf0763494a526e29db0a"]},"commit2Childs":{"c6a2469c81a34d38d9edbf0763494a526e29db0a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6613659748fe4411a7dcf85266e55db1f95f7315":["285cdc737de75b7cc7c284a156b20214deb67bca"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"285cdc737de75b7cc7c284a156b20214deb67bca":["c6a2469c81a34d38d9edbf0763494a526e29db0a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}