{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianNormalizer#normalize(char[],int).mjava","commits":[{"id":"7d9d25893b07af2fc930e9d5c14a4241781185fe","date":1249946967,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianNormalizer#normalize(char[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Normalize an input buffer of Persian text\n   * \n   * @param s input buffer\n   * @param len length of input buffer\n   * @return length of input buffer after normalization\n   */\n  public int normalize(char s[], int len) {\n\n    for (int i = 0; i < len; i++) {\n      if (s[i] == FARSI_YEH || s[i] == YEH_BARREE)\n        s[i] = YEH;\n\n      if (s[i] == KEHEH)\n        s[i] = KAF;\n\n      if (s[i] == HEH_YEH || s[i] == HEH_GOAL)\n        s[i] = HEH;\n\n      if (s[i] == HAMZA_ABOVE) { // necessary for HEH + HAMZA\n        len = delete(s, i, len);\n        i--;\n      }\n    }\n\n    return len;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27fcc5d3f6d65392b2c6b04e8b842e97ea24de1f","date":1255010058,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianNormalizer#normalize(char[],int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianNormalizer#normalize(char[],int).mjava","sourceNew":"  /**\n   * Normalize an input buffer of Persian text\n   * \n   * @param s input buffer\n   * @param len length of input buffer\n   * @return length of input buffer after normalization\n   */\n  public int normalize(char s[], int len) {\n\n    for (int i = 0; i < len; i++) {\n      switch (s[i]) {\n      case FARSI_YEH:\n      case YEH_BARREE:\n        s[i] = YEH;\n        break;\n      case KEHEH:\n        s[i] = KAF;\n        break;\n      case HEH_YEH:\n      case HEH_GOAL:\n        s[i] = HEH;\n        break;\n      case HAMZA_ABOVE: // necessary for HEH + HAMZA\n        len = delete(s, i, len);\n        i--;\n        break;\n      default:\n        break;\n      }\n    }\n\n    return len;\n  }\n\n","sourceOld":"  /**\n   * Normalize an input buffer of Persian text\n   * \n   * @param s input buffer\n   * @param len length of input buffer\n   * @return length of input buffer after normalization\n   */\n  public int normalize(char s[], int len) {\n\n    for (int i = 0; i < len; i++) {\n      if (s[i] == FARSI_YEH || s[i] == YEH_BARREE)\n        s[i] = YEH;\n\n      if (s[i] == KEHEH)\n        s[i] = KAF;\n\n      if (s[i] == HEH_YEH || s[i] == HEH_GOAL)\n        s[i] = HEH;\n\n      if (s[i] == HAMZA_ABOVE) { // necessary for HEH + HAMZA\n        len = delete(s, i, len);\n        i--;\n      }\n    }\n\n    return len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianNormalizer#normalize(char[],int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianNormalizer#normalize(char[],int).mjava","sourceNew":"  /**\n   * Normalize an input buffer of Persian text\n   * \n   * @param s input buffer\n   * @param len length of input buffer\n   * @return length of input buffer after normalization\n   */\n  public int normalize(char s[], int len) {\n\n    for (int i = 0; i < len; i++) {\n      switch (s[i]) {\n      case FARSI_YEH:\n      case YEH_BARREE:\n        s[i] = YEH;\n        break;\n      case KEHEH:\n        s[i] = KAF;\n        break;\n      case HEH_YEH:\n      case HEH_GOAL:\n        s[i] = HEH;\n        break;\n      case HAMZA_ABOVE: // necessary for HEH + HAMZA\n        len = delete(s, i, len);\n        i--;\n        break;\n      default:\n        break;\n      }\n    }\n\n    return len;\n  }\n\n","sourceOld":"  /**\n   * Normalize an input buffer of Persian text\n   * \n   * @param s input buffer\n   * @param len length of input buffer\n   * @return length of input buffer after normalization\n   */\n  public int normalize(char s[], int len) {\n\n    for (int i = 0; i < len; i++) {\n      switch (s[i]) {\n      case FARSI_YEH:\n      case YEH_BARREE:\n        s[i] = YEH;\n        break;\n      case KEHEH:\n        s[i] = KAF;\n        break;\n      case HEH_YEH:\n      case HEH_GOAL:\n        s[i] = HEH;\n        break;\n      case HAMZA_ABOVE: // necessary for HEH + HAMZA\n        len = delete(s, i, len);\n        i--;\n        break;\n      default:\n        break;\n      }\n    }\n\n    return len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"27fcc5d3f6d65392b2c6b04e8b842e97ea24de1f":["7d9d25893b07af2fc930e9d5c14a4241781185fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7d9d25893b07af2fc930e9d5c14a4241781185fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["27fcc5d3f6d65392b2c6b04e8b842e97ea24de1f"]},"commit2Childs":{"27fcc5d3f6d65392b2c6b04e8b842e97ea24de1f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d9d25893b07af2fc930e9d5c14a4241781185fe"],"7d9d25893b07af2fc930e9d5c14a4241781185fe":["27fcc5d3f6d65392b2c6b04e8b842e97ea24de1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}