{"path":"lucene/core/src/java/org/apache/lucene/index/DocValuesProcessor#addSortedSetField(FieldInfo,int,BytesRef).mjava","commits":[{"id":"f366ce28775e2b8ea4e06355009471328711666d","date":1360551293,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValuesProcessor#addSortedSetField(FieldInfo,int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  void addSortedSetField(FieldInfo fieldInfo, int docID, BytesRef value) {\n    DocValuesWriter writer = writers.get(fieldInfo.name);\n    SortedSetDocValuesWriter sortedSetWriter;\n    if (writer == null) {\n      sortedSetWriter = new SortedSetDocValuesWriter(fieldInfo, bytesUsed);\n      writers.put(fieldInfo.name, sortedSetWriter);\n    } else if (!(writer instanceof SortedSetDocValuesWriter)) {\n      throw new IllegalArgumentException(\"Incompatible DocValues type: field \\\"\" + fieldInfo.name + \"\\\" changed from \" + getTypeDesc(writer) + \" to sorted\");\n    } else {\n      sortedSetWriter = (SortedSetDocValuesWriter) writer;\n    }\n    sortedSetWriter.addValue(docID, value);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValuesProcessor#addSortedSetField(FieldInfo,int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  void addSortedSetField(FieldInfo fieldInfo, int docID, BytesRef value) {\n    DocValuesWriter writer = writers.get(fieldInfo.name);\n    SortedSetDocValuesWriter sortedSetWriter;\n    if (writer == null) {\n      sortedSetWriter = new SortedSetDocValuesWriter(fieldInfo, bytesUsed);\n      writers.put(fieldInfo.name, sortedSetWriter);\n    } else if (!(writer instanceof SortedSetDocValuesWriter)) {\n      throw new IllegalArgumentException(\"Incompatible DocValues type: field \\\"\" + fieldInfo.name + \"\\\" changed from \" + getTypeDesc(writer) + \" to sorted\");\n    } else {\n      sortedSetWriter = (SortedSetDocValuesWriter) writer;\n    }\n    sortedSetWriter.addValue(docID, value);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValuesProcessor#addSortedSetField(FieldInfo,int,BytesRef).mjava","sourceNew":null,"sourceOld":"  void addSortedSetField(FieldInfo fieldInfo, int docID, BytesRef value) {\n    DocValuesWriter writer = writers.get(fieldInfo.name);\n    SortedSetDocValuesWriter sortedSetWriter;\n    if (writer == null) {\n      sortedSetWriter = new SortedSetDocValuesWriter(fieldInfo, bytesUsed);\n      writers.put(fieldInfo.name, sortedSetWriter);\n    } else if (!(writer instanceof SortedSetDocValuesWriter)) {\n      throw new IllegalArgumentException(\"Incompatible DocValues type: field \\\"\" + fieldInfo.name + \"\\\" changed from \" + getTypeDesc(writer) + \" to sorted\");\n    } else {\n      sortedSetWriter = (SortedSetDocValuesWriter) writer;\n    }\n    sortedSetWriter.addValue(docID, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValuesProcessor#addSortedSetField(FieldInfo,int,BytesRef).mjava","sourceNew":null,"sourceOld":"  void addSortedSetField(FieldInfo fieldInfo, int docID, BytesRef value) {\n    DocValuesWriter writer = writers.get(fieldInfo.name);\n    SortedSetDocValuesWriter sortedSetWriter;\n    if (writer == null) {\n      sortedSetWriter = new SortedSetDocValuesWriter(fieldInfo, bytesUsed);\n      writers.put(fieldInfo.name, sortedSetWriter);\n    } else if (!(writer instanceof SortedSetDocValuesWriter)) {\n      throw new IllegalArgumentException(\"Incompatible DocValues type: field \\\"\" + fieldInfo.name + \"\\\" changed from \" + getTypeDesc(writer) + \" to sorted\");\n    } else {\n      sortedSetWriter = (SortedSetDocValuesWriter) writer;\n    }\n    sortedSetWriter.addValue(docID, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValuesProcessor#addSortedSetField(FieldInfo,int,BytesRef).mjava","sourceNew":null,"sourceOld":"  void addSortedSetField(FieldInfo fieldInfo, int docID, BytesRef value) {\n    DocValuesWriter writer = writers.get(fieldInfo.name);\n    SortedSetDocValuesWriter sortedSetWriter;\n    if (writer == null) {\n      sortedSetWriter = new SortedSetDocValuesWriter(fieldInfo, bytesUsed);\n      writers.put(fieldInfo.name, sortedSetWriter);\n    } else if (!(writer instanceof SortedSetDocValuesWriter)) {\n      throw new IllegalArgumentException(\"Incompatible DocValues type: field \\\"\" + fieldInfo.name + \"\\\" changed from \" + getTypeDesc(writer) + \" to sorted\");\n    } else {\n      sortedSetWriter = (SortedSetDocValuesWriter) writer;\n    }\n    sortedSetWriter.addValue(docID, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["ddbb72a33557d2b5bc22ee95daf3281c43560502","52c7e49be259508735752fba88085255014a6ecf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["ddbb72a33557d2b5bc22ee95daf3281c43560502","3394716f52b34ab259ad5247e7595d9f9db6e935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f366ce28775e2b8ea4e06355009471328711666d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f366ce28775e2b8ea4e06355009471328711666d"],"52c7e49be259508735752fba88085255014a6ecf":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3394716f52b34ab259ad5247e7595d9f9db6e935"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f366ce28775e2b8ea4e06355009471328711666d","ddbb72a33557d2b5bc22ee95daf3281c43560502"],"f366ce28775e2b8ea4e06355009471328711666d":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}