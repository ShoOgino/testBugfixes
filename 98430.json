{"path":"solr/core/src/java/org/apache/solr/schema/StrFieldSource#getValues(Map,LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/StrFieldSource#getValues(Map,LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public int ordVal(int doc) {\n        return termsIndex.getOrd(doc);\n      }\n\n      @Override\n      public int numOrd() {\n        return termsIndex.getValueCount();\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/StrFieldSource#getValues(Map,LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/StrFieldSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public int ordVal(int doc) throws IOException {\n        return getOrdForDoc(doc);\n      }\n\n      @Override\n      public int numOrd() {\n        return termsIndex.getValueCount();\n      }\n\n      @Override\n      public Object objectVal(int doc) throws IOException {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public int ordVal(int doc) {\n        return termsIndex.getOrd(doc);\n      }\n\n      @Override\n      public int numOrd() {\n        return termsIndex.getValueCount();\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/StrFieldSource#getValues(Map,LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/StrFieldSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public int ordVal(int doc) throws IOException {\n        return getOrdForDoc(doc);\n      }\n\n      @Override\n      public int numOrd() {\n        return termsIndex.getValueCount();\n      }\n\n      @Override\n      public Object objectVal(int doc) throws IOException {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public int ordVal(int doc) {\n        return termsIndex.getOrd(doc);\n      }\n\n      @Override\n      public int numOrd() {\n        return termsIndex.getValueCount();\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/StrFieldSource#getValues(Map,LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/StrFieldSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public int ordVal(int doc) throws IOException {\n        return getOrdForDoc(doc);\n      }\n\n      @Override\n      public int numOrd() {\n        return termsIndex.getValueCount();\n      }\n\n      @Override\n      public Object objectVal(int doc) throws IOException {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public int ordVal(int doc) {\n        return termsIndex.getOrd(doc);\n      }\n\n      @Override\n      public int numOrd() {\n        return termsIndex.getValueCount();\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/StrFieldSource#getValues(Map,LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/StrFieldSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(@SuppressWarnings({\"rawtypes\"})Map context, LeafReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public int ordVal(int doc) throws IOException {\n        return getOrdForDoc(doc);\n      }\n\n      @Override\n      public int numOrd() {\n        return termsIndex.getValueCount();\n      }\n\n      @Override\n      public Object objectVal(int doc) throws IOException {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public int ordVal(int doc) throws IOException {\n        return getOrdForDoc(doc);\n      }\n\n      @Override\n      public int numOrd() {\n        return termsIndex.getValueCount();\n      }\n\n      @Override\n      public Object objectVal(int doc) throws IOException {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["c9fb5f46e264daf5ba3860defe623a89d202dd87","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c9fb5f46e264daf5ba3860defe623a89d202dd87","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["06a8891f085f71282bb3ece1b1732b68f07813a3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}