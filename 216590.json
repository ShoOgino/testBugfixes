{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#fieldsWriter(Directory,SegmentInfo,IOContext).mjava","commits":[{"id":"ca02638278b6e8ae6b18f9db9e55ddbb3092cd13","date":1417836602,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#fieldsWriter(Directory,SegmentInfo,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public StoredFieldsWriter fieldsWriter(Directory directory, SegmentInfo si, IOContext context) throws IOException {\n    String previous = si.putAttribute(MODE_KEY, mode.name());\n    if (previous != null) {\n      throw new IllegalStateException(\"found existing value for \" + MODE_KEY + \" for segment: \" + si.name +\n                                      \"old=\" + previous + \", new=\" + mode.name());\n    }\n    return impl(mode).fieldsWriter(directory, si, context);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"86a0a50d2d14aaee1e635bbec914468551f7f9a2","date":1482234306,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#fieldsWriter(Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#fieldsWriter(Directory,SegmentInfo,IOContext).mjava","sourceNew":"  @Override\n  public StoredFieldsWriter fieldsWriter(Directory directory, SegmentInfo si, IOContext context) throws IOException {\n    String previous = si.putAttribute(MODE_KEY, mode.name());\n    if (previous != null && previous.equals(mode.name()) == false) {\n      throw new IllegalStateException(\"found existing value for \" + MODE_KEY + \" for segment: \" + si.name +\n                                      \"old=\" + previous + \", new=\" + mode.name());\n    }\n    return impl(mode).fieldsWriter(directory, si, context);\n  }\n\n","sourceOld":"  @Override\n  public StoredFieldsWriter fieldsWriter(Directory directory, SegmentInfo si, IOContext context) throws IOException {\n    String previous = si.putAttribute(MODE_KEY, mode.name());\n    if (previous != null) {\n      throw new IllegalStateException(\"found existing value for \" + MODE_KEY + \" for segment: \" + si.name +\n                                      \"old=\" + previous + \", new=\" + mode.name());\n    }\n    return impl(mode).fieldsWriter(directory, si, context);\n  }\n\n","bugFix":["ca02638278b6e8ae6b18f9db9e55ddbb3092cd13"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#fieldsWriter(Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#fieldsWriter(Directory,SegmentInfo,IOContext).mjava","sourceNew":"  @Override\n  public StoredFieldsWriter fieldsWriter(Directory directory, SegmentInfo si, IOContext context) throws IOException {\n    String previous = si.putAttribute(MODE_KEY, mode.name());\n    if (previous != null && previous.equals(mode.name()) == false) {\n      throw new IllegalStateException(\"found existing value for \" + MODE_KEY + \" for segment: \" + si.name +\n                                      \"old=\" + previous + \", new=\" + mode.name());\n    }\n    return impl(mode).fieldsWriter(directory, si, context);\n  }\n\n","sourceOld":"  @Override\n  public StoredFieldsWriter fieldsWriter(Directory directory, SegmentInfo si, IOContext context) throws IOException {\n    String previous = si.putAttribute(MODE_KEY, mode.name());\n    if (previous != null) {\n      throw new IllegalStateException(\"found existing value for \" + MODE_KEY + \" for segment: \" + si.name +\n                                      \"old=\" + previous + \", new=\" + mode.name());\n    }\n    return impl(mode).fieldsWriter(directory, si, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9","date":1598432674,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene87/Lucene87StoredFieldsFormat#fieldsWriter(Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50StoredFieldsFormat#fieldsWriter(Directory,SegmentInfo,IOContext).mjava","sourceNew":"  @Override\n  public StoredFieldsWriter fieldsWriter(Directory directory, SegmentInfo si, IOContext context) throws IOException {\n    String previous = si.putAttribute(MODE_KEY, mode.name());\n    if (previous != null && previous.equals(mode.name()) == false) {\n      throw new IllegalStateException(\"found existing value for \" + MODE_KEY + \" for segment: \" + si.name +\n                                      \"old=\" + previous + \", new=\" + mode.name());\n    }\n    return impl(mode).fieldsWriter(directory, si, context);\n  }\n\n","sourceOld":"  @Override\n  public StoredFieldsWriter fieldsWriter(Directory directory, SegmentInfo si, IOContext context) throws IOException {\n    String previous = si.putAttribute(MODE_KEY, mode.name());\n    if (previous != null && previous.equals(mode.name()) == false) {\n      throw new IllegalStateException(\"found existing value for \" + MODE_KEY + \" for segment: \" + si.name +\n                                      \"old=\" + previous + \", new=\" + mode.name());\n    }\n    return impl(mode).fieldsWriter(directory, si, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["ca02638278b6e8ae6b18f9db9e55ddbb3092cd13","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"ca02638278b6e8ae6b18f9db9e55ddbb3092cd13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["ca02638278b6e8ae6b18f9db9e55ddbb3092cd13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db8230c9dbe474fc18e1e71cf04c1ada8046ec9"]},"commit2Childs":{"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ca02638278b6e8ae6b18f9db9e55ddbb3092cd13"],"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ca02638278b6e8ae6b18f9db9e55ddbb3092cd13":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","0db8230c9dbe474fc18e1e71cf04c1ada8046ec9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}