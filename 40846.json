{"path":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#setup().mjava","commits":[{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#setup().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @Before\n  public void setup() throws Exception {\n    super.setUp();\n    // For manual testing only\n    // useFactory(null); // force an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // need an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#setup().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @Before\n  public void setup() throws Exception {\n    super.setUp();\n    // For manual testing only\n    // useFactory(null); // force an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // need an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c274a613674858712bdcc4ab2cfe3de62538931","date":1361133549,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#setup().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    // For manual testing only\n    // useFactory(null); // force an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @Before\n  public void setup() throws Exception {\n    super.setUp();\n    // For manual testing only\n    // useFactory(null); // force an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"09c8567c25c02eeeb3e719841606a1269f3538ca","date":1361155063,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#setup().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    // For manual testing only\n    // useFactory(null); // force an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @Before\n  public void setup() throws Exception {\n    super.setUp();\n    // For manual testing only\n    // useFactory(null); // force an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2126b84bd093fa3d921582a109a0ee578c28126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"8c274a613674858712bdcc4ab2cfe3de62538931":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"09c8567c25c02eeeb3e719841606a1269f3538ca":["d9405f486872f1e416304dfe389741f4ee2f8a4d","8c274a613674858712bdcc4ab2cfe3de62538931"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c274a613674858712bdcc4ab2cfe3de62538931"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["f2126b84bd093fa3d921582a109a0ee578c28126","8c274a613674858712bdcc4ab2cfe3de62538931","09c8567c25c02eeeb3e719841606a1269f3538ca"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"8c274a613674858712bdcc4ab2cfe3de62538931":["09c8567c25c02eeeb3e719841606a1269f3538ca","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09c8567c25c02eeeb3e719841606a1269f3538ca":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f2126b84bd093fa3d921582a109a0ee578c28126","09c8567c25c02eeeb3e719841606a1269f3538ca","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}