{"path":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndexNormDocValues.SingleValueSource#getArray().mjava","commits":[{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndexNormDocValues.SingleValueSource#getArray().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Object getArray() {\n      switch (type) {\n      case BYTES_FIXED_DEREF:\n      case BYTES_FIXED_SORTED:\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_VAR_DEREF:\n      case BYTES_VAR_SORTED:\n      case BYTES_VAR_STRAIGHT:\n        return binaryValue.bytes;\n      case FIXED_INTS_16:\n        return new short[] { numericValue.shortValue() };\n      case FIXED_INTS_32:\n        return new int[] { numericValue.intValue() };\n      case FIXED_INTS_64:\n        return new long[] { numericValue.longValue() };\n      case FIXED_INTS_8:\n        return new byte[] { numericValue.byteValue() };\n      case VAR_INTS:\n        return new long[] { numericValue.longValue() };\n      case FLOAT_32:\n        return new float[] { numericValue.floatValue() };\n      case FLOAT_64:\n        return new double[] { numericValue.doubleValue() };\n      default:\n        throw new IllegalArgumentException(\"unknown type \" + type);\n      }\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndexNormDocValues.SingleValueSource#getArray().mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndexNormDocValues.SingleValueSource#getArray().mjava","sourceNew":"    @Override\n    public Object getArray() {\n      switch (type) {\n      case BYTES_FIXED_DEREF:\n      case BYTES_FIXED_SORTED:\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_VAR_DEREF:\n      case BYTES_VAR_SORTED:\n      case BYTES_VAR_STRAIGHT:\n        return binaryValue.bytes;\n      case FIXED_INTS_16:\n        return new short[] { numericValue.shortValue() };\n      case FIXED_INTS_32:\n        return new int[] { numericValue.intValue() };\n      case FIXED_INTS_64:\n        return new long[] { numericValue.longValue() };\n      case FIXED_INTS_8:\n        return new byte[] { numericValue.byteValue() };\n      case VAR_INTS:\n        return new long[] { numericValue.longValue() };\n      case FLOAT_32:\n        return new float[] { numericValue.floatValue() };\n      case FLOAT_64:\n        return new double[] { numericValue.doubleValue() };\n      default:\n        throw new IllegalArgumentException(\"unknown type \" + type);\n      }\n\n    }\n\n","sourceOld":"    @Override\n    public Object getArray() {\n      switch (type) {\n      case BYTES_FIXED_DEREF:\n      case BYTES_FIXED_SORTED:\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_VAR_DEREF:\n      case BYTES_VAR_SORTED:\n      case BYTES_VAR_STRAIGHT:\n        return binaryValue.bytes;\n      case FIXED_INTS_16:\n        return new short[] { numericValue.shortValue() };\n      case FIXED_INTS_32:\n        return new int[] { numericValue.intValue() };\n      case FIXED_INTS_64:\n        return new long[] { numericValue.longValue() };\n      case FIXED_INTS_8:\n        return new byte[] { numericValue.byteValue() };\n      case VAR_INTS:\n        return new long[] { numericValue.longValue() };\n      case FLOAT_32:\n        return new float[] { numericValue.floatValue() };\n      case FLOAT_64:\n        return new double[] { numericValue.doubleValue() };\n      default:\n        throw new IllegalArgumentException(\"unknown type \" + type);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}