{"path":"solr/core/src/test/org/apache/solr/search/TestValueSourceCache#testNumerics().mjava","commits":[{"id":"160f7ef2c09376d87dbbda20e03577e483ce0172","date":1320520837,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestValueSourceCache#testNumerics().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNumerics() throws ParseException {\n    String[] templates = new String[]{\n        \"sum(#v0, #n0)\",\n        \"product(pow(#v0,#n0),#v1,#n1)\",\n        \"log(#v0)\",\n        \"log(sum(#n0,#v0,#v1,#n1))\",\n        \"scale(map(#v0,#n0,#n1,#n2),#n3,#n4)\",\n    };\n    String[] numbers = new String[]{\n        \"1,2,3,4,5\",\n        \"1.0,2.0,3.0,4.0,5.0\",\n        \"1,2.0,3,4.0,5\",\n        \"1.0,2,3.0,4,5.0\",\n        \"1000000,2000000,3000000,4000000,5000000\"\n    };\n    String[] types = new String[]{\n        \"val1_f1\",\n        \"val1_d1\",\n        \"val1_b1\",\n        \"val1_i1\",\n        \"val1_l1\",\n        \"val1_b1\",\n        \"val1_by1\",\n        \"val1_sh1\"\n    };\n    for (String template : templates) {\n      for (String nums : numbers) {\n        for (String type : types) {\n          tryQuerySameTypes(template, nums, type);\n          tryQueryDiffTypes(template, nums, types);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestValueSourceCache#testNumerics().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestValueSourceCache#testNumerics().mjava","sourceNew":"  @Test\n  public void testNumerics() throws SyntaxError {\n    String[] templates = new String[]{\n        \"sum(#v0, #n0)\",\n        \"product(pow(#v0,#n0),#v1,#n1)\",\n        \"log(#v0)\",\n        \"log(sum(#n0,#v0,#v1,#n1))\",\n        \"scale(map(#v0,#n0,#n1,#n2),#n3,#n4)\",\n    };\n    String[] numbers = new String[]{\n        \"1,2,3,4,5\",\n        \"1.0,2.0,3.0,4.0,5.0\",\n        \"1,2.0,3,4.0,5\",\n        \"1.0,2,3.0,4,5.0\",\n        \"1000000,2000000,3000000,4000000,5000000\"\n    };\n    String[] types = new String[]{\n        \"val1_f1\",\n        \"val1_d1\",\n        \"val1_b1\",\n        \"val1_i1\",\n        \"val1_l1\",\n        \"val1_b1\",\n        \"val1_by1\",\n        \"val1_sh1\"\n    };\n    for (String template : templates) {\n      for (String nums : numbers) {\n        for (String type : types) {\n          tryQuerySameTypes(template, nums, type);\n          tryQueryDiffTypes(template, nums, types);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNumerics() throws ParseException {\n    String[] templates = new String[]{\n        \"sum(#v0, #n0)\",\n        \"product(pow(#v0,#n0),#v1,#n1)\",\n        \"log(#v0)\",\n        \"log(sum(#n0,#v0,#v1,#n1))\",\n        \"scale(map(#v0,#n0,#n1,#n2),#n3,#n4)\",\n    };\n    String[] numbers = new String[]{\n        \"1,2,3,4,5\",\n        \"1.0,2.0,3.0,4.0,5.0\",\n        \"1,2.0,3,4.0,5\",\n        \"1.0,2,3.0,4,5.0\",\n        \"1000000,2000000,3000000,4000000,5000000\"\n    };\n    String[] types = new String[]{\n        \"val1_f1\",\n        \"val1_d1\",\n        \"val1_b1\",\n        \"val1_i1\",\n        \"val1_l1\",\n        \"val1_b1\",\n        \"val1_by1\",\n        \"val1_sh1\"\n    };\n    for (String template : templates) {\n      for (String nums : numbers) {\n        for (String type : types) {\n          tryQuerySameTypes(template, nums, type);\n          tryQueryDiffTypes(template, nums, types);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestValueSourceCache#testNumerics().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestValueSourceCache#testNumerics().mjava","sourceNew":"  @Test\n  public void testNumerics() throws SyntaxError {\n    String[] templates = new String[]{\n        \"sum(#v0, #n0)\",\n        \"product(pow(#v0,#n0),#v1,#n1)\",\n        \"log(#v0)\",\n        \"log(sum(#n0,#v0,#v1,#n1))\",\n        \"scale(map(#v0,#n0,#n1,#n2),#n3,#n4)\",\n    };\n    String[] numbers = new String[]{\n        \"1,2,3,4,5\",\n        \"1.0,2.0,3.0,4.0,5.0\",\n        \"1,2.0,3,4.0,5\",\n        \"1.0,2,3.0,4,5.0\",\n        \"1000000,2000000,3000000,4000000,5000000\"\n    };\n    String[] types = new String[]{\n        \"val1_f1\",\n        \"val1_d1\",\n        \"val1_b1\",\n        \"val1_i1\",\n        \"val1_l1\",\n        \"val1_b1\",\n        \"val1_by1\",\n        \"val1_sh1\"\n    };\n    for (String template : templates) {\n      for (String nums : numbers) {\n        for (String type : types) {\n          tryQuerySameTypes(template, nums, type);\n          tryQueryDiffTypes(template, nums, types);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNumerics() throws ParseException {\n    String[] templates = new String[]{\n        \"sum(#v0, #n0)\",\n        \"product(pow(#v0,#n0),#v1,#n1)\",\n        \"log(#v0)\",\n        \"log(sum(#n0,#v0,#v1,#n1))\",\n        \"scale(map(#v0,#n0,#n1,#n2),#n3,#n4)\",\n    };\n    String[] numbers = new String[]{\n        \"1,2,3,4,5\",\n        \"1.0,2.0,3.0,4.0,5.0\",\n        \"1,2.0,3,4.0,5\",\n        \"1.0,2,3.0,4,5.0\",\n        \"1000000,2000000,3000000,4000000,5000000\"\n    };\n    String[] types = new String[]{\n        \"val1_f1\",\n        \"val1_d1\",\n        \"val1_b1\",\n        \"val1_i1\",\n        \"val1_l1\",\n        \"val1_b1\",\n        \"val1_by1\",\n        \"val1_sh1\"\n    };\n    for (String template : templates) {\n      for (String nums : numbers) {\n        for (String type : types) {\n          tryQuerySameTypes(template, nums, type);\n          tryQueryDiffTypes(template, nums, types);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59a0020b413d44dd79d85d7a66ed5004265fb453","date":1371758877,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestValueSourceCache#testNumerics().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestValueSourceCache#testNumerics().mjava","sourceNew":"  @Test\n  public void testNumerics() throws SyntaxError {\n    String[] templates = new String[]{\n        \"sum(#v0, #n0)\",\n        \"product(pow(#v0,#n0),#v1,#n1)\",\n        \"log(#v0)\",\n        \"log(sum(#n0,#v0,#v1,#n1))\",\n        \"scale(map(#v0,#n0,#n1,#n2),#n3,#n4)\",\n    };\n    String[] numbers = new String[]{\n        \"1,2,3,4,5\",\n        \"1.0,2.0,3.0,4.0,5.0\",\n        \"1,2.0,3,4.0,5\",\n        \"1.0,2,3.0,4,5.0\",\n        \"1000000,2000000,3000000,4000000,5000000\"\n    };\n    String[] types = new String[]{\n        \"val1_f1\",\n        \"val1_d1\",\n        \"val1_b1\",\n        \"val1_i1\",\n        \"val1_l1\",\n        \"val1_b1\",\n    };\n    for (String template : templates) {\n      for (String nums : numbers) {\n        for (String type : types) {\n          tryQuerySameTypes(template, nums, type);\n          tryQueryDiffTypes(template, nums, types);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNumerics() throws SyntaxError {\n    String[] templates = new String[]{\n        \"sum(#v0, #n0)\",\n        \"product(pow(#v0,#n0),#v1,#n1)\",\n        \"log(#v0)\",\n        \"log(sum(#n0,#v0,#v1,#n1))\",\n        \"scale(map(#v0,#n0,#n1,#n2),#n3,#n4)\",\n    };\n    String[] numbers = new String[]{\n        \"1,2,3,4,5\",\n        \"1.0,2.0,3.0,4.0,5.0\",\n        \"1,2.0,3,4.0,5\",\n        \"1.0,2,3.0,4,5.0\",\n        \"1000000,2000000,3000000,4000000,5000000\"\n    };\n    String[] types = new String[]{\n        \"val1_f1\",\n        \"val1_d1\",\n        \"val1_b1\",\n        \"val1_i1\",\n        \"val1_l1\",\n        \"val1_b1\",\n        \"val1_by1\",\n        \"val1_sh1\"\n    };\n    for (String template : templates) {\n      for (String nums : numbers) {\n        for (String type : types) {\n          tryQuerySameTypes(template, nums, type);\n          tryQueryDiffTypes(template, nums, types);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestValueSourceCache#testNumerics().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestValueSourceCache#testNumerics().mjava","sourceNew":"  @Test\n  public void testNumerics() throws SyntaxError {\n    String[] templates = new String[]{\n        \"sum(#v0, #n0)\",\n        \"product(pow(#v0,#n0),#v1,#n1)\",\n        \"log(#v0)\",\n        \"log(sum(#n0,#v0,#v1,#n1))\",\n        \"scale(map(#v0,#n0,#n1,#n2),#n3,#n4)\",\n    };\n    String[] numbers = new String[]{\n        \"1,2,3,4,5\",\n        \"1.0,2.0,3.0,4.0,5.0\",\n        \"1,2.0,3,4.0,5\",\n        \"1.0,2,3.0,4,5.0\",\n        \"1000000,2000000,3000000,4000000,5000000\"\n    };\n    String[] types = new String[]{\n        \"val1_f1\",\n        \"val1_d1\",\n        \"val1_b1\",\n        \"val1_i1\",\n        \"val1_l1\",\n        \"val1_b1\",\n    };\n    for (String template : templates) {\n      for (String nums : numbers) {\n        for (String type : types) {\n          tryQuerySameTypes(template, nums, type);\n          tryQueryDiffTypes(template, nums, types);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNumerics() throws SyntaxError {\n    String[] templates = new String[]{\n        \"sum(#v0, #n0)\",\n        \"product(pow(#v0,#n0),#v1,#n1)\",\n        \"log(#v0)\",\n        \"log(sum(#n0,#v0,#v1,#n1))\",\n        \"scale(map(#v0,#n0,#n1,#n2),#n3,#n4)\",\n    };\n    String[] numbers = new String[]{\n        \"1,2,3,4,5\",\n        \"1.0,2.0,3.0,4.0,5.0\",\n        \"1,2.0,3,4.0,5\",\n        \"1.0,2,3.0,4,5.0\",\n        \"1000000,2000000,3000000,4000000,5000000\"\n    };\n    String[] types = new String[]{\n        \"val1_f1\",\n        \"val1_d1\",\n        \"val1_b1\",\n        \"val1_i1\",\n        \"val1_l1\",\n        \"val1_b1\",\n        \"val1_by1\",\n        \"val1_sh1\"\n    };\n    for (String template : templates) {\n      for (String nums : numbers) {\n        for (String type : types) {\n          tryQuerySameTypes(template, nums, type);\n          tryQueryDiffTypes(template, nums, types);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["3cdb67100dc016748799a77218aa409478372d79","59a0020b413d44dd79d85d7a66ed5004265fb453"],"3cdb67100dc016748799a77218aa409478372d79":["160f7ef2c09376d87dbbda20e03577e483ce0172"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["160f7ef2c09376d87dbbda20e03577e483ce0172","3cdb67100dc016748799a77218aa409478372d79"],"59a0020b413d44dd79d85d7a66ed5004265fb453":["3cdb67100dc016748799a77218aa409478372d79"],"160f7ef2c09376d87dbbda20e03577e483ce0172":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59a0020b413d44dd79d85d7a66ed5004265fb453"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"3cdb67100dc016748799a77218aa409478372d79":["37a0f60745e53927c4c876cfe5b5a58170f0646c","407687e67faf6e1f02a211ca078d8e3eed631027","59a0020b413d44dd79d85d7a66ed5004265fb453"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["160f7ef2c09376d87dbbda20e03577e483ce0172"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"59a0020b413d44dd79d85d7a66ed5004265fb453":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"160f7ef2c09376d87dbbda20e03577e483ce0172":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}