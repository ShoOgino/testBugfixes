{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity.SimWeight#getValueForNormalization().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity.SimWeight#getValueForNormalization().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/Similarity.SimWeight#getValueForNormalization().mjava","sourceNew":"    /** The value for normalization of contained query clauses (e.g. sum of squared weights).\n     * <p>\n     * NOTE: a Similarity implementation might not use any query normalization at all,\n     * its not required. However, if it wants to participate in query normalization,\n     * it can return a value here.\n     */\n    public abstract float getValueForNormalization();\n\n","sourceOld":"    /** The value for normalization of contained query clauses (e.g. sum of squared weights).\n     * <p>\n     * NOTE: a Similarity implementation might not use any query normalization at all,\n     * its not required. However, if it wants to participate in query normalization,\n     * it can return a value here.\n     */\n    public abstract float getValueForNormalization();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity.SimWeight#getValueForNormalization().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity.SimWeight#getValueForNormalization().mjava","sourceNew":"    /** The value for normalization of contained query clauses (e.g. sum of squared weights).\n     * <p>\n     * NOTE: a Similarity implementation might not use any query normalization at all,\n     * it's not required. However, if it wants to participate in query normalization,\n     * it can return a value here.\n     */\n    public abstract float getValueForNormalization();\n\n","sourceOld":"    /** The value for normalization of contained query clauses (e.g. sum of squared weights).\n     * <p>\n     * NOTE: a Similarity implementation might not use any query normalization at all,\n     * its not required. However, if it wants to participate in query normalization,\n     * it can return a value here.\n     */\n    public abstract float getValueForNormalization();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity.SimWeight#getValueForNormalization().mjava","sourceNew":null,"sourceOld":"    /** The value for normalization of contained query clauses (e.g. sum of squared weights).\n     * <p>\n     * NOTE: a Similarity implementation might not use any query normalization at all,\n     * it's not required. However, if it wants to participate in query normalization,\n     * it can return a value here.\n     */\n    public abstract float getValueForNormalization();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity.SimWeight#getValueForNormalization().mjava","sourceNew":null,"sourceOld":"    /** The value for normalization of contained query clauses (e.g. sum of squared weights).\n     * <p>\n     * NOTE: a Similarity implementation might not use any query normalization at all,\n     * it's not required. However, if it wants to participate in query normalization,\n     * it can return a value here.\n     */\n    public abstract float getValueForNormalization();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}