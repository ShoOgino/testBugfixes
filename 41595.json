{"path":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher#canSubstituteDvForStored(FieldInfo,SchemaField).mjava","commits":[{"id":"55ac9ae04c11f9e36330ee2448ef214c4fdbfc79","date":1509089658,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher#canSubstituteDvForStored(FieldInfo,SchemaField).mjava","pathOld":"/dev/null","sourceNew":"  private boolean canSubstituteDvForStored(FieldInfo fieldInfo, SchemaField schemaField) {\n    if (!schemaField.hasDocValues() || !schemaField.stored()) return false;\n    if (schemaField.multiValued()) return false;\n    DocValuesType docValuesType = fieldInfo.getDocValuesType();\n    NumberType numberType = schemaField.getType().getNumberType();\n    // can not decode a numeric without knowing its numberType\n    if (numberType == null && (docValuesType == DocValuesType.SORTED_NUMERIC || docValuesType == DocValuesType.NUMERIC)) {\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ecd141e96e7a7a65822d7fada5ddc585b21149","date":1534786652,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher#canSubstituteDvForStored(FieldInfo,SchemaField).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher#canSubstituteDvForStored(FieldInfo,SchemaField).mjava","sourceNew":"  // Does this field have both stored=true and docValues=true and is otherwise\n  // eligible for getting the field's value from DV?\n  private boolean canSubstituteDvForStored(FieldInfo fieldInfo, SchemaField schemaField) {\n    if (!schemaField.hasDocValues() || !schemaField.stored()) return false;\n    if (schemaField.multiValued()) return false;\n    DocValuesType docValuesType = fieldInfo.getDocValuesType();\n    NumberType numberType = schemaField.getType().getNumberType();\n    // can not decode a numeric without knowing its numberType\n    if (numberType == null && (docValuesType == DocValuesType.SORTED_NUMERIC || docValuesType == DocValuesType.NUMERIC)) {\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean canSubstituteDvForStored(FieldInfo fieldInfo, SchemaField schemaField) {\n    if (!schemaField.hasDocValues() || !schemaField.stored()) return false;\n    if (schemaField.multiValued()) return false;\n    DocValuesType docValuesType = fieldInfo.getDocValuesType();\n    NumberType numberType = schemaField.getType().getNumberType();\n    // can not decode a numeric without knowing its numberType\n    if (numberType == null && (docValuesType == DocValuesType.SORTED_NUMERIC || docValuesType == DocValuesType.NUMERIC)) {\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96ecd141e96e7a7a65822d7fada5ddc585b21149":["55ac9ae04c11f9e36330ee2448ef214c4fdbfc79"],"55ac9ae04c11f9e36330ee2448ef214c4fdbfc79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["96ecd141e96e7a7a65822d7fada5ddc585b21149"]},"commit2Childs":{"96ecd141e96e7a7a65822d7fada5ddc585b21149":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55ac9ae04c11f9e36330ee2448ef214c4fdbfc79":["96ecd141e96e7a7a65822d7fada5ddc585b21149"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55ac9ae04c11f9e36330ee2448ef214c4fdbfc79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}