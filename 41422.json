{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","sourceNew":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","sourceNew":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","sourceNew":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","sourceNew":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n     \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    client.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    client.add(doc);\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    client.add(doc);\n    client.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = client.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n     \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    server.add( doc );\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    server.add( doc );\n    server.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = server.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","sourceNew":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n     \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    client.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\" );\n    doc.addField( \"name\", \"doc1\" );\n    doc.addField( \"price\", 10 );\n    client.add(doc);\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\" );\n    client.add(doc);\n    client.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = client.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n     \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    client.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\", 1.0f );\n    doc.addField( \"name\", \"doc1\", 1.0f );\n    doc.addField( \"price\", 10 );\n    client.add(doc);\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\", 1.0f );\n    client.add(doc);\n    client.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = client.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c68c39b2c63d90387c861e51185c9568c50611","date":1557206402,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testGetEmptyResults().mjava","sourceNew":"  /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n     \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    client.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\" );\n    doc.addField( \"name\", \"doc1\" );\n    doc.addField( \"price\", 10 );\n    client.add(doc);\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\" );\n    client.add(doc);\n    client.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = client.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","sourceOld":" /**\n  * Get empty results\n  */\n  @Test\n  public void testGetEmptyResults() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n     \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    client.commit();\n     \n    // Add two docs\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id1\" );\n    doc.addField( \"name\", \"doc1\" );\n    doc.addField( \"price\", 10 );\n    client.add(doc);\n    \n    doc = new SolrInputDocument();\n    doc.addField( \"id\", \"id2\" );\n    client.add(doc);\n    client.commit();\n    \n    // Make sure we get empty docs for unknown field\n    SolrDocumentList out = client.query( new SolrQuery( \"*:*\" ).set(\"fl\", \"foofoofoo\" ) ).getResults();\n    assertEquals( 2, out.getNumFound() );\n    assertEquals( 0, out.get(0).size() );\n    assertEquals( 0, out.get(1).size() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09c68c39b2c63d90387c861e51185c9568c50611":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c68c39b2c63d90387c861e51185c9568c50611"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"bafca15d8e408346a67f4282ad1143b88023893b":["acd9883560fd89e6448b2b447302fe543040cd4f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"09c68c39b2c63d90387c861e51185c9568c50611":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"acd9883560fd89e6448b2b447302fe543040cd4f":["09c68c39b2c63d90387c861e51185c9568c50611"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}