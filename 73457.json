{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<String,String>(args));\n    String version = args.remove(\"luceneMatchVersion\");\n    luceneMatchVersion = version == null ? null : Version.parseLeniently(version);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcae30df9fe9300569835aef42ec65802c7c0afb","date":1364859933,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","sourceNew":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<String,String>(args));\n    String version = get(args, \"luceneMatchVersion\");\n    luceneMatchVersion = version == null ? null : Version.parseLeniently(version);\n  }\n\n","sourceOld":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<String,String>(args));\n    String version = args.remove(\"luceneMatchVersion\");\n    luceneMatchVersion = version == null ? null : Version.parseLeniently(version);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b4b4d68085809ae840a099e4620e5a128509279","date":1365633379,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","sourceNew":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<String,String>(args));\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    luceneMatchVersion = version == null ? null : Version.parseLeniently(version);\n    args.remove(CLASS_NAME);  // consume the class arg\n  }\n\n","sourceOld":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<String,String>(args));\n    String version = get(args, \"luceneMatchVersion\");\n    luceneMatchVersion = version == null ? null : Version.parseLeniently(version);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","sourceNew":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<>(args));\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    luceneMatchVersion = version == null ? null : Version.parseLeniently(version);\n    args.remove(CLASS_NAME);  // consume the class arg\n  }\n\n","sourceOld":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<String,String>(args));\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    luceneMatchVersion = version == null ? null : Version.parseLeniently(version);\n    args.remove(CLASS_NAME);  // consume the class arg\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46ff533a28b45377dffc601931e60e19492e6384","date":1411292651,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","sourceNew":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<>(args));\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    if (version == null) {\n      luceneMatchVersion = null;\n    } else {\n      try {\n        luceneMatchVersion = Version.parseLeniently(version);\n      } catch (ParseException pe) {\n        throw new IllegalArgumentException(pe);\n      }\n    }\n    args.remove(CLASS_NAME);  // consume the class arg\n  }\n\n","sourceOld":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<>(args));\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    luceneMatchVersion = version == null ? null : Version.parseLeniently(version);\n    args.remove(CLASS_NAME);  // consume the class arg\n  }\n\n","bugFix":null,"bugIntro":["623b5245fbd9d5af9f458826ba9ed3d6212db24d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"623b5245fbd9d5af9f458826ba9ed3d6212db24d","date":1421078865,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","sourceNew":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<>(args));\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    if (version == null) {\n      luceneMatchVersion = Version.LATEST;\n    } else {\n      try {\n        luceneMatchVersion = Version.parseLeniently(version);\n      } catch (ParseException pe) {\n        throw new IllegalArgumentException(pe);\n      }\n    }\n    args.remove(CLASS_NAME);  // consume the class arg\n  }\n\n","sourceOld":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<>(args));\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    if (version == null) {\n      luceneMatchVersion = null;\n    } else {\n      try {\n        luceneMatchVersion = Version.parseLeniently(version);\n      } catch (ParseException pe) {\n        throw new IllegalArgumentException(pe);\n      }\n    }\n    args.remove(CLASS_NAME);  // consume the class arg\n  }\n\n","bugFix":["46ff533a28b45377dffc601931e60e19492e6384"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd2b7ad87a1172d1d06dc8491991e52534c90f71","date":1555507572,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","sourceNew":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Map.copyOf(args);\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    if (version == null) {\n      luceneMatchVersion = Version.LATEST;\n    } else {\n      try {\n        luceneMatchVersion = Version.parseLeniently(version);\n      } catch (ParseException pe) {\n        throw new IllegalArgumentException(pe);\n      }\n    }\n    args.remove(CLASS_NAME);  // consume the class arg\n  }\n\n","sourceOld":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Collections.unmodifiableMap(new HashMap<>(args));\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    if (version == null) {\n      luceneMatchVersion = Version.LATEST;\n    } else {\n      try {\n        luceneMatchVersion = Version.parseLeniently(version);\n      } catch (ParseException pe) {\n        throw new IllegalArgumentException(pe);\n      }\n    }\n    args.remove(CLASS_NAME);  // consume the class arg\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c24804758d67429e3055070a9fe970d4f159954","date":1565508925,"type":3,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","sourceNew":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Map.copyOf(args);\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    if (version == null) {\n      luceneMatchVersion = Version.LATEST;\n    } else {\n      try {\n        luceneMatchVersion = Version.parseLeniently(version);\n      } catch (ParseException pe) {\n        throw new IllegalArgumentException(pe);\n      }\n    }\n    args.remove(CLASS_NAME);  // consume the class arg\n    args.remove(SPI_NAME);    // consume the spi arg\n  }\n\n","sourceOld":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Map.copyOf(args);\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    if (version == null) {\n      luceneMatchVersion = Version.LATEST;\n    } else {\n      try {\n        luceneMatchVersion = Version.parseLeniently(version);\n      } catch (ParseException pe) {\n        throw new IllegalArgumentException(pe);\n      }\n    }\n    args.remove(CLASS_NAME);  // consume the class arg\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":5,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#AbstractAnalysisFactory(Map[String,String]).mjava","sourceNew":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Map.copyOf(args);\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    if (version == null) {\n      luceneMatchVersion = Version.LATEST;\n    } else {\n      try {\n        luceneMatchVersion = Version.parseLeniently(version);\n      } catch (ParseException pe) {\n        throw new IllegalArgumentException(pe);\n      }\n    }\n    args.remove(CLASS_NAME);  // consume the class arg\n    args.remove(SPI_NAME);    // consume the spi arg\n  }\n\n","sourceOld":"  /**\n   * Initialize this factory via a set of key-value pairs.\n   */\n  protected AbstractAnalysisFactory(Map<String,String> args) {\n    originalArgs = Map.copyOf(args);\n    String version = get(args, LUCENE_MATCH_VERSION_PARAM);\n    if (version == null) {\n      luceneMatchVersion = Version.LATEST;\n    } else {\n      try {\n        luceneMatchVersion = Version.parseLeniently(version);\n      } catch (ParseException pe) {\n        throw new IllegalArgumentException(pe);\n      }\n    }\n    args.remove(CLASS_NAME);  // consume the class arg\n    args.remove(SPI_NAME);    // consume the spi arg\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["9b4b4d68085809ae840a099e4620e5a128509279"],"2c24804758d67429e3055070a9fe970d4f159954":["fd2b7ad87a1172d1d06dc8491991e52534c90f71"],"dcae30df9fe9300569835aef42ec65802c7c0afb":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["2c24804758d67429e3055070a9fe970d4f159954"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b4b4d68085809ae840a099e4620e5a128509279":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"623b5245fbd9d5af9f458826ba9ed3d6212db24d":["46ff533a28b45377dffc601931e60e19492e6384"],"46ff533a28b45377dffc601931e60e19492e6384":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fd2b7ad87a1172d1d06dc8491991e52534c90f71":["623b5245fbd9d5af9f458826ba9ed3d6212db24d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["46ff533a28b45377dffc601931e60e19492e6384"],"2c24804758d67429e3055070a9fe970d4f159954":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"dcae30df9fe9300569835aef42ec65802c7c0afb":["9b4b4d68085809ae840a099e4620e5a128509279"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"9b4b4d68085809ae840a099e4620e5a128509279":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"623b5245fbd9d5af9f458826ba9ed3d6212db24d":["fd2b7ad87a1172d1d06dc8491991e52534c90f71"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"46ff533a28b45377dffc601931e60e19492e6384":["623b5245fbd9d5af9f458826ba9ed3d6212db24d"],"fd2b7ad87a1172d1d06dc8491991e52534c90f71":["2c24804758d67429e3055070a9fe970d4f159954"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}