{"path":"lucene/src/java/org/apache/lucene/store/FSDirectory#setLockFactory(LockFactory).mjava","commits":[{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#setLockFactory(LockFactory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setLockFactory(LockFactory lockFactory) throws IOException {\n    super.setLockFactory(lockFactory);\n\n    // for filesystem based LockFactory, delete the lockPrefix, if the locks are placed\n    // in index dir. If no index dir is given, set ourselves\n    if (lockFactory instanceof FSLockFactory) {\n      final FSLockFactory lf = (FSLockFactory) lockFactory;\n      final File dir = lf.getLockDir();\n      // if the lock factory has no lockDir set, use the this directory as lockDir\n      if (dir == null) {\n        lf.setLockDir(directory);\n        lf.setLockPrefix(null);\n      } else if (dir.getCanonicalPath().equals(directory.getCanonicalPath())) {\n        lf.setLockPrefix(null);\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#setLockFactory(LockFactory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setLockFactory(LockFactory lockFactory) throws IOException {\n    super.setLockFactory(lockFactory);\n\n    // for filesystem based LockFactory, delete the lockPrefix, if the locks are placed\n    // in index dir. If no index dir is given, set ourselves\n    if (lockFactory instanceof FSLockFactory) {\n      final FSLockFactory lf = (FSLockFactory) lockFactory;\n      final File dir = lf.getLockDir();\n      // if the lock factory has no lockDir set, use the this directory as lockDir\n      if (dir == null) {\n        lf.setLockDir(directory);\n        lf.setLockPrefix(null);\n      } else if (dir.getCanonicalPath().equals(directory.getCanonicalPath())) {\n        lf.setLockPrefix(null);\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#setLockFactory(LockFactory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setLockFactory(LockFactory lockFactory) throws IOException {\n    super.setLockFactory(lockFactory);\n\n    // for filesystem based LockFactory, delete the lockPrefix, if the locks are placed\n    // in index dir. If no index dir is given, set ourselves\n    if (lockFactory instanceof FSLockFactory) {\n      final FSLockFactory lf = (FSLockFactory) lockFactory;\n      final File dir = lf.getLockDir();\n      // if the lock factory has no lockDir set, use the this directory as lockDir\n      if (dir == null) {\n        lf.setLockDir(directory);\n        lf.setLockPrefix(null);\n      } else if (dir.getCanonicalPath().equals(directory.getCanonicalPath())) {\n        lf.setLockPrefix(null);\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#setLockFactory(LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#setLockFactory(LockFactory).mjava","sourceNew":"  @Override\n  public void setLockFactory(LockFactory lockFactory) throws IOException {\n    super.setLockFactory(lockFactory);\n\n    // for filesystem based LockFactory, delete the lockPrefix, if the locks are placed\n    // in index dir. If no index dir is given, set ourselves\n    if (lockFactory instanceof FSLockFactory) {\n      final FSLockFactory lf = (FSLockFactory) lockFactory;\n      final File dir = lf.getLockDir();\n      // if the lock factory has no lockDir set, use the this directory as lockDir\n      if (dir == null) {\n        lf.setLockDir(directory);\n        lf.setLockPrefix(null);\n      } else if (dir.getCanonicalPath().equals(directory.getCanonicalPath())) {\n        lf.setLockPrefix(null);\n      }\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void setLockFactory(LockFactory lockFactory) throws IOException {\n    super.setLockFactory(lockFactory);\n\n    // for filesystem based LockFactory, delete the lockPrefix, if the locks are placed\n    // in index dir. If no index dir is given, set ourselves\n    if (lockFactory instanceof FSLockFactory) {\n      final FSLockFactory lf = (FSLockFactory) lockFactory;\n      final File dir = lf.getLockDir();\n      // if the lock factory has no lockDir set, use the this directory as lockDir\n      if (dir == null) {\n        lf.setLockDir(directory);\n        lf.setLockPrefix(null);\n      } else if (dir.getCanonicalPath().equals(directory.getCanonicalPath())) {\n        lf.setLockPrefix(null);\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}