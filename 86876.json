{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#tryApply(FrozenBufferedUpdates).mjava","commits":[{"id":"9f21f1920c232db2352489eed260fe5c1f39e5a0","date":1587748041,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#tryApply(FrozenBufferedUpdates).mjava","pathOld":"/dev/null","sourceNew":"// FrozenBufferedUpdates\n  /**\n   * Translates a frozen packet of delete term/query, or doc values\n   * updates, into their actual docIDs in the index, and applies the change.  This is a heavy\n   * operation and is done concurrently by incoming indexing threads.\n   * This method will return immediately without blocking if another thread is currently\n   * applying the package. In order to ensure the packet has been applied,\n   * {@link IndexWriter#forceApply(FrozenBufferedUpdates)} must be called.\n   */\n  @SuppressWarnings(\"try\")\n  boolean tryApply(FrozenBufferedUpdates updates) throws IOException {\n    if (updates.tryLock()) {\n      try {\n        forceApply(updates);\n        return true;\n      } finally {\n        updates.unlock();\n      }\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2","date":1588002560,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#tryApply(FrozenBufferedUpdates).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#tryApply(FrozenBufferedUpdates).mjava","sourceNew":"// FrozenBufferedUpdates\n  /**\n   * Translates a frozen packet of delete term/query, or doc values\n   * updates, into their actual docIDs in the index, and applies the change.  This is a heavy\n   * operation and is done concurrently by incoming indexing threads.\n   * This method will return immediately without blocking if another thread is currently\n   * applying the package. In order to ensure the packet has been applied,\n   * {@link IndexWriter#forceApply(FrozenBufferedUpdates)} must be called.\n   */\n  @SuppressWarnings(\"try\")\n  final boolean tryApply(FrozenBufferedUpdates updates) throws IOException {\n    if (updates.tryLock()) {\n      try {\n        forceApply(updates);\n        return true;\n      } finally {\n        updates.unlock();\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"// FrozenBufferedUpdates\n  /**\n   * Translates a frozen packet of delete term/query, or doc values\n   * updates, into their actual docIDs in the index, and applies the change.  This is a heavy\n   * operation and is done concurrently by incoming indexing threads.\n   * This method will return immediately without blocking if another thread is currently\n   * applying the package. In order to ensure the packet has been applied,\n   * {@link IndexWriter#forceApply(FrozenBufferedUpdates)} must be called.\n   */\n  @SuppressWarnings(\"try\")\n  boolean tryApply(FrozenBufferedUpdates updates) throws IOException {\n    if (updates.tryLock()) {\n      try {\n        forceApply(updates);\n        return true;\n      } finally {\n        updates.unlock();\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f21f1920c232db2352489eed260fe5c1f39e5a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["9f21f1920c232db2352489eed260fe5c1f39e5a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"]},"commit2Childs":{"9f21f1920c232db2352489eed260fe5c1f39e5a0":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f21f1920c232db2352489eed260fe5c1f39e5a0"],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}