{"path":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery.CustomMulAddQuery#customScore(int,float,float[]).mjava","commits":[{"id":"89fe79450a321df64750e98df6442d2c4d30da52","date":1197527307,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery.CustomMulAddQuery#customScore(int,float,float[]).mjava","pathOld":"/dev/null","sourceNew":"    /*(non-Javadoc) @see org.apache.lucene.search.function.CustomScoreQuery#customScore(int, float, float) */\n    public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n      if (valSrcScores.length == 0) {\n        return subQueryScore;\n      }\n      if (valSrcScores.length == 1) {\n        return subQueryScore + valSrcScores[0];\n      }\n      return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery.CustomMulAddQuery#customScore(int,float,float[]).mjava","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery.CustomMulAddQuery#customScore(int,float,float[]).mjava","sourceNew":"    /*(non-Javadoc) @see org.apache.lucene.search.function.CustomScoreQuery#customScore(int, float, float) */\n    @Override\n    public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n      if (valSrcScores.length == 0) {\n        return subQueryScore;\n      }\n      if (valSrcScores.length == 1) {\n        return subQueryScore + valSrcScores[0];\n      }\n      return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n    } \n\n","sourceOld":"    /*(non-Javadoc) @see org.apache.lucene.search.function.CustomScoreQuery#customScore(int, float, float) */\n    public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n      if (valSrcScores.length == 0) {\n        return subQueryScore;\n      }\n      if (valSrcScores.length == 1) {\n        return subQueryScore + valSrcScores[0];\n      }\n      return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"777b7ef341decfee8757f492d8a154637cd7a384","date":1260037647,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery.CustomMulAddQuery#customScore(int,float,float[]).mjava","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery.CustomMulAddQuery#customScore(int,float,float[]).mjava","sourceNew":"    /*(non-Javadoc) @see org.apache.lucene.search.function.CustomScoreQuery#customScore(int, float, float) */\n    @Override\n    public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n      if (valSrcScores.length == 0) {\n        return subQueryScore;\n      }\n      if (valSrcScores.length == 1) {\n        return subQueryScore + valSrcScores[0];\n      }\n      return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n    }\n\n","sourceOld":"    /*(non-Javadoc) @see org.apache.lucene.search.function.CustomScoreQuery#customScore(int, float, float) */\n    @Override\n    public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n      if (valSrcScores.length == 0) {\n        return subQueryScore;\n      }\n      if (valSrcScores.length == 1) {\n        return subQueryScore + valSrcScores[0];\n      }\n      return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5d8d97303550346f85fd577f90d64cf196cebd1","date":1262890343,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery.CustomMulAddQuery#customScore(int,float,float[]).mjava","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery.CustomMulAddQuery#customScore(int,float,float[]).mjava","sourceNew":"    /*(non-Javadoc) @see org.apache.lucene.search.function.CustomScoreQuery#customScore(int, float, float) */\n    @Override\n    public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n      if (valSrcScores.length == 0) {\n        return subQueryScore;\n      }\n      if (valSrcScores.length == 1) {\n        return subQueryScore + valSrcScores[0];\n        // confirm that skipping beyond the last doc, on the\n        // previous reader, hits NO_MORE_DOCS\n      }\n      return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n    }\n\n","sourceOld":"    /*(non-Javadoc) @see org.apache.lucene.search.function.CustomScoreQuery#customScore(int, float, float) */\n    @Override\n    public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n      if (valSrcScores.length == 0) {\n        return subQueryScore;\n      }\n      if (valSrcScores.length == 1) {\n        return subQueryScore + valSrcScores[0];\n      }\n      return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"affefdda19991b74568e601456baad0c8e5c2f65","date":1266776825,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery.CustomMulAddQuery#customScore(int,float,float[]).mjava","sourceNew":null,"sourceOld":"    /*(non-Javadoc) @see org.apache.lucene.search.function.CustomScoreQuery#customScore(int, float, float) */\n    @Override\n    public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n      if (valSrcScores.length == 0) {\n        return subQueryScore;\n      }\n      if (valSrcScores.length == 1) {\n        return subQueryScore + valSrcScores[0];\n        // confirm that skipping beyond the last doc, on the\n        // previous reader, hits NO_MORE_DOCS\n      }\n      return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["89fe79450a321df64750e98df6442d2c4d30da52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"affefdda19991b74568e601456baad0c8e5c2f65":["f5d8d97303550346f85fd577f90d64cf196cebd1"],"777b7ef341decfee8757f492d8a154637cd7a384":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"89fe79450a321df64750e98df6442d2c4d30da52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f5d8d97303550346f85fd577f90d64cf196cebd1":["777b7ef341decfee8757f492d8a154637cd7a384"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["affefdda19991b74568e601456baad0c8e5c2f65"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["777b7ef341decfee8757f492d8a154637cd7a384"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89fe79450a321df64750e98df6442d2c4d30da52"],"89fe79450a321df64750e98df6442d2c4d30da52":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"affefdda19991b74568e601456baad0c8e5c2f65":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"777b7ef341decfee8757f492d8a154637cd7a384":["f5d8d97303550346f85fd577f90d64cf196cebd1"],"f5d8d97303550346f85fd577f90d64cf196cebd1":["affefdda19991b74568e601456baad0c8e5c2f65"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}