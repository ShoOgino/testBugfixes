{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","commits":[{"id":"8a093d23e938d132b81b5f2de3d6b168afe3608e","date":1455076308,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLon, final double minLat, final double maxLon, final double maxLat) {\n      return GeoRelationUtils.rectCrossesPolyApprox(minLon, minLat, maxLon, maxLat, polygonQuery.x, polygonQuery.y,\n          polygonQuery.minLon, polygonQuery.minLat, polygonQuery.maxLon, polygonQuery.maxLat);\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLon, final double minLat, final double maxLon, final double maxLat) {\n      return GeoRelationUtils.rectCrossesPolyApprox(minLon, minLat, maxLon, maxLat, polygonQuery.x, polygonQuery.y,\n          polygonQuery.minLon, polygonQuery.minLat, polygonQuery.maxLon, polygonQuery.maxLat);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return GeoRelationUtils.rectCrossesPolyApprox(minLat, maxLat, minLon, maxLon, polygonQuery.polyLats, polygonQuery.polyLons,\n                                                    polygonQuery.minLat, polygonQuery.maxLat, polygonQuery.minLon, polygonQuery.maxLon);\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLon, final double minLat, final double maxLon, final double maxLat) {\n      return GeoRelationUtils.rectCrossesPolyApprox(minLon, minLat, maxLon, maxLat, polygonQuery.x, polygonQuery.y,\n          polygonQuery.minLon, polygonQuery.minLat, polygonQuery.maxLon, polygonQuery.maxLat);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95ddcac9ac08381985af6eac8f8b77ba881d4ad8","date":1459477726,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return Polygon.crosses(polygons, minLat, maxLat, minLon, maxLon);\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return GeoRelationUtils.rectCrossesPolyApprox(minLat, maxLat, minLon, maxLon, polygonQuery.polyLats, polygonQuery.polyLons,\n                                                    polygonQuery.minLat, polygonQuery.maxLat, polygonQuery.minLon, polygonQuery.maxLon);\n    }\n\n","bugFix":null,"bugIntro":["82235a501cff963da53cb98d86009e33e15cf47f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"82235a501cff963da53cb98d86009e33e15cf47f","date":1459788663,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return Polygon.relate(polygons, minLat, maxLat, minLon, maxLon) == Relation.CELL_CROSSES_QUERY;\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return Polygon.crosses(polygons, minLat, maxLat, minLon, maxLon);\n    }\n\n","bugFix":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"],"bugIntro":["925fce43f3bac029d912b9b7de03c789e258a333"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"09af2c9610ce53a4b25fd99344299b40318a4a1a","date":1459876565,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return Polygon.relate(polygons, minLat, maxLat, minLon, maxLon) == Relation.CELL_CROSSES_QUERY;\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return Polygon.crosses(polygons, minLat, maxLat, minLon, maxLon);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"925fce43f3bac029d912b9b7de03c789e258a333","date":1461612714,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return polygons.relate(minLat, maxLat, minLon, maxLon) == Relation.CELL_CROSSES_QUERY;\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return Polygon.relate(polygons, minLat, maxLat, minLon, maxLon) == Relation.CELL_CROSSES_QUERY;\n    }\n\n","bugFix":["82235a501cff963da53cb98d86009e33e15cf47f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return polygons.relate(minLat, maxLat, minLon, maxLon) == Relation.CELL_CROSSES_QUERY;\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return Polygon.relate(polygons, minLat, maxLat, minLon, maxLon) == Relation.CELL_CROSSES_QUERY;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a62e86d7b9cc6dec3c09f771166aa2393fd95c99","date":1466437108,"type":4,"author":"Nicholas Knize","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return polygons.relate(minLat, maxLat, minLon, maxLon) == Relation.CELL_CROSSES_QUERY;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6aaba221b22442bdf0ef28770c25fe259dfb3f55","date":1466496193,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return polygons.relate(minLat, maxLat, minLon, maxLon) == Relation.CELL_CROSSES_QUERY;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInPolygonQueryImpl.GeoPolygonCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return polygons.relate(minLat, maxLat, minLon, maxLon) == Relation.CELL_CROSSES_QUERY;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"95ddcac9ac08381985af6eac8f8b77ba881d4ad8":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"82235a501cff963da53cb98d86009e33e15cf47f":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"],"a62e86d7b9cc6dec3c09f771166aa2393fd95c99":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8","82235a501cff963da53cb98d86009e33e15cf47f"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","a62e86d7b9cc6dec3c09f771166aa2393fd95c99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["82235a501cff963da53cb98d86009e33e15cf47f","925fce43f3bac029d912b9b7de03c789e258a333"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"925fce43f3bac029d912b9b7de03c789e258a333":["82235a501cff963da53cb98d86009e33e15cf47f"]},"commit2Childs":{"95ddcac9ac08381985af6eac8f8b77ba881d4ad8":["82235a501cff963da53cb98d86009e33e15cf47f","09af2c9610ce53a4b25fd99344299b40318a4a1a"],"82235a501cff963da53cb98d86009e33e15cf47f":["09af2c9610ce53a4b25fd99344299b40318a4a1a","f7f901826e47f75f810d7aae24b0455d21ea1fe2","925fce43f3bac029d912b9b7de03c789e258a333"],"a62e86d7b9cc6dec3c09f771166aa2393fd95c99":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":[],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"],"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["a62e86d7b9cc6dec3c09f771166aa2393fd95c99","6aaba221b22442bdf0ef28770c25fe259dfb3f55","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"925fce43f3bac029d912b9b7de03c789e258a333":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09af2c9610ce53a4b25fd99344299b40318a4a1a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}