{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41BinaryDocValues.Factory#getInMemory().mjava","commits":[{"id":"ede45a461a2dcb573505ed9b6a5182dfebd3688f","date":1353338494,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41BinaryDocValues.Factory#getInMemory().mjava","pathOld":"/dev/null","sourceNew":"    public BinaryDocValues getInMemory() throws IOException {\n      // nocommit simple in memory impl\n      PackedInts.Reader indexReader = indexHeader == null ? null : PackedInts\n          .getReaderNoHeader(indexIn.clone(), indexHeader);\n      PagedBytes bytes = new PagedBytes(15);\n      bytes.copy(datIn.clone(), indexReader == null ? size * valueCount\n          : indexReader.get(indexReader.size() - 1));\n      bytes.freeze(true);\n      return new Lucene41BinaryDocValues(bytes.getDataInput(), 0, size,\n          maxLength, indexReader);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"340d84be22eb83faa30ac0cbbaa6db6ae6500709","date":1353346410,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41BinaryDocValues.Factory#getInMemory().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41BinaryDocValues.Factory#getInMemory().mjava","sourceNew":"    public BinaryDocValues getInMemory() throws IOException {\n      // nocommit simple in memory impl\n      PackedInts.Reader indexReader = indexHeader == null ? null : PackedInts\n          .getReaderNoHeader(indexIn.clone(), indexHeader);\n      PagedBytes bytes = new PagedBytes(15);\n      bytes.copy(datIn.clone(), indexReader == null ? size * valueCount\n          : indexReader.get(indexReader.size() - 1));\n      bytes.freeze(true);\n      return new Lucene41BinaryDocValues(bytes.getDataInput(), 0, size,\n          maxLength, indexReader, null);\n    }\n\n","sourceOld":"    public BinaryDocValues getInMemory() throws IOException {\n      // nocommit simple in memory impl\n      PackedInts.Reader indexReader = indexHeader == null ? null : PackedInts\n          .getReaderNoHeader(indexIn.clone(), indexHeader);\n      PagedBytes bytes = new PagedBytes(15);\n      bytes.copy(datIn.clone(), indexReader == null ? size * valueCount\n          : indexReader.get(indexReader.size() - 1));\n      bytes.freeze(true);\n      return new Lucene41BinaryDocValues(bytes.getDataInput(), 0, size,\n          maxLength, indexReader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"746e3645169db50c8f53252b30d6bc9ac21dea7c","date":1357597773,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41BinaryDocValues.Factory#getInMemory().mjava","sourceNew":null,"sourceOld":"    public BinaryDocValues getInMemory() throws IOException {\n      // nocommit simple in memory impl\n      PackedInts.Reader indexReader = indexHeader == null ? null : PackedInts\n          .getReaderNoHeader(indexIn.clone(), indexHeader);\n      PagedBytes bytes = new PagedBytes(15);\n      bytes.copy(datIn.clone(), indexReader == null ? size * valueCount\n          : indexReader.get(indexReader.size() - 1));\n      bytes.freeze(true);\n      return new Lucene41BinaryDocValues(bytes.getDataInput(), 0, size,\n          maxLength, indexReader, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"746e3645169db50c8f53252b30d6bc9ac21dea7c":["340d84be22eb83faa30ac0cbbaa6db6ae6500709"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"340d84be22eb83faa30ac0cbbaa6db6ae6500709":["ede45a461a2dcb573505ed9b6a5182dfebd3688f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["340d84be22eb83faa30ac0cbbaa6db6ae6500709"],"746e3645169db50c8f53252b30d6bc9ac21dea7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ede45a461a2dcb573505ed9b6a5182dfebd3688f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"340d84be22eb83faa30ac0cbbaa6db6ae6500709":["746e3645169db50c8f53252b30d6bc9ac21dea7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["746e3645169db50c8f53252b30d6bc9ac21dea7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}