{"path":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookup(String,boolean,int).mjava","commits":[{"id":"bede0ec3497c48e70d55196c5065d97a4bc1db3d","date":1329668585,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookup(String,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public List<LookupResult> lookup(String key, boolean onlyMorePopular, int num) {\n    assert num > 0;\n    BytesRef scratch = new BytesRef(key);\n    int prefixLength = scratch.length;\n    Arc<Long> arc = new Arc<Long>();\n    \n    // match the prefix portion exactly\n    Long prefixOutput = null;\n    try {\n      prefixOutput = lookupPrefix(scratch, arc);\n    } catch (IOException bogus) { throw new RuntimeException(bogus); }\n    \n    if (prefixOutput == null) {\n      return Collections.<LookupResult>emptyList();\n    }\n    \n    List<LookupResult> results = new ArrayList<LookupResult>(num);\n    if (exactFirst && arc.isFinal()) {\n      results.add(new LookupResult(scratch.utf8ToString(), decodeWeight(prefixOutput + arc.nextFinalOutput)));\n      if (--num == 0) {\n        return results; // that was quick\n      }\n    }\n    \n    // complete top-N\n    MinResult completions[] = null;\n    try {\n      completions = Util.shortestPaths(fst, arc, num);\n    } catch (IOException bogus) { throw new RuntimeException(bogus); }\n    \n    BytesRef suffix = new BytesRef(8);\n    for (MinResult completion : completions) {\n      scratch.length = prefixLength;\n      // append suffix\n      Util.toBytesRef(completion.input, suffix);\n      scratch.append(suffix);\n\n      results.add(new LookupResult(scratch.utf8ToString(), decodeWeight(prefixOutput + completion.output)));\n    }\n    return results;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6ecc52400551de6a7d8daf646be839487911627c","date":1330076979,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookup(CharSequence,boolean,int).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookup(String,boolean,int).mjava","sourceNew":"  @Override\n  public List<LookupResult> lookup(CharSequence key, boolean onlyMorePopular, int num) {\n    assert num > 0;\n    BytesRef scratch = new BytesRef(key);\n    int prefixLength = scratch.length;\n    Arc<Long> arc = new Arc<Long>();\n    \n    // match the prefix portion exactly\n    Long prefixOutput = null;\n    try {\n      prefixOutput = lookupPrefix(scratch, arc);\n    } catch (IOException bogus) { throw new RuntimeException(bogus); }\n    \n    if (prefixOutput == null) {\n      return Collections.<LookupResult>emptyList();\n    }\n    \n    List<LookupResult> results = new ArrayList<LookupResult>(num);\n    CharsRef spare = new CharsRef();\n    if (exactFirst && arc.isFinal()) {\n      spare.grow(scratch.length);\n      UnicodeUtil.UTF8toUTF16(scratch, spare);\n      results.add(new LookupResult(spare.toString(), decodeWeight(prefixOutput + arc.nextFinalOutput)));\n      if (--num == 0) {\n        return results; // that was quick\n      }\n    }\n    \n    // complete top-N\n    MinResult completions[] = null;\n    try {\n      completions = Util.shortestPaths(fst, arc, num);\n    } catch (IOException bogus) { throw new RuntimeException(bogus); }\n    \n    BytesRef suffix = new BytesRef(8);\n    for (MinResult completion : completions) {\n      scratch.length = prefixLength;\n      // append suffix\n      Util.toBytesRef(completion.input, suffix);\n      scratch.append(suffix);\n      spare.grow(scratch.length);\n      UnicodeUtil.UTF8toUTF16(scratch, spare);\n      results.add(new LookupResult(spare.toString(), decodeWeight(prefixOutput + completion.output)));\n    }\n    return results;\n  }\n\n","sourceOld":"  @Override\n  public List<LookupResult> lookup(String key, boolean onlyMorePopular, int num) {\n    assert num > 0;\n    BytesRef scratch = new BytesRef(key);\n    int prefixLength = scratch.length;\n    Arc<Long> arc = new Arc<Long>();\n    \n    // match the prefix portion exactly\n    Long prefixOutput = null;\n    try {\n      prefixOutput = lookupPrefix(scratch, arc);\n    } catch (IOException bogus) { throw new RuntimeException(bogus); }\n    \n    if (prefixOutput == null) {\n      return Collections.<LookupResult>emptyList();\n    }\n    \n    List<LookupResult> results = new ArrayList<LookupResult>(num);\n    if (exactFirst && arc.isFinal()) {\n      results.add(new LookupResult(scratch.utf8ToString(), decodeWeight(prefixOutput + arc.nextFinalOutput)));\n      if (--num == 0) {\n        return results; // that was quick\n      }\n    }\n    \n    // complete top-N\n    MinResult completions[] = null;\n    try {\n      completions = Util.shortestPaths(fst, arc, num);\n    } catch (IOException bogus) { throw new RuntimeException(bogus); }\n    \n    BytesRef suffix = new BytesRef(8);\n    for (MinResult completion : completions) {\n      scratch.length = prefixLength;\n      // append suffix\n      Util.toBytesRef(completion.input, suffix);\n      scratch.append(suffix);\n\n      results.add(new LookupResult(scratch.utf8ToString(), decodeWeight(prefixOutput + completion.output)));\n    }\n    return results;\n  }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup#lookup(String,boolean,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public List<LookupResult> lookup(String key, boolean onlyMorePopular, int num) {\n    assert num > 0;\n    BytesRef scratch = new BytesRef(key);\n    int prefixLength = scratch.length;\n    Arc<Long> arc = new Arc<Long>();\n    \n    // match the prefix portion exactly\n    Long prefixOutput = null;\n    try {\n      prefixOutput = lookupPrefix(scratch, arc);\n    } catch (IOException bogus) { throw new RuntimeException(bogus); }\n    \n    if (prefixOutput == null) {\n      return Collections.<LookupResult>emptyList();\n    }\n    \n    List<LookupResult> results = new ArrayList<LookupResult>(num);\n    if (exactFirst && arc.isFinal()) {\n      results.add(new LookupResult(scratch.utf8ToString(), decodeWeight(prefixOutput + arc.nextFinalOutput)));\n      if (--num == 0) {\n        return results; // that was quick\n      }\n    }\n    \n    // complete top-N\n    MinResult completions[] = null;\n    try {\n      completions = Util.shortestPaths(fst, arc, num);\n    } catch (IOException bogus) { throw new RuntimeException(bogus); }\n    \n    BytesRef suffix = new BytesRef(8);\n    for (MinResult completion : completions) {\n      scratch.length = prefixLength;\n      // append suffix\n      Util.toBytesRef(completion.input, suffix);\n      scratch.append(suffix);\n\n      results.add(new LookupResult(scratch.utf8ToString(), decodeWeight(prefixOutput + completion.output)));\n    }\n    return results;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["bede0ec3497c48e70d55196c5065d97a4bc1db3d","6ecc52400551de6a7d8daf646be839487911627c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ecc52400551de6a7d8daf646be839487911627c":["bede0ec3497c48e70d55196c5065d97a4bc1db3d"],"bede0ec3497c48e70d55196c5065d97a4bc1db3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6ecc52400551de6a7d8daf646be839487911627c"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bede0ec3497c48e70d55196c5065d97a4bc1db3d"],"6ecc52400551de6a7d8daf646be839487911627c":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bede0ec3497c48e70d55196c5065d97a4bc1db3d":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","6ecc52400551de6a7d8daf646be839487911627c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}