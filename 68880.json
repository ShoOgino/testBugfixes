{"path":"solr/core/src/test/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessorTest#getLeaderCoreNames(ClusterState).mjava","commits":[{"id":"60b45f127b5537b5bf62181784ef28b52f4b6a08","date":1529595959,"type":0,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessorTest#getLeaderCoreNames(ClusterState).mjava","pathOld":"/dev/null","sourceNew":"  private Set<String> getLeaderCoreNames(ClusterState clusterState) {\n    Set<String> leaders = new TreeSet<>(); // sorted just to make it easier to read when debugging...\n    List<JettySolrRunner> jettySolrRunners = cluster.getJettySolrRunners();\n    for (JettySolrRunner jettySolrRunner : jettySolrRunners) {\n      List<CoreDescriptor> coreDescriptors = jettySolrRunner.getCoreContainer().getCoreDescriptors();\n      for (CoreDescriptor core : coreDescriptors) {\n        String nodeName = jettySolrRunner.getNodeName();\n        String collectionName = core.getCollectionName();\n        DocCollection collectionOrNull = clusterState.getCollectionOrNull(collectionName);\n        List<Replica> leaderReplicas = collectionOrNull.getLeaderReplicas(nodeName);\n        if (leaderReplicas != null) {\n          for (Replica leaderReplica : leaderReplicas) {\n            leaders.add(leaderReplica.getCoreName());\n          }\n        }\n      }\n    }\n    return leaders;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessorTest#getLeaderCoreNames(ClusterState).mjava","pathOld":"/dev/null","sourceNew":"  private Set<String> getLeaderCoreNames(ClusterState clusterState) {\n    Set<String> leaders = new TreeSet<>(); // sorted just to make it easier to read when debugging...\n    List<JettySolrRunner> jettySolrRunners = cluster.getJettySolrRunners();\n    for (JettySolrRunner jettySolrRunner : jettySolrRunners) {\n      List<CoreDescriptor> coreDescriptors = jettySolrRunner.getCoreContainer().getCoreDescriptors();\n      for (CoreDescriptor core : coreDescriptors) {\n        String nodeName = jettySolrRunner.getNodeName();\n        String collectionName = core.getCollectionName();\n        DocCollection collectionOrNull = clusterState.getCollectionOrNull(collectionName);\n        List<Replica> leaderReplicas = collectionOrNull.getLeaderReplicas(nodeName);\n        if (leaderReplicas != null) {\n          for (Replica leaderReplica : leaderReplicas) {\n            leaders.add(leaderReplica.getCoreName());\n          }\n        }\n      }\n    }\n    return leaders;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessorTest#getLeaderCoreNames(ClusterState).mjava","pathOld":"/dev/null","sourceNew":"  private Set<String> getLeaderCoreNames(ClusterState clusterState) {\n    Set<String> leaders = new TreeSet<>(); // sorted just to make it easier to read when debugging...\n    List<JettySolrRunner> jettySolrRunners = cluster.getJettySolrRunners();\n    for (JettySolrRunner jettySolrRunner : jettySolrRunners) {\n      List<CoreDescriptor> coreDescriptors = jettySolrRunner.getCoreContainer().getCoreDescriptors();\n      for (CoreDescriptor core : coreDescriptors) {\n        String nodeName = jettySolrRunner.getNodeName();\n        String collectionName = core.getCollectionName();\n        DocCollection collectionOrNull = clusterState.getCollectionOrNull(collectionName);\n        List<Replica> leaderReplicas = collectionOrNull.getLeaderReplicas(nodeName);\n        if (leaderReplicas != null) {\n          for (Replica leaderReplica : leaderReplicas) {\n            leaders.add(leaderReplica.getCoreName());\n          }\n        }\n      }\n    }\n    return leaders;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b627755385655c7cd3fb296f17593658805cf4d5","date":1552455143,"type":5,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/RoutedAliasUpdateProcessorTest#getLeaderCoreNames(ClusterState).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessorTest#getLeaderCoreNames(ClusterState).mjava","sourceNew":"  @SuppressWarnings(\"WeakerAccess\")\n  Set<String> getLeaderCoreNames(ClusterState clusterState) {\n    Set<String> leaders = new TreeSet<>(); // sorted just to make it easier to read when debugging...\n    List<JettySolrRunner> jettySolrRunners = cluster.getJettySolrRunners();\n    for (JettySolrRunner jettySolrRunner : jettySolrRunners) {\n      List<CoreDescriptor> coreDescriptors = jettySolrRunner.getCoreContainer().getCoreDescriptors();\n      for (CoreDescriptor core : coreDescriptors) {\n        String nodeName = jettySolrRunner.getNodeName();\n        String collectionName = core.getCollectionName();\n        DocCollection collectionOrNull = clusterState.getCollectionOrNull(collectionName);\n        List<Replica> leaderReplicas = collectionOrNull.getLeaderReplicas(nodeName);\n        if (leaderReplicas != null) {\n          for (Replica leaderReplica : leaderReplicas) {\n            leaders.add(leaderReplica.getCoreName());\n          }\n        }\n      }\n    }\n    return leaders;\n  }\n\n","sourceOld":"  private Set<String> getLeaderCoreNames(ClusterState clusterState) {\n    Set<String> leaders = new TreeSet<>(); // sorted just to make it easier to read when debugging...\n    List<JettySolrRunner> jettySolrRunners = cluster.getJettySolrRunners();\n    for (JettySolrRunner jettySolrRunner : jettySolrRunners) {\n      List<CoreDescriptor> coreDescriptors = jettySolrRunner.getCoreContainer().getCoreDescriptors();\n      for (CoreDescriptor core : coreDescriptors) {\n        String nodeName = jettySolrRunner.getNodeName();\n        String collectionName = core.getCollectionName();\n        DocCollection collectionOrNull = clusterState.getCollectionOrNull(collectionName);\n        List<Replica> leaderReplicas = collectionOrNull.getLeaderReplicas(nodeName);\n        if (leaderReplicas != null) {\n          for (Replica leaderReplica : leaderReplicas) {\n            leaders.add(leaderReplica.getCoreName());\n          }\n        }\n      }\n    }\n    return leaders;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","60b45f127b5537b5bf62181784ef28b52f4b6a08"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b627755385655c7cd3fb296f17593658805cf4d5":["60b45f127b5537b5bf62181784ef28b52f4b6a08"],"60b45f127b5537b5bf62181784ef28b52f4b6a08":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b627755385655c7cd3fb296f17593658805cf4d5"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","60b45f127b5537b5bf62181784ef28b52f4b6a08"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","60b45f127b5537b5bf62181784ef28b52f4b6a08","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"b627755385655c7cd3fb296f17593658805cf4d5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"60b45f127b5537b5bf62181784ef28b52f4b6a08":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b627755385655c7cd3fb296f17593658805cf4d5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}