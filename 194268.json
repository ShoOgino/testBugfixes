{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.ChunkIterator#readHeader().mjava","commits":[{"id":"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa","date":1349450075,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.ChunkIterator#readHeader().mjava","pathOld":"/dev/null","sourceNew":"    private int readHeader() throws IOException {\n      final int docBase = fieldsStream.readVInt();\n      final int chunkDocs = fieldsStream.readVInt();\n      final int bitsPerValue = fieldsStream.readVInt();\n      if (docBase < this.docBase + this.chunkDocs\n          || docBase + chunkDocs > numDocs\n          || bitsPerValue > 31) {\n        throw new CorruptIndexException(\"Corrupted: current docBase=\" + this.docBase\n            + \", current numDocs=\" + this.chunkDocs + \", new docBase=\" + docBase\n            + \", new numDocs=\" + chunkDocs + \", bitsPerValue=\" + bitsPerValue);\n      }\n      this.docBase = docBase;\n      this.chunkDocs = chunkDocs;\n      return bitsPerValue;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eba3cb2a268b9fb6f5be011fbaaf698699dcf24c","date":1352305464,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.ChunkIterator#readHeader().mjava","sourceNew":null,"sourceOld":"    private int readHeader() throws IOException {\n      final int docBase = fieldsStream.readVInt();\n      final int chunkDocs = fieldsStream.readVInt();\n      final int bitsPerValue = fieldsStream.readVInt();\n      if (docBase < this.docBase + this.chunkDocs\n          || docBase + chunkDocs > numDocs\n          || bitsPerValue > 31) {\n        throw new CorruptIndexException(\"Corrupted: current docBase=\" + this.docBase\n            + \", current numDocs=\" + this.chunkDocs + \", new docBase=\" + docBase\n            + \", new numDocs=\" + chunkDocs + \", bitsPerValue=\" + bitsPerValue);\n      }\n      this.docBase = docBase;\n      this.chunkDocs = chunkDocs;\n      return bitsPerValue;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eba3cb2a268b9fb6f5be011fbaaf698699dcf24c"],"eba3cb2a268b9fb6f5be011fbaaf698699dcf24c":["7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa"]},"commit2Childs":{"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa":["eba3cb2a268b9fb6f5be011fbaaf698699dcf24c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"eba3cb2a268b9fb6f5be011fbaaf698699dcf24c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}