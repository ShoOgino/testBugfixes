{"path":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","commits":[{"id":"373584a697678349e0fc6099f033230aa1c44e5a","date":1331641391,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(document.toString());\n        } catch (MalformedURLException e) {\n          e.printStackTrace();\n        } catch (URISyntaxException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(document.toString());\n        } catch (MalformedURLException e) {\n          e.printStackTrace();\n        } catch (URISyntaxException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c995021c29891202cd33d8d0f1c68e467b03afd","date":1331967984,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","sourceNew":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(document.toString());\n        } catch (MalformedURLException e) {\n          log.warn(\"cannot get the normalized url for \\\"\" + url + \"\\\" due to \" + e.getMessage());\n        } catch (URISyntaxException e) {\n          log.warn(\"cannot get the normalized url for \\\"\" + url + \"\\\" due to \" + e.getMessage());\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","sourceOld":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(document.toString());\n        } catch (MalformedURLException e) {\n          e.printStackTrace();\n        } catch (URISyntaxException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6e1dc1bb4254226c8d7151b596cc1be40671751","date":1421876355,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","sourceNew":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(document.toString());\n        } catch (MalformedURLException | URISyntaxException e) {\n          log.warn(\"cannot get the normalized url for \\\"\" + url + \"\\\" due to \" + e.getMessage());\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","sourceOld":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(document.toString());\n        } catch (MalformedURLException e) {\n          log.warn(\"cannot get the normalized url for \\\"\" + url + \"\\\" due to \" + e.getMessage());\n        } catch (URISyntaxException e) {\n          log.warn(\"cannot get the normalized url for \\\"\" + url + \"\\\" due to \" + e.getMessage());\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740d649f013f07efbeb73ca854f106c60166e7c0","date":1587431295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","sourceNew":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(\"{}\", document);\n        } catch (MalformedURLException | URISyntaxException e) {\n          if (log.isWarnEnabled()) {\n            log.warn(\"cannot get the normalized url for '{}' due to {}\", url, e.getMessage());\n          }\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","sourceOld":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(document.toString());\n        } catch (MalformedURLException | URISyntaxException e) {\n          log.warn(\"cannot get the normalized url for \\\"\" + url + \"\\\" due to \" + e.getMessage());\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","sourceNew":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(\"{}\", document);\n        } catch (MalformedURLException | URISyntaxException e) {\n          log.warn(\"cannot get the normalized url for '{}' due to {}\", url, e.getMessage());\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","sourceOld":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(\"{}\", document);\n        } catch (MalformedURLException | URISyntaxException e) {\n          if (log.isWarnEnabled()) {\n            log.warn(\"cannot get the normalized url for '{}' due to {}\", url, e.getMessage());\n          }\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c238f5fb83803b49b37b3a1a12224a64d47542","date":1593655679,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#processAdd(AddUpdateCommand).mjava","sourceNew":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(\"{}\", document);\n        } catch (MalformedURLException | URISyntaxException e) {\n          log.warn(\"cannot get the normalized url for '{}' due to \", url, e);\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","sourceOld":"  @Override\n  public void processAdd(AddUpdateCommand command) throws IOException {\n    if (isEnabled()) {\n      SolrInputDocument document = command.getSolrInputDocument();\n      if (document.containsKey(urlFieldname)) {\n        String url = (String) document.getFieldValue(urlFieldname);\n        try {\n          URL normalizedURL = getNormalizedURL(url);\n          document.setField(lengthFieldname, length(normalizedURL));\n          document.setField(levelsFieldname, levels(normalizedURL));\n          document.setField(toplevelpageFieldname, isTopLevelPage(normalizedURL) ? 1 : 0);\n          document.setField(landingpageFieldname, isLandingPage(normalizedURL) ? 1 : 0);\n          if (domainFieldname != null) {\n            document.setField(domainFieldname, normalizedURL.getHost());\n          }\n          if (canonicalUrlFieldname != null) {\n            document.setField(canonicalUrlFieldname, getCanonicalUrl(normalizedURL));\n          }\n          log.debug(\"{}\", document);\n        } catch (MalformedURLException | URISyntaxException e) {\n          log.warn(\"cannot get the normalized url for '{}' due to {}\", url, e.getMessage());\n        }\n      }\n    }\n    super.processAdd(command);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","373584a697678349e0fc6099f033230aa1c44e5a"],"c6e1dc1bb4254226c8d7151b596cc1be40671751":["3c995021c29891202cd33d8d0f1c68e467b03afd"],"740d649f013f07efbeb73ca854f106c60166e7c0":["c6e1dc1bb4254226c8d7151b596cc1be40671751"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57c238f5fb83803b49b37b3a1a12224a64d47542":["575e66bd4b2349209027f6801184da7fc3cba13f"],"373584a697678349e0fc6099f033230aa1c44e5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"575e66bd4b2349209027f6801184da7fc3cba13f":["740d649f013f07efbeb73ca854f106c60166e7c0"],"3c995021c29891202cd33d8d0f1c68e467b03afd":["373584a697678349e0fc6099f033230aa1c44e5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57c238f5fb83803b49b37b3a1a12224a64d47542"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"c6e1dc1bb4254226c8d7151b596cc1be40671751":["740d649f013f07efbeb73ca854f106c60166e7c0"],"740d649f013f07efbeb73ca854f106c60166e7c0":["575e66bd4b2349209027f6801184da7fc3cba13f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","373584a697678349e0fc6099f033230aa1c44e5a"],"373584a697678349e0fc6099f033230aa1c44e5a":["38e3b736c7ca086d61b7dbb841c905ee115490da","3c995021c29891202cd33d8d0f1c68e467b03afd"],"57c238f5fb83803b49b37b3a1a12224a64d47542":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"575e66bd4b2349209027f6801184da7fc3cba13f":["57c238f5fb83803b49b37b3a1a12224a64d47542"],"3c995021c29891202cd33d8d0f1c68e467b03afd":["c6e1dc1bb4254226c8d7151b596cc1be40671751"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}