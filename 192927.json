{"path":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter#test().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter#test().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter#test().mjava","sourceNew":"  public void test() throws IOException {\n\n    PrefixAwareTokenFilter ts;\n\n    ts = new PrefixAwareTokenFilter(\n        new SingleTokenTokenStream(createToken(\"a\", 0, 1)),\n        new SingleTokenTokenStream(createToken(\"b\", 0, 1)));\n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\" },\n        new int[] { 0, 1 },\n        new int[] { 1, 2 });\n\n    // prefix and suffix using 2x prefix\n\n    ts = new PrefixAwareTokenFilter(new SingleTokenTokenStream(createToken(\"^\", 0, 0)),\n        new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"hello world\")));\n    ts = new PrefixAwareTokenFilter(ts, new SingleTokenTokenStream(createToken(\"$\", 0, 0)));\n\n    assertTokenStreamContents(ts,\n        new String[] { \"^\", \"hello\", \"world\", \"$\" },\n        new int[] { 0, 0, 6, 11 },\n        new int[] { 0, 5, 11, 11 });\n  }\n\n","sourceOld":"  public void test() throws IOException {\n\n    PrefixAwareTokenFilter ts;\n\n    ts = new PrefixAwareTokenFilter(\n        new SingleTokenTokenStream(createToken(\"a\", 0, 1)),\n        new SingleTokenTokenStream(createToken(\"b\", 0, 1)));\n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\" },\n        new int[] { 0, 1 },\n        new int[] { 1, 2 });\n\n    // prefix and suffix using 2x prefix\n\n    ts = new PrefixAwareTokenFilter(new SingleTokenTokenStream(createToken(\"^\", 0, 0)),\n        new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"hello world\")));\n    ts = new PrefixAwareTokenFilter(ts, new SingleTokenTokenStream(createToken(\"$\", 0, 0)));\n\n    assertTokenStreamContents(ts,\n        new String[] { \"^\", \"hello\", \"world\", \"$\" },\n        new int[] { 0, 0, 6, 11 },\n        new int[] { 0, 5, 11, 11 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter#test().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter#test().mjava","sourceNew":"  public void test() throws IOException {\n\n    PrefixAwareTokenFilter ts;\n\n    ts = new PrefixAwareTokenFilter(\n        new SingleTokenTokenStream(createToken(\"a\", 0, 1)),\n        new SingleTokenTokenStream(createToken(\"b\", 0, 1)));\n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\" },\n        new int[] { 0, 1 },\n        new int[] { 1, 2 });\n\n    // prefix and suffix using 2x prefix\n\n    ts = new PrefixAwareTokenFilter(new SingleTokenTokenStream(createToken(\"^\", 0, 0)),\n        new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"hello world\")));\n    ts = new PrefixAwareTokenFilter(ts, new SingleTokenTokenStream(createToken(\"$\", 0, 0)));\n\n    assertTokenStreamContents(ts,\n        new String[] { \"^\", \"hello\", \"world\", \"$\" },\n        new int[] { 0, 0, 6, 11 },\n        new int[] { 0, 5, 11, 11 });\n  }\n\n","sourceOld":"  public void test() throws IOException {\n\n    PrefixAwareTokenFilter ts;\n\n    ts = new PrefixAwareTokenFilter(\n        new SingleTokenTokenStream(createToken(\"a\", 0, 1)),\n        new SingleTokenTokenStream(createToken(\"b\", 0, 1)));\n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\" },\n        new int[] { 0, 1 },\n        new int[] { 1, 2 });\n\n    // prefix and suffix using 2x prefix\n\n    ts = new PrefixAwareTokenFilter(new SingleTokenTokenStream(createToken(\"^\", 0, 0)),\n        new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"hello world\")));\n    ts = new PrefixAwareTokenFilter(ts, new SingleTokenTokenStream(createToken(\"$\", 0, 0)));\n\n    assertTokenStreamContents(ts,\n        new String[] { \"^\", \"hello\", \"world\", \"$\" },\n        new int[] { 0, 0, 6, 11 },\n        new int[] { 0, 5, 11, 11 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}