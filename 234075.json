{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","commits":[{"id":"7bbea4ab9855ce025787208602737fdd3119a13e","date":1428427472,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aac61ee5b4492f174e60bd54939aba9539906edf","date":1461245473,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","sourceNew":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25, context -> true));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7732a106554be0db3e03ac5211e46f6e0c285b8","date":1511975378,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","sourceNew":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25, context -> true, random().nextBoolean() ? 1.1f : Float.POSITIVE_INFINITY));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25, context -> true));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1aad05eeff7818b0833c02ac6b743aa72054963b","date":1512093122,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","sourceNew":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25, context -> true, random().nextBoolean() ? 1.1f : Float.POSITIVE_INFINITY));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25, context -> true));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"789fb338d3c53b4478938723d60f6623e764ca38","date":1521535944,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","sourceNew":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25, context -> true));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25, context -> true, random().nextBoolean() ? 1.1f : Float.POSITIVE_INFINITY));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","sourceNew":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25, context -> true));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25, context -> true, random().nextBoolean() ? 1.1f : Float.POSITIVE_INFINITY));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5754bd6f04f13b67e9575f8b226a0303c31c7d5","date":1573506453,"type":3,"author":"ginger","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#overrideDefaultQueryCache().mjava","sourceNew":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25, context -> true, Float.POSITIVE_INFINITY));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void overrideDefaultQueryCache() {\n    // we need to reset the query cache in an @BeforeClass so that tests that\n    // instantiate an IndexSearcher in an @BeforeClass method use a fresh new cache\n    IndexSearcher.setDefaultQueryCache(new LRUQueryCache(10000, 1 << 25, context -> true));\n    IndexSearcher.setDefaultQueryCachingPolicy(MAYBE_CACHE_POLICY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7732a106554be0db3e03ac5211e46f6e0c285b8":["aac61ee5b4492f174e60bd54939aba9539906edf"],"1aad05eeff7818b0833c02ac6b743aa72054963b":["aac61ee5b4492f174e60bd54939aba9539906edf","c7732a106554be0db3e03ac5211e46f6e0c285b8"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["1aad05eeff7818b0833c02ac6b743aa72054963b","789fb338d3c53b4478938723d60f6623e764ca38"],"aac61ee5b4492f174e60bd54939aba9539906edf":["7bbea4ab9855ce025787208602737fdd3119a13e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"789fb338d3c53b4478938723d60f6623e764ca38":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"b5754bd6f04f13b67e9575f8b226a0303c31c7d5":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"7bbea4ab9855ce025787208602737fdd3119a13e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5754bd6f04f13b67e9575f8b226a0303c31c7d5"]},"commit2Childs":{"c7732a106554be0db3e03ac5211e46f6e0c285b8":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"1aad05eeff7818b0833c02ac6b743aa72054963b":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","789fb338d3c53b4478938723d60f6623e764ca38"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["b5754bd6f04f13b67e9575f8b226a0303c31c7d5"],"aac61ee5b4492f174e60bd54939aba9539906edf":["c7732a106554be0db3e03ac5211e46f6e0c285b8","1aad05eeff7818b0833c02ac6b743aa72054963b"],"789fb338d3c53b4478938723d60f6623e764ca38":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7bbea4ab9855ce025787208602737fdd3119a13e"],"b5754bd6f04f13b67e9575f8b226a0303c31c7d5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7bbea4ab9855ce025787208602737fdd3119a13e":["aac61ee5b4492f174e60bd54939aba9539906edf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}