{"path":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest#testSeekExactIgnoreFieldF3().mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest#testSeekExactIgnoreFieldF3().mjava","pathOld":"/dev/null","sourceNew":"  public void testSeekExactIgnoreFieldF3() throws IOException {\n    MockSTBlockReader blockReader = new MockSTBlockReader(\n        supplier,\n        blockLines,\n        directory,\n        fieldInfos.fieldInfo(\"f3\"),//last term \"frienchies\"\n        fieldInfos\n    );\n\n    // when seekCeilIgnoreField\n    blockReader.seekCeilIgnoreField(new BytesRef(\"arco2\"));\n    // then\n    assertEquals(\"bloom\", blockReader.term().utf8ToString());\n\n    // when seekCeil\n    blockReader.seekCeil(new BytesRef(\"arco2\"));\n    // then\n    assertEquals(\"frienchies\", blockReader.term().utf8ToString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bf19e0585c61e03c645ac979e97c192529637d6","date":1591892388,"type":5,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/TestSTBlockReader#testSeekExactIgnoreFieldF3().mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest#testSeekExactIgnoreFieldF3().mjava","sourceNew":"  public void testSeekExactIgnoreFieldF3() throws IOException {\n    MockSTBlockReader blockReader = new MockSTBlockReader(\n        supplier,\n        blockLines,\n        directory,\n        fieldInfos.fieldInfo(\"f3\"),//last term \"frienchies\"\n        fieldInfos\n    );\n\n    // when seekCeilIgnoreField\n    blockReader.seekCeilIgnoreField(new BytesRef(\"arco2\"));\n    // then\n    assertEquals(\"bloom\", blockReader.term().utf8ToString());\n\n    // when seekCeil\n    blockReader.seekCeil(new BytesRef(\"arco2\"));\n    // then\n    assertEquals(\"frienchies\", blockReader.term().utf8ToString());\n  }\n\n","sourceOld":"  public void testSeekExactIgnoreFieldF3() throws IOException {\n    MockSTBlockReader blockReader = new MockSTBlockReader(\n        supplier,\n        blockLines,\n        directory,\n        fieldInfos.fieldInfo(\"f3\"),//last term \"frienchies\"\n        fieldInfos\n    );\n\n    // when seekCeilIgnoreField\n    blockReader.seekCeilIgnoreField(new BytesRef(\"arco2\"));\n    // then\n    assertEquals(\"bloom\", blockReader.term().utf8ToString());\n\n    // when seekCeil\n    blockReader.seekCeil(new BytesRef(\"arco2\"));\n    // then\n    assertEquals(\"frienchies\", blockReader.term().utf8ToString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5bf19e0585c61e03c645ac979e97c192529637d6":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5bf19e0585c61e03c645ac979e97c192529637d6"]},"commit2Childs":{"5bf19e0585c61e03c645ac979e97c192529637d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["5bf19e0585c61e03c645ac979e97c192529637d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}