{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer#fastestFormatAndBits(int).mjava","commits":[{"id":"bc8f80fee115148a0e4a0574560be06b494de821","date":1412069872,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer#fastestFormatAndBits(int).mjava","pathOld":"/dev/null","sourceNew":"  private FormatAndBits fastestFormatAndBits(int max) {\n    // we only use bpv=1,2,4,8     \n    PackedInts.Format format = PackedInts.Format.PACKED_SINGLE_BLOCK;\n    int bitsPerValue = PackedInts.bitsRequired(max);\n    if (bitsPerValue == 3) {\n      bitsPerValue = 4;\n    } else if (bitsPerValue > 4) {\n      bitsPerValue = 8;\n    }\n    return new FormatAndBits(format, bitsPerValue);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer#fastestFormatAndBits(int).mjava","pathOld":"/dev/null","sourceNew":"  private FormatAndBits fastestFormatAndBits(int max) {\n    // we only use bpv=1,2,4,8     \n    PackedInts.Format format = PackedInts.Format.PACKED_SINGLE_BLOCK;\n    int bitsPerValue = PackedInts.bitsRequired(max);\n    if (bitsPerValue == 3) {\n      bitsPerValue = 4;\n    } else if (bitsPerValue > 4) {\n      bitsPerValue = 8;\n    }\n    return new FormatAndBits(format, bitsPerValue);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9","date":1434069165,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer#fastestFormatAndBits(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer#fastestFormatAndBits(int).mjava","sourceNew":"  private FormatAndBits fastestFormatAndBits(int max) {\n    // we only use bpv=1,2,4,8     \n    PackedInts.Format format = PackedInts.Format.PACKED_SINGLE_BLOCK;\n    int bitsPerValue = PackedInts.bitsRequired(max);\n    if (bitsPerValue == 3) {\n      bitsPerValue = 4;\n    } else if (bitsPerValue > 4) {\n      bitsPerValue = 8;\n    }\n    return new FormatAndBits(format, bitsPerValue);\n  }\n\n","sourceOld":"  private FormatAndBits fastestFormatAndBits(int max) {\n    // we only use bpv=1,2,4,8     \n    PackedInts.Format format = PackedInts.Format.PACKED_SINGLE_BLOCK;\n    int bitsPerValue = PackedInts.bitsRequired(max);\n    if (bitsPerValue == 3) {\n      bitsPerValue = 4;\n    } else if (bitsPerValue > 4) {\n      bitsPerValue = 8;\n    }\n    return new FormatAndBits(format, bitsPerValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["9bb9a29a5e71a90295f175df8919802993142c9a"],"bc8f80fee115148a0e4a0574560be06b494de821":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bc8f80fee115148a0e4a0574560be06b494de821"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"]},"commit2Childs":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bc8f80fee115148a0e4a0574560be06b494de821":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc8f80fee115148a0e4a0574560be06b494de821","9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}