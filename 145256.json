{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","sourceNew":"  private void mergeFieldInfos() throws IOException {\n    mergeDocValuesAndNormsFieldInfos();\n    // write the merged infos\n    FieldInfosWriter fieldInfosWriter = codec.fieldInfosFormat()\n        .getFieldInfosWriter();\n    fieldInfosWriter.write(directory, segment, mergeState.fieldInfos, context);\n  }\n\n","sourceOld":"  private void mergeFieldInfos() throws IOException {\n    mergeDocValuesAndNormsFieldInfos();\n    // write the merged infos\n    FieldInfosWriter fieldInfosWriter = codec.fieldInfosFormat()\n        .getFieldInfosWriter();\n    fieldInfosWriter.write(directory, segment, mergeState.fieldInfos, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0f42e0639920b2e917c9ece35fb68ad83021e38","date":1337629438,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","sourceNew":"  private void mergeFieldInfos() throws IOException {\n    mergeDocValuesAndNormsFieldInfos();\n  }\n\n","sourceOld":"  private void mergeFieldInfos() throws IOException {\n    mergeDocValuesAndNormsFieldInfos();\n    // write the merged infos\n    FieldInfosWriter fieldInfosWriter = codec.fieldInfosFormat()\n        .getFieldInfosWriter();\n    fieldInfosWriter.write(directory, segment, mergeState.fieldInfos, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","sourceNew":null,"sourceOld":"  private void mergeFieldInfos() throws IOException {\n    mergeDocValuesAndNormsFieldInfos();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","sourceNew":null,"sourceOld":"  private void mergeFieldInfos() throws IOException {\n    mergeDocValuesAndNormsFieldInfos();\n    // write the merged infos\n    FieldInfosWriter fieldInfosWriter = codec.fieldInfosFormat()\n        .getFieldInfosWriter();\n    fieldInfosWriter.write(directory, segment, mergeState.fieldInfos, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","pathOld":"/dev/null","sourceNew":"  public void mergeFieldInfos() throws IOException {\n    for (AtomicReader reader : mergeState.readers) {\n      FieldInfos readerFieldInfos = reader.getFieldInfos();\n      for (FieldInfo fi : readerFieldInfos) {\n        fieldInfosBuilder.add(fi);\n      }\n    }\n    mergeState.fieldInfos = fieldInfosBuilder.finish();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","pathOld":"/dev/null","sourceNew":"  public void mergeFieldInfos() throws IOException {\n    for (AtomicReader reader : mergeState.readers) {\n      FieldInfos readerFieldInfos = reader.getFieldInfos();\n      for (FieldInfo fi : readerFieldInfos) {\n        fieldInfosBuilder.add(fi);\n      }\n    }\n    mergeState.fieldInfos = fieldInfosBuilder.finish();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","sourceNew":"  public void mergeFieldInfos() throws IOException {\n    for (LeafReader reader : mergeState.readers) {\n      FieldInfos readerFieldInfos = reader.getFieldInfos();\n      for (FieldInfo fi : readerFieldInfos) {\n        fieldInfosBuilder.add(fi);\n      }\n    }\n    mergeState.fieldInfos = fieldInfosBuilder.finish();\n  }\n\n","sourceOld":"  public void mergeFieldInfos() throws IOException {\n    for (AtomicReader reader : mergeState.readers) {\n      FieldInfos readerFieldInfos = reader.getFieldInfos();\n      for (FieldInfo fi : readerFieldInfos) {\n        fieldInfosBuilder.add(fi);\n      }\n    }\n    mergeState.fieldInfos = fieldInfosBuilder.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2131047ecceac64b54ba70feec3d26bbd7e483d7","date":1411862069,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","sourceNew":"  public void mergeFieldInfos() throws IOException {\n    for (FieldInfos readerFieldInfos : mergeState.fieldInfos) {\n      for (FieldInfo fi : readerFieldInfos) {\n        fieldInfosBuilder.add(fi);\n      }\n    }\n    mergeState.mergeFieldInfos = fieldInfosBuilder.finish();\n  }\n\n","sourceOld":"  public void mergeFieldInfos() throws IOException {\n    for (LeafReader reader : mergeState.readers) {\n      FieldInfos readerFieldInfos = reader.getFieldInfos();\n      for (FieldInfo fi : readerFieldInfos) {\n        fieldInfosBuilder.add(fi);\n      }\n    }\n    mergeState.fieldInfos = fieldInfosBuilder.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","sourceNew":"  public void mergeFieldInfos() throws IOException {\n    for (FieldInfos readerFieldInfos : mergeState.fieldInfos) {\n      for (FieldInfo fi : readerFieldInfos) {\n        fieldInfosBuilder.add(fi);\n      }\n    }\n    mergeState.mergeFieldInfos = fieldInfosBuilder.finish();\n  }\n\n","sourceOld":"  public void mergeFieldInfos() throws IOException {\n    for (LeafReader reader : mergeState.readers) {\n      FieldInfos readerFieldInfos = reader.getFieldInfos();\n      for (FieldInfo fi : readerFieldInfos) {\n        fieldInfosBuilder.add(fi);\n      }\n    }\n    mergeState.fieldInfos = fieldInfosBuilder.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92b74780b4efed2011d2d1a19183689db904519e","date":1586516102,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#mergeFieldInfos().mjava","sourceNew":"  public void mergeFieldInfos() {\n    for (FieldInfos readerFieldInfos : mergeState.fieldInfos) {\n      for (FieldInfo fi : readerFieldInfos) {\n        fieldInfosBuilder.add(fi);\n      }\n    }\n    mergeState.mergeFieldInfos = fieldInfosBuilder.finish();\n  }\n\n","sourceOld":"  public void mergeFieldInfos() throws IOException {\n    for (FieldInfos readerFieldInfos : mergeState.fieldInfos) {\n      for (FieldInfo fi : readerFieldInfos) {\n        fieldInfosBuilder.add(fi);\n      }\n    }\n    mergeState.mergeFieldInfos = fieldInfosBuilder.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["a0f42e0639920b2e917c9ece35fb68ad83021e38"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","0837ab0472feecb3a54260729d845f839e1cbd72"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["c9fb5f46e264daf5ba3860defe623a89d202dd87","2131047ecceac64b54ba70feec3d26bbd7e483d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2131047ecceac64b54ba70feec3d26bbd7e483d7":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"0837ab0472feecb3a54260729d845f839e1cbd72":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0f42e0639920b2e917c9ece35fb68ad83021e38":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"92b74780b4efed2011d2d1a19183689db904519e":["9bb9a29a5e71a90295f175df8919802993142c9a"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["92b74780b4efed2011d2d1a19183689db904519e"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","a0f42e0639920b2e917c9ece35fb68ad83021e38"],"9bb9a29a5e71a90295f175df8919802993142c9a":["92b74780b4efed2011d2d1a19183689db904519e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2131047ecceac64b54ba70feec3d26bbd7e483d7":["9bb9a29a5e71a90295f175df8919802993142c9a"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0f42e0639920b2e917c9ece35fb68ad83021e38":["129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["9bb9a29a5e71a90295f175df8919802993142c9a","2131047ecceac64b54ba70feec3d26bbd7e483d7"],"92b74780b4efed2011d2d1a19183689db904519e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}