{"path":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/PrimaryNode#getLastCommitVersion().mjava","commits":[{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/PrimaryNode#getLastCommitVersion().mjava","pathOld":"/dev/null","sourceNew":"  public synchronized long getLastCommitVersion() {\n    String s = curInfos.getUserData().get(VERSION_KEY);\n    // In ctor we always install an initial version:\n    assert s != null;\n    return Long.parseLong(s);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/PrimaryNode#getLastCommitVersion().mjava","pathOld":"/dev/null","sourceNew":"  public synchronized long getLastCommitVersion() {\n    String s = curInfos.getUserData().get(VERSION_KEY);\n    // In ctor we always install an initial version:\n    assert s != null;\n    return Long.parseLong(s);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71e1a70f18d64b93db3ef618e606d6df5062f747","date":1466156390,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/PrimaryNode#getLastCommitVersion().mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/PrimaryNode#getLastCommitVersion().mjava","sourceNew":"  public synchronized long getLastCommitVersion() {\n    Iterable<Map.Entry<String,String>> iter = writer.getLiveCommitData();\n    assert iter != null;\n    for(Map.Entry<String,String> ent : iter) {\n      if (ent.getKey().equals(VERSION_KEY)) {\n        return Long.parseLong(ent.getValue());\n      }\n    }\n\n    // In ctor we always install an initial version:\n    throw new AssertionError(\"missing VERSION_KEY\");\n  }\n\n","sourceOld":"  public synchronized long getLastCommitVersion() {\n    String s = curInfos.getUserData().get(VERSION_KEY);\n    // In ctor we always install an initial version:\n    assert s != null;\n    return Long.parseLong(s);\n  }\n\n","bugFix":["0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/PrimaryNode#getLastCommitVersion().mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/PrimaryNode#getLastCommitVersion().mjava","sourceNew":"  public synchronized long getLastCommitVersion() {\n    Iterable<Map.Entry<String,String>> iter = writer.getLiveCommitData();\n    assert iter != null;\n    for(Map.Entry<String,String> ent : iter) {\n      if (ent.getKey().equals(VERSION_KEY)) {\n        return Long.parseLong(ent.getValue());\n      }\n    }\n\n    // In ctor we always install an initial version:\n    throw new AssertionError(\"missing VERSION_KEY\");\n  }\n\n","sourceOld":"  public synchronized long getLastCommitVersion() {\n    String s = curInfos.getUserData().get(VERSION_KEY);\n    // In ctor we always install an initial version:\n    assert s != null;\n    return Long.parseLong(s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"71e1a70f18d64b93db3ef618e606d6df5062f747":["68496c2200e559fb7802f7575427b7a482659afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["68496c2200e559fb7802f7575427b7a482659afb","71e1a70f18d64b93db3ef618e606d6df5062f747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"71e1a70f18d64b93db3ef618e606d6df5062f747":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"68496c2200e559fb7802f7575427b7a482659afb":["71e1a70f18d64b93db3ef618e606d6df5062f747","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}