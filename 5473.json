{"path":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean,boolean,Map[String,String]).mjava","commits":[{"id":"763da4a9605e47013078edc323b9d4b608f0f9e0","date":1555353576,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean,boolean,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean,boolean).mjava","sourceNew":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n                          SegmentInfos sis, boolean applyAllDeletes, boolean writeAllDeletes,\n                          Map<String, String> readerAttributes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n    this.writeAllDeletes = writeAllDeletes;\n    this.readerAttributes = Collections.unmodifiableMap(new HashMap<>(readerAttributes));\n  }\n\n","sourceOld":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n                          SegmentInfos sis, boolean applyAllDeletes, boolean writeAllDeletes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n    this.writeAllDeletes = writeAllDeletes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd2b7ad87a1172d1d06dc8491991e52534c90f71","date":1555507572,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean,boolean,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean,boolean,Map[String,String]).mjava","sourceNew":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n                          SegmentInfos sis, boolean applyAllDeletes, boolean writeAllDeletes,\n                          Map<String, String> readerAttributes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n    this.writeAllDeletes = writeAllDeletes;\n    this.readerAttributes = Map.copyOf(readerAttributes);\n  }\n\n","sourceOld":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n                          SegmentInfos sis, boolean applyAllDeletes, boolean writeAllDeletes,\n                          Map<String, String> readerAttributes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n    this.writeAllDeletes = writeAllDeletes;\n    this.readerAttributes = Collections.unmodifiableMap(new HashMap<>(readerAttributes));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4e83191a3e02851a0b67e5335e6922f3e9ea86d","date":1583489709,"type":5,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean,boolean,Map[String,String]).mjava","sourceNew":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n                          SegmentInfos sis, boolean applyAllDeletes, boolean writeAllDeletes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n    this.writeAllDeletes = writeAllDeletes;\n  }\n\n","sourceOld":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n                          SegmentInfos sis, boolean applyAllDeletes, boolean writeAllDeletes,\n                          Map<String, String> readerAttributes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n    this.writeAllDeletes = writeAllDeletes;\n    this.readerAttributes = Map.copyOf(readerAttributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"763da4a9605e47013078edc323b9d4b608f0f9e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd2b7ad87a1172d1d06dc8491991e52534c90f71":["763da4a9605e47013078edc323b9d4b608f0f9e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4e83191a3e02851a0b67e5335e6922f3e9ea86d"],"a4e83191a3e02851a0b67e5335e6922f3e9ea86d":["fd2b7ad87a1172d1d06dc8491991e52534c90f71"]},"commit2Childs":{"763da4a9605e47013078edc323b9d4b608f0f9e0":["fd2b7ad87a1172d1d06dc8491991e52534c90f71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["763da4a9605e47013078edc323b9d4b608f0f9e0"],"fd2b7ad87a1172d1d06dc8491991e52534c90f71":["a4e83191a3e02851a0b67e5335e6922f3e9ea86d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"a4e83191a3e02851a0b67e5335e6922f3e9ea86d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}