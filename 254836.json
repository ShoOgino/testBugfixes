{"path":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","commits":[{"id":"af3f3d3f7a6a159ccf14d58544fd71ae72c89b10","date":1449514606,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new IntField(fieldName+NumericType.INT, linkInt, Field.Store.NO));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LongField(fieldName+NumericType.LONG, linkLong, Field.Store.NO));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+NumericType.INT, linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+NumericType.LONG, linkLong));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+NumericType.INT, linkInt));\n      document.add(new NumericDocValuesField(fieldName+NumericType.LONG, linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","sourceNew":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new LegacyIntField(fieldName+ LegacyNumericType.INT, linkInt, Field.Store.NO));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LegacyLongField(fieldName+ LegacyNumericType.LONG, linkLong, Field.Store.NO));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","sourceOld":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new IntField(fieldName+NumericType.INT, linkInt, Field.Store.NO));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LongField(fieldName+NumericType.LONG, linkLong, Field.Store.NO));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+NumericType.INT, linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+NumericType.LONG, linkLong));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+NumericType.INT, linkInt));\n      document.add(new NumericDocValuesField(fieldName+NumericType.LONG, linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","bugFix":null,"bugIntro":["50b8410419cbbe9d8e1a96c918a951976bffe680","a0a97513a3a796fa8e709a0dcfec8a2e628e721b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0a97513a3a796fa8e709a0dcfec8a2e628e721b","date":1458922983,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","sourceNew":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new LegacyIntField(fieldName + LegacyNumericType.INT, linkInt, Field.Store.NO));\n    document.add(new IntPoint(fieldName + LegacyNumericType.INT, linkInt));\n    document.add(new FloatPoint(fieldName + \"FLOAT\", linkInt));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LegacyLongField(fieldName +  LegacyNumericType.LONG, linkLong, Field.Store.NO));\n    document.add(new LongPoint(fieldName + LegacyNumericType.LONG, linkLong));\n    document.add(new DoublePoint(fieldName + \"DOUBLE\", linkLong));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"FLOAT\", Float.floatToRawIntBits(linkInt)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"DOUBLE\", Double.doubleToRawLongBits(linkLong)));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new FloatDocValuesField(fieldName+ \"FLOAT\", linkInt));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n      document.add(new DoubleDocValuesField(fieldName+ \"DOUBLE\", linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","sourceOld":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new LegacyIntField(fieldName+ LegacyNumericType.INT, linkInt, Field.Store.NO));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LegacyLongField(fieldName+ LegacyNumericType.LONG, linkLong, Field.Store.NO));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","bugFix":["770342641f7b505eaa8dccdc666158bff2419109"],"bugIntro":["50b8410419cbbe9d8e1a96c918a951976bffe680"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"50b8410419cbbe9d8e1a96c918a951976bffe680","date":1471869553,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","sourceNew":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new IntPoint(fieldName + \"INT\", linkInt));\n    document.add(new FloatPoint(fieldName + \"FLOAT\", linkInt));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LongPoint(fieldName + \"LONG\", linkLong));\n    document.add(new DoublePoint(fieldName + \"DOUBLE\", linkLong));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"INT\", linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"FLOAT\", Float.floatToRawIntBits(linkInt)));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"LONG\", linkLong));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"DOUBLE\", Double.doubleToRawLongBits(linkLong)));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+ \"INT\", linkInt));\n      document.add(new FloatDocValuesField(fieldName+ \"FLOAT\", linkInt));\n      document.add(new NumericDocValuesField(fieldName+ \"LONG\", linkLong));\n      document.add(new DoubleDocValuesField(fieldName+ \"DOUBLE\", linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","sourceOld":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new LegacyIntField(fieldName + LegacyNumericType.INT, linkInt, Field.Store.NO));\n    document.add(new IntPoint(fieldName + LegacyNumericType.INT, linkInt));\n    document.add(new FloatPoint(fieldName + \"FLOAT\", linkInt));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LegacyLongField(fieldName +  LegacyNumericType.LONG, linkLong, Field.Store.NO));\n    document.add(new LongPoint(fieldName + LegacyNumericType.LONG, linkLong));\n    document.add(new DoublePoint(fieldName + \"DOUBLE\", linkLong));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"FLOAT\", Float.floatToRawIntBits(linkInt)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"DOUBLE\", Double.doubleToRawLongBits(linkLong)));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new FloatDocValuesField(fieldName+ \"FLOAT\", linkInt));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n      document.add(new DoubleDocValuesField(fieldName+ \"DOUBLE\", linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","bugFix":["770342641f7b505eaa8dccdc666158bff2419109","a0a97513a3a796fa8e709a0dcfec8a2e628e721b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c82557b0a8c9d4012f208e5de912ae7500ea351","date":1471888093,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","sourceNew":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new IntPoint(fieldName + \"INT\", linkInt));\n    document.add(new FloatPoint(fieldName + \"FLOAT\", linkInt));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LongPoint(fieldName + \"LONG\", linkLong));\n    document.add(new DoublePoint(fieldName + \"DOUBLE\", linkLong));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"INT\", linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"FLOAT\", Float.floatToRawIntBits(linkInt)));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"LONG\", linkLong));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"DOUBLE\", Double.doubleToRawLongBits(linkLong)));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+ \"INT\", linkInt));\n      document.add(new FloatDocValuesField(fieldName+ \"FLOAT\", linkInt));\n      document.add(new NumericDocValuesField(fieldName+ \"LONG\", linkLong));\n      document.add(new DoubleDocValuesField(fieldName+ \"DOUBLE\", linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","sourceOld":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new LegacyIntField(fieldName + LegacyNumericType.INT, linkInt, Field.Store.NO));\n    document.add(new IntPoint(fieldName + LegacyNumericType.INT, linkInt));\n    document.add(new FloatPoint(fieldName + \"FLOAT\", linkInt));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LegacyLongField(fieldName +  LegacyNumericType.LONG, linkLong, Field.Store.NO));\n    document.add(new LongPoint(fieldName + LegacyNumericType.LONG, linkLong));\n    document.add(new DoublePoint(fieldName + \"DOUBLE\", linkLong));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"FLOAT\", Float.floatToRawIntBits(linkInt)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"DOUBLE\", Double.doubleToRawLongBits(linkLong)));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new FloatDocValuesField(fieldName+ \"FLOAT\", linkInt));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n      document.add(new DoubleDocValuesField(fieldName+ \"DOUBLE\", linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","date":1472163016,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","sourceNew":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new IntPoint(fieldName + \"INT\", linkInt));\n    document.add(new FloatPoint(fieldName + \"FLOAT\", linkInt));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LongPoint(fieldName + \"LONG\", linkLong));\n    document.add(new DoublePoint(fieldName + \"DOUBLE\", linkLong));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"INT\", linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"FLOAT\", Float.floatToRawIntBits(linkInt)));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"LONG\", linkLong));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"DOUBLE\", Double.doubleToRawLongBits(linkLong)));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+ \"INT\", linkInt));\n      document.add(new FloatDocValuesField(fieldName+ \"FLOAT\", linkInt));\n      document.add(new NumericDocValuesField(fieldName+ \"LONG\", linkLong));\n      document.add(new DoubleDocValuesField(fieldName+ \"DOUBLE\", linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","sourceOld":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new LegacyIntField(fieldName + LegacyNumericType.INT, linkInt, Field.Store.NO));\n    document.add(new IntPoint(fieldName + LegacyNumericType.INT, linkInt));\n    document.add(new FloatPoint(fieldName + \"FLOAT\", linkInt));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LegacyLongField(fieldName +  LegacyNumericType.LONG, linkLong, Field.Store.NO));\n    document.add(new LongPoint(fieldName + LegacyNumericType.LONG, linkLong));\n    document.add(new DoublePoint(fieldName + \"DOUBLE\", linkLong));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"FLOAT\", Float.floatToRawIntBits(linkInt)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"DOUBLE\", Double.doubleToRawLongBits(linkLong)));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new FloatDocValuesField(fieldName+ \"FLOAT\", linkInt));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n      document.add(new DoubleDocValuesField(fieldName+ \"DOUBLE\", linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#addLinkFields(Random,Document,String,String,boolean,boolean).mjava","sourceNew":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new IntPoint(fieldName + \"INT\", linkInt));\n    document.add(new FloatPoint(fieldName + \"FLOAT\", linkInt));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LongPoint(fieldName + \"LONG\", linkLong));\n    document.add(new DoublePoint(fieldName + \"DOUBLE\", linkLong));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"INT\", linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"FLOAT\", Float.floatToRawIntBits(linkInt)));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"LONG\", linkLong));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"DOUBLE\", Double.doubleToRawLongBits(linkLong)));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+ \"INT\", linkInt));\n      document.add(new FloatDocValuesField(fieldName+ \"FLOAT\", linkInt));\n      document.add(new NumericDocValuesField(fieldName+ \"LONG\", linkLong));\n      document.add(new DoubleDocValuesField(fieldName+ \"DOUBLE\", linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","sourceOld":"  private void addLinkFields(final Random random, Document document, final String fieldName, String linkValue,\n      boolean multipleValuesPerDocument, boolean globalOrdinalJoin) {\n    document.add(newTextField(random, fieldName, linkValue, Field.Store.NO));\n\n    final int linkInt = Integer.parseUnsignedInt(linkValue,16);\n    document.add(new LegacyIntField(fieldName + LegacyNumericType.INT, linkInt, Field.Store.NO));\n    document.add(new IntPoint(fieldName + LegacyNumericType.INT, linkInt));\n    document.add(new FloatPoint(fieldName + \"FLOAT\", linkInt));\n\n    final long linkLong = linkInt<<32 | linkInt;\n    document.add(new LegacyLongField(fieldName +  LegacyNumericType.LONG, linkLong, Field.Store.NO));\n    document.add(new LongPoint(fieldName + LegacyNumericType.LONG, linkLong));\n    document.add(new DoublePoint(fieldName + \"DOUBLE\", linkLong));\n\n    if (multipleValuesPerDocument) {\n      document.add(new SortedSetDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"FLOAT\", Float.floatToRawIntBits(linkInt)));\n      document.add(new SortedNumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n      document.add(new SortedNumericDocValuesField(fieldName+ \"DOUBLE\", Double.doubleToRawLongBits(linkLong)));\n    } else {\n      document.add(new SortedDocValuesField(fieldName, new BytesRef(linkValue)));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.INT, linkInt));\n      document.add(new FloatDocValuesField(fieldName+ \"FLOAT\", linkInt));\n      document.add(new NumericDocValuesField(fieldName+ LegacyNumericType.LONG, linkLong));\n      document.add(new DoubleDocValuesField(fieldName+ \"DOUBLE\", linkLong));\n    }\n    if (globalOrdinalJoin) {\n      document.add(new SortedDocValuesField(\"join_field\", new BytesRef(linkValue)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0a97513a3a796fa8e709a0dcfec8a2e628e721b":["770342641f7b505eaa8dccdc666158bff2419109"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["a0a97513a3a796fa8e709a0dcfec8a2e628e721b","50b8410419cbbe9d8e1a96c918a951976bffe680"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["a0a97513a3a796fa8e709a0dcfec8a2e628e721b"],"af3f3d3f7a6a159ccf14d58544fd71ae72c89b10":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"770342641f7b505eaa8dccdc666158bff2419109":["af3f3d3f7a6a159ccf14d58544fd71ae72c89b10"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["a0a97513a3a796fa8e709a0dcfec8a2e628e721b","0c82557b0a8c9d4012f208e5de912ae7500ea351"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0a97513a3a796fa8e709a0dcfec8a2e628e721b","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"]},"commit2Childs":{"a0a97513a3a796fa8e709a0dcfec8a2e628e721b":["0c82557b0a8c9d4012f208e5de912ae7500ea351","50b8410419cbbe9d8e1a96c918a951976bffe680","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["0c82557b0a8c9d4012f208e5de912ae7500ea351"],"af3f3d3f7a6a159ccf14d58544fd71ae72c89b10":["770342641f7b505eaa8dccdc666158bff2419109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af3f3d3f7a6a159ccf14d58544fd71ae72c89b10"],"770342641f7b505eaa8dccdc666158bff2419109":["a0a97513a3a796fa8e709a0dcfec8a2e628e721b"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}