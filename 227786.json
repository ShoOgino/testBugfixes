{"path":"lucene/core/src/test/org/apache/lucene/search/TestBooleanQuery#testToString().mjava","commits":[{"id":"9f324d6099b423d2c56da1afe7e9f0c327770175","date":1425217948,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanQuery#testToString().mjava","pathOld":"/dev/null","sourceNew":"  public void testToString() {\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"field\", \"a\")), Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"field\", \"b\")), Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"c\")), Occur.MUST_NOT);\n    bq.add(new TermQuery(new Term(\"field\", \"d\")), Occur.FILTER);\n    assertEquals(\"a +b -c #d\", bq.toString(\"field\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanQuery#testToString().mjava","pathOld":"/dev/null","sourceNew":"  public void testToString() {\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"field\", \"a\")), Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"field\", \"b\")), Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"c\")), Occur.MUST_NOT);\n    bq.add(new TermQuery(new Term(\"field\", \"d\")), Occur.FILTER);\n    assertEquals(\"a +b -c #d\", bq.toString(\"field\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanQuery#testToString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanQuery#testToString().mjava","sourceNew":"  public void testToString() {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"a\")), Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"field\", \"b\")), Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"c\")), Occur.MUST_NOT);\n    bq.add(new TermQuery(new Term(\"field\", \"d\")), Occur.FILTER);\n    assertEquals(\"a +b -c #d\", bq.build().toString(\"field\"));\n  }\n\n","sourceOld":"  public void testToString() {\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"field\", \"a\")), Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"field\", \"b\")), Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"c\")), Occur.MUST_NOT);\n    bq.add(new TermQuery(new Term(\"field\", \"d\")), Occur.FILTER);\n    assertEquals(\"a +b -c #d\", bq.toString(\"field\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["9f324d6099b423d2c56da1afe7e9f0c327770175"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9f324d6099b423d2c56da1afe7e9f0c327770175"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9f324d6099b423d2c56da1afe7e9f0c327770175":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9f324d6099b423d2c56da1afe7e9f0c327770175"],"9f324d6099b423d2c56da1afe7e9f0c327770175":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}