{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElision#filter(TokenFilter).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElision#filter(TokenFilter).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElision#filter(TokenFilter).mjava","sourceNew":"  private List<String> filter(TokenFilter filter) throws IOException {\n    List<String> tas = new ArrayList<String>();\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    while (filter.incrementToken()) {\n      tas.add(termAtt.toString());\n    }\n    return tas;\n  }\n\n","sourceOld":"  private List<String> filter(TokenFilter filter) throws IOException {\n    List<String> tas = new ArrayList<String>();\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    while (filter.incrementToken()) {\n      tas.add(termAtt.toString());\n    }\n    return tas;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3106630d90d0d9e238f170a5cb83cd1dee5ddd72","date":1343657007,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElision#filter(TokenFilter).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElision#filter(TokenFilter).mjava","sourceNew":"  private List<String> filter(TokenFilter filter) throws IOException {\n    List<String> tas = new ArrayList<String>();\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    while (filter.incrementToken()) {\n      tas.add(termAtt.toString());\n    }\n    return tas;\n  }\n\n","sourceOld":"  private List<String> filter(TokenFilter filter) throws IOException {\n    List<String> tas = new ArrayList<String>();\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    while (filter.incrementToken()) {\n      tas.add(termAtt.toString());\n    }\n    return tas;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElision#filter(TokenFilter).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElision#filter(TokenFilter).mjava","sourceNew":"  private List<String> filter(TokenFilter filter) throws IOException {\n    List<String> tas = new ArrayList<String>();\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    while (filter.incrementToken()) {\n      tas.add(termAtt.toString());\n    }\n    return tas;\n  }\n\n","sourceOld":"  private List<String> filter(TokenFilter filter) throws IOException {\n    List<String> tas = new ArrayList<String>();\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    while (filter.incrementToken()) {\n      tas.add(termAtt.toString());\n    }\n    return tas;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElision#filter(TokenFilter).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElision#filter(TokenFilter).mjava","sourceNew":"  private List<String> filter(TokenFilter filter) throws IOException {\n    List<String> tas = new ArrayList<String>();\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    while (filter.incrementToken()) {\n      tas.add(termAtt.toString());\n    }\n    return tas;\n  }\n\n","sourceOld":"  private List<String> filter(TokenFilter filter) throws IOException {\n    List<String> tas = new ArrayList<String>();\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n    while (filter.incrementToken()) {\n      tas.add(termAtt.toString());\n    }\n    return tas;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["b89678825b68eccaf09e6ab71675fc0b0af1e099","3106630d90d0d9e238f170a5cb83cd1dee5ddd72"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","3106630d90d0d9e238f170a5cb83cd1dee5ddd72"],"3106630d90d0d9e238f170a5cb83cd1dee5ddd72":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3106630d90d0d9e238f170a5cb83cd1dee5ddd72"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","3106630d90d0d9e238f170a5cb83cd1dee5ddd72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"3106630d90d0d9e238f170a5cb83cd1dee5ddd72":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}