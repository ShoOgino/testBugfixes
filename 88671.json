{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexReaderReopen#testReopen().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReaderReopen#testReopen().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testReopen().mjava","sourceNew":"  public void testReopen() throws Exception {\n    final Directory dir1 = newDirectory();\n    \n    createIndex(random, dir1, false);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir1);\n      }\n\n      @Override\n      protected DirectoryReader openReader() throws IOException {\n        return DirectoryReader.open(dir1);\n      }\n      \n    });\n    dir1.close();\n    \n    final Directory dir2 = newDirectory();\n    \n    createIndex(random, dir2, true);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir2);\n      }\n\n      @Override\n      protected DirectoryReader openReader() throws IOException {\n        return DirectoryReader.open(dir2);\n      }\n      \n    });\n    dir2.close();\n  }\n\n","sourceOld":"  public void testReopen() throws Exception {\n    final Directory dir1 = newDirectory();\n    \n    createIndex(random, dir1, false);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir1);\n      }\n\n      @Override\n      protected DirectoryReader openReader() throws IOException {\n        return DirectoryReader.open(dir1);\n      }\n      \n    });\n    dir1.close();\n    \n    final Directory dir2 = newDirectory();\n    \n    createIndex(random, dir2, true);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir2);\n      }\n\n      @Override\n      protected DirectoryReader openReader() throws IOException {\n        return DirectoryReader.open(dir2);\n      }\n      \n    });\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","date":1328967626,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testReopen().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexReaderReopen#testReopen().mjava","sourceNew":"  public void testReopen() throws Exception {\n    final Directory dir1 = newDirectory();\n    \n    createIndex(random, dir1, false);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestDirectoryReaderReopen.modifyIndex(i, dir1);\n      }\n\n      @Override\n      protected DirectoryReader openReader() throws IOException {\n        return DirectoryReader.open(dir1);\n      }\n      \n    });\n    dir1.close();\n    \n    final Directory dir2 = newDirectory();\n    \n    createIndex(random, dir2, true);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestDirectoryReaderReopen.modifyIndex(i, dir2);\n      }\n\n      @Override\n      protected DirectoryReader openReader() throws IOException {\n        return DirectoryReader.open(dir2);\n      }\n      \n    });\n    dir2.close();\n  }\n\n","sourceOld":"  public void testReopen() throws Exception {\n    final Directory dir1 = newDirectory();\n    \n    createIndex(random, dir1, false);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir1);\n      }\n\n      @Override\n      protected DirectoryReader openReader() throws IOException {\n        return DirectoryReader.open(dir1);\n      }\n      \n    });\n    dir1.close();\n    \n    final Directory dir2 = newDirectory();\n    \n    createIndex(random, dir2, true);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir2);\n      }\n\n      @Override\n      protected DirectoryReader openReader() throws IOException {\n        return DirectoryReader.open(dir2);\n      }\n      \n    });\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"]},"commit2Childs":{"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}