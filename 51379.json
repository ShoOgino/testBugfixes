{"path":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadSpanCollector#collectLeaf(PostingsEnum,int,Term).mjava","commits":[{"id":"29aea3139c4326c0501d75d51059855463220279","date":1433952060,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadSpanCollector#collectLeaf(PostingsEnum,int,Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadSpanCollector#collectLeaf(PostingsEnum,Term).mjava","sourceNew":"  @Override\n  public void collectLeaf(PostingsEnum postings, int position, Term term) throws IOException {\n    BytesRef payload = postings.getPayload();\n    if (payload == null)\n      return;\n    final byte[] bytes = new byte[payload.length];\n    System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n    payloads.add(bytes);\n  }\n\n","sourceOld":"  @Override\n  public void collectLeaf(PostingsEnum postings, Term term) throws IOException {\n    BytesRef payload = postings.getPayload();\n    if (payload == null)\n      return;\n    final byte[] bytes = new byte[payload.length];\n    System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n    payloads.add(bytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/payloads/PayloadSpanCollector#collectLeaf(PostingsEnum,int,Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadSpanCollector#collectLeaf(PostingsEnum,int,Term).mjava","sourceNew":"  @Override\n  public void collectLeaf(PostingsEnum postings, int position, Term term) throws IOException {\n    BytesRef payload = postings.getPayload();\n    if (payload == null)\n      return;\n    final byte[] bytes = new byte[payload.length];\n    System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n    payloads.add(bytes);\n  }\n\n","sourceOld":"  @Override\n  public void collectLeaf(PostingsEnum postings, int position, Term term) throws IOException {\n    BytesRef payload = postings.getPayload();\n    if (payload == null)\n      return;\n    final byte[] bytes = new byte[payload.length];\n    System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n    payloads.add(bytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["29aea3139c4326c0501d75d51059855463220279"],"29aea3139c4326c0501d75d51059855463220279":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"]},"commit2Childs":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29aea3139c4326c0501d75d51059855463220279":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29aea3139c4326c0501d75d51059855463220279"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}