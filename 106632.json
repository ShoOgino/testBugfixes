{"path":"lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/BeiderMorseFilterFactory#BeiderMorseFilterFactory(Map[String,String]).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/BeiderMorseFilterFactory#BeiderMorseFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/BeiderMorseFilterFactory#init(Map[String,String]).mjava","sourceNew":"  /** Creates a new BeiderMorseFilterFactory */\n  public BeiderMorseFilterFactory(Map<String,String> args) {\n    super(args);\n    // PhoneticEngine = NameType + RuleType + concat\n    // we use common-codec's defaults: GENERIC + APPROX + true\n    String nameTypeArg = args.remove(\"nameType\");\n    NameType nameType = (nameTypeArg == null) ? NameType.GENERIC : NameType.valueOf(nameTypeArg);\n\n    String ruleTypeArg = args.remove(\"ruleType\");\n    RuleType ruleType = (ruleTypeArg == null) ? RuleType.APPROX : RuleType.valueOf(ruleTypeArg);\n    \n    boolean concat = getBoolean(args, \"concat\", true);\n    engine = new PhoneticEngine(nameType, ruleType, concat);\n    \n    // LanguageSet: defaults to automagic, otherwise a comma-separated list.\n    String languageSetArg = args.remove(\"languageSet\");\n    if (languageSetArg == null || languageSetArg.equals(\"auto\")) {\n      languageSet = null;\n    } else {\n      languageSet = LanguageSet.from(new HashSet<String>(Arrays.asList(languageSetArg.split(\",\"))));\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    \n    // PhoneticEngine = NameType + RuleType + concat\n    // we use common-codec's defaults: GENERIC + APPROX + true\n    String nameTypeArg = args.get(\"nameType\");\n    NameType nameType = (nameTypeArg == null) ? NameType.GENERIC : NameType.valueOf(nameTypeArg);\n\n    String ruleTypeArg = args.get(\"ruleType\");\n    RuleType ruleType = (ruleTypeArg == null) ? RuleType.APPROX : RuleType.valueOf(ruleTypeArg);\n    \n    boolean concat = getBoolean(\"concat\", true);\n    engine = new PhoneticEngine(nameType, ruleType, concat);\n    \n    // LanguageSet: defaults to automagic, otherwise a comma-separated list.\n    String languageSetArg = args.get(\"languageSet\");\n    if (languageSetArg == null || languageSetArg.equals(\"auto\")) {\n      languageSet = null;\n    } else {\n      languageSet = LanguageSet.from(new HashSet<String>(Arrays.asList(languageSetArg.split(\",\"))));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcae30df9fe9300569835aef42ec65802c7c0afb","date":1364859933,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/BeiderMorseFilterFactory#BeiderMorseFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/BeiderMorseFilterFactory#BeiderMorseFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new BeiderMorseFilterFactory */\n  public BeiderMorseFilterFactory(Map<String,String> args) {\n    super(args);\n    // PhoneticEngine = NameType + RuleType + concat\n    // we use common-codec's defaults: GENERIC + APPROX + true\n    NameType nameType = NameType.valueOf(get(args, \"nameType\", NameType.GENERIC.toString()));\n    RuleType ruleType = RuleType.valueOf(get(args, \"ruleType\", RuleType.APPROX.toString()));\n    \n    boolean concat = getBoolean(args, \"concat\", true);\n    engine = new PhoneticEngine(nameType, ruleType, concat);\n    \n    // LanguageSet: defaults to automagic, otherwise a comma-separated list.\n    Set<String> langs = getSet(args, \"languageSet\");\n    languageSet = (null == langs || (1 == langs.size() && langs.contains(\"auto\"))) ? null : LanguageSet.from(langs);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new BeiderMorseFilterFactory */\n  public BeiderMorseFilterFactory(Map<String,String> args) {\n    super(args);\n    // PhoneticEngine = NameType + RuleType + concat\n    // we use common-codec's defaults: GENERIC + APPROX + true\n    String nameTypeArg = args.remove(\"nameType\");\n    NameType nameType = (nameTypeArg == null) ? NameType.GENERIC : NameType.valueOf(nameTypeArg);\n\n    String ruleTypeArg = args.remove(\"ruleType\");\n    RuleType ruleType = (ruleTypeArg == null) ? RuleType.APPROX : RuleType.valueOf(ruleTypeArg);\n    \n    boolean concat = getBoolean(args, \"concat\", true);\n    engine = new PhoneticEngine(nameType, ruleType, concat);\n    \n    // LanguageSet: defaults to automagic, otherwise a comma-separated list.\n    String languageSetArg = args.remove(\"languageSet\");\n    if (languageSetArg == null || languageSetArg.equals(\"auto\")) {\n      languageSet = null;\n    } else {\n      languageSet = LanguageSet.from(new HashSet<String>(Arrays.asList(languageSetArg.split(\",\"))));\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dcae30df9fe9300569835aef42ec65802c7c0afb":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dcae30df9fe9300569835aef42ec65802c7c0afb"]},"commit2Childs":{"dcae30df9fe9300569835aef42ec65802c7c0afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}