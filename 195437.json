{"path":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    StopAnalyzer analyzer = new StopAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    StopAnalyzer analyzer = new StopAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03276b2744036b1b19a7a2dd4b74ba7bc484f107","date":1274048508,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    StopAnalyzer analyzer = new StopAnalyzer(TEST_VERSION_CURRENT);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112629f1dfd1451722c6047bcf593e6efc96f5f4","date":1309910887,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery(); // Query \"this hi this is a test is\"\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    \n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":["6fb5dc223475059e18daa29ecbc9ee827971f72c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery(); // Query \"this hi this is a test is\"\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    \n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery(); // Query \"this hi this is a test is\"\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    \n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer);\n    qp.setEnablePositionIncrements(true);\n    PhraseQuery q = (PhraseQuery)qp.parse(\"\\\"this hi this is a test is\\\"\");\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery(); // Query \"this hi this is a test is\"\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    \n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery(); // Query \"this hi this is a test is\"\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    \n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"03276b2744036b1b19a7a2dd4b74ba7bc484f107":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["03276b2744036b1b19a7a2dd4b74ba7bc484f107"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["112629f1dfd1451722c6047bcf593e6efc96f5f4"],"a3776dccca01c11e7046323cfad46a3b4a471233":["03276b2744036b1b19a7a2dd4b74ba7bc484f107","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["03276b2744036b1b19a7a2dd4b74ba7bc484f107","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"962d04139994fce5193143ef35615499a9a96d78":["03276b2744036b1b19a7a2dd4b74ba7bc484f107","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"112629f1dfd1451722c6047bcf593e6efc96f5f4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["f2c5f0cb44df114db4228c8f77861714b5cabaea","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a3776dccca01c11e7046323cfad46a3b4a471233","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"03276b2744036b1b19a7a2dd4b74ba7bc484f107":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","112629f1dfd1451722c6047bcf593e6efc96f5f4","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"962d04139994fce5193143ef35615499a9a96d78":[],"112629f1dfd1451722c6047bcf593e6efc96f5f4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["03276b2744036b1b19a7a2dd4b74ba7bc484f107"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}