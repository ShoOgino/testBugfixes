{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","sourceNew":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \" this is some text  here is a  link  and \" +\n            \"another  link . \" +\n            \"This is an entity: & plus a <.  Here is an &.  \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(gold, builder.toString());\n  }\n\n","sourceOld":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \" this is some text  here is a  link  and \" +\n            \"another  link . \" +\n            \"This is an entity: & plus a <.  Here is an &.  \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(gold, builder.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3a908bacd530957eaa6d2dfebdd534afd9ac60e","date":1327209646,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","sourceNew":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \"\\nthis is some text\\n here is a link and \" +\n            \"another link. \" +\n            \"This is an entity: & plus a <.  Here is an &. \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(\"'\" + builder.toString() + \"' is not equal to '\" + gold + \"'\",\n                 gold, builder.toString());\n  }\n\n","sourceOld":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \" this is some text  here is a  link  and \" +\n            \"another  link . \" +\n            \"This is an entity: & plus a <.  Here is an &.  \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(gold, builder.toString());\n  }\n\n","bugFix":["4c44bea1987a18a21296b9e31f3ecb773a6b14f0","9a5d21cb8e4aa4634e67bbdf56393d526d86f446"],"bugIntro":["ab081a78869a616f9c93e5b2f3ec2f99c2f7f741"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"579dc30b5d3235c34cda518b2b6018d71a61879c","date":1327235122,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","sourceNew":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \"\\nthis is some text\\n here is a link and \" +\n            \"another link. \" +\n            \"This is an entity: & plus a <.  Here is an &. \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(\"'\" + builder.toString() + \"' is not equal to '\" + gold + \"'\",\n                 gold, builder.toString());\n  }\n\n","sourceOld":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \" this is some text  here is a  link  and \" +\n            \"another  link . \" +\n            \"This is an entity: & plus a <.  Here is an &.  \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(gold, builder.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","sourceNew":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \"\\nthis is some text\\n here is a link and \" +\n            \"another link. \" +\n            \"This is an entity: & plus a <.  Here is an &. \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(\"'\" + builder.toString() + \"' is not equal to '\" + gold + \"'\",\n                 gold, builder.toString());\n  }\n\n","sourceOld":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \" this is some text  here is a  link  and \" +\n            \"another  link . \" +\n            \"This is an entity: & plus a <.  Here is an &.  \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(gold, builder.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#test().mjava","sourceNew":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \"\\nthis is some text\\n here is a link and \" +\n            \"another link. \" +\n            \"This is an entity: & plus a <.  Here is an &. \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(\"'\" + builder.toString() + \"' is not equal to '\" + gold + \"'\",\n                 gold, builder.toString());\n  }\n\n","sourceOld":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \"\\nthis is some text\\n here is a link and \" +\n            \"another link. \" +\n            \"This is an entity: & plus a <.  Here is an &. \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertEquals(\"'\" + builder.toString() + \"' is not equal to '\" + gold + \"'\",\n                 gold, builder.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["0f080986da691a3bba7b757f43ab72cdc82b57ce","e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"e3a908bacd530957eaa6d2dfebdd534afd9ac60e":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"579dc30b5d3235c34cda518b2b6018d71a61879c":["0f080986da691a3bba7b757f43ab72cdc82b57ce","e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"e3a908bacd530957eaa6d2dfebdd534afd9ac60e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","579dc30b5d3235c34cda518b2b6018d71a61879c"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","e3a908bacd530957eaa6d2dfebdd534afd9ac60e","579dc30b5d3235c34cda518b2b6018d71a61879c"],"579dc30b5d3235c34cda518b2b6018d71a61879c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","579dc30b5d3235c34cda518b2b6018d71a61879c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}