{"path":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"691402e9d7a4757afc8d5a0a33c01eb12df85dbf","date":1317010529,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30dfe992ae5d5091a3699663b96c4a2651355448","date":1327550332,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"78a55f24d9b493c2a1cecf79f1d78279062b545b","date":1327688152,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4ff6359cfceacdd0ecfedb188530a79af7603e4","date":1328989217,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"21591922fb4db3e2a6ffb2cb342b3d61c053a973","date":1340761680,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"adc2388a5005de25370273411bc713d0ff722805","date":1345719157,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(null, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f8b5ba78b252ff57082799d1b662ad3d677ecfc","date":1347893162,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"localhost\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":["f9a98541130dbb2dd570f39bd89ced65760cad80"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f9a98541130dbb2dd570f39bd89ced65760cad80","date":1355032328,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":["8f8b5ba78b252ff57082799d1b662ad3d677ecfc"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69439d0df009e0bb0038d1e427159f449dd670d","date":1355704683,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", true, 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", true, 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92a4da96826f502cf1a56a096929b37ce73e523a","date":1374584011,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, true, 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", true, 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, true, 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", \"0\", true, 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7035935aa89f6951286e9005cbeb16e89a082a2","date":1385258396,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, true, 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, true, 10000, 10000, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0b5db1c20d7a379233ae3955449a9e42caef007","date":1394048511,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96ea64d994d340044e0d57aeb6a5871539d10ca5","date":1394225445,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","bed62fe6383040eaff2ec720cdc55bb1462c61da"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e25c332f157326faecb36f76173033c1284776a5","date":1414729852,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      String solrHome = SolrJettyTestBase.legacyExampleCollection1SolrHome();\n\n      zkController.uploadToZK(new File(solrHome + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(solrHome + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(ExternalPaths.EXAMPLE_HOME + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c8a2521797f14d1d697a17a0069f5619cd211a6","date":1424361535,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    boolean testFinished = false;\n    CoreContainer cc = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      \n      zkController = new ZkController(cc, server.getZkAddress(),\n          TIMEOUT, 10000, \"127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n            \n            @Override\n            public List<CoreDescriptor> getCurrentDescriptors() {\n              // do nothing\n              return null;\n            }\n          });\n\n      String solrHome = SolrJettyTestBase.legacyExampleCollection1SolrHome();\n\n      zkController.uploadToZK(new File(solrHome + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n      \n      // uploading again should overwrite, not error...\n      zkController.uploadToZK(new File(solrHome + \"/collection1/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n      testFinished = true;\n    } finally {\n      if (!testFinished & zkController != null) {\n        zkController.getZkClient().printLayoutToStdOut();\n      }\n      \n      if (zkController != null) {\n        zkController.close();\n      }\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","a69439d0df009e0bb0038d1e427159f449dd670d"],"001b25b42373b22a52f399dbf072f1224632e8e6":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","adc2388a5005de25370273411bc713d0ff722805"],"96ea64d994d340044e0d57aeb6a5871539d10ca5":["a7035935aa89f6951286e9005cbeb16e89a082a2","a0b5db1c20d7a379233ae3955449a9e42caef007"],"adc2388a5005de25370273411bc713d0ff722805":["21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["a0b5db1c20d7a379233ae3955449a9e42caef007","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a69439d0df009e0bb0038d1e427159f449dd670d","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a69439d0df009e0bb0038d1e427159f449dd670d":["f9a98541130dbb2dd570f39bd89ced65760cad80"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["0d22ac6a4146774c1bc8400160fc0b6150294e92","30dfe992ae5d5091a3699663b96c4a2651355448"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["691402e9d7a4757afc8d5a0a33c01eb12df85dbf","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"f9a98541130dbb2dd570f39bd89ced65760cad80":["8f8b5ba78b252ff57082799d1b662ad3d677ecfc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"691402e9d7a4757afc8d5a0a33c01eb12df85dbf":["c26f00b574427b55127e869b935845554afde1fa"],"a7035935aa89f6951286e9005cbeb16e89a082a2":["92a4da96826f502cf1a56a096929b37ce73e523a"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"78a55f24d9b493c2a1cecf79f1d78279062b545b":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","30dfe992ae5d5091a3699663b96c4a2651355448"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["37a0f60745e53927c4c876cfe5b5a58170f0646c","92a4da96826f502cf1a56a096929b37ce73e523a"],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["c4ff6359cfceacdd0ecfedb188530a79af7603e4"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["a0b5db1c20d7a379233ae3955449a9e42caef007"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["e25c332f157326faecb36f76173033c1284776a5"],"92a4da96826f502cf1a56a096929b37ce73e523a":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"8f8b5ba78b252ff57082799d1b662ad3d677ecfc":["adc2388a5005de25370273411bc713d0ff722805"],"407687e67faf6e1f02a211ca078d8e3eed631027":["8f8b5ba78b252ff57082799d1b662ad3d677ecfc","f9a98541130dbb2dd570f39bd89ced65760cad80"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["691402e9d7a4757afc8d5a0a33c01eb12df85dbf","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"e25c332f157326faecb36f76173033c1284776a5":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0b5db1c20d7a379233ae3955449a9e42caef007":["a7035935aa89f6951286e9005cbeb16e89a082a2"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"30dfe992ae5d5091a3699663b96c4a2651355448":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a69439d0df009e0bb0038d1e427159f449dd670d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c4ff6359cfceacdd0ecfedb188530a79af7603e4","21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["691402e9d7a4757afc8d5a0a33c01eb12df85dbf"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["92a4da96826f502cf1a56a096929b37ce73e523a","a7035935aa89f6951286e9005cbeb16e89a082a2"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c4ff6359cfceacdd0ecfedb188530a79af7603e4":["30dfe992ae5d5091a3699663b96c4a2651355448"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6c8a2521797f14d1d697a17a0069f5619cd211a6"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"001b25b42373b22a52f399dbf072f1224632e8e6":[],"96ea64d994d340044e0d57aeb6a5871539d10ca5":[],"adc2388a5005de25370273411bc713d0ff722805":["001b25b42373b22a52f399dbf072f1224632e8e6","8f8b5ba78b252ff57082799d1b662ad3d677ecfc"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"c26f00b574427b55127e869b935845554afde1fa":["691402e9d7a4757afc8d5a0a33c01eb12df85dbf"],"a69439d0df009e0bb0038d1e427159f449dd670d":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","37a0f60745e53927c4c876cfe5b5a58170f0646c","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["fd92b8bcc88e969302510acf77bd6970da3994c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"f9a98541130dbb2dd570f39bd89ced65760cad80":["a69439d0df009e0bb0038d1e427159f449dd670d","407687e67faf6e1f02a211ca078d8e3eed631027"],"691402e9d7a4757afc8d5a0a33c01eb12df85dbf":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a7035935aa89f6951286e9005cbeb16e89a082a2":["96ea64d994d340044e0d57aeb6a5871539d10ca5","a0b5db1c20d7a379233ae3955449a9e42caef007","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"78a55f24d9b493c2a1cecf79f1d78279062b545b":[],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["001b25b42373b22a52f399dbf072f1224632e8e6","adc2388a5005de25370273411bc713d0ff722805","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"8f8b5ba78b252ff57082799d1b662ad3d677ecfc":["f9a98541130dbb2dd570f39bd89ced65760cad80","407687e67faf6e1f02a211ca078d8e3eed631027"],"92a4da96826f502cf1a56a096929b37ce73e523a":["a7035935aa89f6951286e9005cbeb16e89a082a2","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["78a55f24d9b493c2a1cecf79f1d78279062b545b"],"e25c332f157326faecb36f76173033c1284776a5":["6c8a2521797f14d1d697a17a0069f5619cd211a6"],"a0b5db1c20d7a379233ae3955449a9e42caef007":["96ea64d994d340044e0d57aeb6a5871539d10ca5","2a0f5bb79c600763ffe7b8141df59a3169d31e48","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"f4abec28b874149a7223e32cc7a01704c27790de":["e25c332f157326faecb36f76173033c1284776a5"],"30dfe992ae5d5091a3699663b96c4a2651355448":["fd92b8bcc88e969302510acf77bd6970da3994c4","78a55f24d9b493c2a1cecf79f1d78279062b545b","c4ff6359cfceacdd0ecfedb188530a79af7603e4"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","92a4da96826f502cf1a56a096929b37ce73e523a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","30dfe992ae5d5091a3699663b96c4a2651355448"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"c4ff6359cfceacdd0ecfedb188530a79af7603e4":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","001b25b42373b22a52f399dbf072f1224632e8e6","96ea64d994d340044e0d57aeb6a5871539d10ca5","fd92b8bcc88e969302510acf77bd6970da3994c4","78a55f24d9b493c2a1cecf79f1d78279062b545b","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","fe33227f6805edab2036cbb80645cc4e2d1fa424","74f45af4339b0daf7a95c820ab88c1aea74fbce0","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}