{"path":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","commits":[{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the \"Solr Home\" directory.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader loader )\n  {\n    if( instanceDir == null ) {\n      instanceDir = SolrResourceLoader.locateInstanceDir();\n    }\n    this.instanceDir = normalizeDir(instanceDir);\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    \n    if( loader == null ) {\n      // NB5.5/win32/1.5_10: need to go thru local var or classLoader is not set!\n      loader = Thread.currentThread().getContextClassLoader();\n    }\n    \n    File f = new File(instanceDir + \"lib/\");\n    if (f.canRead() && f.isDirectory()) {\n      File[] jarFiles = f.listFiles();\n      URL[] jars = new URL[jarFiles.length];\n      try {\n        for (int j = 0; j < jarFiles.length; j++) {\n          jars[j] = jarFiles[j].toURI().toURL();\n          log.info(\"Adding '\" + jars[j].toString() + \"' to Solr classloader\");\n        }\n        loader = URLClassLoader.newInstance(jars, loader);\n      } catch (MalformedURLException e) {\n        SolrException.log(log,\"Can't construct solr lib class loader\", e);\n      }\n    }\n    this.classLoader = loader;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"048361614025800e582bfc7a7b0329dc6fd6a95e","date":1196999392,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the \"Solr Home\" directory.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent )\n  {\n    if( instanceDir == null )\n      instanceDir = SolrResourceLoader.locateInstanceDir();\n    this.instanceDir = normalizeDir(instanceDir);\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    this.classLoader = createClassLoader(new File(this.instanceDir + \"lib/\"), parent);\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the \"Solr Home\" directory.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader loader )\n  {\n    if( instanceDir == null ) {\n      instanceDir = SolrResourceLoader.locateInstanceDir();\n    }\n    this.instanceDir = normalizeDir(instanceDir);\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    \n    if( loader == null ) {\n      // NB5.5/win32/1.5_10: need to go thru local var or classLoader is not set!\n      loader = Thread.currentThread().getContextClassLoader();\n    }\n    \n    File f = new File(instanceDir + \"lib/\");\n    if (f.canRead() && f.isDirectory()) {\n      File[] jarFiles = f.listFiles();\n      URL[] jars = new URL[jarFiles.length];\n      try {\n        for (int j = 0; j < jarFiles.length; j++) {\n          jars[j] = jarFiles[j].toURI().toURL();\n          log.info(\"Adding '\" + jars[j].toString() + \"' to Solr classloader\");\n        }\n        loader = URLClassLoader.newInstance(jars, loader);\n      } catch (MalformedURLException e) {\n        SolrException.log(log,\"Can't construct solr lib class loader\", e);\n      }\n    }\n    this.classLoader = loader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"25fe4a044a812e68f0bfb673e4bffd6f0c73b180","date":1202250102,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the \"Solr Home\" directory.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent )\n  {\n    if( instanceDir == null ) {\n      this.instanceDir = SolrResourceLoader.locateInstanceDir();\n    } else{\n      this.instanceDir = normalizeDir(instanceDir);\n    }\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    this.classLoader = createClassLoader(new File(this.instanceDir + \"lib/\"), parent);\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the \"Solr Home\" directory.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent )\n  {\n    if( instanceDir == null )\n      instanceDir = SolrResourceLoader.locateInstanceDir();\n    this.instanceDir = normalizeDir(instanceDir);\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    this.classLoader = createClassLoader(new File(this.instanceDir + \"lib/\"), parent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6dc6ab6902f8f70ae43365947ccf44c25986906d","date":1204603577,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent )\n  {\n    if( instanceDir == null ) {\n      this.instanceDir = SolrResourceLoader.locateInstanceDir();\n    } else{\n      this.instanceDir = normalizeDir(instanceDir);\n    }\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    this.classLoader = createClassLoader(new File(this.instanceDir + \"lib/\"), parent);\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the \"Solr Home\" directory.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent )\n  {\n    if( instanceDir == null ) {\n      this.instanceDir = SolrResourceLoader.locateInstanceDir();\n    } else{\n      this.instanceDir = normalizeDir(instanceDir);\n    }\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    this.classLoader = createClassLoader(new File(this.instanceDir + \"lib/\"), parent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1ddc2fd411184c85d1baed1e8d24840a151d6ba1","date":1219508719,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent )\n  {\n    this(instanceDir, parent, null);\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent )\n  {\n    if( instanceDir == null ) {\n      this.instanceDir = SolrResourceLoader.locateInstanceDir();\n    } else{\n      this.instanceDir = normalizeDir(instanceDir);\n    }\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    this.classLoader = createClassLoader(new File(this.instanceDir + \"lib/\"), parent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader).mjava","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent )\n  {\n    this(instanceDir, parent, null);\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent )\n  {\n    this(instanceDir, parent, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"048361614025800e582bfc7a7b0329dc6fd6a95e":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6dc6ab6902f8f70ae43365947ccf44c25986906d":["25fe4a044a812e68f0bfb673e4bffd6f0c73b180"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1ddc2fd411184c85d1baed1e8d24840a151d6ba1"],"25fe4a044a812e68f0bfb673e4bffd6f0c73b180":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"1ddc2fd411184c85d1baed1e8d24840a151d6ba1":["6dc6ab6902f8f70ae43365947ccf44c25986906d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"048361614025800e582bfc7a7b0329dc6fd6a95e":["25fe4a044a812e68f0bfb673e4bffd6f0c73b180"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6dc6ab6902f8f70ae43365947ccf44c25986906d":["1ddc2fd411184c85d1baed1e8d24840a151d6ba1"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"25fe4a044a812e68f0bfb673e4bffd6f0c73b180":["6dc6ab6902f8f70ae43365947ccf44c25986906d"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"1ddc2fd411184c85d1baed1e8d24840a151d6ba1":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}