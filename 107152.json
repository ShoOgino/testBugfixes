{"path":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","commits":[{"id":"153701bb378c0b9de64258596aed764ae5775910","date":1360430359,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit1\");\n    indexDir2 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit2\");\n\n    if (indexDir1.exists()) {\n      FileUtils.deleteDirectory(indexDir1);\n    }\n    assertTrue(\"Failed to mkdirs indexDir1 for split index\", indexDir1.mkdirs());\n\n    if (indexDir2.exists()) {\n      FileUtils.deleteDirectory(indexDir2);\n    }\n    assertTrue(\"Failed to mkdirs indexDir2 for split index\", indexDir2.mkdirs());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7ba13b1e8eb54daafdac40183a898b820ac9f73b","date":1365684595,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit1\");\n    indexDir2 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit2\");\n    indexDir3 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit3\");\n\n    if (indexDir1.exists()) {\n      FileUtils.deleteDirectory(indexDir1);\n    }\n    assertTrue(\"Failed to mkdirs indexDir1 for split index\", indexDir1.mkdirs());\n\n    if (indexDir2.exists()) {\n      FileUtils.deleteDirectory(indexDir2);\n    }\n    assertTrue(\"Failed to mkdirs indexDir2 for split index\", indexDir2.mkdirs());\n\n    if (indexDir3.exists()) {\n      FileUtils.deleteDirectory(indexDir3);\n    }\n    assertTrue(\"Failed to mkdirs indexDir3 for split index\", indexDir3.mkdirs());\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit1\");\n    indexDir2 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit2\");\n\n    if (indexDir1.exists()) {\n      FileUtils.deleteDirectory(indexDir1);\n    }\n    assertTrue(\"Failed to mkdirs indexDir1 for split index\", indexDir1.mkdirs());\n\n    if (indexDir2.exists()) {\n      FileUtils.deleteDirectory(indexDir2);\n    }\n    assertTrue(\"Failed to mkdirs indexDir2 for split index\", indexDir2.mkdirs());\n  }\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    File tempDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    indexDir1 = new File(tempDir, this.getClass().getName() + \"_testSplit1\");\n    indexDir2 = new File(tempDir, this.getClass().getName() + \"_testSplit2\");\n    indexDir3 = new File(tempDir, this.getClass().getName() + \"_testSplit3\");\n\n    if (indexDir1.exists()) {\n      FileUtils.deleteDirectory(indexDir1);\n    }\n    assertTrue(\"Failed to mkdirs indexDir1 for split index\", indexDir1.mkdirs());\n\n    if (indexDir2.exists()) {\n      FileUtils.deleteDirectory(indexDir2);\n    }\n    assertTrue(\"Failed to mkdirs indexDir2 for split index\", indexDir2.mkdirs());\n\n    if (indexDir3.exists()) {\n      FileUtils.deleteDirectory(indexDir3);\n    }\n    assertTrue(\"Failed to mkdirs indexDir3 for split index\", indexDir3.mkdirs());\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit1\");\n    indexDir2 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit2\");\n    indexDir3 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit3\");\n\n    if (indexDir1.exists()) {\n      FileUtils.deleteDirectory(indexDir1);\n    }\n    assertTrue(\"Failed to mkdirs indexDir1 for split index\", indexDir1.mkdirs());\n\n    if (indexDir2.exists()) {\n      FileUtils.deleteDirectory(indexDir2);\n    }\n    assertTrue(\"Failed to mkdirs indexDir2 for split index\", indexDir2.mkdirs());\n\n    if (indexDir3.exists()) {\n      FileUtils.deleteDirectory(indexDir3);\n    }\n    assertTrue(\"Failed to mkdirs indexDir3 for split index\", indexDir3.mkdirs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit1\");\n    indexDir2 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit2\");\n    indexDir3 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit3\");\n\n    if (indexDir1.exists()) {\n      FileUtils.deleteDirectory(indexDir1);\n    }\n    assertTrue(\"Failed to mkdirs indexDir1 for split index\", indexDir1.mkdirs());\n\n    if (indexDir2.exists()) {\n      FileUtils.deleteDirectory(indexDir2);\n    }\n    assertTrue(\"Failed to mkdirs indexDir2 for split index\", indexDir2.mkdirs());\n\n    if (indexDir3.exists()) {\n      FileUtils.deleteDirectory(indexDir3);\n    }\n    assertTrue(\"Failed to mkdirs indexDir3 for split index\", indexDir3.mkdirs());\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit1\");\n    indexDir2 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit2\");\n    indexDir3 = new File(TEMP_DIR, this.getClass().getName()\n        + \"_testSplit3\");\n\n    if (indexDir1.exists()) {\n      FileUtils.deleteDirectory(indexDir1);\n    }\n    assertTrue(\"Failed to mkdirs indexDir1 for split index\", indexDir1.mkdirs());\n\n    if (indexDir2.exists()) {\n      FileUtils.deleteDirectory(indexDir2);\n    }\n    assertTrue(\"Failed to mkdirs indexDir2 for split index\", indexDir2.mkdirs());\n\n    if (indexDir3.exists()) {\n      FileUtils.deleteDirectory(indexDir3);\n    }\n    assertTrue(\"Failed to mkdirs indexDir3 for split index\", indexDir3.mkdirs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    File dataDir = createTempDir();\n    indexDir1 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit1\");\n    indexDir2 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit2\");\n    indexDir3 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit3\");\n\n    if (indexDir1.exists()) {\n      FileUtils.deleteDirectory(indexDir1);\n    }\n    assertTrue(\"Failed to mkdirs indexDir1 for split index\", indexDir1.mkdirs());\n\n    if (indexDir2.exists()) {\n      FileUtils.deleteDirectory(indexDir2);\n    }\n    assertTrue(\"Failed to mkdirs indexDir2 for split index\", indexDir2.mkdirs());\n\n    if (indexDir3.exists()) {\n      FileUtils.deleteDirectory(indexDir3);\n    }\n    assertTrue(\"Failed to mkdirs indexDir3 for split index\", indexDir3.mkdirs());\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    File tempDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    indexDir1 = new File(tempDir, this.getClass().getName() + \"_testSplit1\");\n    indexDir2 = new File(tempDir, this.getClass().getName() + \"_testSplit2\");\n    indexDir3 = new File(tempDir, this.getClass().getName() + \"_testSplit3\");\n\n    if (indexDir1.exists()) {\n      FileUtils.deleteDirectory(indexDir1);\n    }\n    assertTrue(\"Failed to mkdirs indexDir1 for split index\", indexDir1.mkdirs());\n\n    if (indexDir2.exists()) {\n      FileUtils.deleteDirectory(indexDir2);\n    }\n    assertTrue(\"Failed to mkdirs indexDir2 for split index\", indexDir2.mkdirs());\n\n    if (indexDir3.exists()) {\n      FileUtils.deleteDirectory(indexDir3);\n    }\n    assertTrue(\"Failed to mkdirs indexDir3 for split index\", indexDir3.mkdirs());\n  }\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = createTempDir(\"_testSplit1\");\n    indexDir2 = createTempDir(\"_testSplit2\");\n    indexDir3 = createTempDir(\"_testSplit3\");\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    File dataDir = createTempDir();\n    indexDir1 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit1\");\n    indexDir2 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit2\");\n    indexDir3 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit3\");\n\n    if (indexDir1.exists()) {\n      FileUtils.deleteDirectory(indexDir1);\n    }\n    assertTrue(\"Failed to mkdirs indexDir1 for split index\", indexDir1.mkdirs());\n\n    if (indexDir2.exists()) {\n      FileUtils.deleteDirectory(indexDir2);\n    }\n    assertTrue(\"Failed to mkdirs indexDir2 for split index\", indexDir2.mkdirs());\n\n    if (indexDir3.exists()) {\n      FileUtils.deleteDirectory(indexDir3);\n    }\n    assertTrue(\"Failed to mkdirs indexDir3 for split index\", indexDir3.mkdirs());\n  }\n\n","bugFix":["153701bb378c0b9de64258596aed764ae5775910","bb1f22cfa77230b5f05b7784feae5367f6bbb488","7ba13b1e8eb54daafdac40183a898b820ac9f73b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = createTempDir(\"_testSplit1\");\n    indexDir2 = createTempDir(\"_testSplit2\");\n    indexDir3 = createTempDir(\"_testSplit3\");\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit1\");\n    indexDir2 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit2\");\n    indexDir3 = new File(dataDir, this.getClass().getName()\n        + \"_testSplit3\");\n\n    if (indexDir1.exists()) {\n      FileUtils.deleteDirectory(indexDir1);\n    }\n    assertTrue(\"Failed to mkdirs indexDir1 for split index\", indexDir1.mkdirs());\n\n    if (indexDir2.exists()) {\n      FileUtils.deleteDirectory(indexDir2);\n    }\n    assertTrue(\"Failed to mkdirs indexDir2 for split index\", indexDir2.mkdirs());\n\n    if (indexDir3.exists()) {\n      FileUtils.deleteDirectory(indexDir3);\n    }\n    assertTrue(\"Failed to mkdirs indexDir3 for split index\", indexDir3.mkdirs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = createTempDir(\"_testSplit1\").toFile();\n    indexDir2 = createTempDir(\"_testSplit2\").toFile();\n    indexDir3 = createTempDir(\"_testSplit3\").toFile();\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = createTempDir(\"_testSplit1\");\n    indexDir2 = createTempDir(\"_testSplit2\");\n    indexDir3 = createTempDir(\"_testSplit3\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373","date":1592489632,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = createTempDir(\"_testSplit1\").toFile();\n    indexDir2 = createTempDir(\"_testSplit2\").toFile();\n    indexDir3 = createTempDir(\"_testSplit3\").toFile();\n    h.getCoreContainer().getAllowPaths().addAll(Set.of(indexDir1.toPath(), indexDir2.toPath(), indexDir3.toPath()));\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    indexDir1 = createTempDir(\"_testSplit1\").toFile();\n    indexDir2 = createTempDir(\"_testSplit2\").toFile();\n    indexDir3 = createTempDir(\"_testSplit3\").toFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373":["f4abec28b874149a7223e32cc7a01704c27790de"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["7ba13b1e8eb54daafdac40183a898b820ac9f73b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"153701bb378c0b9de64258596aed764ae5775910":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"d0d579490a72f2e6297eaa648940611234c57cf1":["7ba13b1e8eb54daafdac40183a898b820ac9f73b"],"7ba13b1e8eb54daafdac40183a898b820ac9f73b":["153701bb378c0b9de64258596aed764ae5775910"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c75c0fad5a9b6633e919ce2e9f96e1f0c496d373"]},"commit2Childs":{"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["153701bb378c0b9de64258596aed764ae5775910"],"153701bb378c0b9de64258596aed764ae5775910":["7ba13b1e8eb54daafdac40183a898b820ac9f73b"],"f4abec28b874149a7223e32cc7a01704c27790de":["c75c0fad5a9b6633e919ce2e9f96e1f0c496d373"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"7ba13b1e8eb54daafdac40183a898b820ac9f73b":["1416f9d09d016a6894cd17e1caac137dad2bba59","d0d579490a72f2e6297eaa648940611234c57cf1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}