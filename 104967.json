{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#getOrAddNode(String,List[Node]).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#getOrAddNode(String,List[Node]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#getOrAddNode(String,List[Node]).mjava","sourceNew":"    private Node getOrAddNode(String xpathName, List<Node> searchList ) {\n      for (Node n : searchList)\n        if (n.xpathName.equals(xpathName)) return n;\n      // new territory! add a new node for this Xpath bitty\n      Node n = new Node(xpathName, this); // a minimal Node initalization\n      Matcher m = ATTRIB_PRESENT_WITHVAL.matcher(xpathName);\n      if (m.find()) {\n        n.name = m.group(1);\n        int start = m.start(2);\n        while (true) {\n          HashMap<String, String> attribs = new HashMap<String, String>();\n          if (!m.find(start))\n            break;\n          attribs.put(m.group(3), m.group(5));\n          start = m.end(6);\n          if (n.attribAndValues == null)\n            n.attribAndValues = new ArrayList<Map.Entry<String, String>>();\n          n.attribAndValues.addAll(attribs.entrySet());\n        }\n      }\n      searchList.add(n);\n      return n;\n    }\n\n","sourceOld":"    private Node getOrAddNode(String xpathName, List<Node> searchList ) {\n      for (Node n : searchList)\n        if (n.xpathName.equals(xpathName)) return n;\n      // new territory! add a new node for this Xpath bitty\n      Node n = new Node(xpathName, this); // a minimal Node initalization\n      Matcher m = ATTRIB_PRESENT_WITHVAL.matcher(xpathName);\n      if (m.find()) {\n        n.name = m.group(1);\n        int start = m.start(2);\n        while (true) {\n          HashMap<String, String> attribs = new HashMap<String, String>();\n          if (!m.find(start))\n            break;\n          attribs.put(m.group(3), m.group(5));\n          start = m.end(6);\n          if (n.attribAndValues == null)\n            n.attribAndValues = new ArrayList<Map.Entry<String, String>>();\n          n.attribAndValues.addAll(attribs.entrySet());\n        }\n      }\n      searchList.add(n);\n      return n;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#getOrAddNode(String,List[Node]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#getOrAddNode(String,List[Node]).mjava","sourceNew":"    private Node getOrAddNode(String xpathName, List<Node> searchList ) {\n      for (Node n : searchList)\n        if (n.xpathName.equals(xpathName)) return n;\n      // new territory! add a new node for this Xpath bitty\n      Node n = new Node(xpathName, this); // a minimal Node initalization\n      Matcher m = ATTRIB_PRESENT_WITHVAL.matcher(xpathName);\n      if (m.find()) {\n        n.name = m.group(1);\n        int start = m.start(2);\n        while (true) {\n          HashMap<String, String> attribs = new HashMap<String, String>();\n          if (!m.find(start))\n            break;\n          attribs.put(m.group(3), m.group(5));\n          start = m.end(6);\n          if (n.attribAndValues == null)\n            n.attribAndValues = new ArrayList<Map.Entry<String, String>>();\n          n.attribAndValues.addAll(attribs.entrySet());\n        }\n      }\n      searchList.add(n);\n      return n;\n    }\n\n","sourceOld":"    private Node getOrAddNode(String xpathName, List<Node> searchList ) {\n      for (Node n : searchList)\n        if (n.xpathName.equals(xpathName)) return n;\n      // new territory! add a new node for this Xpath bitty\n      Node n = new Node(xpathName, this); // a minimal Node initalization\n      Matcher m = ATTRIB_PRESENT_WITHVAL.matcher(xpathName);\n      if (m.find()) {\n        n.name = m.group(1);\n        int start = m.start(2);\n        while (true) {\n          HashMap<String, String> attribs = new HashMap<String, String>();\n          if (!m.find(start))\n            break;\n          attribs.put(m.group(3), m.group(5));\n          start = m.end(6);\n          if (n.attribAndValues == null)\n            n.attribAndValues = new ArrayList<Map.Entry<String, String>>();\n          n.attribAndValues.addAll(attribs.entrySet());\n        }\n      }\n      searchList.add(n);\n      return n;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#getOrAddNode(String,List[Node]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#getOrAddNode(String,List[Node]).mjava","sourceNew":"    private Node getOrAddNode(String xpathName, List<Node> searchList ) {\n      for (Node n : searchList)\n        if (n.xpathName.equals(xpathName)) return n;\n      // new territory! add a new node for this Xpath bitty\n      Node n = new Node(xpathName, this); // a minimal Node initalization\n      Matcher m = ATTRIB_PRESENT_WITHVAL.matcher(xpathName);\n      if (m.find()) {\n        n.name = m.group(1);\n        int start = m.start(2);\n        while (true) {\n          HashMap<String, String> attribs = new HashMap<>();\n          if (!m.find(start))\n            break;\n          attribs.put(m.group(3), m.group(5));\n          start = m.end(6);\n          if (n.attribAndValues == null)\n            n.attribAndValues = new ArrayList<>();\n          n.attribAndValues.addAll(attribs.entrySet());\n        }\n      }\n      searchList.add(n);\n      return n;\n    }\n\n","sourceOld":"    private Node getOrAddNode(String xpathName, List<Node> searchList ) {\n      for (Node n : searchList)\n        if (n.xpathName.equals(xpathName)) return n;\n      // new territory! add a new node for this Xpath bitty\n      Node n = new Node(xpathName, this); // a minimal Node initalization\n      Matcher m = ATTRIB_PRESENT_WITHVAL.matcher(xpathName);\n      if (m.find()) {\n        n.name = m.group(1);\n        int start = m.start(2);\n        while (true) {\n          HashMap<String, String> attribs = new HashMap<String, String>();\n          if (!m.find(start))\n            break;\n          attribs.put(m.group(3), m.group(5));\n          start = m.end(6);\n          if (n.attribAndValues == null)\n            n.attribAndValues = new ArrayList<Map.Entry<String, String>>();\n          n.attribAndValues.addAll(attribs.entrySet());\n        }\n      }\n      searchList.add(n);\n      return n;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9","date":1419431639,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#getOrAddNode(String,List[Node]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#getOrAddNode(String,List[Node]).mjava","sourceNew":"    private Node getOrAddNode(String xpathName, List<Node> searchList ) {\n      for (Node n : searchList)\n        if (n.xpathName.equals(xpathName)) return n;\n      // new territory! add a new node for this Xpath bitty\n      Node n = new Node(xpathName, this); // a minimal Node initialization\n      Matcher m = ATTRIB_PRESENT_WITHVAL.matcher(xpathName);\n      if (m.find()) {\n        n.name = m.group(1);\n        int start = m.start(2);\n        while (true) {\n          HashMap<String, String> attribs = new HashMap<>();\n          if (!m.find(start))\n            break;\n          attribs.put(m.group(3), m.group(5));\n          start = m.end(6);\n          if (n.attribAndValues == null)\n            n.attribAndValues = new ArrayList<>();\n          n.attribAndValues.addAll(attribs.entrySet());\n        }\n      }\n      searchList.add(n);\n      return n;\n    }\n\n","sourceOld":"    private Node getOrAddNode(String xpathName, List<Node> searchList ) {\n      for (Node n : searchList)\n        if (n.xpathName.equals(xpathName)) return n;\n      // new territory! add a new node for this Xpath bitty\n      Node n = new Node(xpathName, this); // a minimal Node initalization\n      Matcher m = ATTRIB_PRESENT_WITHVAL.matcher(xpathName);\n      if (m.find()) {\n        n.name = m.group(1);\n        int start = m.start(2);\n        while (true) {\n          HashMap<String, String> attribs = new HashMap<>();\n          if (!m.find(start))\n            break;\n          attribs.put(m.group(3), m.group(5));\n          start = m.end(6);\n          if (n.attribAndValues == null)\n            n.attribAndValues = new ArrayList<>();\n          n.attribAndValues.addAll(attribs.entrySet());\n        }\n      }\n      searchList.add(n);\n      return n;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#getOrAddNode(String,List[Node]).mjava","sourceNew":null,"sourceOld":"    private Node getOrAddNode(String xpathName, List<Node> searchList ) {\n      for (Node n : searchList)\n        if (n.xpathName.equals(xpathName)) return n;\n      // new territory! add a new node for this Xpath bitty\n      Node n = new Node(xpathName, this); // a minimal Node initialization\n      Matcher m = ATTRIB_PRESENT_WITHVAL.matcher(xpathName);\n      if (m.find()) {\n        n.name = m.group(1);\n        int start = m.start(2);\n        while (true) {\n          HashMap<String, String> attribs = new HashMap<>();\n          if (!m.find(start))\n            break;\n          attribs.put(m.group(3), m.group(5));\n          start = m.end(6);\n          if (n.attribAndValues == null)\n            n.attribAndValues = new ArrayList<>();\n          n.attribAndValues.addAll(attribs.entrySet());\n        }\n      }\n      searchList.add(n);\n      return n;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}