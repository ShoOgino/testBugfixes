{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/configuration/StorageConfigurator#StorageConfigurator().mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/configuration/StorageConfigurator#StorageConfigurator().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/configuration/StorageConfigurator#StorageConfigurator().mjava","sourceNew":"    private StorageConfigurator() { \n        InputStream stream = StorageConfigurator.class \n                .getResourceAsStream(\"/lucenestorage.properties.xml\"); \n        Properties properties = new Properties(); \n        try { \n            properties.loadFromXML(stream); \n \n        } catch (Exception e) { \n            throw new StorageConfigurationError(\"Could not load properties\", e); \n        } \n        this.storageBufferSize = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.buffersize\")); \n        this.storagepersistFactor = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.persistFactor\")); \n        this.recover = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover\")); \n        this.keepRecoveredFiles = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover.keepFiles\")); \n        this.storageDirectory = properties \n                .getProperty(\"gdata.server.storage.lucene.directory\"); \n        this.indexOptimizeInterval = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.optimizeInterval\")); \n        this.ramDirectory = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.directory.ramDirectory\"));\n    } \n\n","sourceOld":"    private StorageConfigurator() { \n        InputStream stream = StorageConfigurator.class \n                .getResourceAsStream(\"/lucenestorage.properties.xml\"); \n        Properties properties = new Properties(); \n        try { \n            properties.loadFromXML(stream); \n \n        } catch (Exception e) { \n            throw new StorageConfigurationError(\"Could not load properties\", e); \n        } \n        this.storageBufferSize = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.buffersize\")); \n        this.storagepersistFactor = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.persistFactor\")); \n        this.recover = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover\")); \n        this.keepRecoveredFiles = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover.keepFiles\")); \n        this.storageDirectory = properties \n                .getProperty(\"gdata.server.storage.lucene.directory\"); \n        this.indexOptimizeInterval = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.optimizeInterval\")); \n        this.ramDirectory = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.directory.ramDirectory\"));\n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/lucenestorage/configuration/StorageConfigurator#StorageConfigurator().mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/configuration/StorageConfigurator#StorageConfigurator().mjava","sourceNew":"    private StorageConfigurator() { \n        InputStream stream = StorageConfigurator.class \n                .getResourceAsStream(\"/lucenestorage.properties.xml\"); \n        Properties properties = new Properties(); \n        try { \n            properties.loadFromXML(stream); \n \n        } catch (Exception e) { \n            throw new StorageConfigurationError(\"Could not load properties\", e); \n        } \n        this.storageBufferSize = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.buffersize\")); \n        this.storagepersistFactor = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.persistFactor\")); \n        this.recover = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover\")); \n        this.keepRecoveredFiles = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover.keepFiles\")); \n        this.storageDirectory = properties \n                .getProperty(\"gdata.server.storage.lucene.directory\"); \n        this.indexOptimizeInterval = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.optimizeInterval\")); \n        this.ramDirectory = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.directory.ramDirectory\"));\n    } \n\n","sourceOld":"    private StorageConfigurator() { \n        InputStream stream = StorageConfigurator.class \n                .getResourceAsStream(\"/lucenestorage.properties.xml\"); \n        Properties properties = new Properties(); \n        try { \n            properties.loadFromXML(stream); \n \n        } catch (Exception e) { \n            throw new StorageConfigurationError(\"Could not load properties\", e); \n        } \n        this.storageBufferSize = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.buffersize\")); \n        this.storagepersistFactor = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.persistFactor\")); \n        this.recover = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover\")); \n        this.keepRecoveredFiles = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover.keepFiles\")); \n        this.storageDirectory = properties \n                .getProperty(\"gdata.server.storage.lucene.directory\"); \n        this.indexOptimizeInterval = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.optimizeInterval\")); \n        this.ramDirectory = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.directory.ramDirectory\"));\n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}