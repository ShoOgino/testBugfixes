{"path":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"/dev/null","sourceNew":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n    interrupt();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"/dev/null","sourceNew":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n    interrupt();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"/dev/null","sourceNew":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n    interrupt();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da06537e53565fd025b935c20eb079cd179180d8","date":1328994226,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","sourceNew":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n  }\n\n","sourceOld":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n    interrupt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c76806dcdb4841b4f71ecfe9e9e95147f7201f2","date":1337787106,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","sourceNew":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n    log.warn(\"Stopping recovery for core \" + coreName + \" zkNodeName=\" + coreZkNodeName);\n  }\n\n","sourceOld":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3599646b4d4c346cf74d334813488b8b337b5bf5","date":1337790261,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","sourceNew":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n    log.warn(\"Stopping recovery for core \" + coreName + \" zkNodeName=\" + coreZkNodeName);\n  }\n\n","sourceOld":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6","date":1346692465,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","sourceNew":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n    log.warn(\"Stopping recovery for zkNodeName=\" + coreZkNodeName + \"core=\" + coreName );\n  }\n\n","sourceOld":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n    log.warn(\"Stopping recovery for core \" + coreName + \" zkNodeName=\" + coreZkNodeName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","sourceNew":"  // make sure any threads stop retrying\n  @Override\n  public void close() {\n    close = true;\n    log.warn(\"Stopping recovery for zkNodeName=\" + coreZkNodeName + \"core=\" + coreName );\n  }\n\n","sourceOld":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n    log.warn(\"Stopping recovery for zkNodeName=\" + coreZkNodeName + \"core=\" + coreName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","sourceNew":"  // make sure any threads stop retrying\n  @Override\n  public void close() {\n    close = true;\n    log.warn(\"Stopping recovery for zkNodeName=\" + coreZkNodeName + \"core=\" + coreName );\n  }\n\n","sourceOld":"  // make sure any threads stop retrying\n  public void close() {\n    close = true;\n    log.warn(\"Stopping recovery for zkNodeName=\" + coreZkNodeName + \"core=\" + coreName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fee8f787196eb664b953b851d18c52f0d8c9e157","date":1395630304,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","sourceNew":"  // make sure any threads stop retrying\n  @Override\n  public void close() {\n    close = true;\n    try {\n      prevSendPreRecoveryHttpUriRequest.abort();\n    } catch (NullPointerException e) {\n      // okay\n    }\n    log.warn(\"Stopping recovery for zkNodeName=\" + coreZkNodeName + \"core=\" + coreName);\n  }\n\n","sourceOld":"  // make sure any threads stop retrying\n  @Override\n  public void close() {\n    close = true;\n    log.warn(\"Stopping recovery for zkNodeName=\" + coreZkNodeName + \"core=\" + coreName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e568c41898fe51e779879e5c3c531440ef797d1","date":1405324019,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","sourceNew":"  // make sure any threads stop retrying\n  @Override\n  public void close() {\n    close = true;\n    try {\n      prevSendPreRecoveryHttpUriRequest.abort();\n    } catch (NullPointerException e) {\n      // okay\n    }\n    log.warn(\"Stopping recovery for core={} coreNodeName={}\", coreName, coreZkNodeName);\n  }\n\n","sourceOld":"  // make sure any threads stop retrying\n  @Override\n  public void close() {\n    close = true;\n    try {\n      prevSendPreRecoveryHttpUriRequest.abort();\n    } catch (NullPointerException e) {\n      // okay\n    }\n    log.warn(\"Stopping recovery for zkNodeName=\" + coreZkNodeName + \"core=\" + coreName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"610f5499a87a7113d53e5b621b616890f002e9f1","date":1450873010,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","sourceNew":"  // make sure any threads stop retrying\n  @Override\n  public void close() {\n    close = true;\n    if (prevSendPreRecoveryHttpUriRequest != null) {\n      prevSendPreRecoveryHttpUriRequest.abort();\n    }\n    LOG.warn(\"Stopping recovery for core=[{}] coreNodeName=[{}]\", coreName, coreZkNodeName);\n  }\n\n","sourceOld":"  // make sure any threads stop retrying\n  @Override\n  public void close() {\n    close = true;\n    try {\n      prevSendPreRecoveryHttpUriRequest.abort();\n    } catch (NullPointerException e) {\n      // okay\n    }\n    log.warn(\"Stopping recovery for core={} coreNodeName={}\", coreName, coreZkNodeName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7392b75d2c2f2aecf31188732a0764fe0dc74ade","date":1489420141,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","sourceNew":"  // make sure any threads stop retrying\n  @Override\n  final public void close() {\n    close = true;\n    if (prevSendPreRecoveryHttpUriRequest != null) {\n      prevSendPreRecoveryHttpUriRequest.abort();\n    }\n    LOG.warn(\"Stopping recovery for core=[{}] coreNodeName=[{}]\", coreName, coreZkNodeName);\n  }\n\n","sourceOld":"  // make sure any threads stop retrying\n  @Override\n  public void close() {\n    close = true;\n    if (prevSendPreRecoveryHttpUriRequest != null) {\n      prevSendPreRecoveryHttpUriRequest.abort();\n    }\n    LOG.warn(\"Stopping recovery for core=[{}] coreNodeName=[{}]\", coreName, coreZkNodeName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#close().mjava","sourceNew":"  // make sure any threads stop retrying\n  @Override\n  final public void close() {\n    close = true;\n    if (prevSendPreRecoveryHttpUriRequest != null) {\n      prevSendPreRecoveryHttpUriRequest.abort();\n    }\n    log.warn(\"Stopping recovery for core=[{}] coreNodeName=[{}]\", coreName, coreZkNodeName);\n  }\n\n","sourceOld":"  // make sure any threads stop retrying\n  @Override\n  final public void close() {\n    close = true;\n    if (prevSendPreRecoveryHttpUriRequest != null) {\n      prevSendPreRecoveryHttpUriRequest.abort();\n    }\n    LOG.warn(\"Stopping recovery for core=[{}] coreNodeName=[{}]\", coreName, coreZkNodeName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6","7530de27b87b961b51f01bd1299b7004d46e8823"],"610f5499a87a7113d53e5b621b616890f002e9f1":["7e568c41898fe51e779879e5c3c531440ef797d1"],"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6":["5c76806dcdb4841b4f71ecfe9e9e95147f7201f2"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"7e568c41898fe51e779879e5c3c531440ef797d1":["fee8f787196eb664b953b851d18c52f0d8c9e157"],"fee8f787196eb664b953b851d18c52f0d8c9e157":["7530de27b87b961b51f01bd1299b7004d46e8823"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"5c76806dcdb4841b4f71ecfe9e9e95147f7201f2":["da06537e53565fd025b935c20eb079cd179180d8"],"da06537e53565fd025b935c20eb079cd179180d8":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3599646b4d4c346cf74d334813488b8b337b5bf5":["da06537e53565fd025b935c20eb079cd179180d8","5c76806dcdb4841b4f71ecfe9e9e95147f7201f2"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7392b75d2c2f2aecf31188732a0764fe0dc74ade":["610f5499a87a7113d53e5b621b616890f002e9f1"],"7530de27b87b961b51f01bd1299b7004d46e8823":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["7392b75d2c2f2aecf31188732a0764fe0dc74ade"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"610f5499a87a7113d53e5b621b616890f002e9f1":["7392b75d2c2f2aecf31188732a0764fe0dc74ade"],"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"7e568c41898fe51e779879e5c3c531440ef797d1":["610f5499a87a7113d53e5b621b616890f002e9f1"],"fee8f787196eb664b953b851d18c52f0d8c9e157":["7e568c41898fe51e779879e5c3c531440ef797d1"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"5c76806dcdb4841b4f71ecfe9e9e95147f7201f2":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6","3599646b4d4c346cf74d334813488b8b337b5bf5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"da06537e53565fd025b935c20eb079cd179180d8":["5c76806dcdb4841b4f71ecfe9e9e95147f7201f2","3599646b4d4c346cf74d334813488b8b337b5bf5"],"3599646b4d4c346cf74d334813488b8b337b5bf5":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","da06537e53565fd025b935c20eb079cd179180d8"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fee8f787196eb664b953b851d18c52f0d8c9e157"],"7392b75d2c2f2aecf31188732a0764fe0dc74ade":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","3599646b4d4c346cf74d334813488b8b337b5bf5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}