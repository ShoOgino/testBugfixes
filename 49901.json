{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils.Cell#Cell(Cell,double,double,double,double,int).mjava","commits":[{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils.Cell#Cell(Cell,double,double,double,double,int).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/TestGeoUtils.Cell#Cell(Cell,double,double,double,double,int).mjava","sourceNew":"    public Cell(Cell parent,\n                double minLon, double minLat,\n                double maxLon, double maxLat,\n                int splitCount) {\n      assert maxLon >= minLon;\n      assert maxLat >= minLat;\n      this.parent = parent;\n      this.minLon = minLon;\n      this.minLat = minLat;\n      this.maxLon = maxLon;\n      this.maxLat = maxLat;\n      this.cellID = nextCellID++;\n      this.splitCount = splitCount;\n    }\n\n","sourceOld":"    public Cell(Cell parent,\n                double minLon, double minLat,\n                double maxLon, double maxLat,\n                int splitCount) {\n      assert maxLon >= minLon;\n      assert maxLat >= minLat;\n      this.parent = parent;\n      this.minLon = minLon;\n      this.minLat = minLat;\n      this.maxLon = maxLon;\n      this.maxLat = maxLat;\n      this.cellID = nextCellID++;\n      this.splitCount = splitCount;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils.Cell#Cell(Cell,double,double,double,double,int).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/TestGeoUtils.Cell#Cell(Cell,double,double,double,double,int).mjava","sourceNew":"    public Cell(Cell parent,\n                double minLon, double minLat,\n                double maxLon, double maxLat,\n                int splitCount) {\n      assert maxLon >= minLon;\n      assert maxLat >= minLat;\n      this.parent = parent;\n      this.minLon = minLon;\n      this.minLat = minLat;\n      this.maxLon = maxLon;\n      this.maxLat = maxLat;\n      this.cellID = nextCellID++;\n      this.splitCount = splitCount;\n    }\n\n","sourceOld":"    public Cell(Cell parent,\n                double minLon, double minLat,\n                double maxLon, double maxLat,\n                int splitCount) {\n      assert maxLon >= minLon;\n      assert maxLat >= minLat;\n      this.parent = parent;\n      this.minLon = minLon;\n      this.minLat = minLat;\n      this.maxLon = maxLon;\n      this.maxLat = maxLat;\n      this.cellID = nextCellID++;\n      this.splitCount = splitCount;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3","date":1458680048,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils.Cell#Cell(Cell,double,double,double,double,int).mjava","sourceNew":null,"sourceOld":"    public Cell(Cell parent,\n                double minLon, double minLat,\n                double maxLon, double maxLat,\n                int splitCount) {\n      assert maxLon >= minLon;\n      assert maxLat >= minLat;\n      this.parent = parent;\n      this.minLon = minLon;\n      this.minLat = minLat;\n      this.maxLon = maxLon;\n      this.maxLat = maxLat;\n      this.cellID = nextCellID++;\n      this.splitCount = splitCount;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","937923083e4d137932336fc80f3d78758ff698a6"],"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3":["937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cb4875e9db9b77346c36b7fe0d4b8759a1e095d3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cb4875e9db9b77346c36b7fe0d4b8759a1e095d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}