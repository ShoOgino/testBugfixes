{"path":"solr/core/src/java/org/apache/solr/util/SafeXMLParsing#parseConfigXML(Logger,ResourceLoader,String).mjava","commits":[{"id":"575ba8a7e01f51915a430b8c67d2461f0703feaa","date":1529234129,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SafeXMLParsing#parseConfigXML(Logger,ResourceLoader,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Parses a config file from ResourceLoader. Xinclude and external entities are enabled, but cannot escape the resource loader. */\n  public static Document parseConfigXML(Logger log, ResourceLoader loader, String file) throws SAXException, IOException {\n    try (InputStream in = loader.openResource(file)) {\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setValidating(false);\n      dbf.setNamespaceAware(true);\n      trySetDOMFeature(dbf, XMLConstants.FEATURE_SECURE_PROCESSING, true);\n      try {\n        dbf.setXIncludeAware(true);\n      } catch (UnsupportedOperationException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"XML parser doesn't support XInclude option\", e);\n      }\n      \n      final DocumentBuilder db = dbf.newDocumentBuilder();\n      db.setEntityResolver(new SystemIdResolver(loader));\n      db.setErrorHandler(new XMLErrorLogger(log));\n      return db.parse(in, SystemIdResolver.createSystemIdFromResourceName(file));\n    } catch (ParserConfigurationException pce) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"XML parser cannot be configured\", pce);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SafeXMLParsing#parseConfigXML(Logger,ResourceLoader,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Parses a config file from ResourceLoader. Xinclude and external entities are enabled, but cannot escape the resource loader. */\n  public static Document parseConfigXML(Logger log, ResourceLoader loader, String file) throws SAXException, IOException {\n    try (InputStream in = loader.openResource(file)) {\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setValidating(false);\n      dbf.setNamespaceAware(true);\n      trySetDOMFeature(dbf, XMLConstants.FEATURE_SECURE_PROCESSING, true);\n      try {\n        dbf.setXIncludeAware(true);\n      } catch (UnsupportedOperationException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"XML parser doesn't support XInclude option\", e);\n      }\n      \n      final DocumentBuilder db = dbf.newDocumentBuilder();\n      db.setEntityResolver(new SystemIdResolver(loader));\n      db.setErrorHandler(new XMLErrorLogger(log));\n      return db.parse(in, SystemIdResolver.createSystemIdFromResourceName(file));\n    } catch (ParserConfigurationException pce) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"XML parser cannot be configured\", pce);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SafeXMLParsing#parseConfigXML(Logger,ResourceLoader,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Parses a config file from ResourceLoader. Xinclude and external entities are enabled, but cannot escape the resource loader. */\n  public static Document parseConfigXML(Logger log, ResourceLoader loader, String file) throws SAXException, IOException {\n    try (InputStream in = loader.openResource(file)) {\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setValidating(false);\n      dbf.setNamespaceAware(true);\n      trySetDOMFeature(dbf, XMLConstants.FEATURE_SECURE_PROCESSING, true);\n      try {\n        dbf.setXIncludeAware(true);\n      } catch (UnsupportedOperationException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"XML parser doesn't support XInclude option\", e);\n      }\n      \n      final DocumentBuilder db = dbf.newDocumentBuilder();\n      db.setEntityResolver(new SystemIdResolver(loader));\n      db.setErrorHandler(new XMLErrorLogger(log));\n      return db.parse(in, SystemIdResolver.createSystemIdFromResourceName(file));\n    } catch (ParserConfigurationException pce) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"XML parser cannot be configured\", pce);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","575ba8a7e01f51915a430b8c67d2461f0703feaa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"575ba8a7e01f51915a430b8c67d2461f0703feaa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575ba8a7e01f51915a430b8c67d2461f0703feaa"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","575ba8a7e01f51915a430b8c67d2461f0703feaa"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","575ba8a7e01f51915a430b8c67d2461f0703feaa","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"575ba8a7e01f51915a430b8c67d2461f0703feaa":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}