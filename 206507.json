{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#findMatchingFiles(Directory,Set[String]).mjava","commits":[{"id":"d2dee33619431ada2a7a07f5fe2dbd94bac6a460","date":1337274029,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#findMatchingFiles(Directory,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  // nocommit move elsewhere?  IndexFileNames?\n  public static List<String> findMatchingFiles(Directory dir, Set<String> namesOrPatterns) {\n    // nocommit need more efficient way to do this?\n    List<String> files = new ArrayList<String>();\n    final String[] existingFiles;\n    try {\n      existingFiles = dir.listAll();\n    } catch (IOException ioe) {\n      // nocommit maybe just throw IOE...? not sure how far up we'd have to change sigs...\n      throw new RuntimeException(ioe);\n    }\n    for(String nameOrPattern : namesOrPatterns) {\n      boolean exists = false;\n      try {\n        exists = dir.fileExists(nameOrPattern);\n      } catch (IOException ioe) {\n        // nocommit maybe just throw IOE...?\n        // Ignore\n      }\n      if (exists) {\n        files.add(nameOrPattern);\n      } else {\n        for(String file : existingFiles) {\n          if (Pattern.matches(nameOrPattern, file)) {\n            files.add(file);\n          }\n        }\n      }\n    }\n\n    return files;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a8b14bc4241c302311422d5c6f7627f8febb86e","date":1337291675,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#findMatchingFiles(String,Directory,Set[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#findMatchingFiles(Directory,Set[String]).mjava","sourceNew":"  // nocommit move elsewhere?  IndexFileNames?\n  public static List<String> findMatchingFiles(String segmentName, Directory dir, Set<String> namesOrPatterns) {\n    // nocommit need more efficient way to do this?\n    List<String> files = new ArrayList<String>();\n    final String[] existingFiles;\n    try {\n      existingFiles = dir.listAll();\n    } catch (IOException ioe) {\n      // nocommit maybe just throw IOE...? not sure how far up we'd have to change sigs...\n      throw new RuntimeException(ioe);\n    }\n    List<Pattern> compiledPatterns = new ArrayList<Pattern>();\n    for(String nameOrPattern : namesOrPatterns) {\n      boolean exists = false;\n      try {\n        exists = dir.fileExists(nameOrPattern);\n      } catch (IOException ioe) {\n        // nocommit maybe just throw IOE...?\n        // Ignore\n      }\n      if (exists) {\n        files.add(nameOrPattern);\n      } else {\n        // nocommit can i test whether the regexp matches only 1 string...?  maybe... make into autamaton and union them all....?\n        compiledPatterns.add(Pattern.compile(nameOrPattern));\n      }\n    }\n\n    // nocommit this is DOG SLOW: try TestBoolean2 w/ seed 1F7F3638C719C665\n    for(String file : existingFiles) {\n      if (file.startsWith(segmentName)) {\n        for(Pattern pattern : compiledPatterns) {\n          if (pattern.matcher(file).matches()) {\n            files.add(file);\n            break;\n          }\n        }\n      }\n    }\n\n    return files;\n  }\n\n","sourceOld":"  // nocommit move elsewhere?  IndexFileNames?\n  public static List<String> findMatchingFiles(Directory dir, Set<String> namesOrPatterns) {\n    // nocommit need more efficient way to do this?\n    List<String> files = new ArrayList<String>();\n    final String[] existingFiles;\n    try {\n      existingFiles = dir.listAll();\n    } catch (IOException ioe) {\n      // nocommit maybe just throw IOE...? not sure how far up we'd have to change sigs...\n      throw new RuntimeException(ioe);\n    }\n    for(String nameOrPattern : namesOrPatterns) {\n      boolean exists = false;\n      try {\n        exists = dir.fileExists(nameOrPattern);\n      } catch (IOException ioe) {\n        // nocommit maybe just throw IOE...?\n        // Ignore\n      }\n      if (exists) {\n        files.add(nameOrPattern);\n      } else {\n        for(String file : existingFiles) {\n          if (Pattern.matches(nameOrPattern, file)) {\n            files.add(file);\n          }\n        }\n      }\n    }\n\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a8b14bc4241c302311422d5c6f7627f8febb86e":["d2dee33619431ada2a7a07f5fe2dbd94bac6a460"],"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4a8b14bc4241c302311422d5c6f7627f8febb86e":[],"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["4a8b14bc4241c302311422d5c6f7627f8febb86e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2dee33619431ada2a7a07f5fe2dbd94bac6a460","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4a8b14bc4241c302311422d5c6f7627f8febb86e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}