{"path":"solr/core/src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(SolrResourceLoader,String,String,Node).mjava","commits":[{"id":"c028362918f0b06bbdb243dfd35486218b89dbde","date":1343391303,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(SolrResourceLoader,String,String,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(ResourceLoader,String,String,Node).mjava","sourceNew":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( SolrResourceLoader loader, String name, String className, Node node ) throws Exception\n  {\n    return loader.newInstance(className, pluginClassType, getDefaultPackages());\n  }\n\n","sourceOld":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( ResourceLoader loader, String name, String className, Node node ) throws Exception\n  {\n    return loader.newInstance(className, pluginClassType, getDefaultPackages());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(SolrResourceLoader,String,String,Node).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( SolrResourceLoader loader, String name, String className, Node node ) throws Exception\n  {\n    return loader.newInstance(className, pluginClassType, getDefaultPackages());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(SolrResourceLoader,String,String,Node).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( SolrResourceLoader loader, String name, String className, Node node ) throws Exception\n  {\n    return loader.newInstance(className, pluginClassType, getDefaultPackages());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"124e3f7e11a7f7f24a209763dbff8f43b69ae82e","date":1347302888,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(SolrResourceLoader,String,String,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(SolrResourceLoader,String,String,Node).mjava","sourceNew":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   * <pre class=\"prettyprint\">\n   * {@code\n   * <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   * </plugin>}\n   * </pre>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( SolrResourceLoader loader, String name, String className, Node node ) throws Exception\n  {\n    return loader.newInstance(className, pluginClassType, getDefaultPackages());\n  }\n\n","sourceOld":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( SolrResourceLoader loader, String name, String className, Node node ) throws Exception\n  {\n    return loader.newInstance(className, pluginClassType, getDefaultPackages());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2ed9b72e5fa27a7bd4857f222ca815341979d4a","date":1594879524,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(SolrClassLoader,String,String,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(SolrResourceLoader,String,String,Node).mjava","sourceNew":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   * <pre class=\"prettyprint\">\n   * {@code\n   * <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   * </plugin>}\n   * </pre>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create(SolrClassLoader loader, String name, String className, Node node ) throws Exception\n  {\n    return loader.newInstance(className, pluginClassType, getDefaultPackages());\n  }\n\n","sourceOld":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   * <pre class=\"prettyprint\">\n   * {@code\n   * <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   * </plugin>}\n   * </pre>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( SolrResourceLoader loader, String name, String className, Node node ) throws Exception\n  {\n    return loader.newInstance(className, pluginClassType, getDefaultPackages());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b2ed9b72e5fa27a7bd4857f222ca815341979d4a":["124e3f7e11a7f7f24a209763dbff8f43b69ae82e"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c028362918f0b06bbdb243dfd35486218b89dbde"],"c028362918f0b06bbdb243dfd35486218b89dbde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c028362918f0b06bbdb243dfd35486218b89dbde"],"124e3f7e11a7f7f24a209763dbff8f43b69ae82e":["c028362918f0b06bbdb243dfd35486218b89dbde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b2ed9b72e5fa27a7bd4857f222ca815341979d4a"]},"commit2Childs":{"b2ed9b72e5fa27a7bd4857f222ca815341979d4a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"c028362918f0b06bbdb243dfd35486218b89dbde":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","124e3f7e11a7f7f24a209763dbff8f43b69ae82e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","c028362918f0b06bbdb243dfd35486218b89dbde","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"124e3f7e11a7f7f24a209763dbff8f43b69ae82e":["b2ed9b72e5fa27a7bd4857f222ca815341979d4a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}