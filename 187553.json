{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2#testDeleteDocs().mjava","commits":[{"id":"224b88b42379406127ec6498137f4bc4cab4abbc","date":1237488704,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2#testDeleteDocs().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testDeleteDocs() throws Exception {\n    List rows = new ArrayList();\n    rows.add(createMap(\"id\", \"1\", \"desc\", \"one\"));\n    rows.add(createMap(\"id\", \"2\", \"desc\", \"two\"));\n    rows.add(createMap(\"id\", \"3\", \"desc\", \"two\", \"$deleteDocById\", \"2\"));\n    MockDataSource.setIterator(\"select * from x\", rows.iterator());\n\n    super.runFullImport(dataConfigForSkipTransform);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertQ(req(\"id:2\"), \"//*[@numFound='0']\");\n    assertQ(req(\"id:3\"), \"//*[@numFound='1']\");\n\n    MockDataSource.clearCache();\n    rows = new ArrayList();\n    rows.add(createMap(\"id\", \"1\", \"desc\", \"one\"));\n    rows.add(createMap(\"id\", \"2\", \"desc\", \"one\"));\n    rows.add(createMap(\"id\", \"3\", \"desc\", \"two\", \"$deleteDocByQuery\", \"desc:one\"));\n    MockDataSource.setIterator(\"select * from x\", rows.iterator());\n\n    super.runFullImport(dataConfigForSkipTransform);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='0']\");\n    assertQ(req(\"id:2\"), \"//*[@numFound='0']\");\n    assertQ(req(\"id:3\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1b604003611eabbb4d3f0fb1f89d3b6a017f8faa","1b604003611eabbb4d3f0fb1f89d3b6a017f8faa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2#testDeleteDocs().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2#testDeleteDocs().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testDeleteDocs() throws Exception {\n    List rows = new ArrayList();\n    rows.add(createMap(\"id\", \"1\", \"desc\", \"one\"));\n    rows.add(createMap(\"id\", \"2\", \"desc\", \"two\"));\n    rows.add(createMap(\"id\", \"3\", \"desc\", \"two\", \"$deleteDocById\", \"2\"));\n    MockDataSource.setIterator(\"select * from x\", rows.iterator());\n\n    super.runFullImport(dataConfigForSkipTransform);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertQ(req(\"id:2\"), \"//*[@numFound='0']\");\n    assertQ(req(\"id:3\"), \"//*[@numFound='1']\");\n\n    MockDataSource.clearCache();\n    rows = new ArrayList();\n    rows.add(createMap(\"id\", \"1\", \"desc\", \"one\"));\n    rows.add(createMap(\"id\", \"2\", \"desc\", \"one\"));\n    rows.add(createMap(\"id\", \"3\", \"desc\", \"two\", \"$deleteDocByQuery\", \"desc:one\"));\n    MockDataSource.setIterator(\"select * from x\", rows.iterator());\n\n    super.runFullImport(dataConfigForSkipTransform);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='0']\");\n    assertQ(req(\"id:2\"), \"//*[@numFound='0']\");\n    assertQ(req(\"id:3\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testDeleteDocs() throws Exception {\n    List rows = new ArrayList();\n    rows.add(createMap(\"id\", \"1\", \"desc\", \"one\"));\n    rows.add(createMap(\"id\", \"2\", \"desc\", \"two\"));\n    rows.add(createMap(\"id\", \"3\", \"desc\", \"two\", \"$deleteDocById\", \"2\"));\n    MockDataSource.setIterator(\"select * from x\", rows.iterator());\n\n    super.runFullImport(dataConfigForSkipTransform);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertQ(req(\"id:2\"), \"//*[@numFound='0']\");\n    assertQ(req(\"id:3\"), \"//*[@numFound='1']\");\n\n    MockDataSource.clearCache();\n    rows = new ArrayList();\n    rows.add(createMap(\"id\", \"1\", \"desc\", \"one\"));\n    rows.add(createMap(\"id\", \"2\", \"desc\", \"one\"));\n    rows.add(createMap(\"id\", \"3\", \"desc\", \"two\", \"$deleteDocByQuery\", \"desc:one\"));\n    MockDataSource.setIterator(\"select * from x\", rows.iterator());\n\n    super.runFullImport(dataConfigForSkipTransform);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='0']\");\n    assertQ(req(\"id:2\"), \"//*[@numFound='0']\");\n    assertQ(req(\"id:3\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"224b88b42379406127ec6498137f4bc4cab4abbc":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["224b88b42379406127ec6498137f4bc4cab4abbc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"224b88b42379406127ec6498137f4bc4cab4abbc":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["224b88b42379406127ec6498137f4bc4cab4abbc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}