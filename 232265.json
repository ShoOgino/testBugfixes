{"path":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#idf(int,int).mjava","commits":[{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#idf(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#idf(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#idf(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60e3b31201fd9bb5d73884faa5a38c63ea9239f2","date":1315756041,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#idf(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0f3cee3d20b0c786e6fca20539454262e29edcab"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0f3cee3d20b0c786e6fca20539454262e29edcab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":[],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1291e4568eb7d9463d751627596ef14baf4c1603","0f3cee3d20b0c786e6fca20539454262e29edcab","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}