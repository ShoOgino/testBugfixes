{"path":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher.SolrDocumentStoredFieldVisitor#stringField(FieldInfo,byte[]).mjava","commits":[{"id":"4e7ba4f223712927a09f4dfb65a4c261d07ccc54","date":1544513757,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher.SolrDocumentStoredFieldVisitor#stringField(FieldInfo,byte[]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void stringField(FieldInfo fieldInfo, byte[] value) throws IOException {\n      Predicate<String> readAsBytes = ResultContext.READASBYTES.get();\n      if (readAsBytes != null && readAsBytes.test(fieldInfo.name)) {\n        final FieldType ft = new FieldType(TextField.TYPE_STORED);\n        ft.setStoreTermVectors(fieldInfo.hasVectors());\n        ft.setOmitNorms(fieldInfo.omitsNorms());\n        ft.setIndexOptions(fieldInfo.getIndexOptions());\n        doc.add(new StoredField(fieldInfo.name, new ByteArrayUtf8CharSequence(value, 0, value.length), ft));\n      } else {\n        super.stringField(fieldInfo, value);\n      }\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"500188ac33da6ce742a5b18858f34701ef16c77a","date":1558462722,"type":5,"author":"Namgyu Kim","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher.SolrDocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher.SolrDocumentStoredFieldVisitor#stringField(FieldInfo,byte[]).mjava","sourceNew":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      Predicate<String> readAsBytes = ResultContext.READASBYTES.get();\n      if (readAsBytes != null && readAsBytes.test(fieldInfo.name)) {\n        final FieldType ft = new FieldType(TextField.TYPE_STORED);\n        ft.setStoreTermVectors(fieldInfo.hasVectors());\n        ft.setOmitNorms(fieldInfo.omitsNorms());\n        ft.setIndexOptions(fieldInfo.getIndexOptions());\n        Objects.requireNonNull(value, \"String value should not be null\");\n        doc.add(new StoredField(fieldInfo.name, value, ft));\n      } else {\n        super.stringField(fieldInfo, value);\n      }\n\n    }\n\n","sourceOld":"    @Override\n    public void stringField(FieldInfo fieldInfo, byte[] value) throws IOException {\n      Predicate<String> readAsBytes = ResultContext.READASBYTES.get();\n      if (readAsBytes != null && readAsBytes.test(fieldInfo.name)) {\n        final FieldType ft = new FieldType(TextField.TYPE_STORED);\n        ft.setStoreTermVectors(fieldInfo.hasVectors());\n        ft.setOmitNorms(fieldInfo.omitsNorms());\n        ft.setIndexOptions(fieldInfo.getIndexOptions());\n        doc.add(new StoredField(fieldInfo.name, new ByteArrayUtf8CharSequence(value, 0, value.length), ft));\n      } else {\n        super.stringField(fieldInfo, value);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e7ba4f223712927a09f4dfb65a4c261d07ccc54":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"500188ac33da6ce742a5b18858f34701ef16c77a":["4e7ba4f223712927a09f4dfb65a4c261d07ccc54"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["500188ac33da6ce742a5b18858f34701ef16c77a"]},"commit2Childs":{"4e7ba4f223712927a09f4dfb65a4c261d07ccc54":["500188ac33da6ce742a5b18858f34701ef16c77a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e7ba4f223712927a09f4dfb65a4c261d07ccc54"],"500188ac33da6ce742a5b18858f34701ef16c77a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}