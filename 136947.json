{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag#getSolrQueryEscapingEvaluator().mjava","commits":[{"id":"15e2075af5402114e19af81f2bc2e047bb14c430","date":1237882189,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag#getSolrQueryEscapingEvaluator().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * <p/>Returns an <code>Evaluator</code> instance meant to be used for escaping reserved characters in Solr\n   * queries</p>\n   *\n   * @return an <code>Evaluator</code> instance capable of escaping reserved characters in solr queries.\n   *\n   * @see org.apache.solr.client.solrj.util.ClientUtils#escapeQueryChars(String)\n   */\n  public static Evaluator getSolrQueryEscapingEvaluator() {\n    return new Evaluator() {\n      public String evaluate(String expression, Context context) {\n        List l = parseParams(expression, context.getVariableResolver());\n        if (l.size() != 1) {\n          throw new DataImportHandlerException(SEVERE, \"'escapeQueryChars' must have at least one parameter \");\n        }\n        String s = l.get(0).toString();\n        return ClientUtils.escapeQueryChars(s);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag#getSolrQueryEscapingEvaluator().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EvaluatorBag#getSolrQueryEscapingEvaluator().mjava","sourceNew":"  /**\n   * <p/>Returns an <code>Evaluator</code> instance meant to be used for escaping reserved characters in Solr\n   * queries</p>\n   *\n   * @return an <code>Evaluator</code> instance capable of escaping reserved characters in solr queries.\n   *\n   * @see org.apache.solr.client.solrj.util.ClientUtils#escapeQueryChars(String)\n   */\n  public static Evaluator getSolrQueryEscapingEvaluator() {\n    return new Evaluator() {\n      public String evaluate(String expression, Context context) {\n        List l = parseParams(expression, context.getVariableResolver());\n        if (l.size() != 1) {\n          throw new DataImportHandlerException(SEVERE, \"'escapeQueryChars' must have at least one parameter \");\n        }\n        String s = l.get(0).toString();\n        return ClientUtils.escapeQueryChars(s);\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * <p/>Returns an <code>Evaluator</code> instance meant to be used for escaping reserved characters in Solr\n   * queries</p>\n   *\n   * @return an <code>Evaluator</code> instance capable of escaping reserved characters in solr queries.\n   *\n   * @see org.apache.solr.client.solrj.util.ClientUtils#escapeQueryChars(String)\n   */\n  public static Evaluator getSolrQueryEscapingEvaluator() {\n    return new Evaluator() {\n      public String evaluate(String expression, Context context) {\n        List l = parseParams(expression, context.getVariableResolver());\n        if (l.size() != 1) {\n          throw new DataImportHandlerException(SEVERE, \"'escapeQueryChars' must have at least one parameter \");\n        }\n        String s = l.get(0).toString();\n        return ClientUtils.escapeQueryChars(s);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"15e2075af5402114e19af81f2bc2e047bb14c430":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["15e2075af5402114e19af81f2bc2e047bb14c430"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["15e2075af5402114e19af81f2bc2e047bb14c430"],"15e2075af5402114e19af81f2bc2e047bb14c430":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}