{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#getEntry(ServerBaseEntry).mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#getEntry(ServerBaseEntry).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#getEntry(ServerBaseEntry).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#getEntry(org.apache.lucene.gdata.data.ServerBaseEntry)\n     */\n\n    public BaseEntry getEntry(ServerBaseEntry entry) throws StorageException {\n        if (entry == null)\n            throw new StorageException(\"can not retrieve entry -- is null\");\n        if (entry.getId() == null)\n            throw new StorageException(\"can not retrieve entry -- id is null\");\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Retrieving entry for entryID: \" + entry.getId());\n        DB4oEntry retval = getInternalEntry(entry.getId());\n        this.container.activate(retval.getEntry(),RENDER_ACTIVATION_DEPTH);\n        return clearDynamicElements(retval.getEntry());\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#getEntry(org.apache.lucene.gdata.data.ServerBaseEntry)\n     */\n\n    public BaseEntry getEntry(ServerBaseEntry entry) throws StorageException {\n        if (entry == null)\n            throw new StorageException(\"can not retrieve entry -- is null\");\n        if (entry.getId() == null)\n            throw new StorageException(\"can not retrieve entry -- id is null\");\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Retrieving entry for entryID: \" + entry.getId());\n        DB4oEntry retval = getInternalEntry(entry.getId());\n        this.container.activate(retval.getEntry(),RENDER_ACTIVATION_DEPTH);\n        return clearDynamicElements(retval.getEntry());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#getEntry(ServerBaseEntry).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#getEntry(ServerBaseEntry).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#getEntry(org.apache.lucene.gdata.data.ServerBaseEntry)\n     */\n\n    public BaseEntry getEntry(ServerBaseEntry entry) throws StorageException {\n        if (entry == null)\n            throw new StorageException(\"can not retrieve entry -- is null\");\n        if (entry.getId() == null)\n            throw new StorageException(\"can not retrieve entry -- id is null\");\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Retrieving entry for entryID: \" + entry.getId());\n        DB4oEntry retval = getInternalEntry(entry.getId());\n        this.container.activate(retval.getEntry(),RENDER_ACTIVATION_DEPTH);\n        return clearDynamicElements(retval.getEntry());\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#getEntry(org.apache.lucene.gdata.data.ServerBaseEntry)\n     */\n\n    public BaseEntry getEntry(ServerBaseEntry entry) throws StorageException {\n        if (entry == null)\n            throw new StorageException(\"can not retrieve entry -- is null\");\n        if (entry.getId() == null)\n            throw new StorageException(\"can not retrieve entry -- id is null\");\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Retrieving entry for entryID: \" + entry.getId());\n        DB4oEntry retval = getInternalEntry(entry.getId());\n        this.container.activate(retval.getEntry(),RENDER_ACTIVATION_DEPTH);\n        return clearDynamicElements(retval.getEntry());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}