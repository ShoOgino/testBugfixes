{"path":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","commits":[{"id":"20be168d828ac40d262f85364d02f15b491dd88b","date":1469725145,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","pathOld":"/dev/null","sourceNew":"  public void start() throws Exception {\n    if (kdc != null) kdc.start();\n    Configuration.setConfiguration(jaasConfiguration);\n    Krb5HttpClientBuilder.regenerateJaasConfiguration();\n    if (brokenLanguagesWithMiniKdc.contains(Locale.getDefault().getLanguage())) {\n      Locale.setDefault(Locale.US);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d32b6649cb8b86dcfb177002b69a5fffc93c4550","date":1470152205,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","sourceNew":"  public void start() throws Exception {\n    if (brokenLanguagesWithMiniKdc.contains(Locale.getDefault().getLanguage())) {\n      Locale.setDefault(Locale.US);\n    }\n\n    if (kdc != null) kdc.start();\n    Configuration.setConfiguration(jaasConfiguration);\n    Krb5HttpClientBuilder.regenerateJaasConfiguration();\n  }\n\n","sourceOld":"  public void start() throws Exception {\n    if (kdc != null) kdc.start();\n    Configuration.setConfiguration(jaasConfiguration);\n    Krb5HttpClientBuilder.regenerateJaasConfiguration();\n    if (brokenLanguagesWithMiniKdc.contains(Locale.getDefault().getLanguage())) {\n      Locale.setDefault(Locale.US);\n    }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","pathOld":"/dev/null","sourceNew":"  public void start() throws Exception {\n    if (brokenLanguagesWithMiniKdc.contains(Locale.getDefault().getLanguage())) {\n      Locale.setDefault(Locale.US);\n    }\n\n    if (kdc != null) kdc.start();\n    Configuration.setConfiguration(jaasConfiguration);\n    Krb5HttpClientBuilder.regenerateJaasConfiguration();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","pathOld":"/dev/null","sourceNew":"  public void start() throws Exception {\n    if (brokenLanguagesWithMiniKdc.contains(Locale.getDefault().getLanguage())) {\n      Locale.setDefault(Locale.US);\n    }\n\n    if (kdc != null) kdc.start();\n    Configuration.setConfiguration(jaasConfiguration);\n    Krb5HttpClientBuilder.regenerateJaasConfiguration();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","sourceNew":"  public void start() throws Exception {\n    if (brokenLanguagesWithMiniKdc.contains(Locale.getDefault().getLanguage())) {\n      Locale.setDefault(Locale.US);\n    }\n\n    File dir = null;\n    // There is time lag between selecting a port and trying to bind with it. It's possible that\n    // another service captures the port in between which'll result in BindException.\n    boolean bindException;\n    int numTries = 0;\n    do {\n      try {\n        bindException = false;\n\n        kdc = getKdc(workDir);\n        kdc.start();\n      } catch (BindException e) {\n        FileUtils.deleteDirectory(dir); // clean directory\n        numTries++;\n        if (numTries == 3) {\n          log.error(\"Failed setting up MiniKDC. Tried \" + numTries + \" times.\");\n          throw e;\n        }\n        log.error(\"BindException encountered when setting up MiniKdc. Trying again.\");\n        bindException = true;\n      }\n    } while (bindException);\n\n    Configuration.setConfiguration(jaasConfiguration);\n    Krb5HttpClientBuilder.regenerateJaasConfiguration();\n  }\n\n","sourceOld":"  public void start() throws Exception {\n    if (brokenLanguagesWithMiniKdc.contains(Locale.getDefault().getLanguage())) {\n      Locale.setDefault(Locale.US);\n    }\n\n    if (kdc != null) kdc.start();\n    Configuration.setConfiguration(jaasConfiguration);\n    Krb5HttpClientBuilder.regenerateJaasConfiguration();\n  }\n\n","bugFix":["d32b6649cb8b86dcfb177002b69a5fffc93c4550"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"278108e751e49b37b57a0659d00e2a444603dd6f","date":1544463994,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","sourceNew":"  public void start() throws Exception {\n    if (brokenLanguagesWithMiniKdc.contains(Locale.getDefault().getLanguage())) {\n      Locale.setDefault(Locale.US);\n    }\n\n    // There is time lag between selecting a port and trying to bind with it. It's possible that\n    // another service captures the port in between which'll result in BindException.\n    boolean bindException;\n    int numTries = 0;\n    do {\n      try {\n        bindException = false;\n\n        kdc = getKdc(workDir);\n        kdc.start();\n      } catch (BindException e) {\n        FileUtils.deleteDirectory(workDir); // clean directory\n        numTries++;\n        if (numTries == 3) {\n          log.error(\"Failed setting up MiniKDC. Tried \" + numTries + \" times.\");\n          throw e;\n        }\n        log.error(\"BindException encountered when setting up MiniKdc. Trying again.\");\n        bindException = true;\n      }\n    } while (bindException);\n\n    Configuration.setConfiguration(jaasConfiguration);\n    Krb5HttpClientBuilder.regenerateJaasConfiguration();\n  }\n\n","sourceOld":"  public void start() throws Exception {\n    if (brokenLanguagesWithMiniKdc.contains(Locale.getDefault().getLanguage())) {\n      Locale.setDefault(Locale.US);\n    }\n\n    File dir = null;\n    // There is time lag between selecting a port and trying to bind with it. It's possible that\n    // another service captures the port in between which'll result in BindException.\n    boolean bindException;\n    int numTries = 0;\n    do {\n      try {\n        bindException = false;\n\n        kdc = getKdc(workDir);\n        kdc.start();\n      } catch (BindException e) {\n        FileUtils.deleteDirectory(dir); // clean directory\n        numTries++;\n        if (numTries == 3) {\n          log.error(\"Failed setting up MiniKDC. Tried \" + numTries + \" times.\");\n          throw e;\n        }\n        log.error(\"BindException encountered when setting up MiniKdc. Trying again.\");\n        bindException = true;\n      }\n    } while (bindException);\n\n    Configuration.setConfiguration(jaasConfiguration);\n    Krb5HttpClientBuilder.regenerateJaasConfiguration();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/KerberosTestServices#start().mjava","sourceNew":"  public void start() throws Exception {\n    if (brokenLanguagesWithMiniKdc.contains(Locale.getDefault().getLanguage())) {\n      Locale.setDefault(Locale.US);\n    }\n\n    // There is time lag between selecting a port and trying to bind with it. It's possible that\n    // another service captures the port in between which'll result in BindException.\n    boolean bindException;\n    int numTries = 0;\n    do {\n      try {\n        bindException = false;\n\n        kdc = getKdc(workDir);\n        kdc.start();\n      } catch (BindException e) {\n        FileUtils.deleteDirectory(workDir); // clean directory\n        numTries++;\n        if (numTries == 3) {\n          log.error(\"Failed setting up MiniKDC. Tried {} times.\", numTries);\n          throw e;\n        }\n        log.error(\"BindException encountered when setting up MiniKdc. Trying again.\");\n        bindException = true;\n      }\n    } while (bindException);\n\n    Configuration.setConfiguration(jaasConfiguration);\n    Krb5HttpClientBuilder.regenerateJaasConfiguration();\n  }\n\n","sourceOld":"  public void start() throws Exception {\n    if (brokenLanguagesWithMiniKdc.contains(Locale.getDefault().getLanguage())) {\n      Locale.setDefault(Locale.US);\n    }\n\n    // There is time lag between selecting a port and trying to bind with it. It's possible that\n    // another service captures the port in between which'll result in BindException.\n    boolean bindException;\n    int numTries = 0;\n    do {\n      try {\n        bindException = false;\n\n        kdc = getKdc(workDir);\n        kdc.start();\n      } catch (BindException e) {\n        FileUtils.deleteDirectory(workDir); // clean directory\n        numTries++;\n        if (numTries == 3) {\n          log.error(\"Failed setting up MiniKDC. Tried \" + numTries + \" times.\");\n          throw e;\n        }\n        log.error(\"BindException encountered when setting up MiniKdc. Trying again.\");\n        bindException = true;\n      }\n    } while (bindException);\n\n    Configuration.setConfiguration(jaasConfiguration);\n    Krb5HttpClientBuilder.regenerateJaasConfiguration();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"278108e751e49b37b57a0659d00e2a444603dd6f":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"d32b6649cb8b86dcfb177002b69a5fffc93c4550":["20be168d828ac40d262f85364d02f15b491dd88b"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["d32b6649cb8b86dcfb177002b69a5fffc93c4550"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["278108e751e49b37b57a0659d00e2a444603dd6f"],"20be168d828ac40d262f85364d02f15b491dd88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d32b6649cb8b86dcfb177002b69a5fffc93c4550"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d32b6649cb8b86dcfb177002b69a5fffc93c4550"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"278108e751e49b37b57a0659d00e2a444603dd6f":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"d32b6649cb8b86dcfb177002b69a5fffc93c4550":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["278108e751e49b37b57a0659d00e2a444603dd6f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20be168d828ac40d262f85364d02f15b491dd88b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"20be168d828ac40d262f85364d02f15b491dd88b":["d32b6649cb8b86dcfb177002b69a5fffc93c4550"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}