{"path":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testJsonFacetWithAllQueryParams().mjava","commits":[{"id":"890d9da8d20886190a080e375f93341a779474e4","date":1549505353,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testJsonFacetWithAllQueryParams().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testJsonFacetWithAllQueryParams() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    // This subtest has its own scope so that it and its twin below can can have identical variable declarations (as they appear as separate snippets in the ref-guide)\n    {\n      //tag::solrj-json-facet-all-query-params[]\n      final ModifiableSolrParams params = new ModifiableSolrParams();\n      final SolrQuery query = new SolrQuery(\"*:*\");\n      query.setRows(1);\n      query.setParam(\"json.facet.avg_price\", \"\\\"avg(price)\\\"\");\n      query.setParam(\"json.facet.top_cats\", \"{type:terms,field:\\\"cat\\\",limit:3}\");\n      QueryResponse queryResponse = solrClient.query(COLLECTION_NAME, query);\n      //end::solrj-json-facet-all-query-params[]\n\n      NestableJsonFacet topLevelFacet = queryResponse.getJsonFacetingResponse();\n      assertResponseFoundNumDocs(queryResponse, 1);\n      assertHasFacetWithBucketValues(topLevelFacet, \"top_cats\",\n          new FacetBucket(\"electronics\", 12),\n          new FacetBucket(\"currency\", 4),\n          new FacetBucket(\"memory\", 3));\n    }\n\n    {\n      //tag::solrj-json-facet-all-query-params-equivalent[]\n      final JsonQueryRequest jsonQueryRequest = new JsonQueryRequest()\n          .setQuery(\"*:*\")\n          .setLimit(1)\n          .withStatFacet(\"avg_price\", \"avg(price)\")\n          .withFacet(\"top_cats\", new TermsFacetMap(\"cat\").setLimit(3));\n      QueryResponse queryResponse = jsonQueryRequest.process(solrClient, COLLECTION_NAME);\n      //end::solrj-json-facet-all-query-params-equivalent[]\n\n      NestableJsonFacet topLevelFacet = queryResponse.getJsonFacetingResponse();\n      assertResponseFoundNumDocs(queryResponse, 1);\n      assertHasFacetWithBucketValues(topLevelFacet, \"top_cats\",\n          new FacetBucket(\"electronics\", 12),\n          new FacetBucket(\"currency\", 4),\n          new FacetBucket(\"memory\", 3));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"890d9da8d20886190a080e375f93341a779474e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["890d9da8d20886190a080e375f93341a779474e4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["890d9da8d20886190a080e375f93341a779474e4"],"890d9da8d20886190a080e375f93341a779474e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}