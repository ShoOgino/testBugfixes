{"path":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","commits":[{"id":"058801f8673d53a5abac8088204860ec29a40f0d","date":1364178882,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","pathOld":"/dev/null","sourceNew":"  private void close(CacheValue val) {\n    try {\n      log.info(\"Closing directory: \" + val.path);\n      val.directory.close();\n    } catch (Throwable t) {\n      SolrException.log(log, \"Error closing directory\", t);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2","date":1389633998,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","sourceNew":"  private void close(CacheValue val) {\n    try {\n      log.info(\"Closing directory: \" + val.path);\n      val.directory.close();\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","sourceOld":"  private void close(CacheValue val) {\n    try {\n      log.info(\"Closing directory: \" + val.path);\n      val.directory.close();\n    } catch (Throwable t) {\n      SolrException.log(log, \"Error closing directory\", t);\n    }\n  }\n\n","bugFix":["058801f8673d53a5abac8088204860ec29a40f0d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"536b47681314488eb94706248be6047a3f142841","date":1450372090,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","sourceNew":"  private void close(CacheValue val) {\n    try {\n      log.info(\"Closing directory: \" + val.path);\n      val.directory.close();\n      assert ObjectReleaseTracker.release(val.directory);\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","sourceOld":"  private void close(CacheValue val) {\n    try {\n      log.info(\"Closing directory: \" + val.path);\n      val.directory.close();\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b56543f596b0fb9e599ff9517246da26137a738f","date":1458677396,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","sourceNew":"  private void close(CacheValue val) {\n    log.info(\"Closing directory, CoreContainer#isShutdown={}\", coreContainer != null ? coreContainer.isShutDown() : \"null\");\n    try {\n      if (coreContainer != null && coreContainer.isShutDown() && val.directory instanceof ShutdownAwareDirectory) {\n        log.info(\"Closing directory on shutdown: \" + val.path);\n        ((ShutdownAwareDirectory) val.directory).closeOnShutdown();\n      } else {\n        log.info(\"Closing directory: \" + val.path);\n        val.directory.close();\n      }\n      assert ObjectReleaseTracker.release(val.directory);\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","sourceOld":"  private void close(CacheValue val) {\n    try {\n      log.info(\"Closing directory: \" + val.path);\n      val.directory.close();\n      assert ObjectReleaseTracker.release(val.directory);\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5d615d62cd8aff3690943d765e46942551f98b6","date":1474881754,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","sourceNew":"  private void close(CacheValue val) {\n    log.debug(\"Closing directory, CoreContainer#isShutdown={}\", coreContainer != null ? coreContainer.isShutDown() : \"null\");\n    try {\n      if (coreContainer != null && coreContainer.isShutDown() && val.directory instanceof ShutdownAwareDirectory) {\n        log.debug(\"Closing directory on shutdown: \" + val.path);\n        ((ShutdownAwareDirectory) val.directory).closeOnShutdown();\n      } else {\n        log.debug(\"Closing directory: \" + val.path);\n        val.directory.close();\n      }\n      assert ObjectReleaseTracker.release(val.directory);\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","sourceOld":"  private void close(CacheValue val) {\n    log.info(\"Closing directory, CoreContainer#isShutdown={}\", coreContainer != null ? coreContainer.isShutDown() : \"null\");\n    try {\n      if (coreContainer != null && coreContainer.isShutDown() && val.directory instanceof ShutdownAwareDirectory) {\n        log.info(\"Closing directory on shutdown: \" + val.path);\n        ((ShutdownAwareDirectory) val.directory).closeOnShutdown();\n      } else {\n        log.info(\"Closing directory: \" + val.path);\n        val.directory.close();\n      }\n      assert ObjectReleaseTracker.release(val.directory);\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","sourceNew":"  private void close(CacheValue val) {\n    log.debug(\"Closing directory, CoreContainer#isShutdown={}\", coreContainer != null ? coreContainer.isShutDown() : \"null\");\n    try {\n      if (coreContainer != null && coreContainer.isShutDown() && val.directory instanceof ShutdownAwareDirectory) {\n        log.debug(\"Closing directory on shutdown: \" + val.path);\n        ((ShutdownAwareDirectory) val.directory).closeOnShutdown();\n      } else {\n        log.debug(\"Closing directory: \" + val.path);\n        val.directory.close();\n      }\n      assert ObjectReleaseTracker.release(val.directory);\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","sourceOld":"  private void close(CacheValue val) {\n    log.info(\"Closing directory, CoreContainer#isShutdown={}\", coreContainer != null ? coreContainer.isShutDown() : \"null\");\n    try {\n      if (coreContainer != null && coreContainer.isShutDown() && val.directory instanceof ShutdownAwareDirectory) {\n        log.info(\"Closing directory on shutdown: \" + val.path);\n        ((ShutdownAwareDirectory) val.directory).closeOnShutdown();\n      } else {\n        log.info(\"Closing directory: \" + val.path);\n        val.directory.close();\n      }\n      assert ObjectReleaseTracker.release(val.directory);\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","sourceNew":"  private void close(CacheValue val) {\n    log.debug(\"Closing directory, CoreContainer#isShutdown={}\", coreContainer != null ? coreContainer.isShutDown() : \"null\");\n    try {\n      if (coreContainer != null && coreContainer.isShutDown() && val.directory instanceof ShutdownAwareDirectory) {\n        log.debug(\"Closing directory on shutdown: \" + val.path);\n        ((ShutdownAwareDirectory) val.directory).closeOnShutdown();\n      } else {\n        log.debug(\"Closing directory: \" + val.path);\n        val.directory.close();\n      }\n      assert ObjectReleaseTracker.release(val.directory);\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","sourceOld":"  private void close(CacheValue val) {\n    log.info(\"Closing directory, CoreContainer#isShutdown={}\", coreContainer != null ? coreContainer.isShutDown() : \"null\");\n    try {\n      if (coreContainer != null && coreContainer.isShutDown() && val.directory instanceof ShutdownAwareDirectory) {\n        log.info(\"Closing directory on shutdown: \" + val.path);\n        ((ShutdownAwareDirectory) val.directory).closeOnShutdown();\n      } else {\n        log.info(\"Closing directory: \" + val.path);\n        val.directory.close();\n      }\n      assert ObjectReleaseTracker.release(val.directory);\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#close(CacheValue).mjava","sourceNew":"  private void close(CacheValue val) {\n    if (log.isDebugEnabled()) {\n      log.debug(\"Closing directory, CoreContainer#isShutdown={}\", coreContainer != null ? coreContainer.isShutDown() : \"null\");\n    }\n    try {\n      if (coreContainer != null && coreContainer.isShutDown() && val.directory instanceof ShutdownAwareDirectory) {\n        log.debug(\"Closing directory on shutdown: {}\", val.path);\n        ((ShutdownAwareDirectory) val.directory).closeOnShutdown();\n      } else {\n        log.debug(\"Closing directory: {}\", val.path);\n        val.directory.close();\n      }\n      assert ObjectReleaseTracker.release(val.directory);\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","sourceOld":"  private void close(CacheValue val) {\n    log.debug(\"Closing directory, CoreContainer#isShutdown={}\", coreContainer != null ? coreContainer.isShutDown() : \"null\");\n    try {\n      if (coreContainer != null && coreContainer.isShutDown() && val.directory instanceof ShutdownAwareDirectory) {\n        log.debug(\"Closing directory on shutdown: \" + val.path);\n        ((ShutdownAwareDirectory) val.directory).closeOnShutdown();\n      } else {\n        log.debug(\"Closing directory: \" + val.path);\n        val.directory.close();\n      }\n      assert ObjectReleaseTracker.release(val.directory);\n    } catch (Exception e) {\n      SolrException.log(log, \"Error closing directory\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5d615d62cd8aff3690943d765e46942551f98b6":["b56543f596b0fb9e599ff9517246da26137a738f"],"058801f8673d53a5abac8088204860ec29a40f0d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"536b47681314488eb94706248be6047a3f142841":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"140be51d03394488536f4aacedace29f9b318347":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["b56543f596b0fb9e599ff9517246da26137a738f","a5d615d62cd8aff3690943d765e46942551f98b6"],"b56543f596b0fb9e599ff9517246da26137a738f":["536b47681314488eb94706248be6047a3f142841"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["058801f8673d53a5abac8088204860ec29a40f0d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b56543f596b0fb9e599ff9517246da26137a738f","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["140be51d03394488536f4aacedace29f9b318347"]},"commit2Childs":{"a5d615d62cd8aff3690943d765e46942551f98b6":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"058801f8673d53a5abac8088204860ec29a40f0d":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"536b47681314488eb94706248be6047a3f142841":["b56543f596b0fb9e599ff9517246da26137a738f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["058801f8673d53a5abac8088204860ec29a40f0d"],"140be51d03394488536f4aacedace29f9b318347":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["140be51d03394488536f4aacedace29f9b318347","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b56543f596b0fb9e599ff9517246da26137a738f":["a5d615d62cd8aff3690943d765e46942551f98b6","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["536b47681314488eb94706248be6047a3f142841"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}