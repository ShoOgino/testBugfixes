{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader#getDocsWithField(String).mjava","commits":[{"id":"b8bf25b2f29e6699fc6b4da78438f941eceaca21","date":1376946522,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader#getDocsWithField(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.hasDocValues();\n      assert maxDoc() == docsWithField.length();\n    } else {\n      assert fi == null || fi.hasDocValues() == false;\n    }\n    return docsWithField;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12774649e77a6efccc3502c735c2893b52af6d6","date":1376964312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader#getDocsWithField(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.hasDocValues();\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.hasDocValues() == false;\n    }\n    return docsWithField;\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.hasDocValues();\n      assert maxDoc() == docsWithField.length();\n    } else {\n      assert fi == null || fi.hasDocValues() == false;\n    }\n    return docsWithField;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader#getDocsWithField(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.hasDocValues();\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.hasDocValues() == false;\n    }\n    return docsWithField;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader#getDocsWithField(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.hasDocValues();\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.hasDocValues() == false;\n    }\n    return docsWithField;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getDocsWithField(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.hasDocValues();\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.hasDocValues() == false;\n    }\n    return docsWithField;\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    Bits docsWithField = super.getDocsWithField(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (docsWithField != null) {\n      assert fi != null;\n      assert fi.hasDocValues();\n      assert maxDoc() == docsWithField.length();\n      docsWithField = new AssertingBits(docsWithField);\n    } else {\n      assert fi == null || fi.hasDocValues() == false;\n    }\n    return docsWithField;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8bf25b2f29e6699fc6b4da78438f941eceaca21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d12774649e77a6efccc3502c735c2893b52af6d6":["b8bf25b2f29e6699fc6b4da78438f941eceaca21"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d12774649e77a6efccc3502c735c2893b52af6d6"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"b8bf25b2f29e6699fc6b4da78438f941eceaca21":["d12774649e77a6efccc3502c735c2893b52af6d6"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b8bf25b2f29e6699fc6b4da78438f941eceaca21","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"d12774649e77a6efccc3502c735c2893b52af6d6":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}