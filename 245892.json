{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#upconfig(CloudSolrClient,CommandLine,String,String).mjava","commits":[{"id":"688f23c47b3d5b61d795e3042013aa908716c068","date":1449761553,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#upconfig(CloudSolrClient,CommandLine,String,String).mjava","pathOld":"/dev/null","sourceNew":"    // It's a little awkward putting this in ToolBase, but to re-use it in upconfig and create, _and_ have access\n    // to the (possibly) redirected \"stdout\", it needs to go here unless we reorganize things a bit.\n    protected void upconfig(CloudSolrClient cloudSolrClient, CommandLine cli, String confname, String configSet) throws IOException {\n\n      File configSetDir = null;\n      // we try to be flexible and allow the user to specify a configuration directory instead of a configset name\n      File possibleConfigDir = new File(configSet);\n      if (possibleConfigDir.isDirectory()) {\n        configSetDir = possibleConfigDir;\n      } else {\n        File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n        if (!configsetsDir.isDirectory())\n          throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n        // upload the configset if it exists\n        configSetDir = new File(configsetsDir, configSet);\n        if (!configSetDir.isDirectory()) {\n          throw new FileNotFoundException(\"Specified config \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      File confDir = new File(configSetDir, \"conf\");\n      if (!confDir.isDirectory()) {\n        // config dir should contain a conf sub-directory but if not and there's a solrconfig.xml, then use it\n        if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n          confDir = configSetDir;\n        } else {\n          throw new IllegalArgumentException(\"Specified configuration directory \" + configSetDir.getAbsolutePath() +\n              \" is invalid;\\nit should contain either conf sub-directory or solrconfig.xml\");\n        }\n      }\n\n      //\n      echo(\"Uploading \" + confDir.getAbsolutePath() +\n          \" for config \" + confname + \" to ZooKeeper at \" + cloudSolrClient.getZkHost());\n      cloudSolrClient.uploadConfig(confDir.toPath(), confname);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9272a617a9cbebf86be127014bbbacd7cf8f8e83","date":1467480344,"type":4,"author":"Erick","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#upconfig(CloudSolrClient,CommandLine,String,String).mjava","sourceNew":null,"sourceOld":"    // It's a little awkward putting this in ToolBase, but to re-use it in upconfig and create, _and_ have access\n    // to the (possibly) redirected \"stdout\", it needs to go here unless we reorganize things a bit.\n    protected void upconfig(CloudSolrClient cloudSolrClient, CommandLine cli, String confname, String configSet) throws IOException {\n\n      File configSetDir = null;\n      // we try to be flexible and allow the user to specify a configuration directory instead of a configset name\n      File possibleConfigDir = new File(configSet);\n      if (possibleConfigDir.isDirectory()) {\n        configSetDir = possibleConfigDir;\n      } else {\n        File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n        if (!configsetsDir.isDirectory())\n          throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n        // upload the configset if it exists\n        configSetDir = new File(configsetsDir, configSet);\n        if (!configSetDir.isDirectory()) {\n          throw new FileNotFoundException(\"Specified config \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      File confDir = new File(configSetDir, \"conf\");\n      if (!confDir.isDirectory()) {\n        // config dir should contain a conf sub-directory but if not and there's a solrconfig.xml, then use it\n        if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n          confDir = configSetDir;\n        } else {\n          throw new IllegalArgumentException(\"Specified configuration directory \" + configSetDir.getAbsolutePath() +\n              \" is invalid;\\nit should contain either conf sub-directory or solrconfig.xml\");\n        }\n      }\n\n      //\n      echo(\"Uploading \" + confDir.getAbsolutePath() +\n          \" for config \" + confname + \" to ZooKeeper at \" + cloudSolrClient.getZkHost());\n      cloudSolrClient.uploadConfig(confDir.toPath(), confname);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#upconfig(CloudSolrClient,CommandLine,String,String).mjava","sourceNew":null,"sourceOld":"    // It's a little awkward putting this in ToolBase, but to re-use it in upconfig and create, _and_ have access\n    // to the (possibly) redirected \"stdout\", it needs to go here unless we reorganize things a bit.\n    protected void upconfig(CloudSolrClient cloudSolrClient, CommandLine cli, String confname, String configSet) throws IOException {\n\n      File configSetDir = null;\n      // we try to be flexible and allow the user to specify a configuration directory instead of a configset name\n      File possibleConfigDir = new File(configSet);\n      if (possibleConfigDir.isDirectory()) {\n        configSetDir = possibleConfigDir;\n      } else {\n        File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n        if (!configsetsDir.isDirectory())\n          throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n        // upload the configset if it exists\n        configSetDir = new File(configsetsDir, configSet);\n        if (!configSetDir.isDirectory()) {\n          throw new FileNotFoundException(\"Specified config \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      File confDir = new File(configSetDir, \"conf\");\n      if (!confDir.isDirectory()) {\n        // config dir should contain a conf sub-directory but if not and there's a solrconfig.xml, then use it\n        if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n          confDir = configSetDir;\n        } else {\n          throw new IllegalArgumentException(\"Specified configuration directory \" + configSetDir.getAbsolutePath() +\n              \" is invalid;\\nit should contain either conf sub-directory or solrconfig.xml\");\n        }\n      }\n\n      //\n      echo(\"Uploading \" + confDir.getAbsolutePath() +\n          \" for config \" + confname + \" to ZooKeeper at \" + cloudSolrClient.getZkHost());\n      cloudSolrClient.uploadConfig(confDir.toPath(), confname);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"688f23c47b3d5b61d795e3042013aa908716c068":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["688f23c47b3d5b61d795e3042013aa908716c068"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["688f23c47b3d5b61d795e3042013aa908716c068","9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"]},"commit2Childs":{"688f23c47b3d5b61d795e3042013aa908716c068":["9272a617a9cbebf86be127014bbbacd7cf8f8e83","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["688f23c47b3d5b61d795e3042013aa908716c068"],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}