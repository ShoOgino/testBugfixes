{"path":"solr/core/src/test/org/apache/solr/handler/V2ApiIntegrationTest#testApis().mjava","commits":[{"id":"fcf710a8fcd590cf55c855d422c7a10fce3e6117","date":1485842253,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/V2ApiIntegrationTest#testApis().mjava","pathOld":"/dev/null","sourceNew":"  private void testApis() throws Exception {\n    RestTestHarness restHarness = restTestHarnesses.get(0);\n    ServerProvider serverProvider = (ServerProvider) restHarness.getServerProvider();\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/v2/c/\"+ COLL_NAME;\n    Map result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/c/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/v2/collections/\"+ COLL_NAME;\n    result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/collections/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/V2ApiIntegrationTest#testApis().mjava","pathOld":"/dev/null","sourceNew":"  private void testApis() throws Exception {\n    RestTestHarness restHarness = restTestHarnesses.get(0);\n    ServerProvider serverProvider = (ServerProvider) restHarness.getServerProvider();\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/v2/c/\"+ COLL_NAME;\n    Map result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/c/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/v2/collections/\"+ COLL_NAME;\n    result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/collections/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ab788212d72a7c436e5ef349ca99fe3c8fc78b","date":1489203052,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/V2ApiIntegrationTest#testApis().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/V2ApiIntegrationTest#testApis().mjava","sourceNew":"  private void testApis() throws Exception {\n    RestTestHarness restHarness = restTestHarnesses.get(0);\n    ServerProvider serverProvider = (ServerProvider) restHarness.getServerProvider();\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/____v2/c/\"+ COLL_NAME;\n    Map result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/c/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/____v2/collections/\"+ COLL_NAME;\n    result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/collections/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n\n\n  }\n\n","sourceOld":"  private void testApis() throws Exception {\n    RestTestHarness restHarness = restTestHarnesses.get(0);\n    ServerProvider serverProvider = (ServerProvider) restHarness.getServerProvider();\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/v2/c/\"+ COLL_NAME;\n    Map result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/c/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/v2/collections/\"+ COLL_NAME;\n    result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/collections/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3554c8d20a765b4e932a8363f142fdf86374b99","date":1494557659,"type":4,"author":"Cao Manh Dat","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/handler/V2ApiIntegrationTest#testApis().mjava","sourceNew":null,"sourceOld":"  private void testApis() throws Exception {\n    RestTestHarness restHarness = restTestHarnesses.get(0);\n    ServerProvider serverProvider = (ServerProvider) restHarness.getServerProvider();\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/____v2/c/\"+ COLL_NAME;\n    Map result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/c/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/____v2/collections/\"+ COLL_NAME;\n    result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/collections/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/handler/V2ApiIntegrationTest#testApis().mjava","sourceNew":null,"sourceOld":"  private void testApis() throws Exception {\n    RestTestHarness restHarness = restTestHarnesses.get(0);\n    ServerProvider serverProvider = (ServerProvider) restHarness.getServerProvider();\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/____v2/c/\"+ COLL_NAME;\n    Map result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/c/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n    serverProvider.baseurl = serverProvider.jettySolrRunner.getBaseUrl()+\"/____v2/collections/\"+ COLL_NAME;\n    result = TestSolrConfigHandler.getRespMap(\"/get/_introspect\", restHarness);\n    assertEquals(\"/collections/collection1/get\", Utils.getObjectByPath(result, true, \"/spec[0]/url/paths[0]\"));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a8ab788212d72a7c436e5ef349ca99fe3c8fc78b","c3554c8d20a765b4e932a8363f142fdf86374b99"],"a8ab788212d72a7c436e5ef349ca99fe3c8fc78b":["fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"c3554c8d20a765b4e932a8363f142fdf86374b99":["a8ab788212d72a7c436e5ef349ca99fe3c8fc78b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c3554c8d20a765b4e932a8363f142fdf86374b99"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a8ab788212d72a7c436e5ef349ca99fe3c8fc78b":["e9017cf144952056066919f1ebc7897ff9bd71b1","c3554c8d20a765b4e932a8363f142fdf86374b99"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["a8ab788212d72a7c436e5ef349ca99fe3c8fc78b","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"c3554c8d20a765b4e932a8363f142fdf86374b99":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}