{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/AuthenticationHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/AuthenticationHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/AuthenticationHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n        \n        try {\n        String serviceName = request.getParameter(AuthenticationController.SERVICE_PARAMETER);\n        if(LOG.isInfoEnabled()){\n            String application = request.getParameter(AuthenticationController.APPLICATION_PARAMETER);\n            LOG.info(\"Authentication request for service: \"+serviceName+\"; Application name: \"+application);\n        }\n        \n        if(!this.registry.isServiceRegistered(serviceName))\n            throw new AuthenticationException(\"requested Service \"+serviceName+\"is not registered\");\n        String password = request.getParameter(AuthenticationController.PASSWORD_PARAMETER);\n        String accountName = request.getParameter(AuthenticationController.ACCOUNT_PARAMETER);\n        String clientIp = request.getRemoteHost();\n        \n       \n        \n        GDataAccount  account = getAccount(accountName);\n        if(account == null || !account.getPassword().equals(password))\n            throw new AuthenticationException(\"Account is null or password does not match\");\n        \n        String token = this.controller.authenticatAccount(account,clientIp);\n        sendToken(response,token);\n        if(LOG.isInfoEnabled()){\n            \n            LOG.info(\"Account authenticated -- \"+account);\n        }\n        } catch (AuthenticationException e){\n            LOG.error(\"BadAuthentication -- \"+e.getMessage(),e);\n            sendError(response, GDataResponse.FORBIDDEN,\"BadAuthentication\");\n        }catch (Exception e) {\n            LOG.error(\"Unexpected Exception -- SERVERERROR -- \"+e.getMessage(),e);\n            sendError(response,GDataResponse.SERVER_ERROR, \"Service not available\");\n        }\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n        \n        try {\n        String serviceName = request.getParameter(AuthenticationController.SERVICE_PARAMETER);\n        if(LOG.isInfoEnabled()){\n            String application = request.getParameter(AuthenticationController.APPLICATION_PARAMETER);\n            LOG.info(\"Authentication request for service: \"+serviceName+\"; Application name: \"+application);\n        }\n        \n        if(!this.registry.isServiceRegistered(serviceName))\n            throw new AuthenticationException(\"requested Service \"+serviceName+\"is not registered\");\n        String password = request.getParameter(AuthenticationController.PASSWORD_PARAMETER);\n        String accountName = request.getParameter(AuthenticationController.ACCOUNT_PARAMETER);\n        String clientIp = request.getRemoteHost();\n        \n       \n        \n        GDataAccount  account = getAccount(accountName);\n        if(account == null || !account.getPassword().equals(password))\n            throw new AuthenticationException(\"Account is null or password does not match\");\n        \n        String token = this.controller.authenticatAccount(account,clientIp);\n        sendToken(response,token);\n        if(LOG.isInfoEnabled()){\n            \n            LOG.info(\"Account authenticated -- \"+account);\n        }\n        } catch (AuthenticationException e){\n            LOG.error(\"BadAuthentication -- \"+e.getMessage(),e);\n            sendError(response, GDataResponse.FORBIDDEN,\"BadAuthentication\");\n        }catch (Exception e) {\n            LOG.error(\"Unexpected Exception -- SERVERERROR -- \"+e.getMessage(),e);\n            sendError(response,GDataResponse.SERVER_ERROR, \"Service not available\");\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/servlet/handler/AuthenticationHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/AuthenticationHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n        \n        try {\n        String serviceName = request.getParameter(AuthenticationController.SERVICE_PARAMETER);\n        if(LOG.isInfoEnabled()){\n            String application = request.getParameter(AuthenticationController.APPLICATION_PARAMETER);\n            LOG.info(\"Authentication request for service: \"+serviceName+\"; Application name: \"+application);\n        }\n        \n        if(!this.registry.isServiceRegistered(serviceName))\n            throw new AuthenticationException(\"requested Service \"+serviceName+\"is not registered\");\n        String password = request.getParameter(AuthenticationController.PASSWORD_PARAMETER);\n        String accountName = request.getParameter(AuthenticationController.ACCOUNT_PARAMETER);\n        String clientIp = request.getRemoteHost();\n        \n       \n        \n        GDataAccount  account = getAccount(accountName);\n        if(account == null || !account.getPassword().equals(password))\n            throw new AuthenticationException(\"Account is null or password does not match\");\n        \n        String token = this.controller.authenticatAccount(account,clientIp);\n        sendToken(response,token);\n        if(LOG.isInfoEnabled()){\n            \n            LOG.info(\"Account authenticated -- \"+account);\n        }\n        } catch (AuthenticationException e){\n            LOG.error(\"BadAuthentication -- \"+e.getMessage(),e);\n            sendError(response, GDataResponse.FORBIDDEN,\"BadAuthentication\");\n        }catch (Exception e) {\n            LOG.error(\"Unexpected Exception -- SERVERERROR -- \"+e.getMessage(),e);\n            sendError(response,GDataResponse.SERVER_ERROR, \"Service not available\");\n        }\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n        \n        try {\n        String serviceName = request.getParameter(AuthenticationController.SERVICE_PARAMETER);\n        if(LOG.isInfoEnabled()){\n            String application = request.getParameter(AuthenticationController.APPLICATION_PARAMETER);\n            LOG.info(\"Authentication request for service: \"+serviceName+\"; Application name: \"+application);\n        }\n        \n        if(!this.registry.isServiceRegistered(serviceName))\n            throw new AuthenticationException(\"requested Service \"+serviceName+\"is not registered\");\n        String password = request.getParameter(AuthenticationController.PASSWORD_PARAMETER);\n        String accountName = request.getParameter(AuthenticationController.ACCOUNT_PARAMETER);\n        String clientIp = request.getRemoteHost();\n        \n       \n        \n        GDataAccount  account = getAccount(accountName);\n        if(account == null || !account.getPassword().equals(password))\n            throw new AuthenticationException(\"Account is null or password does not match\");\n        \n        String token = this.controller.authenticatAccount(account,clientIp);\n        sendToken(response,token);\n        if(LOG.isInfoEnabled()){\n            \n            LOG.info(\"Account authenticated -- \"+account);\n        }\n        } catch (AuthenticationException e){\n            LOG.error(\"BadAuthentication -- \"+e.getMessage(),e);\n            sendError(response, GDataResponse.FORBIDDEN,\"BadAuthentication\");\n        }catch (Exception e) {\n            LOG.error(\"Unexpected Exception -- SERVERERROR -- \"+e.getMessage(),e);\n            sendError(response,GDataResponse.SERVER_ERROR, \"Service not available\");\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}