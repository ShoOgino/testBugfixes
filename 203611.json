{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/QueryRequest#getPath().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/QueryRequest#getPath().mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/QueryRequest#getPath().mjava","sourceNew":"  /**\n   * Use the params 'QT' parameter if it exists\n   */\n  @Override\n  public String getPath() {\n    String qt = query.get( CommonParams.QT );\n    if( qt == null ) {\n      qt = super.getPath();\n    }\n    if( qt != null && qt.startsWith( \"/\" ) ) {\n      return qt;\n    }\n    return \"/select\";\n  }\n\n","sourceOld":"  /**\n   * Use the params 'QT' parameter if it exists\n   */\n  @Override\n  public String getPath() {\n    String qt = query.get( CommonParams.QT );\n    if( qt == null ) {\n      qt = super.getPath();\n    }\n    if( qt != null && qt.startsWith( \"/\" ) ) {\n      return qt;\n    }\n    return \"/select\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/QueryRequest#getPath().mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/QueryRequest#getPath().mjava","sourceNew":"  /**\n   * Use the params 'QT' parameter if it exists\n   */\n  @Override\n  public String getPath() {\n    String qt = query.get( CommonParams.QT );\n    if( qt == null ) {\n      qt = super.getPath();\n    }\n    if( qt != null && qt.startsWith( \"/\" ) ) {\n      return qt;\n    }\n    return \"/select\";\n  }\n\n","sourceOld":"  /**\n   * Use the params 'QT' parameter if it exists\n   */\n  @Override\n  public String getPath() {\n    String qt = query.get( CommonParams.QT );\n    if( qt == null ) {\n      qt = super.getPath();\n    }\n    if( qt != null && qt.startsWith( \"/\" ) ) {\n      return qt;\n    }\n    return \"/select\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/QueryRequest#getPath().mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/QueryRequest#getPath().mjava","sourceNew":"  /**\n   * Use the params 'QT' parameter if it exists\n   */\n  @Override\n  public String getPath() {\n    String qt = query.get( CommonParams.QT );\n    if( qt == null ) {\n      qt = super.getPath();\n    }\n    if( qt != null && qt.startsWith( \"/\" ) ) {\n      return qt;\n    }\n    return \"/select\";\n  }\n\n","sourceOld":"  /**\n   * Use the params 'QT' parameter if it exists\n   */\n  @Override\n  public String getPath() {\n    String qt = query.get( CommonParams.QT );\n    if( qt == null ) {\n      qt = super.getPath();\n    }\n    if( qt != null && qt.startsWith( \"/\" ) ) {\n      return qt;\n    }\n    return \"/select\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"488ddee53b8f555fe7c97322cdf3f356d5e49503","date":1310649459,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/QueryRequest#getPath().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/QueryRequest#getPath().mjava","sourceNew":"  /**\n   * Use the params 'QT' parameter if it exists\n   */\n  @Override\n  public String getPath() {\n    String qt = query == null ? null : query.get( CommonParams.QT );\n    if( qt == null ) {\n      qt = super.getPath();\n    }\n    if( qt != null && qt.startsWith( \"/\" ) ) {\n      return qt;\n    }\n    return \"/select\";\n  }\n\n","sourceOld":"  /**\n   * Use the params 'QT' parameter if it exists\n   */\n  @Override\n  public String getPath() {\n    String qt = query.get( CommonParams.QT );\n    if( qt == null ) {\n      qt = super.getPath();\n    }\n    if( qt != null && qt.startsWith( \"/\" ) ) {\n      return qt;\n    }\n    return \"/select\";\n  }\n\n","bugFix":["c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"488ddee53b8f555fe7c97322cdf3f356d5e49503":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["488ddee53b8f555fe7c97322cdf3f356d5e49503"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["488ddee53b8f555fe7c97322cdf3f356d5e49503"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"488ddee53b8f555fe7c97322cdf3f356d5e49503":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}