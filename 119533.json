{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillDownQuery#testRequireDimensionDrillDown().mjava","commits":[{"id":"8be9dc9e17c1046a542423f69130abddef886f16","date":1530129441,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillDownQuery#testRequireDimensionDrillDown().mjava","pathOld":"/dev/null","sourceNew":"  public void testRequireDimensionDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n                  newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false)));\n    Directory taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n\n    config.setRequireDimensionDrillDown(\"a\", true);\n    config.setRequireDimensionDrillDown(\"b\", false);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"1\"));\n    doc.add(new FacetField(\"b\", \"2\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    taxoWriter.close();\n\n    IndexReader reader = writer.getReader();\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    DrillDownQuery q = new DrillDownQuery(config);\n    q.add(\"a\", \"1\");\n    assertEquals(1, searcher.count(q));\n\n    q = new DrillDownQuery(config);\n    q.add(\"a\");\n    assertEquals(1, searcher.count(q));\n\n    q = new DrillDownQuery(config);\n    q.add(\"b\", \"2\");\n    assertEquals(1, searcher.count(q));\n\n    q = new DrillDownQuery(config);\n    q.add(\"b\");\n    // no hits because we disabled dimension drill down for dimension \"b\":\n    assertEquals(0, searcher.count(q));\n    IOUtils.close(taxoReader, reader, writer, dir, taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillDownQuery#testRequireDimensionDrillDown().mjava","pathOld":"/dev/null","sourceNew":"  public void testRequireDimensionDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n                  newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false)));\n    Directory taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n\n    config.setRequireDimensionDrillDown(\"a\", true);\n    config.setRequireDimensionDrillDown(\"b\", false);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"1\"));\n    doc.add(new FacetField(\"b\", \"2\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    taxoWriter.close();\n\n    IndexReader reader = writer.getReader();\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    DrillDownQuery q = new DrillDownQuery(config);\n    q.add(\"a\", \"1\");\n    assertEquals(1, searcher.count(q));\n\n    q = new DrillDownQuery(config);\n    q.add(\"a\");\n    assertEquals(1, searcher.count(q));\n\n    q = new DrillDownQuery(config);\n    q.add(\"b\", \"2\");\n    assertEquals(1, searcher.count(q));\n\n    q = new DrillDownQuery(config);\n    q.add(\"b\");\n    // no hits because we disabled dimension drill down for dimension \"b\":\n    assertEquals(0, searcher.count(q));\n    IOUtils.close(taxoReader, reader, writer, dir, taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillDownQuery#testRequireDimensionDrillDown().mjava","pathOld":"/dev/null","sourceNew":"  public void testRequireDimensionDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n                  newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false)));\n    Directory taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetsConfig config = new FacetsConfig();\n\n    config.setRequireDimensionDrillDown(\"a\", true);\n    config.setRequireDimensionDrillDown(\"b\", false);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"1\"));\n    doc.add(new FacetField(\"b\", \"2\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    taxoWriter.close();\n\n    IndexReader reader = writer.getReader();\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    DrillDownQuery q = new DrillDownQuery(config);\n    q.add(\"a\", \"1\");\n    assertEquals(1, searcher.count(q));\n\n    q = new DrillDownQuery(config);\n    q.add(\"a\");\n    assertEquals(1, searcher.count(q));\n\n    q = new DrillDownQuery(config);\n    q.add(\"b\", \"2\");\n    assertEquals(1, searcher.count(q));\n\n    q = new DrillDownQuery(config);\n    q.add(\"b\");\n    // no hits because we disabled dimension drill down for dimension \"b\":\n    assertEquals(0, searcher.count(q));\n    IOUtils.close(taxoReader, reader, writer, dir, taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8be9dc9e17c1046a542423f69130abddef886f16"],"8be9dc9e17c1046a542423f69130abddef886f16":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be9dc9e17c1046a542423f69130abddef886f16"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8be9dc9e17c1046a542423f69130abddef886f16"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"8be9dc9e17c1046a542423f69130abddef886f16":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","8be9dc9e17c1046a542423f69130abddef886f16","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}