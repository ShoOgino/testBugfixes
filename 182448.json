{"path":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#testNonConformingCompositeIds().mjava","commits":[{"id":"5fe03bc79bce6cdaa190cac905d8f82a01e8edcc","date":1405792133,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#testNonConformingCompositeIds().mjava","pathOld":"/dev/null","sourceNew":"  /** Make sure CompositeIdRouter doesn't throw exceptions for non-conforming IDs */\n  public void testNonConformingCompositeIds() throws Exception {\n    DocRouter router = DocRouter.getDocRouter(CompositeIdRouter.NAME);\n    DocCollection coll = createCollection(4, router);\n    String[] ids = { \"A!B!C!D\", \"!!!!!!\", \"A!!!!B\", \"A!!B!!C\", \"A/59!B\", \"A/8/!B/19/\", \n                     \"A!B/-5\", \"!/130!\", \"!!A/1000\", \"A//8!B///10!C////\" };\n    for (int i = 0 ; i < ids.length ; ++i) {\n      try {\n        Slice targetSlice = coll.getRouter().getTargetSlice(ids[i], null, null, coll);\n        assertNotNull(targetSlice);\n      } catch (Exception e) {\n        throw new Exception(\"Exception routing id '\" + ids[i] + \"'\", e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["747dd71fefcbc7142661c25334b74c518fef4d81"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"747dd71fefcbc7142661c25334b74c518fef4d81","date":1423504825,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#testNonConformingCompositeIds().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#testNonConformingCompositeIds().mjava","sourceNew":"  /** Make sure CompositeIdRouter doesn't throw exceptions for non-conforming IDs */\n  public void testNonConformingCompositeIds() throws Exception {\n    DocRouter router = DocRouter.getDocRouter(CompositeIdRouter.NAME);\n    DocCollection coll = createCollection(4, router);\n    String[] ids = { \"A!B!C!D\", \"!!!!!!\", \"A!!!!B\", \"A!!B!!C\", \"A/59!B\", \"A/8/!B/19/\", \n                     \"A!B/-5\", \"!/130!\", \"!!A/1000\", \"A//8!B///10!C////\" };\n    for (int i = 0 ; i < ids.length ; ++i) {\n      try {\n        Slice targetSlice = coll.getRouter().getTargetSlice(ids[i], null, null, null, coll);\n        assertNotNull(targetSlice);\n      } catch (Exception e) {\n        throw new Exception(\"Exception routing id '\" + ids[i] + \"'\", e);\n      }\n    }\n  }\n\n","sourceOld":"  /** Make sure CompositeIdRouter doesn't throw exceptions for non-conforming IDs */\n  public void testNonConformingCompositeIds() throws Exception {\n    DocRouter router = DocRouter.getDocRouter(CompositeIdRouter.NAME);\n    DocCollection coll = createCollection(4, router);\n    String[] ids = { \"A!B!C!D\", \"!!!!!!\", \"A!!!!B\", \"A!!B!!C\", \"A/59!B\", \"A/8/!B/19/\", \n                     \"A!B/-5\", \"!/130!\", \"!!A/1000\", \"A//8!B///10!C////\" };\n    for (int i = 0 ; i < ids.length ; ++i) {\n      try {\n        Slice targetSlice = coll.getRouter().getTargetSlice(ids[i], null, null, coll);\n        assertNotNull(targetSlice);\n      } catch (Exception e) {\n        throw new Exception(\"Exception routing id '\" + ids[i] + \"'\", e);\n      }\n    }\n  }\n\n","bugFix":["5fe03bc79bce6cdaa190cac905d8f82a01e8edcc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5fe03bc79bce6cdaa190cac905d8f82a01e8edcc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"747dd71fefcbc7142661c25334b74c518fef4d81":["5fe03bc79bce6cdaa190cac905d8f82a01e8edcc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["747dd71fefcbc7142661c25334b74c518fef4d81"]},"commit2Childs":{"5fe03bc79bce6cdaa190cac905d8f82a01e8edcc":["747dd71fefcbc7142661c25334b74c518fef4d81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5fe03bc79bce6cdaa190cac905d8f82a01e8edcc"],"747dd71fefcbc7142661c25334b74c518fef4d81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}