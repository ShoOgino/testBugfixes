{"path":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testLineCrossingPolygonPoints().mjava","commits":[{"id":"dffcd36f1a87df1300807d9580eb05aa37726397","date":1552376454,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testLineCrossingPolygonPoints().mjava","pathOld":"/dev/null","sourceNew":"  public void testLineCrossingPolygonPoints() {\n    Polygon p = new Polygon(new double[] {0, -1, 0, 1, 0}, new double[] {-1, 0, 1, 0, -1});\n    Polygon2D polygon2D = Polygon2D.create(p);\n    Relation rel = polygon2D.relateTriangle(GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)));\n    assertEquals(Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","date":1571074565,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testLineCrossingPolygonPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testLineCrossingPolygonPoints().mjava","sourceNew":"  public void testLineCrossingPolygonPoints() {\n    Polygon p = new Polygon(new double[] {0, -1, 0, 1, 0}, new double[] {-1, 0, 1, 0, -1});\n    Component2D polygon2D = Polygon2D.create(p);\n    Relation rel = polygon2D.relateTriangle(GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)));\n    assertEquals(Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","sourceOld":"  public void testLineCrossingPolygonPoints() {\n    Polygon p = new Polygon(new double[] {0, -1, 0, 1, 0}, new double[] {-1, 0, 1, 0, -1});\n    Polygon2D polygon2D = Polygon2D.create(p);\n    Relation rel = polygon2D.relateTriangle(GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)));\n    assertEquals(Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testLineCrossingPolygonPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testLineCrossingPolygonPoints().mjava","sourceNew":"  public void testLineCrossingPolygonPoints() {\n    Polygon p = new Polygon(new double[] {0, -1, 0, 1, 0}, new double[] {-1, 0, 1, 0, -1});\n    Component2D polygon2D = Polygon2D.create(p);\n    Relation rel = polygon2D.relateTriangle(GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)));\n    assertEquals(Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","sourceOld":"  public void testLineCrossingPolygonPoints() {\n    Polygon p = new Polygon(new double[] {0, -1, 0, 1, 0}, new double[] {-1, 0, 1, 0, -1});\n    Polygon2D polygon2D = Polygon2D.create(p);\n    Relation rel = polygon2D.relateTriangle(GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)));\n    assertEquals(Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c568a1e2a5125c2245150eebb030a81baa158b31","date":1587403489,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testLineCrossingPolygonPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testLineCrossingPolygonPoints().mjava","sourceNew":"  public void testLineCrossingPolygonPoints() {\n    Polygon p = new Polygon(new double[] {0, -1, 0, 1, 0}, new double[] {-1, 0, 1, 0, -1});\n    Component2D polygon2D = Polygon2D.create(p);\n    boolean intersects = polygon2D.intersectsTriangle(GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)));\n    assertTrue(intersects);\n  }\n\n","sourceOld":"  public void testLineCrossingPolygonPoints() {\n    Polygon p = new Polygon(new double[] {0, -1, 0, 1, 0}, new double[] {-1, 0, 1, 0, -1});\n    Component2D polygon2D = Polygon2D.create(p);\n    Relation rel = polygon2D.relateTriangle(GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)),\n        GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(-1.5)),\n        GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(0)));\n    assertEquals(Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["dffcd36f1a87df1300807d9580eb05aa37726397"],"dffcd36f1a87df1300807d9580eb05aa37726397":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c568a1e2a5125c2245150eebb030a81baa158b31":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c568a1e2a5125c2245150eebb030a81baa158b31"],"b0b597c65628ca9e73913a07e81691f8229bae35":["dffcd36f1a87df1300807d9580eb05aa37726397","b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"]},"commit2Childs":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["c568a1e2a5125c2245150eebb030a81baa158b31","b0b597c65628ca9e73913a07e81691f8229bae35"],"dffcd36f1a87df1300807d9580eb05aa37726397":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dffcd36f1a87df1300807d9580eb05aa37726397"],"c568a1e2a5125c2245150eebb030a81baa158b31":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}