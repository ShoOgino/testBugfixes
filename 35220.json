{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#openIfChanged(IndexReader,boolean).mjava","commits":[{"id":"8a8259c922a83abc544609227a60d48e5ee93e7e","date":1317679620,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#openIfChanged(IndexReader,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * If the index has changed since the provided reader was\n   * opened, open and return a new reader, with the\n   * specified <code>readOnly</code>; else, return\n   * null.\n   *\n   * @see #openIfChanged(IndexReader)\n   */\n  public static IndexReader openIfChanged(IndexReader oldReader, boolean readOnly) throws IOException {\n    return oldReader.doOpenIfChanged(readOnly);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["66a7b33505a58e6f91f780ddaa986820233e850b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"66a7b33505a58e6f91f780ddaa986820233e850b","date":1317683383,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#openIfChanged(IndexReader,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#openIfChanged(IndexReader,boolean).mjava","sourceNew":"  /**\n   * If the index has changed since the provided reader was\n   * opened, open and return a new reader, with the\n   * specified <code>readOnly</code>; else, return\n   * null.\n   *\n   * @see #openIfChanged(IndexReader)\n   */\n  public static IndexReader openIfChanged(IndexReader oldReader, boolean readOnly) throws IOException {\n    final IndexReader newReader = oldReader.doOpenIfChanged(readOnly);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","sourceOld":"  /**\n   * If the index has changed since the provided reader was\n   * opened, open and return a new reader, with the\n   * specified <code>readOnly</code>; else, return\n   * null.\n   *\n   * @see #openIfChanged(IndexReader)\n   */\n  public static IndexReader openIfChanged(IndexReader oldReader, boolean readOnly) throws IOException {\n    return oldReader.doOpenIfChanged(readOnly);\n  }\n\n","bugFix":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"326990249d982376dfa2e6fd97c28f4580df4e7c","date":1323042771,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#openIfChanged(IndexReader,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * If the index has changed since the provided reader was\n   * opened, open and return a new reader, with the\n   * specified <code>readOnly</code>; else, return\n   * null.\n   *\n   * @see #openIfChanged(IndexReader)\n   */\n  public static IndexReader openIfChanged(IndexReader oldReader, boolean readOnly) throws IOException {\n    final IndexReader newReader = oldReader.doOpenIfChanged(readOnly);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#openIfChanged(IndexReader,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * If the index has changed since the provided reader was\n   * opened, open and return a new reader, with the\n   * specified <code>readOnly</code>; else, return\n   * null.\n   *\n   * @see #openIfChanged(IndexReader)\n   */\n  public static IndexReader openIfChanged(IndexReader oldReader, boolean readOnly) throws IOException {\n    final IndexReader newReader = oldReader.doOpenIfChanged(readOnly);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#openIfChanged(IndexReader,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * If the index has changed since the provided reader was\n   * opened, open and return a new reader, with the\n   * specified <code>readOnly</code>; else, return\n   * null.\n   *\n   * @see #openIfChanged(IndexReader)\n   */\n  public static IndexReader openIfChanged(IndexReader oldReader, boolean readOnly) throws IOException {\n    final IndexReader newReader = oldReader.doOpenIfChanged(readOnly);\n    assert newReader != oldReader;\n    return newReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a8259c922a83abc544609227a60d48e5ee93e7e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["66a7b33505a58e6f91f780ddaa986820233e850b","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"66a7b33505a58e6f91f780ddaa986820233e850b":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["66a7b33505a58e6f91f780ddaa986820233e850b","326990249d982376dfa2e6fd97c28f4580df4e7c"],"326990249d982376dfa2e6fd97c28f4580df4e7c":["66a7b33505a58e6f91f780ddaa986820233e850b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"]},"commit2Childs":{"8a8259c922a83abc544609227a60d48e5ee93e7e":["66a7b33505a58e6f91f780ddaa986820233e850b"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"66a7b33505a58e6f91f780ddaa986820233e850b":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","326990249d982376dfa2e6fd97c28f4580df4e7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"326990249d982376dfa2e6fd97c28f4580df4e7c":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}