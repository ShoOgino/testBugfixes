{"path":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (ReaderContext context) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (ReaderContext context) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6620df8541b174097b1133a4fc370adb2e570524":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6620df8541b174097b1133a4fc370adb2e570524"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9454a6510e2db155fb01faa5c049b06ece95fab9","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["9454a6510e2db155fb01faa5c049b06ece95fab9","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6620df8541b174097b1133a4fc370adb2e570524":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["6620df8541b174097b1133a4fc370adb2e570524","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["29ef99d61cda9641b6250bf9567329a6e65f901d","2dadf0f3286a34a0fee6e788ffce88624bf2984e","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}