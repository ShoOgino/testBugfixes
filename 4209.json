{"path":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRangeCounter#rollup(LongRangeNode,int[],boolean).mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRangeCounter#rollup(LongRangeNode,int[],boolean).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/LongRangeCounter#rollup(LongRangeNode,int[],boolean).mjava","sourceNew":"  private int rollup(LongRangeNode node, int[] counts, boolean sawOutputs) {\n    int count;\n    sawOutputs |= node.outputs != null;\n    if (node.left != null) {\n      count = rollup(node.left, counts, sawOutputs);\n      count += rollup(node.right, counts, sawOutputs);\n    } else {\n      // Leaf:\n      count = leafCounts[leafUpto];\n      leafUpto++;\n      if (!sawOutputs) {\n        // This is a missing count (no output ranges were\n        // seen \"above\" us):\n        missingCount += count;\n      }\n    }\n    if (node.outputs != null) {\n      for(int rangeIndex : node.outputs) {\n        counts[rangeIndex] += count;\n      }\n    }\n    //System.out.println(\"  rollup node=\" + node.start + \" to \" + node.end + \": count=\" + count);\n    return count;\n  }\n\n","sourceOld":"  private int rollup(LongRangeNode node, int[] counts, boolean sawOutputs) {\n    int count;\n    sawOutputs |= node.outputs != null;\n    if (node.left != null) {\n      count = rollup(node.left, counts, sawOutputs);\n      count += rollup(node.right, counts, sawOutputs);\n    } else {\n      // Leaf:\n      count = leafCounts[leafUpto];\n      leafUpto++;\n      if (!sawOutputs) {\n        // This is a missing count (no output ranges were\n        // seen \"above\" us):\n        missingCount += count;\n      }\n    }\n    if (node.outputs != null) {\n      for(int rangeIndex : node.outputs) {\n        counts[rangeIndex] += count;\n      }\n    }\n    //System.out.println(\"  rollup node=\" + node.start + \" to \" + node.end + \": count=\" + count);\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRangeCounter#rollup(LongRangeNode,int[],boolean).mjava","pathOld":"/dev/null","sourceNew":"  private int rollup(LongRangeNode node, int[] counts, boolean sawOutputs) {\n    int count;\n    sawOutputs |= node.outputs != null;\n    if (node.left != null) {\n      count = rollup(node.left, counts, sawOutputs);\n      count += rollup(node.right, counts, sawOutputs);\n    } else {\n      // Leaf:\n      count = leafCounts[leafUpto];\n      leafUpto++;\n      if (!sawOutputs) {\n        // This is a missing count (no output ranges were\n        // seen \"above\" us):\n        missingCount += count;\n      }\n    }\n    if (node.outputs != null) {\n      for(int rangeIndex : node.outputs) {\n        counts[rangeIndex] += count;\n      }\n    }\n    //System.out.println(\"  rollup node=\" + node.start + \" to \" + node.end + \": count=\" + count);\n    return count;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}