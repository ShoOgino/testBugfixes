{"path":"lucene/core/src/java/org/apache/lucene/search/Scorer#score(Collector).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#score(Collector).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Scorer#score(Collector).mjava","sourceNew":"  /** Scores and collects all matching documents.\n   * @param collector The collector to which all matching documents are passed.\n   */\n  public void score(Collector collector) throws IOException {\n    collector.setScorer(this);\n    int doc;\n    while ((doc = nextDoc()) != NO_MORE_DOCS) {\n      collector.collect(doc);\n    }\n  }\n\n","sourceOld":"  /** Scores and collects all matching documents.\n   * @param collector The collector to which all matching documents are passed.\n   */\n  public void score(Collector collector) throws IOException {\n    collector.setScorer(this);\n    int doc;\n    while ((doc = nextDoc()) != NO_MORE_DOCS) {\n      collector.collect(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","date":1365631993,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#score(Collector).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#score(Collector).mjava","sourceNew":"  /** Scores and collects all matching documents.\n   * @param collector The collector to which all matching documents are passed.\n   */\n  public void score(Collector collector) throws IOException {\n    assert docID() == -1 || docID() == NO_MORE_DOCS; // not started\n    collector.setScorer(this);\n    int doc;\n    while ((doc = nextDoc()) != NO_MORE_DOCS) {\n      collector.collect(doc);\n    }\n  }\n\n","sourceOld":"  /** Scores and collects all matching documents.\n   * @param collector The collector to which all matching documents are passed.\n   */\n  public void score(Collector collector) throws IOException {\n    collector.setScorer(this);\n    int doc;\n    while ((doc = nextDoc()) != NO_MORE_DOCS) {\n      collector.collect(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af527d067afb6ca5bd58afc7b9a5fbc0f80979af","date":1366034882,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#score(Collector).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#score(Collector).mjava","sourceNew":"  /** Scores and collects all matching documents.\n   * @param collector The collector to which all matching documents are passed.\n   */\n  public void score(Collector collector) throws IOException {\n    assert docID() == -1; // not started\n    collector.setScorer(this);\n    int doc;\n    while ((doc = nextDoc()) != NO_MORE_DOCS) {\n      collector.collect(doc);\n    }\n  }\n\n","sourceOld":"  /** Scores and collects all matching documents.\n   * @param collector The collector to which all matching documents are passed.\n   */\n  public void score(Collector collector) throws IOException {\n    assert docID() == -1 || docID() == NO_MORE_DOCS; // not started\n    collector.setScorer(this);\n    int doc;\n    while ((doc = nextDoc()) != NO_MORE_DOCS) {\n      collector.collect(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopScorer#score(Collector).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#score(Collector).mjava","sourceNew":"  /** Scores and collects all matching documents.\n   * @param collector The collector to which all matching documents are passed.\n   */\n  public void score(Collector collector) throws IOException {\n    score(collector, Integer.MAX_VALUE);\n  }\n\n","sourceOld":"  /** Scores and collects all matching documents.\n   * @param collector The collector to which all matching documents are passed.\n   */\n  public void score(Collector collector) throws IOException {\n    assert docID() == -1; // not started\n    collector.setScorer(this);\n    int doc;\n    while ((doc = nextDoc()) != NO_MORE_DOCS) {\n      collector.collect(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BulkScorer#score(Collector).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#score(Collector).mjava","sourceNew":"  /** Scores and collects all matching documents.\n   * @param collector The collector to which all matching documents are passed.\n   */\n  public void score(Collector collector) throws IOException {\n    score(collector, Integer.MAX_VALUE);\n  }\n\n","sourceOld":"  /** Scores and collects all matching documents.\n   * @param collector The collector to which all matching documents are passed.\n   */\n  public void score(Collector collector) throws IOException {\n    assert docID() == -1; // not started\n    collector.setScorer(this);\n    int doc;\n    while ((doc = nextDoc()) != NO_MORE_DOCS) {\n      collector.collect(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["af527d067afb6ca5bd58afc7b9a5fbc0f80979af"],"af527d067afb6ca5bd58afc7b9a5fbc0f80979af":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["af527d067afb6ca5bd58afc7b9a5fbc0f80979af","2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acf00221f44c5f08ccea014f2492b53af15ecd66"]},"commit2Childs":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"af527d067afb6ca5bd58afc7b9a5fbc0f80979af":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","acf00221f44c5f08ccea014f2492b53af15ecd66"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["af527d067afb6ca5bd58afc7b9a5fbc0f80979af"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}