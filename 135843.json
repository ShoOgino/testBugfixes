{"path":"solr/core/src/test/org/apache/solr/handler/component/CustomTermsComponentTest#doTest(MiniSolrCloudCluster,String).mjava","commits":[{"id":"4d51e7db479b42602c7e23ba871b177387268179","date":1547581497,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/CustomTermsComponentTest#doTest(MiniSolrCloudCluster,String).mjava","pathOld":"/dev/null","sourceNew":"  private static void doTest(final MiniSolrCloudCluster cluster, final String collection) throws Exception {\n\n    // add some documents\n    final String id = \"id\";\n    final String f1 = \"a_t\";\n    final String f2 = \"b_t\";\n    final String v1 = \"bee\";\n    final String v2 = \"buzz\";\n    {\n      new UpdateRequest()\n          .add(sdoc(id, 1, f1, v1, f2, v2+\" \"+v2+\" \"+v2))\n          .add(sdoc(id, 2, f1, v1+\" \"+v1, f2, v2+\" \"+v2))\n          .add(sdoc(id, 3, f1, v1+\" \"+v1+\" \"+v1, f2, v2))\n          .commit(cluster.getSolrClient(), collection);\n    }\n\n    // search for the documents' terms ...\n    final String defaultHandlerName = \"/select\";\n\n    // search with the default handler ...\n    final String shards = findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        null, // ... without specifying shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n    // search with the default handler ...\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards, // ... with specified shards, but all valid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n    \n    ignoreException(\"not on the shards whitelist\");\n    // this case should fail\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards + \",http://[ff01::114]:33332\", // ... with specified shards with one invalid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        \"No live SolrServers available to handle this request\");\n    unIgnoreException(\"not on the shards whitelist\");\n\n    // configure a custom handler ...\n    final String customHandlerName;\n    if (random().nextBoolean()) {\n      // ... with a shards whitelist\n      customHandlerName = addCustomHandlerWithTermsComponentConfig(cluster, collection, defaultHandlerName, shards);\n    } else {\n      // ... with a custom terms component that disregards shards whitelist logic\n      customHandlerName = addCustomHandlerWithCustomTermsComponent(cluster, collection, defaultHandlerName);\n    }\n\n    // search with the custom handler ...\n    findAndCheckTerms(cluster, collection,\n        customHandlerName,\n        shards, // ... with specified shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc78b7d15e7b8627fa6d1b946da3a39f0225508d","date":1576086705,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/CustomTermsComponentTest#doTest(MiniSolrCloudCluster,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/CustomTermsComponentTest#doTest(MiniSolrCloudCluster,String).mjava","sourceNew":"  private static void doTest(final MiniSolrCloudCluster cluster, final String collection) throws Exception {\n\n    // add some documents\n    final String id = \"id\";\n    final String f1 = \"a_t\";\n    final String f2 = \"b_t\";\n    final String v1 = \"bee\";\n    final String v2 = \"buzz\";\n    {\n      new UpdateRequest()\n          .add(sdoc(id, 1, f1, v1, f2, v2+\" \"+v2+\" \"+v2))\n          .add(sdoc(id, 2, f1, v1+\" \"+v1, f2, v2+\" \"+v2))\n          .add(sdoc(id, 3, f1, v1+\" \"+v1+\" \"+v1, f2, v2))\n          .commit(cluster.getSolrClient(), collection);\n    }\n\n    // search for the documents' terms ...\n    final String defaultHandlerName = \"/select\";\n\n    // search with the default handler ...\n    final String shards = findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        null, // ... without specifying shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n    // search with the default handler ...\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards, // ... with specified shards, but all valid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n    \n    ignoreException(\"not on the shards whitelist\");\n    // this case should fail\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards + \",http://\" + DEAD_HOST_1, // ... with specified shards with one invalid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        \"No live SolrServers available to handle this request\");\n    unIgnoreException(\"not on the shards whitelist\");\n\n    // configure a custom handler ...\n    final String customHandlerName;\n    if (random().nextBoolean()) {\n      // ... with a shards whitelist\n      customHandlerName = addCustomHandlerWithTermsComponentConfig(cluster, collection, defaultHandlerName, shards);\n    } else {\n      // ... with a custom terms component that disregards shards whitelist logic\n      customHandlerName = addCustomHandlerWithCustomTermsComponent(cluster, collection, defaultHandlerName);\n    }\n\n    // search with the custom handler ...\n    findAndCheckTerms(cluster, collection,\n        customHandlerName,\n        shards, // ... with specified shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n  }\n\n","sourceOld":"  private static void doTest(final MiniSolrCloudCluster cluster, final String collection) throws Exception {\n\n    // add some documents\n    final String id = \"id\";\n    final String f1 = \"a_t\";\n    final String f2 = \"b_t\";\n    final String v1 = \"bee\";\n    final String v2 = \"buzz\";\n    {\n      new UpdateRequest()\n          .add(sdoc(id, 1, f1, v1, f2, v2+\" \"+v2+\" \"+v2))\n          .add(sdoc(id, 2, f1, v1+\" \"+v1, f2, v2+\" \"+v2))\n          .add(sdoc(id, 3, f1, v1+\" \"+v1+\" \"+v1, f2, v2))\n          .commit(cluster.getSolrClient(), collection);\n    }\n\n    // search for the documents' terms ...\n    final String defaultHandlerName = \"/select\";\n\n    // search with the default handler ...\n    final String shards = findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        null, // ... without specifying shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n    // search with the default handler ...\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards, // ... with specified shards, but all valid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n    \n    ignoreException(\"not on the shards whitelist\");\n    // this case should fail\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards + \",http://[ff01::114]:33332\", // ... with specified shards with one invalid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        \"No live SolrServers available to handle this request\");\n    unIgnoreException(\"not on the shards whitelist\");\n\n    // configure a custom handler ...\n    final String customHandlerName;\n    if (random().nextBoolean()) {\n      // ... with a shards whitelist\n      customHandlerName = addCustomHandlerWithTermsComponentConfig(cluster, collection, defaultHandlerName, shards);\n    } else {\n      // ... with a custom terms component that disregards shards whitelist logic\n      customHandlerName = addCustomHandlerWithCustomTermsComponent(cluster, collection, defaultHandlerName);\n    }\n\n    // search with the custom handler ...\n    findAndCheckTerms(cluster, collection,\n        customHandlerName,\n        shards, // ... with specified shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/CustomTermsComponentTest#doTest(MiniSolrCloudCluster,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/CustomTermsComponentTest#doTest(MiniSolrCloudCluster,String).mjava","sourceNew":"  private static void doTest(final MiniSolrCloudCluster cluster, final String collection) throws Exception {\n\n    // add some documents\n    final String id = \"id\";\n    final String f1 = \"a_t\";\n    final String f2 = \"b_t\";\n    final String v1 = \"bee\";\n    final String v2 = \"buzz\";\n    {\n      new UpdateRequest()\n          .add(sdoc(id, 1, f1, v1, f2, v2+\" \"+v2+\" \"+v2))\n          .add(sdoc(id, 2, f1, v1+\" \"+v1, f2, v2+\" \"+v2))\n          .add(sdoc(id, 3, f1, v1+\" \"+v1+\" \"+v1, f2, v2))\n          .commit(cluster.getSolrClient(), collection);\n    }\n\n    // search for the documents' terms ...\n    final String defaultHandlerName = \"/select\";\n\n    // search with the default handler ...\n    final String shards = findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        null, // ... without specifying shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n    // search with the default handler ...\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards, // ... with specified shards, but all valid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n    \n    ignoreException(\"not on the shards whitelist\");\n    // this case should fail\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards + \",http://\" + DEAD_HOST_1, // ... with specified shards with one invalid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        \"No live SolrServers available to handle this request\");\n    unIgnoreException(\"not on the shards whitelist\");\n\n    // configure a custom handler ...\n    final String customHandlerName;\n    if (random().nextBoolean()) {\n      // ... with a shards whitelist\n      customHandlerName = addCustomHandlerWithTermsComponentConfig(cluster, collection, defaultHandlerName, shards);\n    } else {\n      // ... with a custom terms component that disregards shards whitelist logic\n      customHandlerName = addCustomHandlerWithCustomTermsComponent(cluster, collection, defaultHandlerName);\n    }\n\n    // search with the custom handler ...\n    findAndCheckTerms(cluster, collection,\n        customHandlerName,\n        shards, // ... with specified shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n  }\n\n","sourceOld":"  private static void doTest(final MiniSolrCloudCluster cluster, final String collection) throws Exception {\n\n    // add some documents\n    final String id = \"id\";\n    final String f1 = \"a_t\";\n    final String f2 = \"b_t\";\n    final String v1 = \"bee\";\n    final String v2 = \"buzz\";\n    {\n      new UpdateRequest()\n          .add(sdoc(id, 1, f1, v1, f2, v2+\" \"+v2+\" \"+v2))\n          .add(sdoc(id, 2, f1, v1+\" \"+v1, f2, v2+\" \"+v2))\n          .add(sdoc(id, 3, f1, v1+\" \"+v1+\" \"+v1, f2, v2))\n          .commit(cluster.getSolrClient(), collection);\n    }\n\n    // search for the documents' terms ...\n    final String defaultHandlerName = \"/select\";\n\n    // search with the default handler ...\n    final String shards = findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        null, // ... without specifying shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n    // search with the default handler ...\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards, // ... with specified shards, but all valid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n    \n    ignoreException(\"not on the shards whitelist\");\n    // this case should fail\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards + \",http://[ff01::114]:33332\", // ... with specified shards with one invalid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        \"No live SolrServers available to handle this request\");\n    unIgnoreException(\"not on the shards whitelist\");\n\n    // configure a custom handler ...\n    final String customHandlerName;\n    if (random().nextBoolean()) {\n      // ... with a shards whitelist\n      customHandlerName = addCustomHandlerWithTermsComponentConfig(cluster, collection, defaultHandlerName, shards);\n    } else {\n      // ... with a custom terms component that disregards shards whitelist logic\n      customHandlerName = addCustomHandlerWithCustomTermsComponent(cluster, collection, defaultHandlerName);\n    }\n\n    // search with the custom handler ...\n    findAndCheckTerms(cluster, collection,\n        customHandlerName,\n        shards, // ... with specified shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1bc79aa44ce8dfeb7ad9dda5b4f6b4926d003e0c","date":1600965744,"type":4,"author":"S N Munendra","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/handler/component/CustomTermsComponentTest#doTest(MiniSolrCloudCluster,String).mjava","sourceNew":null,"sourceOld":"  private static void doTest(final MiniSolrCloudCluster cluster, final String collection) throws Exception {\n\n    // add some documents\n    final String id = \"id\";\n    final String f1 = \"a_t\";\n    final String f2 = \"b_t\";\n    final String v1 = \"bee\";\n    final String v2 = \"buzz\";\n    {\n      new UpdateRequest()\n          .add(sdoc(id, 1, f1, v1, f2, v2+\" \"+v2+\" \"+v2))\n          .add(sdoc(id, 2, f1, v1+\" \"+v1, f2, v2+\" \"+v2))\n          .add(sdoc(id, 3, f1, v1+\" \"+v1+\" \"+v1, f2, v2))\n          .commit(cluster.getSolrClient(), collection);\n    }\n\n    // search for the documents' terms ...\n    final String defaultHandlerName = \"/select\";\n\n    // search with the default handler ...\n    final String shards = findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        null, // ... without specifying shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n    // search with the default handler ...\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards, // ... with specified shards, but all valid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n    \n    ignoreException(\"not on the shards whitelist\");\n    // this case should fail\n    findAndCheckTerms(cluster, collection,\n        defaultHandlerName,\n        shards + \",http://\" + DEAD_HOST_1, // ... with specified shards with one invalid\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        \"No live SolrServers available to handle this request\");\n    unIgnoreException(\"not on the shards whitelist\");\n\n    // configure a custom handler ...\n    final String customHandlerName;\n    if (random().nextBoolean()) {\n      // ... with a shards whitelist\n      customHandlerName = addCustomHandlerWithTermsComponentConfig(cluster, collection, defaultHandlerName, shards);\n    } else {\n      // ... with a custom terms component that disregards shards whitelist logic\n      customHandlerName = addCustomHandlerWithCustomTermsComponent(cluster, collection, defaultHandlerName);\n    }\n\n    // search with the custom handler ...\n    findAndCheckTerms(cluster, collection,\n        customHandlerName,\n        shards, // ... with specified shards\n        (random().nextBoolean() ? null : f1), v1,\n        (random().nextBoolean() ? null : f2), v2,\n        null);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["4d51e7db479b42602c7e23ba871b177387268179","bc78b7d15e7b8627fa6d1b946da3a39f0225508d"],"1bc79aa44ce8dfeb7ad9dda5b4f6b4926d003e0c":["bc78b7d15e7b8627fa6d1b946da3a39f0225508d"],"4d51e7db479b42602c7e23ba871b177387268179":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1bc79aa44ce8dfeb7ad9dda5b4f6b4926d003e0c"],"bc78b7d15e7b8627fa6d1b946da3a39f0225508d":["4d51e7db479b42602c7e23ba871b177387268179"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"4d51e7db479b42602c7e23ba871b177387268179":["df724d84dab24a0cc54bec95a8680867adc7f171","bc78b7d15e7b8627fa6d1b946da3a39f0225508d"],"1bc79aa44ce8dfeb7ad9dda5b4f6b4926d003e0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d51e7db479b42602c7e23ba871b177387268179"],"bc78b7d15e7b8627fa6d1b946da3a39f0225508d":["df724d84dab24a0cc54bec95a8680867adc7f171","1bc79aa44ce8dfeb7ad9dda5b4f6b4926d003e0c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}