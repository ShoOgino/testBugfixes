{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes().mjava","sourceNew":"  @Test\n  public void testAttributes() {\n    String xml=\"<root>\\n\"\n             + \"   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"   <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"   <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/b\");\n    rr.addField(\"a\", \"/root/b/@a\", false);\n    rr.addField(\"b\", \"/root/b/@b\", false);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(3, l.size());\n    assertEquals(\"x0\", l.get(0).get(\"a\"));\n    assertEquals(\"x1\", l.get(1).get(\"a\"));\n    assertEquals(\"x2\", l.get(2).get(\"a\"));\n    assertEquals(\"y0\", l.get(0).get(\"b\"));\n    assertEquals(\"y1\", l.get(1).get(\"b\"));\n    assertEquals(\"y2\", l.get(2).get(\"b\"));\n  }\n\n","sourceOld":"  @Test\n  public void testAttributes() {\n    String xml=\"<root>\\n\"\n             + \"   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"   <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"   <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/b\");\n    rr.addField(\"a\", \"/root/b/@a\", false);\n    rr.addField(\"b\", \"/root/b/@b\", false);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(3, l.size());\n    assertEquals(\"x0\", l.get(0).get(\"a\"));\n    assertEquals(\"x1\", l.get(1).get(\"a\"));\n    assertEquals(\"x2\", l.get(2).get(\"a\"));\n    assertEquals(\"y0\", l.get(0).get(\"b\"));\n    assertEquals(\"y1\", l.get(1).get(\"b\"));\n    assertEquals(\"y2\", l.get(2).get(\"b\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes().mjava","sourceNew":"  @Test\n  public void testAttributes() {\n    String xml=\"<root>\\n\"\n             + \"   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"   <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"   <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/b\");\n    rr.addField(\"a\", \"/root/b/@a\", false);\n    rr.addField(\"b\", \"/root/b/@b\", false);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(3, l.size());\n    assertEquals(\"x0\", l.get(0).get(\"a\"));\n    assertEquals(\"x1\", l.get(1).get(\"a\"));\n    assertEquals(\"x2\", l.get(2).get(\"a\"));\n    assertEquals(\"y0\", l.get(0).get(\"b\"));\n    assertEquals(\"y1\", l.get(1).get(\"b\"));\n    assertEquals(\"y2\", l.get(2).get(\"b\"));\n  }\n\n","sourceOld":"  @Test\n  public void testAttributes() {\n    String xml=\"<root>\\n\"\n             + \"   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"   <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"   <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/b\");\n    rr.addField(\"a\", \"/root/b/@a\", false);\n    rr.addField(\"b\", \"/root/b/@b\", false);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(3, l.size());\n    assertEquals(\"x0\", l.get(0).get(\"a\"));\n    assertEquals(\"x1\", l.get(1).get(\"a\"));\n    assertEquals(\"x2\", l.get(2).get(\"a\"));\n    assertEquals(\"y0\", l.get(0).get(\"b\"));\n    assertEquals(\"y1\", l.get(1).get(\"b\"));\n    assertEquals(\"y2\", l.get(2).get(\"b\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testAttributes() {\n    String xml=\"<root>\\n\"\n             + \"   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"   <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"   <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/b\");\n    rr.addField(\"a\", \"/root/b/@a\", false);\n    rr.addField(\"b\", \"/root/b/@b\", false);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(3, l.size());\n    assertEquals(\"x0\", l.get(0).get(\"a\"));\n    assertEquals(\"x1\", l.get(1).get(\"a\"));\n    assertEquals(\"x2\", l.get(2).get(\"a\"));\n    assertEquals(\"y0\", l.get(0).get(\"b\"));\n    assertEquals(\"y1\", l.get(1).get(\"b\"));\n    assertEquals(\"y2\", l.get(2).get(\"b\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}