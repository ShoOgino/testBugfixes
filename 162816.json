{"path":"solr/src/test/org/apache/solr/analysis/TestGreekLowerCaseFilterFactory#testNormalization().mjava","commits":[{"id":"d904121e1b8a2d91a857a0129c926ce927059a01","date":1274095684,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestGreekLowerCaseFilterFactory#testNormalization().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestGreekLowerCaseFilterFactory#testStemming().mjava","sourceNew":"  /**\n   * Ensure the filter actually lowercases (and a bit more) greek text.\n   */\n  public void testNormalization() throws Exception {\n    Reader reader = new StringReader(\"Μάϊος ΜΆΪΟΣ\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    GreekLowerCaseFilterFactory factory = new GreekLowerCaseFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"μαιοσ\", \"μαιοσ\" });\n  }\n\n","sourceOld":"  /**\n   * Ensure the filter actually lowercases (and a bit more) greek text.\n   */\n  public void testStemming() throws Exception {\n    Reader reader = new StringReader(\"Μάϊος ΜΆΪΟΣ\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    GreekLowerCaseFilterFactory factory = new GreekLowerCaseFilterFactory();\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"μαιοσ\", \"μαιοσ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestGreekLowerCaseFilterFactory#testNormalization().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestGreekLowerCaseFilterFactory#testNormalization().mjava","sourceNew":"  /**\n   * Ensure the filter actually lowercases (and a bit more) greek text.\n   */\n  public void testNormalization() throws Exception {\n    Reader reader = new StringReader(\"Μάϊος ΜΆΪΟΣ\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    GreekLowerCaseFilterFactory factory = new GreekLowerCaseFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"μαιοσ\", \"μαιοσ\" });\n  }\n\n","sourceOld":"  /**\n   * Ensure the filter actually lowercases (and a bit more) greek text.\n   */\n  public void testNormalization() throws Exception {\n    Reader reader = new StringReader(\"Μάϊος ΜΆΪΟΣ\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    GreekLowerCaseFilterFactory factory = new GreekLowerCaseFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"μαιοσ\", \"μαιοσ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestGreekLowerCaseFilterFactory#testNormalization().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestGreekLowerCaseFilterFactory#testNormalization().mjava","sourceNew":"  /**\n   * Ensure the filter actually lowercases (and a bit more) greek text.\n   */\n  public void testNormalization() throws Exception {\n    Reader reader = new StringReader(\"Μάϊος ΜΆΪΟΣ\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    GreekLowerCaseFilterFactory factory = new GreekLowerCaseFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"μαιοσ\", \"μαιοσ\" });\n  }\n\n","sourceOld":"  /**\n   * Ensure the filter actually lowercases (and a bit more) greek text.\n   */\n  public void testNormalization() throws Exception {\n    Reader reader = new StringReader(\"Μάϊος ΜΆΪΟΣ\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    GreekLowerCaseFilterFactory factory = new GreekLowerCaseFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"μαιοσ\", \"μαιοσ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestGreekLowerCaseFilterFactory#testNormalization().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestGreekLowerCaseFilterFactory#testNormalization().mjava","sourceNew":"  /**\n   * Ensure the filter actually lowercases (and a bit more) greek text.\n   */\n  public void testNormalization() throws Exception {\n    Reader reader = new StringReader(\"Μάϊος ΜΆΪΟΣ\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    GreekLowerCaseFilterFactory factory = new GreekLowerCaseFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"μαιοσ\", \"μαιοσ\" });\n  }\n\n","sourceOld":"  /**\n   * Ensure the filter actually lowercases (and a bit more) greek text.\n   */\n  public void testNormalization() throws Exception {\n    Reader reader = new StringReader(\"Μάϊος ΜΆΪΟΣ\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    GreekLowerCaseFilterFactory factory = new GreekLowerCaseFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"μαιοσ\", \"μαιοσ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["d904121e1b8a2d91a857a0129c926ce927059a01"],"c26f00b574427b55127e869b935845554afde1fa":["d904121e1b8a2d91a857a0129c926ce927059a01","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["d904121e1b8a2d91a857a0129c926ce927059a01"],"d904121e1b8a2d91a857a0129c926ce927059a01":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d904121e1b8a2d91a857a0129c926ce927059a01"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d904121e1b8a2d91a857a0129c926ce927059a01":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}