{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","commits":[{"id":"d7a738ebbf9537051521dcc7e49f69208f91e2fc","date":1358194026,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    addBinaryField(field, values);\n    addNumericField(field, docToOrd);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    addBinaryField(field, values);\n    addNumericField(field, docToOrd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f2be786bbf3746ffcd9720e0b473f4b121c4228","date":1359663177,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addBinaryField(field, values);\n    addNumericField(field, docToOrd);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    addBinaryField(field, values);\n    addNumericField(field, docToOrd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addBinaryField(field, values);\n    addNumericField(field, docToOrd);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf317f41f8247db62a955791ebb8a5ab3e7c8d47","date":1366724337,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addBinaryField(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addBinaryField(field, values);\n    addNumericField(field, docToOrd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad01348544f9eb6ee985c300245013a75addfc6","date":1376095061,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addTermsDict(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addBinaryField(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addTermsDict(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addBinaryField(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9faa42f41b6adb98daf009cf99a4ee239189e469","date":1376648738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    // nocommit: remove this hack and support missing!\n\n    // three cases for simulating the old writer:\n    // 1. no missing\n    // 2. missing (and empty string in use): remap ord=-1 -> ord=0\n    // 3. missing (and empty string not in use): remap all ords +1, insert empty string into values\n    boolean anyMissing = false;\n    for (Number n : docToOrd) {\n      if (n.longValue() == -1) {\n        anyMissing = true;\n        break;\n      }\n    }\n    \n    boolean hasEmptyString = false;\n    for (BytesRef b : values) {\n      hasEmptyString = b.length == 0;\n      break;\n    }\n    \n    if (!anyMissing) {\n      // nothing to do\n    } else if (hasEmptyString) {\n      docToOrd = MissingOrdRemapper.mapMissingToOrd0(docToOrd);\n    } else {\n      docToOrd = MissingOrdRemapper.mapAllOrds(docToOrd);\n      values = MissingOrdRemapper.insertEmptyValue(values);\n    }\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addTermsDict(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addTermsDict(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11a746437bc5c0a0b3df0337ed249c387c812871","date":1376687959,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    // nocommit: remove this hack and support missing!\n\n    // three cases for simulating the old writer:\n    // 1. no missing\n    // 2. missing (and empty string in use): remap ord=-1 -> ord=0\n    // 3. missing (and empty string not in use): remap all ords +1, insert empty string into values\n    boolean anyMissing = false;\n    for (Number n : docToOrd) {\n      if (n.longValue() == -1) {\n        anyMissing = true;\n        break;\n      }\n    }\n    \n    boolean hasEmptyString = false;\n    for (BytesRef b : values) {\n      hasEmptyString = b.length == 0;\n      break;\n    }\n    \n    if (!anyMissing) {\n      // nothing to do\n    } else if (hasEmptyString) {\n      docToOrd = MissingOrdRemapper.mapMissingToOrd0(docToOrd);\n    } else {\n      docToOrd = MissingOrdRemapper.mapAllOrds(docToOrd);\n      values = MissingOrdRemapper.insertEmptyValue(values);\n    }\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.SORTED);\n    addTermsDict(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    // nocommit: remove this hack and support missing!\n\n    // three cases for simulating the old writer:\n    // 1. no missing\n    // 2. missing (and empty string in use): remap ord=-1 -> ord=0\n    // 3. missing (and empty string not in use): remap all ords +1, insert empty string into values\n    boolean anyMissing = false;\n    for (Number n : docToOrd) {\n      if (n.longValue() == -1) {\n        anyMissing = true;\n        break;\n      }\n    }\n    \n    boolean hasEmptyString = false;\n    for (BytesRef b : values) {\n      hasEmptyString = b.length == 0;\n      break;\n    }\n    \n    if (!anyMissing) {\n      // nothing to do\n    } else if (hasEmptyString) {\n      docToOrd = MissingOrdRemapper.mapMissingToOrd0(docToOrd);\n    } else {\n      docToOrd = MissingOrdRemapper.mapAllOrds(docToOrd);\n      values = MissingOrdRemapper.insertEmptyValue(values);\n    }\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addTermsDict(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.SORTED);\n    addTermsDict(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addTermsDict(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(DiskDocValuesFormat.SORTED);\n    addTermsDict(field, values);\n    addNumericField(field, docToOrd, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11a746437bc5c0a0b3df0337ed249c387c812871":["9faa42f41b6adb98daf009cf99a4ee239189e469"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9f2be786bbf3746ffcd9720e0b473f4b121c4228"],"9f2be786bbf3746ffcd9720e0b473f4b121c4228":["d7a738ebbf9537051521dcc7e49f69208f91e2fc"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["0ad01348544f9eb6ee985c300245013a75addfc6"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["bf317f41f8247db62a955791ebb8a5ab3e7c8d47"],"0ad01348544f9eb6ee985c300245013a75addfc6":["bf317f41f8247db62a955791ebb8a5ab3e7c8d47"],"bf317f41f8247db62a955791ebb8a5ab3e7c8d47":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["0ad01348544f9eb6ee985c300245013a75addfc6","11a746437bc5c0a0b3df0337ed249c387c812871"],"d7a738ebbf9537051521dcc7e49f69208f91e2fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"]},"commit2Childs":{"11a746437bc5c0a0b3df0337ed249c387c812871":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["bf317f41f8247db62a955791ebb8a5ab3e7c8d47"],"9f2be786bbf3746ffcd9720e0b473f4b121c4228":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["11a746437bc5c0a0b3df0337ed249c387c812871"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","d7a738ebbf9537051521dcc7e49f69208f91e2fc"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"0ad01348544f9eb6ee985c300245013a75addfc6":["9faa42f41b6adb98daf009cf99a4ee239189e469","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bf317f41f8247db62a955791ebb8a5ab3e7c8d47":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","0ad01348544f9eb6ee985c300245013a75addfc6"],"d7a738ebbf9537051521dcc7e49f69208f91e2fc":["9f2be786bbf3746ffcd9720e0b473f4b121c4228"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}