{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.MemoryFieldsConsumer#close().mjava","commits":[{"id":"fa80a35d7c4b2b1e83082b275e3e8328ab93db52","date":1381766157,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.MemoryFieldsConsumer#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat.AssertingPushFieldsConsumer#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      // EOF marker:\n      try {\n        out.writeVInt(0);\n      } finally {\n        out.close();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      in.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.MemoryFieldsConsumer#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.MemoryFieldsConsumer#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      // EOF marker:\n      try {\n        out.writeVInt(0);\n        CodecUtil.writeFooter(out);\n      } finally {\n        out.close();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      // EOF marker:\n      try {\n        out.writeVInt(0);\n      } finally {\n        out.close();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.MemoryFieldsConsumer#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.MemoryFieldsConsumer#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      // EOF marker:\n      try {\n        out.writeVInt(0);\n        CodecUtil.writeFooter(out);\n      } finally {\n        out.close();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      // EOF marker:\n      try {\n        out.writeVInt(0);\n      } finally {\n        out.close();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b07132423639577d6f68cebbec9c83599d5d5a3a","date":1419020622,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.MemoryFieldsConsumer#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.MemoryFieldsConsumer#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (closed) {\n        return;\n      }\n      closed = true;\n      \n      // EOF marker:\n      try (IndexOutput out = this.out) {\n        out.writeVInt(0);\n        CodecUtil.writeFooter(out);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      // EOF marker:\n      try {\n        out.writeVInt(0);\n        CodecUtil.writeFooter(out);\n      } finally {\n        out.close();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f89e8a6aac05753cde4c83d62a74356098200d","date":1525768331,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.MemoryFieldsConsumer#close().mjava","sourceNew":null,"sourceOld":"    @Override\n    public void close() throws IOException {\n      if (closed) {\n        return;\n      }\n      closed = true;\n      \n      // EOF marker:\n      try (IndexOutput out = this.out) {\n        out.writeVInt(0);\n        CodecUtil.writeFooter(out);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"b07132423639577d6f68cebbec9c83599d5d5a3a":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"24f89e8a6aac05753cde4c83d62a74356098200d":["b07132423639577d6f68cebbec9c83599d5d5a3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24f89e8a6aac05753cde4c83d62a74356098200d"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","b07132423639577d6f68cebbec9c83599d5d5a3a"],"b07132423639577d6f68cebbec9c83599d5d5a3a":["24f89e8a6aac05753cde4c83d62a74356098200d"],"24f89e8a6aac05753cde4c83d62a74356098200d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}