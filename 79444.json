{"path":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","commits":[{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set).mjava","sourceNew":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set<?> stopWords) {\n    stopSet = stopWords;\n    setOverridesTokenStreamMethod(StandardAnalyzer.class);\n    enableStopPositionIncrements = matchVersion.onOrAfter(Version.LUCENE_29);\n    replaceInvalidAcronym = matchVersion.onOrAfter(Version.LUCENE_24);\n  }\n\n","sourceOld":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set stopWords) {\n    stopSet = stopWords;\n    init(matchVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","sourceNew":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set<?> stopWords) {\n    stopSet = stopWords;\n    setOverridesTokenStreamMethod(StandardAnalyzer.class);\n    enableStopPositionIncrements = matchVersion.onOrAfter(Version.LUCENE_29);\n    replaceInvalidAcronym = matchVersion.onOrAfter(Version.LUCENE_24);\n    this.matchVersion = matchVersion;\n  }\n\n","sourceOld":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set<?> stopWords) {\n    stopSet = stopWords;\n    setOverridesTokenStreamMethod(StandardAnalyzer.class);\n    enableStopPositionIncrements = matchVersion.onOrAfter(Version.LUCENE_29);\n    replaceInvalidAcronym = matchVersion.onOrAfter(Version.LUCENE_24);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c8de810875032655c7b5d5bf07c5a6a22e70290","date":1256716915,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","sourceNew":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set<?> stopWords) {\n    stopSet = stopWords;\n    setOverridesTokenStreamMethod(StandardAnalyzer.class);\n    enableStopPositionIncrements = StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion);\n    replaceInvalidAcronym = matchVersion.onOrAfter(Version.LUCENE_24);\n    this.matchVersion = matchVersion;\n  }\n\n","sourceOld":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set<?> stopWords) {\n    stopSet = stopWords;\n    setOverridesTokenStreamMethod(StandardAnalyzer.class);\n    enableStopPositionIncrements = matchVersion.onOrAfter(Version.LUCENE_29);\n    replaceInvalidAcronym = matchVersion.onOrAfter(Version.LUCENE_24);\n    this.matchVersion = matchVersion;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","sourceNew":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set<?> stopWords) {\n    stopSet = stopWords;\n    setOverridesTokenStreamMethod(StandardAnalyzer.class);\n    replaceInvalidAcronym = matchVersion.onOrAfter(Version.LUCENE_24);\n    this.matchVersion = matchVersion;\n  }\n\n","sourceOld":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set<?> stopWords) {\n    stopSet = stopWords;\n    setOverridesTokenStreamMethod(StandardAnalyzer.class);\n    enableStopPositionIncrements = StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion);\n    replaceInvalidAcronym = matchVersion.onOrAfter(Version.LUCENE_24);\n    this.matchVersion = matchVersion;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e","date":1263329721,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","sourceNew":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set<?> stopWords) {\n    stopSet = stopWords;\n    replaceInvalidAcronym = matchVersion.onOrAfter(Version.LUCENE_24);\n    this.matchVersion = matchVersion;\n  }\n\n","sourceOld":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set<?> stopWords) {\n    stopSet = stopWords;\n    setOverridesTokenStreamMethod(StandardAnalyzer.class);\n    replaceInvalidAcronym = matchVersion.onOrAfter(Version.LUCENE_24);\n    this.matchVersion = matchVersion;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(Version,Set[#]).mjava","sourceNew":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set<?> stopWords) {\n    stopSet = stopWords;\n    replaceInvalidAcronym = matchVersion.onOrAfter(Version.LUCENE_24);\n    this.matchVersion = matchVersion;\n  }\n\n","sourceOld":"  /** Builds an analyzer with the given stop words.\n   * @param matchVersion Lucene version to match See {@link\n   * <a href=\"#version\">above</a>}\n   * @param stopWords stop words */\n  public StandardAnalyzer(Version matchVersion, Set<?> stopWords) {\n    stopSet = stopWords;\n    replaceInvalidAcronym = matchVersion.onOrAfter(Version.LUCENE_24);\n    this.matchVersion = matchVersion;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c8de810875032655c7b5d5bf07c5a6a22e70290":["ba1116b3450a9c1642c89445d131b37344055245"],"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["4c8de810875032655c7b5d5bf07c5a6a22e70290"],"ba1116b3450a9c1642c89445d131b37344055245":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"]},"commit2Childs":{"4c8de810875032655c7b5d5bf07c5a6a22e70290":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["ba1116b3450a9c1642c89445d131b37344055245"],"ba1116b3450a9c1642c89445d131b37344055245":["4c8de810875032655c7b5d5bf07c5a6a22e70290"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}