{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLatitudeZone#getBounds(Bounds).mjava","commits":[{"id":"ea1a3e0b93787916a1002c2be9f1043b6575ea69","date":1429103360,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLatitudeZone#getBounds(Bounds).mjava","pathOld":"/dev/null","sourceNew":"    /** Compute longitude/latitude bounds for the shape.\n    *@param bounds is the optional input bounds object.  If this is null,\n    * a bounds object will be created.  Otherwise, the input object will be modified.\n    *@return a Bounds object describing the shape's bounds.  If the bounds cannot\n    * be computed, then return a Bounds object with noLongitudeBound,\n    * noTopLatitudeBound, and noBottomLatitudeBound.\n    */\n    @Override\n    public Bounds getBounds(Bounds bounds)\n    {\n        if (bounds == null)\n            bounds = new Bounds();\n        bounds.noLongitudeBound().addLatitudeZone(latitude);\n        return bounds;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLatitudeZone#getBounds(Bounds).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLatitudeZone#getBounds(Bounds).mjava","sourceNew":"  /**\n   * Compute longitude/latitude bounds for the shape.\n   *\n   * @param bounds is the optional input bounds object.  If this is null,\n   *               a bounds object will be created.  Otherwise, the input object will be modified.\n   * @return a Bounds object describing the shape's bounds.  If the bounds cannot\n   * be computed, then return a Bounds object with noLongitudeBound,\n   * noTopLatitudeBound, and noBottomLatitudeBound.\n   */\n  @Override\n  public Bounds getBounds(Bounds bounds) {\n    if (bounds == null)\n      bounds = new Bounds();\n    bounds.noLongitudeBound().addLatitudeZone(latitude);\n    return bounds;\n  }\n\n","sourceOld":"    /** Compute longitude/latitude bounds for the shape.\n    *@param bounds is the optional input bounds object.  If this is null,\n    * a bounds object will be created.  Otherwise, the input object will be modified.\n    *@return a Bounds object describing the shape's bounds.  If the bounds cannot\n    * be computed, then return a Bounds object with noLongitudeBound,\n    * noTopLatitudeBound, and noBottomLatitudeBound.\n    */\n    @Override\n    public Bounds getBounds(Bounds bounds)\n    {\n        if (bounds == null)\n            bounds = new Bounds();\n        bounds.noLongitudeBound().addLatitudeZone(latitude);\n        return bounds;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLatitudeZone#getBounds(Bounds).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Compute longitude/latitude bounds for the shape.\n   *\n   * @param bounds is the optional input bounds object.  If this is null,\n   *               a bounds object will be created.  Otherwise, the input object will be modified.\n   * @return a Bounds object describing the shape's bounds.  If the bounds cannot\n   * be computed, then return a Bounds object with noLongitudeBound,\n   * noTopLatitudeBound, and noBottomLatitudeBound.\n   */\n  @Override\n  public Bounds getBounds(Bounds bounds) {\n    if (bounds == null)\n      bounds = new Bounds();\n    bounds.noLongitudeBound().addLatitudeZone(latitude);\n    return bounds;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoDegenerateLatitudeZone#getBounds(Bounds).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLatitudeZone#getBounds(Bounds).mjava","sourceNew":"  /**\n   * Compute longitude/latitude bounds for the shape.\n   *\n   * @param bounds is the optional input bounds object.  If this is null,\n   *               a bounds object will be created.  Otherwise, the input object will be modified.\n   * @return a Bounds object describing the shape's bounds.  If the bounds cannot\n   * be computed, then return a Bounds object with noLongitudeBound,\n   * noTopLatitudeBound, and noBottomLatitudeBound.\n   */\n  @Override\n  public Bounds getBounds(Bounds bounds) {\n    if (bounds == null)\n      bounds = new Bounds();\n    bounds.noLongitudeBound().addLatitudeZone(latitude);\n    return bounds;\n  }\n\n","sourceOld":"  /**\n   * Compute longitude/latitude bounds for the shape.\n   *\n   * @param bounds is the optional input bounds object.  If this is null,\n   *               a bounds object will be created.  Otherwise, the input object will be modified.\n   * @return a Bounds object describing the shape's bounds.  If the bounds cannot\n   * be computed, then return a Bounds object with noLongitudeBound,\n   * noTopLatitudeBound, and noBottomLatitudeBound.\n   */\n  @Override\n  public Bounds getBounds(Bounds bounds) {\n    if (bounds == null)\n      bounds = new Bounds();\n    bounds.noLongitudeBound().addLatitudeZone(latitude);\n    return bounds;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ea1a3e0b93787916a1002c2be9f1043b6575ea69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["ea1a3e0b93787916a1002c2be9f1043b6575ea69"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"ea1a3e0b93787916a1002c2be9f1043b6575ea69":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea1a3e0b93787916a1002c2be9f1043b6575ea69","c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}