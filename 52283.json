{"path":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getMaxVersion(IndexCommit).mjava","commits":[{"id":"77cae179618908dcb534af567cdf3019505ada6c","date":1449365361,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getMaxVersion(IndexCommit).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Retrieves the maximum version number from an index commit.\n   */\n  private long getMaxVersion(IndexCommit commit) throws IOException {\n    try (DirectoryReader reader = DirectoryReader.open(commit)) {\n      IndexSearcher searcher = new IndexSearcher(reader);\n      VersionInfo vinfo = core.getUpdateHandler().getUpdateLog().getVersionInfo();\n      return Math.abs(vinfo.getMaxVersionFromIndex(searcher));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19f02bb04467ed179738a398a7da80bbbe161c16","date":1573660732,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getMaxVersion(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getMaxVersion(IndexCommit).mjava","sourceNew":"  /**\n   * Retrieves the maximum version number from an index commit.\n   * NOTE: The commit <b>MUST</b> be reserved before calling this method\n   */\n  private long getMaxVersion(IndexCommit commit) throws IOException {\n    try (DirectoryReader reader = DirectoryReader.open(commit)) {\n      IndexSearcher searcher = new IndexSearcher(reader);\n      VersionInfo vinfo = core.getUpdateHandler().getUpdateLog().getVersionInfo();\n      return Math.abs(vinfo.getMaxVersionFromIndex(searcher));\n    }\n  }\n\n","sourceOld":"  /**\n   * Retrieves the maximum version number from an index commit.\n   */\n  private long getMaxVersion(IndexCommit commit) throws IOException {\n    try (DirectoryReader reader = DirectoryReader.open(commit)) {\n      IndexSearcher searcher = new IndexSearcher(reader);\n      VersionInfo vinfo = core.getUpdateHandler().getUpdateLog().getVersionInfo();\n      return Math.abs(vinfo.getMaxVersionFromIndex(searcher));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"77cae179618908dcb534af567cdf3019505ada6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"19f02bb04467ed179738a398a7da80bbbe161c16":["77cae179618908dcb534af567cdf3019505ada6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19f02bb04467ed179738a398a7da80bbbe161c16"]},"commit2Childs":{"77cae179618908dcb534af567cdf3019505ada6c":["19f02bb04467ed179738a398a7da80bbbe161c16"],"19f02bb04467ed179738a398a7da80bbbe161c16":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["77cae179618908dcb534af567cdf3019505ada6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}