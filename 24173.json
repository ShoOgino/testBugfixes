{"path":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","pathOld":"/dev/null","sourceNew":"  @Override\r\n  protected void firstInit(Context context) {\r\n    String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\r\n    if (tikaConfigFile == null) {\r\n      tikaConfig = TikaConfig.getDefaultConfig();\r\n    } else {\r\n      File configFile = new File(tikaConfigFile);\r\n      if (!configFile.isAbsolute()) {\r\n        configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\r\n      }\r\n      try {\r\n        tikaConfig = new TikaConfig(configFile);\r\n      } catch (Exception e) {\r\n        wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\r\n      }\r\n    }\r\n\r\n    format = context.getResolvedEntityAttribute(\"format\");\r\n    if(format == null)\r\n      format = \"text\";\r\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\r\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\r\n    parser = context.getResolvedEntityAttribute(\"parser\");\r\n    if(parser == null) {\r\n      parser = AUTO_PARSER;\r\n    }\r\n    done = false;\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","sourceNew":null,"sourceOld":"  @Override\r\n  protected void firstInit(Context context) {\r\n    String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\r\n    if (tikaConfigFile == null) {\r\n      tikaConfig = TikaConfig.getDefaultConfig();\r\n    } else {\r\n      File configFile = new File(tikaConfigFile);\r\n      if (!configFile.isAbsolute()) {\r\n        configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\r\n      }\r\n      try {\r\n        tikaConfig = new TikaConfig(configFile);\r\n      } catch (Exception e) {\r\n        wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\r\n      }\r\n    }\r\n\r\n    format = context.getResolvedEntityAttribute(\"format\");\r\n    if(format == null)\r\n      format = \"text\";\r\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\r\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\r\n    parser = context.getResolvedEntityAttribute(\"parser\");\r\n    if(parser == null) {\r\n      parser = AUTO_PARSER;\r\n    }\r\n    done = false;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","pathOld":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","sourceNew":"  @Override\r\n  protected void firstInit(Context context) {\r\n    String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\r\n    if (tikaConfigFile == null) {\r\n      tikaConfig = TikaConfig.getDefaultConfig();\r\n    } else {\r\n      File configFile = new File(tikaConfigFile);\r\n      if (!configFile.isAbsolute()) {\r\n        configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\r\n      }\r\n      try {\r\n        tikaConfig = new TikaConfig(configFile);\r\n      } catch (Exception e) {\r\n        wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\r\n      }\r\n    }\r\n\r\n    format = context.getResolvedEntityAttribute(\"format\");\r\n    if(format == null)\r\n      format = \"text\";\r\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\r\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\r\n    parser = context.getResolvedEntityAttribute(\"parser\");\r\n    if(parser == null) {\r\n      parser = AUTO_PARSER;\r\n    }\r\n    done = false;\r\n  }\r\n\n","sourceOld":"  @Override\r\n  protected void firstInit(Context context) {\r\n    String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\r\n    if (tikaConfigFile == null) {\r\n      tikaConfig = TikaConfig.getDefaultConfig();\r\n    } else {\r\n      File configFile = new File(tikaConfigFile);\r\n      if (!configFile.isAbsolute()) {\r\n        configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\r\n      }\r\n      try {\r\n        tikaConfig = new TikaConfig(configFile);\r\n      } catch (Exception e) {\r\n        wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\r\n      }\r\n    }\r\n\r\n    format = context.getResolvedEntityAttribute(\"format\");\r\n    if(format == null)\r\n      format = \"text\";\r\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\r\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\r\n    parser = context.getResolvedEntityAttribute(\"parser\");\r\n    if(parser == null) {\r\n      parser = AUTO_PARSER;\r\n    }\r\n    done = false;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","pathOld":"/dev/null","sourceNew":"  @Override\r\n  protected void firstInit(Context context) {\r\n    String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\r\n    if (tikaConfigFile == null) {\r\n      tikaConfig = TikaConfig.getDefaultConfig();\r\n    } else {\r\n      File configFile = new File(tikaConfigFile);\r\n      if (!configFile.isAbsolute()) {\r\n        configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\r\n      }\r\n      try {\r\n        tikaConfig = new TikaConfig(configFile);\r\n      } catch (Exception e) {\r\n        wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\r\n      }\r\n    }\r\n\r\n    format = context.getResolvedEntityAttribute(\"format\");\r\n    if(format == null)\r\n      format = \"text\";\r\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\r\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\r\n    parser = context.getResolvedEntityAttribute(\"parser\");\r\n    if(parser == null) {\r\n      parser = AUTO_PARSER;\r\n    }\r\n    done = false;\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dff3adc4fd8094e3973a5ecbbe8968ae45a86a55","date":1270182973,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","sourceNew":"  @Override\n  protected void firstInit(Context context) {\n    String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n    if (tikaConfigFile == null) {\n      tikaConfig = TikaConfig.getDefaultConfig();\n    } else {\n      File configFile = new File(tikaConfigFile);\n      if (!configFile.isAbsolute()) {\n        configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n      }\n      try {\n        tikaConfig = new TikaConfig(configFile);\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n      }\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","sourceOld":"  @Override\r\n  protected void firstInit(Context context) {\r\n    String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\r\n    if (tikaConfigFile == null) {\r\n      tikaConfig = TikaConfig.getDefaultConfig();\r\n    } else {\r\n      File configFile = new File(tikaConfigFile);\r\n      if (!configFile.isAbsolute()) {\r\n        configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\r\n      }\r\n      try {\r\n        tikaConfig = new TikaConfig(configFile);\r\n      } catch (Exception e) {\r\n        wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\r\n      }\r\n    }\r\n\r\n    format = context.getResolvedEntityAttribute(\"format\");\r\n    if(format == null)\r\n      format = \"text\";\r\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\r\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\r\n    parser = context.getResolvedEntityAttribute(\"parser\");\r\n    if(parser == null) {\r\n      parser = AUTO_PARSER;\r\n    }\r\n    done = false;\r\n  }\r\n\n","bugFix":null,"bugIntro":["7a44eed04d1d2ab59a15f61458f9e7c27042935d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7a44eed04d1d2ab59a15f61458f9e7c27042935d","date":1298080150,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","sourceNew":"  @Override\n  protected void firstInit(Context context) {\n    try {\n      String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n      if (tikaConfigFile == null) {\n        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n        tikaConfig = new TikaConfig(classLoader);\n      } else {\n        File configFile = new File(tikaConfigFile);\n        if (!configFile.isAbsolute()) {\n          configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n        }\n        tikaConfig = new TikaConfig(configFile);\n      }\n    } catch (Exception e) {\n      wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","sourceOld":"  @Override\n  protected void firstInit(Context context) {\n    String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n    if (tikaConfigFile == null) {\n      tikaConfig = TikaConfig.getDefaultConfig();\n    } else {\n      File configFile = new File(tikaConfigFile);\n      if (!configFile.isAbsolute()) {\n        configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n      }\n      try {\n        tikaConfig = new TikaConfig(configFile);\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n      }\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","bugFix":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","sourceNew":"  @Override\n  protected void firstInit(Context context) {\n    try {\n      String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n      if (tikaConfigFile == null) {\n        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n        tikaConfig = new TikaConfig(classLoader);\n      } else {\n        File configFile = new File(tikaConfigFile);\n        if (!configFile.isAbsolute()) {\n          configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n        }\n        tikaConfig = new TikaConfig(configFile);\n      }\n    } catch (Exception e) {\n      wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","sourceOld":"  @Override\n  protected void firstInit(Context context) {\n    String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n    if (tikaConfigFile == null) {\n      tikaConfig = TikaConfig.getDefaultConfig();\n    } else {\n      File configFile = new File(tikaConfigFile);\n      if (!configFile.isAbsolute()) {\n        configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n      }\n      try {\n        tikaConfig = new TikaConfig(configFile);\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n      }\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","sourceNew":"  @Override\n  protected void firstInit(Context context) {\n    try {\n      String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n      if (tikaConfigFile == null) {\n        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n        tikaConfig = new TikaConfig(classLoader);\n      } else {\n        File configFile = new File(tikaConfigFile);\n        if (!configFile.isAbsolute()) {\n          configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n        }\n        tikaConfig = new TikaConfig(configFile);\n      }\n    } catch (Exception e) {\n      wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","sourceOld":"  @Override\n  protected void firstInit(Context context) {\n    String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n    if (tikaConfigFile == null) {\n      tikaConfig = TikaConfig.getDefaultConfig();\n    } else {\n      File configFile = new File(tikaConfigFile);\n      if (!configFile.isAbsolute()) {\n        configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n      }\n      try {\n        tikaConfig = new TikaConfig(configFile);\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n      }\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","sourceNew":"  @Override\n  protected void firstInit(Context context) {\n    try {\n      String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n      if (tikaConfigFile == null) {\n        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n        tikaConfig = new TikaConfig(classLoader);\n      } else {\n        File configFile = new File(tikaConfigFile);\n        if (!configFile.isAbsolute()) {\n          configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n        }\n        tikaConfig = new TikaConfig(configFile);\n      }\n    } catch (Exception e) {\n      wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","sourceOld":"  @Override\n  protected void firstInit(Context context) {\n    try {\n      String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n      if (tikaConfigFile == null) {\n        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n        tikaConfig = new TikaConfig(classLoader);\n      } else {\n        File configFile = new File(tikaConfigFile);\n        if (!configFile.isAbsolute()) {\n          configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n        }\n        tikaConfig = new TikaConfig(configFile);\n      }\n    } catch (Exception e) {\n      wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#firstInit(Context).mjava","sourceNew":"  @Override\n  protected void firstInit(Context context) {\n    try {\n      String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n      if (tikaConfigFile == null) {\n        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n        tikaConfig = new TikaConfig(classLoader);\n      } else {\n        File configFile = new File(tikaConfigFile);\n        if (!configFile.isAbsolute()) {\n          configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n        }\n        tikaConfig = new TikaConfig(configFile);\n      }\n    } catch (Exception e) {\n      wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","sourceOld":"  @Override\n  protected void firstInit(Context context) {\n    try {\n      String tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\n      if (tikaConfigFile == null) {\n        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n        tikaConfig = new TikaConfig(classLoader);\n      } else {\n        File configFile = new File(tikaConfigFile);\n        if (!configFile.isAbsolute()) {\n          configFile = new File(context.getSolrCore().getResourceLoader().getConfigDir(), tikaConfigFile);\n        }\n        tikaConfig = new TikaConfig(configFile);\n      }\n    } catch (Exception e) {\n      wrapAndThrow (SEVERE, e,\"Unable to load Tika Config\");\n    }\n\n    format = context.getResolvedEntityAttribute(\"format\");\n    if(format == null)\n      format = \"text\";\n    if (!\"html\".equals(format) && !\"xml\".equals(format) && !\"text\".equals(format)&& !\"none\".equals(format) )\n      throw new DataImportHandlerException(SEVERE, \"'format' can be one of text|html|xml|none\");\n    parser = context.getResolvedEntityAttribute(\"parser\");\n    if(parser == null) {\n      parser = AUTO_PARSER;\n    }\n    done = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a44eed04d1d2ab59a15f61458f9e7c27042935d":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55","7a44eed04d1d2ab59a15f61458f9e7c27042935d"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["7a44eed04d1d2ab59a15f61458f9e7c27042935d","d20d5e40789b1c42f4f926e3174b271256c43657"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"d20d5e40789b1c42f4f926e3174b271256c43657":["7a44eed04d1d2ab59a15f61458f9e7c27042935d"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"dff3adc4fd8094e3973a5ecbbe8968ae45a86a55":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55","7a44eed04d1d2ab59a15f61458f9e7c27042935d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"7a44eed04d1d2ab59a15f61458f9e7c27042935d":["f1bdbf92da222965b46c0a942c3857ba56e5c638","c26f00b574427b55127e869b935845554afde1fa","d20d5e40789b1c42f4f926e3174b271256c43657","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"d20d5e40789b1c42f4f926e3174b271256c43657":["c26f00b574427b55127e869b935845554afde1fa"],"1da8d55113b689b06716246649de6f62430f15c0":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55"],"dff3adc4fd8094e3973a5ecbbe8968ae45a86a55":["7a44eed04d1d2ab59a15f61458f9e7c27042935d","f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}