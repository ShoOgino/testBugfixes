{"path":"lucene/src/java/org/apache/lucene/index/MultiNorms#norms(IndexReader,String,byte[],int).mjava","commits":[{"id":"e2c4c8fcff2030acaf17ea1c5b036989ba27678d","date":1294184310,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiNorms#norms(IndexReader,String,byte[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Warning: this is heavy! Do not use in a loop, or implement norms()\n   * in your own reader with this (you should likely cache the result).\n   */\n  public static void norms(IndexReader r, String field, byte[] bytes, int offset)\n      throws IOException {\n    // TODO: optimize more maybe\n    byte[] norms = norms(r, field);\n    if (norms == null) {\n      Arrays.fill(bytes, offset, bytes.length, Similarity.getDefault().encodeNormValue(1.0f));\n    } else {\n      System.arraycopy(norms, 0, bytes, offset, r.maxDoc());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiNorms#norms(IndexReader,String,byte[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Warning: this is heavy! Do not use in a loop, or implement norms()\n   * in your own reader with this (you should likely cache the result).\n   */\n  public static void norms(IndexReader r, String field, byte[] bytes, int offset)\n      throws IOException {\n    // TODO: optimize more maybe\n    byte[] norms = norms(r, field);\n    if (norms == null) {\n      Arrays.fill(bytes, offset, bytes.length, Similarity.getDefault().encodeNormValue(1.0f));\n    } else {\n      System.arraycopy(norms, 0, bytes, offset, r.maxDoc());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a54e23e03b47f3d568ab3020bdd386e4b2f0a05","date":1294877328,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/MultiNorms#norms(IndexReader,String,byte[],int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Warning: this is heavy! Do not use in a loop, or implement norms()\n   * in your own reader with this (you should likely cache the result).\n   */\n  public static void norms(IndexReader r, String field, byte[] bytes, int offset)\n      throws IOException {\n    // TODO: optimize more maybe\n    byte[] norms = norms(r, field);\n    if (norms == null) {\n      Arrays.fill(bytes, offset, bytes.length, Similarity.getDefault().encodeNormValue(1.0f));\n    } else {\n      System.arraycopy(norms, 0, bytes, offset, r.maxDoc());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/MultiNorms#norms(IndexReader,String,byte[],int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Warning: this is heavy! Do not use in a loop, or implement norms()\n   * in your own reader with this (you should likely cache the result).\n   */\n  public static void norms(IndexReader r, String field, byte[] bytes, int offset)\n      throws IOException {\n    // TODO: optimize more maybe\n    byte[] norms = norms(r, field);\n    if (norms == null) {\n      Arrays.fill(bytes, offset, bytes.length, Similarity.getDefault().encodeNormValue(1.0f));\n    } else {\n      System.arraycopy(norms, 0, bytes, offset, r.maxDoc());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a54e23e03b47f3d568ab3020bdd386e4b2f0a05":["e2c4c8fcff2030acaf17ea1c5b036989ba27678d"],"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2c4c8fcff2030acaf17ea1c5b036989ba27678d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","7a54e23e03b47f3d568ab3020bdd386e4b2f0a05"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e2c4c8fcff2030acaf17ea1c5b036989ba27678d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7a54e23e03b47f3d568ab3020bdd386e4b2f0a05"]},"commit2Childs":{"7a54e23e03b47f3d568ab3020bdd386e4b2f0a05":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","e2c4c8fcff2030acaf17ea1c5b036989ba27678d"],"e2c4c8fcff2030acaf17ea1c5b036989ba27678d":["7a54e23e03b47f3d568ab3020bdd386e4b2f0a05","70ad682703b8585f5d0a637efec044d57ec05efb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}