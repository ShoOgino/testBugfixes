{"path":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String,IOContext).mjava","commits":[{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name,IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanWrite(name);\n    //nocommit - use buffer based on IOContext\n    return new DirectIOLinuxIndexOutput(new File(getDirectory(), name), forcedBufferSize == 0 ? BufferedIndexOutput.BUFFER_SIZE : forcedBufferSize);\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name) throws IOException {\n    ensureOpen();\n    ensureCanWrite(name);\n    return new DirectIOLinuxIndexOutput(new File(getDirectory(), name), forcedBufferSize == 0 ? BufferedIndexOutput.BUFFER_SIZE : forcedBufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c162b4b9ef005383c38e0912c16267584dc40de5","date":1310021443,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanWrite(name);\n    return new DirectIOLinuxIndexOutput(new File(getDirectory(), name), bufferSize(context));\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name,IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanWrite(name);\n    //nocommit - use buffer based on IOContext\n    return new DirectIOLinuxIndexOutput(new File(getDirectory(), name), forcedBufferSize == 0 ? BufferedIndexOutput.BUFFER_SIZE : forcedBufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanWrite(name);\n    return new DirectIOLinuxIndexOutput(new File(getDirectory(), name), bufferSize(context));\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name) throws IOException {\n    ensureOpen();\n    ensureCanWrite(name);\n    return new DirectIOLinuxIndexOutput(new File(getDirectory(), name), forcedBufferSize == 0 ? BufferedIndexOutput.BUFFER_SIZE : forcedBufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanWrite(name);\n    return new DirectIOLinuxIndexOutput(new File(getDirectory(), name), bufferSize(context));\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name) throws IOException {\n    ensureOpen();\n    ensureCanWrite(name);\n    return new DirectIOLinuxIndexOutput(new File(getDirectory(), name), forcedBufferSize == 0 ? BufferedIndexOutput.BUFFER_SIZE : forcedBufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5243f2425292adfa2c094097311654ae59588bc","date":1327855765,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(new File(getDirectory(), name), mergeBufferSize);\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanWrite(name);\n    return new DirectIOLinuxIndexOutput(new File(getDirectory(), name), bufferSize(context));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(new File(getDirectory(), name), mergeBufferSize);\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanWrite(name);\n    return new DirectIOLinuxIndexOutput(new File(getDirectory(), name), bufferSize(context));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(new File(getDirectory(), name), mergeBufferSize);\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    ensureCanWrite(name);\n    return new DirectIOLinuxIndexOutput(new File(getDirectory(), name), bufferSize(context));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c162b4b9ef005383c38e0912c16267584dc40de5":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["ddc4c914be86e34b54f70023f45a60fa7f04e929","d5243f2425292adfa2c094097311654ae59588bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5b6fdfce35d0adb18836cf8711abe487a934df33":["ddc4c914be86e34b54f70023f45a60fa7f04e929","d5243f2425292adfa2c094097311654ae59588bc"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"d5243f2425292adfa2c094097311654ae59588bc":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c162b4b9ef005383c38e0912c16267584dc40de5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d5243f2425292adfa2c094097311654ae59588bc"]},"commit2Childs":{"c162b4b9ef005383c38e0912c16267584dc40de5":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["c162b4b9ef005383c38e0912c16267584dc40de5"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","5d004d0e0b3f65bb40da76d476d659d7888270e8","d5243f2425292adfa2c094097311654ae59588bc"],"d5243f2425292adfa2c094097311654ae59588bc":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}