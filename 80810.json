{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testBasic().mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    SimpleDrillDownQuery q2 = new SimpleDrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new SimpleFacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56d44586f4c409c6c6c5942b9f0227df806b7300","date":1386027853,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"21d36d0db865f7b84026b447bec653469a6e66df":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}