{"path":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#convertSortToSortable(Sort).mjava","commits":[{"id":"2a4ff4adbb114e3d4c1b09305005237ee1c28a15","date":1483014160,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#convertSortToSortable(Sort).mjava","pathOld":"/dev/null","sourceNew":"  // Take a Sort, and replace any field sorts with Sortables\n  Sort convertSortToSortable(Sort sort) {\n    SortField original[] = sort.getSort();\n    SortField mutated[] = new SortField[original.length];\n    for (int i = 0; i < mutated.length; i++) {\n      if (random().nextInt(3) > 0) {\n        SortField s = original[i];\n        boolean reverse = s.getType() == SortField.Type.SCORE || s.getReverse();\n        switch (s.getType()) {\n          case INT:\n            mutated[i] = DoubleValuesSource.fromIntField(s.getField()).getSortField(reverse);\n            break;\n          case LONG:\n            mutated[i] = DoubleValuesSource.fromLongField(s.getField()).getSortField(reverse);\n            break;\n          case FLOAT:\n            mutated[i] = DoubleValuesSource.fromFloatField(s.getField()).getSortField(reverse);\n            break;\n          case DOUBLE:\n            mutated[i] = DoubleValuesSource.fromDoubleField(s.getField()).getSortField(reverse);\n            break;\n          case SCORE:\n            mutated[i] = DoubleValuesSource.SCORES.getSortField(reverse);\n            break;\n          default:\n            mutated[i] = original[i];\n        }\n      } else {\n        mutated[i] = original[i];\n      }\n    }\n\n    return new Sort(mutated);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#convertSortToSortable(Sort).mjava","pathOld":"/dev/null","sourceNew":"  // Take a Sort, and replace any field sorts with Sortables\n  Sort convertSortToSortable(Sort sort) {\n    SortField original[] = sort.getSort();\n    SortField mutated[] = new SortField[original.length];\n    for (int i = 0; i < mutated.length; i++) {\n      if (random().nextInt(3) > 0) {\n        SortField s = original[i];\n        boolean reverse = s.getType() == SortField.Type.SCORE || s.getReverse();\n        switch (s.getType()) {\n          case INT:\n            mutated[i] = DoubleValuesSource.fromIntField(s.getField()).getSortField(reverse);\n            break;\n          case LONG:\n            mutated[i] = DoubleValuesSource.fromLongField(s.getField()).getSortField(reverse);\n            break;\n          case FLOAT:\n            mutated[i] = DoubleValuesSource.fromFloatField(s.getField()).getSortField(reverse);\n            break;\n          case DOUBLE:\n            mutated[i] = DoubleValuesSource.fromDoubleField(s.getField()).getSortField(reverse);\n            break;\n          case SCORE:\n            mutated[i] = DoubleValuesSource.SCORES.getSortField(reverse);\n            break;\n          default:\n            mutated[i] = original[i];\n        }\n      } else {\n        mutated[i] = original[i];\n      }\n    }\n\n    return new Sort(mutated);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2a4ff4adbb114e3d4c1b09305005237ee1c28a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a4ff4adbb114e3d4c1b09305005237ee1c28a15"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2a4ff4adbb114e3d4c1b09305005237ee1c28a15"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a4ff4adbb114e3d4c1b09305005237ee1c28a15","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"2a4ff4adbb114e3d4c1b09305005237ee1c28a15":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}