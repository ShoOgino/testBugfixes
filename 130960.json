{"path":"lucene/contrib/misc/src/java/org/apache/lucene/search/SearcherLifetimeManager#prune(Pruner).mjava","commits":[{"id":"d604c1ad3df259faad15d636dd6f0a3674961a02","date":1318284355,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/search/SearcherLifetimeManager#prune(Pruner).mjava","pathOld":"/dev/null","sourceNew":"  /** Calls provided {@link Pruner} to prune entries.  The\n   *  entries are passed to the Pruner in sorted (newest to\n   *  oldest IndexSearcher) order.\n   * \n   *  <p><b>NOTE</b>: you must peridiocally call this, ideally\n   *  from the same background thread that opens new\n   *  searchers. */\n  public synchronized void prune(Pruner pruner) throws IOException {\n    final List<SearcherTracker> trackers = new ArrayList<SearcherTracker>(searchers.values());\n    Collections.sort(trackers);\n    final long newestSec = trackers.isEmpty() ? 0L : trackers.get(0).recordTimeSec;\n    for (SearcherTracker tracker: trackers) {\n      final int ageSec = (int) (newestSec - tracker.recordTimeSec);\n      assert ageSec >= 0;\n      if (pruner.doPrune(ageSec, tracker.searcher)) {\n        searchers.remove(tracker.version);\n        tracker.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df16fc2e9b615e0138edac46655ae628f5d098ad","date":1320876869,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SearcherLifetimeManager#prune(Pruner).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/search/SearcherLifetimeManager#prune(Pruner).mjava","sourceNew":"  /** Calls provided {@link Pruner} to prune entries.  The\n   *  entries are passed to the Pruner in sorted (newest to\n   *  oldest IndexSearcher) order.\n   * \n   *  <p><b>NOTE</b>: you must peridiocally call this, ideally\n   *  from the same background thread that opens new\n   *  searchers. */\n  public synchronized void prune(Pruner pruner) throws IOException {\n    final List<SearcherTracker> trackers = new ArrayList<SearcherTracker>(searchers.values());\n    Collections.sort(trackers);\n    final long newestSec = trackers.isEmpty() ? 0L : trackers.get(0).recordTimeSec;\n    for (SearcherTracker tracker: trackers) {\n      final int ageSec = (int) (newestSec - tracker.recordTimeSec);\n      assert ageSec >= 0;\n      if (pruner.doPrune(ageSec, tracker.searcher)) {\n        searchers.remove(tracker.version);\n        tracker.close();\n      }\n    }\n  }\n\n","sourceOld":"  /** Calls provided {@link Pruner} to prune entries.  The\n   *  entries are passed to the Pruner in sorted (newest to\n   *  oldest IndexSearcher) order.\n   * \n   *  <p><b>NOTE</b>: you must peridiocally call this, ideally\n   *  from the same background thread that opens new\n   *  searchers. */\n  public synchronized void prune(Pruner pruner) throws IOException {\n    final List<SearcherTracker> trackers = new ArrayList<SearcherTracker>(searchers.values());\n    Collections.sort(trackers);\n    final long newestSec = trackers.isEmpty() ? 0L : trackers.get(0).recordTimeSec;\n    for (SearcherTracker tracker: trackers) {\n      final int ageSec = (int) (newestSec - tracker.recordTimeSec);\n      assert ageSec >= 0;\n      if (pruner.doPrune(ageSec, tracker.searcher)) {\n        searchers.remove(tracker.version);\n        tracker.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df16fc2e9b615e0138edac46655ae628f5d098ad":["d604c1ad3df259faad15d636dd6f0a3674961a02"],"d604c1ad3df259faad15d636dd6f0a3674961a02":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df16fc2e9b615e0138edac46655ae628f5d098ad"]},"commit2Childs":{"df16fc2e9b615e0138edac46655ae628f5d098ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d604c1ad3df259faad15d636dd6f0a3674961a02":["df16fc2e9b615e0138edac46655ae628f5d098ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d604c1ad3df259faad15d636dd6f0a3674961a02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}