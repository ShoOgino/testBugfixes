{"path":"src/java/org/apache/solr/common/util/NamedList#iterator().mjava","commits":[{"id":"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","date":1181791578,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/util/NamedList#iterator().mjava","pathOld":"src/java/org/apache/solr/util/NamedList#iterator().mjava","sourceNew":"  /**\n   * Support the Iterable interface\n   */\n  public Iterator<Map.Entry<String,T>> iterator() {\n    \n    final NamedList list = this;\n    \n    Iterator<Map.Entry<String,T>> iter = new Iterator<Map.Entry<String,T>>() {\n      \n      int idx = 0;\n      \n      public boolean hasNext() {\n        return idx < list.size();\n      }\n\n      public Map.Entry<String,T> next() {\n        final int index = idx++;\n        Map.Entry<String,T> nv = new Map.Entry<String,T>() {\n          public String getKey() {\n            return list.getName( index );\n          }\n\n          @SuppressWarnings(\"unchecked\")\n\t\t  public T getValue() {\n            return (T)list.getVal( index );\n          }\n          \n          public String toString()\n          {\n        \t  return getKey()+\"=\"+getValue();\n          }\n\n\t\t  public T setValue(T value) {\n\t\t\treturn (T) list.setVal(index, value);\n\t\t  }\n        };\n        return nv;\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n    return iter;\n  }\n\n","sourceOld":"  /**\n   * Support the Iterable interface\n   */\n  public Iterator<Map.Entry<String,T>> iterator() {\n    \n    final NamedList list = this;\n    \n    Iterator<Map.Entry<String,T>> iter = new Iterator<Map.Entry<String,T>>() {\n      \n      int idx = 0;\n      \n      public boolean hasNext() {\n        return idx < list.size();\n      }\n\n      public Map.Entry<String,T> next() {\n        final int index = idx++;\n        Map.Entry<String,T> nv = new Map.Entry<String,T>() {\n          public String getKey() {\n            return list.getName( index );\n          }\n\n          @SuppressWarnings(\"unchecked\")\n\t\t  public T getValue() {\n            return (T)list.getVal( index );\n          }\n          \n          public String toString()\n          {\n        \t  return getKey()+\"=\"+getValue();\n          }\n\n\t\t  public T setValue(T value) {\n\t\t\treturn (T) list.setVal(index, value);\n\t\t  }\n        };\n        return nv;\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n    return iter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c61b599e55a0820f4676f45450d05fd8528f03e","date":1216497605,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/util/NamedList#iterator().mjava","pathOld":"src/java/org/apache/solr/common/util/NamedList#iterator().mjava","sourceNew":"  /**\n   * Support the Iterable interface\n   */\n  public Iterator<Map.Entry<String,T>> iterator() {\n    \n    final NamedList list = this;\n    \n    Iterator<Map.Entry<String,T>> iter = new Iterator<Map.Entry<String,T>>() {\n      \n      int idx = 0;\n      \n      public boolean hasNext() {\n        return idx < list.size();\n      }\n\n      public Map.Entry<String,T> next() {\n        final int index = idx++;\n        Map.Entry<String,T> nv = new Map.Entry<String,T>() {\n          public String getKey() {\n            return list.getName( index );\n          }\n\n          @SuppressWarnings(\"unchecked\")\n          public T getValue() {\n            return (T)list.getVal( index );\n          }\n          \n          public String toString()\n          {\n        \t  return getKey()+\"=\"+getValue();\n          }\n\n    \t\t  public T setValue(T value) {\n    \t\t    return (T) list.setVal(index, value);\n    \t\t  }\n        };\n        return nv;\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n    return iter;\n  }\n\n","sourceOld":"  /**\n   * Support the Iterable interface\n   */\n  public Iterator<Map.Entry<String,T>> iterator() {\n    \n    final NamedList list = this;\n    \n    Iterator<Map.Entry<String,T>> iter = new Iterator<Map.Entry<String,T>>() {\n      \n      int idx = 0;\n      \n      public boolean hasNext() {\n        return idx < list.size();\n      }\n\n      public Map.Entry<String,T> next() {\n        final int index = idx++;\n        Map.Entry<String,T> nv = new Map.Entry<String,T>() {\n          public String getKey() {\n            return list.getName( index );\n          }\n\n          @SuppressWarnings(\"unchecked\")\n\t\t  public T getValue() {\n            return (T)list.getVal( index );\n          }\n          \n          public String toString()\n          {\n        \t  return getKey()+\"=\"+getValue();\n          }\n\n\t\t  public T setValue(T value) {\n\t\t\treturn (T) list.setVal(index, value);\n\t\t  }\n        };\n        return nv;\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n    return iter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/NamedList#iterator().mjava","pathOld":"src/java/org/apache/solr/common/util/NamedList#iterator().mjava","sourceNew":"  /**\n   * Support the Iterable interface\n   */\n  public Iterator<Map.Entry<String,T>> iterator() {\n    \n    final NamedList list = this;\n    \n    Iterator<Map.Entry<String,T>> iter = new Iterator<Map.Entry<String,T>>() {\n      \n      int idx = 0;\n      \n      public boolean hasNext() {\n        return idx < list.size();\n      }\n\n      public Map.Entry<String,T> next() {\n        final int index = idx++;\n        Map.Entry<String,T> nv = new Map.Entry<String,T>() {\n          public String getKey() {\n            return list.getName( index );\n          }\n\n          @SuppressWarnings(\"unchecked\")\n          public T getValue() {\n            return (T)list.getVal( index );\n          }\n          \n          public String toString()\n          {\n        \t  return getKey()+\"=\"+getValue();\n          }\n\n    \t\t  public T setValue(T value) {\n    \t\t    return (T) list.setVal(index, value);\n    \t\t  }\n        };\n        return nv;\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n    return iter;\n  }\n\n","sourceOld":"  /**\n   * Support the Iterable interface\n   */\n  public Iterator<Map.Entry<String,T>> iterator() {\n    \n    final NamedList list = this;\n    \n    Iterator<Map.Entry<String,T>> iter = new Iterator<Map.Entry<String,T>>() {\n      \n      int idx = 0;\n      \n      public boolean hasNext() {\n        return idx < list.size();\n      }\n\n      public Map.Entry<String,T> next() {\n        final int index = idx++;\n        Map.Entry<String,T> nv = new Map.Entry<String,T>() {\n          public String getKey() {\n            return list.getName( index );\n          }\n\n          @SuppressWarnings(\"unchecked\")\n          public T getValue() {\n            return (T)list.getVal( index );\n          }\n          \n          public String toString()\n          {\n        \t  return getKey()+\"=\"+getValue();\n          }\n\n    \t\t  public T setValue(T value) {\n    \t\t    return (T) list.setVal(index, value);\n    \t\t  }\n        };\n        return nv;\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n    return iter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["9c61b599e55a0820f4676f45450d05fd8528f03e"],"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"9c61b599e55a0820f4676f45450d05fd8528f03e":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["9c61b599e55a0820f4676f45450d05fd8528f03e"],"9c61b599e55a0820f4676f45450d05fd8528f03e":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}