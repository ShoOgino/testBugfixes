{"path":"lucene/backwards/src/java/org/apache/lucene/search/Similarity#coord(int,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/Similarity#coord(int,int).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/Similarity#coord(int,int).mjava","sourceNew":"  /** Computes a score factor based on the fraction of all query terms that a\n   * document contains.  This value is multiplied into scores.\n   *\n   * <p>The presence of a large portion of the query terms indicates a better\n   * match with the query, so implementations of this method usually return\n   * larger values when the ratio between these parameters is large and smaller\n   * values when the ratio between them is small.\n   *\n   * @param overlap the number of query terms matched in the document\n   * @param maxOverlap the total number of terms in the query\n   * @return a score factor based on term overlap with the query\n   */\n  public abstract float coord(int overlap, int maxOverlap);\n\n","sourceOld":"  /** Computes a score factor based on the fraction of all query terms that a\n   * document contains.  This value is multiplied into scores.\n   *\n   * <p>The presence of a large portion of the query terms indicates a better\n   * match with the query, so implementations of this method usually return\n   * larger values when the ratio between these parameters is large and smaller\n   * values when the ratio between them is small.\n   *\n   * @param overlap the number of query terms matched in the document\n   * @param maxOverlap the total number of terms in the query\n   * @return a score factor based on term overlap with the query\n   */\n  public abstract float coord(int overlap, int maxOverlap);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/search/Similarity#coord(int,int).mjava","sourceNew":null,"sourceOld":"  /** Computes a score factor based on the fraction of all query terms that a\n   * document contains.  This value is multiplied into scores.\n   *\n   * <p>The presence of a large portion of the query terms indicates a better\n   * match with the query, so implementations of this method usually return\n   * larger values when the ratio between these parameters is large and smaller\n   * values when the ratio between them is small.\n   *\n   * @param overlap the number of query terms matched in the document\n   * @param maxOverlap the total number of terms in the query\n   * @return a score factor based on term overlap with the query\n   */\n  public abstract float coord(int overlap, int maxOverlap);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}