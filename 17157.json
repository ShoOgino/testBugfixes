{"path":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#Builder(FST.INPUT_TYPE,int,int,boolean,boolean,int,Outputs[T],FreezeTail[T],boolean,boolean).mjava","commits":[{"id":"fb8af2aec0a8574cf50cad6939d4475179595eca","date":1357675799,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#Builder(FST.INPUT_TYPE,int,int,boolean,boolean,int,Outputs[T],FreezeTail[T],boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#Builder(FST.INPUT_TYPE,int,int,boolean,boolean,int,Outputs[T],FreezeTail[T],boolean).mjava","sourceNew":"  /**\n   * Instantiates an FST/FSA builder with {@link PackedInts#DEFAULT}\n   * <code>acceptableOverheadRatio</code>.\n   */\n  public Builder(FST.INPUT_TYPE inputType, int minSuffixCount1, int minSuffixCount2, boolean doShareSuffix,\n      boolean doShareNonSingletonNodes, int shareMaxTailLength, Outputs<T> outputs,\n      FreezeTail<T> freezeTail, boolean willPackFST, boolean allowArrayArcs) {\n    this(inputType, minSuffixCount1, minSuffixCount2, doShareSuffix, doShareNonSingletonNodes,\n         shareMaxTailLength, outputs, freezeTail, willPackFST, PackedInts.DEFAULT, allowArrayArcs);\n  }\n\n","sourceOld":"  /**\n   * Instantiates an FST/FSA builder with {@link PackedInts#DEFAULT}\n   * <code>acceptableOverheadRatio</code>.\n   */\n  public Builder(FST.INPUT_TYPE inputType, int minSuffixCount1, int minSuffixCount2, boolean doShareSuffix,\n      boolean doShareNonSingletonNodes, int shareMaxTailLength, Outputs<T> outputs,\n      FreezeTail<T> freezeTail, boolean willPackFST) {\n    this(inputType, minSuffixCount1, minSuffixCount2, doShareSuffix, doShareNonSingletonNodes,\n        shareMaxTailLength, outputs, freezeTail, willPackFST, PackedInts.DEFAULT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#Builder(FST.INPUT_TYPE,int,int,boolean,boolean,int,Outputs[T],FreezeTail[T],boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#Builder(FST.INPUT_TYPE,int,int,boolean,boolean,int,Outputs[T],FreezeTail[T],boolean).mjava","sourceNew":"  /**\n   * Instantiates an FST/FSA builder with {@link PackedInts#DEFAULT}\n   * <code>acceptableOverheadRatio</code>.\n   */\n  public Builder(FST.INPUT_TYPE inputType, int minSuffixCount1, int minSuffixCount2, boolean doShareSuffix,\n      boolean doShareNonSingletonNodes, int shareMaxTailLength, Outputs<T> outputs,\n      FreezeTail<T> freezeTail, boolean willPackFST, boolean allowArrayArcs) {\n    this(inputType, minSuffixCount1, minSuffixCount2, doShareSuffix, doShareNonSingletonNodes,\n         shareMaxTailLength, outputs, freezeTail, willPackFST, PackedInts.DEFAULT, allowArrayArcs);\n  }\n\n","sourceOld":"  /**\n   * Instantiates an FST/FSA builder with {@link PackedInts#DEFAULT}\n   * <code>acceptableOverheadRatio</code>.\n   */\n  public Builder(FST.INPUT_TYPE inputType, int minSuffixCount1, int minSuffixCount2, boolean doShareSuffix,\n      boolean doShareNonSingletonNodes, int shareMaxTailLength, Outputs<T> outputs,\n      FreezeTail<T> freezeTail, boolean willPackFST) {\n    this(inputType, minSuffixCount1, minSuffixCount2, doShareSuffix, doShareNonSingletonNodes,\n        shareMaxTailLength, outputs, freezeTail, willPackFST, PackedInts.DEFAULT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","date":1358188277,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#Builder(FST.INPUT_TYPE,int,int,boolean,boolean,int,Outputs[T],FreezeTail[T],boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Instantiates an FST/FSA builder with {@link PackedInts#DEFAULT}\n   * <code>acceptableOverheadRatio</code>.\n   */\n  public Builder(FST.INPUT_TYPE inputType, int minSuffixCount1, int minSuffixCount2, boolean doShareSuffix,\n      boolean doShareNonSingletonNodes, int shareMaxTailLength, Outputs<T> outputs,\n      FreezeTail<T> freezeTail, boolean willPackFST, boolean allowArrayArcs) {\n    this(inputType, minSuffixCount1, minSuffixCount2, doShareSuffix, doShareNonSingletonNodes,\n         shareMaxTailLength, outputs, freezeTail, willPackFST, PackedInts.DEFAULT, allowArrayArcs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Builder#Builder(FST.INPUT_TYPE,int,int,boolean,boolean,int,Outputs[T],FreezeTail[T],boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Instantiates an FST/FSA builder with {@link PackedInts#DEFAULT}\n   * <code>acceptableOverheadRatio</code>.\n   */\n  public Builder(FST.INPUT_TYPE inputType, int minSuffixCount1, int minSuffixCount2, boolean doShareSuffix,\n      boolean doShareNonSingletonNodes, int shareMaxTailLength, Outputs<T> outputs,\n      FreezeTail<T> freezeTail, boolean willPackFST, boolean allowArrayArcs) {\n    this(inputType, minSuffixCount1, minSuffixCount2, doShareSuffix, doShareNonSingletonNodes,\n         shareMaxTailLength, outputs, freezeTail, willPackFST, PackedInts.DEFAULT, allowArrayArcs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["fb8af2aec0a8574cf50cad6939d4475179595eca"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["4e6354dd7c71fe122926fc53d7d29f715b1283db","d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb8af2aec0a8574cf50cad6939d4475179595eca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb8af2aec0a8574cf50cad6939d4475179595eca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"]},"commit2Childs":{"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb8af2aec0a8574cf50cad6939d4475179595eca","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"fb8af2aec0a8574cf50cad6939d4475179595eca":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}