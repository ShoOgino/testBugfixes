{"path":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#match().mjava","commits":[{"id":"b785b1f61f30f94f0708b16d7f2eee3ee23194ef","date":1285384789,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#match().mjava","pathOld":"/dev/null","sourceNew":"    boolean match() {\n      // longitude should generally be more restrictive than latitude\n      // (e.g. in the US, it immediately separates the coasts, and in world search separates\n      // US from Europe from Asia, etc.\n      double lon = lonVals.doubleVal(doc);\n      if (! ((lon >= lonMin && lon <=lonMax) || (lon2 && lon >= lon2Min && lon <= lon2Max)) ) {\n        return false;\n      }\n\n      double lat = latVals.doubleVal(doc);\n      if ( !(lat >= latMin && lat <= latMax) ) {\n        return false;\n      }\n\n      if (!calcDist) return true;\n\n      // TODO: test for internal box where we wouldn't need to calculate the distance\n\n      return dist(lat, lon) <= dist;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#match().mjava","pathOld":"/dev/null","sourceNew":"    boolean match() {\n      // longitude should generally be more restrictive than latitude\n      // (e.g. in the US, it immediately separates the coasts, and in world search separates\n      // US from Europe from Asia, etc.\n      double lon = lonVals.doubleVal(doc);\n      if (! ((lon >= lonMin && lon <=lonMax) || (lon2 && lon >= lon2Min && lon <= lon2Max)) ) {\n        return false;\n      }\n\n      double lat = latVals.doubleVal(doc);\n      if ( !(lat >= latMin && lat <= latMax) ) {\n        return false;\n      }\n\n      if (!calcDist) return true;\n\n      // TODO: test for internal box where we wouldn't need to calculate the distance\n\n      return dist(lat, lon) <= dist;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#match().mjava","pathOld":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#match().mjava","sourceNew":"    boolean match() {\n      // longitude should generally be more restrictive than latitude\n      // (e.g. in the US, it immediately separates the coasts, and in world search separates\n      // US from Europe from Asia, etc.\n      double lon = lonVals.doubleVal(doc);\n      if (! ((lon >= lonMin && lon <=lonMax) || (lon2 && lon >= lon2Min && lon <= lon2Max)) ) {\n        return false;\n      }\n\n      double lat = latVals.doubleVal(doc);\n      if ( !(lat >= latMin && lat <= latMax) ) {\n        return false;\n      }\n\n      if (!calcDist) return true;\n\n      // TODO: test for internal box where we wouldn't need to calculate the distance\n\n      return dist(lat, lon) <= dist;\n    }\n\n","sourceOld":"    boolean match() {\n      // longitude should generally be more restrictive than latitude\n      // (e.g. in the US, it immediately separates the coasts, and in world search separates\n      // US from Europe from Asia, etc.\n      double lon = lonVals.doubleVal(doc);\n      if (! ((lon >= lonMin && lon <=lonMax) || (lon2 && lon >= lon2Min && lon <= lon2Max)) ) {\n        return false;\n      }\n\n      double lat = latVals.doubleVal(doc);\n      if ( !(lat >= latMin && lat <= latMax) ) {\n        return false;\n      }\n\n      if (!calcDist) return true;\n\n      // TODO: test for internal box where we wouldn't need to calculate the distance\n\n      return dist(lat, lon) <= dist;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#match().mjava","pathOld":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#match().mjava","sourceNew":"    boolean match() {\n      // longitude should generally be more restrictive than latitude\n      // (e.g. in the US, it immediately separates the coasts, and in world search separates\n      // US from Europe from Asia, etc.\n      double lon = lonVals.doubleVal(doc);\n      if (! ((lon >= lonMin && lon <=lonMax) || (lon2 && lon >= lon2Min && lon <= lon2Max)) ) {\n        return false;\n      }\n\n      double lat = latVals.doubleVal(doc);\n      if ( !(lat >= latMin && lat <= latMax) ) {\n        return false;\n      }\n\n      if (!calcDist) return true;\n\n      // TODO: test for internal box where we wouldn't need to calculate the distance\n\n      return dist(lat, lon) <= dist;\n    }\n\n","sourceOld":"    boolean match() {\n      // longitude should generally be more restrictive than latitude\n      // (e.g. in the US, it immediately separates the coasts, and in world search separates\n      // US from Europe from Asia, etc.\n      double lon = lonVals.doubleVal(doc);\n      if (! ((lon >= lonMin && lon <=lonMax) || (lon2 && lon >= lon2Min && lon <= lon2Max)) ) {\n        return false;\n      }\n\n      double lat = latVals.doubleVal(doc);\n      if ( !(lat >= latMin && lat <= latMax) ) {\n        return false;\n      }\n\n      if (!calcDist) return true;\n\n      // TODO: test for internal box where we wouldn't need to calculate the distance\n\n      return dist(lat, lon) <= dist;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#match().mjava","pathOld":"solr/src/java/org/apache/solr/schema/SpatialDistanceQuery[LatLonType].SpatialScorer#match().mjava","sourceNew":"    boolean match() {\n      // longitude should generally be more restrictive than latitude\n      // (e.g. in the US, it immediately separates the coasts, and in world search separates\n      // US from Europe from Asia, etc.\n      double lon = lonVals.doubleVal(doc);\n      if (! ((lon >= lonMin && lon <=lonMax) || (lon2 && lon >= lon2Min && lon <= lon2Max)) ) {\n        return false;\n      }\n\n      double lat = latVals.doubleVal(doc);\n      if ( !(lat >= latMin && lat <= latMax) ) {\n        return false;\n      }\n\n      if (!calcDist) return true;\n\n      // TODO: test for internal box where we wouldn't need to calculate the distance\n\n      return dist(lat, lon) <= dist;\n    }\n\n","sourceOld":"    boolean match() {\n      // longitude should generally be more restrictive than latitude\n      // (e.g. in the US, it immediately separates the coasts, and in world search separates\n      // US from Europe from Asia, etc.\n      double lon = lonVals.doubleVal(doc);\n      if (! ((lon >= lonMin && lon <=lonMax) || (lon2 && lon >= lon2Min && lon <= lon2Max)) ) {\n        return false;\n      }\n\n      double lat = latVals.doubleVal(doc);\n      if ( !(lat >= latMin && lat <= latMax) ) {\n        return false;\n      }\n\n      if (!calcDist) return true;\n\n      // TODO: test for internal box where we wouldn't need to calculate the distance\n\n      return dist(lat, lon) <= dist;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["b785b1f61f30f94f0708b16d7f2eee3ee23194ef"],"c26f00b574427b55127e869b935845554afde1fa":["b785b1f61f30f94f0708b16d7f2eee3ee23194ef","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["b785b1f61f30f94f0708b16d7f2eee3ee23194ef"],"b785b1f61f30f94f0708b16d7f2eee3ee23194ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b785b1f61f30f94f0708b16d7f2eee3ee23194ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b785b1f61f30f94f0708b16d7f2eee3ee23194ef","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"b785b1f61f30f94f0708b16d7f2eee3ee23194ef":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}