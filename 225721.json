{"path":"lucene/core/src/java/org/apache/lucene/search/CachingCollector.NoScoreCachingLeafCollector#collect(int).mjava","commits":[{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingCollector.NoScoreCachingLeafCollector#collect(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      if (docs != null) {\n        if (docCount >= docs.length) {\n          if (docCount >= maxDocsToCache) {\n            invalidate();\n          } else {\n            final int newLen = Math.min(ArrayUtil.oversize(docCount + 1, RamUsageEstimator.NUM_BYTES_INT), maxDocsToCache);\n            grow(newLen);\n          }\n        }\n        if (docs != null) {\n          buffer(doc);\n          ++docCount;\n        }\n      }\n      super.collect(doc);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingCollector.NoScoreCachingLeafCollector#collect(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      if (docs != null) {\n        if (docCount >= docs.length) {\n          if (docCount >= maxDocsToCache) {\n            invalidate();\n          } else {\n            final int newLen = Math.min(ArrayUtil.oversize(docCount + 1, RamUsageEstimator.NUM_BYTES_INT), maxDocsToCache);\n            grow(newLen);\n          }\n        }\n        if (docs != null) {\n          buffer(doc);\n          ++docCount;\n        }\n      }\n      super.collect(doc);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f226a8b088dd9c8f6ab287a77237c4aa00a238e5","date":1456187572,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingCollector.NoScoreCachingLeafCollector#collect(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingCollector.NoScoreCachingLeafCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      if (docs != null) {\n        if (docCount >= docs.length) {\n          if (docCount >= maxDocsToCache) {\n            invalidate();\n          } else {\n            final int newLen = Math.min(ArrayUtil.oversize(docCount + 1, Integer.BYTES), maxDocsToCache);\n            grow(newLen);\n          }\n        }\n        if (docs != null) {\n          buffer(doc);\n          ++docCount;\n        }\n      }\n      super.collect(doc);\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) throws IOException {\n      if (docs != null) {\n        if (docCount >= docs.length) {\n          if (docCount >= maxDocsToCache) {\n            invalidate();\n          } else {\n            final int newLen = Math.min(ArrayUtil.oversize(docCount + 1, RamUsageEstimator.NUM_BYTES_INT), maxDocsToCache);\n            grow(newLen);\n          }\n        }\n        if (docs != null) {\n          buffer(doc);\n          ++docCount;\n        }\n      }\n      super.collect(doc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingCollector.NoScoreCachingLeafCollector#collect(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingCollector.NoScoreCachingLeafCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      if (docs != null) {\n        if (docCount >= docs.length) {\n          if (docCount >= maxDocsToCache) {\n            invalidate();\n          } else {\n            final int newLen = Math.min(ArrayUtil.oversize(docCount + 1, Integer.BYTES), maxDocsToCache);\n            grow(newLen);\n          }\n        }\n        if (docs != null) {\n          buffer(doc);\n          ++docCount;\n        }\n      }\n      super.collect(doc);\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) throws IOException {\n      if (docs != null) {\n        if (docCount >= docs.length) {\n          if (docCount >= maxDocsToCache) {\n            invalidate();\n          } else {\n            final int newLen = Math.min(ArrayUtil.oversize(docCount + 1, RamUsageEstimator.NUM_BYTES_INT), maxDocsToCache);\n            grow(newLen);\n          }\n        }\n        if (docs != null) {\n          buffer(doc);\n          ++docCount;\n        }\n      }\n      super.collect(doc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"419a8f52c6635419beb951255cacbbb281044c57":["ae73da626f97850c922c42736f808d0378e165f0","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["ae73da626f97850c922c42736f808d0378e165f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["419a8f52c6635419beb951255cacbbb281044c57"]},"commit2Childs":{"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","419a8f52c6635419beb951255cacbbb281044c57","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"419a8f52c6635419beb951255cacbbb281044c57":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["419a8f52c6635419beb951255cacbbb281044c57"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}