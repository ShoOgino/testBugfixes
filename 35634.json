{"path":"src/java/org/apache/lucene/search/function/CustomScoreQuery#CustomScoreQuery(Query,ValueSourceQuery...).mjava","commits":[{"id":"87e76a976d5469661c89ff8931edd3df1f5b9cb2","date":1258226809,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery#CustomScoreQuery(Query,ValueSourceQuery...).mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery#CustomScoreQuery(Query,ValueSourceQuery[]).mjava","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link ValueSourceQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param valSrcQueries value source queries whose scores are used in the custom score\n   * computation. For most simple/convenient use case these would be \n   * {@link org.apache.lucene.search.function.FieldScoreQuery FieldScoreQueries}.\n   * This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, ValueSourceQuery... valSrcQueries) {\n    super();\n    this.subQuery = subQuery;\n    this.valSrcQueries = valSrcQueries!=null?\n        valSrcQueries : new ValueSourceQuery[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","sourceOld":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link ValueSourceQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param valSrcQueries value source queries whose scores are used in the custom score\n   * computation. For most simple/convenient use case these would be \n   * {@link org.apache.lucene.search.function.FieldScoreQuery FieldScoreQueries}.\n   * This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, ValueSourceQuery valSrcQueries[]) {\n    super();\n    this.subQuery = subQuery;\n    this.valSrcQueries = valSrcQueries!=null?\n        valSrcQueries : new ValueSourceQuery[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"affefdda19991b74568e601456baad0c8e5c2f65","date":1266776825,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery#CustomScoreQuery(Query,ValueSourceQuery...).mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery#CustomScoreQuery(Query,ValueSourceQuery...).mjava","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link ValueSourceQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param valSrcQueries value source queries whose scores are used in the custom score\n   * computation. For most simple/convenient use case these would be \n   * {@link org.apache.lucene.search.function.FieldScoreQuery FieldScoreQueries}.\n   * This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, ValueSourceQuery... valSrcQueries) {\n    this.subQuery = subQuery;\n    this.valSrcQueries = valSrcQueries!=null?\n        valSrcQueries : new ValueSourceQuery[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","sourceOld":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link ValueSourceQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param valSrcQueries value source queries whose scores are used in the custom score\n   * computation. For most simple/convenient use case these would be \n   * {@link org.apache.lucene.search.function.FieldScoreQuery FieldScoreQueries}.\n   * This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, ValueSourceQuery... valSrcQueries) {\n    super();\n    this.subQuery = subQuery;\n    this.valSrcQueries = valSrcQueries!=null?\n        valSrcQueries : new ValueSourceQuery[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery#CustomScoreQuery(Query,ValueSourceQuery...).mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery#CustomScoreQuery(Query,ValueSourceQuery...).mjava","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link ValueSourceQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param valSrcQueries value source queries whose scores are used in the custom score\n   * computation. For most simple/convenient use case these would be \n   * {@link org.apache.lucene.search.function.FieldScoreQuery FieldScoreQueries}.\n   * This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, ValueSourceQuery... valSrcQueries) {\n    this.subQuery = subQuery;\n    this.valSrcQueries = valSrcQueries!=null?\n        valSrcQueries : new ValueSourceQuery[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","sourceOld":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link ValueSourceQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param valSrcQueries value source queries whose scores are used in the custom score\n   * computation. For most simple/convenient use case these would be \n   * {@link org.apache.lucene.search.function.FieldScoreQuery FieldScoreQueries}.\n   * This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, ValueSourceQuery... valSrcQueries) {\n    this.subQuery = subQuery;\n    this.valSrcQueries = valSrcQueries!=null?\n        valSrcQueries : new ValueSourceQuery[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"87e76a976d5469661c89ff8931edd3df1f5b9cb2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"affefdda19991b74568e601456baad0c8e5c2f65":["87e76a976d5469661c89ff8931edd3df1f5b9cb2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["affefdda19991b74568e601456baad0c8e5c2f65"]},"commit2Childs":{"87e76a976d5469661c89ff8931edd3df1f5b9cb2":["affefdda19991b74568e601456baad0c8e5c2f65"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["87e76a976d5469661c89ff8931edd3df1f5b9cb2"],"affefdda19991b74568e601456baad0c8e5c2f65":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}