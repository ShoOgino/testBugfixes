{"path":"lucene/core/src/java/org/apache/lucene/index/OrdinalMap#build(IndexReader.CacheKey,SortedSetDocValues[],float).mjava","commits":[{"id":"957c610636f393a85a38f1af670540028db13e6b","date":1500044517,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/OrdinalMap#build(IndexReader.CacheKey,SortedSetDocValues[],float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create an ordinal map that uses the number of unique values of each\n   * {@link SortedSetDocValues} instance as a weight.\n   * @see #build(IndexReader.CacheKey, TermsEnum[], long[], float)\n   */\n  public static OrdinalMap build(IndexReader.CacheKey owner, SortedSetDocValues[] values, float acceptableOverheadRatio) throws IOException {\n    final TermsEnum[] subs = new TermsEnum[values.length];\n    final long[] weights = new long[values.length];\n    for (int i = 0; i < values.length; ++i) {\n      subs[i] = values[i].termsEnum();\n      weights[i] = values[i].getValueCount();\n    }\n    return build(owner, subs, weights, acceptableOverheadRatio);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaf90fc29510e72665ac7934f34c3d1c25efad64","date":1500354819,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/OrdinalMap#build(IndexReader.CacheKey,SortedSetDocValues[],float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create an ordinal map that uses the number of unique values of each\n   * {@link SortedSetDocValues} instance as a weight.\n   * @see #build(IndexReader.CacheKey, TermsEnum[], long[], float)\n   */\n  public static OrdinalMap build(IndexReader.CacheKey owner, SortedSetDocValues[] values, float acceptableOverheadRatio) throws IOException {\n    final TermsEnum[] subs = new TermsEnum[values.length];\n    final long[] weights = new long[values.length];\n    for (int i = 0; i < values.length; ++i) {\n      subs[i] = values[i].termsEnum();\n      weights[i] = values[i].getValueCount();\n    }\n    return build(owner, subs, weights, acceptableOverheadRatio);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"957c610636f393a85a38f1af670540028db13e6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","957c610636f393a85a38f1af670540028db13e6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["957c610636f393a85a38f1af670540028db13e6b"]},"commit2Childs":{"957c610636f393a85a38f1af670540028db13e6b":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["957c610636f393a85a38f1af670540028db13e6b","aaf90fc29510e72665ac7934f34c3d1c25efad64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}