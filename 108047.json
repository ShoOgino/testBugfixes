{"path":"lucene/core/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#registerSnapshotInfo(String,String,IndexCommit).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#registerSnapshotInfo(String,String,IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#registerSnapshotInfo(String,String,IndexCommit).mjava","sourceNew":"  /** Registers the given snapshot information. */\n  protected void registerSnapshotInfo(String id, String segment, IndexCommit commit) {\n    idToSnapshot.put(id, new SnapshotInfo(id, segment, commit));\n    Set<String> ids = segmentsFileToIDs.get(segment);\n    if (ids == null) {\n      ids = new HashSet<String>();\n      segmentsFileToIDs.put(segment, ids);\n    }\n    ids.add(id);\n  }\n\n","sourceOld":"  /** Registers the given snapshot information. */\n  protected void registerSnapshotInfo(String id, String segment, IndexCommit commit) {\n    idToSnapshot.put(id, new SnapshotInfo(id, segment, commit));\n    Set<String> ids = segmentsFileToIDs.get(segment);\n    if (ids == null) {\n      ids = new HashSet<String>();\n      segmentsFileToIDs.put(segment, ids);\n    }\n    ids.add(id);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a207624ce3e468bca1819861084438d936e3b1c","date":1367514967,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#registerSnapshotInfo(String,String,IndexCommit).mjava","sourceNew":null,"sourceOld":"  /** Registers the given snapshot information. */\n  protected void registerSnapshotInfo(String id, String segment, IndexCommit commit) {\n    idToSnapshot.put(id, new SnapshotInfo(id, segment, commit));\n    Set<String> ids = segmentsFileToIDs.get(segment);\n    if (ids == null) {\n      ids = new HashSet<String>();\n      segmentsFileToIDs.put(segment, ids);\n    }\n    ids.add(id);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a207624ce3e468bca1819861084438d936e3b1c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a207624ce3e468bca1819861084438d936e3b1c"]},"commit2Childs":{"8a207624ce3e468bca1819861084438d936e3b1c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8a207624ce3e468bca1819861084438d936e3b1c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}