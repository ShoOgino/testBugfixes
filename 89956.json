{"path":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#indexRandomShapes(IndexWriter,Object...).mjava","commits":[{"id":"6345300cb90308ddf9579f7a7396a32d98795311","date":1533248257,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#indexRandomShapes(IndexWriter,Object...).mjava","pathOld":"/dev/null","sourceNew":"  protected void indexRandomShapes(IndexWriter w, Object... shapes) throws Exception {\n    Set<Integer> deleted = new HashSet<>();\n    for (int id = 0; id < shapes.length; ++id) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + id, Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", id));\n      if (shapes[id] != null) {\n        addShapeToDoc(FIELD_NAME, doc, shapes[id]);\n      }\n      w.addDocument(doc);\n      if (id > 0 && randomInt(100) == 42) {\n        int idToDelete = randomInt(id);\n        w.deleteDocuments(new Term(\"id\", \"\"+idToDelete));\n        deleted.add(idToDelete);\n        if (VERBOSE) {\n          System.out.println(\"   delete id=\" + idToDelete);\n        }\n      }\n    }\n\n    if (randomBoolean()) {\n      w.forceMerge(1);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24491e12b0e85893eccafcbaef34f087deedb9f5","date":1541174782,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#indexRandomShapes(IndexWriter,Object...).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#indexRandomShapes(IndexWriter,Object...).mjava","sourceNew":"  protected void indexRandomShapes(IndexWriter w, Object... shapes) throws Exception {\n    Set<Integer> deleted = new HashSet<>();\n    for (int id = 0; id < shapes.length; ++id) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + id, Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", id));\n      if (shapes[id] != null) {\n        addShapeToDoc(FIELD_NAME, doc, shapes[id]);\n      }\n      w.addDocument(doc);\n      if (id > 0 && random().nextInt(100) == 42) {\n        int idToDelete = random().nextInt(id);\n        w.deleteDocuments(new Term(\"id\", \"\"+idToDelete));\n        deleted.add(idToDelete);\n        if (VERBOSE) {\n          System.out.println(\"   delete id=\" + idToDelete);\n        }\n      }\n    }\n\n    if (randomBoolean()) {\n      w.forceMerge(1);\n    }\n  }\n\n","sourceOld":"  protected void indexRandomShapes(IndexWriter w, Object... shapes) throws Exception {\n    Set<Integer> deleted = new HashSet<>();\n    for (int id = 0; id < shapes.length; ++id) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + id, Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", id));\n      if (shapes[id] != null) {\n        addShapeToDoc(FIELD_NAME, doc, shapes[id]);\n      }\n      w.addDocument(doc);\n      if (id > 0 && randomInt(100) == 42) {\n        int idToDelete = randomInt(id);\n        w.deleteDocuments(new Term(\"id\", \"\"+idToDelete));\n        deleted.add(idToDelete);\n        if (VERBOSE) {\n          System.out.println(\"   delete id=\" + idToDelete);\n        }\n      }\n    }\n\n    if (randomBoolean()) {\n      w.forceMerge(1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c286b0d8c507a88b289407e2fe161effa275c6b0","date":1562615977,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseShapeTestCase#indexRandomShapes(IndexWriter,Object...).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#indexRandomShapes(IndexWriter,Object...).mjava","sourceNew":"  protected void indexRandomShapes(IndexWriter w, Object... shapes) throws Exception {\n    Set<Integer> deleted = new HashSet<>();\n    for (int id = 0; id < shapes.length; ++id) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + id, Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", id));\n      if (shapes[id] != null) {\n        addShapeToDoc(FIELD_NAME, doc, shapes[id]);\n      }\n      w.addDocument(doc);\n      if (id > 0 && random().nextInt(100) == 42) {\n        int idToDelete = random().nextInt(id);\n        w.deleteDocuments(new Term(\"id\", \"\"+idToDelete));\n        deleted.add(idToDelete);\n        if (VERBOSE) {\n          System.out.println(\"   delete id=\" + idToDelete);\n        }\n      }\n    }\n\n    if (randomBoolean()) {\n      w.forceMerge(1);\n    }\n  }\n\n","sourceOld":"  protected void indexRandomShapes(IndexWriter w, Object... shapes) throws Exception {\n    Set<Integer> deleted = new HashSet<>();\n    for (int id = 0; id < shapes.length; ++id) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + id, Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", id));\n      if (shapes[id] != null) {\n        addShapeToDoc(FIELD_NAME, doc, shapes[id]);\n      }\n      w.addDocument(doc);\n      if (id > 0 && random().nextInt(100) == 42) {\n        int idToDelete = random().nextInt(id);\n        w.deleteDocuments(new Term(\"id\", \"\"+idToDelete));\n        deleted.add(idToDelete);\n        if (VERBOSE) {\n          System.out.println(\"   delete id=\" + idToDelete);\n        }\n      }\n    }\n\n    if (randomBoolean()) {\n      w.forceMerge(1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24491e12b0e85893eccafcbaef34f087deedb9f5":["6345300cb90308ddf9579f7a7396a32d98795311"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c286b0d8c507a88b289407e2fe161effa275c6b0":["24491e12b0e85893eccafcbaef34f087deedb9f5"],"6345300cb90308ddf9579f7a7396a32d98795311":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c286b0d8c507a88b289407e2fe161effa275c6b0"]},"commit2Childs":{"24491e12b0e85893eccafcbaef34f087deedb9f5":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6345300cb90308ddf9579f7a7396a32d98795311"],"6345300cb90308ddf9579f7a7396a32d98795311":["24491e12b0e85893eccafcbaef34f087deedb9f5"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}