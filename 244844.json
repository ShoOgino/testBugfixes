{"path":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","commits":[{"id":"9ed5f4bd4ee593745097b1ec9f0110b1997a9e58","date":1396480148,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      if (!(updates instanceof Map)) {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n          \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map)!\");\n      }\n      boolean ignoreCase = getIgnoreCase();      \n      boolean madeChanges = false;\n      Map<String,Object> jsonMap = (Map<String,Object>)updates;\n      for (String term : jsonMap.keySet()) {\n        \n        term = applyCaseSetting(ignoreCase, term);\n        \n        Set<String> output = synonymMappings.get(term); \n        \n        Object val = jsonMap.get(term);\n        if (val instanceof String) {\n          String strVal = applyCaseSetting(ignoreCase, (String)val);\n          \n          if (output == null) {\n            output = new TreeSet<>();\n            synonymMappings.put(term, output);\n          }\n                    \n          if (output.add(strVal)) {\n            madeChanges = true;\n          }\n        } else if (val instanceof List) {\n          List<String> vals = (List<String>)val;\n          \n          if (output == null) {\n            output = new TreeSet<>();\n            synonymMappings.put(term, output);\n          }\n          \n          for (String nextVal : vals) {\n            if (output.add(applyCaseSetting(ignoreCase, nextVal))) {\n              madeChanges = true;\n            }\n          }          \n          \n        } else {\n          throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST, \"Unsupported value \"+val+\n              \" for \"+term+\"; expected single value or a JSON array!\");\n        }\n      }\n          \n      return madeChanges ? synonymMappings : null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      if (!(updates instanceof Map)) {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n          \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map)!\");\n      }\n      boolean ignoreCase = getIgnoreCase();      \n      boolean madeChanges = false;\n      Map<String,Object> jsonMap = (Map<String,Object>)updates;\n      for (String term : jsonMap.keySet()) {\n        \n        term = applyCaseSetting(ignoreCase, term);\n        \n        Set<String> output = synonymMappings.get(term); \n        \n        Object val = jsonMap.get(term);\n        if (val instanceof String) {\n          String strVal = applyCaseSetting(ignoreCase, (String)val);\n          \n          if (output == null) {\n            output = new TreeSet<>();\n            synonymMappings.put(term, output);\n          }\n                    \n          if (output.add(strVal)) {\n            madeChanges = true;\n          }\n        } else if (val instanceof List) {\n          List<String> vals = (List<String>)val;\n          \n          if (output == null) {\n            output = new TreeSet<>();\n            synonymMappings.put(term, output);\n          }\n          \n          for (String nextVal : vals) {\n            if (output.add(applyCaseSetting(ignoreCase, nextVal))) {\n              madeChanges = true;\n            }\n          }          \n          \n        } else {\n          throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST, \"Unsupported value \"+val+\n              \" for \"+term+\"; expected single value or a JSON array!\");\n        }\n      }\n          \n      return madeChanges ? synonymMappings : null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c897483ab479f5d1bcdd40400d20ef417b3b837","date":1400781817,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      if (!(updates instanceof Map)) {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n          \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map)!\");\n      }\n      boolean ignoreCase = getIgnoreCase();      \n      boolean madeChanges = false;\n      Map<String,Object> jsonMap = (Map<String,Object>)updates;\n      for (String term : jsonMap.keySet()) {\n        \n        String origTerm = term;\n        term = applyCaseSetting(ignoreCase, term);\n        \n        // find the mappings using the case aware key\n        CasePreservedSynonymMappings cpsm = synonymMappings.get(term);\n        if (cpsm == null) {\n          cpsm = new CasePreservedSynonymMappings();\n        }\n        \n        Set<String> output = cpsm.mappings.get(origTerm);  \n        \n        Object val = jsonMap.get(origTerm); // IMPORTANT: use the original\n        if (val instanceof String) {\n          String strVal = (String)val;\n          \n          if (output == null) {\n            output = new TreeSet<>();\n            cpsm.mappings.put(origTerm, output);\n          }\n                    \n          if (output.add(strVal)) {\n            madeChanges = true;\n          }\n        } else if (val instanceof List) {\n          List<String> vals = (List<String>)val;\n          \n          if (output == null) {\n            output = new TreeSet<>();\n            cpsm.mappings.put(origTerm, output);\n          }\n          \n          for (String nextVal : vals) {\n            if (output.add(nextVal)) {\n              madeChanges = true;\n            }\n          }          \n          \n        } else {\n          throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST, \"Unsupported value \"+val+\n              \" for \"+term+\"; expected single value or a JSON array!\");\n        }\n        \n        // only add the cpsm to the synonymMappings if it has valid data\n        if (!synonymMappings.containsKey(term) && cpsm.mappings.get(origTerm) != null) {\n          synonymMappings.put(term, cpsm);\n        }\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n\n","sourceOld":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      if (!(updates instanceof Map)) {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n          \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map)!\");\n      }\n      boolean ignoreCase = getIgnoreCase();      \n      boolean madeChanges = false;\n      Map<String,Object> jsonMap = (Map<String,Object>)updates;\n      for (String term : jsonMap.keySet()) {\n        \n        term = applyCaseSetting(ignoreCase, term);\n        \n        Set<String> output = synonymMappings.get(term); \n        \n        Object val = jsonMap.get(term);\n        if (val instanceof String) {\n          String strVal = applyCaseSetting(ignoreCase, (String)val);\n          \n          if (output == null) {\n            output = new TreeSet<>();\n            synonymMappings.put(term, output);\n          }\n                    \n          if (output.add(strVal)) {\n            madeChanges = true;\n          }\n        } else if (val instanceof List) {\n          List<String> vals = (List<String>)val;\n          \n          if (output == null) {\n            output = new TreeSet<>();\n            synonymMappings.put(term, output);\n          }\n          \n          for (String nextVal : vals) {\n            if (output.add(applyCaseSetting(ignoreCase, nextVal))) {\n              madeChanges = true;\n            }\n          }          \n          \n        } else {\n          throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST, \"Unsupported value \"+val+\n              \" for \"+term+\"; expected single value or a JSON array!\");\n        }\n      }\n          \n      return madeChanges ? synonymMappings : null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4da8d4c422d841c0e5a997bf16dd471c5545d3e4","date":1430889527,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n\n","sourceOld":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      if (!(updates instanceof Map)) {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n          \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map)!\");\n      }\n      boolean ignoreCase = getIgnoreCase();      \n      boolean madeChanges = false;\n      Map<String,Object> jsonMap = (Map<String,Object>)updates;\n      for (String term : jsonMap.keySet()) {\n        \n        String origTerm = term;\n        term = applyCaseSetting(ignoreCase, term);\n        \n        // find the mappings using the case aware key\n        CasePreservedSynonymMappings cpsm = synonymMappings.get(term);\n        if (cpsm == null) {\n          cpsm = new CasePreservedSynonymMappings();\n        }\n        \n        Set<String> output = cpsm.mappings.get(origTerm);  \n        \n        Object val = jsonMap.get(origTerm); // IMPORTANT: use the original\n        if (val instanceof String) {\n          String strVal = (String)val;\n          \n          if (output == null) {\n            output = new TreeSet<>();\n            cpsm.mappings.put(origTerm, output);\n          }\n                    \n          if (output.add(strVal)) {\n            madeChanges = true;\n          }\n        } else if (val instanceof List) {\n          List<String> vals = (List<String>)val;\n          \n          if (output == null) {\n            output = new TreeSet<>();\n            cpsm.mappings.put(origTerm, output);\n          }\n          \n          for (String nextVal : vals) {\n            if (output.add(nextVal)) {\n              madeChanges = true;\n            }\n          }          \n          \n        } else {\n          throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST, \"Unsupported value \"+val+\n              \" for \"+term+\"; expected single value or a JSON array!\");\n        }\n        \n        // only add the cpsm to the synonymMappings if it has valid data\n        if (!synonymMappings.containsKey(term) && cpsm.mappings.get(origTerm) != null) {\n          synonymMappings.put(term, cpsm);\n        }\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","date":1601832109,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyUpdatesToManagedData(Object).mjava","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n\n","sourceOld":"    @SuppressWarnings(\"unchecked\")\n    @Override\n    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9ed5f4bd4ee593745097b1ec9f0110b1997a9e58"],"4da8d4c422d841c0e5a997bf16dd471c5545d3e4":["3c897483ab479f5d1bcdd40400d20ef417b3b837"],"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["4da8d4c422d841c0e5a997bf16dd471c5545d3e4"],"9ed5f4bd4ee593745097b1ec9f0110b1997a9e58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3c897483ab479f5d1bcdd40400d20ef417b3b837":["9ed5f4bd4ee593745097b1ec9f0110b1997a9e58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"4da8d4c422d841c0e5a997bf16dd471c5545d3e4":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"],"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ed5f4bd4ee593745097b1ec9f0110b1997a9e58":["5eb2511ababf862ea11e10761c70ee560cd84510","3c897483ab479f5d1bcdd40400d20ef417b3b837"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","9ed5f4bd4ee593745097b1ec9f0110b1997a9e58"],"3c897483ab479f5d1bcdd40400d20ef417b3b837":["4da8d4c422d841c0e5a997bf16dd471c5545d3e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}