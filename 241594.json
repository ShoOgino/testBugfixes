{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell2/TestDictionary#testCompressedDictionary().mjava","commits":[{"id":"c214bc712d04c78c4d434119d560d0a4dd2fce4f","date":1393216863,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell2/TestDictionary#testCompressedDictionary().mjava","pathOld":"/dev/null","sourceNew":"  public void testCompressedDictionary() throws Exception {\n    InputStream affixStream = getClass().getResourceAsStream(\"compressed.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"compressed.dic\");\n\n    Dictionary dictionary = new Dictionary(affixStream, dictStream);\n    assertEquals(3, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3, new BytesRef()).length);\n    \n    affixStream.close();\n    dictStream.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26c5ee01d8657497f54f46447208768acc949d51","date":1393523610,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell2/TestDictionary#testCompressedDictionary().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell2/TestDictionary#testCompressedDictionary().mjava","sourceNew":"  public void testCompressedDictionary() throws Exception {\n    InputStream affixStream = getClass().getResourceAsStream(\"compressed.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"compressed.dic\");\n\n    Dictionary dictionary = new Dictionary(affixStream, dictStream);\n    assertEquals(3, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).length);\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).length);\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3, new BytesRef()).length);\n    \n    affixStream.close();\n    dictStream.close();\n  }\n\n","sourceOld":"  public void testCompressedDictionary() throws Exception {\n    InputStream affixStream = getClass().getResourceAsStream(\"compressed.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"compressed.dic\");\n\n    Dictionary dictionary = new Dictionary(affixStream, dictStream);\n    assertEquals(3, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3, new BytesRef()).length);\n    \n    affixStream.close();\n    dictStream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","date":1393532367,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestDictionary#testCompressedDictionary().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell2/TestDictionary#testCompressedDictionary().mjava","sourceNew":"  public void testCompressedDictionary() throws Exception {\n    InputStream affixStream = getClass().getResourceAsStream(\"compressed.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"compressed.dic\");\n\n    Dictionary dictionary = new Dictionary(affixStream, dictStream);\n    assertEquals(3, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).length);\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).length);\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3, new BytesRef()).length);\n    \n    affixStream.close();\n    dictStream.close();\n  }\n\n","sourceOld":"  public void testCompressedDictionary() throws Exception {\n    InputStream affixStream = getClass().getResourceAsStream(\"compressed.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"compressed.dic\");\n\n    Dictionary dictionary = new Dictionary(affixStream, dictStream);\n    assertEquals(3, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).length);\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).length);\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3, new BytesRef()).length);\n    \n    affixStream.close();\n    dictStream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"26c5ee01d8657497f54f46447208768acc949d51":["c214bc712d04c78c4d434119d560d0a4dd2fce4f"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["26c5ee01d8657497f54f46447208768acc949d51"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c214bc712d04c78c4d434119d560d0a4dd2fce4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"26c5ee01d8657497f54f46447208768acc949d51":["dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c214bc712d04c78c4d434119d560d0a4dd2fce4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c214bc712d04c78c4d434119d560d0a4dd2fce4f":["26c5ee01d8657497f54f46447208768acc949d51"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}