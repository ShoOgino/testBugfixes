{"path":"solr/core/src/test/org/apache/solr/core/AlternateDirectoryTest#testAltReaderUsed().mjava","commits":[{"id":"993f5f4ed8f84237dd6ada8a315881ecb070867b","date":1375829528,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/AlternateDirectoryTest#testAltReaderUsed().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","sourceNew":"  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertEquals(\"readerFactory is wrong class\",\n                 AlternateDirectoryTest.TestIndexReaderFactory.class.getName(), \n                 readerFactory.getClass().getName());\n  }\n\n","sourceOld":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":1,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/AlternateDirectoryTest#testAltReaderUsed().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","sourceNew":"  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertEquals(\"readerFactory is wrong class\",\n                 AlternateDirectoryTest.TestIndexReaderFactory.class.getName(), \n                 readerFactory.getClass().getName());\n  }\n\n","sourceOld":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n    assertTrue(\"termInfoIndexDivisor not set to 12\", readerFactory.getTermInfosIndexDivisor() == 12);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","993f5f4ed8f84237dd6ada8a315881ecb070867b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"993f5f4ed8f84237dd6ada8a315881ecb070867b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["993f5f4ed8f84237dd6ada8a315881ecb070867b"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","993f5f4ed8f84237dd6ada8a315881ecb070867b"],"993f5f4ed8f84237dd6ada8a315881ecb070867b":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}