{"path":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    return s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n  }\n\n","sourceOld":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    return s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86365ce8db75e42ebe10805e99e92c463fef63b6","date":1330370408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n    if (defaultCodecSupportsDocValues()) {\n      final Sort dvSort = new Sort(new SortField(\"title\", SortField.Type.STRING));\n      dvSort.getSort()[0].setUseIndexValues(true);\n      int hitCount2 = s.search(q, null, 10, dvSort).totalHits;\n      assertEquals(hitCount, hitCount2);\n    }\n    return hitCount;\n  }\n\n","sourceOld":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    return s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n  }\n\n","bugFix":null,"bugIntro":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n    if (defaultCodecSupportsDocValues()) {\n      final Sort dvSort = new Sort(new SortField(\"title\", SortField.Type.STRING));\n      dvSort.getSort()[0].setUseIndexValues(true);\n      int hitCount2 = s.search(q, null, 10, dvSort).totalHits;\n      assertEquals(hitCount, hitCount2);\n    }\n    return hitCount;\n  }\n\n","sourceOld":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    return s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"title\", SortField.Type.STRING));\n    dvSort.getSort()[0].setUseIndexValues(true);\n    int hitCount2 = s.search(q, null, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","sourceOld":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n    if (defaultCodecSupportsDocValues()) {\n      final Sort dvSort = new Sort(new SortField(\"title\", SortField.Type.STRING));\n      dvSort.getSort()[0].setUseIndexValues(true);\n      int hitCount2 = s.search(q, null, 10, dvSort).totalHits;\n      assertEquals(hitCount, hitCount2);\n    }\n    return hitCount;\n  }\n\n","bugFix":null,"bugIntro":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c","d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3e29774db46ad98ca4a8d7fcbfab633ebc01f358","date":1355170812,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"title\", SortField.Type.STRING));\n    int hitCount2 = s.search(q, null, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","sourceOld":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"title\", SortField.Type.STRING));\n    dvSort.getSort()[0].setUseIndexValues(true);\n    int hitCount2 = s.search(q, null, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"title\", SortField.Type.STRING));\n    int hitCount2 = s.search(q, null, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","sourceOld":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"title\", SortField.Type.STRING));\n    dvSort.getSort()[0].setUseIndexValues(true);\n    int hitCount2 = s.search(q, null, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","bugFix":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c","date":1416362965,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, null, 10, new Sort(new SortField(\"titleDV\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"titleDV\", SortField.Type.STRING));\n    int hitCount2 = s.search(q, null, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","sourceOld":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, null, 10, new Sort(new SortField(\"title\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"title\", SortField.Type.STRING));\n    int hitCount2 = s.search(q, null, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","bugFix":["86365ce8db75e42ebe10805e99e92c463fef63b6","57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, 10, new Sort(new SortField(\"titleDV\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"titleDV\", SortField.Type.STRING));\n    int hitCount2 = s.search(q, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","sourceOld":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, null, 10, new Sort(new SortField(\"titleDV\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"titleDV\", SortField.Type.STRING));\n    int hitCount2 = s.search(q, null, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","bugFix":null,"bugIntro":["f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6","date":1498031702,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private long runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    long hitCount = s.search(q, 10, new Sort(new SortField(\"titleDV\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"titleDV\", SortField.Type.STRING));\n    long hitCount2 = s.search(q, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","sourceOld":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, 10, new Sort(new SortField(\"titleDV\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"titleDV\", SortField.Type.STRING));\n    int hitCount2 = s.search(q, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","bugFix":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","01b5702c02a50fec5cd548d8a459434379a5908f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private long runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    long hitCount = s.search(q, 10, new Sort(new SortField(\"titleDV\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"titleDV\", SortField.Type.STRING));\n    long hitCount2 = s.search(q, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","sourceOld":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, 10, new Sort(new SortField(\"titleDV\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"titleDV\", SortField.Type.STRING));\n    int hitCount2 = s.search(q, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private long runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    long hitCount = s.search(q, 10, new Sort(new SortField(\"titleDV\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"titleDV\", SortField.Type.STRING));\n    long hitCount2 = s.search(q, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","sourceOld":"  private int runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    int hitCount = s.search(q, 10, new Sort(new SortField(\"titleDV\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"titleDV\", SortField.Type.STRING));\n    int hitCount2 = s.search(q, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ThreadedIndexingAndSearchingTestCase#runQuery(IndexSearcher,Query).mjava","sourceNew":"  private long runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    long hitCount = s.search(q, 10, new Sort(new SortField(\"titleDV\", SortField.Type.STRING))).totalHits.value;\n    final Sort dvSort = new Sort(new SortField(\"titleDV\", SortField.Type.STRING));\n    long hitCount2 = s.search(q, 10, dvSort).totalHits.value;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","sourceOld":"  private long runQuery(IndexSearcher s, Query q) throws Exception {\n    s.search(q, 10);\n    long hitCount = s.search(q, 10, new Sort(new SortField(\"titleDV\", SortField.Type.STRING))).totalHits;\n    final Sort dvSort = new Sort(new SortField(\"titleDV\", SortField.Type.STRING));\n    long hitCount2 = s.search(q, 10, dvSort).totalHits;\n    assertEquals(hitCount, hitCount2);\n    return hitCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","86365ce8db75e42ebe10805e99e92c463fef63b6"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"86365ce8db75e42ebe10805e99e92c463fef63b6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6"],"28288370235ed02234a64753cdbf0c6ec096304a":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6"],"0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["86365ce8db75e42ebe10805e99e92c463fef63b6"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8","3e29774db46ad98ca4a8d7fcbfab633ebc01f358"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","86365ce8db75e42ebe10805e99e92c463fef63b6"],"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"86365ce8db75e42ebe10805e99e92c463fef63b6":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["3e29774db46ad98ca4a8d7fcbfab633ebc01f358","d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}