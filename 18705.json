{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#readLine(DataInput,BytesRef).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#readLine(DataInput,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#readLine(DataInput,BytesRef).mjava","sourceNew":"  public static void readLine(DataInput in, BytesRef scratch) throws IOException {\n    int upto = 0;\n    while(true) {\n      byte b = in.readByte();\n      if (scratch.bytes.length == upto) {\n        scratch.grow(1+upto);\n      }\n      if (b == ESCAPE) {\n        scratch.bytes[upto++] = in.readByte();\n      } else {\n        if (b == NEWLINE) {\n          break;\n        } else {\n          scratch.bytes[upto++] = b;\n        }\n      }\n    }\n    scratch.offset = 0;\n    scratch.length = upto;\n  }\n\n","sourceOld":"  public static void readLine(DataInput in, BytesRef scratch) throws IOException {\n    int upto = 0;\n    while(true) {\n      byte b = in.readByte();\n      if (scratch.bytes.length == upto) {\n        scratch.grow(1+upto);\n      }\n      if (b == ESCAPE) {\n        scratch.bytes[upto++] = in.readByte();\n      } else {\n        if (b == NEWLINE) {\n          break;\n        } else {\n          scratch.bytes[upto++] = b;\n        }\n      }\n    }\n    scratch.offset = 0;\n    scratch.length = upto;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#readLine(DataInput,BytesRefBuilder).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#readLine(DataInput,BytesRef).mjava","sourceNew":"  public static void readLine(DataInput in, BytesRefBuilder scratch) throws IOException {\n    int upto = 0;\n    while(true) {\n      byte b = in.readByte();\n      scratch.grow(1+upto);\n      if (b == ESCAPE) {\n        scratch.setByteAt(upto++, in.readByte());\n      } else {\n        if (b == NEWLINE) {\n          break;\n        } else {\n          scratch.setByteAt(upto++, b);\n        }\n      }\n    }\n    scratch.setLength(upto);\n  }\n\n","sourceOld":"  public static void readLine(DataInput in, BytesRef scratch) throws IOException {\n    int upto = 0;\n    while(true) {\n      byte b = in.readByte();\n      if (scratch.bytes.length == upto) {\n        scratch.grow(1+upto);\n      }\n      if (b == ESCAPE) {\n        scratch.bytes[upto++] = in.readByte();\n      } else {\n        if (b == NEWLINE) {\n          break;\n        } else {\n          scratch.bytes[upto++] = b;\n        }\n      }\n    }\n    scratch.offset = 0;\n    scratch.length = upto;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}