{"path":"solr/core/src/test/org/apache/solr/util/JsonValidatorTest#checkSchema(String).mjava","commits":[{"id":"fcf710a8fcd590cf55c855d422c7a10fce3e6117","date":1485842253,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/JsonValidatorTest#checkSchema(String).mjava","pathOld":"/dev/null","sourceNew":"  private void checkSchema(String name) {\n    ValidatingJsonMap spec = ApiBag.getSpec(name).getSpec();\n    Map commands = (Map) spec.get(\"commands\");\n    for (Object o : commands.entrySet()) {\n      Map.Entry cmd = (Map.Entry) o;\n      try {\n        JsonSchemaValidator validator = new JsonSchemaValidator((Map) cmd.getValue());\n      } catch (Exception e) {\n        throw new RuntimeException(\"Error in command  \" + cmd.getKey() + \" in schema \" + name, e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/JsonValidatorTest#checkSchema(String).mjava","pathOld":"/dev/null","sourceNew":"  private void checkSchema(String name) {\n    ValidatingJsonMap spec = ApiBag.getSpec(name).getSpec();\n    Map commands = (Map) spec.get(\"commands\");\n    for (Object o : commands.entrySet()) {\n      Map.Entry cmd = (Map.Entry) o;\n      try {\n        JsonSchemaValidator validator = new JsonSchemaValidator((Map) cmd.getValue());\n      } catch (Exception e) {\n        throw new RuntimeException(\"Error in command  \" + cmd.getKey() + \" in schema \" + name, e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5174b677b2536f97776e6b67e8c10ae5c66e6fa2","date":1496916595,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/JsonValidatorTest#checkSchema(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/util/JsonValidatorTest#checkSchema(String).mjava","sourceNew":"  private void checkSchema(String name) {\n    ValidatingJsonMap spec = Utils.getSpec(name).getSpec();\n    Map commands = (Map) spec.get(\"commands\");\n    for (Object o : commands.entrySet()) {\n      Map.Entry cmd = (Map.Entry) o;\n      try {\n        JsonSchemaValidator validator = new JsonSchemaValidator((Map) cmd.getValue());\n      } catch (Exception e) {\n        throw new RuntimeException(\"Error in command  \" + cmd.getKey() + \" in schema \" + name, e);\n      }\n    }\n  }\n\n","sourceOld":"  private void checkSchema(String name) {\n    ValidatingJsonMap spec = ApiBag.getSpec(name).getSpec();\n    Map commands = (Map) spec.get(\"commands\");\n    for (Object o : commands.entrySet()) {\n      Map.Entry cmd = (Map.Entry) o;\n      try {\n        JsonSchemaValidator validator = new JsonSchemaValidator((Map) cmd.getValue());\n      } catch (Exception e) {\n        throw new RuntimeException(\"Error in command  \" + cmd.getKey() + \" in schema \" + name, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"520d7467475e194bd1143ba662a0717e6345137f","date":1496984366,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/JsonValidatorTest#checkSchema(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/util/JsonValidatorTest#checkSchema(String).mjava","sourceNew":"  private void checkSchema(String name) {\n    ValidatingJsonMap spec = Utils.getSpec(name).getSpec();\n    Map commands = (Map) spec.get(\"commands\");\n    for (Object o : commands.entrySet()) {\n      Map.Entry cmd = (Map.Entry) o;\n      try {\n        JsonSchemaValidator validator = new JsonSchemaValidator((Map) cmd.getValue());\n      } catch (Exception e) {\n        throw new RuntimeException(\"Error in command  \" + cmd.getKey() + \" in schema \" + name, e);\n      }\n    }\n  }\n\n","sourceOld":"  private void checkSchema(String name) {\n    ValidatingJsonMap spec = Utils.getSpec(name).getSpec();\n    Map commands = (Map) spec.get(\"commands\");\n    for (Object o : commands.entrySet()) {\n      Map.Entry cmd = (Map.Entry) o;\n      try {\n        JsonSchemaValidator validator = new JsonSchemaValidator((Map) cmd.getValue());\n      } catch (Exception e) {\n        throw new RuntimeException(\"Error in command  \" + cmd.getKey() + \" in schema \" + name, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/JsonValidatorTest#checkSchema(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/util/JsonValidatorTest#checkSchema(String).mjava","sourceNew":"  private void checkSchema(String name) {\n    ValidatingJsonMap spec = Utils.getSpec(name).getSpec();\n    Map commands = (Map) spec.get(\"commands\");\n    for (Object o : commands.entrySet()) {\n      Map.Entry cmd = (Map.Entry) o;\n      try {\n        JsonSchemaValidator validator = new JsonSchemaValidator((Map) cmd.getValue());\n      } catch (Exception e) {\n        throw new RuntimeException(\"Error in command  \" + cmd.getKey() + \" in schema \" + name, e);\n      }\n    }\n  }\n\n","sourceOld":"  private void checkSchema(String name) {\n    ValidatingJsonMap spec = ApiBag.getSpec(name).getSpec();\n    Map commands = (Map) spec.get(\"commands\");\n    for (Object o : commands.entrySet()) {\n      Map.Entry cmd = (Map.Entry) o;\n      try {\n        JsonSchemaValidator validator = new JsonSchemaValidator((Map) cmd.getValue());\n      } catch (Exception e) {\n        throw new RuntimeException(\"Error in command  \" + cmd.getKey() + \" in schema \" + name, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/util/JsonValidatorTest#checkSchema(String).mjava","sourceNew":null,"sourceOld":"  private void checkSchema(String name) {\n    ValidatingJsonMap spec = ApiBag.getSpec(name).getSpec();\n    Map commands = (Map) spec.get(\"commands\");\n    for (Object o : commands.entrySet()) {\n      Map.Entry cmd = (Map.Entry) o;\n      try {\n        JsonSchemaValidator validator = new JsonSchemaValidator((Map) cmd.getValue());\n      } catch (Exception e) {\n        throw new RuntimeException(\"Error in command  \" + cmd.getKey() + \" in schema \" + name, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"520d7467475e194bd1143ba662a0717e6345137f":["5174b677b2536f97776e6b67e8c10ae5c66e6fa2"],"28288370235ed02234a64753cdbf0c6ec096304a":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","520d7467475e194bd1143ba662a0717e6345137f"],"5174b677b2536f97776e6b67e8c10ae5c66e6fa2":["fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","520d7467475e194bd1143ba662a0717e6345137f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","28288370235ed02234a64753cdbf0c6ec096304a","5174b677b2536f97776e6b67e8c10ae5c66e6fa2","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"520d7467475e194bd1143ba662a0717e6345137f":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"5174b677b2536f97776e6b67e8c10ae5c66e6fa2":["520d7467475e194bd1143ba662a0717e6345137f"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}