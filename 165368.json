{"path":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PackedIntsDecompress#decode15(IntBuffer,int[]).mjava","commits":[{"id":"824ab25acd22f2eca198755bafab3cb8b7878493","date":1341276186,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PackedIntsDecompress#decode15(IntBuffer,int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/ForDecompressImpl#decode15(IntBuffer,int[]).mjava","sourceNew":"  // NOTE: hardwired to blockSize == 128\n  public static void decode15(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 15;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      int intValue12 = compressedBuffer.get();\n      int intValue13 = compressedBuffer.get();\n      int intValue14 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = (intValue0 >>> 15) & mask;\n      output[2 + outputOffset] = ((intValue0 >>> 30) | (intValue1 << 2)) & mask;\n      output[3 + outputOffset] = (intValue1 >>> 13) & mask;\n      output[4 + outputOffset] = ((intValue1 >>> 28) | (intValue2 << 4)) & mask;\n      output[5 + outputOffset] = (intValue2 >>> 11) & mask;\n      output[6 + outputOffset] = ((intValue2 >>> 26) | (intValue3 << 6)) & mask;\n      output[7 + outputOffset] = (intValue3 >>> 9) & mask;\n      output[8 + outputOffset] = ((intValue3 >>> 24) | (intValue4 << 8)) & mask;\n      output[9 + outputOffset] = (intValue4 >>> 7) & mask;\n      output[10 + outputOffset] = ((intValue4 >>> 22) | (intValue5 << 10)) & mask;\n      output[11 + outputOffset] = (intValue5 >>> 5) & mask;\n      output[12 + outputOffset] = ((intValue5 >>> 20) | (intValue6 << 12)) & mask;\n      output[13 + outputOffset] = (intValue6 >>> 3) & mask;\n      output[14 + outputOffset] = ((intValue6 >>> 18) | (intValue7 << 14)) & mask;\n      output[15 + outputOffset] = (intValue7 >>> 1) & mask;\n      output[16 + outputOffset] = (intValue7 >>> 16) & mask;\n      output[17 + outputOffset] = ((intValue7 >>> 31) | (intValue8 << 1)) & mask;\n      output[18 + outputOffset] = (intValue8 >>> 14) & mask;\n      output[19 + outputOffset] = ((intValue8 >>> 29) | (intValue9 << 3)) & mask;\n      output[20 + outputOffset] = (intValue9 >>> 12) & mask;\n      output[21 + outputOffset] = ((intValue9 >>> 27) | (intValue10 << 5)) & mask;\n      output[22 + outputOffset] = (intValue10 >>> 10) & mask;\n      output[23 + outputOffset] = ((intValue10 >>> 25) | (intValue11 << 7)) & mask;\n      output[24 + outputOffset] = (intValue11 >>> 8) & mask;\n      output[25 + outputOffset] = ((intValue11 >>> 23) | (intValue12 << 9)) & mask;\n      output[26 + outputOffset] = (intValue12 >>> 6) & mask;\n      output[27 + outputOffset] = ((intValue12 >>> 21) | (intValue13 << 11)) & mask;\n      output[28 + outputOffset] = (intValue13 >>> 4) & mask;\n      output[29 + outputOffset] = ((intValue13 >>> 19) | (intValue14 << 13)) & mask;\n      output[30 + outputOffset] = (intValue14 >>> 2) & mask;\n      output[31 + outputOffset] = intValue14 >>> 17;\n      outputOffset += 32;\n    }\n  }\n\n","sourceOld":"  // NOTE: hardwired to blockSize == 128\n  public static void decode15(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 15;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      int intValue12 = compressedBuffer.get();\n      int intValue13 = compressedBuffer.get();\n      int intValue14 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = (intValue0 >>> 15) & mask;\n      output[2 + outputOffset] = ((intValue0 >>> 30) | (intValue1 << 2)) & mask;\n      output[3 + outputOffset] = (intValue1 >>> 13) & mask;\n      output[4 + outputOffset] = ((intValue1 >>> 28) | (intValue2 << 4)) & mask;\n      output[5 + outputOffset] = (intValue2 >>> 11) & mask;\n      output[6 + outputOffset] = ((intValue2 >>> 26) | (intValue3 << 6)) & mask;\n      output[7 + outputOffset] = (intValue3 >>> 9) & mask;\n      output[8 + outputOffset] = ((intValue3 >>> 24) | (intValue4 << 8)) & mask;\n      output[9 + outputOffset] = (intValue4 >>> 7) & mask;\n      output[10 + outputOffset] = ((intValue4 >>> 22) | (intValue5 << 10)) & mask;\n      output[11 + outputOffset] = (intValue5 >>> 5) & mask;\n      output[12 + outputOffset] = ((intValue5 >>> 20) | (intValue6 << 12)) & mask;\n      output[13 + outputOffset] = (intValue6 >>> 3) & mask;\n      output[14 + outputOffset] = ((intValue6 >>> 18) | (intValue7 << 14)) & mask;\n      output[15 + outputOffset] = (intValue7 >>> 1) & mask;\n      output[16 + outputOffset] = (intValue7 >>> 16) & mask;\n      output[17 + outputOffset] = ((intValue7 >>> 31) | (intValue8 << 1)) & mask;\n      output[18 + outputOffset] = (intValue8 >>> 14) & mask;\n      output[19 + outputOffset] = ((intValue8 >>> 29) | (intValue9 << 3)) & mask;\n      output[20 + outputOffset] = (intValue9 >>> 12) & mask;\n      output[21 + outputOffset] = ((intValue9 >>> 27) | (intValue10 << 5)) & mask;\n      output[22 + outputOffset] = (intValue10 >>> 10) & mask;\n      output[23 + outputOffset] = ((intValue10 >>> 25) | (intValue11 << 7)) & mask;\n      output[24 + outputOffset] = (intValue11 >>> 8) & mask;\n      output[25 + outputOffset] = ((intValue11 >>> 23) | (intValue12 << 9)) & mask;\n      output[26 + outputOffset] = (intValue12 >>> 6) & mask;\n      output[27 + outputOffset] = ((intValue12 >>> 21) | (intValue13 << 11)) & mask;\n      output[28 + outputOffset] = (intValue13 >>> 4) & mask;\n      output[29 + outputOffset] = ((intValue13 >>> 19) | (intValue14 << 13)) & mask;\n      output[30 + outputOffset] = (intValue14 >>> 2) & mask;\n      output[31 + outputOffset] = intValue14 >>> 17;\n      outputOffset += 32;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5373bc7574123da55ae25e216b6d768ccb1dcd91","date":1342013351,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PackedIntsDecompress#decode15(IntBuffer,int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PackedIntsDecompress#decode15(IntBuffer,int[]).mjava","sourceNew":"  public static void decode15(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 15;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      int intValue12 = compressedBuffer.get();\n      int intValue13 = compressedBuffer.get();\n      int intValue14 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = (intValue0 >>> 15) & mask;\n      output[2 + outputOffset] = ((intValue0 >>> 30) | (intValue1 << 2)) & mask;\n      output[3 + outputOffset] = (intValue1 >>> 13) & mask;\n      output[4 + outputOffset] = ((intValue1 >>> 28) | (intValue2 << 4)) & mask;\n      output[5 + outputOffset] = (intValue2 >>> 11) & mask;\n      output[6 + outputOffset] = ((intValue2 >>> 26) | (intValue3 << 6)) & mask;\n      output[7 + outputOffset] = (intValue3 >>> 9) & mask;\n      output[8 + outputOffset] = ((intValue3 >>> 24) | (intValue4 << 8)) & mask;\n      output[9 + outputOffset] = (intValue4 >>> 7) & mask;\n      output[10 + outputOffset] = ((intValue4 >>> 22) | (intValue5 << 10)) & mask;\n      output[11 + outputOffset] = (intValue5 >>> 5) & mask;\n      output[12 + outputOffset] = ((intValue5 >>> 20) | (intValue6 << 12)) & mask;\n      output[13 + outputOffset] = (intValue6 >>> 3) & mask;\n      output[14 + outputOffset] = ((intValue6 >>> 18) | (intValue7 << 14)) & mask;\n      output[15 + outputOffset] = (intValue7 >>> 1) & mask;\n      output[16 + outputOffset] = (intValue7 >>> 16) & mask;\n      output[17 + outputOffset] = ((intValue7 >>> 31) | (intValue8 << 1)) & mask;\n      output[18 + outputOffset] = (intValue8 >>> 14) & mask;\n      output[19 + outputOffset] = ((intValue8 >>> 29) | (intValue9 << 3)) & mask;\n      output[20 + outputOffset] = (intValue9 >>> 12) & mask;\n      output[21 + outputOffset] = ((intValue9 >>> 27) | (intValue10 << 5)) & mask;\n      output[22 + outputOffset] = (intValue10 >>> 10) & mask;\n      output[23 + outputOffset] = ((intValue10 >>> 25) | (intValue11 << 7)) & mask;\n      output[24 + outputOffset] = (intValue11 >>> 8) & mask;\n      output[25 + outputOffset] = ((intValue11 >>> 23) | (intValue12 << 9)) & mask;\n      output[26 + outputOffset] = (intValue12 >>> 6) & mask;\n      output[27 + outputOffset] = ((intValue12 >>> 21) | (intValue13 << 11)) & mask;\n      output[28 + outputOffset] = (intValue13 >>> 4) & mask;\n      output[29 + outputOffset] = ((intValue13 >>> 19) | (intValue14 << 13)) & mask;\n      output[30 + outputOffset] = (intValue14 >>> 2) & mask;\n      output[31 + outputOffset] = intValue14 >>> 17;\n      outputOffset += 32;\n    }\n  }\n\n","sourceOld":"  // NOTE: hardwired to blockSize == 128\n  public static void decode15(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 15;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      int intValue12 = compressedBuffer.get();\n      int intValue13 = compressedBuffer.get();\n      int intValue14 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = (intValue0 >>> 15) & mask;\n      output[2 + outputOffset] = ((intValue0 >>> 30) | (intValue1 << 2)) & mask;\n      output[3 + outputOffset] = (intValue1 >>> 13) & mask;\n      output[4 + outputOffset] = ((intValue1 >>> 28) | (intValue2 << 4)) & mask;\n      output[5 + outputOffset] = (intValue2 >>> 11) & mask;\n      output[6 + outputOffset] = ((intValue2 >>> 26) | (intValue3 << 6)) & mask;\n      output[7 + outputOffset] = (intValue3 >>> 9) & mask;\n      output[8 + outputOffset] = ((intValue3 >>> 24) | (intValue4 << 8)) & mask;\n      output[9 + outputOffset] = (intValue4 >>> 7) & mask;\n      output[10 + outputOffset] = ((intValue4 >>> 22) | (intValue5 << 10)) & mask;\n      output[11 + outputOffset] = (intValue5 >>> 5) & mask;\n      output[12 + outputOffset] = ((intValue5 >>> 20) | (intValue6 << 12)) & mask;\n      output[13 + outputOffset] = (intValue6 >>> 3) & mask;\n      output[14 + outputOffset] = ((intValue6 >>> 18) | (intValue7 << 14)) & mask;\n      output[15 + outputOffset] = (intValue7 >>> 1) & mask;\n      output[16 + outputOffset] = (intValue7 >>> 16) & mask;\n      output[17 + outputOffset] = ((intValue7 >>> 31) | (intValue8 << 1)) & mask;\n      output[18 + outputOffset] = (intValue8 >>> 14) & mask;\n      output[19 + outputOffset] = ((intValue8 >>> 29) | (intValue9 << 3)) & mask;\n      output[20 + outputOffset] = (intValue9 >>> 12) & mask;\n      output[21 + outputOffset] = ((intValue9 >>> 27) | (intValue10 << 5)) & mask;\n      output[22 + outputOffset] = (intValue10 >>> 10) & mask;\n      output[23 + outputOffset] = ((intValue10 >>> 25) | (intValue11 << 7)) & mask;\n      output[24 + outputOffset] = (intValue11 >>> 8) & mask;\n      output[25 + outputOffset] = ((intValue11 >>> 23) | (intValue12 << 9)) & mask;\n      output[26 + outputOffset] = (intValue12 >>> 6) & mask;\n      output[27 + outputOffset] = ((intValue12 >>> 21) | (intValue13 << 11)) & mask;\n      output[28 + outputOffset] = (intValue13 >>> 4) & mask;\n      output[29 + outputOffset] = ((intValue13 >>> 19) | (intValue14 << 13)) & mask;\n      output[30 + outputOffset] = (intValue14 >>> 2) & mask;\n      output[31 + outputOffset] = intValue14 >>> 17;\n      outputOffset += 32;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/PackedIntsDecompress#decode15(IntBuffer,int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PackedIntsDecompress#decode15(IntBuffer,int[]).mjava","sourceNew":"  public static void decode15(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 15;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      int intValue12 = compressedBuffer.get();\n      int intValue13 = compressedBuffer.get();\n      int intValue14 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = (intValue0 >>> 15) & mask;\n      output[2 + outputOffset] = ((intValue0 >>> 30) | (intValue1 << 2)) & mask;\n      output[3 + outputOffset] = (intValue1 >>> 13) & mask;\n      output[4 + outputOffset] = ((intValue1 >>> 28) | (intValue2 << 4)) & mask;\n      output[5 + outputOffset] = (intValue2 >>> 11) & mask;\n      output[6 + outputOffset] = ((intValue2 >>> 26) | (intValue3 << 6)) & mask;\n      output[7 + outputOffset] = (intValue3 >>> 9) & mask;\n      output[8 + outputOffset] = ((intValue3 >>> 24) | (intValue4 << 8)) & mask;\n      output[9 + outputOffset] = (intValue4 >>> 7) & mask;\n      output[10 + outputOffset] = ((intValue4 >>> 22) | (intValue5 << 10)) & mask;\n      output[11 + outputOffset] = (intValue5 >>> 5) & mask;\n      output[12 + outputOffset] = ((intValue5 >>> 20) | (intValue6 << 12)) & mask;\n      output[13 + outputOffset] = (intValue6 >>> 3) & mask;\n      output[14 + outputOffset] = ((intValue6 >>> 18) | (intValue7 << 14)) & mask;\n      output[15 + outputOffset] = (intValue7 >>> 1) & mask;\n      output[16 + outputOffset] = (intValue7 >>> 16) & mask;\n      output[17 + outputOffset] = ((intValue7 >>> 31) | (intValue8 << 1)) & mask;\n      output[18 + outputOffset] = (intValue8 >>> 14) & mask;\n      output[19 + outputOffset] = ((intValue8 >>> 29) | (intValue9 << 3)) & mask;\n      output[20 + outputOffset] = (intValue9 >>> 12) & mask;\n      output[21 + outputOffset] = ((intValue9 >>> 27) | (intValue10 << 5)) & mask;\n      output[22 + outputOffset] = (intValue10 >>> 10) & mask;\n      output[23 + outputOffset] = ((intValue10 >>> 25) | (intValue11 << 7)) & mask;\n      output[24 + outputOffset] = (intValue11 >>> 8) & mask;\n      output[25 + outputOffset] = ((intValue11 >>> 23) | (intValue12 << 9)) & mask;\n      output[26 + outputOffset] = (intValue12 >>> 6) & mask;\n      output[27 + outputOffset] = ((intValue12 >>> 21) | (intValue13 << 11)) & mask;\n      output[28 + outputOffset] = (intValue13 >>> 4) & mask;\n      output[29 + outputOffset] = ((intValue13 >>> 19) | (intValue14 << 13)) & mask;\n      output[30 + outputOffset] = (intValue14 >>> 2) & mask;\n      output[31 + outputOffset] = intValue14 >>> 17;\n      outputOffset += 32;\n    }\n  }\n\n","sourceOld":"  public static void decode15(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 15;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      int intValue12 = compressedBuffer.get();\n      int intValue13 = compressedBuffer.get();\n      int intValue14 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = (intValue0 >>> 15) & mask;\n      output[2 + outputOffset] = ((intValue0 >>> 30) | (intValue1 << 2)) & mask;\n      output[3 + outputOffset] = (intValue1 >>> 13) & mask;\n      output[4 + outputOffset] = ((intValue1 >>> 28) | (intValue2 << 4)) & mask;\n      output[5 + outputOffset] = (intValue2 >>> 11) & mask;\n      output[6 + outputOffset] = ((intValue2 >>> 26) | (intValue3 << 6)) & mask;\n      output[7 + outputOffset] = (intValue3 >>> 9) & mask;\n      output[8 + outputOffset] = ((intValue3 >>> 24) | (intValue4 << 8)) & mask;\n      output[9 + outputOffset] = (intValue4 >>> 7) & mask;\n      output[10 + outputOffset] = ((intValue4 >>> 22) | (intValue5 << 10)) & mask;\n      output[11 + outputOffset] = (intValue5 >>> 5) & mask;\n      output[12 + outputOffset] = ((intValue5 >>> 20) | (intValue6 << 12)) & mask;\n      output[13 + outputOffset] = (intValue6 >>> 3) & mask;\n      output[14 + outputOffset] = ((intValue6 >>> 18) | (intValue7 << 14)) & mask;\n      output[15 + outputOffset] = (intValue7 >>> 1) & mask;\n      output[16 + outputOffset] = (intValue7 >>> 16) & mask;\n      output[17 + outputOffset] = ((intValue7 >>> 31) | (intValue8 << 1)) & mask;\n      output[18 + outputOffset] = (intValue8 >>> 14) & mask;\n      output[19 + outputOffset] = ((intValue8 >>> 29) | (intValue9 << 3)) & mask;\n      output[20 + outputOffset] = (intValue9 >>> 12) & mask;\n      output[21 + outputOffset] = ((intValue9 >>> 27) | (intValue10 << 5)) & mask;\n      output[22 + outputOffset] = (intValue10 >>> 10) & mask;\n      output[23 + outputOffset] = ((intValue10 >>> 25) | (intValue11 << 7)) & mask;\n      output[24 + outputOffset] = (intValue11 >>> 8) & mask;\n      output[25 + outputOffset] = ((intValue11 >>> 23) | (intValue12 << 9)) & mask;\n      output[26 + outputOffset] = (intValue12 >>> 6) & mask;\n      output[27 + outputOffset] = ((intValue12 >>> 21) | (intValue13 << 11)) & mask;\n      output[28 + outputOffset] = (intValue13 >>> 4) & mask;\n      output[29 + outputOffset] = ((intValue13 >>> 19) | (intValue14 << 13)) & mask;\n      output[30 + outputOffset] = (intValue14 >>> 2) & mask;\n      output[31 + outputOffset] = intValue14 >>> 17;\n      outputOffset += 32;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"824ab25acd22f2eca198755bafab3cb8b7878493":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["5373bc7574123da55ae25e216b6d768ccb1dcd91"],"5373bc7574123da55ae25e216b6d768ccb1dcd91":["824ab25acd22f2eca198755bafab3cb8b7878493"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"824ab25acd22f2eca198755bafab3cb8b7878493":["5373bc7574123da55ae25e216b6d768ccb1dcd91"],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":[],"5373bc7574123da55ae25e216b6d768ccb1dcd91":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["824ab25acd22f2eca198755bafab3cb8b7878493","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}