{"path":"lucene/misc/src/java/org/apache/lucene/index/sorter/EarlyTerminatingSortingCollector#getLeafCollector(LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/EarlyTerminatingSortingCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n    if (SortingMergePolicy.isSorted(context.reader(), sort)) {\n      // segment is sorted, can early-terminate\n      return new FilterLeafCollector(super.getLeafCollector(context)) {\n        private int numCollected;\n\n        @Override\n        public void collect(int doc) throws IOException {\n          super.collect(doc);\n          if (++numCollected >= numDocsToCollect) {\n            throw new CollectionTerminatedException();\n          }\n        }\n\n        @Override\n        public boolean acceptsDocsOutOfOrder() {\n          return false;\n        }\n\n      };\n    } else {\n      return super.getLeafCollector(context);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e","date":1419346542,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/search/EarlyTerminatingSortingCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/EarlyTerminatingSortingCollector#getLeafCollector(LeafReaderContext).mjava","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n    if (SortingMergePolicy.isSorted(context.reader(), sort)) {\n      // segment is sorted, can early-terminate\n      return new FilterLeafCollector(super.getLeafCollector(context)) {\n        private int numCollected;\n\n        @Override\n        public void collect(int doc) throws IOException {\n          super.collect(doc);\n          if (++numCollected >= numDocsToCollect) {\n            throw new CollectionTerminatedException();\n          }\n        }\n\n        @Override\n        public boolean acceptsDocsOutOfOrder() {\n          return false;\n        }\n\n      };\n    } else {\n      return super.getLeafCollector(context);\n    }\n  }\n\n","sourceOld":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n    if (SortingMergePolicy.isSorted(context.reader(), sort)) {\n      // segment is sorted, can early-terminate\n      return new FilterLeafCollector(super.getLeafCollector(context)) {\n        private int numCollected;\n\n        @Override\n        public void collect(int doc) throws IOException {\n          super.collect(doc);\n          if (++numCollected >= numDocsToCollect) {\n            throw new CollectionTerminatedException();\n          }\n        }\n\n        @Override\n        public boolean acceptsDocsOutOfOrder() {\n          return false;\n        }\n\n      };\n    } else {\n      return super.getLeafCollector(context);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}