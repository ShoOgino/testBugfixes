{"path":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#assertSchemaResource(String,String).mjava","commits":[{"id":"9cf81bc8c6e4078e236f0e38b3a2d0271854f207","date":1364832963,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#assertSchemaResource(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    cores.setPersistent(false);\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList responseValues = response.getValues();\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92a4da96826f502cf1a56a096929b37ce73e523a","date":1374584011,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#assertSchemaResource(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#assertSchemaResource(String,String).mjava","sourceNew":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList responseValues = response.getValues();\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n\n","sourceOld":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    cores.setPersistent(false);\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList responseValues = response.getValues();\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#assertSchemaResource(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#assertSchemaResource(String,String).mjava","sourceNew":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList responseValues = response.getValues();\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n\n","sourceOld":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    cores.setPersistent(false);\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList responseValues = response.getValues();\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#assertSchemaResource(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#assertSchemaResource(String,String).mjava","sourceNew":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList responseValues = response.getValues();\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n\n","sourceOld":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList responseValues = response.getValues();\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207","92a4da96826f502cf1a56a096929b37ce73e523a"],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"92a4da96826f502cf1a56a096929b37ce73e523a":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["92a4da96826f502cf1a56a096929b37ce73e523a"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","92a4da96826f502cf1a56a096929b37ce73e523a"],"92a4da96826f502cf1a56a096929b37ce73e523a":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}