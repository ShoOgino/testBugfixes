{"path":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#validateFooter(IndexInput).mjava","commits":[{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#validateFooter(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  private static void validateFooter(IndexInput in) throws IOException {\n    final int magic = in.readInt();\n    if (magic != FOOTER_MAGIC) {\n      throw new CorruptIndexException(\"codec footer mismatch: actual footer=\" + magic + \" vs expected footer=\" + FOOTER_MAGIC + \" (resource: \" + in + \")\");\n    }\n    \n    final int algorithmID = in.readInt();\n    if (algorithmID != 0) {\n      throw new CorruptIndexException(\"codec footer mismatch: unknown algorithmID: \" + algorithmID);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#validateFooter(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  private static void validateFooter(IndexInput in) throws IOException {\n    final int magic = in.readInt();\n    if (magic != FOOTER_MAGIC) {\n      throw new CorruptIndexException(\"codec footer mismatch: actual footer=\" + magic + \" vs expected footer=\" + FOOTER_MAGIC + \" (resource: \" + in + \")\");\n    }\n    \n    final int algorithmID = in.readInt();\n    if (algorithmID != 0) {\n      throw new CorruptIndexException(\"codec footer mismatch: unknown algorithmID: \" + algorithmID);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a70ce9bddc6f985feb8e5e182aebe20872328d4","date":1411172748,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#validateFooter(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#validateFooter(IndexInput).mjava","sourceNew":"  private static void validateFooter(IndexInput in) throws IOException {\n    final int magic = in.readInt();\n    if (magic != FOOTER_MAGIC) {\n      throw new CorruptIndexException(\"codec footer mismatch: actual footer=\" + magic + \" vs expected footer=\" + FOOTER_MAGIC, in);\n    }\n    \n    final int algorithmID = in.readInt();\n    if (algorithmID != 0) {\n      throw new CorruptIndexException(\"codec footer mismatch: unknown algorithmID: \" + algorithmID, in);\n    }\n  }\n\n","sourceOld":"  private static void validateFooter(IndexInput in) throws IOException {\n    final int magic = in.readInt();\n    if (magic != FOOTER_MAGIC) {\n      throw new CorruptIndexException(\"codec footer mismatch: actual footer=\" + magic + \" vs expected footer=\" + FOOTER_MAGIC + \" (resource: \" + in + \")\");\n    }\n    \n    final int algorithmID = in.readInt();\n    if (algorithmID != 0) {\n      throw new CorruptIndexException(\"codec footer mismatch: unknown algorithmID: \" + algorithmID);\n    }\n  }\n\n","bugFix":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"500867f0f15393f6b2c38c3366e414fccba04ed6","date":1411520390,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#validateFooter(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#validateFooter(IndexInput).mjava","sourceNew":"  private static void validateFooter(IndexInput in) throws IOException {\n    long remaining = in.length() - in.getFilePointer();\n    long expected = footerLength();\n    if (remaining < expected) {\n      throw new CorruptIndexException(\"misplaced codec footer (file truncated?): remaining=\" + remaining + \", expected=\" + expected, in);\n    } else if (remaining > expected) {\n      throw new CorruptIndexException(\"misplaced codec footer (file extended?): remaining=\" + remaining + \", expected=\" + expected, in);\n    }\n    \n    final int magic = in.readInt();\n    if (magic != FOOTER_MAGIC) {\n      throw new CorruptIndexException(\"codec footer mismatch: actual footer=\" + magic + \" vs expected footer=\" + FOOTER_MAGIC, in);\n    }\n    \n    final int algorithmID = in.readInt();\n    if (algorithmID != 0) {\n      throw new CorruptIndexException(\"codec footer mismatch: unknown algorithmID: \" + algorithmID, in);\n    }\n  }\n\n","sourceOld":"  private static void validateFooter(IndexInput in) throws IOException {\n    final int magic = in.readInt();\n    if (magic != FOOTER_MAGIC) {\n      throw new CorruptIndexException(\"codec footer mismatch: actual footer=\" + magic + \" vs expected footer=\" + FOOTER_MAGIC, in);\n    }\n    \n    final int algorithmID = in.readInt();\n    if (algorithmID != 0) {\n      throw new CorruptIndexException(\"codec footer mismatch: unknown algorithmID: \" + algorithmID, in);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5fb6ad70a2e6fbe8301d769ec20c62bfb345828c","date":1421377460,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#validateFooter(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#validateFooter(IndexInput).mjava","sourceNew":"  private static void validateFooter(IndexInput in) throws IOException {\n    long remaining = in.length() - in.getFilePointer();\n    long expected = footerLength();\n    if (remaining < expected) {\n      throw new CorruptIndexException(\"misplaced codec footer (file truncated?): remaining=\" + remaining + \", expected=\" + expected, in);\n    } else if (remaining > expected) {\n      throw new CorruptIndexException(\"misplaced codec footer (file extended?): remaining=\" + remaining + \", expected=\" + expected, in);\n    }\n    \n    final int magic = in.readInt();\n    if (magic != FOOTER_MAGIC) {\n      throw new CorruptIndexException(\"codec footer mismatch (file truncated?): actual footer=\" + magic + \" vs expected footer=\" + FOOTER_MAGIC, in);\n    }\n    \n    final int algorithmID = in.readInt();\n    if (algorithmID != 0) {\n      throw new CorruptIndexException(\"codec footer mismatch: unknown algorithmID: \" + algorithmID, in);\n    }\n  }\n\n","sourceOld":"  private static void validateFooter(IndexInput in) throws IOException {\n    long remaining = in.length() - in.getFilePointer();\n    long expected = footerLength();\n    if (remaining < expected) {\n      throw new CorruptIndexException(\"misplaced codec footer (file truncated?): remaining=\" + remaining + \", expected=\" + expected, in);\n    } else if (remaining > expected) {\n      throw new CorruptIndexException(\"misplaced codec footer (file extended?): remaining=\" + remaining + \", expected=\" + expected, in);\n    }\n    \n    final int magic = in.readInt();\n    if (magic != FOOTER_MAGIC) {\n      throw new CorruptIndexException(\"codec footer mismatch: actual footer=\" + magic + \" vs expected footer=\" + FOOTER_MAGIC, in);\n    }\n    \n    final int algorithmID = in.readInt();\n    if (algorithmID != 0) {\n      throw new CorruptIndexException(\"codec footer mismatch: unknown algorithmID: \" + algorithmID, in);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"950b7a6881d14da782b60444c11295e3ec50d41a","date":1458379095,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#validateFooter(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#validateFooter(IndexInput).mjava","sourceNew":"  private static void validateFooter(IndexInput in) throws IOException {\n    long remaining = in.length() - in.getFilePointer();\n    long expected = footerLength();\n    if (remaining < expected) {\n      throw new CorruptIndexException(\"misplaced codec footer (file truncated?): remaining=\" + remaining + \", expected=\" + expected + \", fp=\" + in.getFilePointer(), in);\n    } else if (remaining > expected) {\n      throw new CorruptIndexException(\"misplaced codec footer (file extended?): remaining=\" + remaining + \", expected=\" + expected + \", fp=\" + in.getFilePointer(), in);\n    }\n    \n    final int magic = in.readInt();\n    if (magic != FOOTER_MAGIC) {\n      throw new CorruptIndexException(\"codec footer mismatch (file truncated?): actual footer=\" + magic + \" vs expected footer=\" + FOOTER_MAGIC, in);\n    }\n    \n    final int algorithmID = in.readInt();\n    if (algorithmID != 0) {\n      throw new CorruptIndexException(\"codec footer mismatch: unknown algorithmID: \" + algorithmID, in);\n    }\n  }\n\n","sourceOld":"  private static void validateFooter(IndexInput in) throws IOException {\n    long remaining = in.length() - in.getFilePointer();\n    long expected = footerLength();\n    if (remaining < expected) {\n      throw new CorruptIndexException(\"misplaced codec footer (file truncated?): remaining=\" + remaining + \", expected=\" + expected, in);\n    } else if (remaining > expected) {\n      throw new CorruptIndexException(\"misplaced codec footer (file extended?): remaining=\" + remaining + \", expected=\" + expected, in);\n    }\n    \n    final int magic = in.readInt();\n    if (magic != FOOTER_MAGIC) {\n      throw new CorruptIndexException(\"codec footer mismatch (file truncated?): actual footer=\" + magic + \" vs expected footer=\" + FOOTER_MAGIC, in);\n    }\n    \n    final int algorithmID = in.readInt();\n    if (algorithmID != 0) {\n      throw new CorruptIndexException(\"codec footer mismatch: unknown algorithmID: \" + algorithmID, in);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"5fb6ad70a2e6fbe8301d769ec20c62bfb345828c":["500867f0f15393f6b2c38c3366e414fccba04ed6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"950b7a6881d14da782b60444c11295e3ec50d41a":["5fb6ad70a2e6fbe8301d769ec20c62bfb345828c"],"500867f0f15393f6b2c38c3366e414fccba04ed6":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["950b7a6881d14da782b60444c11295e3ec50d41a"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["500867f0f15393f6b2c38c3366e414fccba04ed6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"5fb6ad70a2e6fbe8301d769ec20c62bfb345828c":["950b7a6881d14da782b60444c11295e3ec50d41a"],"950b7a6881d14da782b60444c11295e3ec50d41a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"500867f0f15393f6b2c38c3366e414fccba04ed6":["5fb6ad70a2e6fbe8301d769ec20c62bfb345828c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}