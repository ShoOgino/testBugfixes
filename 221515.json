{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/DisjointSpatialFilter#DisjointSpatialFilter(SpatialStrategy,SpatialArgs,String).mjava","commits":[{"id":"50b84d7eef0fc32233dd6251567fdbdb10c4cda7","date":1365707213,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/DisjointSpatialFilter#DisjointSpatialFilter(SpatialStrategy,SpatialArgs,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   *\n   * @param strategy Needed to compute intersects\n   * @param args Used in spatial intersection\n   * @param field This field is used to determine which docs have spatial data via\n   *               {@link org.apache.lucene.search.FieldCache#getDocsWithField(org.apache.lucene.index.AtomicReader, String)}.\n   *              Passing null will assume all docs have spatial data.\n   */\n  public DisjointSpatialFilter(SpatialStrategy strategy, SpatialArgs args, String field) {\n    this.field = field;\n\n    // TODO consider making SpatialArgs cloneable\n    SpatialOperation origOp = args.getOperation();//copy so we can restore\n    args.setOperation(SpatialOperation.Intersects);//temporarily set to intersects\n    intersectsFilter = strategy.makeFilter(args);\n    args.setOperation(origOp);//restore so it looks like it was\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/DisjointSpatialFilter#DisjointSpatialFilter(SpatialStrategy,SpatialArgs,String).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/DisjointSpatialFilter#DisjointSpatialFilter(SpatialStrategy,SpatialArgs,String).mjava","sourceNew":"  /**\n   *\n   * @param strategy Needed to compute intersects\n   * @param args Used in spatial intersection\n   * @param field This field is used to determine which docs have spatial data via\n   *               {@link AtomicReader#getDocsWithField(String)}.\n   *              Passing null will assume all docs have spatial data.\n   */\n  public DisjointSpatialFilter(SpatialStrategy strategy, SpatialArgs args, String field) {\n    this.field = field;\n\n    // TODO consider making SpatialArgs cloneable\n    SpatialOperation origOp = args.getOperation();//copy so we can restore\n    args.setOperation(SpatialOperation.Intersects);//temporarily set to intersects\n    intersectsFilter = strategy.makeFilter(args);\n    args.setOperation(origOp);//restore so it looks like it was\n  }\n\n","sourceOld":"  /**\n   *\n   * @param strategy Needed to compute intersects\n   * @param args Used in spatial intersection\n   * @param field This field is used to determine which docs have spatial data via\n   *               {@link org.apache.lucene.search.FieldCache#getDocsWithField(org.apache.lucene.index.AtomicReader, String)}.\n   *              Passing null will assume all docs have spatial data.\n   */\n  public DisjointSpatialFilter(SpatialStrategy strategy, SpatialArgs args, String field) {\n    this.field = field;\n\n    // TODO consider making SpatialArgs cloneable\n    SpatialOperation origOp = args.getOperation();//copy so we can restore\n    args.setOperation(SpatialOperation.Intersects);//temporarily set to intersects\n    intersectsFilter = strategy.makeFilter(args);\n    args.setOperation(origOp);//restore so it looks like it was\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/DisjointSpatialFilter#DisjointSpatialFilter(SpatialStrategy,SpatialArgs,String).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/DisjointSpatialFilter#DisjointSpatialFilter(SpatialStrategy,SpatialArgs,String).mjava","sourceNew":"  /**\n   *\n   * @param strategy Needed to compute intersects\n   * @param args Used in spatial intersection\n   * @param field This field is used to determine which docs have spatial data via\n   *               {@link AtomicReader#getDocsWithField(String)}.\n   *              Passing null will assume all docs have spatial data.\n   */\n  public DisjointSpatialFilter(SpatialStrategy strategy, SpatialArgs args, String field) {\n    this.field = field;\n\n    // TODO consider making SpatialArgs cloneable\n    SpatialOperation origOp = args.getOperation();//copy so we can restore\n    args.setOperation(SpatialOperation.Intersects);//temporarily set to intersects\n    intersectsFilter = strategy.makeFilter(args);\n    args.setOperation(origOp);//restore so it looks like it was\n  }\n\n","sourceOld":"  /**\n   *\n   * @param strategy Needed to compute intersects\n   * @param args Used in spatial intersection\n   * @param field This field is used to determine which docs have spatial data via\n   *               {@link org.apache.lucene.search.FieldCache#getDocsWithField(org.apache.lucene.index.AtomicReader, String)}.\n   *              Passing null will assume all docs have spatial data.\n   */\n  public DisjointSpatialFilter(SpatialStrategy strategy, SpatialArgs args, String field) {\n    this.field = field;\n\n    // TODO consider making SpatialArgs cloneable\n    SpatialOperation origOp = args.getOperation();//copy so we can restore\n    args.setOperation(SpatialOperation.Intersects);//temporarily set to intersects\n    intersectsFilter = strategy.makeFilter(args);\n    args.setOperation(origOp);//restore so it looks like it was\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/DisjointSpatialFilter#DisjointSpatialFilter(SpatialStrategy,SpatialArgs,String).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/DisjointSpatialFilter#DisjointSpatialFilter(SpatialStrategy,SpatialArgs,String).mjava","sourceNew":"  /**\n   *\n   * @param strategy Needed to compute intersects\n   * @param args Used in spatial intersection\n   * @param field This field is used to determine which docs have spatial data via\n   *               {@link AtomicReader#getDocsWithField(String)}.\n   *              Passing null will assume all docs have spatial data.\n   */\n  public DisjointSpatialFilter(SpatialStrategy strategy, SpatialArgs args, String field) {\n    this.field = field;\n\n    // TODO consider making SpatialArgs cloneable\n    SpatialOperation origOp = args.getOperation();//copy so we can restore\n    args.setOperation(SpatialOperation.Intersects);//temporarily set to intersects\n    intersectsFilter = strategy.makeFilter(args);\n    args.setOperation(origOp);//restore so it looks like it was\n  }\n\n","sourceOld":"  /**\n   *\n   * @param strategy Needed to compute intersects\n   * @param args Used in spatial intersection\n   * @param field This field is used to determine which docs have spatial data via\n   *               {@link org.apache.lucene.search.FieldCache#getDocsWithField(org.apache.lucene.index.AtomicReader, String)}.\n   *              Passing null will assume all docs have spatial data.\n   */\n  public DisjointSpatialFilter(SpatialStrategy strategy, SpatialArgs args, String field) {\n    this.field = field;\n\n    // TODO consider making SpatialArgs cloneable\n    SpatialOperation origOp = args.getOperation();//copy so we can restore\n    args.setOperation(SpatialOperation.Intersects);//temporarily set to intersects\n    intersectsFilter = strategy.makeFilter(args);\n    args.setOperation(origOp);//restore so it looks like it was\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79f4baae2da134b5766bbbcba6d3b353ccd70304","date":1404748190,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/DisjointSpatialFilter#DisjointSpatialFilter(SpatialStrategy,SpatialArgs,String).mjava","sourceNew":null,"sourceOld":"  /**\n   *\n   * @param strategy Needed to compute intersects\n   * @param args Used in spatial intersection\n   * @param field This field is used to determine which docs have spatial data via\n   *               {@link AtomicReader#getDocsWithField(String)}.\n   *              Passing null will assume all docs have spatial data.\n   */\n  public DisjointSpatialFilter(SpatialStrategy strategy, SpatialArgs args, String field) {\n    this.field = field;\n\n    // TODO consider making SpatialArgs cloneable\n    SpatialOperation origOp = args.getOperation();//copy so we can restore\n    args.setOperation(SpatialOperation.Intersects);//temporarily set to intersects\n    intersectsFilter = strategy.makeFilter(args);\n    args.setOperation(origOp);//restore so it looks like it was\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"79f4baae2da134b5766bbbcba6d3b353ccd70304":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["50b84d7eef0fc32233dd6251567fdbdb10c4cda7","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["50b84d7eef0fc32233dd6251567fdbdb10c4cda7"],"56572ec06f1407c066d6b7399413178b33176cd8":["50b84d7eef0fc32233dd6251567fdbdb10c4cda7","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["79f4baae2da134b5766bbbcba6d3b353ccd70304"],"50b84d7eef0fc32233dd6251567fdbdb10c4cda7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"79f4baae2da134b5766bbbcba6d3b353ccd70304":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["79f4baae2da134b5766bbbcba6d3b353ccd70304","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["50b84d7eef0fc32233dd6251567fdbdb10c4cda7"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"50b84d7eef0fc32233dd6251567fdbdb10c4cda7":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}