{"path":"solr/core/src/java/org/apache/solr/cloud/DeleteReplicaCmd#validateReplicaAvailability(Slice,String,String,int).mjava","commits":[{"id":"073a74201a21520f4fc543c9f6d1d87c19a467b2","date":1472788663,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DeleteReplicaCmd#validateReplicaAvailability(Slice,String,String,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Validate if there is less replicas than requested to remove. Also error out if there is\n   * only one replica available\n   */\n  private void validateReplicaAvailability(Slice slice, String shard, String collectionName, int count) {\n    //If there is a specific shard passed, validate if there any or just 1 replica left\n    if (slice != null) {\n      Collection<Replica> allReplicasForShard = slice.getReplicas();\n      if (allReplicasForShard == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No replicas found  in shard/collection: \" +\n                shard + \"/\"  + collectionName);\n      }\n\n\n      if (allReplicasForShard.size() == 1) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There is only one replica available in shard/collection: \" +\n                shard + \"/\" + collectionName + \". Cannot delete that.\");\n      }\n\n      if (allReplicasForShard.size() <= count) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There are lesser num replicas requested to be deleted than are available in shard/collection : \" +\n                shard + \"/\"  + collectionName  + \" Requested: \"  + count + \" Available: \" + allReplicasForShard.size() + \".\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc8f206328a706450934717bec7ccc22ad166fc0","date":1473142172,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DeleteReplicaCmd#validateReplicaAvailability(Slice,String,String,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Validate if there is less replicas than requested to remove. Also error out if there is\n   * only one replica available\n   */\n  private void validateReplicaAvailability(Slice slice, String shard, String collectionName, int count) {\n    //If there is a specific shard passed, validate if there any or just 1 replica left\n    if (slice != null) {\n      Collection<Replica> allReplicasForShard = slice.getReplicas();\n      if (allReplicasForShard == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No replicas found  in shard/collection: \" +\n                shard + \"/\"  + collectionName);\n      }\n\n\n      if (allReplicasForShard.size() == 1) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There is only one replica available in shard/collection: \" +\n                shard + \"/\" + collectionName + \". Cannot delete that.\");\n      }\n\n      if (allReplicasForShard.size() <= count) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There are lesser num replicas requested to be deleted than are available in shard/collection : \" +\n                shard + \"/\"  + collectionName  + \" Requested: \"  + count + \" Available: \" + allReplicasForShard.size() + \".\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DeleteReplicaCmd#validateReplicaAvailability(Slice,String,String,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Validate if there is less replicas than requested to remove. Also error out if there is\n   * only one replica available\n   */\n  private void validateReplicaAvailability(Slice slice, String shard, String collectionName, int count) {\n    //If there is a specific shard passed, validate if there any or just 1 replica left\n    if (slice != null) {\n      Collection<Replica> allReplicasForShard = slice.getReplicas();\n      if (allReplicasForShard == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No replicas found  in shard/collection: \" +\n                shard + \"/\"  + collectionName);\n      }\n\n\n      if (allReplicasForShard.size() == 1) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There is only one replica available in shard/collection: \" +\n                shard + \"/\" + collectionName + \". Cannot delete that.\");\n      }\n\n      if (allReplicasForShard.size() <= count) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There are lesser num replicas requested to be deleted than are available in shard/collection : \" +\n                shard + \"/\"  + collectionName  + \" Requested: \"  + count + \" Available: \" + allReplicasForShard.size() + \".\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DeleteReplicaCmd#validateReplicaAvailability(Slice,String,String,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Validate if there is less replicas than requested to remove. Also error out if there is\n   * only one replica available\n   */\n  private void validateReplicaAvailability(Slice slice, String shard, String collectionName, int count) {\n    //If there is a specific shard passed, validate if there any or just 1 replica left\n    if (slice != null) {\n      Collection<Replica> allReplicasForShard = slice.getReplicas();\n      if (allReplicasForShard == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No replicas found  in shard/collection: \" +\n                shard + \"/\"  + collectionName);\n      }\n\n\n      if (allReplicasForShard.size() == 1) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There is only one replica available in shard/collection: \" +\n                shard + \"/\" + collectionName + \". Cannot delete that.\");\n      }\n\n      if (allReplicasForShard.size() <= count) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There are lesser num replicas requested to be deleted than are available in shard/collection : \" +\n                shard + \"/\"  + collectionName  + \" Requested: \"  + count + \" Available: \" + allReplicasForShard.size() + \".\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/DeleteReplicaCmd#validateReplicaAvailability(Slice,String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DeleteReplicaCmd#validateReplicaAvailability(Slice,String,String,int).mjava","sourceNew":"  /**\n   * Validate if there is less replicas than requested to remove. Also error out if there is\n   * only one replica available\n   */\n  private void validateReplicaAvailability(Slice slice, String shard, String collectionName, int count) {\n    //If there is a specific shard passed, validate if there any or just 1 replica left\n    if (slice != null) {\n      Collection<Replica> allReplicasForShard = slice.getReplicas();\n      if (allReplicasForShard == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No replicas found  in shard/collection: \" +\n                shard + \"/\"  + collectionName);\n      }\n\n\n      if (allReplicasForShard.size() == 1) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There is only one replica available in shard/collection: \" +\n                shard + \"/\" + collectionName + \". Cannot delete that.\");\n      }\n\n      if (allReplicasForShard.size() <= count) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There are lesser num replicas requested to be deleted than are available in shard/collection : \" +\n                shard + \"/\"  + collectionName  + \" Requested: \"  + count + \" Available: \" + allReplicasForShard.size() + \".\");\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Validate if there is less replicas than requested to remove. Also error out if there is\n   * only one replica available\n   */\n  private void validateReplicaAvailability(Slice slice, String shard, String collectionName, int count) {\n    //If there is a specific shard passed, validate if there any or just 1 replica left\n    if (slice != null) {\n      Collection<Replica> allReplicasForShard = slice.getReplicas();\n      if (allReplicasForShard == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No replicas found  in shard/collection: \" +\n                shard + \"/\"  + collectionName);\n      }\n\n\n      if (allReplicasForShard.size() == 1) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There is only one replica available in shard/collection: \" +\n                shard + \"/\" + collectionName + \". Cannot delete that.\");\n      }\n\n      if (allReplicasForShard.size() <= count) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There are lesser num replicas requested to be deleted than are available in shard/collection : \" +\n                shard + \"/\"  + collectionName  + \" Requested: \"  + count + \" Available: \" + allReplicasForShard.size() + \".\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/DeleteReplicaCmd#validateReplicaAvailability(Slice,String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DeleteReplicaCmd#validateReplicaAvailability(Slice,String,String,int).mjava","sourceNew":"  /**\n   * Validate if there is less replicas than requested to remove. Also error out if there is\n   * only one replica available\n   */\n  private void validateReplicaAvailability(Slice slice, String shard, String collectionName, int count) {\n    //If there is a specific shard passed, validate if there any or just 1 replica left\n    if (slice != null) {\n      Collection<Replica> allReplicasForShard = slice.getReplicas();\n      if (allReplicasForShard == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No replicas found  in shard/collection: \" +\n                shard + \"/\"  + collectionName);\n      }\n\n\n      if (allReplicasForShard.size() == 1) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There is only one replica available in shard/collection: \" +\n                shard + \"/\" + collectionName + \". Cannot delete that.\");\n      }\n\n      if (allReplicasForShard.size() <= count) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There are lesser num replicas requested to be deleted than are available in shard/collection : \" +\n                shard + \"/\"  + collectionName  + \" Requested: \"  + count + \" Available: \" + allReplicasForShard.size() + \".\");\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Validate if there is less replicas than requested to remove. Also error out if there is\n   * only one replica available\n   */\n  private void validateReplicaAvailability(Slice slice, String shard, String collectionName, int count) {\n    //If there is a specific shard passed, validate if there any or just 1 replica left\n    if (slice != null) {\n      Collection<Replica> allReplicasForShard = slice.getReplicas();\n      if (allReplicasForShard == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No replicas found  in shard/collection: \" +\n                shard + \"/\"  + collectionName);\n      }\n\n\n      if (allReplicasForShard.size() == 1) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There is only one replica available in shard/collection: \" +\n                shard + \"/\" + collectionName + \". Cannot delete that.\");\n      }\n\n      if (allReplicasForShard.size() <= count) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"There are lesser num replicas requested to be deleted than are available in shard/collection : \" +\n                shard + \"/\"  + collectionName  + \" Requested: \"  + count + \" Available: \" + allReplicasForShard.size() + \".\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"073a74201a21520f4fc543c9f6d1d87c19a467b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b94236357aaa22b76c10629851fe4e376e0cea82":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","073a74201a21520f4fc543c9f6d1d87c19a467b2"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"bc8f206328a706450934717bec7ccc22ad166fc0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","073a74201a21520f4fc543c9f6d1d87c19a467b2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"073a74201a21520f4fc543c9f6d1d87c19a467b2":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","bc8f206328a706450934717bec7ccc22ad166fc0"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["073a74201a21520f4fc543c9f6d1d87c19a467b2","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","bc8f206328a706450934717bec7ccc22ad166fc0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"bc8f206328a706450934717bec7ccc22ad166fc0":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bc8f206328a706450934717bec7ccc22ad166fc0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}