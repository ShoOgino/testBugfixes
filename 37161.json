{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader#checkValidFormat(IndexInput).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader#checkValidFormat(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader#checkValidFormat(IndexInput).mjava","sourceNew":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format < FORMAT_MINIMUM)\n      throw new IndexFormatTooOldException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    if (format > FORMAT_CURRENT)\n      throw new IndexFormatTooNewException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    return format;\n  }\n\n","sourceOld":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format < FORMAT_MINIMUM)\n      throw new IndexFormatTooOldException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    if (format > FORMAT_CURRENT)\n      throw new IndexFormatTooNewException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    return format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32e43f282bea25b8cc26e4a842d98deafd617e9b","date":1337759516,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader#checkValidFormat(IndexInput).mjava","sourceNew":null,"sourceOld":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format < FORMAT_MINIMUM)\n      throw new IndexFormatTooOldException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    if (format > FORMAT_CURRENT)\n      throw new IndexFormatTooNewException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    return format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3599646b4d4c346cf74d334813488b8b337b5bf5","date":1337790261,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader#checkValidFormat(IndexInput).mjava","sourceNew":null,"sourceOld":"  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException\n  {\n    int format = in.readInt();\n    if (format < FORMAT_MINIMUM)\n      throw new IndexFormatTooOldException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    if (format > FORMAT_CURRENT)\n      throw new IndexFormatTooNewException(in, format, FORMAT_MINIMUM, FORMAT_CURRENT);\n    return format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3599646b4d4c346cf74d334813488b8b337b5bf5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","32e43f282bea25b8cc26e4a842d98deafd617e9b"],"32e43f282bea25b8cc26e4a842d98deafd617e9b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["32e43f282bea25b8cc26e4a842d98deafd617e9b"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3599646b4d4c346cf74d334813488b8b337b5bf5","32e43f282bea25b8cc26e4a842d98deafd617e9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3599646b4d4c346cf74d334813488b8b337b5bf5":[],"32e43f282bea25b8cc26e4a842d98deafd617e9b":["3599646b4d4c346cf74d334813488b8b337b5bf5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3599646b4d4c346cf74d334813488b8b337b5bf5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}