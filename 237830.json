{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/AbstractAccountHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/AbstractAccountHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/AbstractAccountHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n      try{  \n            this.authenticated = authenticateAccount(request,\n                AccountRole.USERADMINISTRATOR);\n        \n        if (this.authenticated) {\n            GDataServerRegistry registry = GDataServerRegistry.getRegistry();\n            ServiceFactory factory = registry.lookup(ServiceFactory.class,\n                    ComponentType.SERVICEFACTORY);\n            try {\n\n                GDataAccount account = getAccountFromRequest(request);\n                if (!account.requiredValuesSet()) {\n                    setError(GDataResponse.SERVER_ERROR,\n                            \"Required server component not available\");\n                    throw new AccountHandlerException(\n                            \"Required values are not set -- account can not be saved -- \"\n                                    + account);\n                }\n                this.service = factory.getAdminService();\n                processServiceAction(account);\n            } catch (ServiceException e) {\n                LOG.error(\"Can't process account action -- \" + e.getMessage(),\n                        e);\n                setError(e.getErrorCode(), \"\");\n            } \n            catch (AccountHandlerException e) {\n                LOG.error(\"Can't process account action -- \" + e.getMessage(),\n                        e);\n            }\n        }else{\n            setError(GDataResponse.UNAUTHORIZED,\"Authorization failed\");\n        }\n        sendResponse(response);\n      }finally{\n          if(this.service!=null)\n              this.service.close();\n      }\n\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n      try{  \n            this.authenticated = authenticateAccount(request,\n                AccountRole.USERADMINISTRATOR);\n        \n        if (this.authenticated) {\n            GDataServerRegistry registry = GDataServerRegistry.getRegistry();\n            ServiceFactory factory = registry.lookup(ServiceFactory.class,\n                    ComponentType.SERVICEFACTORY);\n            try {\n\n                GDataAccount account = getAccountFromRequest(request);\n                if (!account.requiredValuesSet()) {\n                    setError(GDataResponse.SERVER_ERROR,\n                            \"Required server component not available\");\n                    throw new AccountHandlerException(\n                            \"Required values are not set -- account can not be saved -- \"\n                                    + account);\n                }\n                this.service = factory.getAdminService();\n                processServiceAction(account);\n            } catch (ServiceException e) {\n                LOG.error(\"Can't process account action -- \" + e.getMessage(),\n                        e);\n                setError(e.getErrorCode(), \"\");\n            } \n            catch (AccountHandlerException e) {\n                LOG.error(\"Can't process account action -- \" + e.getMessage(),\n                        e);\n            }\n        }else{\n            setError(GDataResponse.UNAUTHORIZED,\"Authorization failed\");\n        }\n        sendResponse(response);\n      }finally{\n          if(this.service!=null)\n              this.service.close();\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/servlet/handler/AbstractAccountHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/AbstractAccountHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n      try{  \n            this.authenticated = authenticateAccount(request,\n                AccountRole.USERADMINISTRATOR);\n        \n        if (this.authenticated) {\n            GDataServerRegistry registry = GDataServerRegistry.getRegistry();\n            ServiceFactory factory = registry.lookup(ServiceFactory.class,\n                    ComponentType.SERVICEFACTORY);\n            try {\n\n                GDataAccount account = getAccountFromRequest(request);\n                if (!account.requiredValuesSet()) {\n                    setError(GDataResponse.SERVER_ERROR,\n                            \"Required server component not available\");\n                    throw new AccountHandlerException(\n                            \"Required values are not set -- account can not be saved -- \"\n                                    + account);\n                }\n                this.service = factory.getAdminService();\n                processServiceAction(account);\n            } catch (ServiceException e) {\n                LOG.error(\"Can't process account action -- \" + e.getMessage(),\n                        e);\n                setError(e.getErrorCode(), \"\");\n            } \n            catch (AccountHandlerException e) {\n                LOG.error(\"Can't process account action -- \" + e.getMessage(),\n                        e);\n            }\n        }else{\n            setError(GDataResponse.UNAUTHORIZED,\"Authorization failed\");\n        }\n        sendResponse(response);\n      }finally{\n          if(this.service!=null)\n              this.service.close();\n      }\n\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.GDataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @SuppressWarnings(\"unused\")\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws ServletException, IOException {\n      try{  \n            this.authenticated = authenticateAccount(request,\n                AccountRole.USERADMINISTRATOR);\n        \n        if (this.authenticated) {\n            GDataServerRegistry registry = GDataServerRegistry.getRegistry();\n            ServiceFactory factory = registry.lookup(ServiceFactory.class,\n                    ComponentType.SERVICEFACTORY);\n            try {\n\n                GDataAccount account = getAccountFromRequest(request);\n                if (!account.requiredValuesSet()) {\n                    setError(GDataResponse.SERVER_ERROR,\n                            \"Required server component not available\");\n                    throw new AccountHandlerException(\n                            \"Required values are not set -- account can not be saved -- \"\n                                    + account);\n                }\n                this.service = factory.getAdminService();\n                processServiceAction(account);\n            } catch (ServiceException e) {\n                LOG.error(\"Can't process account action -- \" + e.getMessage(),\n                        e);\n                setError(e.getErrorCode(), \"\");\n            } \n            catch (AccountHandlerException e) {\n                LOG.error(\"Can't process account action -- \" + e.getMessage(),\n                        e);\n            }\n        }else{\n            setError(GDataResponse.UNAUTHORIZED,\"Authorization failed\");\n        }\n        sendResponse(response);\n      }finally{\n          if(this.service!=null)\n              this.service.close();\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}