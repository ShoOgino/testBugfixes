{"path":"src/java/org/apache/solr/util/AbstractSolrTestCase#checkUpdateU(String,String,boolean).mjava","commits":[{"id":"335d5ef4d54c2861b4ebdc7244bd81278f1c1d22","date":1177887783,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/AbstractSolrTestCase#checkUpdateU(String,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Checks the success or failure of an update message\n   */\n  private void checkUpdateU(String message, String update, boolean shouldSucceed) {\n    try {\n      String m = (null == message) ? \"\" : message + \" \";\n      if (shouldSucceed) {\n           String res = h.validateUpdate(update);\n         if (res != null) fail(m + \"update was not successful: \" + res);\n      } else {\n           String res = h.validateErrorUpdate(update);\n         if (res != null) fail(m + \"update succeeded, but should have failed: \" + res);        \n      }\n    } catch (SAXException e) {\n      throw new RuntimeException(\"Invalid XML\", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/AbstractSolrTestCase#checkUpdateU(String,String,boolean).mjava","pathOld":"src/java/org/apache/solr/util/AbstractSolrTestCase#checkUpdateU(String,String,boolean).mjava","sourceNew":"  /** Checks the success or failure of an update message\n   */\n  private void checkUpdateU(String message, String update, boolean shouldSucceed) {\n    try {\n      String m = (null == message) ? \"\" : message + \" \";\n      if (shouldSucceed) {\n           String res = h.validateUpdate(update);\n         if (res != null) fail(m + \"update was not successful: \" + res);\n      } else {\n           String res = h.validateErrorUpdate(update);\n         if (res != null) fail(m + \"update succeeded, but should have failed: \" + res);        \n      }\n    } catch (SAXException e) {\n      throw new RuntimeException(\"Invalid XML\", e);\n    }\n  }\n\n","sourceOld":"  /** Checks the success or failure of an update message\n   */\n  private void checkUpdateU(String message, String update, boolean shouldSucceed) {\n    try {\n      String m = (null == message) ? \"\" : message + \" \";\n      if (shouldSucceed) {\n           String res = h.validateUpdate(update);\n         if (res != null) fail(m + \"update was not successful: \" + res);\n      } else {\n           String res = h.validateErrorUpdate(update);\n         if (res != null) fail(m + \"update succeeded, but should have failed: \" + res);        \n      }\n    } catch (SAXException e) {\n      throw new RuntimeException(\"Invalid XML\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["335d5ef4d54c2861b4ebdc7244bd81278f1c1d22"],"335d5ef4d54c2861b4ebdc7244bd81278f1c1d22":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["335d5ef4d54c2861b4ebdc7244bd81278f1c1d22"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"335d5ef4d54c2861b4ebdc7244bd81278f1c1d22":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}