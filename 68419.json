{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","sourceNew":"  private void messageState() throws IOException {\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"\\ndir=\" + directory + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Constants.LUCENE_VERSION + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","sourceOld":"  private void messageState() throws IOException {\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"\\ndir=\" + directory + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Constants.LUCENE_VERSION + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","sourceNew":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"\\ndir=\" + directory + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Constants.LUCENE_VERSION + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","sourceOld":"  private void messageState() throws IOException {\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"\\ndir=\" + directory + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Constants.LUCENE_VERSION + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","bugFix":["01e5948db9a07144112d2f08f28ca2e3cd880348"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","sourceNew":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"\\ndir=\" + directory + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Constants.LUCENE_VERSION + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","sourceOld":"  private void messageState() throws IOException {\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"\\ndir=\" + directory + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Constants.LUCENE_VERSION + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e1e55b47fe417e794220e738ba7c93fdbb46fc8","date":1401731755,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","sourceNew":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\") && didMessageState == false) {\n      didMessageState = true;\n      infoStream.message(\"IW\", \"\\ndir=\" + directory + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Constants.LUCENE_VERSION + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","sourceOld":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"\\ndir=\" + directory + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Constants.LUCENE_VERSION + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"057a1793765d068ea9302f1a29e21734ee58d41e","date":1408130117,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","sourceNew":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\") && didMessageState == false) {\n      didMessageState = true;\n      infoStream.message(\"IW\", \"\\ndir=\" + directory + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Version.LATEST.toString() + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","sourceOld":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\") && didMessageState == false) {\n      didMessageState = true;\n      infoStream.message(\"IW\", \"\\ndir=\" + directory + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Constants.LUCENE_VERSION + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"618635065f043788c9e034f96ca5cd5cea1b4592","date":1433442044,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","sourceNew":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\") && didMessageState == false) {\n      didMessageState = true;\n      infoStream.message(\"IW\", \"\\ndir=\" + directoryOrig + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Version.LATEST.toString() + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","sourceOld":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\") && didMessageState == false) {\n      didMessageState = true;\n      infoStream.message(\"IW\", \"\\ndir=\" + directory + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Version.LATEST.toString() + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6309b5a4932adcf01248d8abceb6000910e4ba70","date":1447342019,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","sourceNew":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\") && didMessageState == false) {\n      didMessageState = true;\n      infoStream.message(\"IW\", \"\\ndir=\" + directoryOrig + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Version.LATEST.toString() + \"\\n\" +\n            config.toString());\n      infoStream.message(\"IW\", \"MMapDirectory.UNMAP_SUPPORTED=\" + MMapDirectory.UNMAP_SUPPORTED);\n    }\n  }\n\n","sourceOld":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\") && didMessageState == false) {\n      didMessageState = true;\n      infoStream.message(\"IW\", \"\\ndir=\" + directoryOrig + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Version.LATEST.toString() + \"\\n\" +\n            config.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb6c879a87683d96d7dee96cdded91f47f462412","date":1455562659,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#messageState().mjava","sourceNew":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\") && didMessageState == false) {\n      didMessageState = true;\n      infoStream.message(\"IW\", \"\\ndir=\" + directoryOrig + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Version.LATEST.toString() + \"\\n\" +\n            config.toString());\n      final StringBuilder unmapInfo = new StringBuilder(Boolean.toString(MMapDirectory.UNMAP_SUPPORTED));\n      if (!MMapDirectory.UNMAP_SUPPORTED) {\n        unmapInfo.append(\" (\").append(MMapDirectory.UNMAP_NOT_SUPPORTED_REASON).append(\")\");\n      }\n      infoStream.message(\"IW\", \"MMapDirectory.UNMAP_SUPPORTED=\" + unmapInfo);\n    }\n  }\n\n","sourceOld":"  private void messageState() {\n    if (infoStream.isEnabled(\"IW\") && didMessageState == false) {\n      didMessageState = true;\n      infoStream.message(\"IW\", \"\\ndir=\" + directoryOrig + \"\\n\" +\n            \"index=\" + segString() + \"\\n\" +\n            \"version=\" + Version.LATEST.toString() + \"\\n\" +\n            config.toString());\n      infoStream.message(\"IW\", \"MMapDirectory.UNMAP_SUPPORTED=\" + MMapDirectory.UNMAP_SUPPORTED);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"618635065f043788c9e034f96ca5cd5cea1b4592":["057a1793765d068ea9302f1a29e21734ee58d41e"],"cb6c879a87683d96d7dee96cdded91f47f462412":["6309b5a4932adcf01248d8abceb6000910e4ba70"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6309b5a4932adcf01248d8abceb6000910e4ba70":["618635065f043788c9e034f96ca5cd5cea1b4592"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"057a1793765d068ea9302f1a29e21734ee58d41e":["2e1e55b47fe417e794220e738ba7c93fdbb46fc8"],"2e1e55b47fe417e794220e738ba7c93fdbb46fc8":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cb6c879a87683d96d7dee96cdded91f47f462412"]},"commit2Childs":{"618635065f043788c9e034f96ca5cd5cea1b4592":["6309b5a4932adcf01248d8abceb6000910e4ba70"],"cb6c879a87683d96d7dee96cdded91f47f462412":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6309b5a4932adcf01248d8abceb6000910e4ba70":["cb6c879a87683d96d7dee96cdded91f47f462412"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2e1e55b47fe417e794220e738ba7c93fdbb46fc8"],"057a1793765d068ea9302f1a29e21734ee58d41e":["618635065f043788c9e034f96ca5cd5cea1b4592"],"2e1e55b47fe417e794220e738ba7c93fdbb46fc8":["057a1793765d068ea9302f1a29e21734ee58d41e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}