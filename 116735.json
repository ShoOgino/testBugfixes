{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolver resolver = new VariableResolver();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8b8de6920954704c456d12a43f75d7bfdd33c5c6","date":1353433257,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\", Locale.ROOT);\n    Date now = format.parse(format.format(new Date()));\n\n    Map<String,Object> row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolver resolver = new VariableResolver();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolver resolver = new VariableResolver();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\", Locale.ROOT);\n    Date now = format.parse(format.format(new Date()));\n\n    Map<String,Object> row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolver resolver = new VariableResolver();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List<Map<String, String>> fields = new ArrayList<>();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\", Locale.ROOT);\n    Date now = format.parse(format.format(new Date()));\n\n    Map<String,Object> row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolver resolver = new VariableResolver();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\", Locale.ROOT);\n    Date now = format.parse(format.format(new Date()));\n\n    Map<String,Object> row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolver resolver = new VariableResolver();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ec93834386bed35d2664923b0cc98cf7e36168a4","date":1403021418,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List<Map<String, String>> fields = new ArrayList<>();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"${xyz.myDateFormat}\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\", Locale.ROOT);\n    Date now = format.parse(format.format(new Date()));\n\n    Map<String,Object> row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolver resolver = new VariableResolver();\n    resolver.addNamespace(\"e\", row);\n    resolver.addNamespace(\"xyz\", createMap(\"myDateFormat\", \"MM/dd/yyyy\"));\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List<Map<String, String>> fields = new ArrayList<>();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\", Locale.ROOT);\n    Date now = format.parse(format.format(new Date()));\n\n    Map<String,Object> row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolver resolver = new VariableResolver();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","bugFix":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List<Map<String, String>> fields = new ArrayList<>();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"${xyz.myDateFormat}\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\", Locale.ROOT);\n    Date now = format.parse(format.format(new Date()));\n\n    Map<String,Object> row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolver resolver = new VariableResolver();\n    resolver.addNamespace(\"e\", row);\n    resolver.addNamespace(\"xyz\", createMap(\"myDateFormat\", \"MM/dd/yyyy\"));\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List<Map<String, String>> fields = new ArrayList<>();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\", Locale.ROOT);\n    Date now = format.parse(format.format(new Date()));\n\n    Map<String,Object> row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolver resolver = new VariableResolver();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","sourceNew":null,"sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List<Map<String, String>> fields = new ArrayList<>();\n    fields.add(createMap(DataImporter.COLUMN, \"lastModified\"));\n    fields.add(createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"${xyz.myDateFormat}\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\", Locale.ROOT);\n    Date now = format.parse(format.format(new Date()));\n\n    Map<String,Object> row = createMap(\"lastModified\", format.format(now));\n\n    VariableResolver resolver = new VariableResolver();\n    resolver.addNamespace(\"e\", row);\n    resolver.addNamespace(\"xyz\", createMap(\"myDateFormat\", \"MM/dd/yyyy\"));\n\n    Context context = getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["8b8de6920954704c456d12a43f75d7bfdd33c5c6"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["ec93834386bed35d2664923b0cc98cf7e36168a4"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","ec93834386bed35d2664923b0cc98cf7e36168a4"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["c26f00b574427b55127e869b935845554afde1fa","8b8de6920954704c456d12a43f75d7bfdd33c5c6"],"ec93834386bed35d2664923b0cc98cf7e36168a4":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"8b8de6920954704c456d12a43f75d7bfdd33c5c6":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","ec93834386bed35d2664923b0cc98cf7e36168a4"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["8b8de6920954704c456d12a43f75d7bfdd33c5c6"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"c26f00b574427b55127e869b935845554afde1fa":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"ec93834386bed35d2664923b0cc98cf7e36168a4":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","e57c73924f3b8c19defa62e96bfa34a4922d49c2"],"8b8de6920954704c456d12a43f75d7bfdd33c5c6":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}