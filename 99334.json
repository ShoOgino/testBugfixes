{"path":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/TurkishStemmer#r_postlude().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/TurkishStemmer#r_postlude().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/TurkishStemmer#r_postlude().mjava","sourceNew":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 455\n            // not, line 456\n            {\n                v_1 = cursor;\n                lab0: do {\n                    // (, line 456\n                    // call is_reserved_word, line 456\n                    if (!r_is_reserved_word())\n                    {\n                        break lab0;\n                    }\n                    return false;\n                } while (false);\n                cursor = v_1;\n            }\n            // backwards, line 457\n            limit_backward = cursor; cursor = limit;\n            // (, line 457\n            // do, line 458\n            v_2 = limit - cursor;\n            lab1: do {\n                // call append_U_to_stems_ending_with_d_or_g, line 458\n                if (!r_append_U_to_stems_ending_with_d_or_g())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = limit - v_2;\n            // do, line 459\n            v_3 = limit - cursor;\n            lab2: do {\n                // call post_process_last_consonants, line 459\n                if (!r_post_process_last_consonants())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","sourceOld":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 455\n            // not, line 456\n            {\n                v_1 = cursor;\n                lab0: do {\n                    // (, line 456\n                    // call is_reserved_word, line 456\n                    if (!r_is_reserved_word())\n                    {\n                        break lab0;\n                    }\n                    return false;\n                } while (false);\n                cursor = v_1;\n            }\n            // backwards, line 457\n            limit_backward = cursor; cursor = limit;\n            // (, line 457\n            // do, line 458\n            v_2 = limit - cursor;\n            lab1: do {\n                // call append_U_to_stems_ending_with_d_or_g, line 458\n                if (!r_append_U_to_stems_ending_with_d_or_g())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = limit - v_2;\n            // do, line 459\n            v_3 = limit - cursor;\n            lab2: do {\n                // call post_process_last_consonants, line 459\n                if (!r_post_process_last_consonants())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/TurkishStemmer#r_postlude().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/TurkishStemmer#r_postlude().mjava","sourceNew":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 455\n            // not, line 456\n            {\n                v_1 = cursor;\n                lab0: do {\n                    // (, line 456\n                    // call is_reserved_word, line 456\n                    if (!r_is_reserved_word())\n                    {\n                        break lab0;\n                    }\n                    return false;\n                } while (false);\n                cursor = v_1;\n            }\n            // backwards, line 457\n            limit_backward = cursor; cursor = limit;\n            // (, line 457\n            // do, line 458\n            v_2 = limit - cursor;\n            lab1: do {\n                // call append_U_to_stems_ending_with_d_or_g, line 458\n                if (!r_append_U_to_stems_ending_with_d_or_g())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = limit - v_2;\n            // do, line 459\n            v_3 = limit - cursor;\n            lab2: do {\n                // call post_process_last_consonants, line 459\n                if (!r_post_process_last_consonants())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","sourceOld":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 455\n            // not, line 456\n            {\n                v_1 = cursor;\n                lab0: do {\n                    // (, line 456\n                    // call is_reserved_word, line 456\n                    if (!r_is_reserved_word())\n                    {\n                        break lab0;\n                    }\n                    return false;\n                } while (false);\n                cursor = v_1;\n            }\n            // backwards, line 457\n            limit_backward = cursor; cursor = limit;\n            // (, line 457\n            // do, line 458\n            v_2 = limit - cursor;\n            lab1: do {\n                // call append_U_to_stems_ending_with_d_or_g, line 458\n                if (!r_append_U_to_stems_ending_with_d_or_g())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = limit - v_2;\n            // do, line 459\n            v_3 = limit - cursor;\n            lab2: do {\n                // call post_process_last_consonants, line 459\n                if (!r_post_process_last_consonants())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}