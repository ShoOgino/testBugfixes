{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemFilter#next().mjava","commits":[{"id":"838eb4e82b036bedc8730b5d97f5ae1d4a0d906b","date":1074593221,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemFilter#next().mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * @return  Returns the next token in the stream, or null at EOS\n\t */\n\tpublic final Token next()\n\t\tthrows IOException {\n\t\tif ( ( token = input.next() ) == null ) {\n\t\t\treturn null;\n\t\t}\n\t\t// Check the exclusiontable\n\t\telse if ( exclusions != null && exclusions.contains( token.termText() ) ) {\n\t\t\treturn token;\n\t\t}\n\t\telse {\n\t\t\tString s = stemmer.stem( token.termText() );\n\t\t\t// If not stemmed, dont waste the time creating a new token\n\t\t\tif ( !s.equals( token.termText() ) ) {\n\t\t\t\treturn new Token( s, 0, s.length(), token.type() );\n\t\t\t}\n\t\t\treturn token;\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1bd86591e4f30838994c2db59b0d4568b3f54049","date":1107180818,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemFilter#next().mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemFilter#next().mjava","sourceNew":"\t/**\n\t * @return  Returns the next token in the stream, or null at EOS\n\t */\n\tpublic final Token next()\n\t\tthrows IOException {\n\t\tif ( ( token = input.next() ) == null ) {\n\t\t\treturn null;\n\t\t}\n\t\t// Check the exclusiontable\n\t\telse if ( exclusions != null && exclusions.contains( token.termText() ) ) {\n\t\t\treturn token;\n\t\t}\n\t\telse {\n\t\t\tString s = stemmer.stem( token.termText() );\n\t\t\t// If not stemmed, dont waste the time creating a new token\n\t\t\tif ( !s.equals( token.termText() ) ) {\n\t\t\t   return new Token( s, token.startOffset(), token.endOffset(), token.type());\n\t\t\t}\n\t\t\treturn token;\n\t\t}\n\t}\n\n","sourceOld":"\t/**\n\t * @return  Returns the next token in the stream, or null at EOS\n\t */\n\tpublic final Token next()\n\t\tthrows IOException {\n\t\tif ( ( token = input.next() ) == null ) {\n\t\t\treturn null;\n\t\t}\n\t\t// Check the exclusiontable\n\t\telse if ( exclusions != null && exclusions.contains( token.termText() ) ) {\n\t\t\treturn token;\n\t\t}\n\t\telse {\n\t\t\tString s = stemmer.stem( token.termText() );\n\t\t\t// If not stemmed, dont waste the time creating a new token\n\t\t\tif ( !s.equals( token.termText() ) ) {\n\t\t\t\treturn new Token( s, 0, s.length(), token.type() );\n\t\t\t}\n\t\t\treturn token;\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemFilter#next().mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemFilter#next().mjava","sourceNew":"\t/**\n\t * @return  Returns the next token in the stream, or null at EOS\n\t */\n\tpublic final Token next()\n\t\tthrows IOException {\n\t\tif ( ( token = input.next() ) == null ) {\n\t\t\treturn null;\n\t\t}\n\t\t// Check the exclusiontable\n\t\telse if ( exclusions != null && exclusions.contains( token.termText() ) ) {\n\t\t\treturn token;\n\t\t}\n\t\telse {\n\t\t\tString s = stemmer.stem( token.termText() );\n\t\t\t// If not stemmed, dont waste the time creating a new token\n\t\t\tif ( !s.equals( token.termText() ) ) {\n\t\t\t   return new Token( s, token.startOffset(), token.endOffset(), token.type());\n\t\t\t}\n\t\t\treturn token;\n\t\t}\n\t}\n\n","sourceOld":"\t/**\n\t * @return  Returns the next token in the stream, or null at EOS\n\t */\n\tpublic final Token next()\n\t\tthrows IOException {\n\t\tif ( ( token = input.next() ) == null ) {\n\t\t\treturn null;\n\t\t}\n\t\t// Check the exclusiontable\n\t\telse if ( exclusions != null && exclusions.contains( token.termText() ) ) {\n\t\t\treturn token;\n\t\t}\n\t\telse {\n\t\t\tString s = stemmer.stem( token.termText() );\n\t\t\t// If not stemmed, dont waste the time creating a new token\n\t\t\tif ( !s.equals( token.termText() ) ) {\n\t\t\t   return new Token( s, token.startOffset(), token.endOffset(), token.type());\n\t\t\t}\n\t\t\treturn token;\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["1bd86591e4f30838994c2db59b0d4568b3f54049"],"838eb4e82b036bedc8730b5d97f5ae1d4a0d906b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1bd86591e4f30838994c2db59b0d4568b3f54049":["838eb4e82b036bedc8730b5d97f5ae1d4a0d906b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"838eb4e82b036bedc8730b5d97f5ae1d4a0d906b":["1bd86591e4f30838994c2db59b0d4568b3f54049"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["838eb4e82b036bedc8730b5d97f5ae1d4a0d906b"],"1bd86591e4f30838994c2db59b0d4568b3f54049":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}