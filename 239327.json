{"path":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","commits":[{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate() throws IOException\n    {\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n        \n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n  \n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              processor.processDelete( parseDelete() );\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n  \n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n          \n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n          \n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"baa723a66f51909657c89c07a455b3c15da9f761","date":1338908663,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","sourceNew":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate() throws IOException\n    {\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n        \n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n  \n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              handleDeleteCommand();\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n  \n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n          \n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n          \n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","sourceOld":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate() throws IOException\n    {\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n        \n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n  \n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              processor.processDelete( parseDelete() );\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n  \n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n          \n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n          \n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2336740b200d02b6a5fb18b70454dd9aa26f5b47","date":1407004842,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","sourceNew":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate() throws IOException\n    {\n      if(\"false\".equals( req.getParams().get(\"json.command\"))){\n        handleStreamingSingleDocs();\n        return;\n      }\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n        \n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n  \n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              handleDeleteCommand();\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n  \n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n          \n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n          \n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","sourceOld":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate() throws IOException\n    {\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n        \n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n  \n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              handleDeleteCommand();\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n  \n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n          \n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n          \n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"caf7f9acfdff984e59be68054cc1e0048b8ee030","date":1407766058,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","sourceNew":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate() throws IOException\n    {\n      if(\"false\".equals( req.getParams().get(\"json.command\"))){\n\n        String split = req.getParams().get(\"split\");\n        if(split != null){\n          handleSplitMode(split);\n        } else {\n          handleStreamingSingleDocs();\n        }\n        return;\n      }\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n        \n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n  \n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              handleDeleteCommand();\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n  \n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n          \n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n          \n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","sourceOld":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate() throws IOException\n    {\n      if(\"false\".equals( req.getParams().get(\"json.command\"))){\n        handleStreamingSingleDocs();\n        return;\n      }\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n        \n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n  \n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              handleDeleteCommand();\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n  \n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n          \n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n          \n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c47b98f9e0b212b7e9199de318865d94147c6afa","date":1409789791,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","sourceNew":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate() throws IOException\n    {\n      String path = (String) req.getContext().get(\"path\");\n      if(UpdateRequestHandler.DOC_PATH.equals(path) ||   \"false\".equals( req.getParams().get(\"json.command\"))){\n        String split = req.getParams().get(\"split\");\n        String[] f = req.getParams().getParams(\"f\");\n        handleSplitMode(split,f);\n        return;\n      }\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n        \n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n  \n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              handleDeleteCommand();\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n  \n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n          \n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n          \n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","sourceOld":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate() throws IOException\n    {\n      if(\"false\".equals( req.getParams().get(\"json.command\"))){\n\n        String split = req.getParams().get(\"split\");\n        if(split != null){\n          handleSplitMode(split);\n        } else {\n          handleStreamingSingleDocs();\n        }\n        return;\n      }\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n        \n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n  \n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              handleDeleteCommand();\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n  \n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n          \n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n          \n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab10d7c14ce9f8db61956611a57a5a377362a633","date":1413903184,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate(Reader).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","sourceNew":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate(Reader reader) throws IOException {\n      String path = (String) req.getContext().get(\"path\");\n      if(UpdateRequestHandler.DOC_PATH.equals(path) ||   \"false\".equals( req.getParams().get(\"json.command\"))){\n        String split = req.getParams().get(\"split\");\n        String[] f = req.getParams().getParams(\"f\");\n        handleSplitMode(split, f, reader);\n        return;\n      }\n      parser = new JSONParser(reader);\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n\n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n\n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              handleDeleteCommand();\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n\n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n\n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n\n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","sourceOld":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate() throws IOException\n    {\n      String path = (String) req.getContext().get(\"path\");\n      if(UpdateRequestHandler.DOC_PATH.equals(path) ||   \"false\".equals( req.getParams().get(\"json.command\"))){\n        String split = req.getParams().get(\"split\");\n        String[] f = req.getParams().getParams(\"f\");\n        handleSplitMode(split,f);\n        return;\n      }\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n        \n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n  \n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              handleDeleteCommand();\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n  \n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n          \n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n          \n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate(Reader).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#processUpdate().mjava","sourceNew":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate(Reader reader) throws IOException {\n      String path = (String) req.getContext().get(\"path\");\n      if(UpdateRequestHandler.DOC_PATH.equals(path) ||   \"false\".equals( req.getParams().get(\"json.command\"))){\n        String split = req.getParams().get(\"split\");\n        String[] f = req.getParams().getParams(\"f\");\n        handleSplitMode(split, f, reader);\n        return;\n      }\n      parser = new JSONParser(reader);\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n\n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n\n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              handleDeleteCommand();\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n\n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n\n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n\n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","sourceOld":"    @SuppressWarnings(\"fallthrough\")\n    void processUpdate() throws IOException\n    {\n      String path = (String) req.getContext().get(\"path\");\n      if(UpdateRequestHandler.DOC_PATH.equals(path) ||   \"false\".equals( req.getParams().get(\"json.command\"))){\n        String split = req.getParams().get(\"split\");\n        String[] f = req.getParams().getParams(\"f\");\n        handleSplitMode(split,f);\n        return;\n      }\n      int ev = parser.nextEvent();\n      while( ev != JSONParser.EOF ) {\n        \n        switch( ev )\n        {\n          case JSONParser.ARRAY_START:\n            handleAdds();\n            break;\n  \n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            String v = parser.getString();\n            if( v.equals( UpdateRequestHandler.ADD ) ) {\n              int ev2 = parser.nextEvent();\n              if (ev2 == JSONParser.OBJECT_START) {\n                processor.processAdd( parseAdd() );\n              } else if (ev2 == JSONParser.ARRAY_START) {\n                handleAdds();\n              } else {\n                assertEvent(ev2, JSONParser.OBJECT_START);\n              }\n            }\n            else if( v.equals( UpdateRequestHandler.COMMIT ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req,  false );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.OPTIMIZE ) ) {\n              CommitUpdateCommand cmd = new CommitUpdateCommand(req, true );\n              cmd.waitSearcher = true;\n              parseCommitOptions( cmd );\n              processor.processCommit( cmd );\n            }\n            else if( v.equals( UpdateRequestHandler.DELETE ) ) {\n              handleDeleteCommand();\n            }\n            else if( v.equals( UpdateRequestHandler.ROLLBACK ) ) {\n              processor.processRollback( parseRollback() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown command: \"+v+\" [\"+parser.getPosition()+\"]\" );\n            }\n            break;\n          }\n          // fall through\n  \n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n        case JSONParser.BOOLEAN:\n        case JSONParser.NULL:\n          log.info( \"can't have a value here! \"\n              +JSONParser.getEventString(ev)+\" \"+parser.getPosition() );\n          \n        case JSONParser.OBJECT_START:\n        case JSONParser.OBJECT_END:\n        case JSONParser.ARRAY_END:\n          break;\n          \n        default:\n          log.info(\"Noggit UNKNOWN_EVENT_ID:\"+ev);\n          break;\n        }\n        // read the next event\n        ev = parser.nextEvent();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2336740b200d02b6a5fb18b70454dd9aa26f5b47":["baa723a66f51909657c89c07a455b3c15da9f761"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["c47b98f9e0b212b7e9199de318865d94147c6afa","ab10d7c14ce9f8db61956611a57a5a377362a633"],"ab10d7c14ce9f8db61956611a57a5a377362a633":["c47b98f9e0b212b7e9199de318865d94147c6afa"],"042e4d934397657ba04c82b46cc5665076bc5c58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"baa723a66f51909657c89c07a455b3c15da9f761":["042e4d934397657ba04c82b46cc5665076bc5c58"],"c47b98f9e0b212b7e9199de318865d94147c6afa":["caf7f9acfdff984e59be68054cc1e0048b8ee030"],"caf7f9acfdff984e59be68054cc1e0048b8ee030":["2336740b200d02b6a5fb18b70454dd9aa26f5b47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ab10d7c14ce9f8db61956611a57a5a377362a633"]},"commit2Childs":{"2336740b200d02b6a5fb18b70454dd9aa26f5b47":["caf7f9acfdff984e59be68054cc1e0048b8ee030"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"ab10d7c14ce9f8db61956611a57a5a377362a633":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"042e4d934397657ba04c82b46cc5665076bc5c58":["baa723a66f51909657c89c07a455b3c15da9f761"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["042e4d934397657ba04c82b46cc5665076bc5c58"],"baa723a66f51909657c89c07a455b3c15da9f761":["2336740b200d02b6a5fb18b70454dd9aa26f5b47"],"c47b98f9e0b212b7e9199de318865d94147c6afa":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","ab10d7c14ce9f8db61956611a57a5a377362a633"],"caf7f9acfdff984e59be68054cc1e0048b8ee030":["c47b98f9e0b212b7e9199de318865d94147c6afa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}