{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","commits":[{"id":"f18d4e1cdc7330101ca433af5e8564dfd894f2bf","date":1379041877,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","pathOld":"/dev/null","sourceNew":"    // $ANTLR start \"EXPONENT\"\n    public final void mEXPONENT() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n            {\n            if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n                input.consume();\n            }\n            else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n            }\n\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:17: ( '+' | '-' )?\n            int alt14=2;\n            int LA14_0 = input.LA(1);\n\n            if ( (LA14_0=='+'||LA14_0=='-') ) {\n                alt14=1;\n            }\n            switch (alt14) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n\n\n                    }\n                    break;\n\n            }\n\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:28: ( DECIMALDIGIT )+\n            int cnt15=0;\n            loop15:\n            do {\n                int alt15=2;\n                int LA15_0 = input.LA(1);\n\n                if ( ((LA15_0 >= '0' && LA15_0 <= '9')) ) {\n                    alt15=1;\n                }\n\n\n                switch (alt15) {\n            \tcase 1 :\n            \t    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n            \t    {\n            \t    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n            \t        input.consume();\n            \t    }\n            \t    else {\n            \t        MismatchedSetException mse = new MismatchedSetException(null,input);\n            \t        recover(mse);\n            \t        throw mse;\n            \t    }\n\n\n            \t    }\n            \t    break;\n\n            \tdefault :\n            \t    if ( cnt15 >= 1 ) break loop15;\n                        EarlyExitException eee =\n                            new EarlyExitException(15, input);\n                        throw eee;\n                }\n                cnt15++;\n            } while (true);\n\n\n            }\n\n\n        }\n        finally {\n        \t// do for sure before leaving\n        }\n    }\n    // $ANTLR end \"EXPONENT\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3623d67605fbbdfce2fadea678e2f4bbe2ab2310","date":1379042933,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","sourceNew":"    // $ANTLR start \"EXPONENT\"\n    public final void mEXPONENT() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n            {\n            if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n                input.consume();\n            }\n            else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n            }\n\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:17: ( '+' | '-' )?\n            int alt14=2;\n            int LA14_0 = input.LA(1);\n\n            if ( (LA14_0=='+'||LA14_0=='-') ) {\n                alt14=1;\n            }\n            switch (alt14) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n\n\n                    }\n                    break;\n\n            }\n\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:28: ( DECIMALDIGIT )+\n            int cnt15=0;\n            loop15:\n            do {\n                int alt15=2;\n                int LA15_0 = input.LA(1);\n\n                if ( ((LA15_0 >= '0' && LA15_0 <= '9')) ) {\n                    alt15=1;\n                }\n\n\n                switch (alt15) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n\n\n                    }\n                    break;\n\n                default :\n                    if ( cnt15 >= 1 ) break loop15;\n                        EarlyExitException eee =\n                            new EarlyExitException(15, input);\n                        throw eee;\n                }\n                cnt15++;\n            } while (true);\n\n\n            }\n\n\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"EXPONENT\"\n\n","sourceOld":"    // $ANTLR start \"EXPONENT\"\n    public final void mEXPONENT() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n            {\n            if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n                input.consume();\n            }\n            else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n            }\n\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:17: ( '+' | '-' )?\n            int alt14=2;\n            int LA14_0 = input.LA(1);\n\n            if ( (LA14_0=='+'||LA14_0=='-') ) {\n                alt14=1;\n            }\n            switch (alt14) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n\n\n                    }\n                    break;\n\n            }\n\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:28: ( DECIMALDIGIT )+\n            int cnt15=0;\n            loop15:\n            do {\n                int alt15=2;\n                int LA15_0 = input.LA(1);\n\n                if ( ((LA15_0 >= '0' && LA15_0 <= '9')) ) {\n                    alt15=1;\n                }\n\n\n                switch (alt15) {\n            \tcase 1 :\n            \t    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n            \t    {\n            \t    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n            \t        input.consume();\n            \t    }\n            \t    else {\n            \t        MismatchedSetException mse = new MismatchedSetException(null,input);\n            \t        recover(mse);\n            \t        throw mse;\n            \t    }\n\n\n            \t    }\n            \t    break;\n\n            \tdefault :\n            \t    if ( cnt15 >= 1 ) break loop15;\n                        EarlyExitException eee =\n                            new EarlyExitException(15, input);\n                        throw eee;\n                }\n                cnt15++;\n            } while (true);\n\n\n            }\n\n\n        }\n        finally {\n        \t// do for sure before leaving\n        }\n    }\n    // $ANTLR end \"EXPONENT\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2","date":1379096281,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","sourceNew":"    // $ANTLR start \"EXPONENT\"\n    public final void mEXPONENT() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n            {\n            if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n                input.consume();\n            }\n            else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n            }\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:17: ( '+' | '-' )?\n            int alt14=2;\n            int LA14_0 = input.LA(1);\n            if ( (LA14_0=='+'||LA14_0=='-') ) {\n                alt14=1;\n            }\n            switch (alt14) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n                    }\n                    break;\n\n            }\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:28: ( DECIMALDIGIT )+\n            int cnt15=0;\n            loop15:\n            while (true) {\n                int alt15=2;\n                int LA15_0 = input.LA(1);\n                if ( ((LA15_0 >= '0' && LA15_0 <= '9')) ) {\n                    alt15=1;\n                }\n\n                switch (alt15) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n                    }\n                    break;\n\n                default :\n                    if ( cnt15 >= 1 ) break loop15;\n                    EarlyExitException eee = new EarlyExitException(15, input);\n                    throw eee;\n                }\n                cnt15++;\n            }\n\n            }\n\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"EXPONENT\"\n\n","sourceOld":"    // $ANTLR start \"EXPONENT\"\n    public final void mEXPONENT() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n            {\n            if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n                input.consume();\n            }\n            else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n            }\n\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:17: ( '+' | '-' )?\n            int alt14=2;\n            int LA14_0 = input.LA(1);\n\n            if ( (LA14_0=='+'||LA14_0=='-') ) {\n                alt14=1;\n            }\n            switch (alt14) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n\n\n                    }\n                    break;\n\n            }\n\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:28: ( DECIMALDIGIT )+\n            int cnt15=0;\n            loop15:\n            do {\n                int alt15=2;\n                int LA15_0 = input.LA(1);\n\n                if ( ((LA15_0 >= '0' && LA15_0 <= '9')) ) {\n                    alt15=1;\n                }\n\n\n                switch (alt15) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n\n\n                    }\n                    break;\n\n                default :\n                    if ( cnt15 >= 1 ) break loop15;\n                        EarlyExitException eee =\n                            new EarlyExitException(15, input);\n                        throw eee;\n                }\n                cnt15++;\n            } while (true);\n\n\n            }\n\n\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"EXPONENT\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1441eba4282a646ef88d12acb797483db37554e","date":1379096538,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","sourceNew":"  // $ANTLR start \"EXPONENT\"\n  public final void mEXPONENT() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n      {\n      if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n        input.consume();\n      }\n      else {\n        MismatchedSetException mse = new MismatchedSetException(null,input);\n        recover(mse);\n        throw mse;\n      }\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:17: ( '+' | '-' )?\n      int alt14=2;\n      int LA14_0 = input.LA(1);\n      if ( (LA14_0=='+'||LA14_0=='-') ) {\n        alt14=1;\n      }\n      switch (alt14) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n      }\n\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:28: ( DECIMALDIGIT )+\n      int cnt15=0;\n      loop15:\n      while (true) {\n        int alt15=2;\n        int LA15_0 = input.LA(1);\n        if ( ((LA15_0 >= '0' && LA15_0 <= '9')) ) {\n          alt15=1;\n        }\n\n        switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt15 >= 1 ) break loop15;\n          EarlyExitException eee = new EarlyExitException(15, input);\n          throw eee;\n        }\n        cnt15++;\n      }\n\n      }\n\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"EXPONENT\"\n\n","sourceOld":"    // $ANTLR start \"EXPONENT\"\n    public final void mEXPONENT() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n            {\n            if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n                input.consume();\n            }\n            else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n            }\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:17: ( '+' | '-' )?\n            int alt14=2;\n            int LA14_0 = input.LA(1);\n            if ( (LA14_0=='+'||LA14_0=='-') ) {\n                alt14=1;\n            }\n            switch (alt14) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n                    }\n                    break;\n\n            }\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:364:28: ( DECIMALDIGIT )+\n            int cnt15=0;\n            loop15:\n            while (true) {\n                int alt15=2;\n                int LA15_0 = input.LA(1);\n                if ( ((LA15_0 >= '0' && LA15_0 <= '9')) ) {\n                    alt15=1;\n                }\n\n                switch (alt15) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    {\n                    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                        input.consume();\n                    }\n                    else {\n                        MismatchedSetException mse = new MismatchedSetException(null,input);\n                        recover(mse);\n                        throw mse;\n                    }\n                    }\n                    break;\n\n                default :\n                    if ( cnt15 >= 1 ) break loop15;\n                    EarlyExitException eee = new EarlyExitException(15, input);\n                    throw eee;\n                }\n                cnt15++;\n            }\n\n            }\n\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"EXPONENT\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","pathOld":"/dev/null","sourceNew":"  // $ANTLR start \"EXPONENT\"\n  public final void mEXPONENT() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n      {\n      if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n        input.consume();\n      }\n      else {\n        MismatchedSetException mse = new MismatchedSetException(null,input);\n        recover(mse);\n        throw mse;\n      }\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:17: ( '+' | '-' )?\n      int alt14=2;\n      int LA14_0 = input.LA(1);\n      if ( (LA14_0=='+'||LA14_0=='-') ) {\n        alt14=1;\n      }\n      switch (alt14) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n      }\n\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:28: ( DECIMALDIGIT )+\n      int cnt15=0;\n      loop15:\n      while (true) {\n        int alt15=2;\n        int LA15_0 = input.LA(1);\n        if ( ((LA15_0 >= '0' && LA15_0 <= '9')) ) {\n          alt15=1;\n        }\n\n        switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt15 >= 1 ) break loop15;\n          EarlyExitException eee = new EarlyExitException(15, input);\n          throw eee;\n        }\n        cnt15++;\n      }\n\n      }\n\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"EXPONENT\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d639dc27b5b3eae561ef321b06f3cad9280c529","date":1383945027,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","sourceNew":"  // $ANTLR start \"EXPONENT\"\n  public final void mEXPONENT() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:369:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:369:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n      {\n      if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n        input.consume();\n      }\n      else {\n        MismatchedSetException mse = new MismatchedSetException(null,input);\n        recover(mse);\n        throw mse;\n      }\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:369:17: ( '+' | '-' )?\n      int alt15=2;\n      int LA15_0 = input.LA(1);\n      if ( (LA15_0=='+'||LA15_0=='-') ) {\n        alt15=1;\n      }\n      switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n      }\n\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:369:28: ( DECIMALDIGIT )+\n      int cnt16=0;\n      loop16:\n      while (true) {\n        int alt16=2;\n        int LA16_0 = input.LA(1);\n        if ( ((LA16_0 >= '0' && LA16_0 <= '9')) ) {\n          alt16=1;\n        }\n\n        switch (alt16) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt16 >= 1 ) break loop16;\n          EarlyExitException eee = new EarlyExitException(16, input);\n          throw eee;\n        }\n        cnt16++;\n      }\n\n      }\n\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"EXPONENT\"\n\n","sourceOld":"  // $ANTLR start \"EXPONENT\"\n  public final void mEXPONENT() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n      {\n      if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n        input.consume();\n      }\n      else {\n        MismatchedSetException mse = new MismatchedSetException(null,input);\n        recover(mse);\n        throw mse;\n      }\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:17: ( '+' | '-' )?\n      int alt14=2;\n      int LA14_0 = input.LA(1);\n      if ( (LA14_0=='+'||LA14_0=='-') ) {\n        alt14=1;\n      }\n      switch (alt14) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n      }\n\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:364:28: ( DECIMALDIGIT )+\n      int cnt15=0;\n      loop15:\n      while (true) {\n        int alt15=2;\n        int LA15_0 = input.LA(1);\n        if ( ((LA15_0 >= '0' && LA15_0 <= '9')) ) {\n          alt15=1;\n        }\n\n        switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt15 >= 1 ) break loop15;\n          EarlyExitException eee = new EarlyExitException(15, input);\n          throw eee;\n        }\n        cnt15++;\n      }\n\n      }\n\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"EXPONENT\"\n\n","bugFix":null,"bugIntro":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c","date":1404947938,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","sourceNew":"  // $ANTLR start \"EXPONENT\"\n  public final void mEXPONENT() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:400:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:400:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n      {\n      if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n        input.consume();\n      }\n      else {\n        MismatchedSetException mse = new MismatchedSetException(null,input);\n        recover(mse);\n        throw mse;\n      }\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:400:17: ( '+' | '-' )?\n      int alt22=2;\n      int LA22_0 = input.LA(1);\n      if ( (LA22_0=='+'||LA22_0=='-') ) {\n        alt22=1;\n      }\n      switch (alt22) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n      }\n\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:400:28: ( DECIMALDIGIT )+\n      int cnt23=0;\n      loop23:\n      while (true) {\n        int alt23=2;\n        int LA23_0 = input.LA(1);\n        if ( ((LA23_0 >= '0' && LA23_0 <= '9')) ) {\n          alt23=1;\n        }\n\n        switch (alt23) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt23 >= 1 ) break loop23;\n          EarlyExitException eee = new EarlyExitException(23, input);\n          throw eee;\n        }\n        cnt23++;\n      }\n\n      }\n\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"EXPONENT\"\n\n","sourceOld":"  // $ANTLR start \"EXPONENT\"\n  public final void mEXPONENT() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:369:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:369:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n      {\n      if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n        input.consume();\n      }\n      else {\n        MismatchedSetException mse = new MismatchedSetException(null,input);\n        recover(mse);\n        throw mse;\n      }\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:369:17: ( '+' | '-' )?\n      int alt15=2;\n      int LA15_0 = input.LA(1);\n      if ( (LA15_0=='+'||LA15_0=='-') ) {\n        alt15=1;\n      }\n      switch (alt15) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n      }\n\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:369:28: ( DECIMALDIGIT )+\n      int cnt16=0;\n      loop16:\n      while (true) {\n        int alt16=2;\n        int LA16_0 = input.LA(1);\n        if ( ((LA16_0 >= '0' && LA16_0 <= '9')) ) {\n          alt16=1;\n        }\n\n        switch (alt16) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt16 >= 1 ) break loop16;\n          EarlyExitException eee = new EarlyExitException(16, input);\n          throw eee;\n        }\n        cnt16++;\n      }\n\n      }\n\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"EXPONENT\"\n\n","bugFix":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d23d4828afa583ebf35b4a541763af6206133458","date":1438931440,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mEXPONENT().mjava","sourceNew":null,"sourceOld":"  // $ANTLR start \"EXPONENT\"\n  public final void mEXPONENT() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:400:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+ )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:400:7: ( 'e' | 'E' ) ( '+' | '-' )? ( DECIMALDIGIT )+\n      {\n      if ( input.LA(1)=='E'||input.LA(1)=='e' ) {\n        input.consume();\n      }\n      else {\n        MismatchedSetException mse = new MismatchedSetException(null,input);\n        recover(mse);\n        throw mse;\n      }\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:400:17: ( '+' | '-' )?\n      int alt22=2;\n      int LA22_0 = input.LA(1);\n      if ( (LA22_0=='+'||LA22_0=='-') ) {\n        alt22=1;\n      }\n      switch (alt22) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( input.LA(1)=='+'||input.LA(1)=='-' ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n      }\n\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:400:28: ( DECIMALDIGIT )+\n      int cnt23=0;\n      loop23:\n      while (true) {\n        int alt23=2;\n        int LA23_0 = input.LA(1);\n        if ( ((LA23_0 >= '0' && LA23_0 <= '9')) ) {\n          alt23=1;\n        }\n\n        switch (alt23) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:\n          {\n          if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n        default :\n          if ( cnt23 >= 1 ) break loop23;\n          EarlyExitException eee = new EarlyExitException(23, input);\n          throw eee;\n        }\n        cnt23++;\n      }\n\n      }\n\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"EXPONENT\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d23d4828afa583ebf35b4a541763af6206133458":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1441eba4282a646ef88d12acb797483db37554e":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"8d639dc27b5b3eae561ef321b06f3cad9280c529":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d23d4828afa583ebf35b4a541763af6206133458"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d1441eba4282a646ef88d12acb797483db37554e"]},"commit2Childs":{"d23d4828afa583ebf35b4a541763af6206133458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["d1441eba4282a646ef88d12acb797483db37554e"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"d1441eba4282a646ef88d12acb797483db37554e":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"8d639dc27b5b3eae561ef321b06f3cad9280c529":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["d23d4828afa583ebf35b4a541763af6206133458"],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}