{"path":"solr/test-framework/src/java/org/apache/solr/cloud/SocketProxy#reopen().mjava","commits":[{"id":"6e36353d7461af8d2329a78a71457cf8e3c1e88f","date":1411572107,"type":1,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SocketProxy#reopen().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SocketProxy#reopen().mjava","sourceNew":"  /*\n   * called after a close to restart the acceptor on the same port\n   */\n  public void reopen() {\n    log.info(\"Re-opening connectivity to \"+getUrl());\n    try {\n      open();\n    } catch (Exception e) {\n      log.debug(\"exception on reopen url:\" + getUrl(), e);\n    }\n  }\n\n","sourceOld":"  /*\n   * called after a close to restart the acceptor on the same port\n   */\n  public void reopen() {\n    log.info(\"Re-opening connectivity to \"+getUrl());\n    try {\n      open();\n    } catch (Exception e) {\n      log.debug(\"exception on reopen url:\" + getUrl(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1280741c654e60d3590156727fd5d8daa141efb7","date":1420244446,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SocketProxy#reopen().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SocketProxy#reopen().mjava","sourceNew":"  /*\n   * called after a close to restart the acceptor on the same port\n   */\n  public void reopen() {\n    log.info(\"Re-opening connectivity to \"+getUrl());\n    try {\n      if (proxyUrl == null) {\n        throw new IllegalStateException(\"Can not call open before open(URI uri).\");\n      }\n      serverSocket = createServerSocket(usesSSL);\n      serverSocket.setReuseAddress(true);\n      if (receiveBufferSize > 0) {\n        serverSocket.setReceiveBufferSize(receiveBufferSize);\n      }\n      serverSocket.bind(new InetSocketAddress(proxyUrl.getPort()));\n      doOpen();\n    } catch (Exception e) {\n      log.debug(\"exception on reopen url:\" + getUrl(), e);\n    }\n  }\n\n","sourceOld":"  /*\n   * called after a close to restart the acceptor on the same port\n   */\n  public void reopen() {\n    log.info(\"Re-opening connectivity to \"+getUrl());\n    try {\n      open();\n    } catch (Exception e) {\n      log.debug(\"exception on reopen url:\" + getUrl(), e);\n    }\n  }\n\n","bugFix":["14d5815ecbef89580f5c48990bcd433f04f8563a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":5,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/SocketProxy#reopen().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SocketProxy#reopen().mjava","sourceNew":"  /*\n   * called after a close to restart the acceptor on the same port\n   */\n  public void reopen() {\n    log.info(\"Re-opening connectivity to \"+getUrl());\n    try {\n      if (proxyUrl == null) {\n        throw new IllegalStateException(\"Can not call open before open(URI uri).\");\n      }\n      serverSocket = createServerSocket(usesSSL);\n      serverSocket.setReuseAddress(true);\n      if (receiveBufferSize > 0) {\n        serverSocket.setReceiveBufferSize(receiveBufferSize);\n      }\n      serverSocket.bind(new InetSocketAddress(proxyUrl.getPort()));\n      doOpen();\n    } catch (Exception e) {\n      log.debug(\"exception on reopen url:\" + getUrl(), e);\n    }\n  }\n\n","sourceOld":"  /*\n   * called after a close to restart the acceptor on the same port\n   */\n  public void reopen() {\n    log.info(\"Re-opening connectivity to \"+getUrl());\n    try {\n      if (proxyUrl == null) {\n        throw new IllegalStateException(\"Can not call open before open(URI uri).\");\n      }\n      serverSocket = createServerSocket(usesSSL);\n      serverSocket.setReuseAddress(true);\n      if (receiveBufferSize > 0) {\n        serverSocket.setReceiveBufferSize(receiveBufferSize);\n      }\n      serverSocket.bind(new InetSocketAddress(proxyUrl.getPort()));\n      doOpen();\n    } catch (Exception e) {\n      log.debug(\"exception on reopen url:\" + getUrl(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1280741c654e60d3590156727fd5d8daa141efb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6e36353d7461af8d2329a78a71457cf8e3c1e88f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"1280741c654e60d3590156727fd5d8daa141efb7":["6e36353d7461af8d2329a78a71457cf8e3c1e88f"]},"commit2Childs":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e36353d7461af8d2329a78a71457cf8e3c1e88f"],"6e36353d7461af8d2329a78a71457cf8e3c1e88f":["1280741c654e60d3590156727fd5d8daa141efb7"],"1280741c654e60d3590156727fd5d8daa141efb7":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}