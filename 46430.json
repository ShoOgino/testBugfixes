{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/Normalization#explain(BasicStats,float,float).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/Normalization#explain(BasicStats,float,float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/Normalization#explain(BasicStats,float,float).mjava","sourceNew":"  /** Returns an explanation for the normalized term frequency.\n   * <p>The default normalization methods use the field length of the document\n   * and the average field length to compute the normalized term frequency.\n   * This method provides a generic explanation for such methods.\n   * Subclasses that use other statistics must override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, float tf, float len) {\n    Explanation result = new Explanation();\n    result.setDescription(getClass().getSimpleName() + \", computed from: \");\n    result.setValue(tfn(stats, tf, len));\n    result.addDetail(new Explanation(tf, \"tf\"));\n    result.addDetail(\n        new Explanation(stats.getAvgFieldLength(), \"avgFieldLength\"));\n    result.addDetail(new Explanation(len, \"len\"));\n    return result;\n  }\n\n","sourceOld":"  /** Returns an explanation for the normalized term frequency.\n   * <p>The default normalization methods use the field length of the document\n   * and the average field length to compute the normalized term frequency.\n   * This method provides a generic explanation for such methods.\n   * Subclasses that use other statistics must override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, float tf, float len) {\n    Explanation result = new Explanation();\n    result.setDescription(getClass().getSimpleName() + \", computed from: \");\n    result.setValue(tfn(stats, tf, len));\n    result.addDetail(new Explanation(tf, \"tf\"));\n    result.addDetail(\n        new Explanation(stats.getAvgFieldLength(), \"avgFieldLength\"));\n    result.addDetail(new Explanation(len, \"len\"));\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/Normalization#explain(BasicStats,float,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Normalization#explain(BasicStats,float,float).mjava","sourceNew":"  /** Returns an explanation for the normalized term frequency.\n   * <p>The default normalization methods use the field length of the document\n   * and the average field length to compute the normalized term frequency.\n   * This method provides a generic explanation for such methods.\n   * Subclasses that use other statistics must override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, float tf, float len) {\n    return Explanation.match(\n        tfn(stats, tf, len),\n        getClass().getSimpleName() + \", computed from: \",\n        Explanation.match(tf, \"tf\"),\n        Explanation.match(stats.getAvgFieldLength(), \"avgFieldLength\"),\n        Explanation.match(len, \"len\"));\n  }\n\n","sourceOld":"  /** Returns an explanation for the normalized term frequency.\n   * <p>The default normalization methods use the field length of the document\n   * and the average field length to compute the normalized term frequency.\n   * This method provides a generic explanation for such methods.\n   * Subclasses that use other statistics must override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, float tf, float len) {\n    Explanation result = new Explanation();\n    result.setDescription(getClass().getSimpleName() + \", computed from: \");\n    result.setValue(tfn(stats, tf, len));\n    result.addDetail(new Explanation(tf, \"tf\"));\n    result.addDetail(\n        new Explanation(stats.getAvgFieldLength(), \"avgFieldLength\"));\n    result.addDetail(new Explanation(len, \"len\"));\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","date":1508899684,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/Normalization#explain(BasicStats,double,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Normalization#explain(BasicStats,float,float).mjava","sourceNew":"  /** Returns an explanation for the normalized term frequency.\n   * <p>The default normalization methods use the field length of the document\n   * and the average field length to compute the normalized term frequency.\n   * This method provides a generic explanation for such methods.\n   * Subclasses that use other statistics must override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, double tf, double len) {\n    return Explanation.match(\n        (float) tfn(stats, tf, len),\n        getClass().getSimpleName() + \", computed from: \",\n        Explanation.match((float) tf, \"tf\"),\n        Explanation.match((float) stats.getAvgFieldLength(), \"avgFieldLength\"),\n        Explanation.match((float) len, \"len\"));\n  }\n\n","sourceOld":"  /** Returns an explanation for the normalized term frequency.\n   * <p>The default normalization methods use the field length of the document\n   * and the average field length to compute the normalized term frequency.\n   * This method provides a generic explanation for such methods.\n   * Subclasses that use other statistics must override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, float tf, float len) {\n    return Explanation.match(\n        tfn(stats, tf, len),\n        getClass().getSimpleName() + \", computed from: \",\n        Explanation.match(tf, \"tf\"),\n        Explanation.match(stats.getAvgFieldLength(), \"avgFieldLength\"),\n        Explanation.match(len, \"len\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"]},"commit2Childs":{"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}