{"path":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","commits":[{"id":"afeb033b2bd36d8ce9d82142b197da4dde13068b","date":1269115863,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28e9b4f0446e4a60433a9442e4b2fa4e2f68d737","date":1292289052,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // record current value prior to core initialization\n    // so we can verify the correct number of instances later\n    // NOTE: this won't work properly if concurrent tests run\n    // in the same VM\n    preInitMockListenerCount = MockEventListener.getCreateCount();\n\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // record current value prior to core initialization\n    // so we can verify the correct number of instances later\n    // NOTE: this won't work properly if concurrent tests run\n    // in the same VM\n    preInitMockListenerCount = MockEventListener.getCreateCount();\n\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // record current value prior to core initialization\n    // so we can verify the correct number of instances later\n    // NOTE: this won't work properly if concurrent tests run\n    // in the same VM\n    preInitMockListenerCount = MockEventListener.getCreateCount();\n\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // record current value prior to core initialization\n    // so we can verify the correct number of instances later\n    // NOTE: this won't work properly if concurrent tests run\n    // in the same VM\n    preInitMockListenerCount = MockEventListener.getCreateCount();\n\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // record current value prior to core initialization\n    // so we can verify the correct number of instances later\n    // NOTE: this won't work properly if concurrent tests run\n    // in the same VM\n    preInitMockListenerCount = MockEventListener.getCreateCount();\n\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // record current value prior to core initialization\n    // so we can verify the correct number of instances later\n    // NOTE: this won't work properly if concurrent tests run\n    // in the same VM\n    preInitMockListenerCount = MockEventListener.getCreateCount();\n\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // record current value prior to core initialization\n    // so we can verify the correct number of instances later\n    // NOTE: this won't work properly if concurrent tests run\n    // in the same VM\n    preInitMockListenerCount = MockEventListener.getCreateCount();\n\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // record current value prior to core initialization\n    // so we can verify the correct number of instances later\n    // NOTE: this won't work properly if concurrent tests run\n    // in the same VM\n    preInitMockListenerCount = MockEventListener.getCreateCount();\n\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // record current value prior to core initialization\n    // so we can verify the correct number of instances later\n    // NOTE: this won't work properly if concurrent tests run\n    // in the same VM\n    preInitMockListenerCount = MockEventListener.getCreateCount();\n\n    initCore(\"solrconfig-querysender.xml\",\"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"28e9b4f0446e4a60433a9442e4b2fa4e2f68d737":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["28e9b4f0446e4a60433a9442e4b2fa4e2f68d737"],"c26f00b574427b55127e869b935845554afde1fa":["28e9b4f0446e4a60433a9442e4b2fa4e2f68d737","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["afeb033b2bd36d8ce9d82142b197da4dde13068b","28e9b4f0446e4a60433a9442e4b2fa4e2f68d737"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["28e9b4f0446e4a60433a9442e4b2fa4e2f68d737"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["afeb033b2bd36d8ce9d82142b197da4dde13068b","28e9b4f0446e4a60433a9442e4b2fa4e2f68d737"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"28e9b4f0446e4a60433a9442e4b2fa4e2f68d737":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","ab5cb6a74aefb78aa0569857970b9151dfe2e787","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["28e9b4f0446e4a60433a9442e4b2fa4e2f68d737","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}