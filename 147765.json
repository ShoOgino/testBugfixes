{"path":"solr/core/src/java/org/apache/solr/schema/TrieField#getMainValuePrefix(org.apache.solr.schema.FieldType).mjava","commits":[{"id":"6eb141f80638abdb6ffaa5149877f36ea39b6ad5","date":1315714072,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#getMainValuePrefix(org.apache.solr.schema.FieldType).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieField#getMainValuePrefix(FieldType).mjava","sourceNew":"  /** expert internal use, subject to change.\n   * Returns null if no prefix or prefix not needed, or the prefix of the main value of a trie field\n   * that indexes multiple precisions per value.\n   */\n  public static String getMainValuePrefix(org.apache.solr.schema.FieldType ft) {\n    if (ft instanceof TrieDateField)\n      ft = ((TrieDateField) ft).wrappedField;\n    if (ft instanceof TrieField) {\n      final TrieField trie = (TrieField)ft;\n      if (trie.precisionStep  == Integer.MAX_VALUE)\n        return null;\n      switch (trie.type) {\n        case INTEGER:\n        case FLOAT:\n          return INT_PREFIX;\n        case LONG:\n        case DOUBLE:\n        case DATE:\n          return LONG_PREFIX;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + trie.type);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  /** expert internal use, subject to change.\n   * Returns null if no prefix or prefix not needed, or the prefix of the main value of a trie field\n   * that indexes multiple precisions per value.\n   */\n  public static String getMainValuePrefix(FieldType ft) {\n    if (ft instanceof TrieDateField)\n      ft = ((TrieDateField) ft).wrappedField;\n    if (ft instanceof TrieField) {\n      final TrieField trie = (TrieField)ft;\n      if (trie.precisionStep  == Integer.MAX_VALUE)\n        return null;\n      switch (trie.type) {\n        case INTEGER:\n        case FLOAT:\n          return INT_PREFIX;\n        case LONG:\n        case DOUBLE:\n        case DATE:\n          return LONG_PREFIX;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + trie.type);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed2fa62657d92ccc3a506b15445420de3d094fcb","date":1404143214,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#getMainValuePrefix(org.apache.solr.schema.FieldType).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieField#getMainValuePrefix(org.apache.solr.schema.FieldType).mjava","sourceNew":"  /** expert internal use, subject to change.\n   * Returns null if no prefix or prefix not needed, or the prefix of the main value of a trie field\n   * that indexes multiple precisions per value.\n   */\n  public static String getMainValuePrefix(org.apache.solr.schema.FieldType ft) {\n    if (ft instanceof TrieField) {\n      final TrieField trie = (TrieField)ft;\n      if (trie.precisionStep  == Integer.MAX_VALUE)\n        return null;\n      switch (trie.type) {\n        case INTEGER:\n        case FLOAT:\n          return INT_PREFIX;\n        case LONG:\n        case DOUBLE:\n        case DATE:\n          return LONG_PREFIX;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + trie.type);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  /** expert internal use, subject to change.\n   * Returns null if no prefix or prefix not needed, or the prefix of the main value of a trie field\n   * that indexes multiple precisions per value.\n   */\n  public static String getMainValuePrefix(org.apache.solr.schema.FieldType ft) {\n    if (ft instanceof TrieDateField)\n      ft = ((TrieDateField) ft).wrappedField;\n    if (ft instanceof TrieField) {\n      final TrieField trie = (TrieField)ft;\n      if (trie.precisionStep  == Integer.MAX_VALUE)\n        return null;\n      switch (trie.type) {\n        case INTEGER:\n        case FLOAT:\n          return INT_PREFIX;\n        case LONG:\n        case DOUBLE:\n        case DATE:\n          return LONG_PREFIX;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + trie.type);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ed2fa62657d92ccc3a506b15445420de3d094fcb":["6eb141f80638abdb6ffaa5149877f36ea39b6ad5"],"6eb141f80638abdb6ffaa5149877f36ea39b6ad5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ed2fa62657d92ccc3a506b15445420de3d094fcb"]},"commit2Childs":{"ed2fa62657d92ccc3a506b15445420de3d094fcb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6eb141f80638abdb6ffaa5149877f36ea39b6ad5":["ed2fa62657d92ccc3a506b15445420de3d094fcb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6eb141f80638abdb6ffaa5149877f36ea39b6ad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}