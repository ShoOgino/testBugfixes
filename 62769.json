{"path":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#handleIncludes(ValidatingJsonMap,String,int).mjava","commits":[{"id":"fcf710a8fcd590cf55c855d422c7a10fce3e6117","date":1485842253,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#handleIncludes(ValidatingJsonMap,String,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * In the given map, recursively replace \"#include\":\"resource-name\" with the key/value pairs\n   * parsed from the resource at {location}/{resource-name}.json\n   */\n  private static void handleIncludes(ValidatingJsonMap map, String location, int maxDepth) {\n    final String loc = location == null ? \"\" // trim trailing slash\n        : (location.endsWith(\"/\") ? location.substring(0, location.length() - 1) : location);\n    String resourceToInclude = (String) map.get(INCLUDE);\n    if (resourceToInclude != null) {\n      ValidatingJsonMap includedMap = parse(loc + \"/\" + resourceToInclude + RESOURCE_EXTENSION, loc);\n      map.remove(INCLUDE);\n      map.putAll(includedMap);\n    }\n    if (maxDepth > 0) {\n      map.entrySet().stream()\n          .filter(e -> e.getValue() instanceof Map)\n          .map(Map.Entry::getValue)\n          .forEach(m -> handleIncludes((ValidatingJsonMap) m, loc, maxDepth - 1));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#handleIncludes(ValidatingJsonMap,String,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * In the given map, recursively replace \"#include\":\"resource-name\" with the key/value pairs\n   * parsed from the resource at {location}/{resource-name}.json\n   */\n  private static void handleIncludes(ValidatingJsonMap map, String location, int maxDepth) {\n    final String loc = location == null ? \"\" // trim trailing slash\n        : (location.endsWith(\"/\") ? location.substring(0, location.length() - 1) : location);\n    String resourceToInclude = (String) map.get(INCLUDE);\n    if (resourceToInclude != null) {\n      ValidatingJsonMap includedMap = parse(loc + \"/\" + resourceToInclude + RESOURCE_EXTENSION, loc);\n      map.remove(INCLUDE);\n      map.putAll(includedMap);\n    }\n    if (maxDepth > 0) {\n      map.entrySet().stream()\n          .filter(e -> e.getValue() instanceof Map)\n          .map(Map.Entry::getValue)\n          .forEach(m -> handleIncludes((ValidatingJsonMap) m, loc, maxDepth - 1));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fcf710a8fcd590cf55c855d422c7a10fce3e6117"]},"commit2Childs":{"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}