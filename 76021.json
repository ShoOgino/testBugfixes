{"path":"lucene/src/java/org/apache/lucene/index/IndexReader.ReaderContext#children().mjava","commits":[{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader.ReaderContext#children().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Returns the context's children iff this context is a composite context\n     * otherwise <code>null</code>.\n     * <p>\n     * Note: this method is a convenience method to prevent\n     * <code>instanceof</code> checks and type-casts to\n     * {@link CompositeReaderContext}.\n     */\n    public ReaderContext[] children() {\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader.ReaderContext#children().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Returns the context's children iff this context is a composite context\n     * otherwise <code>null</code>.\n     * <p>\n     * Note: this method is a convenience method to prevent\n     * <code>instanceof</code> checks and type-casts to\n     * {@link CompositeReaderContext}.\n     */\n    public ReaderContext[] children() {\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader.ReaderContext#children().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Returns the context's children iff this context is a composite context\n     * otherwise <code>null</code>.\n     * <p>\n     * Note: this method is a convenience method to prevent\n     * <code>instanceof</code> checks and type-casts to\n     * {@link CompositeReaderContext}.\n     */\n    public ReaderContext[] children() {\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader.ReaderContext#children().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader.ReaderContext#children().mjava","sourceNew":"    /**\n     * Returns the context's children iff this context is a composite context\n     * otherwise <code>null</code>.\n     * <p>\n     * Note: this method is a convenience method to prevent\n     * <code>instanceof</code> checks and type-casts to\n     * {@link CompositeReaderContext}.\n     */\n    public ReaderContext<? extends IndexReader>[] children() {\n      return null;\n    }\n\n","sourceOld":"    /**\n     * Returns the context's children iff this context is a composite context\n     * otherwise <code>null</code>.\n     * <p>\n     * Note: this method is a convenience method to prevent\n     * <code>instanceof</code> checks and type-casts to\n     * {@link CompositeReaderContext}.\n     */\n    public ReaderContext[] children() {\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fff8f4b218bd0626afcdce82027bafeb84a50a4","date":1327229950,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader.ReaderContext#children().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader.ReaderContext#children().mjava","sourceNew":"    /**\n     * Returns the context's children iff this context is a composite context\n     * otherwise <code>null</code>.\n     * <p>\n     * Note: this method is a convenience method to prevent\n     * <code>instanceof</code> checks and type-casts to\n     * {@link CompositeReaderContext}.\n     */\n    public abstract ReaderContext[] children();\n\n","sourceOld":"    /**\n     * Returns the context's children iff this context is a composite context\n     * otherwise <code>null</code>.\n     * <p>\n     * Note: this method is a convenience method to prevent\n     * <code>instanceof</code> checks and type-casts to\n     * {@link CompositeReaderContext}.\n     */\n    public ReaderContext<? extends IndexReader>[] children() {\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8493985e6883b3fa8231d172694d2aa3a85cb182","date":1327920390,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader.ReaderContext#children().mjava","sourceNew":null,"sourceOld":"    /**\n     * Returns the context's children iff this context is a composite context\n     * otherwise <code>null</code>.\n     * <p>\n     * Note: this method is a convenience method to prevent\n     * <code>instanceof</code> checks and type-casts to\n     * {@link CompositeReaderContext}.\n     */\n    public abstract ReaderContext[] children();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader.ReaderContext#children().mjava","sourceNew":null,"sourceOld":"    /**\n     * Returns the context's children iff this context is a composite context\n     * otherwise <code>null</code>.\n     * <p>\n     * Note: this method is a convenience method to prevent\n     * <code>instanceof</code> checks and type-casts to\n     * {@link CompositeReaderContext}.\n     */\n    public ReaderContext[] children() {\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["6fff8f4b218bd0626afcdce82027bafeb84a50a4"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6fff8f4b218bd0626afcdce82027bafeb84a50a4":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["2dadf0f3286a34a0fee6e788ffce88624bf2984e","8493985e6883b3fa8231d172694d2aa3a85cb182"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"]},"commit2Childs":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"6fff8f4b218bd0626afcdce82027bafeb84a50a4":["8493985e6883b3fa8231d172694d2aa3a85cb182"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","2dadf0f3286a34a0fee6e788ffce88624bf2984e","868da859b43505d9d2a023bfeae6dd0c795f5295"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["6fff8f4b218bd0626afcdce82027bafeb84a50a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}