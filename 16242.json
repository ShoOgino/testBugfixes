{"path":"src/common/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","pathOld":"src/java/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","sourceNew":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<Object>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","sourceOld":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<Object>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/common/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","pathOld":"src/common/org/apache/solr/common/SolrDocument#setField(String,Object).mjava","sourceNew":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<Object>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","sourceOld":"  /**\n   * Set a field with the given object.  If the object is an Array, it will \n   * set multiple fields with the included contents.  This will replace any existing \n   * field with the given name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void setField(String name, Object value) \n  {\n    if( value instanceof Object[] ) {\n      value = new ArrayList(Arrays.asList( (Object[])value ));\n    }\n    else if( value instanceof Collection ) {\n      // nothing\n    }\n    else if( value instanceof Iterable ) {\n      ArrayList<Object> lst = new ArrayList<Object>();\n      for( Object o : (Iterable)value ) {\n        lst.add( o );\n      }\n      value = lst;\n    }\n    _fields.put(name, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}