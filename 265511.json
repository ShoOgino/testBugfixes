{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrServerTest#testWrongZkChrootTest().mjava","commits":[{"id":"524e6015de751650042b84f0ac3932da90254cba","date":1402403861,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrServerTest#testWrongZkChrootTest().mjava","pathOld":"/dev/null","sourceNew":"  public void testWrongZkChrootTest() throws MalformedURLException {\n    CloudSolrServer server = null;\n    try {\n      server = new CloudSolrServer(zkServer.getZkAddress() + \"/xyz/foo\");\n      server.setDefaultCollection(DEFAULT_COLLECTION);\n      server.setZkClientTimeout(1000*60);\n      server.connect();\n      fail(\"Expected exception\");\n    } catch(SolrException e) {\n      assertTrue(e.getCause() instanceof KeeperException);\n    } finally {\n      server.shutdown();\n    }\n    // see SOLR-6146 - this test will fail by virtue of the zkClient tracking performed\n    // in the afterClass method of the base class\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest#testWrongZkChrootTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrServerTest#testWrongZkChrootTest().mjava","sourceNew":"  public void testWrongZkChrootTest() throws MalformedURLException {\n    CloudSolrClient client = null;\n    try {\n      client = new CloudSolrClient(zkServer.getZkAddress() + \"/xyz/foo\");\n      client.setDefaultCollection(DEFAULT_COLLECTION);\n      client.setZkClientTimeout(1000 * 60);\n      client.connect();\n      fail(\"Expected exception\");\n    } catch(SolrException e) {\n      assertTrue(e.getCause() instanceof KeeperException);\n    } finally {\n      client.shutdown();\n    }\n    // see SOLR-6146 - this test will fail by virtue of the zkClient tracking performed\n    // in the afterClass method of the base class\n  }\n\n","sourceOld":"  public void testWrongZkChrootTest() throws MalformedURLException {\n    CloudSolrServer server = null;\n    try {\n      server = new CloudSolrServer(zkServer.getZkAddress() + \"/xyz/foo\");\n      server.setDefaultCollection(DEFAULT_COLLECTION);\n      server.setZkClientTimeout(1000*60);\n      server.connect();\n      fail(\"Expected exception\");\n    } catch(SolrException e) {\n      assertTrue(e.getCause() instanceof KeeperException);\n    } finally {\n      server.shutdown();\n    }\n    // see SOLR-6146 - this test will fail by virtue of the zkClient tracking performed\n    // in the afterClass method of the base class\n  }\n\n","bugFix":null,"bugIntro":["7875fce026a0a335830cfc75abc3eb009eff9a73"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"524e6015de751650042b84f0ac3932da90254cba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bafca15d8e408346a67f4282ad1143b88023893b":["524e6015de751650042b84f0ac3932da90254cba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["524e6015de751650042b84f0ac3932da90254cba"],"524e6015de751650042b84f0ac3932da90254cba":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}