{"path":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#getScores(ScoreDoc[],Searcher).mjava","commits":[{"id":"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02","date":1244977984,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#getScores(ScoreDoc[],Searcher).mjava","pathOld":"/dev/null","sourceNew":"  private HashMap getScores (ScoreDoc[] hits, Searcher searcher)\n  throws IOException {\n    HashMap scoreMap = new HashMap();\n    int n = hits.length;\n    for (int i=0; i<n; ++i) {\n      Document doc = searcher.doc(hits[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      assertEquals (v.length, 1);\n      scoreMap.put (v[0], new Float(hits[i].score));\n    }\n    return scoreMap;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bcde5e3f23911110baa101ed062b544162825b5","date":1254521804,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#getScores(ScoreDoc[],Searcher).mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#getScores(ScoreDoc[],Searcher).mjava","sourceNew":"  private HashMap getScores (ScoreDoc[] hits, Searcher searcher)\n  throws IOException {\n    HashMap scoreMap = new HashMap();\n    int n = hits.length;\n    for (int i=0; i<n; ++i) {\n      Document doc = searcher.doc(hits[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      assertEquals (v.length, 1);\n      scoreMap.put (v[0], Float.valueOf(hits[i].score));\n    }\n    return scoreMap;\n  }\n\n","sourceOld":"  private HashMap getScores (ScoreDoc[] hits, Searcher searcher)\n  throws IOException {\n    HashMap scoreMap = new HashMap();\n    int n = hits.length;\n    for (int i=0; i<n; ++i) {\n      Document doc = searcher.doc(hits[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      assertEquals (v.length, 1);\n      scoreMap.put (v[0], new Float(hits[i].score));\n    }\n    return scoreMap;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#getScores(ScoreDoc[],Searcher).mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#getScores(ScoreDoc[],Searcher).mjava","sourceNew":"  private HashMap<String, Float> getScores (ScoreDoc[] hits, Searcher searcher)\n  throws IOException {\n    HashMap<String, Float> scoreMap = new HashMap<String, Float>();\n    int n = hits.length;\n    for (int i=0; i<n; ++i) {\n      Document doc = searcher.doc(hits[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      assertEquals (v.length, 1);\n      scoreMap.put (v[0], Float.valueOf(hits[i].score));\n    }\n    return scoreMap;\n  }\n\n","sourceOld":"  private HashMap getScores (ScoreDoc[] hits, Searcher searcher)\n  throws IOException {\n    HashMap scoreMap = new HashMap();\n    int n = hits.length;\n    for (int i=0; i<n; ++i) {\n      Document doc = searcher.doc(hits[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      assertEquals (v.length, 1);\n      scoreMap.put (v[0], Float.valueOf(hits[i].score));\n    }\n    return scoreMap;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#getScores(ScoreDoc[],Searcher).mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#getScores(ScoreDoc[],Searcher).mjava","sourceNew":"  private HashMap<String, Float> getScores (ScoreDoc[] hits, Searcher searcher)\n  throws IOException {\n    HashMap<String, Float> scoreMap = new HashMap<String, Float>();\n    int n = hits.length;\n    for (int i=0; i<n; ++i) {\n      Document doc = searcher.doc(hits[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      assertEquals (v.length, 1);\n      scoreMap.put (v[0], Float.valueOf(hits[i].score));\n    }\n    return scoreMap;\n  }\n\n","sourceOld":"  private HashMap<String, Float> getScores (ScoreDoc[] hits, Searcher searcher)\n  throws IOException {\n    HashMap<String, Float> scoreMap = new HashMap<String, Float>();\n    int n = hits.length;\n    for (int i=0; i<n; ++i) {\n      Document doc = searcher.doc(hits[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      assertEquals (v.length, 1);\n      scoreMap.put (v[0], Float.valueOf(hits[i].score));\n    }\n    return scoreMap;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bcde5e3f23911110baa101ed062b544162825b5":["1474a58d42cdf3b9e16ffe07bce31e4abffe5e02"],"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["6bcde5e3f23911110baa101ed062b544162825b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"6bcde5e3f23911110baa101ed062b544162825b5":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02":["6bcde5e3f23911110baa101ed062b544162825b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1474a58d42cdf3b9e16ffe07bce31e4abffe5e02"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}