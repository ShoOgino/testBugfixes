{"path":"solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory#getWordSet(ResourceLoader,String,boolean).mjava","commits":[{"id":"9c8b12bda3f5864b27e3e04df1be4f6736ec067a","date":1270088127,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = StrUtils.splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion, \n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["623b5245fbd9d5af9f458826ba9ed3d6212db24d","623b5245fbd9d5af9f458826ba9ed3d6212db24d","623b5245fbd9d5af9f458826ba9ed3d6212db24d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/BaseTokenStreamFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = StrUtils.splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion, \n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = StrUtils.splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion, \n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/BaseTokenStreamFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = StrUtils.splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion, \n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = StrUtils.splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion, \n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analysis/BaseTokenStreamFactory#getWordSet(ResourceLoader,String,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/BaseTokenStreamFactory#getWordSet(ResourceLoader,String,boolean).mjava","sourceNew":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = StrUtils.splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion, \n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","sourceOld":"  protected CharArraySet getWordSet(ResourceLoader loader,\n      String wordFiles, boolean ignoreCase) throws IOException {\n    assureMatchVersion();\n    List<String> files = StrUtils.splitFileNames(wordFiles);\n    CharArraySet words = null;\n    if (files.size() > 0) {\n      // default stopwords list has 35 or so words, but maybe don't make it that\n      // big to start\n      words = new CharArraySet(luceneMatchVersion, \n          files.size() * 10, ignoreCase);\n      for (String file : files) {\n        List<String> wlist = loader.getLines(file.trim());\n        words.addAll(StopFilter.makeStopSet(luceneMatchVersion, wlist,\n            ignoreCase));\n      }\n    }\n    return words;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9c8b12bda3f5864b27e3e04df1be4f6736ec067a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["9c8b12bda3f5864b27e3e04df1be4f6736ec067a"],"c26f00b574427b55127e869b935845554afde1fa":["9c8b12bda3f5864b27e3e04df1be4f6736ec067a","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["9c8b12bda3f5864b27e3e04df1be4f6736ec067a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"9c8b12bda3f5864b27e3e04df1be4f6736ec067a":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9c8b12bda3f5864b27e3e04df1be4f6736ec067a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}