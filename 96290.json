{"path":"lucene/backwards/src/java/org/apache/lucene/document/DateTools#stringToTime(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/document/DateTools#stringToTime(String).mjava","pathOld":"backwards/src/java/org/apache/lucene/document/DateTools#stringToTime(String).mjava","sourceNew":"  /**\n   * Converts a string produced by <code>timeToString</code> or\n   * <code>dateToString</code> back to a time, represented as the\n   * number of milliseconds since January 1, 1970, 00:00:00 GMT.\n   * \n   * @param dateString the date string to be converted\n   * @return the number of milliseconds since January 1, 1970, 00:00:00 GMT\n   * @throws ParseException if <code>dateString</code> is not in the \n   *  expected format \n   */\n  public static synchronized long stringToTime(String dateString) throws ParseException {\n    return stringToDate(dateString).getTime();\n  }\n\n","sourceOld":"  /**\n   * Converts a string produced by <code>timeToString</code> or\n   * <code>dateToString</code> back to a time, represented as the\n   * number of milliseconds since January 1, 1970, 00:00:00 GMT.\n   * \n   * @param dateString the date string to be converted\n   * @return the number of milliseconds since January 1, 1970, 00:00:00 GMT\n   * @throws ParseException if <code>dateString</code> is not in the \n   *  expected format \n   */\n  public static synchronized long stringToTime(String dateString) throws ParseException {\n    return stringToDate(dateString).getTime();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/document/DateTools#stringToTime(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Converts a string produced by <code>timeToString</code> or\n   * <code>dateToString</code> back to a time, represented as the\n   * number of milliseconds since January 1, 1970, 00:00:00 GMT.\n   * \n   * @param dateString the date string to be converted\n   * @return the number of milliseconds since January 1, 1970, 00:00:00 GMT\n   * @throws ParseException if <code>dateString</code> is not in the \n   *  expected format \n   */\n  public static synchronized long stringToTime(String dateString) throws ParseException {\n    return stringToDate(dateString).getTime();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}