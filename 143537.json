{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collectCounts(SortedDocValues,DocIdSetIterator,LongValues).mjava","commits":[{"id":"51b068b0154fe2220646b2dcc2133e168a31c743","date":1446661675,"type":2,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collectCounts(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV[FacetField]#collectDocs(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectCounts(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int segOrd = singleDv.getOrd(doc);\n      if (segOrd < 0) continue;\n      int ord = (int)toGlobal.get(segOrd);\n      countAcc.incrementCount(ord, 1);\n    }\n  }\n\n","sourceOld":"  protected void collectDocs(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int segOrd = singleDv.getOrd(doc);\n      if (segOrd < 0) continue;\n      collect(doc, segOrd, toGlobal);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79759974460bc59933cd169acc94f5c6b16368d5","date":1471318443,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectCounts(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collectCounts(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectCounts(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int segOrd = singleDv.getOrd(doc);\n      if (segOrd < 0) continue;\n      int ord = (int)toGlobal.get(segOrd);\n      countAcc.incrementCount(ord, 1);\n    }\n  }\n\n","sourceOld":"  private void collectCounts(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int segOrd = singleDv.getOrd(doc);\n      if (segOrd < 0) continue;\n      int ord = (int)toGlobal.get(segOrd);\n      countAcc.incrementCount(ord, 1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectCounts(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collectCounts(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectCounts(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int segOrd = singleDv.getOrd(doc);\n      if (segOrd < 0) continue;\n      int ord = (int)toGlobal.get(segOrd);\n      countAcc.incrementCount(ord, 1);\n    }\n  }\n\n","sourceOld":"  private void collectCounts(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int segOrd = singleDv.getOrd(doc);\n      if (segOrd < 0) continue;\n      int ord = (int)toGlobal.get(segOrd);\n      countAcc.incrementCount(ord, 1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectCounts(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collectCounts(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectCounts(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int segOrd = singleDv.getOrd(doc);\n      if (segOrd < 0) continue;\n      int ord = (int)toGlobal.get(segOrd);\n      countAcc.incrementCount(ord, 1);\n    }\n  }\n\n","sourceOld":"  private void collectCounts(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int segOrd = singleDv.getOrd(doc);\n      if (segOrd < 0) continue;\n      int ord = (int)toGlobal.get(segOrd);\n      countAcc.incrementCount(ord, 1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collectCounts(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":null,"sourceOld":"  private void collectCounts(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int segOrd = singleDv.getOrd(doc);\n      if (segOrd < 0) continue;\n      int ord = (int)toGlobal.get(segOrd);\n      countAcc.incrementCount(ord, 1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"51b068b0154fe2220646b2dcc2133e168a31c743":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["51b068b0154fe2220646b2dcc2133e168a31c743","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["51b068b0154fe2220646b2dcc2133e168a31c743","79759974460bc59933cd169acc94f5c6b16368d5"],"79759974460bc59933cd169acc94f5c6b16368d5":["51b068b0154fe2220646b2dcc2133e168a31c743"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["51b068b0154fe2220646b2dcc2133e168a31c743","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403d05f7f8d69b65659157eff1bc1d2717f04c66"]},"commit2Childs":{"51b068b0154fe2220646b2dcc2133e168a31c743":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","79759974460bc59933cd169acc94f5c6b16368d5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51b068b0154fe2220646b2dcc2133e168a31c743"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"79759974460bc59933cd169acc94f5c6b16368d5":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}