{"path":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","commits":[{"id":"434ff4225627b937a533128f8746eb1e9009fc95","date":1153247240,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\r\n    if (!excludeOuter) {\r\n      writer.write('{');\r\n      incLevel();\r\n      isFirstVal=true;\r\n    }\r\n\r\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\r\n      Object e = entry.getKey();\r\n      String k = e==null ? null : e.toString();\r\n      Object v = entry.getValue();\r\n\r\n      if (isFirstVal) {\r\n        isFirstVal=false;\r\n      } else {\r\n        writer.write(',');\r\n      }\r\n\r\n      indent();\r\n      writeKey(k,true);\r\n      writeVal(k,v);\r\n    }\r\n\r\n    if (!excludeOuter) {\r\n      decLevel();\r\n      writer.write('}');\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c0e301b711811c6aaee90440cc1a7925fdd1a1e","date":1153259525,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","sourceNew":"  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writer.write('{');\n      incLevel();\n      isFirstVal=true;\n    }\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? null : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writer.write(',');\n      }\n\n      indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writer.write('}');\n    }\n  }\n\n","sourceOld":"  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\r\n    if (!excludeOuter) {\r\n      writer.write('{');\r\n      incLevel();\r\n      isFirstVal=true;\r\n    }\r\n\r\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\r\n      Object e = entry.getKey();\r\n      String k = e==null ? null : e.toString();\r\n      Object v = entry.getValue();\r\n\r\n      if (isFirstVal) {\r\n        isFirstVal=false;\r\n      } else {\r\n        writer.write(',');\r\n      }\r\n\r\n      indent();\r\n      writeKey(k,true);\r\n      writeVal(k,v);\r\n    }\r\n\r\n    if (!excludeOuter) {\r\n      decLevel();\r\n      writer.write('}');\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33cc9654dcc924fba2edb3806775ab729024a7e7","date":1154022438,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","sourceNew":"  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writer.write('{');\n      incLevel();\n      isFirstVal=true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? null : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writer.write(',');\n      }\n\n      if (doIndent) indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writer.write('}');\n    }\n  }\n\n","sourceOld":"  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writer.write('{');\n      incLevel();\n      isFirstVal=true;\n    }\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? null : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writer.write(',');\n      }\n\n      indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writer.write('}');\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4145b7b13874de95211223a6edb648da8794a688","date":1170182192,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","sourceNew":"  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writer.write('{');\n      incLevel();\n      isFirstVal=true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writer.write(',');\n      }\n\n      if (doIndent) indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writer.write('}');\n    }\n  }\n\n","sourceOld":"  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writer.write('{');\n      incLevel();\n      isFirstVal=true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? null : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writer.write(',');\n      }\n\n      if (doIndent) indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writer.write('}');\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13baf5514709a27de4ff67151d35b715138d158d","date":1186803122,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","sourceNew":"  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal=true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","sourceOld":"  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writer.write('{');\n      incLevel();\n      isFirstVal=true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writer.write(',');\n      }\n\n      if (doIndent) indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writer.write('}');\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10b17ff7ad534c3b34a34944d80a87d217011d9c","date":1263262796,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeMap(String,Map,boolean,boolean).mjava","sourceNew":"  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal=true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","sourceOld":"  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal=true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c0e301b711811c6aaee90440cc1a7925fdd1a1e":["434ff4225627b937a533128f8746eb1e9009fc95"],"434ff4225627b937a533128f8746eb1e9009fc95":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"13baf5514709a27de4ff67151d35b715138d158d":["4145b7b13874de95211223a6edb648da8794a688"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"10b17ff7ad534c3b34a34944d80a87d217011d9c":["13baf5514709a27de4ff67151d35b715138d158d"],"33cc9654dcc924fba2edb3806775ab729024a7e7":["0c0e301b711811c6aaee90440cc1a7925fdd1a1e"],"4145b7b13874de95211223a6edb648da8794a688":["33cc9654dcc924fba2edb3806775ab729024a7e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0c0e301b711811c6aaee90440cc1a7925fdd1a1e":["33cc9654dcc924fba2edb3806775ab729024a7e7"],"434ff4225627b937a533128f8746eb1e9009fc95":["0c0e301b711811c6aaee90440cc1a7925fdd1a1e"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["434ff4225627b937a533128f8746eb1e9009fc95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"13baf5514709a27de4ff67151d35b715138d158d":["10b17ff7ad534c3b34a34944d80a87d217011d9c"],"10b17ff7ad534c3b34a34944d80a87d217011d9c":[],"33cc9654dcc924fba2edb3806775ab729024a7e7":["4145b7b13874de95211223a6edb648da8794a688"],"4145b7b13874de95211223a6edb648da8794a688":["13baf5514709a27de4ff67151d35b715138d158d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["10b17ff7ad534c3b34a34944d80a87d217011d9c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}