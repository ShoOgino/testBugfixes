{"path":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForFactory.PForIndexInput.PForBlockReader#PForBlockReader(IndexInput,int[]).mjava","commits":[{"id":"824ab25acd22f2eca198755bafab3cb8b7878493","date":1341276186,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForFactory.PForIndexInput.PForBlockReader#PForBlockReader(IndexInput,int[]).mjava","pathOld":"/dev/null","sourceNew":"      PForBlockReader(final IndexInput in, final int[] buffer) {\n        this.encoded = new byte[blockSize*8+4];\n        this.in=in;\n        this.buffer=buffer;\n        this.encodedBuffer=ByteBuffer.wrap(encoded).asIntBuffer();\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be018b0169a6be675a2dc2ef9aa334e7dd7e2f8","date":1341362584,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForFactory.PForIndexInput.PForBlockReader#PForBlockReader(IndexInput,int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForFactory.PForIndexInput.PForBlockReader#PForBlockReader(IndexInput,int[]).mjava","sourceNew":"      PForBlockReader(final IndexInput in, final int[] buffer) {\n        this.encoded = new byte[blockSize*8+4];\n        this.in = in;\n        this.buffer = buffer;\n        this.encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      }\n\n","sourceOld":"      PForBlockReader(final IndexInput in, final int[] buffer) {\n        this.encoded = new byte[blockSize*8+4];\n        this.in=in;\n        this.buffer=buffer;\n        this.encodedBuffer=ByteBuffer.wrap(encoded).asIntBuffer();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5373bc7574123da55ae25e216b6d768ccb1dcd91","date":1342013351,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForFactory.PForIndexInput.PForBlockReader#PForBlockReader(IndexInput,int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForFactory.PForIndexInput.PForBlockReader#PForBlockReader(IndexInput,int[]).mjava","sourceNew":"      PForBlockReader(final IndexInput in, final int[] buffer) {\n        // upperbound for encoded value should include:\n        // 1. blockSize of normal value (4x bytes); \n        // 2. blockSize of exception value (4x bytes);\n        // 3. header (4bytes);\n        this.encoded = new byte[blockSize*8+4];\n        this.in = in;\n        this.buffer = buffer;\n        this.encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      }\n\n","sourceOld":"      PForBlockReader(final IndexInput in, final int[] buffer) {\n        this.encoded = new byte[blockSize*8+4];\n        this.in = in;\n        this.buffer = buffer;\n        this.encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a91a0a325d8dbf4d5759c5b368c5eae7ec8483b5","date":1342443326,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForFactory.PForIndexInput.PForBlockReader#PForBlockReader(IndexInput,int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForFactory.PForIndexInput.PForBlockReader#PForBlockReader(IndexInput,int[]).mjava","sourceNew":"      PForBlockReader(final IndexInput in, final int[] buffer) {\n        // upperbound for encoded value should include(here header is not buffered):\n        // 1. blockSize of normal value (4x bytes); \n        // 2. blockSize of exception value (4x bytes);\n        this.encoded = new byte[PForPostingsFormat.DEFAULT_BLOCK_SIZE*8];\n        this.in = in;\n        this.buffer = buffer;\n        this.encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      }\n\n","sourceOld":"      PForBlockReader(final IndexInput in, final int[] buffer) {\n        // upperbound for encoded value should include:\n        // 1. blockSize of normal value (4x bytes); \n        // 2. blockSize of exception value (4x bytes);\n        // 3. header (4bytes);\n        this.encoded = new byte[blockSize*8+4];\n        this.in = in;\n        this.buffer = buffer;\n        this.encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForFactory.PForIndexInput.PForBlockReader#PForBlockReader(IndexInput,int[]).mjava","sourceNew":null,"sourceOld":"      PForBlockReader(final IndexInput in, final int[] buffer) {\n        // upperbound for encoded value should include(here header is not buffered):\n        // 1. blockSize of normal value (4x bytes); \n        // 2. blockSize of exception value (4x bytes);\n        this.encoded = new byte[PForPostingsFormat.DEFAULT_BLOCK_SIZE*8];\n        this.in = in;\n        this.buffer = buffer;\n        this.encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"824ab25acd22f2eca198755bafab3cb8b7878493":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a91a0a325d8dbf4d5759c5b368c5eae7ec8483b5"],"8be018b0169a6be675a2dc2ef9aa334e7dd7e2f8":["824ab25acd22f2eca198755bafab3cb8b7878493"],"5373bc7574123da55ae25e216b6d768ccb1dcd91":["8be018b0169a6be675a2dc2ef9aa334e7dd7e2f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a91a0a325d8dbf4d5759c5b368c5eae7ec8483b5":["5373bc7574123da55ae25e216b6d768ccb1dcd91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"824ab25acd22f2eca198755bafab3cb8b7878493":["8be018b0169a6be675a2dc2ef9aa334e7dd7e2f8"],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":[],"8be018b0169a6be675a2dc2ef9aa334e7dd7e2f8":["5373bc7574123da55ae25e216b6d768ccb1dcd91"],"5373bc7574123da55ae25e216b6d768ccb1dcd91":["a91a0a325d8dbf4d5759c5b368c5eae7ec8483b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["824ab25acd22f2eca198755bafab3cb8b7878493","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a91a0a325d8dbf4d5759c5b368c5eae7ec8483b5":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}