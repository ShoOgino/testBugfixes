{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testDelete().mjava","commits":[{"id":"22c400c38732e4cee017b09622fb10e5c55b04b8","date":1334921975,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testDelete().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    try {\n      server.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    server.setParser(new XMLResponseParser());\n    try {\n      server.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2425308ebcd91b538a601df94ae1551ccaab2bb","date":1340702883,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    try {\n      server.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    server.setParser(new XMLResponseParser());\n    try {\n      server.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    server.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    try {\n      server.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    server.setParser(new XMLResponseParser());\n    try {\n      server.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    try {\n      server.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    server.setParser(new XMLResponseParser());\n    try {\n      server.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    server.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    try {\n      server.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    server.setParser(new XMLResponseParser());\n    try {\n      server.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa11c355cd3b3b9207608b85fbd33b34f6f1966e","date":1361303536,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() +\n                                               \"/debug/foo\");\n    try {\n      server.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    server.setParser(new XMLResponseParser());\n    try {\n      server.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    server.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    try {\n      server.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    server.setParser(new XMLResponseParser());\n    try {\n      server.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrClient client = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\");\n    try {\n      client.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    client.setParser(new XMLResponseParser());\n    try {\n      client.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    client.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() +\n                                               \"/debug/foo\");\n    try {\n      server.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    server.setParser(new XMLResponseParser());\n    try {\n      server.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fa11c355cd3b3b9207608b85fbd33b34f6f1966e":["f2425308ebcd91b538a601df94ae1551ccaab2bb"],"22c400c38732e4cee017b09622fb10e5c55b04b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["22c400c38732e4cee017b09622fb10e5c55b04b8","f2425308ebcd91b538a601df94ae1551ccaab2bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["fa11c355cd3b3b9207608b85fbd33b34f6f1966e"],"f2425308ebcd91b538a601df94ae1551ccaab2bb":["22c400c38732e4cee017b09622fb10e5c55b04b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"fa11c355cd3b3b9207608b85fbd33b34f6f1966e":["bafca15d8e408346a67f4282ad1143b88023893b"],"22c400c38732e4cee017b09622fb10e5c55b04b8":["fe33227f6805edab2036cbb80645cc4e2d1fa424","f2425308ebcd91b538a601df94ae1551ccaab2bb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22c400c38732e4cee017b09622fb10e5c55b04b8"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2425308ebcd91b538a601df94ae1551ccaab2bb":["fa11c355cd3b3b9207608b85fbd33b34f6f1966e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}