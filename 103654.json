{"path":"lucene/src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      isOptimized = infos.size() == 1 && !infos.info(0).hasDeletions();\n    }\n\n","sourceOld":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      isOptimized = infos.size() == 1 && !infos.info(0).hasDeletions();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      segmentCount = infos.size();\n    }\n\n","sourceOld":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      isOptimized = infos.size() == 1 && !infos.info(0).hasDeletions();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c01638f4dd94981c1d3d52c4f7991246a5a24aba","date":1327876712,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      generation = infos.getGeneration();\n      segmentCount = infos.size();\n    }\n\n","sourceOld":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      segmentCount = infos.size();\n    }\n\n","bugFix":["59818e85900870556e1bdd604772c77d74f57d89"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      generation = infos.getGeneration();\n      segmentCount = infos.size();\n    }\n\n","sourceOld":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      segmentCount = infos.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      generation = infos.getGeneration();\n      segmentCount = infos.size();\n    }\n\n","sourceOld":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      segmentCount = infos.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3","date":1328092914,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StandardDirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      generation = infos.getGeneration();\n      segmentCount = infos.size();\n    }\n\n","sourceOld":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      generation = infos.getGeneration();\n      segmentCount = infos.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}