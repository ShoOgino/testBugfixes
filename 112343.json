{"path":"solr/core/src/test/org/apache/solr/cloud/TestExclusionRuleCollectionAccess#doTest().mjava","commits":[{"id":"9b26da217d39e3ab00cf66ccad07eb82d19d520a","date":1442427418,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestExclusionRuleCollectionAccess#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    CollectionAdminRequest.Create req = new CollectionAdminRequest.Create();\n    req.setCollectionName(\"css33\");\n    req.setNumShards(1);\n    req.process(cloudClient);\n    \n    waitForRecoveriesToFinish(\"css33\", false);\n    \n    try (SolrClient c = createCloudClient(\"css33\")) {\n      c.add(getDoc(\"id\", \"1\"));\n      c.commit();\n\n      assertEquals(\"Should have returned 1 result\", 1, c.query(params(\"q\", \"*:*\", \"collection\", \"css33\")).getResults().getNumFound());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"636a04bc82e662bf141a55f1d10f52e1c76c727b","date":1483014160,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestExclusionRuleCollectionAccess#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestExclusionRuleCollectionAccess#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n\n    CollectionAdminRequest.createCollection(\"css33\", \"conf\", 1, 1).process(cluster.getSolrClient());\n\n    new UpdateRequest()\n        .add(\"id\", \"1\")\n        .commit(cluster.getSolrClient(), \"css33\");\n\n    assertEquals(\"Should have returned 1 result\", 1,\n        cluster.getSolrClient().query(\"css33\", params(\"q\", \"*:*\", \"collection\", \"css33\")).getResults().getNumFound());\n\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    CollectionAdminRequest.Create req = new CollectionAdminRequest.Create();\n    req.setCollectionName(\"css33\");\n    req.setNumShards(1);\n    req.process(cloudClient);\n    \n    waitForRecoveriesToFinish(\"css33\", false);\n    \n    try (SolrClient c = createCloudClient(\"css33\")) {\n      c.add(getDoc(\"id\", \"1\"));\n      c.commit();\n\n      assertEquals(\"Should have returned 1 result\", 1, c.query(params(\"q\", \"*:*\", \"collection\", \"css33\")).getResults().getNumFound());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestExclusionRuleCollectionAccess#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestExclusionRuleCollectionAccess#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n\n    CollectionAdminRequest.createCollection(\"css33\", \"conf\", 1, 1).process(cluster.getSolrClient());\n\n    new UpdateRequest()\n        .add(\"id\", \"1\")\n        .commit(cluster.getSolrClient(), \"css33\");\n\n    assertEquals(\"Should have returned 1 result\", 1,\n        cluster.getSolrClient().query(\"css33\", params(\"q\", \"*:*\", \"collection\", \"css33\")).getResults().getNumFound());\n\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    CollectionAdminRequest.Create req = new CollectionAdminRequest.Create();\n    req.setCollectionName(\"css33\");\n    req.setNumShards(1);\n    req.process(cloudClient);\n    \n    waitForRecoveriesToFinish(\"css33\", false);\n    \n    try (SolrClient c = createCloudClient(\"css33\")) {\n      c.add(getDoc(\"id\", \"1\"));\n      c.commit();\n\n      assertEquals(\"Should have returned 1 result\", 1, c.query(params(\"q\", \"*:*\", \"collection\", \"css33\")).getResults().getNumFound());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"636a04bc82e662bf141a55f1d10f52e1c76c727b":["9b26da217d39e3ab00cf66ccad07eb82d19d520a"],"9b26da217d39e3ab00cf66ccad07eb82d19d520a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["636a04bc82e662bf141a55f1d10f52e1c76c727b"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["9b26da217d39e3ab00cf66ccad07eb82d19d520a","636a04bc82e662bf141a55f1d10f52e1c76c727b"]},"commit2Childs":{"636a04bc82e662bf141a55f1d10f52e1c76c727b":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"9b26da217d39e3ab00cf66ccad07eb82d19d520a":["636a04bc82e662bf141a55f1d10f52e1c76c727b","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b26da217d39e3ab00cf66ccad07eb82d19d520a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}