{"path":"solr/core/src/test/org/apache/solr/cloud/PeerSyncReplicationTest#distribSetUp().mjava","commits":[{"id":"4c835cc1a7b07477a469cdb1bf6c67bc05b85c07","date":1471849333,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/PeerSyncReplicationTest#distribSetUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    // tlog gets deleted after node restarts if we use CachingDirectoryFactory.\n    // make sure that tlog stays intact after we restart a node\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"tests.zk.violationReportAction\", LimitViolationAction.IGNORE.toString());\n    super.distribSetUp();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","date":1472163016,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/PeerSyncReplicationTest#distribSetUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    // tlog gets deleted after node restarts if we use CachingDirectoryFactory.\n    // make sure that tlog stays intact after we restart a node\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"tests.zk.violationReportAction\", LimitViolationAction.IGNORE.toString());\n    super.distribSetUp();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/PeerSyncReplicationTest#distribSetUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    // tlog gets deleted after node restarts if we use CachingDirectoryFactory.\n    // make sure that tlog stays intact after we restart a node\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"tests.zk.violationReportAction\", LimitViolationAction.IGNORE.toString());\n    super.distribSetUp();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56fa6695578129446663f523f13cc1c89f17f4b7","date":1502361381,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/PeerSyncReplicationTest#distribSetUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/PeerSyncReplicationTest#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    // set socket timeout small, so replica won't be put into LIR state when they restart\n    System.setProperty(\"distribUpdateSoTimeout\", \"3000\");\n    // tlog gets deleted after node restarts if we use CachingDirectoryFactory.\n    // make sure that tlog stays intact after we restart a node\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"tests.zk.violationReportAction\", LimitViolationAction.IGNORE.toString());\n    super.distribSetUp();\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    // tlog gets deleted after node restarts if we use CachingDirectoryFactory.\n    // make sure that tlog stays intact after we restart a node\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"tests.zk.violationReportAction\", LimitViolationAction.IGNORE.toString());\n    super.distribSetUp();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58884af1f68e9d61c217c753fbd6266d86a63b14","date":1502363401,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/PeerSyncReplicationTest#distribSetUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/PeerSyncReplicationTest#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    // set socket timeout small, so replica won't be put into LIR state when they restart\n    System.setProperty(\"distribUpdateSoTimeout\", \"3000\");\n    // tlog gets deleted after node restarts if we use CachingDirectoryFactory.\n    // make sure that tlog stays intact after we restart a node\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"tests.zk.violationReportAction\", LimitViolationAction.IGNORE.toString());\n    super.distribSetUp();\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    // tlog gets deleted after node restarts if we use CachingDirectoryFactory.\n    // make sure that tlog stays intact after we restart a node\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"tests.zk.violationReportAction\", LimitViolationAction.IGNORE.toString());\n    super.distribSetUp();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","date":1502692251,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/PeerSyncReplicationTest#distribSetUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/PeerSyncReplicationTest#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    // set socket timeout small, so replica won't be put into LIR state when they restart\n    System.setProperty(\"distribUpdateSoTimeout\", \"3000\");\n    // tlog gets deleted after node restarts if we use CachingDirectoryFactory.\n    // make sure that tlog stays intact after we restart a node\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"tests.zk.violationReportAction\", LimitViolationAction.IGNORE.toString());\n    super.distribSetUp();\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    // tlog gets deleted after node restarts if we use CachingDirectoryFactory.\n    // make sure that tlog stays intact after we restart a node\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"tests.zk.violationReportAction\", LimitViolationAction.IGNORE.toString());\n    super.distribSetUp();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56fa6695578129446663f523f13cc1c89f17f4b7":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"58884af1f68e9d61c217c753fbd6266d86a63b14":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","56fa6695578129446663f523f13cc1c89f17f4b7"],"4c835cc1a7b07477a469cdb1bf6c67bc05b85c07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","56fa6695578129446663f523f13cc1c89f17f4b7"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4c835cc1a7b07477a469cdb1bf6c67bc05b85c07"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56fa6695578129446663f523f13cc1c89f17f4b7"]},"commit2Childs":{"56fa6695578129446663f523f13cc1c89f17f4b7":["58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"58884af1f68e9d61c217c753fbd6266d86a63b14":[],"4c835cc1a7b07477a469cdb1bf6c67bc05b85c07":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c835cc1a7b07477a469cdb1bf6c67bc05b85c07","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":[],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["56fa6695578129446663f523f13cc1c89f17f4b7","58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}