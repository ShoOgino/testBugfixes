{"path":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","pathOld":"solr/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","sourceNew":"  private void reloadCore() {\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not restart core \", e);\n        }\n      }\n    }.start();\n  }\n\n","sourceOld":"  private void reloadCore() {\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not restart core \", e);\n        }\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","pathOld":"solr/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","sourceNew":"  private void reloadCore() {\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not restart core \", e);\n        }\n      }\n    }.start();\n  }\n\n","sourceOld":"  private void reloadCore() {\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not restart core \", e);\n        }\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","pathOld":"solr/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","sourceNew":"  private void reloadCore() {\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not restart core \", e);\n        }\n      }\n    }.start();\n  }\n\n","sourceOld":"  private void reloadCore() {\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not restart core \", e);\n        }\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35b85bcb9f4029b10b1fcd20934d760755940bb2","date":1363925237,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","sourceNew":"  private void reloadCore() {\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not reload core \", e);\n        }\n      }\n    }.start();\n  }\n\n","sourceOld":"  private void reloadCore() {\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not restart core \", e);\n        }\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1615f6fc540ecd5dea7b03d2bac9a18bba69d5c","date":1385048407,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","sourceNew":"  private void reloadCore() {\n    final CountDownLatch latch = new CountDownLatch(1);\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not reload core \", e);\n        } finally {\n          latch.countDown();\n        }\n      }\n    }.start();\n    try {\n      latch.await();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(\"Interrupted while waiting for core reload to finish\", e);\n    }\n  }\n\n","sourceOld":"  private void reloadCore() {\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not reload core \", e);\n        }\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","sourceNew":"  private void reloadCore() {\n    final CountDownLatch latch = new CountDownLatch(1);\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not reload core \", e);\n        } finally {\n          latch.countDown();\n        }\n      }\n    }.start();\n    try {\n      latch.await();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(\"Interrupted while waiting for core reload to finish\", e);\n    }\n  }\n\n","sourceOld":"  private void reloadCore() {\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not reload core \", e);\n        }\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":5,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#reloadCore().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","sourceNew":"  private void reloadCore() {\n    final CountDownLatch latch = new CountDownLatch(1);\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not reload core \", e);\n        } finally {\n          latch.countDown();\n        }\n      }\n    }.start();\n    try {\n      latch.await();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(\"Interrupted while waiting for core reload to finish\", e);\n    }\n  }\n\n","sourceOld":"  private void reloadCore() {\n    final CountDownLatch latch = new CountDownLatch(1);\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not reload core \", e);\n        } finally {\n          latch.countDown();\n        }\n      }\n    }.start();\n    try {\n      latch.await();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(\"Interrupted while waiting for core reload to finish\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":5,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#reloadCore().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#reloadCore().mjava","sourceNew":"  private void reloadCore() {\n    final CountDownLatch latch = new CountDownLatch(1);\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not reload core \", e);\n        } finally {\n          latch.countDown();\n        }\n      }\n    }.start();\n    try {\n      latch.await();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(\"Interrupted while waiting for core reload to finish\", e);\n    }\n  }\n\n","sourceOld":"  private void reloadCore() {\n    final CountDownLatch latch = new CountDownLatch(1);\n    new Thread() {\n      @Override\n      public void run() {\n        try {\n          solrCore.getCoreDescriptor().getCoreContainer().reload(solrCore.getName());\n        } catch (Exception e) {\n          LOG.error(\"Could not reload core \", e);\n        } finally {\n          latch.countDown();\n        }\n      }\n    }.start();\n    try {\n      latch.await();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(\"Interrupted while waiting for core reload to finish\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"35b85bcb9f4029b10b1fcd20934d760755940bb2":["c26f00b574427b55127e869b935845554afde1fa"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["b1615f6fc540ecd5dea7b03d2bac9a18bba69d5c","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["b1615f6fc540ecd5dea7b03d2bac9a18bba69d5c"],"b1615f6fc540ecd5dea7b03d2bac9a18bba69d5c":["35b85bcb9f4029b10b1fcd20934d760755940bb2"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["35b85bcb9f4029b10b1fcd20934d760755940bb2","b1615f6fc540ecd5dea7b03d2bac9a18bba69d5c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20f6b7cff3771384f27af0f059795d7e64aff6b9"]},"commit2Childs":{"35b85bcb9f4029b10b1fcd20934d760755940bb2":["b1615f6fc540ecd5dea7b03d2bac9a18bba69d5c","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b1615f6fc540ecd5dea7b03d2bac9a18bba69d5c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["35b85bcb9f4029b10b1fcd20934d760755940bb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}