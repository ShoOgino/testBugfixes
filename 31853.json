{"path":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","commits":[{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#refill().mjava","sourceNew":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    bufferLength = (int)(end - start);\n    if (bufferLength == 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null)\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","sourceOld":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length)\t\t\t\t  // don't read past EOF\n      end = length;\n    bufferLength = (int)(end - start);\n    if (bufferLength == 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null)\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3010cada9d96622fd4edef234fcef6d5f977093d","date":1101648835,"type":3,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","pathOld":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","sourceNew":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    bufferLength = (int)(end - start);\n    if (bufferLength <= 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null)\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","sourceOld":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    bufferLength = (int)(end - start);\n    if (bufferLength == 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null)\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","bugFix":null,"bugIntro":["2e40e7e910b7a5d8fe0bc0b9d557777a31eb0b20"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"df55db8df0b39215fb051a610e43c653a444540e","date":1180035767,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","pathOld":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","sourceNew":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    bufferLength = (int)(end - start);\n    if (bufferLength <= 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null) {\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n      seekInternal(bufferStart);\n    }\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","sourceOld":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    bufferLength = (int)(end - start);\n    if (bufferLength <= 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null)\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f6dba7919de4ff4ed6ff17f90619203772722f08","date":1180451647,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","pathOld":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","sourceNew":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + bufferSize;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    bufferLength = (int)(end - start);\n    if (bufferLength <= 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null) {\n      buffer = new byte[bufferSize];\t\t  // allocate buffer lazily\n      seekInternal(bufferStart);\n    }\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","sourceOld":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    bufferLength = (int)(end - start);\n    if (bufferLength <= 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null) {\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n      seekInternal(bufferStart);\n    }\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2e40e7e910b7a5d8fe0bc0b9d557777a31eb0b20","date":1208127317,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","pathOld":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","sourceNew":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + bufferSize;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    int newLength = (int)(end - start);\n    if (newLength <= 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null) {\n      buffer = new byte[bufferSize];\t\t  // allocate buffer lazily\n      seekInternal(bufferStart);\n    }\n    readInternal(buffer, 0, newLength);\n    bufferLength = newLength;\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","sourceOld":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + bufferSize;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    bufferLength = (int)(end - start);\n    if (bufferLength <= 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null) {\n      buffer = new byte[bufferSize];\t\t  // allocate buffer lazily\n      seekInternal(bufferStart);\n    }\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","bugFix":["91109046a59c58ee0ee5d0d2767b08d1f30d6702","3010cada9d96622fd4edef234fcef6d5f977093d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d34c8b8a760c050d0e5c4b802584b3de2002e431","date":1220117586,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","pathOld":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","sourceNew":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + bufferSize;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    int newLength = (int)(end - start);\n    if (newLength <= 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null) {\n      newBuffer(new byte[bufferSize]);  // allocate buffer lazily\n      seekInternal(bufferStart);\n    }\n    readInternal(buffer, 0, newLength);\n    bufferLength = newLength;\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","sourceOld":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + bufferSize;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    int newLength = (int)(end - start);\n    if (newLength <= 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null) {\n      buffer = new byte[bufferSize];\t\t  // allocate buffer lazily\n      seekInternal(bufferStart);\n    }\n    readInternal(buffer, 0, newLength);\n    bufferLength = newLength;\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","pathOld":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","sourceNew":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + bufferSize;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    int newLength = (int)(end - start);\n    if (newLength <= 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null) {\n      newBuffer(new byte[bufferSize]);  // allocate buffer lazily\n      seekInternal(bufferStart);\n    }\n    readInternal(buffer, 0, newLength);\n    bufferLength = newLength;\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","sourceOld":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + bufferSize;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    int newLength = (int)(end - start);\n    if (newLength <= 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null) {\n      newBuffer(new byte[bufferSize]);  // allocate buffer lazily\n      seekInternal(bufferStart);\n    }\n    readInternal(buffer, 0, newLength);\n    bufferLength = newLength;\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e971ba25509e21a130fef61f0687be0446ca27a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"df55db8df0b39215fb051a610e43c653a444540e":["3010cada9d96622fd4edef234fcef6d5f977093d"],"f6dba7919de4ff4ed6ff17f90619203772722f08":["df55db8df0b39215fb051a610e43c653a444540e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2e40e7e910b7a5d8fe0bc0b9d557777a31eb0b20":["f6dba7919de4ff4ed6ff17f90619203772722f08"],"3010cada9d96622fd4edef234fcef6d5f977093d":["e971ba25509e21a130fef61f0687be0446ca27a0"],"d34c8b8a760c050d0e5c4b802584b3de2002e431":["2e40e7e910b7a5d8fe0bc0b9d557777a31eb0b20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d34c8b8a760c050d0e5c4b802584b3de2002e431"]},"commit2Childs":{"e971ba25509e21a130fef61f0687be0446ca27a0":["3010cada9d96622fd4edef234fcef6d5f977093d"],"df55db8df0b39215fb051a610e43c653a444540e":["f6dba7919de4ff4ed6ff17f90619203772722f08"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e971ba25509e21a130fef61f0687be0446ca27a0"],"f6dba7919de4ff4ed6ff17f90619203772722f08":["2e40e7e910b7a5d8fe0bc0b9d557777a31eb0b20"],"2e40e7e910b7a5d8fe0bc0b9d557777a31eb0b20":["d34c8b8a760c050d0e5c4b802584b3de2002e431"],"3010cada9d96622fd4edef234fcef6d5f977093d":["df55db8df0b39215fb051a610e43c653a444540e"],"d34c8b8a760c050d0e5c4b802584b3de2002e431":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}