{"path":"contrib/velocity/src/main/java/org/apache/solr/request/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"4e371e5cc5fa0d900720a4a38ecf0b81ed44a6cd","date":1225474382,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/velocity/src/main/java/org/apache/solr/request/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null)\n      results_per_page = new Integer(rows);\n\n    DocSlice doc_slice = (DocSlice) response.getValues().get(\"response\");\n\n    if (doc_slice != null) {\n      results_found = doc_slice.matches();\n      start = doc_slice.offset();\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7aaa7f25000922a539c76c80ed2dd412e6c1bfe1","date":1237470044,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/velocity/src/main/java/org/apache/solr/request/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"contrib/velocity/src/main/java/org/apache/solr/request/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    DocSlice doc_slice = (DocSlice) response.getValues().get(\"response\");\n\n    if (doc_slice != null) {\n      results_found = doc_slice.matches();\n      start = doc_slice.offset();\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null)\n      results_per_page = new Integer(rows);\n\n    DocSlice doc_slice = (DocSlice) response.getValues().get(\"response\");\n\n    if (doc_slice != null) {\n      results_found = doc_slice.matches();\n      start = doc_slice.offset();\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fff005c9cddc3f2dbfaf1eb5ee26ee0394cde095","date":1241390283,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/velocity/src/main/java/org/apache/solr/request/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"contrib/velocity/src/main/java/org/apache/solr/request/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    DocSlice doc_slice = (DocSlice) response.getValues().get(\"response\");\n\n    if (doc_slice != null) {\n      results_found = doc_slice.matches();\n      start = doc_slice.offset();\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65c941e8dcb3bb0ee6b785e349a931111c65e8ff","date":1268850890,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/velocity/src/main/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"contrib/velocity/src/main/java/org/apache/solr/request/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb0c840fcaa8a53dc8e038a0f7776c84283637f9","date":1268855982,"type":5,"author":"Yonik Seeley","isMerge":true,"pathNew":"contrib/velocity/src/main/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"contrib/velocity/src/main/java/org/apache/solr/request/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65c941e8dcb3bb0ee6b785e349a931111c65e8ff":["fff005c9cddc3f2dbfaf1eb5ee26ee0394cde095"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"fff005c9cddc3f2dbfaf1eb5ee26ee0394cde095":["7aaa7f25000922a539c76c80ed2dd412e6c1bfe1"],"4e371e5cc5fa0d900720a4a38ecf0b81ed44a6cd":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"7aaa7f25000922a539c76c80ed2dd412e6c1bfe1":["4e371e5cc5fa0d900720a4a38ecf0b81ed44a6cd"],"fb0c840fcaa8a53dc8e038a0f7776c84283637f9":["fff005c9cddc3f2dbfaf1eb5ee26ee0394cde095","65c941e8dcb3bb0ee6b785e349a931111c65e8ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"65c941e8dcb3bb0ee6b785e349a931111c65e8ff":["fb0c840fcaa8a53dc8e038a0f7776c84283637f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4e371e5cc5fa0d900720a4a38ecf0b81ed44a6cd"],"fff005c9cddc3f2dbfaf1eb5ee26ee0394cde095":["65c941e8dcb3bb0ee6b785e349a931111c65e8ff","fb0c840fcaa8a53dc8e038a0f7776c84283637f9"],"4e371e5cc5fa0d900720a4a38ecf0b81ed44a6cd":["7aaa7f25000922a539c76c80ed2dd412e6c1bfe1"],"7aaa7f25000922a539c76c80ed2dd412e6c1bfe1":["fff005c9cddc3f2dbfaf1eb5ee26ee0394cde095"],"fb0c840fcaa8a53dc8e038a0f7776c84283637f9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fb0c840fcaa8a53dc8e038a0f7776c84283637f9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}