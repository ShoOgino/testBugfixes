{"path":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"42f51b3ab4258ff4623227b0db011b8bb83db5c7","date":1358164991,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the {@link AtomicReaderContext} for which {@link #setNextDoc(int)}\n   * calls will be made. Returns true iff this reader has associations for any\n   * of the documents belonging to the association given to the constructor.\n   */\n  public final boolean setNextReader(AtomicReaderContext context) throws IOException {\n    hasAssociations = pi.setNextReader(context);\n    return hasAssociations;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the {@link AtomicReaderContext} for which {@link #setNextDoc(int)}\n   * calls will be made. Returns true iff this reader has associations for any\n   * of the documents belonging to the association given to the constructor.\n   */\n  public final boolean setNextReader(AtomicReaderContext context) throws IOException {\n    hasAssociations = pi.setNextReader(context);\n    return hasAssociations;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsIterator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  /**\n   * Sets the {@link AtomicReaderContext} for which {@link #setNextDoc(int)}\n   * calls will be made. Returns true iff this reader has associations for any\n   * of the documents belonging to the association given to the constructor.\n   */\n  public final boolean setNextReader(AtomicReaderContext context) throws IOException {\n    DocValues dv = context.reader().docValues(dvField);\n    if (dv == null) {\n      current = null;\n      return false;\n    }\n    \n    current = useDirectSource ? dv.getDirectSource() : dv.getSource();\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Sets the {@link AtomicReaderContext} for which {@link #setNextDoc(int)}\n   * calls will be made. Returns true iff this reader has associations for any\n   * of the documents belonging to the association given to the constructor.\n   */\n  public final boolean setNextReader(AtomicReaderContext context) throws IOException {\n    hasAssociations = pi.setNextReader(context);\n    return hasAssociations;\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsIterator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  /**\n   * Sets the {@link AtomicReaderContext} for which {@link #setNextDoc(int)}\n   * calls will be made. Returns true iff this reader has associations for any\n   * of the documents belonging to the association given to the constructor.\n   */\n  public final boolean setNextReader(AtomicReaderContext context) throws IOException {\n    current = context.reader().getBinaryDocValues(dvField);\n    return current != null;\n  }\n\n","sourceOld":"  /**\n   * Sets the {@link AtomicReaderContext} for which {@link #setNextDoc(int)}\n   * calls will be made. Returns true iff this reader has associations for any\n   * of the documents belonging to the association given to the constructor.\n   */\n  public final boolean setNextReader(AtomicReaderContext context) throws IOException {\n    hasAssociations = pi.setNextReader(context);\n    return hasAssociations;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["8917bfede3b4ca30f4305c1e391e9218959cd723","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0"]},"commit2Childs":{"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["8917bfede3b4ca30f4305c1e391e9218959cd723","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"8917bfede3b4ca30f4305c1e391e9218959cd723":["c4015cd39dff8d4dec562d909f9766debac53aa6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["42f51b3ab4258ff4623227b0db011b8bb83db5c7","8917bfede3b4ca30f4305c1e391e9218959cd723"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}