{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#postUpdate(DocumentsWriterPerThread,boolean).mjava","commits":[{"id":"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27","date":1306166545,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#postUpdate(DocumentsWriterPerThread,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private boolean postUpdate(DocumentsWriterPerThread flushingDWPT, boolean maybeMerge) throws IOException {\n    if (flushingDWPT != null) {\n      maybeMerge |= doFlush(flushingDWPT);\n    } else {\n      final DocumentsWriterPerThread nextPendingFlush = flushControl.nextPendingFlush();\n      if (nextPendingFlush != null) {\n        maybeMerge |= doFlush(nextPendingFlush);\n      }\n    }\n\n    return maybeMerge;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#postUpdate(DocumentsWriterPerThread,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private boolean postUpdate(DocumentsWriterPerThread flushingDWPT, boolean maybeMerge) throws IOException {\n    if (flushingDWPT != null) {\n      maybeMerge |= doFlush(flushingDWPT);\n    } else {\n      final DocumentsWriterPerThread nextPendingFlush = flushControl.nextPendingFlush();\n      if (nextPendingFlush != null) {\n        maybeMerge |= doFlush(nextPendingFlush);\n      }\n    }\n\n    return maybeMerge;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#postUpdate(DocumentsWriterPerThread,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private boolean postUpdate(DocumentsWriterPerThread flushingDWPT, boolean maybeMerge) throws IOException {\n    if (flushingDWPT != null) {\n      maybeMerge |= doFlush(flushingDWPT);\n    } else {\n      final DocumentsWriterPerThread nextPendingFlush = flushControl.nextPendingFlush();\n      if (nextPendingFlush != null) {\n        maybeMerge |= doFlush(nextPendingFlush);\n      }\n    }\n\n    return maybeMerge;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7465988fd0a9c673dcb88f51473300c41d630f0","date":1311685662,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#postUpdate(DocumentsWriterPerThread,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#postUpdate(DocumentsWriterPerThread,boolean).mjava","sourceNew":"  private boolean postUpdate(DocumentsWriterPerThread flushingDWPT, boolean maybeMerge) throws IOException {\n    if (flushControl.doApplyAllDeletes()) {\n      applyAllDeletes(deleteQueue);\n    }\n    if (flushingDWPT != null) {\n      maybeMerge |= doFlush(flushingDWPT);\n    } else {\n      final DocumentsWriterPerThread nextPendingFlush = flushControl.nextPendingFlush();\n      if (nextPendingFlush != null) {\n        maybeMerge |= doFlush(nextPendingFlush);\n      }\n    }\n\n    return maybeMerge;\n  }\n\n","sourceOld":"  private boolean postUpdate(DocumentsWriterPerThread flushingDWPT, boolean maybeMerge) throws IOException {\n    if (flushingDWPT != null) {\n      maybeMerge |= doFlush(flushingDWPT);\n    } else {\n      final DocumentsWriterPerThread nextPendingFlush = flushControl.nextPendingFlush();\n      if (nextPendingFlush != null) {\n        maybeMerge |= doFlush(nextPendingFlush);\n      }\n    }\n\n    return maybeMerge;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#postUpdate(DocumentsWriterPerThread,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#postUpdate(DocumentsWriterPerThread,boolean).mjava","sourceNew":"  private boolean postUpdate(DocumentsWriterPerThread flushingDWPT, boolean maybeMerge) throws IOException {\n    if (flushControl.doApplyAllDeletes()) {\n      applyAllDeletes(deleteQueue);\n    }\n    if (flushingDWPT != null) {\n      maybeMerge |= doFlush(flushingDWPT);\n    } else {\n      final DocumentsWriterPerThread nextPendingFlush = flushControl.nextPendingFlush();\n      if (nextPendingFlush != null) {\n        maybeMerge |= doFlush(nextPendingFlush);\n      }\n    }\n\n    return maybeMerge;\n  }\n\n","sourceOld":"  private boolean postUpdate(DocumentsWriterPerThread flushingDWPT, boolean maybeMerge) throws IOException {\n    if (flushControl.doApplyAllDeletes()) {\n      applyAllDeletes(deleteQueue);\n    }\n    if (flushingDWPT != null) {\n      maybeMerge |= doFlush(flushingDWPT);\n    } else {\n      final DocumentsWriterPerThread nextPendingFlush = flushControl.nextPendingFlush();\n      if (nextPendingFlush != null) {\n        maybeMerge |= doFlush(nextPendingFlush);\n      }\n    }\n\n    return maybeMerge;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b7465988fd0a9c673dcb88f51473300c41d630f0"],"b7465988fd0a9c673dcb88f51473300c41d630f0":["2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"]},"commit2Childs":{"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","b7465988fd0a9c673dcb88f51473300c41d630f0","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7465988fd0a9c673dcb88f51473300c41d630f0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}