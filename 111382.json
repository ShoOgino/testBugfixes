{"path":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","pathOld":"/dev/null","sourceNew":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n      // System.out.println(\"added doc for \" + val);\n    }\n    assertU(optimize()); // squeeze out any possible deleted docs\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","sourceNew":null,"sourceOld":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n      // System.out.println(\"added doc for \" + val);\n    }\n    assertU(optimize()); // squeeze out any possible deleted docs\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","pathOld":"src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","sourceNew":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n      // System.out.println(\"added doc for \" + val);\n    }\n    assertU(optimize()); // squeeze out any possible deleted docs\n  }\n\n","sourceOld":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n      // System.out.println(\"added doc for \" + val);\n    }\n    assertU(optimize()); // squeeze out any possible deleted docs\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","pathOld":"/dev/null","sourceNew":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n      // System.out.println(\"added doc for \" + val);\n    }\n    assertU(optimize()); // squeeze out any possible deleted docs\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"03a7fa734f43779c4e7279f2a61a0d847320136e","date":1309297141,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","sourceNew":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random.nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random.nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","sourceOld":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n      // System.out.println(\"added doc for \" + val);\n    }\n    assertU(optimize()); // squeeze out any possible deleted docs\n  }\n\n","bugFix":["4aa57ace203f336e00a38867cb7e815ca4e1572e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","sourceNew":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random.nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random.nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","sourceOld":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n      // System.out.println(\"added doc for \" + val);\n    }\n    assertU(optimize()); // squeeze out any possible deleted docs\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","sourceNew":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random.nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random.nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","sourceOld":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n      // System.out.println(\"added doc for \" + val);\n    }\n    assertU(optimize()); // squeeze out any possible deleted docs\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","sourceNew":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random.nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random.nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","sourceOld":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random.nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random.nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","sourceNew":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random.nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random.nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","sourceOld":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random.nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random.nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","sourceNew":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random.nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random.nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","sourceOld":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random.nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random.nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"03a7fa734f43779c4e7279f2a61a0d847320136e":["1da8d55113b689b06716246649de6f62430f15c0"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["03a7fa734f43779c4e7279f2a61a0d847320136e","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["1da8d55113b689b06716246649de6f62430f15c0","03a7fa734f43779c4e7279f2a61a0d847320136e"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["1da8d55113b689b06716246649de6f62430f15c0","03a7fa734f43779c4e7279f2a61a0d847320136e"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["03a7fa734f43779c4e7279f2a61a0d847320136e"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"03a7fa734f43779c4e7279f2a61a0d847320136e":["c26f00b574427b55127e869b935845554afde1fa","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"1da8d55113b689b06716246649de6f62430f15c0":["03a7fa734f43779c4e7279f2a61a0d847320136e","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}