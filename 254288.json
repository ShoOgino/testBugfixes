{"path":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#collectInfo(String).mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#collectInfo(String).mjava","pathOld":"/dev/null","sourceNew":"  protected CollectionInfo collectInfo(String collection) throws Exception {\n    CollectionInfo info = new CollectionInfo(collection);\n    for (String shard : shardToJetty.get(collection).keySet()) {\n      List<CloudJettyRunner> jettyRunners = shardToJetty.get(collection).get(shard);\n      for (CloudJettyRunner jettyRunner : jettyRunners) {\n        SolrDispatchFilter filter = (SolrDispatchFilter) jettyRunner.jetty.getDispatchFilter().getFilter();\n        for (SolrCore core : filter.getCores().getCores()) {\n          info.addCore(core, shard, shardToLeaderJetty.get(collection).containsValue(jettyRunner));\n        }\n      }\n    }\n\n    return info;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1088b72b3b4cc45316b7595bd09023c859cd2327","date":1447150009,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#collectInfo(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#collectInfo(String).mjava","sourceNew":"  protected CollectionInfo collectInfo(String collection) throws Exception {\n    CollectionInfo info = new CollectionInfo(collection);\n    for (String shard : shardToJetty.get(collection).keySet()) {\n      List<CloudJettyRunner> jettyRunners = shardToJetty.get(collection).get(shard);\n      for (CloudJettyRunner jettyRunner : jettyRunners) {\n        for (SolrCore core : jettyRunner.jetty.getCoreContainer().getCores()) {\n          info.addCore(core, shard, shardToLeaderJetty.get(collection).containsValue(jettyRunner));\n        }\n      }\n    }\n\n    return info;\n  }\n\n","sourceOld":"  protected CollectionInfo collectInfo(String collection) throws Exception {\n    CollectionInfo info = new CollectionInfo(collection);\n    for (String shard : shardToJetty.get(collection).keySet()) {\n      List<CloudJettyRunner> jettyRunners = shardToJetty.get(collection).get(shard);\n      for (CloudJettyRunner jettyRunner : jettyRunners) {\n        SolrDispatchFilter filter = (SolrDispatchFilter) jettyRunner.jetty.getDispatchFilter().getFilter();\n        for (SolrCore core : filter.getCores().getCores()) {\n          info.addCore(core, shard, shardToLeaderJetty.get(collection).containsValue(jettyRunner));\n        }\n      }\n    }\n\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7da9d8536c11576df10e348efa79d2739170936","date":1509475399,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#collectInfo(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#collectInfo(String).mjava","sourceNew":"  protected CollectionInfo collectInfo(String collection) throws Exception {\n    CollectionInfo info = new CollectionInfo(collection);\n    for (String shard : shardToJetty.get(collection).keySet()) {\n      List<CloudJettyRunner> jettyRunners = shardToJetty.get(collection).get(shard);\n      for (CloudJettyRunner jettyRunner : jettyRunners) {\n        for (SolrCore core : jettyRunner.jetty.getCoreContainer().getCores()) {\n          info.addCore(core, shard, shardToLeaderJetty.get(collection).containsValue(jettyRunner));\n        }\n      }\n    }\n\n    return info;\n  }\n\n","sourceOld":"  protected CollectionInfo collectInfo(String collection) throws Exception {\n    CollectionInfo info = new CollectionInfo(collection);\n    for (String shard : shardToJetty.get(collection).keySet()) {\n      List<CloudJettyRunner> jettyRunners = shardToJetty.get(collection).get(shard);\n      for (CloudJettyRunner jettyRunner : jettyRunners) {\n        for (SolrCore core : jettyRunner.jetty.getCoreContainer().getCores()) {\n          info.addCore(core, shard, shardToLeaderJetty.get(collection).containsValue(jettyRunner));\n        }\n      }\n    }\n\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d","date":1509475828,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#collectInfo(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#collectInfo(String).mjava","sourceNew":"  protected CollectionInfo collectInfo(String collection) throws Exception {\n    CollectionInfo info = new CollectionInfo(collection);\n    for (String shard : shardToJetty.get(collection).keySet()) {\n      List<CloudJettyRunner> jettyRunners = shardToJetty.get(collection).get(shard);\n      for (CloudJettyRunner jettyRunner : jettyRunners) {\n        for (SolrCore core : jettyRunner.jetty.getCoreContainer().getCores()) {\n          info.addCore(core, shard, shardToLeaderJetty.get(collection).containsValue(jettyRunner));\n        }\n      }\n    }\n\n    return info;\n  }\n\n","sourceOld":"  protected CollectionInfo collectInfo(String collection) throws Exception {\n    CollectionInfo info = new CollectionInfo(collection);\n    for (String shard : shardToJetty.get(collection).keySet()) {\n      List<CloudJettyRunner> jettyRunners = shardToJetty.get(collection).get(shard);\n      for (CloudJettyRunner jettyRunner : jettyRunners) {\n        for (SolrCore core : jettyRunner.jetty.getCoreContainer().getCores()) {\n          info.addCore(core, shard, shardToLeaderJetty.get(collection).containsValue(jettyRunner));\n        }\n      }\n    }\n\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde","date":1509748659,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#collectInfo(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#collectInfo(String).mjava","sourceNew":"  protected CollectionInfo collectInfo(String collection) throws Exception {\n    CollectionInfo info = new CollectionInfo(collection);\n    for (String shard : shardToJetty.get(collection).keySet()) {\n      List<CloudJettyRunner> jettyRunners = shardToJetty.get(collection).get(shard);\n      for (CloudJettyRunner jettyRunner : jettyRunners) {\n        for (SolrCore core : jettyRunner.jetty.getCoreContainer().getCores()) {\n          info.addCore(core, shard, shardToLeaderJetty.get(collection).containsValue(jettyRunner));\n        }\n      }\n    }\n\n    return info;\n  }\n\n","sourceOld":"  protected CollectionInfo collectInfo(String collection) throws Exception {\n    CollectionInfo info = new CollectionInfo(collection);\n    for (String shard : shardToJetty.get(collection).keySet()) {\n      List<CloudJettyRunner> jettyRunners = shardToJetty.get(collection).get(shard);\n      for (CloudJettyRunner jettyRunner : jettyRunners) {\n        for (SolrCore core : jettyRunner.jetty.getCoreContainer().getCores()) {\n          info.addCore(core, shard, shardToLeaderJetty.get(collection).containsValue(jettyRunner));\n        }\n      }\n    }\n\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#collectInfo(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#collectInfo(String).mjava","sourceNew":"  protected CollectionInfo collectInfo(String collection) throws Exception {\n    CollectionInfo info = new CollectionInfo(collection);\n    for (String shard : shardToJetty.get(collection).keySet()) {\n      List<CloudJettyRunner> jettyRunners = shardToJetty.get(collection).get(shard);\n      for (CloudJettyRunner jettyRunner : jettyRunners) {\n        for (SolrCore core : jettyRunner.jetty.getCoreContainer().getCores()) {\n          info.addCore(core, shard, shardToLeaderJetty.get(collection).containsValue(jettyRunner));\n        }\n      }\n    }\n\n    return info;\n  }\n\n","sourceOld":"  protected CollectionInfo collectInfo(String collection) throws Exception {\n    CollectionInfo info = new CollectionInfo(collection);\n    for (String shard : shardToJetty.get(collection).keySet()) {\n      List<CloudJettyRunner> jettyRunners = shardToJetty.get(collection).get(shard);\n      for (CloudJettyRunner jettyRunner : jettyRunners) {\n        for (SolrCore core : jettyRunner.jetty.getCoreContainer().getCores()) {\n          info.addCore(core, shard, shardToLeaderJetty.get(collection).containsValue(jettyRunner));\n        }\n      }\n    }\n\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d"],"e7da9d8536c11576df10e348efa79d2739170936":["1088b72b3b4cc45316b7595bd09023c859cd2327"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d","fba58147c9753bb58bbfbd2ebbbf02aecc1eafde"],"1088b72b3b4cc45316b7595bd09023c859cd2327":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d":["e7da9d8536c11576df10e348efa79d2739170936"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"]},"commit2Childs":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["1088b72b3b4cc45316b7595bd09023c859cd2327"],"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"e7da9d8536c11576df10e348efa79d2739170936":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1088b72b3b4cc45316b7595bd09023c859cd2327":["e7da9d8536c11576df10e348efa79d2739170936"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d":["fba58147c9753bb58bbfbd2ebbbf02aecc1eafde","d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}