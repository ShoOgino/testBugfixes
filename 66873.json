{"path":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsEnum#reset(Bits,PulsingTermState).mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsEnum#reset(Bits,PulsingTermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsEnum#reset(Bits,PulsingTermState).mjava","sourceNew":"    public PulsingDocsEnum reset(Bits liveDocs, PulsingTermState termState) {\n      //System.out.println(\"PR docsEnum termState=\" + termState + \" docFreq=\" + termState.docFreq);\n      assert termState.postingsSize != -1;\n\n      // Must make a copy of termState's byte[] so that if\n      // app does TermsEnum.next(), this DocsEnum is not affected\n      if (postingsBytes == null) {\n        postingsBytes = new byte[termState.postingsSize];\n      } else if (postingsBytes.length < termState.postingsSize) {\n        postingsBytes = ArrayUtil.grow(postingsBytes, termState.postingsSize);\n      }\n      System.arraycopy(termState.postings, 0, postingsBytes, 0, termState.postingsSize);\n      postings.reset(postingsBytes, 0, termState.postingsSize);\n      docID = 0;\n      payloadLength = 0;\n      freq = 1;\n      this.liveDocs = liveDocs;\n      return this;\n    }\n\n","sourceOld":"    public PulsingDocsEnum reset(Bits liveDocs, PulsingTermState termState) {\n      //System.out.println(\"PR docsEnum termState=\" + termState + \" docFreq=\" + termState.docFreq);\n      assert termState.postingsSize != -1;\n      final byte[] bytes = new byte[termState.postingsSize];\n      System.arraycopy(termState.postings, 0, bytes, 0, termState.postingsSize);\n      postings.reset(bytes);\n      docID = 0;\n      payloadLength = 0;\n      freq = 1;\n      this.liveDocs = liveDocs;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ed947d41796fd2096684c439e8a9b69aac940cf","date":1321538339,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsEnum#reset(Bits,PulsingTermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsEnum#reset(Bits,PulsingTermState).mjava","sourceNew":"    public PulsingDocsEnum reset(Bits liveDocs, PulsingTermState termState) {\n      //System.out.println(\"PR docsEnum termState=\" + termState + \" docFreq=\" + termState.docFreq);\n      assert termState.postingsSize != -1;\n\n      // Must make a copy of termState's byte[] so that if\n      // app does TermsEnum.next(), this DocsEnum is not affected\n      if (postingsBytes == null) {\n        postingsBytes = new byte[termState.postingsSize];\n      } else if (postingsBytes.length < termState.postingsSize) {\n        postingsBytes = ArrayUtil.grow(postingsBytes, termState.postingsSize);\n      }\n      System.arraycopy(termState.postings, 0, postingsBytes, 0, termState.postingsSize);\n      postings.reset(postingsBytes, 0, termState.postingsSize);\n      docID = -1;\n      accum = 0;\n      payloadLength = 0;\n      freq = 1;\n      this.liveDocs = liveDocs;\n      return this;\n    }\n\n","sourceOld":"    public PulsingDocsEnum reset(Bits liveDocs, PulsingTermState termState) {\n      //System.out.println(\"PR docsEnum termState=\" + termState + \" docFreq=\" + termState.docFreq);\n      assert termState.postingsSize != -1;\n\n      // Must make a copy of termState's byte[] so that if\n      // app does TermsEnum.next(), this DocsEnum is not affected\n      if (postingsBytes == null) {\n        postingsBytes = new byte[termState.postingsSize];\n      } else if (postingsBytes.length < termState.postingsSize) {\n        postingsBytes = ArrayUtil.grow(postingsBytes, termState.postingsSize);\n      }\n      System.arraycopy(termState.postings, 0, postingsBytes, 0, termState.postingsSize);\n      postings.reset(postingsBytes, 0, termState.postingsSize);\n      docID = 0;\n      payloadLength = 0;\n      freq = 1;\n      this.liveDocs = liveDocs;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsEnum#reset(Bits,PulsingTermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsEnum#reset(Bits,PulsingTermState).mjava","sourceNew":"    public PulsingDocsEnum reset(Bits liveDocs, PulsingTermState termState) {\n      //System.out.println(\"PR docsEnum termState=\" + termState + \" docFreq=\" + termState.docFreq);\n      assert termState.postingsSize != -1;\n\n      // Must make a copy of termState's byte[] so that if\n      // app does TermsEnum.next(), this DocsEnum is not affected\n      if (postingsBytes == null) {\n        postingsBytes = new byte[termState.postingsSize];\n      } else if (postingsBytes.length < termState.postingsSize) {\n        postingsBytes = ArrayUtil.grow(postingsBytes, termState.postingsSize);\n      }\n      System.arraycopy(termState.postings, 0, postingsBytes, 0, termState.postingsSize);\n      postings.reset(postingsBytes, 0, termState.postingsSize);\n      docID = -1;\n      accum = 0;\n      payloadLength = 0;\n      this.liveDocs = liveDocs;\n      return this;\n    }\n\n","sourceOld":"    public PulsingDocsEnum reset(Bits liveDocs, PulsingTermState termState) {\n      //System.out.println(\"PR docsEnum termState=\" + termState + \" docFreq=\" + termState.docFreq);\n      assert termState.postingsSize != -1;\n\n      // Must make a copy of termState's byte[] so that if\n      // app does TermsEnum.next(), this DocsEnum is not affected\n      if (postingsBytes == null) {\n        postingsBytes = new byte[termState.postingsSize];\n      } else if (postingsBytes.length < termState.postingsSize) {\n        postingsBytes = ArrayUtil.grow(postingsBytes, termState.postingsSize);\n      }\n      System.arraycopy(termState.postings, 0, postingsBytes, 0, termState.postingsSize);\n      postings.reset(postingsBytes, 0, termState.postingsSize);\n      docID = -1;\n      accum = 0;\n      payloadLength = 0;\n      freq = 1;\n      this.liveDocs = liveDocs;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsEnum#reset(Bits,PulsingTermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsEnum#reset(Bits,PulsingTermState).mjava","sourceNew":"    public PulsingDocsEnum reset(Bits liveDocs, PulsingTermState termState) {\n      //System.out.println(\"PR docsEnum termState=\" + termState + \" docFreq=\" + termState.docFreq);\n      assert termState.postingsSize != -1;\n\n      // Must make a copy of termState's byte[] so that if\n      // app does TermsEnum.next(), this DocsEnum is not affected\n      if (postingsBytes == null) {\n        postingsBytes = new byte[termState.postingsSize];\n      } else if (postingsBytes.length < termState.postingsSize) {\n        postingsBytes = ArrayUtil.grow(postingsBytes, termState.postingsSize);\n      }\n      System.arraycopy(termState.postings, 0, postingsBytes, 0, termState.postingsSize);\n      postings.reset(postingsBytes, 0, termState.postingsSize);\n      docID = -1;\n      accum = 0;\n      payloadLength = 0;\n      this.liveDocs = liveDocs;\n      return this;\n    }\n\n","sourceOld":"    public PulsingDocsEnum reset(Bits liveDocs, PulsingTermState termState) {\n      //System.out.println(\"PR docsEnum termState=\" + termState + \" docFreq=\" + termState.docFreq);\n      assert termState.postingsSize != -1;\n\n      // Must make a copy of termState's byte[] so that if\n      // app does TermsEnum.next(), this DocsEnum is not affected\n      if (postingsBytes == null) {\n        postingsBytes = new byte[termState.postingsSize];\n      } else if (postingsBytes.length < termState.postingsSize) {\n        postingsBytes = ArrayUtil.grow(postingsBytes, termState.postingsSize);\n      }\n      System.arraycopy(termState.postings, 0, postingsBytes, 0, termState.postingsSize);\n      postings.reset(postingsBytes, 0, termState.postingsSize);\n      docID = -1;\n      accum = 0;\n      payloadLength = 0;\n      freq = 1;\n      this.liveDocs = liveDocs;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsEnum#reset(Bits,PulsingTermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsEnum#reset(Bits,PulsingTermState).mjava","sourceNew":"    public PulsingDocsEnum reset(Bits liveDocs, PulsingTermState termState) {\n      //System.out.println(\"PR docsEnum termState=\" + termState + \" docFreq=\" + termState.docFreq);\n      assert termState.postingsSize != -1;\n\n      // Must make a copy of termState's byte[] so that if\n      // app does TermsEnum.next(), this DocsEnum is not affected\n      if (postingsBytes == null) {\n        postingsBytes = new byte[termState.postingsSize];\n      } else if (postingsBytes.length < termState.postingsSize) {\n        postingsBytes = ArrayUtil.grow(postingsBytes, termState.postingsSize);\n      }\n      System.arraycopy(termState.postings, 0, postingsBytes, 0, termState.postingsSize);\n      postings.reset(postingsBytes, 0, termState.postingsSize);\n      docID = -1;\n      accum = 0;\n      payloadLength = 0;\n      this.liveDocs = liveDocs;\n      return this;\n    }\n\n","sourceOld":"    public PulsingDocsEnum reset(Bits liveDocs, PulsingTermState termState) {\n      //System.out.println(\"PR docsEnum termState=\" + termState + \" docFreq=\" + termState.docFreq);\n      assert termState.postingsSize != -1;\n\n      // Must make a copy of termState's byte[] so that if\n      // app does TermsEnum.next(), this DocsEnum is not affected\n      if (postingsBytes == null) {\n        postingsBytes = new byte[termState.postingsSize];\n      } else if (postingsBytes.length < termState.postingsSize) {\n        postingsBytes = ArrayUtil.grow(postingsBytes, termState.postingsSize);\n      }\n      System.arraycopy(termState.postings, 0, postingsBytes, 0, termState.postingsSize);\n      postings.reset(postingsBytes, 0, termState.postingsSize);\n      docID = -1;\n      accum = 0;\n      payloadLength = 0;\n      this.liveDocs = liveDocs;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1ed947d41796fd2096684c439e8a9b69aac940cf":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["1ed947d41796fd2096684c439e8a9b69aac940cf","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["1ed947d41796fd2096684c439e8a9b69aac940cf"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["872cff1d3a554e0cd64014cd97f88d3002b0f491"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["1ed947d41796fd2096684c439e8a9b69aac940cf"],"1ed947d41796fd2096684c439e8a9b69aac940cf":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}