{"path":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#jj_rescan_token().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#jj_rescan_token().mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#jj_rescan_token().mjava","sourceNew":"  private void jj_rescan_token() {\n    jj_rescan = true;\n    for (int i = 0; i < 1; i++) {\n    try {\n      JJCalls p = jj_2_rtns[i];\n      do {\n        if (p.gen > jj_gen) {\n          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;\n          switch (i) {\n            case 0: jj_3_1(); break;\n          }\n        }\n        p = p.next;\n      } while (p != null);\n      } catch(LookaheadSuccess ls) { }\n    }\n    jj_rescan = false;\n  }\n\n","sourceOld":"  private void jj_rescan_token() {\n    jj_rescan = true;\n    for (int i = 0; i < 1; i++) {\n    try {\n      JJCalls p = jj_2_rtns[i];\n      do {\n        if (p.gen > jj_gen) {\n          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;\n          switch (i) {\n            case 0: jj_3_1(); break;\n          }\n        }\n        p = p.next;\n      } while (p != null);\n      } catch(LookaheadSuccess ls) { }\n    }\n    jj_rescan = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","date":1310355420,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParser#jj_rescan_token().mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#jj_rescan_token().mjava","sourceNew":"  private void jj_rescan_token() {\n    jj_rescan = true;\n    for (int i = 0; i < 1; i++) {\n    try {\n      JJCalls p = jj_2_rtns[i];\n      do {\n        if (p.gen > jj_gen) {\n          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;\n          switch (i) {\n            case 0: jj_3_1(); break;\n          }\n        }\n        p = p.next;\n      } while (p != null);\n      } catch(LookaheadSuccess ls) { }\n    }\n    jj_rescan = false;\n  }\n\n","sourceOld":"  private void jj_rescan_token() {\n    jj_rescan = true;\n    for (int i = 0; i < 1; i++) {\n    try {\n      JJCalls p = jj_2_rtns[i];\n      do {\n        if (p.gen > jj_gen) {\n          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;\n          switch (i) {\n            case 0: jj_3_1(); break;\n          }\n        }\n        p = p.next;\n      } while (p != null);\n      } catch(LookaheadSuccess ls) { }\n    }\n    jj_rescan = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}