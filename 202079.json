{"path":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#genTempFile(String,String,File).mjava","commits":[{"id":"1e538cbd7f572f646f36c73053aea561d95c2cb2","date":1306660868,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#genTempFile(String,String,File).mjava","pathOld":"/dev/null","sourceNew":"  private static File genTempFile(String prefix, String suffix, File directory) {\n    int identify = 0;\n\n    synchronized (tempFileLocker) {\n      if (counter == 0) {\n        int newInt = new Random().nextInt();\n        counter = ((newInt / 65535) & 0xFFFF) + 0x2710;\n        counterBase = counter;\n      }\n      identify = counter++;\n    }\n\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#genTempFile(String,String,File).mjava","pathOld":"/dev/null","sourceNew":"  private static File genTempFile(String prefix, String suffix, File directory) {\n    int identify = 0;\n\n    synchronized (tempFileLocker) {\n      if (counter == 0) {\n        int newInt = new Random().nextInt();\n        counter = ((newInt / 65535) & 0xFFFF) + 0x2710;\n        counterBase = counter;\n      }\n      identify = counter++;\n    }\n\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#genTempFile(String,String,File).mjava","pathOld":"/dev/null","sourceNew":"  private static File genTempFile(String prefix, String suffix, File directory) {\n    int identify = 0;\n\n    synchronized (tempFileLocker) {\n      if (counter == 0) {\n        int newInt = new Random().nextInt();\n        counter = ((newInt / 65535) & 0xFFFF) + 0x2710;\n        counterBase = counter;\n      }\n      identify = counter++;\n    }\n\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#genTempFile(String,String,File).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#genTempFile(String,String,File).mjava","sourceNew":"  private static File genTempFile(String prefix, String suffix, File directory) {\n    int identify = 0;\n\n    synchronized (tempFileLocker) {\n      if (counter == 0) {\n        int newInt = new Random().nextInt();\n        counter = ((newInt / 65535) & 0xFFFF) + 0x2710;\n        counterBase = counter;\n      }\n      identify = counter++;\n    }\n\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","sourceOld":"  private static File genTempFile(String prefix, String suffix, File directory) {\n    int identify = 0;\n\n    synchronized (tempFileLocker) {\n      if (counter == 0) {\n        int newInt = new Random().nextInt();\n        counter = ((newInt / 65535) & 0xFFFF) + 0x2710;\n        counterBase = counter;\n      }\n      identify = counter++;\n    }\n\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["1e538cbd7f572f646f36c73053aea561d95c2cb2"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1e538cbd7f572f646f36c73053aea561d95c2cb2"],"1e538cbd7f572f646f36c73053aea561d95c2cb2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1e538cbd7f572f646f36c73053aea561d95c2cb2"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"1e538cbd7f572f646f36c73053aea561d95c2cb2":["7b91922b55d15444d554721b352861d028eb8278","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","1e538cbd7f572f646f36c73053aea561d95c2cb2","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}