{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#rewrite(IndexReader).mjava","commits":[{"id":"8a093d23e938d132b81b5f2de3d6b168afe3608e","date":1455076308,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#rewrite(IndexReader).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointInBBoxQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // short-circuit to match all if specifying the whole map\n    if (minLon == GeoUtils.MIN_LON_INCL && maxLon == GeoUtils.MAX_LON_INCL\n        && minLat == GeoUtils.MIN_LAT_INCL && maxLat == GeoUtils.MAX_LAT_INCL) {\n      // FieldValueQuery is valid since DocValues are *required* for GeoPointField\n      return new FieldValueQuery(field);\n    }\n\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointInBBoxQueryImpl left = new GeoPointInBBoxQueryImpl(field, termEncoding, -180.0D, minLat, maxLon, maxLat);\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointInBBoxQueryImpl right = new GeoPointInBBoxQueryImpl(field, termEncoding, minLon, minLat, 180.0D, maxLat);\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointInBBoxQueryImpl(field, termEncoding, minLon, minLat, maxLon, maxLat);\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // short-circuit to match all if specifying the whole map\n    if (minLon == GeoUtils.MIN_LON_INCL && maxLon == GeoUtils.MAX_LON_INCL\n        && minLat == GeoUtils.MIN_LAT_INCL && maxLat == GeoUtils.MAX_LAT_INCL) {\n      // FieldValueQuery is valid since DocValues are *required* for GeoPointField\n      return new FieldValueQuery(field);\n    }\n\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointInBBoxQueryImpl left = new GeoPointInBBoxQueryImpl(field, termEncoding, -180.0D, minLat, maxLon, maxLat);\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointInBBoxQueryImpl right = new GeoPointInBBoxQueryImpl(field, termEncoding, minLon, minLat, 180.0D, maxLat);\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointInBBoxQueryImpl(field, termEncoding, minLon, minLat, maxLon, maxLat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#rewrite(IndexReader).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // short-circuit to match all if specifying the whole map\n    if (minLat == GeoUtils.MIN_LAT_INCL && maxLat == GeoUtils.MAX_LAT_INCL &&\n        minLon == GeoUtils.MIN_LON_INCL && maxLon == GeoUtils.MAX_LON_INCL) {\n      // FieldValueQuery is valid since DocValues are *required* for GeoPointField\n      return new FieldValueQuery(field);\n    }\n\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointInBBoxQueryImpl left = new GeoPointInBBoxQueryImpl(field, termEncoding, minLat, maxLat, -180.0D, maxLon);\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointInBBoxQueryImpl right = new GeoPointInBBoxQueryImpl(field, termEncoding, minLat, maxLat, minLon, 180.0D);\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointInBBoxQueryImpl(field, termEncoding, minLat, maxLat, minLon, maxLon);\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // short-circuit to match all if specifying the whole map\n    if (minLon == GeoUtils.MIN_LON_INCL && maxLon == GeoUtils.MAX_LON_INCL\n        && minLat == GeoUtils.MIN_LAT_INCL && maxLat == GeoUtils.MAX_LAT_INCL) {\n      // FieldValueQuery is valid since DocValues are *required* for GeoPointField\n      return new FieldValueQuery(field);\n    }\n\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointInBBoxQueryImpl left = new GeoPointInBBoxQueryImpl(field, termEncoding, -180.0D, minLat, maxLon, maxLat);\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointInBBoxQueryImpl right = new GeoPointInBBoxQueryImpl(field, termEncoding, minLon, minLat, 180.0D, maxLat);\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointInBBoxQueryImpl(field, termEncoding, minLon, minLat, maxLon, maxLat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be46ccf1a05985ba9fec84cb8674b607a23d5442","date":1465576866,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#rewrite(IndexReader).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // short-circuit to match all if specifying the whole map\n    if (minLat == GeoUtils.MIN_LAT_INCL && maxLat == GeoUtils.MAX_LAT_INCL &&\n        minLon == GeoUtils.MIN_LON_INCL && maxLon == GeoUtils.MAX_LON_INCL) {\n      // FieldValueQuery is valid since DocValues are *required* for GeoPointField\n      return new FieldValueQuery(field);\n    }\n\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointInBBoxQueryImpl left = new GeoPointInBBoxQueryImpl(field, minLat, maxLat, -180.0D, maxLon);\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointInBBoxQueryImpl right = new GeoPointInBBoxQueryImpl(field, minLat, maxLat, minLon, 180.0D);\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointInBBoxQueryImpl(field, minLat, maxLat, minLon, maxLon);\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // short-circuit to match all if specifying the whole map\n    if (minLat == GeoUtils.MIN_LAT_INCL && maxLat == GeoUtils.MAX_LAT_INCL &&\n        minLon == GeoUtils.MIN_LON_INCL && maxLon == GeoUtils.MAX_LON_INCL) {\n      // FieldValueQuery is valid since DocValues are *required* for GeoPointField\n      return new FieldValueQuery(field);\n    }\n\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointInBBoxQueryImpl left = new GeoPointInBBoxQueryImpl(field, termEncoding, minLat, maxLat, -180.0D, maxLon);\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointInBBoxQueryImpl right = new GeoPointInBBoxQueryImpl(field, termEncoding, minLat, maxLat, minLon, 180.0D);\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointInBBoxQueryImpl(field, termEncoding, minLat, maxLat, minLon, maxLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#rewrite(IndexReader).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // short-circuit to match all if specifying the whole map\n    if (minLat == GeoUtils.MIN_LAT_INCL && maxLat == GeoUtils.MAX_LAT_INCL &&\n        minLon == GeoUtils.MIN_LON_INCL && maxLon == GeoUtils.MAX_LON_INCL) {\n      // FieldValueQuery is valid since DocValues are *required* for GeoPointField\n      return new FieldValueQuery(field);\n    }\n\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointInBBoxQueryImpl left = new GeoPointInBBoxQueryImpl(field, minLat, maxLat, -180.0D, maxLon);\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointInBBoxQueryImpl right = new GeoPointInBBoxQueryImpl(field, minLat, maxLat, minLon, 180.0D);\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointInBBoxQueryImpl(field, minLat, maxLat, minLon, maxLon);\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // short-circuit to match all if specifying the whole map\n    if (minLat == GeoUtils.MIN_LAT_INCL && maxLat == GeoUtils.MAX_LAT_INCL &&\n        minLon == GeoUtils.MIN_LON_INCL && maxLon == GeoUtils.MAX_LON_INCL) {\n      // FieldValueQuery is valid since DocValues are *required* for GeoPointField\n      return new FieldValueQuery(field);\n    }\n\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointInBBoxQueryImpl left = new GeoPointInBBoxQueryImpl(field, termEncoding, minLat, maxLat, -180.0D, maxLon);\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointInBBoxQueryImpl right = new GeoPointInBBoxQueryImpl(field, termEncoding, minLat, maxLat, minLon, 180.0D);\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointInBBoxQueryImpl(field, termEncoding, minLat, maxLat, minLon, maxLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc53adde67e2fa905526fcf1e14e3c9e1e64821","date":1486416055,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#rewrite(IndexReader).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // short-circuit to match all if specifying the whole map\n    if (minLat == GeoUtils.MIN_LAT_INCL && maxLat == GeoUtils.MAX_LAT_INCL &&\n        minLon == GeoUtils.MIN_LON_INCL && maxLon == GeoUtils.MAX_LON_INCL) {\n      // FieldValueQuery is valid since DocValues are *required* for GeoPointField\n      return new FieldValueQuery(field);\n    }\n\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointInBBoxQueryImpl left = new GeoPointInBBoxQueryImpl(field, minLat, maxLat, -180.0D, maxLon);\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointInBBoxQueryImpl right = new GeoPointInBBoxQueryImpl(field, minLat, maxLat, minLon, 180.0D);\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointInBBoxQueryImpl(field, minLat, maxLat, minLon, maxLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7dc53adde67e2fa905526fcf1e14e3c9e1e64821":["be46ccf1a05985ba9fec84cb8674b607a23d5442"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"be46ccf1a05985ba9fec84cb8674b607a23d5442":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ec996bf2daff09d61a876319e8fae4aebbea58e3","be46ccf1a05985ba9fec84cb8674b607a23d5442"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc53adde67e2fa905526fcf1e14e3c9e1e64821"]},"commit2Childs":{"7dc53adde67e2fa905526fcf1e14e3c9e1e64821":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["be46ccf1a05985ba9fec84cb8674b607a23d5442","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"be46ccf1a05985ba9fec84cb8674b607a23d5442":["7dc53adde67e2fa905526fcf1e14e3c9e1e64821","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}