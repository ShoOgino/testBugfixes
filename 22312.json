{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","sourceNew":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","sourceOld":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","sourceNew":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open( dir, true );\n  }\n\n","sourceOld":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","sourceNew":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open( dir, true );\n  }\n\n","sourceOld":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","sourceNew":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorOffsets(true);\n    customType.setStoreTermVectorPositions(true);\n    for( String value: values ) {\n      doc.add( new Field( F, customType, value ) );\n    }\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open( dir, true );\n  }\n\n","sourceOld":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","sourceNew":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorOffsets(true);\n    customType.setStoreTermVectorPositions(true);\n    for( String value: values ) {\n      doc.add( new Field( F, value, customType) );\n    }\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open( dir, true );\n  }\n\n","sourceOld":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorOffsets(true);\n    customType.setStoreTermVectorPositions(true);\n    for( String value: values ) {\n      doc.add( new Field( F, customType, value ) );\n    }\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","sourceNew":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorOffsets(true);\n    customType.setStoreTermVectorPositions(true);\n    for( String value: values ) {\n      doc.add( new Field( F, value, customType) );\n    }\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open(dir);\n  }\n\n","sourceOld":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorOffsets(true);\n    customType.setStoreTermVectorPositions(true);\n    for( String value: values ) {\n      doc.add( new Field( F, value, customType) );\n    }\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","sourceNew":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorOffsets(true);\n    customType.setStoreTermVectorPositions(true);\n    for( String value: values ) {\n      doc.add( new Field( F, value, customType) );\n    }\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open(dir);\n  }\n\n","sourceOld":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorOffsets(true);\n    customType.setStoreTermVectorPositions(true);\n    for( String value: values ) {\n      doc.add( new Field( F, value, customType) );\n    }\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","sourceNew":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorOffsets(true);\n    customType.setStoreTermVectorPositions(true);\n    for( String value: values ) {\n      doc.add( new Field( F, value, customType) );\n    }\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open(dir);\n  }\n\n","sourceOld":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorOffsets(true);\n    customType.setStoreTermVectorPositions(true);\n    for( String value: values ) {\n      doc.add( new Field( F, value, customType) );\n    }\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndex(Analyzer,String...).mjava","sourceNew":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorOffsets(true);\n    customType.setStoreTermVectorPositions(true);\n    for( String value: values ) {\n      doc.add( new Field( F, value, customType) );\n    }\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open(dir);\n  }\n\n","sourceOld":"  // make 1 doc with multi valued field\n  protected void make1dmfIndex( Analyzer analyzer, String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorOffsets(true);\n    customType.setStoreTermVectorPositions(true);\n    for( String value: values ) {\n      doc.add( new Field( F, value, customType) );\n    }\n    writer.addDocument( doc );\n    writer.close();\n    if (reader != null) reader.close();\n    reader = IndexReader.open(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af","ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1509f151d7692d84fae414b2b799ac06ba60fcb4","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}