{"path":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","commits":[{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String id, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    id = IndexFileNames.stripSegmentName(id);\n    final FileEntry entry = entries.get(id);\n    if (entry == null)\n      throw new IOException(\"No sub-file with id \" + id + \" found (files: \" + entries.keySet() + \")\");\n    \n    return openInputSlice(id, entry.offset, entry.length, readBufferSize);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,int).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String id, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    id = IndexFileNames.stripSegmentName(id);\n    final FileEntry entry = entries.get(id);\n    if (entry == null)\n      throw new IOException(\"No sub-file with id \" + id + \" found (files: \" + entries.keySet() + \")\");\n    \n    return openInputSlice(id, entry.offset, entry.length, readBufferSize);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String id, int readBufferSize) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    id = IndexFileNames.stripSegmentName(id);\n    final FileEntry entry = entries.get(id);\n    if (entry == null)\n      throw new IOException(\"No sub-file with id \" + id + \" found (files: \" + entries.keySet() + \")\");\n    \n    return openInputSlice(id, entry.offset, entry.length, readBufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,int).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String id, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    id = IndexFileNames.stripSegmentName(id);\n    final FileEntry entry = entries.get(id);\n    if (entry == null)\n      throw new IOException(\"No sub-file with id \" + id + \" found (files: \" + entries.keySet() + \")\");\n    \n    return openInputSlice(id, entry.offset, entry.length, readBufferSize);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String id, int readBufferSize) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    id = IndexFileNames.stripSegmentName(id);\n    final FileEntry entry = entries.get(id);\n    if (entry == null)\n      throw new IOException(\"No sub-file with id \" + id + \" found (files: \" + entries.keySet() + \")\");\n    \n    return openInputSlice(id, entry.offset, entry.length, readBufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String fileName, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(fileName);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new IOException(\"No sub-file with id \" + id + \" found (fileName=\" + fileName + \" files: \" + entries.keySet() + \")\");\n    }\n    return openInputSlice(id, entry.offset, entry.length, readBufferSize);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String id, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    id = IndexFileNames.stripSegmentName(id);\n    final FileEntry entry = entries.get(id);\n    if (entry == null)\n      throw new IOException(\"No sub-file with id \" + id + \" found (files: \" + entries.keySet() + \")\");\n    \n    return openInputSlice(id, entry.offset, entry.length, readBufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67aadace85f701c87a4e0721eedcda25d8415a70","date":1314201925,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new IOException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.openSlice(entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String fileName, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(fileName);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new IOException(\"No sub-file with id \" + id + \" found (fileName=\" + fileName + \" files: \" + entries.keySet() + \")\");\n    }\n    return openInputSlice(id, entry.offset, entry.length, readBufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1efe3edca215dd9891cb42af283fed96f792ca0","date":1320428891,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new IOException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.openSlice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new IOException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.openSlice(entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5090f41e198d9dd9374e99981f940b111973af2","date":1325969785,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.openSlice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new IOException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.openSlice(name, entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.openSlice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.openSlice(name, entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"67aadace85f701c87a4e0721eedcda25d8415a70":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e5090f41e198d9dd9374e99981f940b111973af2"],"f1efe3edca215dd9891cb42af283fed96f792ca0":["67aadace85f701c87a4e0721eedcda25d8415a70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"e5090f41e198d9dd9374e99981f940b111973af2":["f1efe3edca215dd9891cb42af283fed96f792ca0"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["67aadace85f701c87a4e0721eedcda25d8415a70"],"67aadace85f701c87a4e0721eedcda25d8415a70":["f1efe3edca215dd9891cb42af283fed96f792ca0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1efe3edca215dd9891cb42af283fed96f792ca0":["e5090f41e198d9dd9374e99981f940b111973af2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["60ba444201d2570214b6fcf1d15600dc1a01f548","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"e5090f41e198d9dd9374e99981f940b111973af2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}