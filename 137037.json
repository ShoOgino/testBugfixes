{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#queryAndCompareShards(SolrParams).mjava","commits":[{"id":"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9","date":1371479482,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#queryAndCompareShards(SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * For each Shard, executes a query against each live and active replica of that shard\n   * and asserts that the results are identical for each replica of the same shard.  \n   * Because results are not compared between replicas of different shards, this method \n   * should be safe for comparing the results of any query, even if it contains \n   * \"distrib=false\", because the replicas should all be identical.\n   *\n   * @see AbstractFullDistribZkTestBase#queryAndCompareReplicas(SolrParams, String)\n   */\n  public void queryAndCompareShards(SolrParams params) throws Exception {\n\n    updateMappingsFromZk(jettys, clients);\n    List<String> shards = new ArrayList<String>(shardToJetty.keySet());\n    for (String shard : shards) {\n      queryAndCompareReplicas(params, shard);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#queryAndCompareShards(SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * For each Shard, executes a query against each live and active replica of that shard\n   * and asserts that the results are identical for each replica of the same shard.  \n   * Because results are not compared between replicas of different shards, this method \n   * should be safe for comparing the results of any query, even if it contains \n   * \"distrib=false\", because the replicas should all be identical.\n   *\n   * @see AbstractFullDistribZkTestBase#queryAndCompareReplicas(SolrParams, String)\n   */\n  public void queryAndCompareShards(SolrParams params) throws Exception {\n\n    updateMappingsFromZk(jettys, clients);\n    List<String> shards = new ArrayList<String>(shardToJetty.keySet());\n    for (String shard : shards) {\n      queryAndCompareReplicas(params, shard);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#queryAndCompareShards(SolrParams).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#queryAndCompareShards(SolrParams).mjava","sourceNew":"  /**\n   * For each Shard, executes a query against each live and active replica of that shard\n   * and asserts that the results are identical for each replica of the same shard.  \n   * Because results are not compared between replicas of different shards, this method \n   * should be safe for comparing the results of any query, even if it contains \n   * \"distrib=false\", because the replicas should all be identical.\n   *\n   * @see AbstractFullDistribZkTestBase#queryAndCompareReplicas(SolrParams, String)\n   */\n  public void queryAndCompareShards(SolrParams params) throws Exception {\n\n    updateMappingsFromZk(jettys, clients);\n    List<String> shards = new ArrayList<>(shardToJetty.keySet());\n    for (String shard : shards) {\n      queryAndCompareReplicas(params, shard);\n    }\n  }\n\n","sourceOld":"  /**\n   * For each Shard, executes a query against each live and active replica of that shard\n   * and asserts that the results are identical for each replica of the same shard.  \n   * Because results are not compared between replicas of different shards, this method \n   * should be safe for comparing the results of any query, even if it contains \n   * \"distrib=false\", because the replicas should all be identical.\n   *\n   * @see AbstractFullDistribZkTestBase#queryAndCompareReplicas(SolrParams, String)\n   */\n  public void queryAndCompareShards(SolrParams params) throws Exception {\n\n    updateMappingsFromZk(jettys, clients);\n    List<String> shards = new ArrayList<String>(shardToJetty.keySet());\n    for (String shard : shards) {\n      queryAndCompareReplicas(params, shard);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#queryAndCompareShards(SolrParams).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#queryAndCompareShards(SolrParams).mjava","sourceNew":"  /**\n   * For each Shard, executes a query against each live and active replica of that shard\n   * and asserts that the results are identical for each replica of the same shard.\n   * Because results are not compared between replicas of different shards, this method\n   * should be safe for comparing the results of any query, even if it contains\n   * \"distrib=false\", because the replicas should all be identical.\n   *\n   * @see AbstractFullDistribZkTestBase#queryAndCompareReplicas(SolrParams, String)\n   */\n  public void queryAndCompareShards(SolrParams params) throws Exception {\n\n    updateMappingsFromZk(jettys, clients);\n    List<String> shards = new ArrayList<>(shardToJetty.keySet());\n    for (String shard : shards) {\n      queryAndCompareReplicas(params, shard);\n    }\n  }\n\n","sourceOld":"  /**\n   * For each Shard, executes a query against each live and active replica of that shard\n   * and asserts that the results are identical for each replica of the same shard.  \n   * Because results are not compared between replicas of different shards, this method \n   * should be safe for comparing the results of any query, even if it contains \n   * \"distrib=false\", because the replicas should all be identical.\n   *\n   * @see AbstractFullDistribZkTestBase#queryAndCompareReplicas(SolrParams, String)\n   */\n  public void queryAndCompareShards(SolrParams params) throws Exception {\n\n    updateMappingsFromZk(jettys, clients);\n    List<String> shards = new ArrayList<>(shardToJetty.keySet());\n    for (String shard : shards) {\n      queryAndCompareReplicas(params, shard);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9"],"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9"],"abb23fcc2461782ab204e61213240feb77d355aa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["abb23fcc2461782ab204e61213240feb77d355aa"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["abb23fcc2461782ab204e61213240feb77d355aa"],"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"abb23fcc2461782ab204e61213240feb77d355aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}