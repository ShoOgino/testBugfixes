{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#postings(PostingsEnum,int).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#postings(PostingsEnum,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#postings(Bits,PostingsEnum,int).mjava","sourceNew":"    @Override\n    public PostingsEnum postings(PostingsEnum reuse, int flags) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED: \"docs(...) called on unpositioned TermsEnum\";\n\n      // reuse if the codec reused\n      final PostingsEnum actualReuse;\n      if (reuse instanceof AssertingPostingsEnum) {\n        actualReuse = ((AssertingPostingsEnum) reuse).in;\n      } else {\n        actualReuse = null;\n      }\n      PostingsEnum docs = super.postings(actualReuse, flags);\n      assert docs != null;\n      if (docs == actualReuse) {\n        // codec reused, reset asserting state\n        ((AssertingPostingsEnum)reuse).reset();\n        return reuse;\n      } else {\n        return new AssertingPostingsEnum(docs);\n      }\n    }\n\n","sourceOld":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED: \"docs(...) called on unpositioned TermsEnum\";\n\n      // reuse if the codec reused\n      final PostingsEnum actualReuse;\n      if (reuse instanceof AssertingPostingsEnum) {\n        actualReuse = ((AssertingPostingsEnum) reuse).in;\n      } else {\n        actualReuse = null;\n      }\n      PostingsEnum docs = super.postings(liveDocs, actualReuse, flags);\n      assert docs != null;\n      if (docs == actualReuse) {\n        // codec reused, reset asserting state\n        ((AssertingPostingsEnum)reuse).reset();\n        return reuse;\n      } else {\n        return new AssertingPostingsEnum(docs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}