{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","commits":[{"id":"19f5022544a8fc895776356d1b35a4b46d05945c","date":1385063323,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","pathOld":"/dev/null","sourceNew":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(null, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"a (2)\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae75def1e2525383b6e1397ed97c44387da9941c","date":1385249238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","sourceNew":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"a (2)\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(null, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"a (2)\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f01616d06510fc630b6ef0ec324bdebc2fc49b3c","date":1385331328,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","sourceNew":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"a (2)\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","sourceNew":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"19f5022544a8fc895776356d1b35a4b46d05945c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["ae75def1e2525383b6e1397ed97c44387da9941c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae75def1e2525383b6e1397ed97c44387da9941c":["19f5022544a8fc895776356d1b35a4b46d05945c"]},"commit2Childs":{"19f5022544a8fc895776356d1b35a4b46d05945c":["ae75def1e2525383b6e1397ed97c44387da9941c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["19f5022544a8fc895776356d1b35a4b46d05945c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["21d36d0db865f7b84026b447bec653469a6e66df"],"ae75def1e2525383b6e1397ed97c44387da9941c":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}