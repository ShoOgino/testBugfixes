{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getParent(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getParent(int).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getParent(int).mjava","sourceNew":"  /**\n   * getParent() returns the ordinal of the parent category of the category\n   * with the given ordinal.\n   * <P>\n   * When a category is specified as a path name, finding the path of its\n   * parent is as trivial as dropping the last component of the path.\n   * getParent() is functionally equivalent to calling getPath() on the\n   * given ordinal, dropping the last component of the path, and then calling\n   * getOrdinal() to get an ordinal back. However, implementations are\n   * expected to provide a much more efficient implementation:\n   * <P>\n   * getParent() should be a very quick method, as it is used during the\n   * facet aggregation process in faceted search. Implementations will most\n   * likely want to serve replies to this method from a pre-filled cache.\n   * <P>\n   * If the given ordinal is the ROOT_ORDINAL, an INVALID_ORDINAL is returned.\n   * If the given ordinal is a top-level category, the ROOT_ORDINAL is returned.\n   * If an invalid ordinal is given (negative or beyond the last available\n   * ordinal), an ArrayIndexOutOfBoundsException is thrown. However, it is\n   * expected that getParent will only be called for ordinals which are\n   * already known to be in the taxonomy.\n   */\n  public int getParent(int ordinal) throws IOException;\n\n","sourceOld":"  /**\n   * getParent() returns the ordinal of the parent category of the category\n   * with the given ordinal.\n   * <P>\n   * When a category is specified as a path name, finding the path of its\n   * parent is as trivial as dropping the last component of the path.\n   * getParent() is functionally equivalent to calling getPath() on the\n   * given ordinal, dropping the last component of the path, and then calling\n   * getOrdinal() to get an ordinal back. However, implementations are\n   * expected to provide a much more efficient implementation:\n   * <P>\n   * getParent() should be a very quick method, as it is used during the\n   * facet aggregation process in faceted search. Implementations will most\n   * likely want to serve replies to this method from a pre-filled cache.\n   * <P>\n   * If the given ordinal is the ROOT_ORDINAL, an INVALID_ORDINAL is returned.\n   * If the given ordinal is a top-level category, the ROOT_ORDINAL is returned.\n   * If an invalid ordinal is given (negative or beyond the last available\n   * ordinal), an ArrayIndexOutOfBoundsException is thrown. However, it is\n   * expected that getParent will only be called for ordinals which are\n   * already known to be in the taxonomy.\n   */\n  public int getParent(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getParent(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getParent(int).mjava","sourceNew":"  /**\n   * Returns the ordinal of the parent category of the category with the given\n   * ordinal, according to the following rules:\n   * \n   * \n   * <ul>\n   * <li>If the given ordinal is the {@link #ROOT_ORDINAL}, an\n   * {@link #INVALID_ORDINAL} is returned.\n   * <li>If the given ordinal is a top-level category, the {@link #ROOT_ORDINAL}\n   * is returned.\n   * <li>If the given ordinal is an existing category, returns the ordinal of\n   * its parent\n   * </ul>\n   * \n   * @throws ArrayIndexOutOfBoundsException\n   *           if an invalid ordinal is given (negative or beyond the last\n   *           available ordinal)\n   */\n  public abstract int getParent(int ordinal) throws IOException;\n\n","sourceOld":"  /**\n   * getParent() returns the ordinal of the parent category of the category\n   * with the given ordinal.\n   * <P>\n   * When a category is specified as a path name, finding the path of its\n   * parent is as trivial as dropping the last component of the path.\n   * getParent() is functionally equivalent to calling getPath() on the\n   * given ordinal, dropping the last component of the path, and then calling\n   * getOrdinal() to get an ordinal back. However, implementations are\n   * expected to provide a much more efficient implementation:\n   * <P>\n   * getParent() should be a very quick method, as it is used during the\n   * facet aggregation process in faceted search. Implementations will most\n   * likely want to serve replies to this method from a pre-filled cache.\n   * <P>\n   * If the given ordinal is the ROOT_ORDINAL, an INVALID_ORDINAL is returned.\n   * If the given ordinal is a top-level category, the ROOT_ORDINAL is returned.\n   * If an invalid ordinal is given (negative or beyond the last available\n   * ordinal), an ArrayIndexOutOfBoundsException is thrown. However, it is\n   * expected that getParent will only be called for ordinals which are\n   * already known to be in the taxonomy.\n   */\n  public int getParent(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d58d08788c3fd51172ba34474cca42499d6391b","date":1354802133,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getParent(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getParent(int).mjava","sourceNew":"  /**\n   * Returns the ordinal of the parent category of the category with the given\n   * ordinal, according to the following rules:\n   * \n   * <ul>\n   * <li>If the given ordinal is the {@link #ROOT_ORDINAL}, an\n   * {@link #INVALID_ORDINAL} is returned.\n   * <li>If the given ordinal is a top-level category, the {@link #ROOT_ORDINAL}\n   * is returned.\n   * <li>If the given ordinal is an existing category, returns the ordinal of\n   * its parent\n   * </ul>\n   * \n   * @throws ArrayIndexOutOfBoundsException\n   *           if an invalid ordinal is given (negative or beyond the last\n   *           available ordinal)\n   */\n  public abstract int getParent(int ordinal) throws IOException;\n\n","sourceOld":"  /**\n   * Returns the ordinal of the parent category of the category with the given\n   * ordinal, according to the following rules:\n   * \n   * \n   * <ul>\n   * <li>If the given ordinal is the {@link #ROOT_ORDINAL}, an\n   * {@link #INVALID_ORDINAL} is returned.\n   * <li>If the given ordinal is a top-level category, the {@link #ROOT_ORDINAL}\n   * is returned.\n   * <li>If the given ordinal is an existing category, returns the ordinal of\n   * its parent\n   * </ul>\n   * \n   * @throws ArrayIndexOutOfBoundsException\n   *           if an invalid ordinal is given (negative or beyond the last\n   *           available ordinal)\n   */\n  public abstract int getParent(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getParent(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getParent(int).mjava","sourceNew":"  /**\n   * Returns the ordinal of the parent category of the category with the given\n   * ordinal, according to the following rules:\n   * \n   * <ul>\n   * <li>If the given ordinal is the {@link #ROOT_ORDINAL}, an\n   * {@link #INVALID_ORDINAL} is returned.\n   * <li>If the given ordinal is a top-level category, the {@link #ROOT_ORDINAL}\n   * is returned.\n   * <li>If the given ordinal is an existing category, returns the ordinal of\n   * its parent\n   * </ul>\n   * \n   * @throws ArrayIndexOutOfBoundsException\n   *           if an invalid ordinal is given (negative or beyond the last\n   *           available ordinal)\n   */\n  public abstract int getParent(int ordinal) throws IOException;\n\n","sourceOld":"  /**\n   * getParent() returns the ordinal of the parent category of the category\n   * with the given ordinal.\n   * <P>\n   * When a category is specified as a path name, finding the path of its\n   * parent is as trivial as dropping the last component of the path.\n   * getParent() is functionally equivalent to calling getPath() on the\n   * given ordinal, dropping the last component of the path, and then calling\n   * getOrdinal() to get an ordinal back. However, implementations are\n   * expected to provide a much more efficient implementation:\n   * <P>\n   * getParent() should be a very quick method, as it is used during the\n   * facet aggregation process in faceted search. Implementations will most\n   * likely want to serve replies to this method from a pre-filled cache.\n   * <P>\n   * If the given ordinal is the ROOT_ORDINAL, an INVALID_ORDINAL is returned.\n   * If the given ordinal is a top-level category, the ROOT_ORDINAL is returned.\n   * If an invalid ordinal is given (negative or beyond the last available\n   * ordinal), an ArrayIndexOutOfBoundsException is thrown. However, it is\n   * expected that getParent will only be called for ordinals which are\n   * already known to be in the taxonomy.\n   */\n  public int getParent(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29e1a91414f603bce5a59a5cb61fa8603997de87","date":1363597288,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getParent(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the ordinal of the parent category of the category with the given\n   * ordinal, according to the following rules:\n   * \n   * <ul>\n   * <li>If the given ordinal is the {@link #ROOT_ORDINAL}, an\n   * {@link #INVALID_ORDINAL} is returned.\n   * <li>If the given ordinal is a top-level category, the {@link #ROOT_ORDINAL}\n   * is returned.\n   * <li>If the given ordinal is an existing category, returns the ordinal of\n   * its parent\n   * </ul>\n   * \n   * @throws ArrayIndexOutOfBoundsException\n   *           if an invalid ordinal is given (negative or beyond the last\n   *           available ordinal)\n   */\n  public abstract int getParent(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","3d58d08788c3fd51172ba34474cca42499d6391b"],"3d58d08788c3fd51172ba34474cca42499d6391b":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"29e1a91414f603bce5a59a5cb61fa8603997de87":["3d58d08788c3fd51172ba34474cca42499d6391b"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["29e1a91414f603bce5a59a5cb61fa8603997de87"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"3d58d08788c3fd51172ba34474cca42499d6391b":["407687e67faf6e1f02a211ca078d8e3eed631027","29e1a91414f603bce5a59a5cb61fa8603997de87"],"29e1a91414f603bce5a59a5cb61fa8603997de87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["3d58d08788c3fd51172ba34474cca42499d6391b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}