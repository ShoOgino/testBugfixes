{"path":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","commits":[{"id":"637a392e2e05d4e1179ac3c532cfeef0cde977ba","date":1376347977,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","pathOld":"/dev/null","sourceNew":"  protected Filter getFilter(Query parentList) {\n    SolrCache parentCache = req.getSearcher().getCache(CACHE_NAME);\n    // lazily retrieve from solr cache\n    Filter filter = null;\n    if (parentCache != null) {\n      filter = (Filter) parentCache.get(parentList);\n    }\n    Filter result;\n    if (filter == null) {\n      result = createParentFilter(parentList);\n      if (parentCache != null) {\n        parentCache.put(parentList, result);\n      }\n    } else {\n      result = filter;\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","pathOld":"/dev/null","sourceNew":"  protected Filter getFilter(Query parentList) {\n    SolrCache parentCache = req.getSearcher().getCache(CACHE_NAME);\n    // lazily retrieve from solr cache\n    Filter filter = null;\n    if (parentCache != null) {\n      filter = (Filter) parentCache.get(parentList);\n    }\n    Filter result;\n    if (filter == null) {\n      result = createParentFilter(parentList);\n      if (parentCache != null) {\n        parentCache.put(parentList, result);\n      }\n    } else {\n      result = filter;\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b012914a8110b2ff1d075ed1ef72aa57084d4897","date":1414685177,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","sourceNew":"  BitDocIdSetFilter getFilter(Query parentList) {\n    SolrCache parentCache = req.getSearcher().getCache(CACHE_NAME);\n    // lazily retrieve from solr cache\n    Filter filter = null;\n    if (parentCache != null) {\n      filter = (Filter) parentCache.get(parentList);\n    }\n    BitDocIdSetFilter result;\n    if (filter instanceof BitDocIdSetFilter) {\n      result = (BitDocIdSetFilter) filter;\n    } else {\n      result = createParentFilter(parentList);\n      if (parentCache != null) {\n        parentCache.put(parentList, result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  protected Filter getFilter(Query parentList) {\n    SolrCache parentCache = req.getSearcher().getCache(CACHE_NAME);\n    // lazily retrieve from solr cache\n    Filter filter = null;\n    if (parentCache != null) {\n      filter = (Filter) parentCache.get(parentList);\n    }\n    Filter result;\n    if (filter == null) {\n      result = createParentFilter(parentList);\n      if (parentCache != null) {\n        parentCache.put(parentList, result);\n      }\n    } else {\n      result = filter;\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b3915945926c0bf7def01b0c504977709d3aed3","date":1436197708,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","sourceNew":"  BitDocIdSetFilterWrapper getFilter(Query parentList) {\n    SolrCache parentCache = req.getSearcher().getCache(CACHE_NAME);\n    // lazily retrieve from solr cache\n    Filter filter = null;\n    if (parentCache != null) {\n      filter = (Filter) parentCache.get(parentList);\n    }\n    BitDocIdSetFilterWrapper result;\n    if (filter instanceof BitDocIdSetFilterWrapper) {\n      result = (BitDocIdSetFilterWrapper) filter;\n    } else {\n      result = new BitDocIdSetFilterWrapper(createParentFilter(parentList));\n      if (parentCache != null) {\n        parentCache.put(parentList, result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  BitDocIdSetFilter getFilter(Query parentList) {\n    SolrCache parentCache = req.getSearcher().getCache(CACHE_NAME);\n    // lazily retrieve from solr cache\n    Filter filter = null;\n    if (parentCache != null) {\n      filter = (Filter) parentCache.get(parentList);\n    }\n    BitDocIdSetFilter result;\n    if (filter instanceof BitDocIdSetFilter) {\n      result = (BitDocIdSetFilter) filter;\n    } else {\n      result = createParentFilter(parentList);\n      if (parentCache != null) {\n        parentCache.put(parentList, result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5220c264531ed933424a495eb8ed8ada158961cc","date":1493367833,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","sourceNew":"  BitDocIdSetFilterWrapper getFilter(Query parentList) {\n    return getCachedFilter(req, parentList);\n  }\n\n","sourceOld":"  BitDocIdSetFilterWrapper getFilter(Query parentList) {\n    SolrCache parentCache = req.getSearcher().getCache(CACHE_NAME);\n    // lazily retrieve from solr cache\n    Filter filter = null;\n    if (parentCache != null) {\n      filter = (Filter) parentCache.get(parentList);\n    }\n    BitDocIdSetFilterWrapper result;\n    if (filter instanceof BitDocIdSetFilterWrapper) {\n      result = (BitDocIdSetFilterWrapper) filter;\n    } else {\n      result = new BitDocIdSetFilterWrapper(createParentFilter(parentList));\n      if (parentCache != null) {\n        parentCache.put(parentList, result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","sourceNew":"  BitDocIdSetFilterWrapper getFilter(Query parentList) {\n    return getCachedFilter(req, parentList);\n  }\n\n","sourceOld":"  BitDocIdSetFilterWrapper getFilter(Query parentList) {\n    SolrCache parentCache = req.getSearcher().getCache(CACHE_NAME);\n    // lazily retrieve from solr cache\n    Filter filter = null;\n    if (parentCache != null) {\n      filter = (Filter) parentCache.get(parentList);\n    }\n    BitDocIdSetFilterWrapper result;\n    if (filter instanceof BitDocIdSetFilterWrapper) {\n      result = (BitDocIdSetFilterWrapper) filter;\n    } else {\n      result = new BitDocIdSetFilterWrapper(createParentFilter(parentList));\n      if (parentCache != null) {\n        parentCache.put(parentList, result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed7576365aa15478ffb164ad40e9e556e294885e","date":1590803084,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#getFilter(Query).mjava","sourceNew":null,"sourceOld":"  BitDocIdSetFilterWrapper getFilter(Query parentList) {\n    return getCachedFilter(req, parentList);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ed7576365aa15478ffb164ad40e9e556e294885e":["5220c264531ed933424a495eb8ed8ada158961cc"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["4b3915945926c0bf7def01b0c504977709d3aed3","5220c264531ed933424a495eb8ed8ada158961cc"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"b012914a8110b2ff1d075ed1ef72aa57084d4897":["637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5220c264531ed933424a495eb8ed8ada158961cc":["4b3915945926c0bf7def01b0c504977709d3aed3"],"4b3915945926c0bf7def01b0c504977709d3aed3":["b012914a8110b2ff1d075ed1ef72aa57084d4897"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ed7576365aa15478ffb164ad40e9e556e294885e"]},"commit2Childs":{"ed7576365aa15478ffb164ad40e9e556e294885e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"b012914a8110b2ff1d075ed1ef72aa57084d4897":["4b3915945926c0bf7def01b0c504977709d3aed3"],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","b012914a8110b2ff1d075ed1ef72aa57084d4897"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"5220c264531ed933424a495eb8ed8ada158961cc":["ed7576365aa15478ffb164ad40e9e556e294885e","e9017cf144952056066919f1ebc7897ff9bd71b1"],"4b3915945926c0bf7def01b0c504977709d3aed3":["e9017cf144952056066919f1ebc7897ff9bd71b1","5220c264531ed933424a495eb8ed8ada158961cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}