{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testUncommittedChanges().mjava","commits":[{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testUncommittedChanges().mjava","pathOld":"/dev/null","sourceNew":"  public void testUncommittedChanges() throws IOException {\n    Directory dir = newDirectory();\n    // If version is < 50 IW.close should throw an exception\n    // on uncommitted changes:\n    IndexWriterConfig iwc = newIndexWriterConfig(Version.LUCENE_48, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo!\")));\n    w.addDocument(doc);\n    try {\n      w.close();\n      fail(\"didn't hit exception\");\n    } catch (RuntimeException re) {\n      // expected\n      assertTrue(re.getMessage().contains(\"this writer is closed, but some pending changes or running merges were discarded\"));\n    }\n    w.rollback();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd330c9d05eacbd6e952fe0dea852e7ae037eb50","date":1398873035,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testUncommittedChanges().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testUncommittedChanges().mjava","sourceNew":"  public void testUncommittedChanges() throws IOException {\n    Directory dir = newDirectory();\n    // If version is < 50 IW.close should throw an exception\n    // on uncommitted changes:\n    IndexWriterConfig iwc = newIndexWriterConfig(Version.LUCENE_4_8, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo!\")));\n    w.addDocument(doc);\n    try {\n      w.close();\n      fail(\"didn't hit exception\");\n    } catch (RuntimeException re) {\n      // expected\n      assertTrue(re.getMessage().contains(\"this writer is closed, but some pending changes or running merges were discarded\"));\n    }\n    w.rollback();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUncommittedChanges() throws IOException {\n    Directory dir = newDirectory();\n    // If version is < 50 IW.close should throw an exception\n    // on uncommitted changes:\n    IndexWriterConfig iwc = newIndexWriterConfig(Version.LUCENE_48, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo!\")));\n    w.addDocument(doc);\n    try {\n      w.close();\n      fail(\"didn't hit exception\");\n    } catch (RuntimeException re) {\n      // expected\n      assertTrue(re.getMessage().contains(\"this writer is closed, but some pending changes or running merges were discarded\"));\n    }\n    w.rollback();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testUncommittedChanges().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testUncommittedChanges().mjava","sourceNew":"  public void testUncommittedChanges() throws IOException {\n    Directory dir = newDirectory();\n    // If version is < 50 IW.close should throw an exception\n    // on uncommitted changes:\n    IndexWriterConfig iwc = newIndexWriterConfig(random(), Version.LUCENE_4_8, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo!\")));\n    w.addDocument(doc);\n    try {\n      w.close();\n      fail(\"didn't hit exception\");\n    } catch (RuntimeException re) {\n      // expected\n      assertTrue(re.getMessage().contains(\"this writer is closed, but some pending changes or running merges were discarded\"));\n    }\n    w.rollback();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUncommittedChanges() throws IOException {\n    Directory dir = newDirectory();\n    // If version is < 50 IW.close should throw an exception\n    // on uncommitted changes:\n    IndexWriterConfig iwc = newIndexWriterConfig(Version.LUCENE_4_8, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo!\")));\n    w.addDocument(doc);\n    try {\n      w.close();\n      fail(\"didn't hit exception\");\n    } catch (RuntimeException re) {\n      // expected\n      assertTrue(re.getMessage().contains(\"this writer is closed, but some pending changes or running merges were discarded\"));\n    }\n    w.rollback();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testUncommittedChanges().mjava","sourceNew":null,"sourceOld":"  public void testUncommittedChanges() throws IOException {\n    Directory dir = newDirectory();\n    // If version is < 50 IW.close should throw an exception\n    // on uncommitted changes:\n    IndexWriterConfig iwc = newIndexWriterConfig(random(), Version.LUCENE_4_8, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo!\")));\n    w.addDocument(doc);\n    try {\n      w.close();\n      fail(\"didn't hit exception\");\n    } catch (RuntimeException re) {\n      // expected\n      assertTrue(re.getMessage().contains(\"this writer is closed, but some pending changes or running merges were discarded\"));\n    }\n    w.rollback();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["dd330c9d05eacbd6e952fe0dea852e7ae037eb50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"dd330c9d05eacbd6e952fe0dea852e7ae037eb50":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dd330c9d05eacbd6e952fe0dea852e7ae037eb50":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["dd330c9d05eacbd6e952fe0dea852e7ae037eb50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}