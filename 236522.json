{"path":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","pathOld":"solr/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    server.add(doc);\n\n    server.commit();\n\n    QueryResponse resp = server.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    server.add(doc);\n\n    server.commit();\n\n    QueryResponse resp = server.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","pathOld":"solr/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    server.add(doc);\n\n    server.commit();\n\n    QueryResponse resp = server.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    server.add(doc);\n\n    server.commit();\n\n    QueryResponse resp = server.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","pathOld":"solr/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    server.add(doc);\n\n    server.commit();\n\n    QueryResponse resp = server.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    server.add(doc);\n\n    server.commit();\n\n    QueryResponse resp = server.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d9b24c47365092dc7017ac5cd515c4e1aafb68f","date":1375754682,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    SolrServer server = getSolrServer();\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    server.add(doc);\n\n    server.commit();\n\n    QueryResponse resp = server.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    server.add(doc);\n\n    server.commit();\n\n    QueryResponse resp = server.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    SolrServer server = getSolrServer();\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    server.add(doc);\n\n    server.commit();\n\n    QueryResponse resp = server.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    server.add(doc);\n\n    server.commit();\n\n    QueryResponse resp = server.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    SolrClient client = getSolrClient();\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    client.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    client.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    client.add(doc);\n\n    client.commit();\n\n    QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    SolrServer server = getSolrServer();\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    server.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    server.add(doc);\n\n    server.commit();\n\n    QueryResponse resp = server.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    SolrClient client = getSolrClient();\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    client.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    client.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    client.add(doc);\n\n    client.commit();\n\n    QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n    client.shutdown();\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    SolrClient client = getSolrClient();\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    client.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    client.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    client.add(doc);\n\n    client.commit();\n\n    QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    try (SolrClient client = getSolrClient()) {\n      byte[] buf = new byte[10];\n      for (int i = 0; i < 10; i++) {\n        buf[i] = (byte) i;\n      }\n      SolrInputDocument doc = null;\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 1);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 2);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 3);\n      doc.addField(\"data\", buf);\n      client.add(doc);\n\n      client.commit();\n\n      QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n      SolrDocumentList res = resp.getResults();\n      List<Bean> beans = resp.getBeans(Bean.class);\n      assertEquals(3, res.size());\n      assertEquals(3, beans.size());\n      for (SolrDocument d : res) {\n\n        Integer id = (Integer) d.getFieldValue(\"id\");\n        byte[] data = (byte[]) d.getFieldValue(\"data\");\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n      for (Bean d : beans) {\n        Integer id = d.id;\n        byte[] data = d.data;\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n    }\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    SolrClient client = getSolrClient();\n    byte[] buf = new byte[10];\n    for (int i = 0; i < 10; i++) {\n      buf[i] = (byte) i;\n    }\n    SolrInputDocument doc = null;\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 1);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n    client.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 2);\n    doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n    client.add(doc);\n\n    doc = new SolrInputDocument();\n    doc.addField(\"id\", 3);\n    doc.addField(\"data\", buf);\n    client.add(doc);\n\n    client.commit();\n\n    QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n    client.shutdown();\n    SolrDocumentList res = resp.getResults();\n    List<Bean> beans = resp.getBeans(Bean.class);\n    assertEquals(3, res.size());\n    assertEquals(3, beans.size());\n    for (SolrDocument d : res) {\n      Integer id = (Integer) d.getFieldValue(\"id\");\n      byte[] data = (byte[]) d.getFieldValue(\"data\");\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n    for (Bean d : beans) {\n      Integer id = d.id;\n      byte[] data = d.data;\n      if (id == 1) {\n        assertEquals(5, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 2), b);\n        }\n\n      } else if (id == 2) {\n        assertEquals(3, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)(i + 4), b);\n        }\n\n\n      } else if (id == 3) {\n        assertEquals(10, data.length);\n        for (int i = 0; i < data.length; i++) {\n          byte b = data[i];\n          assertEquals((byte)i, b);\n        }\n\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    try (SolrClient client = getSolrClient()) {\n      byte[] buf = new byte[10];\n      for (int i = 0; i < 10; i++) {\n        buf[i] = (byte) i;\n      }\n      SolrInputDocument doc = null;\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 1);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 2);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 3);\n      doc.addField(\"data\", buf);\n      client.add(doc);\n\n      client.commit();\n\n      QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n      SolrDocumentList res = resp.getResults();\n      List<Bean> beans = resp.getBeans(Bean.class);\n      assertEquals(3, res.size());\n      assertEquals(3, beans.size());\n      for (SolrDocument d : res) {\n\n        Integer id = Integer.parseInt(d.getFieldValue(\"id\").toString());\n        byte[] data = (byte[]) d.getFieldValue(\"data\");\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n      for (Bean d : beans) {\n        Integer id = Integer.parseInt(d.id);\n        byte[] data = d.data;\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n    }\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    try (SolrClient client = getSolrClient()) {\n      byte[] buf = new byte[10];\n      for (int i = 0; i < 10; i++) {\n        buf[i] = (byte) i;\n      }\n      SolrInputDocument doc = null;\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 1);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 2);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 3);\n      doc.addField(\"data\", buf);\n      client.add(doc);\n\n      client.commit();\n\n      QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n      SolrDocumentList res = resp.getResults();\n      List<Bean> beans = resp.getBeans(Bean.class);\n      assertEquals(3, res.size());\n      assertEquals(3, beans.size());\n      for (SolrDocument d : res) {\n\n        Integer id = (Integer) d.getFieldValue(\"id\");\n        byte[] data = (byte[]) d.getFieldValue(\"data\");\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n      for (Bean d : beans) {\n        Integer id = d.id;\n        byte[] data = d.data;\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    try (SolrClient client = getSolrClient()) {\n      byte[] buf = new byte[10];\n      for (int i = 0; i < 10; i++) {\n        buf[i] = (byte) i;\n      }\n      SolrInputDocument doc = null;\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 1);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 2);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 3);\n      doc.addField(\"data\", buf);\n      client.add(doc);\n\n      client.commit();\n\n      QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n      SolrDocumentList res = resp.getResults();\n      List<Bean> beans = resp.getBeans(Bean.class);\n      assertEquals(3, res.size());\n      assertEquals(3, beans.size());\n      for (SolrDocument d : res) {\n\n        Integer id = Integer.parseInt(d.getFieldValue(\"id\").toString());\n        byte[] data = (byte[]) d.getFieldValue(\"data\");\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n      for (Bean d : beans) {\n        Integer id = Integer.parseInt(d.id);\n        byte[] data = d.data;\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n    }\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    try (SolrClient client = getSolrClient()) {\n      byte[] buf = new byte[10];\n      for (int i = 0; i < 10; i++) {\n        buf[i] = (byte) i;\n      }\n      SolrInputDocument doc = null;\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 1);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 2);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 3);\n      doc.addField(\"data\", buf);\n      client.add(doc);\n\n      client.commit();\n\n      QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n      SolrDocumentList res = resp.getResults();\n      List<Bean> beans = resp.getBeans(Bean.class);\n      assertEquals(3, res.size());\n      assertEquals(3, beans.size());\n      for (SolrDocument d : res) {\n\n        Integer id = (Integer) d.getFieldValue(\"id\");\n        byte[] data = (byte[]) d.getFieldValue(\"data\");\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n      for (Bean d : beans) {\n        Integer id = d.id;\n        byte[] data = d.data;\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    try (SolrClient client = getSolrClient()) {\n      byte[] buf = new byte[10];\n      for (int i = 0; i < 10; i++) {\n        buf[i] = (byte) i;\n      }\n      SolrInputDocument doc = null;\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 1);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 2);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 3);\n      doc.addField(\"data\", buf);\n      client.add(doc);\n\n      client.commit();\n\n      QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n      SolrDocumentList res = resp.getResults();\n      List<Bean> beans = resp.getBeans(Bean.class);\n      assertEquals(3, res.size());\n      assertEquals(3, beans.size());\n      for (SolrDocument d : res) {\n\n        Integer id = Integer.parseInt(d.getFieldValue(\"id\").toString());\n        byte[] data = (byte[]) d.getFieldValue(\"data\");\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n      for (Bean d : beans) {\n        Integer id = Integer.parseInt(d.id);\n        byte[] data = d.data;\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n    }\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    try (SolrClient client = getSolrClient()) {\n      byte[] buf = new byte[10];\n      for (int i = 0; i < 10; i++) {\n        buf[i] = (byte) i;\n      }\n      SolrInputDocument doc = null;\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 1);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 2, 5));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 2);\n      doc.addField(\"data\", ByteBuffer.wrap(buf, 4, 3));\n      client.add(doc);\n\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", 3);\n      doc.addField(\"data\", buf);\n      client.add(doc);\n\n      client.commit();\n\n      QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n      SolrDocumentList res = resp.getResults();\n      List<Bean> beans = resp.getBeans(Bean.class);\n      assertEquals(3, res.size());\n      assertEquals(3, beans.size());\n      for (SolrDocument d : res) {\n\n        Integer id = (Integer) d.getFieldValue(\"id\");\n        byte[] data = (byte[]) d.getFieldValue(\"data\");\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n      for (Bean d : beans) {\n        Integer id = d.id;\n        byte[] data = d.data;\n        if (id == 1) {\n          assertEquals(5, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 2), b);\n          }\n\n        } else if (id == 2) {\n          assertEquals(3, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) (i + 4), b);\n          }\n\n\n        } else if (id == 3) {\n          assertEquals(10, data.length);\n          for (int i = 0; i < data.length; i++) {\n            byte b = data[i];\n            assertEquals((byte) i, b);\n          }\n\n        }\n\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c26f00b574427b55127e869b935845554afde1fa","5d9b24c47365092dc7017ac5cd515c4e1aafb68f"],"5d9b24c47365092dc7017ac5cd515c4e1aafb68f":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"bafca15d8e408346a67f4282ad1143b88023893b":["5d9b24c47365092dc7017ac5cd515c4e1aafb68f"],"28288370235ed02234a64753cdbf0c6ec096304a":["cc3b13b430571c2e169f98fe38e1e7666f88522d","a71f63026529f3c1f03cfdd664910873ab2369ae"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["bafca15d8e408346a67f4282ad1143b88023893b"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["cc3b13b430571c2e169f98fe38e1e7666f88522d","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"5d9b24c47365092dc7017ac5cd515c4e1aafb68f":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","bafca15d8e408346a67f4282ad1143b88023893b"],"c26f00b574427b55127e869b935845554afde1fa":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","5d9b24c47365092dc7017ac5cd515c4e1aafb68f"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"bafca15d8e408346a67f4282ad1143b88023893b":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}