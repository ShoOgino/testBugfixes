{"path":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 30;\n    while (iterCount-- > 0)\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(100);\n      }\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 30;\n    while (iterCount-- > 0)\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(100);\n      }\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 30;\n    while (iterCount-- > 0)\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(100);\n      }\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eabc2a9404496fdfa8372d2f3d457df49c300fa4","date":1327592749,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0)\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(500);\n      }\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","sourceOld":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 30;\n    while (iterCount-- > 0)\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(100);\n      }\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"78a55f24d9b493c2a1cecf79f1d78279062b545b","date":1327688152,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0)\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(500);\n      }\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","sourceOld":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 30;\n    while (iterCount-- > 0)\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(100);\n      }\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0)\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(500);\n      }\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","sourceOld":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 30;\n    while (iterCount-- > 0)\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(100);\n      }\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daae9e56db07453d34250b693e3072e0d3c4bd6a","date":1329910508,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0) {\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(500);\n      }\n    }\n    zkClient.printLayoutToStdOut();\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","sourceOld":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0)\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(500);\n      }\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0) {\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(500);\n      }\n    }\n    zkClient.printLayoutToStdOut();\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","sourceOld":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0)\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(500);\n      }\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be9f7175e1703e31f8d8de32612b7212db6acf76","date":1408660152,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0) {\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(500);\n      } catch (SessionExpiredException e) {\n        Thread.sleep(500);\n      }\n    }\n    zkClient.printLayoutToStdOut();\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","sourceOld":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0) {\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(500);\n      }\n    }\n    zkClient.printLayoutToStdOut();\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c6e1dc1bb4254226c8d7151b596cc1be40671751","date":1421876355,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0) {\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException | SessionExpiredException e) {\n        Thread.sleep(500);\n      }\n    }\n    zkClient.printLayoutToStdOut();\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","sourceOld":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0) {\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException e) {\n        Thread.sleep(500);\n      } catch (SessionExpiredException e) {\n        Thread.sleep(500);\n      }\n    }\n    zkClient.printLayoutToStdOut();\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0) {\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException | SessionExpiredException e) {\n        Thread.sleep(500);\n      }\n    }\n    zkClient.printLayoutToStdOut();\n    throw new RuntimeException(\"Could not get leader props for \" + collection + \" \" + slice);\n  }\n\n","sourceOld":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0) {\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException | SessionExpiredException e) {\n        Thread.sleep(500);\n      }\n    }\n    zkClient.printLayoutToStdOut();\n    throw new RuntimeException(\"Could not get leader props\");\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#getLeaderUrl(String,String).mjava","sourceNew":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0) {\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException | SessionExpiredException e) {\n        Thread.sleep(500);\n      }\n    }\n    zkClient.printLayoutToStream(System.out);\n    throw new RuntimeException(\"Could not get leader props for \" + collection + \" \" + slice);\n  }\n\n","sourceOld":"  private String getLeaderUrl(final String collection, final String slice)\n      throws KeeperException, InterruptedException {\n    int iterCount = 60;\n    while (iterCount-- > 0) {\n      try {\n        byte[] data = zkClient.getData(\n            ZkStateReader.getShardLeadersPath(collection, slice), null, null,\n            true);\n        ZkCoreNodeProps leaderProps = new ZkCoreNodeProps(\n            ZkNodeProps.load(data));\n        return leaderProps.getCoreUrl();\n      } catch (NoNodeException | SessionExpiredException e) {\n        Thread.sleep(500);\n      }\n    }\n    zkClient.printLayoutToStdOut();\n    throw new RuntimeException(\"Could not get leader props for \" + collection + \" \" + slice);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c6e1dc1bb4254226c8d7151b596cc1be40671751":["be9f7175e1703e31f8d8de32612b7212db6acf76"],"78a55f24d9b493c2a1cecf79f1d78279062b545b":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","eabc2a9404496fdfa8372d2f3d457df49c300fa4"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["eabc2a9404496fdfa8372d2f3d457df49c300fa4","daae9e56db07453d34250b693e3072e0d3c4bd6a"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["c6e1dc1bb4254226c8d7151b596cc1be40671751"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["0d22ac6a4146774c1bc8400160fc0b6150294e92","eabc2a9404496fdfa8372d2f3d457df49c300fa4"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"be9f7175e1703e31f8d8de32612b7212db6acf76":["daae9e56db07453d34250b693e3072e0d3c4bd6a"],"daae9e56db07453d34250b693e3072e0d3c4bd6a":["eabc2a9404496fdfa8372d2f3d457df49c300fa4"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"eabc2a9404496fdfa8372d2f3d457df49c300fa4":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"]},"commit2Childs":{"c6e1dc1bb4254226c8d7151b596cc1be40671751":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"78a55f24d9b493c2a1cecf79f1d78279062b545b":[],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["78a55f24d9b493c2a1cecf79f1d78279062b545b"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"be9f7175e1703e31f8d8de32612b7212db6acf76":["c6e1dc1bb4254226c8d7151b596cc1be40671751"],"daae9e56db07453d34250b693e3072e0d3c4bd6a":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","be9f7175e1703e31f8d8de32612b7212db6acf76"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["fd92b8bcc88e969302510acf77bd6970da3994c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","eabc2a9404496fdfa8372d2f3d457df49c300fa4"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eabc2a9404496fdfa8372d2f3d457df49c300fa4":["78a55f24d9b493c2a1cecf79f1d78279062b545b","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","fd92b8bcc88e969302510acf77bd6970da3994c4","daae9e56db07453d34250b693e3072e0d3c4bd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["78a55f24d9b493c2a1cecf79f1d78279062b545b","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}