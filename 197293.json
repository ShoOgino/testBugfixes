{"path":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#testSplitSeq().mjava","commits":[{"id":"422a649a45aaa37e53615faeca74d891f876a139","date":1255445670,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#testSplitSeq().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test sequential splitting.\n   */\n  public void testSplitSeq() throws Exception {\n    MultiPassIndexSplitter splitter = new MultiPassIndexSplitter();\n    Directory[] dirs = new Directory[]{\n            new RAMDirectory(),\n            new RAMDirectory(),\n            new RAMDirectory()\n    };\n    splitter.split(input, dirs, true);\n    IndexReader ir;\n    ir = IndexReader.open(dirs[0], true);\n    assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);\n    Document doc = ir.document(0);\n    assertEquals(\"0\", doc.get(\"id\"));\n    int start = ir.numDocs();\n    ir.close();\n    ir = IndexReader.open(dirs[1], true);\n    assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);\n    doc = ir.document(0);\n    assertEquals(start + \"\", doc.get(\"id\"));\n    start += ir.numDocs();\n    ir.close();\n    ir = IndexReader.open(dirs[2], true);\n    assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);\n    doc = ir.document(0);\n    assertEquals(start + \"\", doc.get(\"id\"));\n    // make sure the deleted doc is not here\n    Term t;\n    TermEnum te;\n    t = new Term(\"id\", (NUM_DOCS - 1) + \"\");\n    te = ir.terms(t);\n    assertNotSame(t, te.term());    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#testSplitSeq().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#testSplitSeq().mjava","sourceNew":"  /**\n   * Test sequential splitting.\n   */\n  public void testSplitSeq() throws Exception {\n    MultiPassIndexSplitter splitter = new MultiPassIndexSplitter();\n    Directory[] dirs = new Directory[]{\n            new RAMDirectory(),\n            new RAMDirectory(),\n            new RAMDirectory()\n    };\n    splitter.split(input, dirs, true);\n    IndexReader ir;\n    ir = IndexReader.open(dirs[0], true);\n    assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);\n    Document doc = ir.document(0);\n    assertEquals(\"0\", doc.get(\"id\"));\n    int start = ir.numDocs();\n    ir.close();\n    ir = IndexReader.open(dirs[1], true);\n    assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);\n    doc = ir.document(0);\n    assertEquals(start + \"\", doc.get(\"id\"));\n    start += ir.numDocs();\n    ir.close();\n    ir = IndexReader.open(dirs[2], true);\n    assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);\n    doc = ir.document(0);\n    assertEquals(start + \"\", doc.get(\"id\"));\n    // make sure the deleted doc is not here\n    Term t;\n    TermEnum te;\n    t = new Term(\"id\", (NUM_DOCS - 1) + \"\");\n    te = ir.terms(t);\n    assertNotSame(t, te.term());    \n  }\n\n","sourceOld":"  /**\n   * Test sequential splitting.\n   */\n  public void testSplitSeq() throws Exception {\n    MultiPassIndexSplitter splitter = new MultiPassIndexSplitter();\n    Directory[] dirs = new Directory[]{\n            new RAMDirectory(),\n            new RAMDirectory(),\n            new RAMDirectory()\n    };\n    splitter.split(input, dirs, true);\n    IndexReader ir;\n    ir = IndexReader.open(dirs[0], true);\n    assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);\n    Document doc = ir.document(0);\n    assertEquals(\"0\", doc.get(\"id\"));\n    int start = ir.numDocs();\n    ir.close();\n    ir = IndexReader.open(dirs[1], true);\n    assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);\n    doc = ir.document(0);\n    assertEquals(start + \"\", doc.get(\"id\"));\n    start += ir.numDocs();\n    ir.close();\n    ir = IndexReader.open(dirs[2], true);\n    assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);\n    doc = ir.document(0);\n    assertEquals(start + \"\", doc.get(\"id\"));\n    // make sure the deleted doc is not here\n    Term t;\n    TermEnum te;\n    t = new Term(\"id\", (NUM_DOCS - 1) + \"\");\n    te = ir.terms(t);\n    assertNotSame(t, te.term());    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"422a649a45aaa37e53615faeca74d891f876a139":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["422a649a45aaa37e53615faeca74d891f876a139"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["422a649a45aaa37e53615faeca74d891f876a139"],"422a649a45aaa37e53615faeca74d891f876a139":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}