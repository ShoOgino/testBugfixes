{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#makeShape().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#makeShape().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#makeShape().mjava","sourceNew":"    /**\n     * Constructs a bounding box shape out of the encoded cell\n     */\n    @Override\n    protected Rectangle makeShape() {\n      double xmin = PackedQuadPrefixTree.this.xmin;\n      double ymin = PackedQuadPrefixTree.this.ymin;\n      int level = getLevel();\n\n      byte b;\n      for (short l=0, i=1; l<level; ++l, ++i) {\n        b = (byte) ((term>>>(64-(i<<1))) & 0x3L);\n\n        switch (b) {\n          case 0x00:\n            ymin += levelH[l];\n            break;\n          case 0x01:\n            xmin += levelW[l];\n            ymin += levelH[l];\n            break;\n          case 0x02:\n            break;//nothing really\n          case 0x03:\n            xmin += levelW[l];\n            break;\n          default:\n            throw new RuntimeException(\"unexpected quadrant\");\n        }\n      }\n\n      double width, height;\n      if (level > 0) {\n        width = levelW[level - 1];\n        height = levelH[level - 1];\n      } else {\n        width = gridW;\n        height = gridH;\n      }\n      return new RectangleImpl(xmin, xmin + width, ymin, ymin + height, ctx);\n    }\n\n","sourceOld":"    /**\n     * Constructs a bounding box shape out of the encoded cell\n     */\n    @Override\n    protected Rectangle makeShape() {\n      double xmin = PackedQuadPrefixTree.this.xmin;\n      double ymin = PackedQuadPrefixTree.this.ymin;\n      int level = getLevel();\n\n      byte b;\n      for (short l=0, i=1; l<level; ++l, ++i) {\n        b = (byte) ((term>>>(64-(i<<1))) & 0x3L);\n\n        switch (b) {\n          case 0x00:\n            ymin += levelH[l];\n            break;\n          case 0x01:\n            xmin += levelW[l];\n            ymin += levelH[l];\n            break;\n          case 0x02:\n            break;//nothing really\n          case 0x03:\n            xmin += levelW[l];\n            break;\n          default:\n            throw new RuntimeException(\"unexpected quadrant\");\n        }\n      }\n\n      double width, height;\n      if (level > 0) {\n        width = levelW[level - 1];\n        height = levelH[level - 1];\n      } else {\n        width = gridW;\n        height = gridH;\n      }\n      return new RectangleImpl(xmin, xmin + width, ymin, ymin + height, ctx);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#makeShape().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#makeShape().mjava","sourceNew":"    /**\n     * Constructs a bounding box shape out of the encoded cell\n     */\n    @Override\n    protected Rectangle makeShape() {\n      double xmin = PackedQuadPrefixTree.this.xmin;\n      double ymin = PackedQuadPrefixTree.this.ymin;\n      int level = getLevel();\n\n      byte b;\n      for (short l=0, i=1; l<level; ++l, ++i) {\n        b = (byte) ((term>>>(64-(i<<1))) & 0x3L);\n\n        switch (b) {\n          case 0x00:\n            ymin += levelH[l];\n            break;\n          case 0x01:\n            xmin += levelW[l];\n            ymin += levelH[l];\n            break;\n          case 0x02:\n            break;//nothing really\n          case 0x03:\n            xmin += levelW[l];\n            break;\n          default:\n            throw new RuntimeException(\"unexpected quadrant\");\n        }\n      }\n\n      double width, height;\n      if (level > 0) {\n        width = levelW[level - 1];\n        height = levelH[level - 1];\n      } else {\n        width = gridW;\n        height = gridH;\n      }\n      return new RectangleImpl(xmin, xmin + width, ymin, ymin + height, ctx);\n    }\n\n","sourceOld":"    /**\n     * Constructs a bounding box shape out of the encoded cell\n     */\n    @Override\n    protected Rectangle makeShape() {\n      double xmin = PackedQuadPrefixTree.this.xmin;\n      double ymin = PackedQuadPrefixTree.this.ymin;\n      int level = getLevel();\n\n      byte b;\n      for (short l=0, i=1; l<level; ++l, ++i) {\n        b = (byte) ((term>>>(64-(i<<1))) & 0x3L);\n\n        switch (b) {\n          case 0x00:\n            ymin += levelH[l];\n            break;\n          case 0x01:\n            xmin += levelW[l];\n            ymin += levelH[l];\n            break;\n          case 0x02:\n            break;//nothing really\n          case 0x03:\n            xmin += levelW[l];\n            break;\n          default:\n            throw new RuntimeException(\"unexpected quadrant\");\n        }\n      }\n\n      double width, height;\n      if (level > 0) {\n        width = levelW[level - 1];\n        height = levelH[level - 1];\n      } else {\n        width = gridW;\n        height = gridH;\n      }\n      return new RectangleImpl(xmin, xmin + width, ymin, ymin + height, ctx);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}