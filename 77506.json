{"path":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.PagedCollectionSupport#fetchPage(PageOfCollections,SolrZkClient).mjava","commits":[{"id":"d69bac0909e90a1213b0850137b00ac371f866e1","date":1419979130,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.PagedCollectionSupport#fetchPage(PageOfCollections,SolrZkClient).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Gets the requested page of collections after applying filters and offsets. \n     */\n    public PageOfCollections fetchPage(PageOfCollections page, SolrZkClient zkClient) \n        throws KeeperException, InterruptedException {\n\n\n      List<String> children = getCollections(zkClient);\n      page.selected = children; // start with the page being the full list\n      \n      // activate paging (if disabled) for large collection sets\n      if (page.start == 0 && page.rows == -1 && page.filter == null && children.size() > 10) {\n        page.rows = 20;\n        page.start = 0;\n      }\n      \n      // apply the name filter if supplied (we don't need to pull state\n      // data from ZK to do name filtering\n      if (page.filterType == FilterType.name && page.filter != null)\n        children = page.applyNameFilter(children);\n\n      // a little hacky ... we can't select the page when filtering by\n      // status until reading all status objects from ZK\n      if (page.filterType != FilterType.status)\n        page.selectPage(children);        \n      \n      return page;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a","date":1443442239,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ZookeeperInfoHandler.PagedCollectionSupport#fetchPage(PageOfCollections,SolrZkClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.PagedCollectionSupport#fetchPage(PageOfCollections,SolrZkClient).mjava","sourceNew":"    /**\n     * Gets the requested page of collections after applying filters and offsets.\n     */\n    public PageOfCollections fetchPage(PageOfCollections page, SolrZkClient zkClient)\n        throws KeeperException, InterruptedException {\n\n\n      List<String> children = getCollections(zkClient);\n      page.selected = children; // start with the page being the full list\n\n      // activate paging (if disabled) for large collection sets\n      if (page.start == 0 && page.rows == -1 && page.filter == null && children.size() > 10) {\n        page.rows = 20;\n        page.start = 0;\n      }\n\n      // apply the name filter if supplied (we don't need to pull state\n      // data from ZK to do name filtering\n      if (page.filterType == FilterType.name && page.filter != null)\n        children = page.applyNameFilter(children);\n\n      // a little hacky ... we can't select the page when filtering by\n      // status until reading all status objects from ZK\n      if (page.filterType != FilterType.status)\n        page.selectPage(children);\n\n      return page;\n    }\n\n","sourceOld":"    /**\n     * Gets the requested page of collections after applying filters and offsets. \n     */\n    public PageOfCollections fetchPage(PageOfCollections page, SolrZkClient zkClient) \n        throws KeeperException, InterruptedException {\n\n\n      List<String> children = getCollections(zkClient);\n      page.selected = children; // start with the page being the full list\n      \n      // activate paging (if disabled) for large collection sets\n      if (page.start == 0 && page.rows == -1 && page.filter == null && children.size() > 10) {\n        page.rows = 20;\n        page.start = 0;\n      }\n      \n      // apply the name filter if supplied (we don't need to pull state\n      // data from ZK to do name filtering\n      if (page.filterType == FilterType.name && page.filter != null)\n        children = page.applyNameFilter(children);\n\n      // a little hacky ... we can't select the page when filtering by\n      // status until reading all status objects from ZK\n      if (page.filterType != FilterType.status)\n        page.selectPage(children);        \n      \n      return page;\n    }\n\n","bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a":["d69bac0909e90a1213b0850137b00ac371f866e1"],"d69bac0909e90a1213b0850137b00ac371f866e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["80ebe5b1d946f7c2ed9c46206b0c7254dc21206a"]},"commit2Childs":{"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d69bac0909e90a1213b0850137b00ac371f866e1":["80ebe5b1d946f7c2ed9c46206b0c7254dc21206a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d69bac0909e90a1213b0850137b00ac371f866e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}