{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","commits":[{"id":"4f8633b56150a205774ee3e2adf1452a81b0d904","date":1376926002,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    PulsingTermState state = (PulsingTermState)_state;\n    assert empty.length == 0;\n    this.absolute = this.absolute || absolute;\n    if (state.bytes == null) {\n      assert longsSize > 0;\n      wrappedPostingsWriter.encodeTerm(longs, buffer, fieldInfo, state.wrappedState, this.absolute);\n      for (int i = 0; i < longsSize; i++) {\n        out.writeVLong(longs[i]);\n      }\n      buffer.writeTo(out);\n      buffer.reset();\n      this.absolute = false;\n    } else {\n      out.writeVInt(state.bytes.length);\n      out.writeBytes(state.bytes, 0, state.bytes.length);\n      this.absolute = absolute ? true : this.absolute;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d2e085a44254f51e49d03f212aff0ad5a99052a","date":1376969443,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","sourceNew":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    PulsingTermState state = (PulsingTermState)_state;\n    assert empty.length == 0;\n    this.absolute = this.absolute || absolute;\n    if (state.bytes == null) {\n      wrappedPostingsWriter.encodeTerm(longs, buffer, fieldInfo, state.wrappedState, this.absolute);\n      for (int i = 0; i < longsSize; i++) {\n        out.writeVLong(longs[i]);\n      }\n      buffer.writeTo(out);\n      buffer.reset();\n      this.absolute = false;\n    } else {\n      out.writeVInt(state.bytes.length);\n      out.writeBytes(state.bytes, 0, state.bytes.length);\n      this.absolute = this.absolute || absolute;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    PulsingTermState state = (PulsingTermState)_state;\n    assert empty.length == 0;\n    this.absolute = this.absolute || absolute;\n    if (state.bytes == null) {\n      assert longsSize > 0;\n      wrappedPostingsWriter.encodeTerm(longs, buffer, fieldInfo, state.wrappedState, this.absolute);\n      for (int i = 0; i < longsSize; i++) {\n        out.writeVLong(longs[i]);\n      }\n      buffer.writeTo(out);\n      buffer.reset();\n      this.absolute = false;\n    } else {\n      out.writeVInt(state.bytes.length);\n      out.writeBytes(state.bytes, 0, state.bytes.length);\n      this.absolute = absolute ? true : this.absolute;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    PulsingTermState state = (PulsingTermState)_state;\n    assert empty.length == 0;\n    this.absolute = this.absolute || absolute;\n    if (state.bytes == null) {\n      wrappedPostingsWriter.encodeTerm(longs, buffer, fieldInfo, state.wrappedState, this.absolute);\n      for (int i = 0; i < longsSize; i++) {\n        out.writeVLong(longs[i]);\n      }\n      buffer.writeTo(out);\n      buffer.reset();\n      this.absolute = false;\n    } else {\n      out.writeVInt(state.bytes.length);\n      out.writeBytes(state.bytes, 0, state.bytes.length);\n      this.absolute = this.absolute || absolute;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d2e085a44254f51e49d03f212aff0ad5a99052a":["4f8633b56150a205774ee3e2adf1452a81b0d904"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["1d2e085a44254f51e49d03f212aff0ad5a99052a"],"4f8633b56150a205774ee3e2adf1452a81b0d904":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1d2e085a44254f51e49d03f212aff0ad5a99052a":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4f8633b56150a205774ee3e2adf1452a81b0d904","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"4f8633b56150a205774ee3e2adf1452a81b0d904":["1d2e085a44254f51e49d03f212aff0ad5a99052a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}