{"path":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setMinimumNumberShouldMatch(int).mjava","commits":[{"id":"a194d3ac4639a7909ea614667b9a7632a6aa14d1","date":1355475351,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setMinimumNumberShouldMatch(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Specifies a minimum number of the optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setMinimumNumberShouldMatch(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Specifies a minimum number of the optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aa8b576db3a2ef44791da3c24b9d0b61c236c11","date":1359387145,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setMinimumNumberShouldMatch(float).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setMinimumNumberShouldMatch(int).mjava","sourceNew":"  /**\n   * Specifies a minimum number of the optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part. This method accepts a float value in the range [0..1) as a fraction\n   * of the actual query terms in the low frequent clause or a number\n   * <tt>&gt;=1</tt> as an absolut number of clauses that need to match.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(float min) {\n    this.minNrShouldMatch = min;\n  }\n\n","sourceOld":"  /**\n   * Specifies a minimum number of the optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de522d9303bd67c8473a269a1319125d1f3700e0","date":1359477856,"type":5,"author":"Adrien Grand","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setMinimumNumberShouldMatch(float).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setMinimumNumberShouldMatch(int).mjava","sourceNew":"  /**\n   * Specifies a minimum number of the optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part. This method accepts a float value in the range [0..1) as a fraction\n   * of the actual query terms in the low frequent clause or a number\n   * <tt>&gt;=1</tt> as an absolut number of clauses that need to match.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(float min) {\n    this.minNrShouldMatch = min;\n  }\n\n","sourceOld":"  /**\n   * Specifies a minimum number of the optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a194d3ac4639a7909ea614667b9a7632a6aa14d1"],"9aa8b576db3a2ef44791da3c24b9d0b61c236c11":["a194d3ac4639a7909ea614667b9a7632a6aa14d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a194d3ac4639a7909ea614667b9a7632a6aa14d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"de522d9303bd67c8473a269a1319125d1f3700e0":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9aa8b576db3a2ef44791da3c24b9d0b61c236c11"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9aa8b576db3a2ef44791da3c24b9d0b61c236c11"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["de522d9303bd67c8473a269a1319125d1f3700e0"],"9aa8b576db3a2ef44791da3c24b9d0b61c236c11":["de522d9303bd67c8473a269a1319125d1f3700e0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a194d3ac4639a7909ea614667b9a7632a6aa14d1"],"a194d3ac4639a7909ea614667b9a7632a6aa14d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9aa8b576db3a2ef44791da3c24b9d0b61c236c11"],"de522d9303bd67c8473a269a1319125d1f3700e0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["de522d9303bd67c8473a269a1319125d1f3700e0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}