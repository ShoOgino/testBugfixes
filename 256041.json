{"path":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testExplicitNullGivesDefaults().mjava","commits":[{"id":"a877077e0a22a42eebce7d1052c58e97d3afb12d","date":1405981118,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testExplicitNullGivesDefaults().mjava","pathOld":"/dev/null","sourceNew":"  public void testExplicitNullGivesDefaults() throws IOException {\n    // 2 diff options, one where the default is in fact null, and one where it isn't\n    String solrXml = \"<solr><solrcloud><null name=\\\"host\\\"/><null name=\\\"leaderVoteWait\\\"/></solrcloud></solr>\";\n\n    ConfigSolr cfg = ConfigSolr.fromString(loader, solrXml);\n    assertEquals(\"host\", null, cfg.getHost());\n    assertEquals(\"leaderVoteWait\", 180000, cfg.getLeaderVoteWait());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testExplicitNullGivesDefaults().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testExplicitNullGivesDefaults().mjava","sourceNew":"  public void testExplicitNullGivesDefaults() throws IOException {\n    String solrXml = \"<solr>\" +\n        \"<solrcloud>\" +\n        \"<str name=\\\"host\\\">host</str>\" +\n        \"<int name=\\\"hostPort\\\">8983</int>\" +\n        \"<str name=\\\"hostContext\\\">solr</str>\" +\n        \"<null name=\\\"leaderVoteWait\\\"/>\" +\n        \"</solrcloud></solr>\";\n\n    NodeConfig cfg = SolrXmlConfig.fromString(loader, solrXml);\n    assertEquals(\"leaderVoteWait\", 180000, cfg.getCloudConfig().getLeaderVoteWait());\n  }\n\n","sourceOld":"  public void testExplicitNullGivesDefaults() throws IOException {\n    // 2 diff options, one where the default is in fact null, and one where it isn't\n    String solrXml = \"<solr><solrcloud><null name=\\\"host\\\"/><null name=\\\"leaderVoteWait\\\"/></solrcloud></solr>\";\n\n    ConfigSolr cfg = ConfigSolr.fromString(loader, solrXml);\n    assertEquals(\"host\", null, cfg.getHost());\n    assertEquals(\"leaderVoteWait\", 180000, cfg.getLeaderVoteWait());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testExplicitNullGivesDefaults().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testExplicitNullGivesDefaults().mjava","sourceNew":"  public void testExplicitNullGivesDefaults() throws IOException {\n    String solrXml = \"<solr>\" +\n        \"<solrcloud>\" +\n        \"<str name=\\\"host\\\">host</str>\" +\n        \"<int name=\\\"hostPort\\\">8983</int>\" +\n        \"<str name=\\\"hostContext\\\">solr</str>\" +\n        \"<null name=\\\"leaderVoteWait\\\"/>\" +\n        \"</solrcloud></solr>\";\n\n    NodeConfig cfg = SolrXmlConfig.fromString(loader, solrXml);\n    assertEquals(\"leaderVoteWait\", 180000, cfg.getCloudConfig().getLeaderVoteWait());\n  }\n\n","sourceOld":"  public void testExplicitNullGivesDefaults() throws IOException {\n    // 2 diff options, one where the default is in fact null, and one where it isn't\n    String solrXml = \"<solr><solrcloud><null name=\\\"host\\\"/><null name=\\\"leaderVoteWait\\\"/></solrcloud></solr>\";\n\n    ConfigSolr cfg = ConfigSolr.fromString(loader, solrXml);\n    assertEquals(\"host\", null, cfg.getHost());\n    assertEquals(\"leaderVoteWait\", 180000, cfg.getLeaderVoteWait());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2be0a2886c76942ff986465eabde7b858895dc9","date":1555349228,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testExplicitNullGivesDefaults().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testExplicitNullGivesDefaults().mjava","sourceNew":"  public void testExplicitNullGivesDefaults() throws IOException {\n    String solrXml = \"<solr>\" +\n        \"<null name=\\\"maxBooleanClauses\\\"/>\" +\n        \"<solrcloud>\" +\n        \"<str name=\\\"host\\\">host</str>\" +\n        \"<int name=\\\"hostPort\\\">8983</int>\" +\n        \"<str name=\\\"hostContext\\\">solr</str>\" +\n        \"<null name=\\\"leaderVoteWait\\\"/>\" +\n        \"</solrcloud></solr>\";\n\n    NodeConfig cfg = SolrXmlConfig.fromString(loader, solrXml);\n    assertNull(\"maxBooleanClauses\", cfg.getBooleanQueryMaxClauseCount()); // default is null\n    assertEquals(\"leaderVoteWait\", 180000, cfg.getCloudConfig().getLeaderVoteWait());\n  }\n\n","sourceOld":"  public void testExplicitNullGivesDefaults() throws IOException {\n    String solrXml = \"<solr>\" +\n        \"<solrcloud>\" +\n        \"<str name=\\\"host\\\">host</str>\" +\n        \"<int name=\\\"hostPort\\\">8983</int>\" +\n        \"<str name=\\\"hostContext\\\">solr</str>\" +\n        \"<null name=\\\"leaderVoteWait\\\"/>\" +\n        \"</solrcloud></solr>\";\n\n    NodeConfig cfg = SolrXmlConfig.fromString(loader, solrXml);\n    assertEquals(\"leaderVoteWait\", 180000, cfg.getCloudConfig().getLeaderVoteWait());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testExplicitNullGivesDefaults().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testExplicitNullGivesDefaults().mjava","sourceNew":"  public void testExplicitNullGivesDefaults() {\n    String solrXml = \"<solr>\" +\n        \"<null name=\\\"maxBooleanClauses\\\"/>\" +\n        \"<solrcloud>\" +\n        \"<str name=\\\"host\\\">host</str>\" +\n        \"<int name=\\\"hostPort\\\">8983</int>\" +\n        \"<str name=\\\"hostContext\\\">solr</str>\" +\n        \"<null name=\\\"leaderVoteWait\\\"/>\" +\n        \"</solrcloud></solr>\";\n\n    NodeConfig cfg = SolrXmlConfig.fromString(solrHome, solrXml);\n    assertNull(\"maxBooleanClauses\", cfg.getBooleanQueryMaxClauseCount()); // default is null\n    assertEquals(\"leaderVoteWait\", 180000, cfg.getCloudConfig().getLeaderVoteWait());\n  }\n\n","sourceOld":"  public void testExplicitNullGivesDefaults() throws IOException {\n    String solrXml = \"<solr>\" +\n        \"<null name=\\\"maxBooleanClauses\\\"/>\" +\n        \"<solrcloud>\" +\n        \"<str name=\\\"host\\\">host</str>\" +\n        \"<int name=\\\"hostPort\\\">8983</int>\" +\n        \"<str name=\\\"hostContext\\\">solr</str>\" +\n        \"<null name=\\\"leaderVoteWait\\\"/>\" +\n        \"</solrcloud></solr>\";\n\n    NodeConfig cfg = SolrXmlConfig.fromString(loader, solrXml);\n    assertNull(\"maxBooleanClauses\", cfg.getBooleanQueryMaxClauseCount()); // default is null\n    assertEquals(\"leaderVoteWait\", 180000, cfg.getCloudConfig().getLeaderVoteWait());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a2be0a2886c76942ff986465eabde7b858895dc9":["e15199583d3635cb940942caed05132dd6c4c7c6"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a877077e0a22a42eebce7d1052c58e97d3afb12d","e15199583d3635cb940942caed05132dd6c4c7c6"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["a2be0a2886c76942ff986465eabde7b858895dc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a877077e0a22a42eebce7d1052c58e97d3afb12d"]},"commit2Childs":{"a2be0a2886c76942ff986465eabde7b858895dc9":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e15199583d3635cb940942caed05132dd6c4c7c6"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a2be0a2886c76942ff986465eabde7b858895dc9","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}