{"path":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery#PhraseQuery(int,String,BytesRef...).mjava","commits":[{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery#PhraseQuery(int,String,BytesRef...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a phrase query which will match documents that contain the given\n   * list of terms at consecutive positions in {@code field}, and at a\n   * maximum edit distance of {@code slop}. For more complicated use-cases,\n   * use {@link PhraseQuery.Builder}.\n   * @see #getSlop()\n   */\n  public PhraseQuery(int slop, String field, BytesRef... terms) {\n    this(slop, toTerms(field, terms), incrementalPositions(terms.length));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9e1499c5d26c936238506df90a3c02c76707722":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9e1499c5d26c936238506df90a3c02c76707722"]},"commit2Childs":{"e9e1499c5d26c936238506df90a3c02c76707722":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9e1499c5d26c936238506df90a3c02c76707722"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}