{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#DirectoryTaxonomyWriter(Directory,OpenMode).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#DirectoryTaxonomyWriter(Directory,OpenMode).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#DirectoryTaxonomyWriter(Directory,OpenMode).mjava","sourceNew":"  /**\n   * Creates a new instance with a default cached as defined by\n   * {@link #defaultTaxonomyWriterCache()}.\n   */\n  public DirectoryTaxonomyWriter(Directory directory, OpenMode openMode)\n  throws CorruptIndexException, LockObtainFailedException, IOException {\n    this(directory, openMode, defaultTaxonomyWriterCache());\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance with a default cached as defined by\n   * {@link #defaultTaxonomyWriterCache()}.\n   */\n  public DirectoryTaxonomyWriter(Directory directory, OpenMode openMode)\n  throws CorruptIndexException, LockObtainFailedException, IOException {\n    this(directory, openMode, defaultTaxonomyWriterCache());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b7a1bc6030c258e47d63eff3455a2b1bbf32683","date":1339494023,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#DirectoryTaxonomyWriter(Directory,OpenMode).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#DirectoryTaxonomyWriter(Directory,OpenMode).mjava","sourceNew":"  /**\n   * Creates a new instance with a default cache as defined by\n   * {@link #defaultTaxonomyWriterCache()}.\n   */\n  public DirectoryTaxonomyWriter(Directory directory, OpenMode openMode)\n  throws CorruptIndexException, LockObtainFailedException, IOException {\n    this(directory, openMode, defaultTaxonomyWriterCache());\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance with a default cached as defined by\n   * {@link #defaultTaxonomyWriterCache()}.\n   */\n  public DirectoryTaxonomyWriter(Directory directory, OpenMode openMode)\n  throws CorruptIndexException, LockObtainFailedException, IOException {\n    this(directory, openMode, defaultTaxonomyWriterCache());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#DirectoryTaxonomyWriter(Directory,OpenMode).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#DirectoryTaxonomyWriter(Directory,OpenMode).mjava","sourceNew":"  /**\n   * Creates a new instance with a default cache as defined by\n   * {@link #defaultTaxonomyWriterCache()}.\n   */\n  public DirectoryTaxonomyWriter(Directory directory, OpenMode openMode)\n  throws IOException {\n    this(directory, openMode, defaultTaxonomyWriterCache());\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance with a default cache as defined by\n   * {@link #defaultTaxonomyWriterCache()}.\n   */\n  public DirectoryTaxonomyWriter(Directory directory, OpenMode openMode)\n  throws CorruptIndexException, LockObtainFailedException, IOException {\n    this(directory, openMode, defaultTaxonomyWriterCache());\n  }\n\n","bugFix":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#DirectoryTaxonomyWriter(Directory,OpenMode).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#DirectoryTaxonomyWriter(Directory,OpenMode).mjava","sourceNew":"  /**\n   * Creates a new instance with a default cache as defined by\n   * {@link #defaultTaxonomyWriterCache()}.\n   */\n  public DirectoryTaxonomyWriter(Directory directory, OpenMode openMode)\n  throws IOException {\n    this(directory, openMode, defaultTaxonomyWriterCache());\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance with a default cache as defined by\n   * {@link #defaultTaxonomyWriterCache()}.\n   */\n  public DirectoryTaxonomyWriter(Directory directory, OpenMode openMode)\n  throws CorruptIndexException, LockObtainFailedException, IOException {\n    this(directory, openMode, defaultTaxonomyWriterCache());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}