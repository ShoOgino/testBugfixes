{"path":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#addPoint(Bounds,Membership[],double,double,double).mjava","commits":[{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#addPoint(Bounds,Membership[],double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane#addPoint(Bounds,Membership[],double,double,double).mjava","sourceNew":"  protected static void addPoint(final Bounds boundsInfo, final Membership[] bounds, final double x, final double y, final double z) {\n    //System.err.println(\" Want to add point x=\"+x+\" y=\"+y+\" z=\"+z);\n    // Make sure the discovered point is within the bounds\n    for (Membership bound : bounds) {\n      if (!bound.isWithin(x, y, z))\n        return;\n    }\n    // Add the point\n    //System.err.println(\"  point added\");\n    //System.out.println(\"Adding point x=\"+x+\" y=\"+y+\" z=\"+z);\n    boundsInfo.addPoint(x, y, z);\n  }\n\n","sourceOld":"  protected static void addPoint(final Bounds boundsInfo, final Membership[] bounds, final double x, final double y, final double z) {\n    //System.err.println(\" Want to add point x=\"+x+\" y=\"+y+\" z=\"+z);\n    // Make sure the discovered point is within the bounds\n    for (Membership bound : bounds) {\n      if (!bound.isWithin(x, y, z))\n        return;\n    }\n    // Add the point\n    //System.err.println(\"  point added\");\n    //System.out.println(\"Adding point x=\"+x+\" y=\"+y+\" z=\"+z);\n    boundsInfo.addPoint(x, y, z);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d48c2726dec3381fb15aa3b90f7857635b6bdf74","date":1436825583,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#addPoint(Bounds,Membership[],double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#addPoint(Bounds,Membership[],double,double,double).mjava","sourceNew":"  /** Add a point to boundsInfo if within a specifically bounded area.\n   * @param boundsInfo is the object to be modified.\n   * @param bounds is the area that the point must be within.\n   * @param x is the x value.\n   * @param y is the y value.\n   * @param z is the z value.\n   */\n  protected static void addPoint(final Bounds boundsInfo, final Membership[] bounds, final double x, final double y, final double z) {\n    //System.err.println(\" Want to add point x=\"+x+\" y=\"+y+\" z=\"+z);\n    // Make sure the discovered point is within the bounds\n    for (Membership bound : bounds) {\n      if (!bound.isWithin(x, y, z))\n        return;\n    }\n    // Add the point\n    //System.err.println(\"  point added\");\n    //System.out.println(\"Adding point x=\"+x+\" y=\"+y+\" z=\"+z);\n    boundsInfo.addPoint(x, y, z);\n  }\n\n","sourceOld":"  protected static void addPoint(final Bounds boundsInfo, final Membership[] bounds, final double x, final double y, final double z) {\n    //System.err.println(\" Want to add point x=\"+x+\" y=\"+y+\" z=\"+z);\n    // Make sure the discovered point is within the bounds\n    for (Membership bound : bounds) {\n      if (!bound.isWithin(x, y, z))\n        return;\n    }\n    // Add the point\n    //System.err.println(\"  point added\");\n    //System.out.println(\"Adding point x=\"+x+\" y=\"+y+\" z=\"+z);\n    boundsInfo.addPoint(x, y, z);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f64b7098768253180859cd8faeae6b1a185b06ed","date":1441223971,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#addPoint(Bounds,Membership[],GeoPoint).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#addPoint(Bounds,Membership[],double,double,double).mjava","sourceNew":"  /** Add a point to boundsInfo if within a specifically bounded area.\n   * @param boundsInfo is the object to be modified.\n   * @param bounds is the area that the point must be within.\n   * @param point is the point.\n   */\n  protected static void addPoint(final Bounds boundsInfo, final Membership[] bounds, final GeoPoint point) {\n    // Make sure the discovered point is within the bounds\n    for (Membership bound : bounds) {\n      if (!bound.isWithin(point))\n        return;\n    }\n    // Add the point\n    boundsInfo.addPoint(point);\n  }\n\n","sourceOld":"  /** Add a point to boundsInfo if within a specifically bounded area.\n   * @param boundsInfo is the object to be modified.\n   * @param bounds is the area that the point must be within.\n   * @param x is the x value.\n   * @param y is the y value.\n   * @param z is the z value.\n   */\n  protected static void addPoint(final Bounds boundsInfo, final Membership[] bounds, final double x, final double y, final double z) {\n    //System.err.println(\" Want to add point x=\"+x+\" y=\"+y+\" z=\"+z);\n    // Make sure the discovered point is within the bounds\n    for (Membership bound : bounds) {\n      if (!bound.isWithin(x, y, z))\n        return;\n    }\n    // Add the point\n    //System.err.println(\"  point added\");\n    //System.out.println(\"Adding point x=\"+x+\" y=\"+y+\" z=\"+z);\n    boundsInfo.addPoint(x, y, z);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f64b7098768253180859cd8faeae6b1a185b06ed":["d48c2726dec3381fb15aa3b90f7857635b6bdf74"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d48c2726dec3381fb15aa3b90f7857635b6bdf74":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f64b7098768253180859cd8faeae6b1a185b06ed"]},"commit2Childs":{"f64b7098768253180859cd8faeae6b1a185b06ed":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["d48c2726dec3381fb15aa3b90f7857635b6bdf74"],"d48c2726dec3381fb15aa3b90f7857635b6bdf74":["f64b7098768253180859cd8faeae6b1a185b06ed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}