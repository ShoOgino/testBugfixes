{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScalingHandler#zkSetTrigger(ZkStateReader,String,Map[String,Object]).mjava","commits":[{"id":"9227359ab3bd86e5b85fab89a99332da7d5bacb1","date":1490341270,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScalingHandler#zkSetTrigger(ZkStateReader,String,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  private void zkSetTrigger(ZkStateReader reader, String triggerName, Map<String, Object> triggerProperties) throws KeeperException, InterruptedException {\n    while (true) {\n      Stat stat = new Stat();\n      ZkNodeProps loaded = null;\n      byte[] data = reader.getZkClient().getData(SOLR_AUTOSCALING_CONF_PATH, null, stat, true);\n      loaded = ZkNodeProps.load(data);\n      Map<String, Object> triggers = (Map<String, Object>) loaded.get(\"triggers\");\n      if (triggers == null) triggers = new HashMap<>(1);\n      if (triggerProperties != null) {\n        triggers.put(triggerName, triggerProperties);\n      } else {\n        triggers.remove(triggerName);\n      }\n      loaded = loaded.plus(\"triggers\", triggers);\n      try {\n        reader.getZkClient().setData(SOLR_AUTOSCALING_CONF_PATH, Utils.toJSON(loaded), stat.getVersion(), true);\n      } catch (KeeperException.BadVersionException bve) {\n        // somebody else has changed the configuration so we must retry\n        continue;\n      }\n      break;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","date":1499961129,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScalingHandler#zkSetTrigger(ZkStateReader,String,Map[String,Object]).mjava","sourceNew":null,"sourceOld":"  private void zkSetTrigger(ZkStateReader reader, String triggerName, Map<String, Object> triggerProperties) throws KeeperException, InterruptedException {\n    while (true) {\n      Stat stat = new Stat();\n      ZkNodeProps loaded = null;\n      byte[] data = reader.getZkClient().getData(SOLR_AUTOSCALING_CONF_PATH, null, stat, true);\n      loaded = ZkNodeProps.load(data);\n      Map<String, Object> triggers = (Map<String, Object>) loaded.get(\"triggers\");\n      if (triggers == null) triggers = new HashMap<>(1);\n      if (triggerProperties != null) {\n        triggers.put(triggerName, triggerProperties);\n      } else {\n        triggers.remove(triggerName);\n      }\n      loaded = loaded.plus(\"triggers\", triggers);\n      try {\n        reader.getZkClient().setData(SOLR_AUTOSCALING_CONF_PATH, Utils.toJSON(loaded), stat.getVersion(), true);\n      } catch (KeeperException.BadVersionException bve) {\n        // somebody else has changed the configuration so we must retry\n        continue;\n      }\n      break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["9227359ab3bd86e5b85fab89a99332da7d5bacb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9227359ab3bd86e5b85fab89a99332da7d5bacb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","9227359ab3bd86e5b85fab89a99332da7d5bacb1"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":[],"9227359ab3bd86e5b85fab89a99332da7d5bacb1":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}