{"path":"lucene/core/src/test/org/apache/lucene/store/TestByteBuffersDataInput#testRandomReads().mjava","commits":[{"id":"fad01f81cc24b33263ccec7dbff3fb907702f91e","date":1535461373,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestByteBuffersDataInput#testRandomReads().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRandomReads() throws Exception {\n    ByteBuffersDataOutput dst = new ByteBuffersDataOutput();\n\n    long seed = randomLong();\n    int max = 1_000_000;\n    List<IOConsumer<DataInput>> reply = \n        TestByteBuffersDataOutput.addRandomData(dst, new Xoroshiro128PlusRandom(seed), max);\n\n    ByteBuffersDataInput src = dst.toDataInput();\n    for (IOConsumer<DataInput> c : reply) {\n      c.accept(src);\n    }\n\n    LuceneTestCase.expectThrows(EOFException.class, () -> {\n      src.readByte();\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b","date":1583461779,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestByteBuffersDataInput#testRandomReads().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestByteBuffersDataInput#testRandomReads().mjava","sourceNew":"  @Test\n  public void testRandomReads() throws Exception {\n    ByteBuffersDataOutput dst = new ByteBuffersDataOutput();\n\n    long seed = randomLong();\n    int max = LuceneTestCase.TEST_NIGHTLY ? 1_000_000 : 100_000;\n    List<IOConsumer<DataInput>> reply = \n        TestByteBuffersDataOutput.addRandomData(dst, new Xoroshiro128PlusRandom(seed), max);\n\n    ByteBuffersDataInput src = dst.toDataInput();\n    for (IOConsumer<DataInput> c : reply) {\n      c.accept(src);\n    }\n\n    LuceneTestCase.expectThrows(EOFException.class, () -> {\n      src.readByte();\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testRandomReads() throws Exception {\n    ByteBuffersDataOutput dst = new ByteBuffersDataOutput();\n\n    long seed = randomLong();\n    int max = 1_000_000;\n    List<IOConsumer<DataInput>> reply = \n        TestByteBuffersDataOutput.addRandomData(dst, new Xoroshiro128PlusRandom(seed), max);\n\n    ByteBuffersDataInput src = dst.toDataInput();\n    for (IOConsumer<DataInput> c : reply) {\n      c.accept(src);\n    }\n\n    LuceneTestCase.expectThrows(EOFException.class, () -> {\n      src.readByte();\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b":["fad01f81cc24b33263ccec7dbff3fb907702f91e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5acb8730dbbbb0f88bb8db80769aa6e9b29d817b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fad01f81cc24b33263ccec7dbff3fb907702f91e"],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["5acb8730dbbbb0f88bb8db80769aa6e9b29d817b"],"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}