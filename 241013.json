{"path":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","commits":[{"id":"0265144286422ad99682a00904cc2536b79c8535","date":1482222684,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    System.out.println(values);\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.http\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"newSearcherErrors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"newSearcherErrors\")).get(\"requests\"));\n    assertEquals(0L, ((NamedList) nl.get(\"newSearcherErrors\")).get(\"requests\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertNotNull(values.get(\"solr.node\"));\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    System.out.println(values);\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.http\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"newSearcherErrors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"newSearcherErrors\")).get(\"requests\"));\n    assertEquals(0L, ((NamedList) nl.get(\"newSearcherErrors\")).get(\"requests\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertNotNull(values.get(\"solr.node\"));\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f7df713a0f1e310d18dd8da91c89a07a13f86f8","date":1483441921,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    System.out.println(values);\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.http\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertNotNull(values.get(\"solr.node\"));\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    System.out.println(values);\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.http\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"newSearcherErrors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"newSearcherErrors\")).get(\"requests\"));\n    assertEquals(0L, ((NamedList) nl.get(\"newSearcherErrors\")).get(\"requests\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertNotNull(values.get(\"solr.node\"));\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n  }\n\n","bugFix":null,"bugIntro":["81b762f1026e8caf0a77c73d3db32b2a5db9107b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    System.out.println(values);\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.http\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertNotNull(values.get(\"solr.node\"));\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    System.out.println(values);\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.http\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"newSearcherErrors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"newSearcherErrors\")).get(\"requests\"));\n    assertEquals(0L, ((NamedList) nl.get(\"newSearcherErrors\")).get(\"requests\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertNotNull(values.get(\"solr.node\"));\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa3636f020dd2f593d4df8cf2a55798e984ae749","date":1483541265,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    System.out.println(values);\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.http\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(5, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.http\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(3, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"cores.lazy\")); // this is a gauge node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    System.out.println(values);\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.http\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertNotNull(values.get(\"solr.node\"));\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n  }\n\n","bugFix":null,"bugIntro":["de1b5af63e30db5c72e34a3260be96b4ce383d6f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b16266db764c72c65ab2977b36da1436b4efbb9f","date":1483628123,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(3, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"cores.lazy\")); // this is a gauge node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    System.out.println(values);\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.http\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(5, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.http\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(3, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"cores.lazy\")); // this is a gauge node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(3, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"cores.lazy\")); // this is a gauge node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    System.out.println(values);\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.http\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertNotNull(values.get(\"solr.node\"));\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b10b88c8af8835e23b0d566418ef8397a7bb8ed","date":1484223252,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(3, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(3, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"cores.lazy\")); // this is a gauge node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":["81b762f1026e8caf0a77c73d3db32b2a5db9107b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(3, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"QUERYHANDLER./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"QUERYHANDLER./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(3, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"cores.lazy\")); // this is a gauge node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"449bfd05ae28dcff263bf35fdb5fb75ae72446d3","date":1484383935,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(3, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"507e7decdf00981d09a74632ea30299a4ce6ba72","date":1484600874,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(3, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81b762f1026e8caf0a77c73d3db32b2a5db9107b","date":1489433427,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    assertEquals(0L, ((NamedList) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((NamedList) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((NamedList) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","bugFix":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8","9b10b88c8af8835e23b0d566418ef8397a7bb8ed"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f34d83c894e07c24f5f957820777b5da2cc29e5a","date":1489491395,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b","date":1489651910,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertNotNull(nl.get(\"SEARCHER.new.errors\")); // counter type\n    assertNotNull(((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dab78f8a6599f23a28441dde36c8ac45c556b51f","date":1491295831,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(1, map.size());\n    assertEquals(0, ((NamedList)map.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"de1b5af63e30db5c72e34a3260be96b4ce383d6f","date":1491296431,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(1, map.size());\n    assertEquals(0, ((NamedList)map.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.node\")).size());\n  }\n\n","bugFix":["aa3636f020dd2f593d4df8cf2a55798e984ae749"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(1, map.size());\n    assertEquals(0, ((NamedList)map.get(\"solr.node\")).size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(1, map.size());\n    assertEquals(0, ((NamedList)map.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0d6879a535f14bc53be7c86de58142558c4f9eee","date":1492512399,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", \"compact\", \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(1, map.size());\n    assertEquals(0, ((NamedList)map.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", \"compact\", \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n    assertNotNull(values.get(\"solr.node\"));\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(4, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jetty\")).size());\n    assertEquals(0, ((NamedList)values.get(\"solr.core.collection1\")).size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(0, ((NamedList)values.get(\"solr.jvm\")).size());\n    assertNull(values.get(\"solr.node\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(1, map.size());\n    assertEquals(0, ((NamedList)map.get(\"solr.node\")).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daeaac5f7b42498079f0fb7c3a91802e588fc21a","date":1493066118,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", \"compact\", \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", \"compact\", \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer().getMetricManager());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"750239682d222924398443d581163940f48d68fc","date":1533297311,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer().getMetricManager());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90f8f57b02301cce9a16e8ac900fb6aef3cd18a9","date":1555607300,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(11, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a117d95183986014a31f25bb04e5464ca06d6068","date":1566208086,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList) values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map) values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList) values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map) values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList) values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map) values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList) values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map) values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList)values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map)values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList) values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map) values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n    handler.close();\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList) values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map) values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList) values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    @SuppressWarnings({\"rawtypes\"})\n    Map m = (Map) values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    @SuppressWarnings({\"rawtypes\"})\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n    handler.close();\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList) values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    Map m = (Map) values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n    handler.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"233211c3dbff6f367588be5bbb4ac77f72eae193","date":1602085975,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof MapWriter);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((MapWriter) o)._get(\"count\", null));\n    assertEquals(0L, ((MapWriter) nl.get(\"SEARCHER.new.errors\"))._get(\"count\", null));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((MapWriter) nl.get(\"CONTAINER.cores.loaded\"))._get(\"value\", null));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    Map<String, Object> map = new HashMap<>();\n    ((MapWriter) nl.get(\"ADMIN./admin/authorization.clientErrors\")).toMap(map);\n    assertEquals(5, map.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList) values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    @SuppressWarnings({\"rawtypes\"})\n    MapWriter writer = (MapWriter) values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(writer);\n    assertNotNull(writer._get(\"entries_count\", null));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    @SuppressWarnings({\"rawtypes\"})\n    SimpleOrderedMap map1 = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map1.size());\n    handler.close();\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\"), resp);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    Object o = nl.get(\"SEARCHER.new.errors\");\n    assertNotNull(o); // counter type\n    assertTrue(o instanceof Map);\n    // response wasn't serialized so we get here whatever MetricUtils produced instead of NamedList\n    assertNotNull(((Map) o).get(\"count\"));\n    assertEquals(0L, ((Map) nl.get(\"SEARCHER.new.errors\")).get(\"count\"));\n    nl = (NamedList) values.get(\"solr.node\");\n    assertNotNull(nl.get(\"CONTAINER.cores.loaded\")); // int gauge\n    assertEquals(1, ((Map) nl.get(\"CONTAINER.cores.loaded\")).get(\"value\"));\n    assertNotNull(nl.get(\"ADMIN./admin/authorization.clientErrors\")); // timer type\n    assertEquals(5, ((Map) nl.get(\"ADMIN./admin/authorization.clientErrors\")).size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection,solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    // \"collection\" works too, because it's a prefix for \"collection1\"\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"registry\", \"solr.core.collection\", \"registry\", \"solr.jvm\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm,jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"group\", \"jetty\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(2, values.size());\n    assertNotNull(values.get(\"solr.jetty\"));\n    assertNotNull(values.get(\"solr.jvm\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"counter\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values);\n    assertNull(values.get(\"ADMIN./admin/authorization.errors\")); // this is a timer node\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores,CONTAINER.threadPool\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(1, values.size());\n    assertEquals(13, ((NamedList) values.get(\"solr.node\")).size());\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertNotNull(values.get(\"CONTAINER.cores.lazy\")); // this is a gauge node\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"prefix\", \"CONTAINER.cores\", \"regex\", \"C.*thread.*completed\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.node\"));\n    values = (NamedList) values.get(\"solr.node\");\n    assertEquals(5, values.size());\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreContainerWorkExecutor.completed\"));\n    assertNotNull(values.get(\"CONTAINER.threadPool.coreLoadExecutor.completed\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\", \"prefix\", \"CACHE.core.fieldCache\", \"property\", \"entries_count\", MetricsHandler.COMPACT_PARAM, \"true\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertNotNull(values.get(\"solr.core.collection1\"));\n    values = (NamedList) values.get(\"solr.core.collection1\");\n    assertEquals(1, values.size());\n    @SuppressWarnings({\"rawtypes\"})\n    Map m = (Map) values.get(\"CACHE.core.fieldCache\");\n    assertNotNull(m);\n    assertNotNull(m.get(\"entries_count\"));\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"jvm\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    assertEquals(0, values.size());\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", MetricsHandler.COMPACT_PARAM, \"false\", CommonParams.WT, \"json\", \"group\", \"node\", \"type\", \"timer\", \"prefix\", \"CONTAINER.cores\"), resp);\n    values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    @SuppressWarnings({\"rawtypes\"})\n    SimpleOrderedMap map = (SimpleOrderedMap) values.get(\"metrics\");\n    assertEquals(0, map.size());\n    handler.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["de1b5af63e30db5c72e34a3260be96b4ce383d6f"],"81b762f1026e8caf0a77c73d3db32b2a5db9107b":["449bfd05ae28dcff263bf35fdb5fb75ae72446d3"],"9b10b88c8af8835e23b0d566418ef8397a7bb8ed":["b16266db764c72c65ab2977b36da1436b4efbb9f"],"aa3636f020dd2f593d4df8cf2a55798e984ae749":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"c44cc06c26e456fe9c215072b79fce30babe3975":["a117d95183986014a31f25bb04e5464ca06d6068"],"a117d95183986014a31f25bb04e5464ca06d6068":["90f8f57b02301cce9a16e8ac900fb6aef3cd18a9"],"e98520789adb1d5ad05afb4956eca0944a929688":["ba055e19afc289adcb5bedaf68513793a7254012"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","daeaac5f7b42498079f0fb7c3a91802e588fc21a"],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["daeaac5f7b42498079f0fb7c3a91802e588fc21a"],"b16266db764c72c65ab2977b36da1436b4efbb9f":["aa3636f020dd2f593d4df8cf2a55798e984ae749"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0265144286422ad99682a00904cc2536b79c8535"],"ba055e19afc289adcb5bedaf68513793a7254012":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"90f8f57b02301cce9a16e8ac900fb6aef3cd18a9":["750239682d222924398443d581163940f48d68fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"449bfd05ae28dcff263bf35fdb5fb75ae72446d3":["9b10b88c8af8835e23b0d566418ef8397a7bb8ed"],"ab68488225b6a6c357dda72ed11dedca9914a192":["81b762f1026e8caf0a77c73d3db32b2a5db9107b","0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b"],"daeaac5f7b42498079f0fb7c3a91802e588fc21a":["0d6879a535f14bc53be7c86de58142558c4f9eee"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["f03e4bed5023ec3ef93a771b8888cae991cf448d","b16266db764c72c65ab2977b36da1436b4efbb9f"],"dab78f8a6599f23a28441dde36c8ac45c556b51f":["f34d83c894e07c24f5f957820777b5da2cc29e5a"],"de1b5af63e30db5c72e34a3260be96b4ce383d6f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["c44cc06c26e456fe9c215072b79fce30babe3975"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["491c9672ec42582fe43960452dbd37f1c80fe0f0","9b10b88c8af8835e23b0d566418ef8397a7bb8ed"],"233211c3dbff6f367588be5bbb4ac77f72eae193":["e98520789adb1d5ad05afb4956eca0944a929688"],"507e7decdf00981d09a74632ea30299a4ce6ba72":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","449bfd05ae28dcff263bf35fdb5fb75ae72446d3"],"816521ebaad5add9cb96bb88c577394e2938c40b":["dab78f8a6599f23a28441dde36c8ac45c556b51f"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"0265144286422ad99682a00904cc2536b79c8535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f34d83c894e07c24f5f957820777b5da2cc29e5a":["81b762f1026e8caf0a77c73d3db32b2a5db9107b"],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["0265144286422ad99682a00904cc2536b79c8535"],"750239682d222924398443d581163940f48d68fc":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["233211c3dbff6f367588be5bbb4ac77f72eae193"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["816521ebaad5add9cb96bb88c577394e2938c40b"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a117d95183986014a31f25bb04e5464ca06d6068","c44cc06c26e456fe9c215072b79fce30babe3975"],"0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b":["81b762f1026e8caf0a77c73d3db32b2a5db9107b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"81b762f1026e8caf0a77c73d3db32b2a5db9107b":["ab68488225b6a6c357dda72ed11dedca9914a192","f34d83c894e07c24f5f957820777b5da2cc29e5a","0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b"],"9b10b88c8af8835e23b0d566418ef8397a7bb8ed":["449bfd05ae28dcff263bf35fdb5fb75ae72446d3","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"aa3636f020dd2f593d4df8cf2a55798e984ae749":["b16266db764c72c65ab2977b36da1436b4efbb9f"],"c44cc06c26e456fe9c215072b79fce30babe3975":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","b0b597c65628ca9e73913a07e81691f8229bae35"],"a117d95183986014a31f25bb04e5464ca06d6068":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"e98520789adb1d5ad05afb4956eca0944a929688":["233211c3dbff6f367588be5bbb4ac77f72eae193"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"b16266db764c72c65ab2977b36da1436b4efbb9f":["9b10b88c8af8835e23b0d566418ef8397a7bb8ed","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["750239682d222924398443d581163940f48d68fc"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"ba055e19afc289adcb5bedaf68513793a7254012":["e98520789adb1d5ad05afb4956eca0944a929688"],"90f8f57b02301cce9a16e8ac900fb6aef3cd18a9":["a117d95183986014a31f25bb04e5464ca06d6068"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","0265144286422ad99682a00904cc2536b79c8535"],"449bfd05ae28dcff263bf35fdb5fb75ae72446d3":["81b762f1026e8caf0a77c73d3db32b2a5db9107b","507e7decdf00981d09a74632ea30299a4ce6ba72"],"ab68488225b6a6c357dda72ed11dedca9914a192":["de1b5af63e30db5c72e34a3260be96b4ce383d6f"],"daeaac5f7b42498079f0fb7c3a91802e588fc21a":["e9017cf144952056066919f1ebc7897ff9bd71b1","4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"de1b5af63e30db5c72e34a3260be96b4ce383d6f":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"dab78f8a6599f23a28441dde36c8ac45c556b51f":["816521ebaad5add9cb96bb88c577394e2938c40b"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["ba055e19afc289adcb5bedaf68513793a7254012"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["507e7decdf00981d09a74632ea30299a4ce6ba72"],"233211c3dbff6f367588be5bbb4ac77f72eae193":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"507e7decdf00981d09a74632ea30299a4ce6ba72":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["0d6879a535f14bc53be7c86de58142558c4f9eee"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["491c9672ec42582fe43960452dbd37f1c80fe0f0"],"0265144286422ad99682a00904cc2536b79c8535":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"f34d83c894e07c24f5f957820777b5da2cc29e5a":["dab78f8a6599f23a28441dde36c8ac45c556b51f"],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["aa3636f020dd2f593d4df8cf2a55798e984ae749","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"750239682d222924398443d581163940f48d68fc":["90f8f57b02301cce9a16e8ac900fb6aef3cd18a9"],"0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b":["ab68488225b6a6c357dda72ed11dedca9914a192"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["daeaac5f7b42498079f0fb7c3a91802e588fc21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","507e7decdf00981d09a74632ea30299a4ce6ba72","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}