{"path":"src/java/org/apache/lucene/search/TimeLimitedCollector#setResolution(long).mjava","commits":[{"id":"ea73f58403a6c26bcb09b4933832348d80deb45b","date":1202849732,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TimeLimitedCollector#setResolution(long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set the timer resolution.\n   * The default timer resolution is 20 milliseconds. \n   * This means that a search required to take no longer than \n   * 800 milliseconds may be stopped after 780 to 820 milliseconds.\n   * <br>Note that: \n   * <ul>\n   * <li>Finer (smaller) resolution is more accurate but less efficient.</li>\n   * <li>Setting resolution to less than 5 milliseconds will be silently modified to 5 milliseconds.</li>\n   * <li>Setting resolution smaller than current resolution might take effect only after current \n   * resolution. (Assume current resolution of 20 milliseconds is modified to 5 milliseconds, \n   * then it can take up to 20 milliseconds for the change to have effect.</li>\n   * </ul>      \n   */\n  public static void setResolution(long newResolution) {\n    resolution = Math.max(newResolution,5); // 5 milliseconds is about the minimum reasonable time for a Object.wait(long) call.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61cbcf396559d597a914594d7e2830c142ecfd91","date":1255444081,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/TimeLimitedCollector#setResolution(long).mjava","sourceNew":null,"sourceOld":"  /**\n   * Set the timer resolution.\n   * The default timer resolution is 20 milliseconds. \n   * This means that a search required to take no longer than \n   * 800 milliseconds may be stopped after 780 to 820 milliseconds.\n   * <br>Note that: \n   * <ul>\n   * <li>Finer (smaller) resolution is more accurate but less efficient.</li>\n   * <li>Setting resolution to less than 5 milliseconds will be silently modified to 5 milliseconds.</li>\n   * <li>Setting resolution smaller than current resolution might take effect only after current \n   * resolution. (Assume current resolution of 20 milliseconds is modified to 5 milliseconds, \n   * then it can take up to 20 milliseconds for the change to have effect.</li>\n   * </ul>      \n   */\n  public static void setResolution(long newResolution) {\n    resolution = Math.max(newResolution,5); // 5 milliseconds is about the minimum reasonable time for a Object.wait(long) call.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ea73f58403a6c26bcb09b4933832348d80deb45b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"61cbcf396559d597a914594d7e2830c142ecfd91":["ea73f58403a6c26bcb09b4933832348d80deb45b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61cbcf396559d597a914594d7e2830c142ecfd91"]},"commit2Childs":{"ea73f58403a6c26bcb09b4933832348d80deb45b":["61cbcf396559d597a914594d7e2830c142ecfd91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea73f58403a6c26bcb09b4933832348d80deb45b"],"61cbcf396559d597a914594d7e2830c142ecfd91":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}