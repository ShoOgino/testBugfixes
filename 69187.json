{"path":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton).mjava","sourceNew":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton) {\n    super(term.field());\n    this.term = term;\n    this.automaton = automaton;\n    this.compiled = new CompiledAutomaton(automaton);\n  }\n\n","sourceOld":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton) {\n    super(term.field());\n    this.term = term;\n    this.automaton = automaton;\n    this.compiled = new CompiledAutomaton(automaton);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton).mjava","sourceNew":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton) {\n    super(term.field());\n    this.term = term;\n    this.automaton = automaton;\n    this.lightAutomaton = null;\n    this.compiled = new CompiledAutomaton(automaton);\n  }\n\n","sourceOld":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton) {\n    super(term.field());\n    this.term = term;\n    this.automaton = automaton;\n    this.compiled = new CompiledAutomaton(automaton);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f4ef381bf0c2d618c6db830d3dd668c6901c05a","date":1402592253,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton) {\n    super(term.field());\n    this.term = term;\n    this.automaton = automaton;\n    this.lightAutomaton = null;\n    this.compiled = new CompiledAutomaton(automaton);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,LightAutomaton).mjava","sourceNew":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton) {\n    super(term.field());\n    this.term = term;\n    this.automaton = automaton;\n    this.compiled = new CompiledAutomaton(automaton);\n  }\n\n","sourceOld":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   */\n  public AutomatonQuery(final Term term, LightAutomaton automaton) {\n    super(term.field());\n    this.term = term;\n    this.lightAutomaton = automaton;\n    this.compiled = new CompiledAutomaton(automaton);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afa43c2280907c22d8a132b79a2873becc002870","date":1415139362,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#AutomatonQuery(Term,Automaton).mjava","sourceNew":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton) {\n    this(term, automaton, Operations.DEFAULT_MAX_DETERMINIZED_STATES);\n  }\n\n","sourceOld":"  /**\n   * Create a new AutomatonQuery from an {@link Automaton}.\n   * \n   * @param term Term containing field and possibly some pattern structure. The\n   *        term text is ignored.\n   * @param automaton Automaton to run, terms that are accepted are considered a\n   *        match.\n   */\n  public AutomatonQuery(final Term term, Automaton automaton) {\n    super(term.field());\n    this.term = term;\n    this.automaton = automaton;\n    this.compiled = new CompiledAutomaton(automaton);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"afa43c2280907c22d8a132b79a2873becc002870":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afa43c2280907c22d8a132b79a2873becc002870"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["afa43c2280907c22d8a132b79a2873becc002870","ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"afa43c2280907c22d8a132b79a2873becc002870":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}