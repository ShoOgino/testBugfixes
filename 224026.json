{"path":"solr/contrib/solr-mr/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#buildShardUrls(List[Object],Integer).mjava","commits":[{"id":"d6e604e9030fb0cabf0c5a85ae6039921a81419c","date":1386009743,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/solr-mr/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#buildShardUrls(List[Object],Integer).mjava","pathOld":"/dev/null","sourceNew":"  static List<List<String>> buildShardUrls(List<Object> urls, Integer numShards) {\n    if (urls == null) return null;\n    List<List<String>> shardUrls = new ArrayList<List<String>>(urls.size());\n    List<String> list = null;\n    \n    int sz;\n    if (numShards == null) {\n      numShards = urls.size();\n    }\n    sz = (int) Math.ceil(urls.size() / (float)numShards);\n    for (int i = 0; i < urls.size(); i++) {\n      if (i % sz == 0) {\n        list = new ArrayList<String>();\n        shardUrls.add(list);\n      }\n      list.add((String) urls.get(i));\n    }\n\n    return shardUrls;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#buildShardUrls(List[Object],Integer).mjava","pathOld":"solr/contrib/solr-mr/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#buildShardUrls(List[Object],Integer).mjava","sourceNew":"  static List<List<String>> buildShardUrls(List<Object> urls, Integer numShards) {\n    if (urls == null) return null;\n    List<List<String>> shardUrls = new ArrayList<List<String>>(urls.size());\n    List<String> list = null;\n    \n    int sz;\n    if (numShards == null) {\n      numShards = urls.size();\n    }\n    sz = (int) Math.ceil(urls.size() / (float)numShards);\n    for (int i = 0; i < urls.size(); i++) {\n      if (i % sz == 0) {\n        list = new ArrayList<String>();\n        shardUrls.add(list);\n      }\n      list.add((String) urls.get(i));\n    }\n\n    return shardUrls;\n  }\n\n","sourceOld":"  static List<List<String>> buildShardUrls(List<Object> urls, Integer numShards) {\n    if (urls == null) return null;\n    List<List<String>> shardUrls = new ArrayList<List<String>>(urls.size());\n    List<String> list = null;\n    \n    int sz;\n    if (numShards == null) {\n      numShards = urls.size();\n    }\n    sz = (int) Math.ceil(urls.size() / (float)numShards);\n    for (int i = 0; i < urls.size(); i++) {\n      if (i % sz == 0) {\n        list = new ArrayList<String>();\n        shardUrls.add(list);\n      }\n      list.add((String) urls.get(i));\n    }\n\n    return shardUrls;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["d6e604e9030fb0cabf0c5a85ae6039921a81419c"],"d6e604e9030fb0cabf0c5a85ae6039921a81419c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d6e604e9030fb0cabf0c5a85ae6039921a81419c":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6e604e9030fb0cabf0c5a85ae6039921a81419c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}