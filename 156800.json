{"path":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#loadTermsIndex(int).mjava","commits":[{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#loadTermsIndex(int).mjava","pathOld":"/dev/null","sourceNew":"  // Externally synced in IndexWriter\n  @Override\n  public void loadTermsIndex(int indexDivisor) throws IOException {\n    if (!indexLoaded) {\n\n      if (indexDivisor < 0) {\n        this.indexDivisor = -indexDivisor;\n      } else {\n        this.indexDivisor = indexDivisor;\n      }\n\n      Iterator<FieldIndexData> it = fields.values().iterator();\n      while(it.hasNext()) {\n        it.next().loadTermsIndex();\n      }\n\n      indexLoaded = true;\n      in.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#loadTermsIndex(int).mjava","pathOld":"/dev/null","sourceNew":"  // Externally synced in IndexWriter\n  @Override\n  public void loadTermsIndex(int indexDivisor) throws IOException {\n    if (!indexLoaded) {\n\n      if (indexDivisor < 0) {\n        this.indexDivisor = -indexDivisor;\n      } else {\n        this.indexDivisor = indexDivisor;\n      }\n\n      Iterator<FieldIndexData> it = fields.values().iterator();\n      while(it.hasNext()) {\n        it.next().loadTermsIndex();\n      }\n\n      indexLoaded = true;\n      in.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#loadTermsIndex(int).mjava","pathOld":"/dev/null","sourceNew":"  // Externally synced in IndexWriter\n  @Override\n  public void loadTermsIndex(int indexDivisor) throws IOException {\n    if (!indexLoaded) {\n\n      if (indexDivisor < 0) {\n        this.indexDivisor = -indexDivisor;\n      } else {\n        this.indexDivisor = indexDivisor;\n      }\n\n      Iterator<FieldIndexData> it = fields.values().iterator();\n      while(it.hasNext()) {\n        it.next().loadTermsIndex();\n      }\n\n      indexLoaded = true;\n      in.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0061262413ecc163d6eebba1b5c43ab91a0c2dc5","date":1311195279,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#loadTermsIndex(int).mjava","sourceNew":null,"sourceOld":"  // Externally synced in IndexWriter\n  @Override\n  public void loadTermsIndex(int indexDivisor) throws IOException {\n    if (!indexLoaded) {\n\n      if (indexDivisor < 0) {\n        this.indexDivisor = -indexDivisor;\n      } else {\n        this.indexDivisor = indexDivisor;\n      }\n\n      Iterator<FieldIndexData> it = fields.values().iterator();\n      while(it.hasNext()) {\n        it.next().loadTermsIndex();\n      }\n\n      indexLoaded = true;\n      in.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"0061262413ecc163d6eebba1b5c43ab91a0c2dc5":["56da903869515527852ee21ea7ef7bfe414cd40d"],"56da903869515527852ee21ea7ef7bfe414cd40d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0061262413ecc163d6eebba1b5c43ab91a0c2dc5"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"0061262413ecc163d6eebba1b5c43ab91a0c2dc5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","0061262413ecc163d6eebba1b5c43ab91a0c2dc5","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","56da903869515527852ee21ea7ef7bfe414cd40d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}