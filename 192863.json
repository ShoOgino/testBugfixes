{"path":"modules/analysis/kuromoji/src/tools/java/org/apache/lucene/analysis/kuromoji/util/BinaryDictionaryWriter#addMapping(int,int).mjava","commits":[{"id":"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","date":1326399048,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/tools/java/org/apache/lucene/analysis/kuromoji/util/BinaryDictionaryWriter#addMapping(int,int).mjava","pathOld":"/dev/null","sourceNew":"  public void addMapping(int sourceId, int wordId) {\n    assert wordId > lastWordId : \"words out of order: \" + wordId + \" vs lastID: \" + lastWordId;\n    \n    if (sourceId > lastSourceId) {\n      assert sourceId > lastSourceId : \"source ids out of order: lastSourceId=\" + lastSourceId + \" vs sourceId=\" + sourceId;\n      targetMapOffsets = ArrayUtil.grow(targetMapOffsets, sourceId + 1);\n      for (int i = lastSourceId + 1; i <= sourceId; i++) {\n        targetMapOffsets[i] = targetMapEndOffset;\n      }\n    } else {\n      assert sourceId == lastSourceId;\n    }\n\n    targetMap = ArrayUtil.grow(targetMap, targetMapEndOffset + 1);\n    targetMap[targetMapEndOffset] = wordId;\n    targetMapEndOffset++;\n\n    lastSourceId = sourceId;\n    lastWordId = wordId;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98d45c1ff2c99694b6de2201175f9b8b8b27b597","date":1332757908,"type":5,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/tools/java/org/apache/lucene/analysis/ja/util/BinaryDictionaryWriter#addMapping(int,int).mjava","pathOld":"modules/analysis/kuromoji/src/tools/java/org/apache/lucene/analysis/kuromoji/util/BinaryDictionaryWriter#addMapping(int,int).mjava","sourceNew":"  public void addMapping(int sourceId, int wordId) {\n    assert wordId > lastWordId : \"words out of order: \" + wordId + \" vs lastID: \" + lastWordId;\n    \n    if (sourceId > lastSourceId) {\n      assert sourceId > lastSourceId : \"source ids out of order: lastSourceId=\" + lastSourceId + \" vs sourceId=\" + sourceId;\n      targetMapOffsets = ArrayUtil.grow(targetMapOffsets, sourceId + 1);\n      for (int i = lastSourceId + 1; i <= sourceId; i++) {\n        targetMapOffsets[i] = targetMapEndOffset;\n      }\n    } else {\n      assert sourceId == lastSourceId;\n    }\n\n    targetMap = ArrayUtil.grow(targetMap, targetMapEndOffset + 1);\n    targetMap[targetMapEndOffset] = wordId;\n    targetMapEndOffset++;\n\n    lastSourceId = sourceId;\n    lastWordId = wordId;\n  }\n\n","sourceOld":"  public void addMapping(int sourceId, int wordId) {\n    assert wordId > lastWordId : \"words out of order: \" + wordId + \" vs lastID: \" + lastWordId;\n    \n    if (sourceId > lastSourceId) {\n      assert sourceId > lastSourceId : \"source ids out of order: lastSourceId=\" + lastSourceId + \" vs sourceId=\" + sourceId;\n      targetMapOffsets = ArrayUtil.grow(targetMapOffsets, sourceId + 1);\n      for (int i = lastSourceId + 1; i <= sourceId; i++) {\n        targetMapOffsets[i] = targetMapEndOffset;\n      }\n    } else {\n      assert sourceId == lastSourceId;\n    }\n\n    targetMap = ArrayUtil.grow(targetMap, targetMapEndOffset + 1);\n    targetMap[targetMapEndOffset] = wordId;\n    targetMapEndOffset++;\n\n    lastSourceId = sourceId;\n    lastWordId = wordId;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}