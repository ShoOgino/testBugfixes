{"path":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(boolean).mjava","commits":[{"id":"e0b950aef8cdf4606d480e28ea17bd870b93c81e","date":1060680143,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(boolean)\n   */\n  public Collection getFieldNames(boolean indexed) throws IOException {\n    // maintain a unique set of field names\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed == indexed)\n        fieldSet.add(fi.name);\n      }\n      return fieldSet;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(boolean).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(boolean)\n   */\n  public Collection getFieldNames(boolean indexed) throws IOException {\n    // maintain a unique set of field names\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed == indexed)\n        fieldSet.add(fi.name);\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(boolean)\n   */\n  public Collection getFieldNames(boolean indexed) throws IOException {\n    // maintain a unique set of field names\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed == indexed)\n        fieldSet.add(fi.name);\n      }\n      return fieldSet;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e444951e98c00cc6f00fdbc2e00286be07067f8","date":1091825429,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(boolean).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(boolean)\n   */\n  public Collection getFieldNames(boolean indexed) {\n    // maintain a unique set of field names\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed == indexed)\n        fieldSet.add(fi.name);\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(boolean)\n   */\n  public Collection getFieldNames(boolean indexed) throws IOException {\n    // maintain a unique set of field names\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed == indexed)\n        fieldSet.add(fi.name);\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c687c6cd32bfdceab8fd653a483592265774d97","date":1104356145,"type":3,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(boolean).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(boolean)\n   * @deprecated  Replaced by {@link #getFieldNames (IndexReader.FieldOption fldOption)}\n   */\n  public Collection getFieldNames(boolean indexed) {\n    // maintain a unique set of field names\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed == indexed)\n        fieldSet.add(fi.name);\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(boolean)\n   */\n  public Collection getFieldNames(boolean indexed) {\n    // maintain a unique set of field names\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed == indexed)\n        fieldSet.add(fi.name);\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * @see IndexReader#getFieldNames(boolean)\n   * @deprecated  Replaced by {@link #getFieldNames (IndexReader.FieldOption fldOption)}\n   */\n  public Collection getFieldNames(boolean indexed) {\n    // maintain a unique set of field names\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed == indexed)\n        fieldSet.add(fi.name);\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"],"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["7c687c6cd32bfdceab8fd653a483592265774d97"],"3e444951e98c00cc6f00fdbc2e00286be07067f8":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"7c687c6cd32bfdceab8fd653a483592265774d97":["3e444951e98c00cc6f00fdbc2e00286be07067f8"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["3e444951e98c00cc6f00fdbc2e00286be07067f8"],"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"],"3e444951e98c00cc6f00fdbc2e00286be07067f8":["7c687c6cd32bfdceab8fd653a483592265774d97"],"7c687c6cd32bfdceab8fd653a483592265774d97":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}