{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/QualityBenchmark#QualityBenchmark(QualityQuery[],QualityQueryParser,Searcher,String).mjava","commits":[{"id":"df2d68685a69bd82bf79243e28623c0775eb7bd8","date":1185567892,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/QualityBenchmark#QualityBenchmark(QualityQuery[],QualityQueryParser,Searcher,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a QualityBenchmark.\n   * @param qqs quality queries to run.\n   * @param qqParser parser for turning QualityQueries into Lucene Queries. \n   * @param searcher index to be searched.\n   * @param docNameField name of field containg the document name.\n   *        This allows to extract the doc name for search results,\n   *        and is important for judging the results.  \n   */\n  public QualityBenchmark(QualityQuery qqs[], QualityQueryParser qqParser, \n      Searcher searcher, String docNameField) {\n    this.qualityQueries = qqs;\n    this.qqParser = qqParser;\n    this.searcher = searcher;\n    this.docNameField = docNameField;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"add7d922e63099fbce8f0a1b31216df7ef5067f1","date":1252002701,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/QualityBenchmark#QualityBenchmark(QualityQuery[],QualityQueryParser,Searcher,String).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/QualityBenchmark#QualityBenchmark(QualityQuery[],QualityQueryParser,Searcher,String).mjava","sourceNew":"  /**\n   * Create a QualityBenchmark.\n   * @param qqs quality queries to run.\n   * @param qqParser parser for turning QualityQueries into Lucene Queries. \n   * @param searcher index to be searched.\n   * @param docNameField name of field containing the document name.\n   *        This allows to extract the doc name for search results,\n   *        and is important for judging the results.  \n   */\n  public QualityBenchmark(QualityQuery qqs[], QualityQueryParser qqParser, \n      Searcher searcher, String docNameField) {\n    this.qualityQueries = qqs;\n    this.qqParser = qqParser;\n    this.searcher = searcher;\n    this.docNameField = docNameField;\n  }\n\n","sourceOld":"  /**\n   * Create a QualityBenchmark.\n   * @param qqs quality queries to run.\n   * @param qqParser parser for turning QualityQueries into Lucene Queries. \n   * @param searcher index to be searched.\n   * @param docNameField name of field containg the document name.\n   *        This allows to extract the doc name for search results,\n   *        and is important for judging the results.  \n   */\n  public QualityBenchmark(QualityQuery qqs[], QualityQueryParser qqParser, \n      Searcher searcher, String docNameField) {\n    this.qualityQueries = qqs;\n    this.qqParser = qqParser;\n    this.searcher = searcher;\n    this.docNameField = docNameField;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/QualityBenchmark#QualityBenchmark(QualityQuery[],QualityQueryParser,Searcher,String).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/QualityBenchmark#QualityBenchmark(QualityQuery[],QualityQueryParser,Searcher,String).mjava","sourceNew":"  /**\n   * Create a QualityBenchmark.\n   * @param qqs quality queries to run.\n   * @param qqParser parser for turning QualityQueries into Lucene Queries. \n   * @param searcher index to be searched.\n   * @param docNameField name of field containing the document name.\n   *        This allows to extract the doc name for search results,\n   *        and is important for judging the results.  \n   */\n  public QualityBenchmark(QualityQuery qqs[], QualityQueryParser qqParser, \n      Searcher searcher, String docNameField) {\n    this.qualityQueries = qqs;\n    this.qqParser = qqParser;\n    this.searcher = searcher;\n    this.docNameField = docNameField;\n  }\n\n","sourceOld":"  /**\n   * Create a QualityBenchmark.\n   * @param qqs quality queries to run.\n   * @param qqParser parser for turning QualityQueries into Lucene Queries. \n   * @param searcher index to be searched.\n   * @param docNameField name of field containing the document name.\n   *        This allows to extract the doc name for search results,\n   *        and is important for judging the results.  \n   */\n  public QualityBenchmark(QualityQuery qqs[], QualityQueryParser qqParser, \n      Searcher searcher, String docNameField) {\n    this.qualityQueries = qqs;\n    this.qqParser = qqParser;\n    this.searcher = searcher;\n    this.docNameField = docNameField;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"add7d922e63099fbce8f0a1b31216df7ef5067f1":["df2d68685a69bd82bf79243e28623c0775eb7bd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df2d68685a69bd82bf79243e28623c0775eb7bd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["add7d922e63099fbce8f0a1b31216df7ef5067f1"]},"commit2Childs":{"add7d922e63099fbce8f0a1b31216df7ef5067f1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df2d68685a69bd82bf79243e28623c0775eb7bd8"],"df2d68685a69bd82bf79243e28623c0775eb7bd8":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}