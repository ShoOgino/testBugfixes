{"path":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,Properties,JettyConfig).mjava","commits":[{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,Properties,JettyConfig).mjava","pathOld":"/dev/null","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, Properties nodeProperties, JettyConfig jettyConfig) throws Exception {\n\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    Properties nodeProps = new Properties(nodeProperties);\n    nodeProps.setProperty(\"coreRootDirectory\", coresDir.toString());\n    nodeProps.setProperty(\"configSetBaseDir\", solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    jetty = new JettySolrRunner(solrHome, nodeProps, jettyConfig);\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,Properties,JettyConfig).mjava","pathOld":"/dev/null","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, Properties nodeProperties, JettyConfig jettyConfig) throws Exception {\n\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    Properties nodeProps = new Properties(nodeProperties);\n    nodeProps.setProperty(\"coreRootDirectory\", coresDir.toString());\n    nodeProps.setProperty(\"configSetBaseDir\", solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    jetty = new JettySolrRunner(solrHome, nodeProps, jettyConfig);\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6554f36a4636755009195a7840518bf6b4f03d6c","date":1481906808,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,Properties,JettyConfig).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,Properties,JettyConfig).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, Properties nodeProperties, JettyConfig jettyConfig) throws Exception {\n\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    Properties nodeProps = new Properties(nodeProperties);\n    nodeProps.setProperty(\"coreRootDirectory\", coresDir.toString());\n    nodeProps.setProperty(\"configSetBaseDir\", solrHome);\n\n    jetty = new JettySolrRunner(solrHome, nodeProps, jettyConfig);\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, Properties nodeProperties, JettyConfig jettyConfig) throws Exception {\n\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    Properties nodeProps = new Properties(nodeProperties);\n    nodeProps.setProperty(\"coreRootDirectory\", coresDir.toString());\n    nodeProps.setProperty(\"configSetBaseDir\", solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    jetty = new JettySolrRunner(solrHome, nodeProps, jettyConfig);\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,Properties,JettyConfig).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,Properties,JettyConfig).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, Properties nodeProperties, JettyConfig jettyConfig) throws Exception {\n\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    Properties nodeProps = new Properties(nodeProperties);\n    nodeProps.setProperty(\"coreRootDirectory\", coresDir.toString());\n    nodeProps.setProperty(\"configSetBaseDir\", solrHome);\n\n    jetty = new JettySolrRunner(solrHome, nodeProps, jettyConfig);\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, Properties nodeProperties, JettyConfig jettyConfig) throws Exception {\n\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    Properties nodeProps = new Properties(nodeProperties);\n    nodeProps.setProperty(\"coreRootDirectory\", coresDir.toString());\n    nodeProps.setProperty(\"configSetBaseDir\", solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    jetty = new JettySolrRunner(solrHome, nodeProps, jettyConfig);\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":5,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createAndStartJetty(String,Properties,JettyConfig).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,Properties,JettyConfig).mjava","sourceNew":"  public static JettySolrRunner createAndStartJetty(String solrHome, Properties nodeProperties, JettyConfig jettyConfig) throws Exception {\n\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    Properties nodeProps = new Properties(nodeProperties);\n    nodeProps.setProperty(\"coreRootDirectory\", coresDir.toString());\n    nodeProps.setProperty(\"configSetBaseDir\", solrHome);\n\n    jetty = new JettySolrRunner(solrHome, nodeProps, jettyConfig);\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, Properties nodeProperties, JettyConfig jettyConfig) throws Exception {\n\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    Properties nodeProps = new Properties(nodeProperties);\n    nodeProps.setProperty(\"coreRootDirectory\", coresDir.toString());\n    nodeProps.setProperty(\"configSetBaseDir\", solrHome);\n\n    jetty = new JettySolrRunner(solrHome, nodeProps, jettyConfig);\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9bc766d645fa848f86c381c7f6acf2c881c99399"],"6554f36a4636755009195a7840518bf6b4f03d6c":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["9bc766d645fa848f86c381c7f6acf2c881c99399","6554f36a4636755009195a7840518bf6b4f03d6c"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["6554f36a4636755009195a7840518bf6b4f03d6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"6554f36a4636755009195a7840518bf6b4f03d6c":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9bc766d645fa848f86c381c7f6acf2c881c99399"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","6554f36a4636755009195a7840518bf6b4f03d6c","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}