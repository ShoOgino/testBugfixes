{"path":"solr/core/src/java/org/apache/solr/handler/sql/SolrProject#implement(Implementor).mjava","commits":[{"id":"d984627825732e682759c22df7a3b171a80f3812","date":1461857653,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrProject#implement(Implementor).mjava","pathOld":"/dev/null","sourceNew":"  public void implement(Implementor implementor) {\n    implementor.visitChild(0, getInput());\n    final SolrRules.RexToSolrTranslator translator = new SolrRules.RexToSolrTranslator(\n        (JavaTypeFactory) getCluster().getTypeFactory(), SolrRules.solrFieldNames(getInput().getRowType()));\n    final Map<String, String> fieldMappings = new HashMap<>();\n    for (Pair<RexNode, String> pair : getNamedProjects()) {\n      final String name = pair.right;\n      final String expr = pair.left.accept(translator);\n      fieldMappings.put(name, expr);\n    }\n    implementor.add(fieldMappings, null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1bfdd692c5b78fe01e8f90339fb1edbcc887a90","date":1461958396,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrProject#implement(Implementor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrProject#implement(Implementor).mjava","sourceNew":"  public void implement(Implementor implementor) {\n    implementor.visitChild(0, getInput());\n    final SolrRules.RexToSolrTranslator translator = new SolrRules.RexToSolrTranslator(\n        (JavaTypeFactory) getCluster().getTypeFactory(), SolrRules.solrFieldNames(getInput().getRowType()));\n    final Map<String, String> fieldMappings = new HashMap<>();\n    for (Pair<RexNode, String> pair : getNamedProjects()) {\n      final String name = pair.right;\n      final String expr = pair.left.accept(translator);\n      fieldMappings.put(name, expr);\n    }\n    implementor.addFieldMappings(fieldMappings);\n  }\n\n","sourceOld":"  public void implement(Implementor implementor) {\n    implementor.visitChild(0, getInput());\n    final SolrRules.RexToSolrTranslator translator = new SolrRules.RexToSolrTranslator(\n        (JavaTypeFactory) getCluster().getTypeFactory(), SolrRules.solrFieldNames(getInput().getRowType()));\n    final Map<String, String> fieldMappings = new HashMap<>();\n    for (Pair<RexNode, String> pair : getNamedProjects()) {\n      final String name = pair.right;\n      final String expr = pair.left.accept(translator);\n      fieldMappings.put(name, expr);\n    }\n    implementor.add(fieldMappings, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa4a466195c69a11a113b33adc90f9069031e54e","date":1477605536,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrProject#implement(Implementor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrProject#implement(Implementor).mjava","sourceNew":"  public void implement(Implementor implementor) {\n    implementor.visitChild(0, getInput());\n    final SolrRules.RexToSolrTranslator translator = new SolrRules.RexToSolrTranslator(\n        (JavaTypeFactory) getCluster().getTypeFactory(), SolrRules.solrFieldNames(getInput().getRowType()));\n    for (Pair<RexNode, String> pair : getNamedProjects()) {\n      final String name = pair.right;\n      final String expr = pair.left.accept(translator);\n      implementor.addFieldMapping(name, expr);\n    }\n  }\n\n","sourceOld":"  public void implement(Implementor implementor) {\n    implementor.visitChild(0, getInput());\n    final SolrRules.RexToSolrTranslator translator = new SolrRules.RexToSolrTranslator(\n        (JavaTypeFactory) getCluster().getTypeFactory(), SolrRules.solrFieldNames(getInput().getRowType()));\n    final Map<String, String> fieldMappings = new HashMap<>();\n    for (Pair<RexNode, String> pair : getNamedProjects()) {\n      final String name = pair.right;\n      final String expr = pair.left.accept(translator);\n      fieldMappings.put(name, expr);\n    }\n    implementor.addFieldMappings(fieldMappings);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":0,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrProject#implement(Implementor).mjava","pathOld":"/dev/null","sourceNew":"  public void implement(Implementor implementor) {\n    implementor.visitChild(0, getInput());\n    final SolrRules.RexToSolrTranslator translator = new SolrRules.RexToSolrTranslator(\n        (JavaTypeFactory) getCluster().getTypeFactory(), SolrRules.solrFieldNames(getInput().getRowType()));\n    for (Pair<RexNode, String> pair : getNamedProjects()) {\n      final String name = pair.right;\n      final String expr = pair.left.accept(translator);\n      implementor.addFieldMapping(name, expr);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9fe3175bbaa122d67f736a75c2984617c502cc0","date":1490722938,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrProject#implement(Implementor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrProject#implement(Implementor).mjava","sourceNew":"  public void implement(Implementor implementor) {\n    implementor.visitChild(0, getInput());\n    final SolrRules.RexToSolrTranslator translator = new SolrRules.RexToSolrTranslator(\n        (JavaTypeFactory) getCluster().getTypeFactory(), SolrRules.solrFieldNames(getInput().getRowType()));\n    for (Pair<RexNode, String> pair : getNamedProjects()) {\n      final String name = pair.right;\n      final String expr = pair.left.accept(translator);\n      implementor.addFieldMapping(name, expr, false);\n    }\n  }\n\n","sourceOld":"  public void implement(Implementor implementor) {\n    implementor.visitChild(0, getInput());\n    final SolrRules.RexToSolrTranslator translator = new SolrRules.RexToSolrTranslator(\n        (JavaTypeFactory) getCluster().getTypeFactory(), SolrRules.solrFieldNames(getInput().getRowType()));\n    for (Pair<RexNode, String> pair : getNamedProjects()) {\n      final String name = pair.right;\n      final String expr = pair.left.accept(translator);\n      implementor.addFieldMapping(name, expr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9b741b54c163686a5fd077895a797daa9b0b95f","date":1490873946,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrProject#implement(Implementor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrProject#implement(Implementor).mjava","sourceNew":"  public void implement(Implementor implementor) {\n    implementor.visitChild(0, getInput());\n    final SolrRules.RexToSolrTranslator translator = new SolrRules.RexToSolrTranslator(\n        (JavaTypeFactory) getCluster().getTypeFactory(), SolrRules.solrFieldNames(getInput().getRowType()));\n    for (Pair<RexNode, String> pair : getNamedProjects()) {\n      final String name = pair.right;\n      final String expr = pair.left.accept(translator);\n      implementor.addFieldMapping(name, expr, false);\n    }\n  }\n\n","sourceOld":"  public void implement(Implementor implementor) {\n    implementor.visitChild(0, getInput());\n    final SolrRules.RexToSolrTranslator translator = new SolrRules.RexToSolrTranslator(\n        (JavaTypeFactory) getCluster().getTypeFactory(), SolrRules.solrFieldNames(getInput().getRowType()));\n    for (Pair<RexNode, String> pair : getNamedProjects()) {\n      final String name = pair.right;\n      final String expr = pair.left.accept(translator);\n      implementor.addFieldMapping(name, expr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fa4a466195c69a11a113b33adc90f9069031e54e":["c1bfdd692c5b78fe01e8f90339fb1edbcc887a90"],"a9b741b54c163686a5fd077895a797daa9b0b95f":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fa4a466195c69a11a113b33adc90f9069031e54e"],"d984627825732e682759c22df7a3b171a80f3812":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9fe3175bbaa122d67f736a75c2984617c502cc0":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"c1bfdd692c5b78fe01e8f90339fb1edbcc887a90":["d984627825732e682759c22df7a3b171a80f3812"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d9fe3175bbaa122d67f736a75c2984617c502cc0"]},"commit2Childs":{"fa4a466195c69a11a113b33adc90f9069031e54e":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"a9b741b54c163686a5fd077895a797daa9b0b95f":[],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["a9b741b54c163686a5fd077895a797daa9b0b95f","d9fe3175bbaa122d67f736a75c2984617c502cc0"],"d984627825732e682759c22df7a3b171a80f3812":["c1bfdd692c5b78fe01e8f90339fb1edbcc887a90"],"d9fe3175bbaa122d67f736a75c2984617c502cc0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c1bfdd692c5b78fe01e8f90339fb1edbcc887a90":["fa4a466195c69a11a113b33adc90f9069031e54e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa","d984627825732e682759c22df7a3b171a80f3812"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a9b741b54c163686a5fd077895a797daa9b0b95f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}