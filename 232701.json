{"path":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","commits":[{"id":"aa6d0ca44ce171ad041951fa8fb94731b7d778d9","date":1316629244,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestPerFieldSimilarity#testDefaultsDynamic().mjava","sourceNew":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    Similarity sim = getSimilarity(\"text_sim3\");\n    assertEquals(MockConfigurableSimilarity.class, sim.getClass());\n    assertEquals(\"I am your default sim\", ((MockConfigurableSimilarity)sim).getPassthrough());\n  }\n\n","sourceOld":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarityProvider().get(\"text_sim3\");\n    assertEquals(MockConfigurableSimilarity.class, sim.getClass());\n    assertEquals(\"I am your default sim\", ((MockConfigurableSimilarity)sim).getPassthrough());\n    searcher.decref();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","sourceNew":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    Similarity sim = getSimilarity(\"text_sim3\");\n    assertEquals(DefaultSimilarity.class, sim.getClass());\n  }\n\n","sourceOld":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    Similarity sim = getSimilarity(\"text_sim3\");\n    assertEquals(MockConfigurableSimilarity.class, sim.getClass());\n    assertEquals(\"I am your default sim\", ((MockConfigurableSimilarity)sim).getPassthrough());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","sourceNew":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    Similarity sim = getSimilarity(\"text_sim3\");\n    assertEquals(ClassicSimilarity.class, sim.getClass());\n  }\n\n","sourceOld":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    Similarity sim = getSimilarity(\"text_sim3\");\n    assertEquals(DefaultSimilarity.class, sim.getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7bf01579860b01740921e35dd5db5cf4c4671fa","date":1447106877,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","sourceNew":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    Similarity sim = getSimilarity(\"text_sim3\");\n    assertEquals(BM25Similarity.class, sim.getClass());\n  }\n\n","sourceOld":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    Similarity sim = getSimilarity(\"text_sim3\");\n    assertEquals(ClassicSimilarity.class, sim.getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"49b9c73648f983a139745761ed2bedf2e3821b34","date":1543567369,"type":3,"author":"javanna","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","sourceNew":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    Similarity sim = getSimilarity(\"text_sim3\");\n    assertEquals(LegacyBM25Similarity.class, sim.getClass());\n  }\n\n","sourceOld":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    Similarity sim = getSimilarity(\"text_sim3\");\n    assertEquals(BM25Similarity.class, sim.getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da56d90379fbe988bf847d3482efa685803c5193","date":1544607230,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testDefaultsDynamic().mjava","sourceNew":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    Similarity sim = getSimilarity(\"text_sim3\");\n    assertEquals(BM25Similarity.class, sim.getClass());\n  }\n\n","sourceOld":"  /** ... and for a dynamic field */\n  public void testDefaultsDynamic() throws Exception {\n    Similarity sim = getSimilarity(\"text_sim3\");\n    assertEquals(LegacyBM25Similarity.class, sim.getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"49b9c73648f983a139745761ed2bedf2e3821b34":["f7bf01579860b01740921e35dd5db5cf4c4671fa"],"f7bf01579860b01740921e35dd5db5cf4c4671fa":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"aa6d0ca44ce171ad041951fa8fb94731b7d778d9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["aa6d0ca44ce171ad041951fa8fb94731b7d778d9"],"da56d90379fbe988bf847d3482efa685803c5193":["49b9c73648f983a139745761ed2bedf2e3821b34"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["da56d90379fbe988bf847d3482efa685803c5193"]},"commit2Childs":{"49b9c73648f983a139745761ed2bedf2e3821b34":["da56d90379fbe988bf847d3482efa685803c5193"],"f7bf01579860b01740921e35dd5db5cf4c4671fa":["49b9c73648f983a139745761ed2bedf2e3821b34"],"aa6d0ca44ce171ad041951fa8fb94731b7d778d9":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa6d0ca44ce171ad041951fa8fb94731b7d778d9"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["f7bf01579860b01740921e35dd5db5cf4c4671fa"],"da56d90379fbe988bf847d3482efa685803c5193":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}