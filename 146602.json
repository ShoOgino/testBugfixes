{"path":"solr/core/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","sourceNew":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","sourceOld":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","sourceNew":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","sourceOld":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","sourceNew":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","sourceOld":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","sourceNew":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","sourceOld":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","sourceNew":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","sourceOld":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2106271e380c198349e0f6eac0395bb462913fab","date":1397072894,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","sourceNew":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    return f.getType().getValueSource(f, fp);\n  }\n\n","sourceOld":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    if (f.getType().getClass() == DateField.class) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Can't use ms() function on non-numeric legacy date field \" + arg);\n    }\n    return f.getType().getValueSource(f, fp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":4,"author":"Mike Drob","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/DateValueSourceParser[ValueSourceParser]#getValueSource(FunctionQParser,String).mjava","sourceNew":null,"sourceOld":"  public ValueSource getValueSource(FunctionQParser fp, String arg) {\n    if (arg == null) return null;\n    SchemaField f = fp.req.getSchema().getField(arg);\n    return f.getType().getValueSource(f, fp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c26f00b574427b55127e869b935845554afde1fa","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2106271e380c198349e0f6eac0395bb462913fab":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["2106271e380c198349e0f6eac0395bb462913fab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"2106271e380c198349e0f6eac0395bb462913fab":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","2106271e380c198349e0f6eac0395bb462913fab"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}