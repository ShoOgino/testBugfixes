{"path":"contrib/memory/src/test/org/apache/lucene/index/memory/TestSynonymTokenFilter.SynonymWhitespaceAnalyzer#reusableTokenStream(String,Reader).mjava","commits":[{"id":"18359c8e12d55f66c27cfe7babe86283f06a6aa5","date":1250426225,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/memory/src/test/org/apache/lucene/index/memory/TestSynonymTokenFilter.SynonymWhitespaceAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"    public TokenStream reusableTokenStream(String fieldName, Reader reader)\n        throws IOException {\n      SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n      if (streams == null) {\n        streams = new SavedStreams();\n        streams.source = new WhitespaceTokenizer(reader);\n        streams.result = new LowerCaseFilter(streams.source);\n        streams.result = new SynonymTokenFilter(streams.result, synonyms, maxSynonyms);\n      } else {\n        streams.source.reset(reader);\n        streams.result.reset(); // reset the SynonymTokenFilter\n      }\n      return streams.result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45b06c3ff8a4d9d3d751dd311e51c59303c2719c","date":1250600126,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/memory/src/test/org/apache/lucene/index/memory/TestSynonymTokenFilter.SynonymWhitespaceAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"contrib/memory/src/test/org/apache/lucene/index/memory/TestSynonymTokenFilter.SynonymWhitespaceAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":"    public TokenStream reusableTokenStream(String fieldName, Reader reader)\n        throws IOException {\n      SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n      if (streams == null) {\n        streams = new SavedStreams();\n        streams.source = new WhitespaceTokenizer(reader);\n        streams.result = new LowerCaseFilter(streams.source);\n        streams.result = new SynonymTokenFilter(streams.result, synonyms, maxSynonyms);\n        setPreviousTokenStream(streams);\n      } else {\n        streams.source.reset(reader);\n        streams.result.reset(); // reset the SynonymTokenFilter\n      }\n      return streams.result;\n    }\n\n","sourceOld":"    public TokenStream reusableTokenStream(String fieldName, Reader reader)\n        throws IOException {\n      SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n      if (streams == null) {\n        streams = new SavedStreams();\n        streams.source = new WhitespaceTokenizer(reader);\n        streams.result = new LowerCaseFilter(streams.source);\n        streams.result = new SynonymTokenFilter(streams.result, synonyms, maxSynonyms);\n      } else {\n        streams.source.reset(reader);\n        streams.result.reset(); // reset the SynonymTokenFilter\n      }\n      return streams.result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d68e5c46e6a5ebdf4dafec4a123344092b915cc0","date":1256752193,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/wordnet/src/test/org/apache/lucene/wordnet/TestSynonymTokenFilter.SynonymWhitespaceAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"contrib/memory/src/test/org/apache/lucene/index/memory/TestSynonymTokenFilter.SynonymWhitespaceAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":"    public TokenStream reusableTokenStream(String fieldName, Reader reader)\n        throws IOException {\n      SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n      if (streams == null) {\n        streams = new SavedStreams();\n        streams.source = new WhitespaceTokenizer(reader);\n        streams.result = new LowerCaseFilter(streams.source);\n        streams.result = new SynonymTokenFilter(streams.result, synonyms, maxSynonyms);\n        setPreviousTokenStream(streams);\n      } else {\n        streams.source.reset(reader);\n        streams.result.reset(); // reset the SynonymTokenFilter\n      }\n      return streams.result;\n    }\n\n","sourceOld":"    public TokenStream reusableTokenStream(String fieldName, Reader reader)\n        throws IOException {\n      SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n      if (streams == null) {\n        streams = new SavedStreams();\n        streams.source = new WhitespaceTokenizer(reader);\n        streams.result = new LowerCaseFilter(streams.source);\n        streams.result = new SynonymTokenFilter(streams.result, synonyms, maxSynonyms);\n        setPreviousTokenStream(streams);\n      } else {\n        streams.source.reset(reader);\n        streams.result.reset(); // reset the SynonymTokenFilter\n      }\n      return streams.result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"]},"commit2Childs":{"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}