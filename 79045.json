{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOOBDocID().mjava","commits":[{"id":"98f1e03050bb2a220e7b206bfd1b2c0e63db32b3","date":1314981811,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOOBDocID().mjava","pathOld":"/dev/null","sourceNew":"  public void testOOBDocID() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.addDocument(new Document());\n    IndexReader r = writer.getReader();\n    writer.close();\n    r.document(0);\n    try {\n      r.document(1);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d40b62adb64d8f7b2f85ee849349cfb0bef03f45","date":1327855938,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOOBDocID().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOOBDocID().mjava","sourceNew":"  public void testOOBDocID() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.addDocument(new Document());\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    r.document(0);\n    try {\n      r.document(1);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testOOBDocID() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.addDocument(new Document());\n    IndexReader r = writer.getReader();\n    writer.close();\n    r.document(0);\n    try {\n      r.document(1);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOOBDocID().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOOBDocID().mjava","sourceNew":"  public void testOOBDocID() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.addDocument(new Document());\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    r.document(0);\n    try {\n      r.document(1);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testOOBDocID() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.addDocument(new Document());\n    IndexReader r = writer.getReader();\n    writer.close();\n    r.document(0);\n    try {\n      r.document(1);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testOOBDocID().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOOBDocID().mjava","sourceNew":"  public void testOOBDocID() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.addDocument(new Document());\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    r.document(0);\n    try {\n      r.document(1);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testOOBDocID() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.addDocument(new Document());\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    r.document(0);\n    try {\n      r.document(1);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["98f1e03050bb2a220e7b206bfd1b2c0e63db32b3"],"98f1e03050bb2a220e7b206bfd1b2c0e63db32b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["98f1e03050bb2a220e7b206bfd1b2c0e63db32b3","d40b62adb64d8f7b2f85ee849349cfb0bef03f45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["98f1e03050bb2a220e7b206bfd1b2c0e63db32b3"],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"98f1e03050bb2a220e7b206bfd1b2c0e63db32b3":["d40b62adb64d8f7b2f85ee849349cfb0bef03f45","5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}