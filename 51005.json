{"path":"solr/solrj/src/java/org/apache/solr/recipe/Row#Row(String,Cell[],boolean,Map[String,Map[String,List[ReplicaInfo]]],List[Clause]).mjava","commits":[{"id":"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf","date":1491191579,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/recipe/Row#Row(String,Cell[],boolean,Map[String,Map[String,List[ReplicaInfo]]],List[Clause]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Row#Row(String,Cell[],boolean,Map[String,Map[String,List[ReplicaStat]]],List[Clause]).mjava","sourceNew":"  Row(String node, Cell[] cells, boolean anyValueMissing, Map<String, Map<String, List<ReplicaInfo>>> replicaInfo, List<Clause> violations) {\n    this.node = node;\n    this.cells = new Cell[cells.length];\n    for (int i = 0; i < this.cells.length; i++) {\n      this.cells[i] = cells[i].copy();\n\n    }\n    this.anyValueMissing = anyValueMissing;\n    this.replicaInfo = replicaInfo;\n    this.violations = violations;\n  }\n\n","sourceOld":"  Row(String node, Cell[] cells, boolean anyValueMissing, Map<String, Map<String, List<ReplicaStat>>> replicaInfo, List<Clause> violations) {\n    this.node = node;\n    this.cells = new Cell[cells.length];\n    for (int i = 0; i < this.cells.length; i++) {\n      this.cells[i] = cells[i].copy();\n\n    }\n    this.anyValueMissing = anyValueMissing;\n    this.replicaInfo = replicaInfo;\n    this.violations = violations;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"653c1ca305e0065ee988a09e59c8316b8cde02fd","date":1492506780,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Row#Row(String,Cell[],boolean,Map[String,Map[String,List[ReplicaInfo]]],List[Clause]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Row#Row(String,Cell[],boolean,Map[String,Map[String,List[ReplicaInfo]]],List[Clause]).mjava","sourceNew":"  Row(String node, Cell[] cells, boolean anyValueMissing, Map<String, Map<String, List<ReplicaInfo>>> replicaInfo, List<Clause> violations) {\n    this.node = node;\n    this.cells = new Cell[cells.length];\n    for (int i = 0; i < this.cells.length; i++) {\n      this.cells[i] = cells[i].copy();\n\n    }\n    this.anyValueMissing = anyValueMissing;\n    this.replicaInfo = replicaInfo;\n    this.violations = violations;\n  }\n\n","sourceOld":"  Row(String node, Cell[] cells, boolean anyValueMissing, Map<String, Map<String, List<ReplicaInfo>>> replicaInfo, List<Clause> violations) {\n    this.node = node;\n    this.cells = new Cell[cells.length];\n    for (int i = 0; i < this.cells.length; i++) {\n      this.cells[i] = cells[i].copy();\n\n    }\n    this.anyValueMissing = anyValueMissing;\n    this.replicaInfo = replicaInfo;\n    this.violations = violations;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"653c1ca305e0065ee988a09e59c8316b8cde02fd":["ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf"],"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"653c1ca305e0065ee988a09e59c8316b8cde02fd":[],"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf":["653c1ca305e0065ee988a09e59c8316b8cde02fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["653c1ca305e0065ee988a09e59c8316b8cde02fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}