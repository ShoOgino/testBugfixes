{"path":"lucene/core/src/java/org/apache/lucene/util/AttributeImpl#clone().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/AttributeImpl#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/AttributeImpl#clone().mjava","sourceNew":"  /**\n   * Shallow clone. Subclasses must override this if they \n   * need to clone any members deeply,\n   */\n  @Override\n  public Object clone() {\n    Object clone = null;\n    try {\n      clone = super.clone();\n    } catch (CloneNotSupportedException e) {\n      throw new RuntimeException(e);  // shouldn't happen\n    }\n    return clone;\n  }\n\n","sourceOld":"  /**\n   * Shallow clone. Subclasses must override this if they \n   * need to clone any members deeply,\n   */\n  @Override\n  public Object clone() {\n    Object clone = null;\n    try {\n      clone = super.clone();\n    } catch (CloneNotSupportedException e) {\n      throw new RuntimeException(e);  // shouldn't happen\n    }\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5bf508bfc98425280b4bb708ab724f718705c9d","date":1332973345,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/AttributeImpl#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/AttributeImpl#clone().mjava","sourceNew":"  /**\n   * Shallow clone. Subclasses must override this if they \n   * need to clone any members deeply,\n   */\n  @Override\n  public AttributeImpl clone() {\n    AttributeImpl clone = null;\n    try {\n      clone = (AttributeImpl)super.clone();\n    } catch (CloneNotSupportedException e) {\n      throw new RuntimeException(e);  // shouldn't happen\n    }\n    return clone;\n  }\n\n","sourceOld":"  /**\n   * Shallow clone. Subclasses must override this if they \n   * need to clone any members deeply,\n   */\n  @Override\n  public Object clone() {\n    Object clone = null;\n    try {\n      clone = super.clone();\n    } catch (CloneNotSupportedException e) {\n      throw new RuntimeException(e);  // shouldn't happen\n    }\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"daa66a2783d4ff87bbba148d567f0005b6be3729","date":1415638717,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/AttributeImpl#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/AttributeImpl#clone().mjava","sourceNew":"  /**\n   * In most cases the clone is, and should be, deep in order to be able to\n   * properly capture the state of all attributes.\n   */\n  @Override\n  public AttributeImpl clone() {\n    AttributeImpl clone = null;\n    try {\n      clone = (AttributeImpl)super.clone();\n    } catch (CloneNotSupportedException e) {\n      throw new RuntimeException(e);  // shouldn't happen\n    }\n    return clone;\n  }\n\n","sourceOld":"  /**\n   * Shallow clone. Subclasses must override this if they \n   * need to clone any members deeply,\n   */\n  @Override\n  public AttributeImpl clone() {\n    AttributeImpl clone = null;\n    try {\n      clone = (AttributeImpl)super.clone();\n    } catch (CloneNotSupportedException e) {\n      throw new RuntimeException(e);  // shouldn't happen\n    }\n    return clone;\n  }\n\n","bugFix":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"daa66a2783d4ff87bbba148d567f0005b6be3729":["f5bf508bfc98425280b4bb708ab724f718705c9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f5bf508bfc98425280b4bb708ab724f718705c9d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["daa66a2783d4ff87bbba148d567f0005b6be3729"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f5bf508bfc98425280b4bb708ab724f718705c9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"daa66a2783d4ff87bbba148d567f0005b6be3729":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f5bf508bfc98425280b4bb708ab724f718705c9d":["daa66a2783d4ff87bbba148d567f0005b6be3729"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}