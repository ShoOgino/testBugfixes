{"path":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","commits":[{"id":"6754b3085e8633adf1ed1ac8bac35fb34a06cf97","date":1183575801,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"/dev/null","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);      \n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9aba6db0f2adde620bb61f591ed18dcfee36ac","date":1201778618,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);      \n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void xxxtestEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void xxxtestEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1","date":1255502337,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.flush();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testEmptyDocAfterFlushingRealDoc().mjava","sourceNew":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","sourceOld":"    // Make sure we can flush segment w/ norms, then add\n    // empty doc (no norms) and flush\n    public void testEmptyDocAfterFlushingRealDoc() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      writer.addDocument(doc);\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.close();\n      _TestUtil.checkIndex(dir);\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(2, reader.numDocs());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"6754b3085e8633adf1ed1ac8bac35fb34a06cf97":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0a046c0c310bc77931fc8441bd920053b607dd14":["09c482d1e63332617181729a225b215c452d8a79","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["0a046c0c310bc77931fc8441bd920053b607dd14"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["5350389bf83287111f7760b9e3db3af8e3648474"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"fd9aba6db0f2adde620bb61f591ed18dcfee36ac":["6754b3085e8633adf1ed1ac8bac35fb34a06cf97"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["09c482d1e63332617181729a225b215c452d8a79"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"5350389bf83287111f7760b9e3db3af8e3648474":["fd9aba6db0f2adde620bb61f591ed18dcfee36ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"6754b3085e8633adf1ed1ac8bac35fb34a06cf97":["fd9aba6db0f2adde620bb61f591ed18dcfee36ac"],"0a046c0c310bc77931fc8441bd920053b607dd14":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"fd9aba6db0f2adde620bb61f591ed18dcfee36ac":["5350389bf83287111f7760b9e3db3af8e3648474"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6754b3085e8633adf1ed1ac8bac35fb34a06cf97"],"09c482d1e63332617181729a225b215c452d8a79":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"5350389bf83287111f7760b9e3db3af8e3648474":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}