{"path":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a334c2f3015ea627566ce68f894c84760830ca9","date":1320679609,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(params.get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) &&\n            Boolean.valueOf(params.get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n\n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b3d16cba9355e2e97962eb1c441bbd0b6735c15","date":1357426290,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = (highlighter instanceof PostingsSolrHighlighter == false) && !(Boolean.valueOf(params.get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) &&\n            Boolean.valueOf(params.get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n\n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(params.get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) &&\n            Boolean.valueOf(params.get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n\n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = (highlighter instanceof PostingsSolrHighlighter == false) && !(Boolean.valueOf(params.get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) &&\n            Boolean.valueOf(params.get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n\n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(params.get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) &&\n            Boolean.valueOf(params.get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n\n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8868b7c4fbf215c41e7b4ea2cfc40d1970672910","date":1480034167,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = (highlighter instanceof PostingsSolrHighlighter == false) && !(Boolean.valueOf(params.get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) &&\n            Boolean.valueOf(params.get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n\n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75babd1dfc2521603bfeb0968042e921d8c6c652","date":1480042089,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = (highlighter instanceof PostingsSolrHighlighter == false) && !(Boolean.valueOf(params.get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) &&\n            Boolean.valueOf(params.get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n\n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = (highlighter instanceof PostingsSolrHighlighter == false) && !(Boolean.valueOf(params.get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) &&\n            Boolean.valueOf(params.get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;\n      }\n\n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d057970b5f9fcaabc49d2f54c59a5d2a09da1769","date":1495200448,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      //TODO: get from builder by default?\n      String[] defaultHighlightFields = rb.getQparser() != null ? rb.getQparser().getDefaultHighlightFields() : null;\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      //TODO: get from builder by default?\n      String[] defaultHighlightFields = rb.getQparser() != null ? rb.getQparser().getDefaultHighlightFields() : null;\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6cbfdc8289fa6953689e5d3ee7b8965c9604d6d0","date":1515077688,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      //TODO: get from builder by default?\n      String[] defaultHighlightFields = rb.getQparser() != null ? rb.getQparser().getDefaultHighlightFields() : null;\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(highlightingResponseField(), convertHighlights(sumData));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      //TODO: get from builder by default?\n      String[] defaultHighlightFields = rb.getQparser() != null ? rb.getQparser().getDefaultHighlightFields() : null;\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      //TODO: get from builder by default?\n      String[] defaultHighlightFields = rb.getQparser() != null ? rb.getQparser().getDefaultHighlightFields() : null;\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(highlightingResponseField(), convertHighlights(sumData));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      //TODO: get from builder by default?\n      String[] defaultHighlightFields = rb.getQparser() != null ? rb.getQparser().getDefaultHighlightFields() : null;\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8582f07e9350eaeb33bf6c4617b8c9895d99c839","date":1591307386,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      //TODO: get from builder by default?\n      String[] defaultHighlightFields = rb.getQparser() != null ? rb.getQparser().getDefaultHighlightFields() : null;\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        @SuppressWarnings({\"rawtypes\"})\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(highlightingResponseField(), convertHighlights(sumData));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doHighlights) {\n      SolrQueryRequest req = rb.req;\n      SolrParams params = req.getParams();\n\n      SolrHighlighter highlighter = getHighlighter(params);\n\n      //TODO: get from builder by default?\n      String[] defaultHighlightFields = rb.getQparser() != null ? rb.getQparser().getDefaultHighlightFields() : null;\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n\n      // No highlighting if there is no query -- consider q.alt=*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(highlightingResponseField(), convertHighlights(sumData));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["9a334c2f3015ea627566ce68f894c84760830ca9","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"b94236357aaa22b76c10629851fe4e376e0cea82":["d057970b5f9fcaabc49d2f54c59a5d2a09da1769","6cbfdc8289fa6953689e5d3ee7b8965c9604d6d0"],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15","8868b7c4fbf215c41e7b4ea2cfc40d1970672910"],"d057970b5f9fcaabc49d2f54c59a5d2a09da1769":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"6cbfdc8289fa6953689e5d3ee7b8965c9604d6d0":["d057970b5f9fcaabc49d2f54c59a5d2a09da1769"],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["b94236357aaa22b76c10629851fe4e376e0cea82"],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["9a334c2f3015ea627566ce68f894c84760830ca9"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["75babd1dfc2521603bfeb0968042e921d8c6c652","d057970b5f9fcaabc49d2f54c59a5d2a09da1769"],"727bb765ff2542275f6d31f67be18d7104bae148":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15","75babd1dfc2521603bfeb0968042e921d8c6c652"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"9a334c2f3015ea627566ce68f894c84760830ca9":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b94236357aaa22b76c10629851fe4e376e0cea82":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"c26f00b574427b55127e869b935845554afde1fa":["9a334c2f3015ea627566ce68f894c84760830ca9"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["d057970b5f9fcaabc49d2f54c59a5d2a09da1769","e9017cf144952056066919f1ebc7897ff9bd71b1","727bb765ff2542275f6d31f67be18d7104bae148"],"d057970b5f9fcaabc49d2f54c59a5d2a09da1769":["b94236357aaa22b76c10629851fe4e376e0cea82","6cbfdc8289fa6953689e5d3ee7b8965c9604d6d0","e9017cf144952056066919f1ebc7897ff9bd71b1"],"6cbfdc8289fa6953689e5d3ee7b8965c9604d6d0":["b94236357aaa22b76c10629851fe4e376e0cea82"],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","8868b7c4fbf215c41e7b4ea2cfc40d1970672910","75babd1dfc2521603bfeb0968042e921d8c6c652","727bb765ff2542275f6d31f67be18d7104bae148"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"727bb765ff2542275f6d31f67be18d7104bae148":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"9a334c2f3015ea627566ce68f894c84760830ca9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","e9017cf144952056066919f1ebc7897ff9bd71b1","727bb765ff2542275f6d31f67be18d7104bae148","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}