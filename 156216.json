{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#PrefixOperatorQuery().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#PrefixOperatorQuery().mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#PrefixOperatorQuery().mjava","sourceNew":"  final public SrndQuery PrefixOperatorQuery() throws ParseException {\n  Token oprt;\n  List<SrndQuery> queries;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case OR:\n      oprt = jj_consume_token(OR);\n      /* prefix OR */\n          queries = FieldsQueryList();\n     {if (true) return getOrQuery(queries, false /* not infix */, oprt);}\n      break;\n    case AND:\n      oprt = jj_consume_token(AND);\n      /* prefix AND */\n          queries = FieldsQueryList();\n     {if (true) return getAndQuery(queries, false /* not infix */, oprt);}\n      break;\n    case N:\n      oprt = jj_consume_token(N);\n      /* prefix N */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false /* not infix */, oprt, false /* not ordered */);}\n      break;\n    case W:\n      oprt = jj_consume_token(W);\n      /* prefix W */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false  /* not infix */, oprt, true /* ordered */);}\n      break;\n    default:\n      jj_la1[6] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public SrndQuery PrefixOperatorQuery() throws ParseException {\n  Token oprt;\n  List<SrndQuery> queries;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case OR:\n      oprt = jj_consume_token(OR);\n      /* prefix OR */\n          queries = FieldsQueryList();\n     {if (true) return getOrQuery(queries, false /* not infix */, oprt);}\n      break;\n    case AND:\n      oprt = jj_consume_token(AND);\n      /* prefix AND */\n          queries = FieldsQueryList();\n     {if (true) return getAndQuery(queries, false /* not infix */, oprt);}\n      break;\n    case N:\n      oprt = jj_consume_token(N);\n      /* prefix N */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false /* not infix */, oprt, false /* not ordered */);}\n      break;\n    case W:\n      oprt = jj_consume_token(W);\n      /* prefix W */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false  /* not infix */, oprt, true /* ordered */);}\n      break;\n    default:\n      jj_la1[6] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4bf8c857cdf9b9be903cae84ef15985ad090a05","date":1600342158,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#PrefixOperatorQuery().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#PrefixOperatorQuery().mjava","sourceNew":"  final public SrndQuery PrefixOperatorQuery() throws ParseException {Token oprt;\n  List<SrndQuery> queries;\n    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {\n    case OR:{\n      oprt = jj_consume_token(OR);\n      /* prefix OR */\n          queries = FieldsQueryList();\n{if (\"\" != null) return getOrQuery(queries, false /* not infix */, oprt);}\n      break;\n      }\n    case AND:{\n      oprt = jj_consume_token(AND);\n      /* prefix AND */\n          queries = FieldsQueryList();\n{if (\"\" != null) return getAndQuery(queries, false /* not infix */, oprt);}\n      break;\n      }\n    case N:{\n      oprt = jj_consume_token(N);\n      /* prefix N */\n          queries = FieldsQueryList();\n{if (\"\" != null) return getDistanceQuery(queries, false /* not infix */, oprt, false /* not ordered */);}\n      break;\n      }\n    case W:{\n      oprt = jj_consume_token(W);\n      /* prefix W */\n          queries = FieldsQueryList();\n{if (\"\" != null) return getDistanceQuery(queries, false  /* not infix */, oprt, true /* ordered */);}\n      break;\n      }\n    default:\n      jj_la1[6] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    throw new Error(\"Missing return statement in function\");\n}\n\n","sourceOld":"  final public SrndQuery PrefixOperatorQuery() throws ParseException {\n  Token oprt;\n  List<SrndQuery> queries;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case OR:\n      oprt = jj_consume_token(OR);\n      /* prefix OR */\n          queries = FieldsQueryList();\n     {if (true) return getOrQuery(queries, false /* not infix */, oprt);}\n      break;\n    case AND:\n      oprt = jj_consume_token(AND);\n      /* prefix AND */\n          queries = FieldsQueryList();\n     {if (true) return getAndQuery(queries, false /* not infix */, oprt);}\n      break;\n    case N:\n      oprt = jj_consume_token(N);\n      /* prefix N */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false /* not infix */, oprt, false /* not ordered */);}\n      break;\n    case W:\n      oprt = jj_consume_token(W);\n      /* prefix W */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false  /* not infix */, oprt, true /* ordered */);}\n      break;\n    default:\n      jj_la1[6] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}