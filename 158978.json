{"path":"lucene/core/src/test/org/apache/lucene/util/TestVersion#testEqualsHashCode().mjava","commits":[{"id":"80bab700e85a349c9ee5fddad3b68a05f200ab72","date":1408373256,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestVersion#testEqualsHashCode().mjava","pathOld":"/dev/null","sourceNew":"  public void testEqualsHashCode() {\n    Random random = random();\n    String version = \"\" + (4 + random.nextInt(1)) + \".\"  + random.nextInt(10) + \".\" + random.nextInt(10);\n    Version v1 = Version.parseLeniently(version);\n    Version v2 = Version.parseLeniently(version);\n    assertEquals(v1.hashCode(), v2.hashCode());\n    assertEquals(v1, v2);\n    final int iters = 10 + random.nextInt(20);\n    for (int i = 0; i < iters; i++) {\n      String v = \"\" + (4 + random.nextInt(1)) + \".\"  + random.nextInt(10) + \".\" + random.nextInt(10);\n      if (v.equals(version)) {\n        assertEquals(Version.parseLeniently(v).hashCode(), v1.hashCode());\n        assertEquals(Version.parseLeniently(v), v1);\n      } else {\n        assertFalse(Version.parseLeniently(v).equals(v1));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46ff533a28b45377dffc601931e60e19492e6384","date":1411292651,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestVersion#testEqualsHashCode().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestVersion#testEqualsHashCode().mjava","sourceNew":"  public void testEqualsHashCode() throws Exception {\n    Random random = random();\n    String version = \"\" + (4 + random.nextInt(1)) + \".\"  + random.nextInt(10) + \".\" + random.nextInt(10);\n    Version v1 = Version.parseLeniently(version);\n    Version v2 = Version.parseLeniently(version);\n    assertEquals(v1.hashCode(), v2.hashCode());\n    assertEquals(v1, v2);\n    final int iters = 10 + random.nextInt(20);\n    for (int i = 0; i < iters; i++) {\n      String v = \"\" + (4 + random.nextInt(1)) + \".\"  + random.nextInt(10) + \".\" + random.nextInt(10);\n      if (v.equals(version)) {\n        assertEquals(Version.parseLeniently(v).hashCode(), v1.hashCode());\n        assertEquals(Version.parseLeniently(v), v1);\n      } else {\n        assertFalse(Version.parseLeniently(v).equals(v1));\n      }\n    }\n  }\n\n","sourceOld":"  public void testEqualsHashCode() {\n    Random random = random();\n    String version = \"\" + (4 + random.nextInt(1)) + \".\"  + random.nextInt(10) + \".\" + random.nextInt(10);\n    Version v1 = Version.parseLeniently(version);\n    Version v2 = Version.parseLeniently(version);\n    assertEquals(v1.hashCode(), v2.hashCode());\n    assertEquals(v1, v2);\n    final int iters = 10 + random.nextInt(20);\n    for (int i = 0; i < iters; i++) {\n      String v = \"\" + (4 + random.nextInt(1)) + \".\"  + random.nextInt(10) + \".\" + random.nextInt(10);\n      if (v.equals(version)) {\n        assertEquals(Version.parseLeniently(v).hashCode(), v1.hashCode());\n        assertEquals(Version.parseLeniently(v), v1);\n      } else {\n        assertFalse(Version.parseLeniently(v).equals(v1));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"46ff533a28b45377dffc601931e60e19492e6384":["80bab700e85a349c9ee5fddad3b68a05f200ab72"],"80bab700e85a349c9ee5fddad3b68a05f200ab72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["46ff533a28b45377dffc601931e60e19492e6384"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80bab700e85a349c9ee5fddad3b68a05f200ab72"],"46ff533a28b45377dffc601931e60e19492e6384":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"80bab700e85a349c9ee5fddad3b68a05f200ab72":["46ff533a28b45377dffc601931e60e19492e6384"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}