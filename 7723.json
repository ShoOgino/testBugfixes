{"path":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#tryReloading(SolrQueryResponse,File).mjava","commits":[{"id":"7455ee5c847b2ee7e44656e4218141f62dacb572","date":1386032125,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#tryReloading(SolrQueryResponse,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#tryReloading(SolrQueryResponse,File).mjava","sourceNew":"  private boolean tryReloading(SolrQueryResponse rsp, File home) {\n    CoreContainer cc = null;\n    try {\n      cc = CoreContainer.createAndLoad(home.getAbsolutePath(), new File(home, \"solr.xml\"));\n      if (cc.getCoreInitFailures().size() > 0) {\n        for (Exception ex : cc.getCoreInitFailures().values()) {\n          log.error(\"Error when attempting to reload core: \" + ex.getMessage());\n          rsp.setException(new SolrException(ErrorCode.BAD_REQUEST,\n              \"Error when attempting to reload core after writing config\" + ex.getMessage()));\n        }\n        return false;\n      }\n      return true;\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","sourceOld":"  private boolean tryReloading(SolrQueryResponse rsp, File home) {\n    CoreContainer cc = null;\n    try {\n      cc = CoreContainer.createAndLoad(home.getAbsolutePath(), new File(home, \"solr.xml\"));\n      if (cc.getCoreInitFailures().size() > 0) {\n        for (Exception ex : cc.getCoreInitFailures().values()) {\n          log.error(\"Error when attempting to reload core: \" + ex.getMessage());\n          rsp.setException(new SolrException( ErrorCode.BAD_REQUEST,\n              \"Error when attempting to reload core after writing config\" + ex.getMessage()));\n        }\n        return false;\n      }\n      return true;\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#tryReloading(SolrQueryResponse,File).mjava","pathOld":"/dev/null","sourceNew":"  private boolean tryReloading(SolrQueryResponse rsp, File home) {\n    CoreContainer cc = null;\n    try {\n      cc = CoreContainer.createAndLoad(home.getAbsolutePath(), new File(home, \"solr.xml\"));\n      if (cc.getCoreInitFailures().size() > 0) {\n        for (Exception ex : cc.getCoreInitFailures().values()) {\n          log.error(\"Error when attempting to reload core: \" + ex.getMessage());\n          rsp.setException(new SolrException(ErrorCode.BAD_REQUEST,\n              \"Error when attempting to reload core after writing config\" + ex.getMessage()));\n        }\n        return false;\n      }\n      return true;\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d629ca62e3b8ab6e29a127aebe213163d490413","date":1405524223,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#tryReloading(SolrQueryResponse,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#tryReloading(SolrQueryResponse,File).mjava","sourceNew":"  private boolean tryReloading(SolrQueryResponse rsp, File home) {\n    CoreContainer cc = null;\n    try {\n      cc = CoreContainer.createAndLoad(home.getAbsolutePath(), new File(home, \"solr.xml\"));\n      if (cc.getCoreInitFailures().size() > 0) {\n        for (CoreContainer.CoreLoadFailure ex : cc.getCoreInitFailures().values()) {\n          log.error(\"Error when attempting to reload core: \" + ex.exception.getMessage());\n          rsp.setException(new SolrException(ErrorCode.BAD_REQUEST,\n              \"Error when attempting to reload core after writing config\" + ex.exception.getMessage()));\n        }\n        return false;\n      }\n      return true;\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","sourceOld":"  private boolean tryReloading(SolrQueryResponse rsp, File home) {\n    CoreContainer cc = null;\n    try {\n      cc = CoreContainer.createAndLoad(home.getAbsolutePath(), new File(home, \"solr.xml\"));\n      if (cc.getCoreInitFailures().size() > 0) {\n        for (Exception ex : cc.getCoreInitFailures().values()) {\n          log.error(\"Error when attempting to reload core: \" + ex.getMessage());\n          rsp.setException(new SolrException(ErrorCode.BAD_REQUEST,\n              \"Error when attempting to reload core after writing config\" + ex.getMessage()));\n        }\n        return false;\n      }\n      return true;\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b20fb0ec13a714c528bd1ff701c977114e476c58","date":1420694146,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#tryReloading(SolrQueryResponse,File).mjava","sourceNew":null,"sourceOld":"  private boolean tryReloading(SolrQueryResponse rsp, File home) {\n    CoreContainer cc = null;\n    try {\n      cc = CoreContainer.createAndLoad(home.getAbsolutePath(), new File(home, \"solr.xml\"));\n      if (cc.getCoreInitFailures().size() > 0) {\n        for (CoreContainer.CoreLoadFailure ex : cc.getCoreInitFailures().values()) {\n          log.error(\"Error when attempting to reload core: \" + ex.exception.getMessage());\n          rsp.setException(new SolrException(ErrorCode.BAD_REQUEST,\n              \"Error when attempting to reload core after writing config\" + ex.exception.getMessage()));\n        }\n        return false;\n      }\n      return true;\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b20fb0ec13a714c528bd1ff701c977114e476c58":["2d629ca62e3b8ab6e29a127aebe213163d490413"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d629ca62e3b8ab6e29a127aebe213163d490413":["7455ee5c847b2ee7e44656e4218141f62dacb572"],"7455ee5c847b2ee7e44656e4218141f62dacb572":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7455ee5c847b2ee7e44656e4218141f62dacb572"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b20fb0ec13a714c528bd1ff701c977114e476c58"]},"commit2Childs":{"b20fb0ec13a714c528bd1ff701c977114e476c58":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7455ee5c847b2ee7e44656e4218141f62dacb572","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"2d629ca62e3b8ab6e29a127aebe213163d490413":["b20fb0ec13a714c528bd1ff701c977114e476c58"],"7455ee5c847b2ee7e44656e4218141f62dacb572":["2d629ca62e3b8ab6e29a127aebe213163d490413","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}