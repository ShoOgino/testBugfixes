{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testInvalidInput2().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testInvalidInput2().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testInvalidInput2().mjava","sourceNew":"    public void testInvalidInput2() throws Exception {\n        boolean gotException = false;\n        try {        \n            new NGramTokenFilter(input, 0, 1);\n        } catch (IllegalArgumentException e) {\n            gotException = true;\n        }\n        assertTrue(gotException);\n    }\n\n","sourceOld":"    public void testInvalidInput2() throws Exception {\n        boolean gotException = false;\n        try {        \n            new NGramTokenFilter(input, 0, 1);\n        } catch (IllegalArgumentException e) {\n            gotException = true;\n        }\n        assertTrue(gotException);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a6997833904932b5332aede01bfd0f7ce4df318","date":1327398621,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testInvalidInput2().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testInvalidInput2().mjava","sourceNew":"  public void testInvalidInput2() throws Exception {\n    boolean gotException = false;\n    try {        \n      new NGramTokenFilter(input, 0, 1);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","sourceOld":"    public void testInvalidInput2() throws Exception {\n        boolean gotException = false;\n        try {        \n            new NGramTokenFilter(input, 0, 1);\n        } catch (IllegalArgumentException e) {\n            gotException = true;\n        }\n        assertTrue(gotException);\n    }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0","4c807c4005aae1acaf5cebc9af40883985fb89a8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testInvalidInput2().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testInvalidInput2().mjava","sourceNew":"  public void testInvalidInput2() throws Exception {\n    boolean gotException = false;\n    try {        \n      new NGramTokenFilter(input, 0, 1);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","sourceOld":"    public void testInvalidInput2() throws Exception {\n        boolean gotException = false;\n        try {        \n            new NGramTokenFilter(input, 0, 1);\n        } catch (IllegalArgumentException e) {\n            gotException = true;\n        }\n        assertTrue(gotException);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testInvalidInput2().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testInvalidInput2().mjava","sourceNew":"  public void testInvalidInput2() throws Exception {\n    boolean gotException = false;\n    try {        \n      new NGramTokenFilter(input, 0, 1);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","sourceOld":"    public void testInvalidInput2() throws Exception {\n        boolean gotException = false;\n        try {        \n            new NGramTokenFilter(input, 0, 1);\n        } catch (IllegalArgumentException e) {\n            gotException = true;\n        }\n        assertTrue(gotException);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testInvalidInput2().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testInvalidInput2().mjava","sourceNew":"  public void testInvalidInput2() throws Exception {\n    boolean gotException = false;\n    try {        \n      new NGramTokenFilter(input, 0, 1);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","sourceOld":"  public void testInvalidInput2() throws Exception {\n    boolean gotException = false;\n    try {        \n      new NGramTokenFilter(input, 0, 1);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1a6997833904932b5332aede01bfd0f7ce4df318"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["0f080986da691a3bba7b757f43ab72cdc82b57ce","1a6997833904932b5332aede01bfd0f7ce4df318"],"1a6997833904932b5332aede01bfd0f7ce4df318":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["0f080986da691a3bba7b757f43ab72cdc82b57ce","1a6997833904932b5332aede01bfd0f7ce4df318"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"1a6997833904932b5332aede01bfd0f7ce4df318":["b89678825b68eccaf09e6ab71675fc0b0af1e099","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["0d22ac6a4146774c1bc8400160fc0b6150294e92","1a6997833904932b5332aede01bfd0f7ce4df318","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}