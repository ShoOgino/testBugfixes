{"path":"src/java/org/apache/lucene/search/Searchable#search(Query,Filter,int,Sort).mjava","commits":[{"id":"c6691cb6747f9e850337c706c06b92e9ddf816e1","date":1077044431,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(Query,Filter,int,Sort).mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: Low-level search implementation with arbitrary sorting.  Finds\n   * the top <code>n</code> hits for <code>query</code>, applying\n   * <code>filter</code> if non-null, and sorting the hits by the criteria in\n   * <code>sort</code>.\n   *\n   * <p>Applications should usually call {@link\n   * Searcher#search(Query,Filter,Sort)} instead.\n   */\n  TopFieldDocs search(Query query, Filter filter, int n, Sort sort)\n    throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5b33cb896b29b18a1c1348527a7f5889a852551","date":1103050801,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(Query,Filter,int,Sort).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#search(Query,Filter,int,Sort).mjava","sourceNew":"  /** Expert: Low-level search implementation with arbitrary sorting.  Finds\n   * the top <code>n</code> hits for <code>query</code>, applying\n   * <code>filter</code> if non-null, and sorting the hits by the criteria in\n   * <code>sort</code>.\n   *\n   * <p>Applications should usually call {@link\n   * Searcher#search(Query,Filter,Sort)} instead.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  TopFieldDocs search(Query query, Filter filter, int n, Sort sort)\n    throws IOException;\n\n","sourceOld":"  /** Expert: Low-level search implementation with arbitrary sorting.  Finds\n   * the top <code>n</code> hits for <code>query</code>, applying\n   * <code>filter</code> if non-null, and sorting the hits by the criteria in\n   * <code>sort</code>.\n   *\n   * <p>Applications should usually call {@link\n   * Searcher#search(Query,Filter,Sort)} instead.\n   */\n  TopFieldDocs search(Query query, Filter filter, int n, Sort sort)\n    throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402061809f3a4629ea0c449e33e9f94a9772f3c3","date":1113967712,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(Query,Filter,int,Sort).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#search(Query,Filter,int,Sort).mjava","sourceNew":"  /** Expert: Low-level search implementation with arbitrary sorting.  Finds\n   * the top <code>n</code> hits for <code>query</code>, applying\n   * <code>filter</code> if non-null, and sorting the hits by the criteria in\n   * <code>sort</code>.\n   *\n   * <p>Applications should usually call {@link\n   * Searcher#search(Query,Filter,Sort)} instead.\n   * @throws BooleanQuery.TooManyClauses\n   *\n   * @deprecated\n   */\n  TopFieldDocs search(Query query, Filter filter, int n, Sort sort)\n    throws IOException;\n\n","sourceOld":"  /** Expert: Low-level search implementation with arbitrary sorting.  Finds\n   * the top <code>n</code> hits for <code>query</code>, applying\n   * <code>filter</code> if non-null, and sorting the hits by the criteria in\n   * <code>sort</code>.\n   *\n   * <p>Applications should usually call {@link\n   * Searcher#search(Query,Filter,Sort)} instead.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  TopFieldDocs search(Query query, Filter filter, int n, Sort sort)\n    throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ceaa9738cad9616d1831286111af106e13e0e4b","date":1114543820,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(Query,Filter,int,Sort).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#search(Query,Filter,int,Sort).mjava","sourceNew":"  /** Expert: Low-level search implementation.\n   * @deprecated use {@link Searcher#search(Query, Filter, int, Sort)} instead.\n   */\n  TopFieldDocs search(Query query, Filter filter, int n, Sort sort)\n    throws IOException;\n\n","sourceOld":"  /** Expert: Low-level search implementation with arbitrary sorting.  Finds\n   * the top <code>n</code> hits for <code>query</code>, applying\n   * <code>filter</code> if non-null, and sorting the hits by the criteria in\n   * <code>sort</code>.\n   *\n   * <p>Applications should usually call {@link\n   * Searcher#search(Query,Filter,Sort)} instead.\n   * @throws BooleanQuery.TooManyClauses\n   *\n   * @deprecated\n   */\n  TopFieldDocs search(Query query, Filter filter, int n, Sort sort)\n    throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f597d83f82cb10bc9c7414dd9340421b8f73eeb","date":1132588832,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(Query,Filter,int,Sort).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#search(Query,Filter,int,Sort).mjava","sourceNew":"  /** Expert: Low-level search implementation.\n   * @deprecated use {@link Searcher#search(Weight, Filter, int, Sort)} instead.\n   */\n  TopFieldDocs search(Query query, Filter filter, int n, Sort sort)\n    throws IOException;\n\n","sourceOld":"  /** Expert: Low-level search implementation.\n   * @deprecated use {@link Searcher#search(Query, Filter, int, Sort)} instead.\n   */\n  TopFieldDocs search(Query query, Filter filter, int n, Sort sort)\n    throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/Searchable#search(Query,Filter,int,Sort).mjava","sourceNew":null,"sourceOld":"  /** Expert: Low-level search implementation.\n   * @deprecated use {@link Searcher#search(Weight, Filter, int, Sort)} instead.\n   */\n  TopFieldDocs search(Query query, Filter filter, int n, Sort sort)\n    throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f5b33cb896b29b18a1c1348527a7f5889a852551":["c6691cb6747f9e850337c706c06b92e9ddf816e1"],"4ceaa9738cad9616d1831286111af106e13e0e4b":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"c6691cb6747f9e850337c706c06b92e9ddf816e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"402061809f3a4629ea0c449e33e9f94a9772f3c3":["f5b33cb896b29b18a1c1348527a7f5889a852551"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["9f597d83f82cb10bc9c7414dd9340421b8f73eeb"],"9f597d83f82cb10bc9c7414dd9340421b8f73eeb":["4ceaa9738cad9616d1831286111af106e13e0e4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"f5b33cb896b29b18a1c1348527a7f5889a852551":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"4ceaa9738cad9616d1831286111af106e13e0e4b":["9f597d83f82cb10bc9c7414dd9340421b8f73eeb"],"c6691cb6747f9e850337c706c06b92e9ddf816e1":["f5b33cb896b29b18a1c1348527a7f5889a852551"],"402061809f3a4629ea0c449e33e9f94a9772f3c3":["4ceaa9738cad9616d1831286111af106e13e0e4b"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6691cb6747f9e850337c706c06b92e9ddf816e1"],"9f597d83f82cb10bc9c7414dd9340421b8f73eeb":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}