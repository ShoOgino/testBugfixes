{"path":"lucene/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","pathOld":"src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","sourceNew":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + BitUtil.ntz(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + BitUtil.ntz(word);\n    }\n\n    return -1;\n  }\n\n","sourceOld":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + BitUtil.ntz(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + BitUtil.ntz(word);\n    }\n\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(int).mjava","sourceNew":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + BitUtil.ntz(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + BitUtil.ntz(word);\n    }\n\n    return -1;\n  }\n\n","sourceOld":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public int nextSetBit(int index) {\n    int i = index>>6;\n    if (i>=wlen) return -1;\n    int subIndex = index & 0x3f;      // index within the word\n    long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (i<<6) + subIndex + BitUtil.ntz(word);\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (i<<6) + BitUtil.ntz(word);\n    }\n\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}