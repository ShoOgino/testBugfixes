{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource#printStatistics(String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource#printStatistics(String).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource#printStatistics(String).mjava","sourceNew":"  public void printStatistics(String itemsName) {\n    if (!verbose) {\n      return;\n    }\n    boolean print = false;\n    String col = \"                  \";\n    StringBuilder sb = new StringBuilder();\n    String newline = System.getProperty(\"line.separator\");\n    sb.append(\"------------> \").append(getClass().getSimpleName()).append(\" statistics (\").append(printNum).append(\"): \").append(newline);\n    int nut = getTotalItemsCount();\n    if (nut > lastPrintedNumUniqueTexts) {\n      print = true;\n      sb.append(\"total count of \"+itemsName+\": \").append(Format.format(0,nut,col)).append(newline);\n      lastPrintedNumUniqueTexts = nut;\n    }\n    long nub = getTotalBytesCount();\n    if (nub > lastPrintedNumUniqueBytes) {\n      print = true;\n      sb.append(\"total bytes of \"+itemsName+\": \").append(Format.format(0,nub,col)).append(newline);\n      lastPrintedNumUniqueBytes = nub;\n    }\n    if (getItemsCount() > 0) {\n      print = true;\n      sb.append(\"num \"+itemsName+\" added since last inputs reset:   \").append(Format.format(0,getItemsCount(),col)).append(newline);\n      sb.append(\"total bytes added for \"+itemsName+\" since last inputs reset: \").append(Format.format(0,getBytesCount(),col)).append(newline);\n    }\n    if (print) {\n      System.out.println(sb.append(newline).toString());\n      printNum++;\n    }\n  }\n\n","sourceOld":"  public void printStatistics(String itemsName) {\n    if (!verbose) {\n      return;\n    }\n    boolean print = false;\n    String col = \"                  \";\n    StringBuilder sb = new StringBuilder();\n    String newline = System.getProperty(\"line.separator\");\n    sb.append(\"------------> \").append(getClass().getSimpleName()).append(\" statistics (\").append(printNum).append(\"): \").append(newline);\n    int nut = getTotalItemsCount();\n    if (nut > lastPrintedNumUniqueTexts) {\n      print = true;\n      sb.append(\"total count of \"+itemsName+\": \").append(Format.format(0,nut,col)).append(newline);\n      lastPrintedNumUniqueTexts = nut;\n    }\n    long nub = getTotalBytesCount();\n    if (nub > lastPrintedNumUniqueBytes) {\n      print = true;\n      sb.append(\"total bytes of \"+itemsName+\": \").append(Format.format(0,nub,col)).append(newline);\n      lastPrintedNumUniqueBytes = nub;\n    }\n    if (getItemsCount() > 0) {\n      print = true;\n      sb.append(\"num \"+itemsName+\" added since last inputs reset:   \").append(Format.format(0,getItemsCount(),col)).append(newline);\n      sb.append(\"total bytes added for \"+itemsName+\" since last inputs reset: \").append(Format.format(0,getBytesCount(),col)).append(newline);\n    }\n    if (print) {\n      System.out.println(sb.append(newline).toString());\n      printNum++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ffe681f212e5073c69955b4ad22946794c84940","date":1560182863,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource#printStatistics(String).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource#printStatistics(String).mjava","sourceNew":"  public void printStatistics(String itemsName) {\n    if (!verbose) {\n      return;\n    }\n    boolean print = false;\n    String col = \"                  \";\n    StringBuilder sb = new StringBuilder();\n    String newline = System.getProperty(\"line.separator\");\n    sb.append(\"------------> \").append(getClass().getSimpleName()).append(\" statistics (\").append(printNum).append(\"): \").append(newline);\n    int nut = getTotalItemsCount();\n    if (nut > lastPrintedNumUniqueTexts) {\n      print = true;\n      sb.append(\"total count of \").append(itemsName).append(\": \").append(Format.format(0,nut,col)).append(newline);\n      lastPrintedNumUniqueTexts = nut;\n    }\n    long nub = getTotalBytesCount();\n    if (nub > lastPrintedNumUniqueBytes) {\n      print = true;\n      sb.append(\"total bytes of \").append(itemsName).append(\": \").append(Format.format(0,nub,col)).append(newline);\n      lastPrintedNumUniqueBytes = nub;\n    }\n    if (getItemsCount() > 0) {\n      print = true;\n      sb.append(\"num \").append(itemsName).append(\" added since last inputs reset:   \").append(Format.format(0,getItemsCount(),col)).append(newline);\n      sb.append(\"total bytes added for \").append(itemsName).append(\" since last inputs reset: \").append(Format.format(0,getBytesCount(),col)).append(newline);\n    }\n    if (print) {\n      System.out.println(sb.append(newline).toString());\n      printNum++;\n    }\n  }\n\n","sourceOld":"  public void printStatistics(String itemsName) {\n    if (!verbose) {\n      return;\n    }\n    boolean print = false;\n    String col = \"                  \";\n    StringBuilder sb = new StringBuilder();\n    String newline = System.getProperty(\"line.separator\");\n    sb.append(\"------------> \").append(getClass().getSimpleName()).append(\" statistics (\").append(printNum).append(\"): \").append(newline);\n    int nut = getTotalItemsCount();\n    if (nut > lastPrintedNumUniqueTexts) {\n      print = true;\n      sb.append(\"total count of \"+itemsName+\": \").append(Format.format(0,nut,col)).append(newline);\n      lastPrintedNumUniqueTexts = nut;\n    }\n    long nub = getTotalBytesCount();\n    if (nub > lastPrintedNumUniqueBytes) {\n      print = true;\n      sb.append(\"total bytes of \"+itemsName+\": \").append(Format.format(0,nub,col)).append(newline);\n      lastPrintedNumUniqueBytes = nub;\n    }\n    if (getItemsCount() > 0) {\n      print = true;\n      sb.append(\"num \"+itemsName+\" added since last inputs reset:   \").append(Format.format(0,getItemsCount(),col)).append(newline);\n      sb.append(\"total bytes added for \"+itemsName+\" since last inputs reset: \").append(Format.format(0,getBytesCount(),col)).append(newline);\n    }\n    if (print) {\n      System.out.println(sb.append(newline).toString());\n      printNum++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2ffe681f212e5073c69955b4ad22946794c84940":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ffe681f212e5073c69955b4ad22946794c84940"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["2ffe681f212e5073c69955b4ad22946794c84940"],"2ffe681f212e5073c69955b4ad22946794c84940":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}