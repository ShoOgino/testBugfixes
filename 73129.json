{"path":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl.Uninvert#uninvertPostings(LeafReader,String).mjava","commits":[{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl.Uninvert#uninvertPostings(LeafReader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl.Uninvert#uninvertPostings(LeafReader,String,boolean).mjava","sourceNew":"    final void uninvertPostings(LeafReader reader, String field) throws IOException {\n      final int maxDoc = reader.maxDoc();\n      Terms terms = reader.terms(field);\n      if (terms != null) {\n        final boolean setDocsWithField;\n        final int termsDocCount = terms.getDocCount();\n        assert termsDocCount <= maxDoc;\n        if (termsDocCount == maxDoc) {\n          // Fast case: all docs have this field:\n          this.docsWithField = new Bits.MatchAllBits(maxDoc);\n          setDocsWithField = false;\n        } else {\n          setDocsWithField = true;\n        }\n\n        final TermsEnum termsEnum = termsEnum(terms);\n\n        PostingsEnum docs = null;\n        FixedBitSet docsWithField = null;\n        while(true) {\n          final BytesRef term = termsEnum.next();\n          if (term == null) {\n            break;\n          }\n          visitTerm(term);\n          docs = termsEnum.postings(docs, PostingsEnum.NONE);\n          while (true) {\n            final int docID = docs.nextDoc();\n            if (docID == DocIdSetIterator.NO_MORE_DOCS) {\n              break;\n            }\n            visitDoc(docID);\n            if (setDocsWithField) {\n              if (docsWithField == null) {\n                // Lazy init\n                this.docsWithField = docsWithField = new FixedBitSet(maxDoc);\n              }\n              docsWithField.set(docID);\n            }\n          }\n        }\n      }\n    }\n\n","sourceOld":"    final void uninvertPostings(LeafReader reader, String field, boolean setDocsWithField) throws IOException {\n      final int maxDoc = reader.maxDoc();\n      Terms terms = reader.terms(field);\n      if (terms != null) {\n        if (setDocsWithField) {\n          final int termsDocCount = terms.getDocCount();\n          assert termsDocCount <= maxDoc;\n          if (termsDocCount == maxDoc) {\n            // Fast case: all docs have this field:\n            this.docsWithField = new Bits.MatchAllBits(maxDoc);\n            setDocsWithField = false;\n          }\n        }\n\n        final TermsEnum termsEnum = termsEnum(terms);\n\n        PostingsEnum docs = null;\n        FixedBitSet docsWithField = null;\n        while(true) {\n          final BytesRef term = termsEnum.next();\n          if (term == null) {\n            break;\n          }\n          visitTerm(term);\n          docs = termsEnum.postings(docs, PostingsEnum.NONE);\n          while (true) {\n            final int docID = docs.nextDoc();\n            if (docID == DocIdSetIterator.NO_MORE_DOCS) {\n              break;\n            }\n            visitDoc(docID);\n            if (setDocsWithField) {\n              if (docsWithField == null) {\n                // Lazy init\n                this.docsWithField = docsWithField = new FixedBitSet(maxDoc);\n              }\n              docsWithField.set(docID);\n            }\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl.Uninvert#uninvertPostings(LeafReader,String).mjava","pathOld":"/dev/null","sourceNew":"    final void uninvertPostings(LeafReader reader, String field) throws IOException {\n      final int maxDoc = reader.maxDoc();\n      Terms terms = reader.terms(field);\n      if (terms != null) {\n        final boolean setDocsWithField;\n        final int termsDocCount = terms.getDocCount();\n        assert termsDocCount <= maxDoc;\n        if (termsDocCount == maxDoc) {\n          // Fast case: all docs have this field:\n          this.docsWithField = new Bits.MatchAllBits(maxDoc);\n          setDocsWithField = false;\n        } else {\n          setDocsWithField = true;\n        }\n\n        final TermsEnum termsEnum = termsEnum(terms);\n\n        PostingsEnum docs = null;\n        FixedBitSet docsWithField = null;\n        while(true) {\n          final BytesRef term = termsEnum.next();\n          if (term == null) {\n            break;\n          }\n          visitTerm(term);\n          docs = termsEnum.postings(docs, PostingsEnum.NONE);\n          while (true) {\n            final int docID = docs.nextDoc();\n            if (docID == DocIdSetIterator.NO_MORE_DOCS) {\n              break;\n            }\n            visitDoc(docID);\n            if (setDocsWithField) {\n              if (docsWithField == null) {\n                // Lazy init\n                this.docsWithField = docsWithField = new FixedBitSet(maxDoc);\n              }\n              docsWithField.set(docID);\n            }\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl.Uninvert#uninvertPostings(LeafReader,String).mjava","pathOld":"/dev/null","sourceNew":"    final void uninvertPostings(LeafReader reader, String field) throws IOException {\n      final int maxDoc = reader.maxDoc();\n      Terms terms = reader.terms(field);\n      if (terms != null) {\n        final boolean setDocsWithField;\n        final int termsDocCount = terms.getDocCount();\n        assert termsDocCount <= maxDoc;\n        if (termsDocCount == maxDoc) {\n          // Fast case: all docs have this field:\n          this.docsWithField = new Bits.MatchAllBits(maxDoc);\n          setDocsWithField = false;\n        } else {\n          setDocsWithField = true;\n        }\n\n        final TermsEnum termsEnum = termsEnum(terms);\n\n        PostingsEnum docs = null;\n        FixedBitSet docsWithField = null;\n        while(true) {\n          final BytesRef term = termsEnum.next();\n          if (term == null) {\n            break;\n          }\n          visitTerm(term);\n          docs = termsEnum.postings(docs, PostingsEnum.NONE);\n          while (true) {\n            final int docID = docs.nextDoc();\n            if (docID == DocIdSetIterator.NO_MORE_DOCS) {\n              break;\n            }\n            visitDoc(docID);\n            if (setDocsWithField) {\n              if (docsWithField == null) {\n                // Lazy init\n                this.docsWithField = docsWithField = new FixedBitSet(maxDoc);\n              }\n              docsWithField.set(docID);\n            }\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}