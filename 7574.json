{"path":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","commits":[{"id":"7edb20114e86ec883b0b08bd624eee852c565c06","date":1273941247,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","pathOld":"/dev/null","sourceNew":"  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer();\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ade882efb2f2235dafb176284c1e35dbdb1c126","date":1274043418,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","sourceNew":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer();\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","sourceOld":"  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer();\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","sourceNew":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random);\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer();\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","sourceNew":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random);\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer();\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","sourceNew":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random);\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer();\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","sourceNew":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random);\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer();\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","sourceNew":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random);\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random);\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7edb20114e86ec883b0b08bd624eee852c565c06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["2ade882efb2f2235dafb176284c1e35dbdb1c126"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a3776dccca01c11e7046323cfad46a3b4a471233":["2ade882efb2f2235dafb176284c1e35dbdb1c126","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2ade882efb2f2235dafb176284c1e35dbdb1c126","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"962d04139994fce5193143ef35615499a9a96d78":["2ade882efb2f2235dafb176284c1e35dbdb1c126","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"2ade882efb2f2235dafb176284c1e35dbdb1c126":["7edb20114e86ec883b0b08bd624eee852c565c06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"7edb20114e86ec883b0b08bd624eee852c565c06":["2ade882efb2f2235dafb176284c1e35dbdb1c126"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7edb20114e86ec883b0b08bd624eee852c565c06"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"962d04139994fce5193143ef35615499a9a96d78":[],"2ade882efb2f2235dafb176284c1e35dbdb1c126":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}