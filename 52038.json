{"path":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/StatsComponent#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who, ShardRequest sreq) {\n    if (!rb.doStats) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n        sreq.purpose |= ShardRequest.PURPOSE_GET_STATS;\n\n        StatsInfo si = rb._statsInfo;\n        if (si == null) {\n          rb._statsInfo = si = new StatsInfo();\n          si.parse(rb.req.getParams(), rb);\n          // should already be true...\n          // sreq.params.set(StatsParams.STATS, \"true\");\n        }\n    } else {\n      // turn off stats on other requests\n      sreq.params.set(StatsParams.STATS, \"false\");\n      // we could optionally remove stats params\n    }\n  }\n\n","sourceOld":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who, ShardRequest sreq) {\n    if (!rb.doStats) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n        sreq.purpose |= ShardRequest.PURPOSE_GET_STATS;\n\n        StatsInfo si = rb._statsInfo;\n        if (si == null) {\n          rb._statsInfo = si = new StatsInfo();\n          si.parse(rb.req.getParams(), rb);\n          // should already be true...\n          // sreq.params.set(StatsParams.STATS, \"true\");\n        }\n    } else {\n      // turn off stats on other requests\n      sreq.params.set(StatsParams.STATS, \"false\");\n      // we could optionally remove stats params\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/StatsComponent#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who, ShardRequest sreq) {\n    if (!rb.doStats) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n        sreq.purpose |= ShardRequest.PURPOSE_GET_STATS;\n\n        StatsInfo si = rb._statsInfo;\n        if (si == null) {\n          rb._statsInfo = si = new StatsInfo();\n          si.parse(rb.req.getParams(), rb);\n          // should already be true...\n          // sreq.params.set(StatsParams.STATS, \"true\");\n        }\n    } else {\n      // turn off stats on other requests\n      sreq.params.set(StatsParams.STATS, \"false\");\n      // we could optionally remove stats params\n    }\n  }\n\n","sourceOld":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who, ShardRequest sreq) {\n    if (!rb.doStats) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n        sreq.purpose |= ShardRequest.PURPOSE_GET_STATS;\n\n        StatsInfo si = rb._statsInfo;\n        if (si == null) {\n          rb._statsInfo = si = new StatsInfo();\n          si.parse(rb.req.getParams(), rb);\n          // should already be true...\n          // sreq.params.set(StatsParams.STATS, \"true\");\n        }\n    } else {\n      // turn off stats on other requests\n      sreq.params.set(StatsParams.STATS, \"false\");\n      // we could optionally remove stats params\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/StatsComponent#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who, ShardRequest sreq) {\n    if (!rb.doStats) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n        sreq.purpose |= ShardRequest.PURPOSE_GET_STATS;\n\n        StatsInfo si = rb._statsInfo;\n        if (si == null) {\n          rb._statsInfo = si = new StatsInfo();\n          si.parse(rb.req.getParams(), rb);\n          // should already be true...\n          // sreq.params.set(StatsParams.STATS, \"true\");\n        }\n    } else {\n      // turn off stats on other requests\n      sreq.params.set(StatsParams.STATS, \"false\");\n      // we could optionally remove stats params\n    }\n  }\n\n","sourceOld":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who, ShardRequest sreq) {\n    if (!rb.doStats) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n        sreq.purpose |= ShardRequest.PURPOSE_GET_STATS;\n\n        StatsInfo si = rb._statsInfo;\n        if (si == null) {\n          rb._statsInfo = si = new StatsInfo();\n          si.parse(rb.req.getParams(), rb);\n          // should already be true...\n          // sreq.params.set(StatsParams.STATS, \"true\");\n        }\n    } else {\n      // turn off stats on other requests\n      sreq.params.set(StatsParams.STATS, \"false\");\n      // we could optionally remove stats params\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"610c97b96420e614c67797fd43822ebc1d4b7ee2","date":1410814832,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who, ShardRequest sreq) {\n    if (!rb.doStats) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= ShardRequest.PURPOSE_GET_STATS;\n    } else {\n      // turn off stats on other requests\n      sreq.params.set(StatsParams.STATS, \"false\");\n      // we could optionally remove stats params\n    }\n  }\n\n","sourceOld":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who, ShardRequest sreq) {\n    if (!rb.doStats) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n        sreq.purpose |= ShardRequest.PURPOSE_GET_STATS;\n\n        StatsInfo si = rb._statsInfo;\n        if (si == null) {\n          rb._statsInfo = si = new StatsInfo();\n          si.parse(rb.req.getParams(), rb);\n          // should already be true...\n          // sreq.params.set(StatsParams.STATS, \"true\");\n        }\n    } else {\n      // turn off stats on other requests\n      sreq.params.set(StatsParams.STATS, \"false\");\n      // we could optionally remove stats params\n    }\n  }\n\n","bugFix":["758a0ba5e213f4d1fc89087ae6e4678f7879e450"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c18a95e9168a30be855f5d5e7d61a863186fdc5","date":1415142581,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who, ShardRequest sreq) {\n    if (!rb.doStats) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= ShardRequest.PURPOSE_GET_STATS;\n    } else {\n\n\n      // turn off stats on other requests\n      sreq.params.set(StatsParams.STATS, \"false\");\n      // we could optionally remove stats params\n    }\n  }\n\n","sourceOld":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who, ShardRequest sreq) {\n    if (!rb.doStats) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= ShardRequest.PURPOSE_GET_STATS;\n    } else {\n      // turn off stats on other requests\n      sreq.params.set(StatsParams.STATS, \"false\");\n      // we could optionally remove stats params\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"610c97b96420e614c67797fd43822ebc1d4b7ee2":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["610c97b96420e614c67797fd43822ebc1d4b7ee2"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"]},"commit2Childs":{"610c97b96420e614c67797fd43822ebc1d4b7ee2":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["610c97b96420e614c67797fd43822ebc1d4b7ee2"],"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}