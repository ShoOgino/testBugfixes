{"path":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#Polygon2D(Polygon,Polygon2D).mjava","commits":[{"id":"925fce43f3bac029d912b9b7de03c789e258a333","date":1461612714,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#Polygon2D(Polygon,Polygon2D).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonTree#LatLonTree(Polygon,LatLonTree...).mjava","sourceNew":"  private Polygon2D(Polygon polygon, Polygon2D holes) {\n    this.holes = holes;\n    this.minLat = polygon.minLat;\n    this.maxLat = polygon.maxLat;\n    this.minLon = polygon.minLon;\n    this.maxLon = polygon.maxLon;\n    this.maxY = maxLat;\n    this.maxX = maxLon;\n    \n    // create interval tree of edges\n    this.tree = createTree(polygon.getPolyLats(), polygon.getPolyLons());\n  }\n\n","sourceOld":"  // TODO: \"pack\" all the gons and holes into one tree with separator.\n  // the algorithms support this, but we have to be careful.\n  LatLonTree(Polygon polygon, LatLonTree... holes) {\n    this.holes = holes.clone();\n    this.minLat = polygon.minLat;\n    this.maxLat = polygon.maxLat;\n    this.minLon = polygon.minLon;\n    this.maxLon = polygon.maxLon;\n    \n    // create interval tree of edges\n    this.tree = createTree(polygon.getPolyLats(), polygon.getPolyLons());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#Polygon2D(Polygon,Polygon2D).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonTree#LatLonTree(Polygon,LatLonTree...).mjava","sourceNew":"  private Polygon2D(Polygon polygon, Polygon2D holes) {\n    this.holes = holes;\n    this.minLat = polygon.minLat;\n    this.maxLat = polygon.maxLat;\n    this.minLon = polygon.minLon;\n    this.maxLon = polygon.maxLon;\n    this.maxY = maxLat;\n    this.maxX = maxLon;\n    \n    // create interval tree of edges\n    this.tree = createTree(polygon.getPolyLats(), polygon.getPolyLons());\n  }\n\n","sourceOld":"  // TODO: \"pack\" all the gons and holes into one tree with separator.\n  // the algorithms support this, but we have to be careful.\n  LatLonTree(Polygon polygon, LatLonTree... holes) {\n    this.holes = holes.clone();\n    this.minLat = polygon.minLat;\n    this.maxLat = polygon.maxLat;\n    this.minLon = polygon.minLon;\n    this.maxLon = polygon.maxLon;\n    \n    // create interval tree of edges\n    this.tree = createTree(polygon.getPolyLats(), polygon.getPolyLons());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4fccad460342b1af30cb328cc8297751a218d78","date":1541177339,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#Polygon2D(Polygon,Polygon2D).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#Polygon2D(Polygon,Polygon2D).mjava","sourceNew":"  private Polygon2D(Polygon polygon, Polygon2D holes) {\n    super(polygon.minLat, polygon.maxLat, polygon.minLon, polygon.maxLon, polygon.getPolyLats(), polygon.getPolyLons());\n    this.holes = holes;\n  }\n\n","sourceOld":"  private Polygon2D(Polygon polygon, Polygon2D holes) {\n    this.holes = holes;\n    this.minLat = polygon.minLat;\n    this.maxLat = polygon.maxLat;\n    this.minLon = polygon.minLon;\n    this.maxLon = polygon.maxLon;\n    this.maxY = maxLat;\n    this.maxX = maxLon;\n    \n    // create interval tree of edges\n    this.tree = createTree(polygon.getPolyLats(), polygon.getPolyLons());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c286b0d8c507a88b289407e2fe161effa275c6b0","date":1562615977,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#Polygon2D(Polygon,Polygon2D).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#Polygon2D(Polygon,Polygon2D).mjava","sourceNew":"  protected Polygon2D(Polygon polygon, Polygon2D holes) {\n    this(polygon.minLat, polygon.maxLat, polygon.minLon, polygon.maxLon, polygon.getPolyLats(), polygon.getPolyLons(), holes);\n  }\n\n","sourceOld":"  private Polygon2D(Polygon polygon, Polygon2D holes) {\n    super(polygon.minLat, polygon.maxLat, polygon.minLon, polygon.maxLon, polygon.getPolyLats(), polygon.getPolyLons());\n    this.holes = holes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","date":1571074565,"type":4,"author":"Ignacio Vera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#Polygon2D(Polygon,Polygon2D).mjava","sourceNew":null,"sourceOld":"  protected Polygon2D(Polygon polygon, Polygon2D holes) {\n    this(polygon.minLat, polygon.maxLat, polygon.minLon, polygon.maxLon, polygon.getPolyLats(), polygon.getPolyLons(), holes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":4,"author":"jimczi","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#Polygon2D(Polygon,Polygon2D).mjava","sourceNew":null,"sourceOld":"  protected Polygon2D(Polygon polygon, Polygon2D holes) {\n    this(polygon.minLat, polygon.maxLat, polygon.minLon, polygon.maxLon, polygon.getPolyLats(), polygon.getPolyLons(), holes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","925fce43f3bac029d912b9b7de03c789e258a333"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["e4fccad460342b1af30cb328cc8297751a218d78"],"e4fccad460342b1af30cb328cc8297751a218d78":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"],"925fce43f3bac029d912b9b7de03c789e258a333":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b0b597c65628ca9e73913a07e81691f8229bae35":["c286b0d8c507a88b289407e2fe161effa275c6b0","b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"]},"commit2Childs":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","925fce43f3bac029d912b9b7de03c789e258a333"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["e4fccad460342b1af30cb328cc8297751a218d78"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","b0b597c65628ca9e73913a07e81691f8229bae35"],"e4fccad460342b1af30cb328cc8297751a218d78":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"925fce43f3bac029d912b9b7de03c789e258a333":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}