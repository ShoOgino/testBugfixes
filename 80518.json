{"path":"solr/core/src/java/org/apache/solr/cloud/SplitShardCmd#getParentSlice(ClusterState,String,AtomicReference[String],String).mjava","commits":[{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SplitShardCmd#getParentSlice(ClusterState,String,AtomicReference[String],String).mjava","pathOld":"/dev/null","sourceNew":"  public static Slice getParentSlice(ClusterState clusterState, String collectionName, AtomicReference<String> slice, String splitKey) {\n    DocCollection collection = clusterState.getCollection(collectionName);\n    DocRouter router = collection.getRouter() != null ? collection.getRouter() : DocRouter.DEFAULT;\n\n    Slice parentSlice;\n\n    if (slice.get() == null) {\n      if (router instanceof CompositeIdRouter) {\n        Collection<Slice> searchSlices = router.getSearchSlicesSingle(splitKey, new ModifiableSolrParams(), collection);\n        if (searchSlices.isEmpty()) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unable to find an active shard for split.key: \" + splitKey);\n        }\n        if (searchSlices.size() > 1) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Splitting a split.key: \" + splitKey + \" which spans multiple shards is not supported\");\n        }\n        parentSlice = searchSlices.iterator().next();\n        slice.set(parentSlice.getName());\n        log.info(\"Split by route.key: {}, parent shard is: {} \", splitKey, slice);\n      } else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Split by route key can only be used with CompositeIdRouter or subclass. Found router: \"\n                + router.getClass().getName());\n      }\n    } else {\n      parentSlice = collection.getSlice(slice.get());\n    }\n\n    if (parentSlice == null) {\n      // no chance of the collection being null because ClusterState#getCollection(String) would have thrown\n      // an exception already\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No shard with the specified name exists: \" + slice);\n    }\n    return parentSlice;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/SplitShardCmd#getParentSlice(ClusterState,String,AtomicReference[String],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SplitShardCmd#getParentSlice(ClusterState,String,AtomicReference[String],String).mjava","sourceNew":"  public static Slice getParentSlice(ClusterState clusterState, String collectionName, AtomicReference<String> slice, String splitKey) {\n    DocCollection collection = clusterState.getCollection(collectionName);\n    DocRouter router = collection.getRouter() != null ? collection.getRouter() : DocRouter.DEFAULT;\n\n    Slice parentSlice;\n\n    if (slice.get() == null) {\n      if (router instanceof CompositeIdRouter) {\n        Collection<Slice> searchSlices = router.getSearchSlicesSingle(splitKey, new ModifiableSolrParams(), collection);\n        if (searchSlices.isEmpty()) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unable to find an active shard for split.key: \" + splitKey);\n        }\n        if (searchSlices.size() > 1) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Splitting a split.key: \" + splitKey + \" which spans multiple shards is not supported\");\n        }\n        parentSlice = searchSlices.iterator().next();\n        slice.set(parentSlice.getName());\n        log.info(\"Split by route.key: {}, parent shard is: {} \", splitKey, slice);\n      } else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Split by route key can only be used with CompositeIdRouter or subclass. Found router: \"\n                + router.getClass().getName());\n      }\n    } else {\n      parentSlice = collection.getSlice(slice.get());\n    }\n\n    if (parentSlice == null) {\n      // no chance of the collection being null because ClusterState#getCollection(String) would have thrown\n      // an exception already\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No shard with the specified name exists: \" + slice);\n    }\n    return parentSlice;\n  }\n\n","sourceOld":"  public static Slice getParentSlice(ClusterState clusterState, String collectionName, AtomicReference<String> slice, String splitKey) {\n    DocCollection collection = clusterState.getCollection(collectionName);\n    DocRouter router = collection.getRouter() != null ? collection.getRouter() : DocRouter.DEFAULT;\n\n    Slice parentSlice;\n\n    if (slice.get() == null) {\n      if (router instanceof CompositeIdRouter) {\n        Collection<Slice> searchSlices = router.getSearchSlicesSingle(splitKey, new ModifiableSolrParams(), collection);\n        if (searchSlices.isEmpty()) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unable to find an active shard for split.key: \" + splitKey);\n        }\n        if (searchSlices.size() > 1) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Splitting a split.key: \" + splitKey + \" which spans multiple shards is not supported\");\n        }\n        parentSlice = searchSlices.iterator().next();\n        slice.set(parentSlice.getName());\n        log.info(\"Split by route.key: {}, parent shard is: {} \", splitKey, slice);\n      } else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Split by route key can only be used with CompositeIdRouter or subclass. Found router: \"\n                + router.getClass().getName());\n      }\n    } else {\n      parentSlice = collection.getSlice(slice.get());\n    }\n\n    if (parentSlice == null) {\n      // no chance of the collection being null because ClusterState#getCollection(String) would have thrown\n      // an exception already\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No shard with the specified name exists: \" + slice);\n    }\n    return parentSlice;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/SplitShardCmd#getParentSlice(ClusterState,String,AtomicReference[String],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SplitShardCmd#getParentSlice(ClusterState,String,AtomicReference[String],String).mjava","sourceNew":"  public static Slice getParentSlice(ClusterState clusterState, String collectionName, AtomicReference<String> slice, String splitKey) {\n    DocCollection collection = clusterState.getCollection(collectionName);\n    DocRouter router = collection.getRouter() != null ? collection.getRouter() : DocRouter.DEFAULT;\n\n    Slice parentSlice;\n\n    if (slice.get() == null) {\n      if (router instanceof CompositeIdRouter) {\n        Collection<Slice> searchSlices = router.getSearchSlicesSingle(splitKey, new ModifiableSolrParams(), collection);\n        if (searchSlices.isEmpty()) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unable to find an active shard for split.key: \" + splitKey);\n        }\n        if (searchSlices.size() > 1) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Splitting a split.key: \" + splitKey + \" which spans multiple shards is not supported\");\n        }\n        parentSlice = searchSlices.iterator().next();\n        slice.set(parentSlice.getName());\n        log.info(\"Split by route.key: {}, parent shard is: {} \", splitKey, slice);\n      } else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Split by route key can only be used with CompositeIdRouter or subclass. Found router: \"\n                + router.getClass().getName());\n      }\n    } else {\n      parentSlice = collection.getSlice(slice.get());\n    }\n\n    if (parentSlice == null) {\n      // no chance of the collection being null because ClusterState#getCollection(String) would have thrown\n      // an exception already\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No shard with the specified name exists: \" + slice);\n    }\n    return parentSlice;\n  }\n\n","sourceOld":"  public static Slice getParentSlice(ClusterState clusterState, String collectionName, AtomicReference<String> slice, String splitKey) {\n    DocCollection collection = clusterState.getCollection(collectionName);\n    DocRouter router = collection.getRouter() != null ? collection.getRouter() : DocRouter.DEFAULT;\n\n    Slice parentSlice;\n\n    if (slice.get() == null) {\n      if (router instanceof CompositeIdRouter) {\n        Collection<Slice> searchSlices = router.getSearchSlicesSingle(splitKey, new ModifiableSolrParams(), collection);\n        if (searchSlices.isEmpty()) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unable to find an active shard for split.key: \" + splitKey);\n        }\n        if (searchSlices.size() > 1) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Splitting a split.key: \" + splitKey + \" which spans multiple shards is not supported\");\n        }\n        parentSlice = searchSlices.iterator().next();\n        slice.set(parentSlice.getName());\n        log.info(\"Split by route.key: {}, parent shard is: {} \", splitKey, slice);\n      } else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Split by route key can only be used with CompositeIdRouter or subclass. Found router: \"\n                + router.getClass().getName());\n      }\n    } else {\n      parentSlice = collection.getSlice(slice.get());\n    }\n\n    if (parentSlice == null) {\n      // no chance of the collection being null because ClusterState#getCollection(String) would have thrown\n      // an exception already\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No shard with the specified name exists: \" + slice);\n    }\n    return parentSlice;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}