{"path":"solr/core/src/test/org/apache/solr/security/HttpParamDelegationTokenPlugin#init(Map[String,Object]).mjava","commits":[{"id":"cc3d73ce4049cb1520abaaae57fe8267639bda1d","date":1470181330,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/HttpParamDelegationTokenPlugin#init(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    try {\n      final FilterConfig initConf = getInitFilterConfig(pluginConfig, true);\n\n      FilterConfig conf = new FilterConfig() {\n        @Override\n        public ServletContext getServletContext() {\n          return initConf.getServletContext();\n        }\n\n        @Override\n        public Enumeration<String> getInitParameterNames() {\n          return initConf.getInitParameterNames();\n        }\n\n        @Override\n        public String getInitParameter(String param) {\n          if (AuthenticationFilter.AUTH_TYPE.equals(param)) {\n            return HttpParamDelegationTokenAuthenticationHandler.class.getName();\n          }\n          return initConf.getInitParameter(param);\n        }\n\n        @Override\n        public String getFilterName() {\n         return \"HttpParamFilter\";\n        }\n      };\n      Filter kerberosFilter = new HttpParamToRequestFilter();\n      kerberosFilter.init(conf);\n      setKerberosFilter(kerberosFilter);\n    } catch (ServletException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Error initializing kerberos authentication plugin: \"+e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/HttpParamDelegationTokenPlugin#init(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    try {\n      final FilterConfig initConf = getInitFilterConfig(pluginConfig, true);\n\n      FilterConfig conf = new FilterConfig() {\n        @Override\n        public ServletContext getServletContext() {\n          return initConf.getServletContext();\n        }\n\n        @Override\n        public Enumeration<String> getInitParameterNames() {\n          return initConf.getInitParameterNames();\n        }\n\n        @Override\n        public String getInitParameter(String param) {\n          if (AuthenticationFilter.AUTH_TYPE.equals(param)) {\n            return HttpParamDelegationTokenAuthenticationHandler.class.getName();\n          }\n          return initConf.getInitParameter(param);\n        }\n\n        @Override\n        public String getFilterName() {\n         return \"HttpParamFilter\";\n        }\n      };\n      Filter kerberosFilter = new HttpParamToRequestFilter();\n      kerberosFilter.init(conf);\n      setKerberosFilter(kerberosFilter);\n    } catch (ServletException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Error initializing kerberos authentication plugin: \"+e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/HttpParamDelegationTokenPlugin#init(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    try {\n      final FilterConfig initConf = getInitFilterConfig(pluginConfig, true);\n\n      FilterConfig conf = new FilterConfig() {\n        @Override\n        public ServletContext getServletContext() {\n          return initConf.getServletContext();\n        }\n\n        @Override\n        public Enumeration<String> getInitParameterNames() {\n          return initConf.getInitParameterNames();\n        }\n\n        @Override\n        public String getInitParameter(String param) {\n          if (AuthenticationFilter.AUTH_TYPE.equals(param)) {\n            return HttpParamDelegationTokenAuthenticationHandler.class.getName();\n          }\n          return initConf.getInitParameter(param);\n        }\n\n        @Override\n        public String getFilterName() {\n         return \"HttpParamFilter\";\n        }\n      };\n      Filter kerberosFilter = new HttpParamToRequestFilter();\n      kerberosFilter.init(conf);\n      setKerberosFilter(kerberosFilter);\n    } catch (ServletException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Error initializing kerberos authentication plugin: \"+e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cc3d73ce4049cb1520abaaae57fe8267639bda1d"]},"commit2Childs":{"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc3d73ce4049cb1520abaaae57fe8267639bda1d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}