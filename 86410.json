{"path":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#cloneLiveDocs(Bits).mjava","commits":[{"id":"cb0130363fa13c53e4e78317c35b3b45a3089276","date":1523267438,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#cloneLiveDocs(Bits).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Clones the given live docs\n   */\n  static FixedBitSet cloneLiveDocs(Bits liveDocs) {\n    if (liveDocs instanceof FixedBitSet) {\n      return ((FixedBitSet) liveDocs).clone();\n    } else { // mainly if we have asserting codec\n      FixedBitSet mutableBits = new FixedBitSet(liveDocs.length());\n      for (int i = 0; i < liveDocs.length(); i++) {\n        if (liveDocs.get(i)) {\n          mutableBits.set(i);\n        }\n      }\n      return mutableBits;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d58e44159788900f4a2113b84463dc3fbbf80f20","date":1523319203,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#cloneLiveDocs(Bits).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Clones the given live docs\n   */\n  static FixedBitSet cloneLiveDocs(Bits liveDocs) {\n    if (liveDocs instanceof FixedBitSet) {\n      return ((FixedBitSet) liveDocs).clone();\n    } else { // mainly if we have asserting codec\n      FixedBitSet mutableBits = new FixedBitSet(liveDocs.length());\n      for (int i = 0; i < liveDocs.length(); i++) {\n        if (liveDocs.get(i)) {\n          mutableBits.set(i);\n        }\n      }\n      return mutableBits;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f6c6c7e96b58779768d63037428c4164f48c8f7","date":1532682688,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#cloneLiveDocs(Bits).mjava","sourceNew":null,"sourceOld":"  /**\n   * Clones the given live docs\n   */\n  static FixedBitSet cloneLiveDocs(Bits liveDocs) {\n    if (liveDocs instanceof FixedBitSet) {\n      return ((FixedBitSet) liveDocs).clone();\n    } else { // mainly if we have asserting codec\n      FixedBitSet mutableBits = new FixedBitSet(liveDocs.length());\n      for (int i = 0; i < liveDocs.length(); i++) {\n        if (liveDocs.get(i)) {\n          mutableBits.set(i);\n        }\n      }\n      return mutableBits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d58e44159788900f4a2113b84463dc3fbbf80f20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cb0130363fa13c53e4e78317c35b3b45a3089276"],"4f6c6c7e96b58779768d63037428c4164f48c8f7":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb0130363fa13c53e4e78317c35b3b45a3089276":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4f6c6c7e96b58779768d63037428c4164f48c8f7"]},"commit2Childs":{"d58e44159788900f4a2113b84463dc3fbbf80f20":["4f6c6c7e96b58779768d63037428c4164f48c8f7"],"4f6c6c7e96b58779768d63037428c4164f48c8f7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d58e44159788900f4a2113b84463dc3fbbf80f20","cb0130363fa13c53e4e78317c35b3b45a3089276"],"cb0130363fa13c53e4e78317c35b3b45a3089276":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}