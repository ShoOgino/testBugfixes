{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#verifyDocCounts().mjava","commits":[{"id":"32feb7c2c571b402d2e231bd8e3b6add4af6d6eb","date":1327773585,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#verifyDocCounts().mjava","pathOld":"/dev/null","sourceNew":"    // Call only from assert!\n    public synchronized boolean verifyDocCounts() {\n      int count;\n      if (liveDocs != null) {\n        count = 0;\n        for(int docID=0;docID<info.docCount;docID++) {\n          if (liveDocs.get(docID)) {\n            count++;\n          }\n        }\n      } else {\n        count = info.docCount;\n      }\n\n      assert info.docCount - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.docCount + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;;\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31","date":1327836826,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#verifyDocCounts().mjava","pathOld":"/dev/null","sourceNew":"    // Call only from assert!\n    public synchronized boolean verifyDocCounts() {\n      int count;\n      if (liveDocs != null) {\n        count = 0;\n        for(int docID=0;docID<info.docCount;docID++) {\n          if (liveDocs.get(docID)) {\n            count++;\n          }\n        }\n      } else {\n        count = info.docCount;\n      }\n\n      assert info.docCount - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.docCount + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;;\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#verifyDocCounts().mjava","pathOld":"/dev/null","sourceNew":"    // Call only from assert!\n    public synchronized boolean verifyDocCounts() {\n      int count;\n      if (liveDocs != null) {\n        count = 0;\n        for(int docID=0;docID<info.docCount;docID++) {\n          if (liveDocs.get(docID)) {\n            count++;\n          }\n        }\n      } else {\n        count = info.docCount;\n      }\n\n      assert info.docCount - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.docCount + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;;\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#verifyDocCounts().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#verifyDocCounts().mjava","sourceNew":"    // Call only from assert!\n    public synchronized boolean verifyDocCounts() {\n      int count;\n      if (liveDocs != null) {\n        count = 0;\n        for(int docID=0;docID<info.docCount;docID++) {\n          if (liveDocs.get(docID)) {\n            count++;\n          }\n        }\n      } else {\n        count = info.docCount;\n      }\n\n      assert info.docCount - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.docCount + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;;\n      return true;\n    }\n\n","sourceOld":"    // Call only from assert!\n    public synchronized boolean verifyDocCounts() {\n      int count;\n      if (liveDocs != null) {\n        count = 0;\n        for(int docID=0;docID<info.docCount;docID++) {\n          if (liveDocs.get(docID)) {\n            count++;\n          }\n        }\n      } else {\n        count = info.docCount;\n      }\n\n      assert info.docCount - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.docCount + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd92b8bcc88e969302510acf77bd6970da3994c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"32feb7c2c571b402d2e231bd8e3b6add4af6d6eb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32feb7c2c571b402d2e231bd8e3b6add4af6d6eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd92b8bcc88e969302510acf77bd6970da3994c4","32feb7c2c571b402d2e231bd8e3b6add4af6d6eb","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"32feb7c2c571b402d2e231bd8e3b6add4af6d6eb":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","fd92b8bcc88e969302510acf77bd6970da3994c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}