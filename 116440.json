{"path":"solr/core/src/java/org/apache/solr/handler/component/PhrasesIdentificationComponent#prepare(ResponseBuilder).mjava","commits":[{"id":"0d1411e62d30c460b09c6f3643df82daa10a27cc","date":1536256256,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/PhrasesIdentificationComponent#prepare(ResponseBuilder).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void prepare(ResponseBuilder rb) throws IOException {\n    final SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) {\n      return;\n    }\n    if (params.getBool(ShardParams.IS_SHARD, false)) {\n      // only one stage/purpose where we should do any work on a shard\n      if (0 == (SHARD_PURPOSE & params.getInt(ShardParams.SHARDS_PURPOSE, 0))) {\n        return;\n      }\n    }\n\n    // if we're still here, then we should parse & validate our input, \n    // putting it in the request context so our process method knows it should do work\n    rb.req.getContext().put(this.getClass(), PhrasesContextData.parseAndValidateRequest(rb.req));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d1411e62d30c460b09c6f3643df82daa10a27cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d1411e62d30c460b09c6f3643df82daa10a27cc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d1411e62d30c460b09c6f3643df82daa10a27cc"],"0d1411e62d30c460b09c6f3643df82daa10a27cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}