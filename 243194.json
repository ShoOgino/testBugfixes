{"path":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#testRebalanceLeaders().mjava","commits":[{"id":"73fd358e8ec697393d56617f4d9cedaca74dca14","date":1547954439,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#testRebalanceLeaders().mjava","pathOld":"/dev/null","sourceNew":"  // We've moved on from a property being tested, we need to check if rebalancing the leaders actually chantges the\n  // leader appropriately.\n  @Test\n  public void testRebalanceLeaders() throws Exception {\n\n    // First let's unbalance the preferredLeader property, do all the leaders get reassigned properly?\n    concentrateProp(\"preferredLeader\");\n    sendRebalanceCommand();\n    checkPreferredsAreLeaders();\n\n    // Now follow up by evenly distributing the property as well as possible.\n    doTestBalancePropertySliceUnique(\"preferredLeader\");\n    sendRebalanceCommand();\n    checkPreferredsAreLeaders();\n\n    // Now check the condition we saw \"in the wild\" where you could not rebalance properly when Jetty was restarted.\n    concentratePropByRestartingJettys();\n    sendRebalanceCommand();\n    checkPreferredsAreLeaders();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#testRebalanceLeaders().mjava","pathOld":"/dev/null","sourceNew":"  // We've moved on from a property being tested, we need to check if rebalancing the leaders actually chantges the\n  // leader appropriately.\n  @Test\n  public void testRebalanceLeaders() throws Exception {\n\n    // First let's unbalance the preferredLeader property, do all the leaders get reassigned properly?\n    concentrateProp(\"preferredLeader\");\n    sendRebalanceCommand();\n    checkPreferredsAreLeaders();\n\n    // Now follow up by evenly distributing the property as well as possible.\n    doTestBalancePropertySliceUnique(\"preferredLeader\");\n    sendRebalanceCommand();\n    checkPreferredsAreLeaders();\n\n    // Now check the condition we saw \"in the wild\" where you could not rebalance properly when Jetty was restarted.\n    concentratePropByRestartingJettys();\n    sendRebalanceCommand();\n    checkPreferredsAreLeaders();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","73fd358e8ec697393d56617f4d9cedaca74dca14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"73fd358e8ec697393d56617f4d9cedaca74dca14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73fd358e8ec697393d56617f4d9cedaca74dca14"]},"commit2Childs":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","73fd358e8ec697393d56617f4d9cedaca74dca14"],"73fd358e8ec697393d56617f4d9cedaca74dca14":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}