{"path":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField]).mjava","commits":[{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,IndexDocument).mjava","sourceNew":"    @Override\n    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc)\n        throws IOException {\n      super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void updateDocument(Term term,\n        IndexDocument doc)\n        throws IOException {\n      super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f6df47cbfd656ea50ca2996361f7954531ee18b","date":1464133540,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField]).mjava","sourceNew":"    @Override\n    public long updateDocument(Term term,\n        Iterable<? extends IndexableField> doc)\n        throws IOException {\n      long result = super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc)\n        throws IOException {\n      super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6483e4260c08168709c02238ae083a51519a28dd","date":1465117546,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField]).mjava","sourceNew":"    @Override\n    public long updateDocument(Term term,\n        Iterable<? extends IndexableField> doc)\n        throws IOException {\n      long result = super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc)\n        throws IOException {\n      super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField]).mjava","sourceNew":"    @Override\n    public long updateDocument(Term term,\n        Iterable<? extends IndexableField> doc)\n        throws IOException {\n      long result = super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc)\n        throws IOException {\n      super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField]).mjava","sourceNew":"    @Override\n    public long updateDocument(Term term,\n        Iterable<? extends IndexableField> doc)\n        throws IOException {\n      long result = super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc)\n        throws IOException {\n      super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6483e4260c08168709c02238ae083a51519a28dd":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","0f6df47cbfd656ea50ca2996361f7954531ee18b"],"191128ac5b85671b1671e2c857437694283b6ebf":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","6483e4260c08168709c02238ae083a51519a28dd"],"0f6df47cbfd656ea50ca2996361f7954531ee18b":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","191128ac5b85671b1671e2c857437694283b6ebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["191128ac5b85671b1671e2c857437694283b6ebf"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6483e4260c08168709c02238ae083a51519a28dd":["191128ac5b85671b1671e2c857437694283b6ebf"],"191128ac5b85671b1671e2c857437694283b6ebf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0f6df47cbfd656ea50ca2996361f7954531ee18b":["6483e4260c08168709c02238ae083a51519a28dd"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["6483e4260c08168709c02238ae083a51519a28dd","191128ac5b85671b1671e2c857437694283b6ebf","0f6df47cbfd656ea50ca2996361f7954531ee18b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}