{"path":"lucene/core/src/test/org/apache/lucene/util/TestOfflineSorter#assertFilesIdentical(Directory,String,String).mjava","commits":[{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestOfflineSorter#assertFilesIdentical(Directory,String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Make sure two files are byte-byte identical.\n   */\n  private void assertFilesIdentical(Directory dir, String golden, String sorted) throws IOException {\n    long numBytes = dir.fileLength(golden);\n    assertEquals(numBytes, dir.fileLength(sorted));\n\n    byte[] buf1 = new byte[64 * 1024];\n    byte[] buf2 = new byte[64 * 1024];\n    try (\n         IndexInput in1 = dir.openInput(golden, IOContext.READONCE);\n         IndexInput in2 = dir.openInput(sorted, IOContext.READONCE)\n         ) {\n      long left = numBytes;\n      while (left > 0) {\n        int chunk = (int) Math.min(buf1.length, left);\n        left -= chunk;\n        in1.readBytes(buf1, 0, chunk);\n        in2.readBytes(buf2, 0, chunk);\n        for (int i = 0; i < chunk; i++) {\n          assertEquals(buf1[i], buf2[i]);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}