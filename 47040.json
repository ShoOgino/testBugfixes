{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsReader#readIndexHeader(IndexInput).mjava","commits":[{"id":"6256acedd658c13275a01e4ba106a621956a22f6","date":1400192928,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsReader#readIndexHeader(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  /** Reads index file header. */\n  private int readIndexHeader(IndexInput input) throws IOException {\n    int version = CodecUtil.checkHeader(input, VersionBlockTreeTermsWriter.TERMS_INDEX_CODEC_NAME,\n                          VersionBlockTreeTermsWriter.VERSION_START,\n                          VersionBlockTreeTermsWriter.VERSION_CURRENT);\n    if (version < VersionBlockTreeTermsWriter.VERSION_APPEND_ONLY) {\n      indexDirOffset = input.readLong(); \n    }\n    return version;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efcf27cd5ca23def8376b4c321970c14dd71623","date":1400662679,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsReader#readIndexHeader(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsReader#readIndexHeader(IndexInput).mjava","sourceNew":"  /** Reads index file header. */\n  private int readIndexHeader(IndexInput input) throws IOException {\n    int version = CodecUtil.checkHeader(input, VersionBlockTreeTermsWriter.TERMS_INDEX_CODEC_NAME,\n                          VersionBlockTreeTermsWriter.VERSION_START,\n                          VersionBlockTreeTermsWriter.VERSION_CURRENT);\n    return version;\n  }\n\n","sourceOld":"  /** Reads index file header. */\n  private int readIndexHeader(IndexInput input) throws IOException {\n    int version = CodecUtil.checkHeader(input, VersionBlockTreeTermsWriter.TERMS_INDEX_CODEC_NAME,\n                          VersionBlockTreeTermsWriter.VERSION_START,\n                          VersionBlockTreeTermsWriter.VERSION_CURRENT);\n    if (version < VersionBlockTreeTermsWriter.VERSION_APPEND_ONLY) {\n      indexDirOffset = input.readLong(); \n    }\n    return version;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsReader#readIndexHeader(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsReader#readIndexHeader(IndexInput).mjava","sourceNew":"  /** Reads index file header. */\n  private int readIndexHeader(IndexInput input) throws IOException {\n    int version = CodecUtil.checkHeader(input, VersionBlockTreeTermsWriter.TERMS_INDEX_CODEC_NAME,\n                          VersionBlockTreeTermsWriter.VERSION_START,\n                          VersionBlockTreeTermsWriter.VERSION_CURRENT);\n    return version;\n  }\n\n","sourceOld":"  /** Reads index file header. */\n  private int readIndexHeader(IndexInput input) throws IOException {\n    int version = CodecUtil.checkHeader(input, VersionBlockTreeTermsWriter.TERMS_INDEX_CODEC_NAME,\n                          VersionBlockTreeTermsWriter.VERSION_START,\n                          VersionBlockTreeTermsWriter.VERSION_CURRENT);\n    return version;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"0efcf27cd5ca23def8376b4c321970c14dd71623":["6256acedd658c13275a01e4ba106a621956a22f6"],"6256acedd658c13275a01e4ba106a621956a22f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":[],"0efcf27cd5ca23def8376b4c321970c14dd71623":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"6256acedd658c13275a01e4ba106a621956a22f6":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6256acedd658c13275a01e4ba106a621956a22f6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}