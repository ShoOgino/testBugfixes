{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getDocStats().mjava","commits":[{"id":"feb4029567b43f074ed7b6eb8fb126d355075dfd","date":1544812585,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getDocStats().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns accurate {@link DocStats} form this writer. This is equivalent to calling {@link #numDocs()} and {@link #maxDoc()}\n   * but is not subject to race-conditions. The numDoc for instance can change after maxDoc is fetched that causes numDocs to be\n   * greater than maxDoc which makes it hard to get accurate document stats from IndexWriter.\n   */\n  public synchronized DocStats getDocStats() {\n    ensureOpen();\n    int numDocs = docWriter.getNumDocs();\n    int maxDoc = numDocs;\n    for (final SegmentCommitInfo info : segmentInfos) {\n      maxDoc += info.info.maxDoc();\n      numDocs += info.info.maxDoc() - numDeletedDocs(info);\n    }\n    assert maxDoc >= numDocs : \"maxDoc is less than numDocs: \" + maxDoc + \" < \" + numDocs;\n    return new DocStats(maxDoc, numDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ba3bb78479d97e76aa664b8958ccf070d655e6","date":1544812585,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getDocStats().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getDocStats().mjava","sourceNew":"  /**\n   * Returns accurate {@link DocStats} form this writer. The numDoc for instance can change after maxDoc is fetched\n   * that causes numDocs to be greater than maxDoc which makes it hard to get accurate document stats from IndexWriter.\n   */\n  public synchronized DocStats getDocStats() {\n    ensureOpen();\n    int numDocs = docWriter.getNumDocs();\n    int maxDoc = numDocs;\n    for (final SegmentCommitInfo info : segmentInfos) {\n      maxDoc += info.info.maxDoc();\n      numDocs += info.info.maxDoc() - numDeletedDocs(info);\n    }\n    assert maxDoc >= numDocs : \"maxDoc is less than numDocs: \" + maxDoc + \" < \" + numDocs;\n    return new DocStats(maxDoc, numDocs);\n  }\n\n","sourceOld":"  /**\n   * Returns accurate {@link DocStats} form this writer. This is equivalent to calling {@link #numDocs()} and {@link #maxDoc()}\n   * but is not subject to race-conditions. The numDoc for instance can change after maxDoc is fetched that causes numDocs to be\n   * greater than maxDoc which makes it hard to get accurate document stats from IndexWriter.\n   */\n  public synchronized DocStats getDocStats() {\n    ensureOpen();\n    int numDocs = docWriter.getNumDocs();\n    int maxDoc = numDocs;\n    for (final SegmentCommitInfo info : segmentInfos) {\n      maxDoc += info.info.maxDoc();\n      numDocs += info.info.maxDoc() - numDeletedDocs(info);\n    }\n    assert maxDoc >= numDocs : \"maxDoc is less than numDocs: \" + maxDoc + \" < \" + numDocs;\n    return new DocStats(maxDoc, numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"feb4029567b43f074ed7b6eb8fb126d355075dfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96ba3bb78479d97e76aa664b8958ccf070d655e6":["feb4029567b43f074ed7b6eb8fb126d355075dfd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["96ba3bb78479d97e76aa664b8958ccf070d655e6"]},"commit2Childs":{"feb4029567b43f074ed7b6eb8fb126d355075dfd":["96ba3bb78479d97e76aa664b8958ccf070d655e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["feb4029567b43f074ed7b6eb8fb126d355075dfd"],"96ba3bb78479d97e76aa664b8958ccf070d655e6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}