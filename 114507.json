{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacet2DStream().mjava","commits":[{"id":"8192418e56fee1a061317028a35f7f288824c856","date":1557514938,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacet2DStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFacet2DStream() throws Exception {\n    new UpdateRequest()\n        .add(id, \"0\",  \"diseases_s\",  \"stroke\", \"symptoms_s\", \"confusion\", \"cases_i\", \"10\")\n        .add(id, \"1\",  \"diseases_s\",  \"cancer\", \"symptoms_s\", \"indigestion\",\"cases_i\", \"5\" )\n        .add(id, \"2\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .add(id, \"3\",  \"diseases_s\",  \"stroke\", \"symptoms_s\", \"confusion\", \"cases_i\", \"10\")\n        .add(id, \"4\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"nausea\", \"cases_i\", \"25\")\n        .add(id, \"5\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"cough\", \"cases_i\", \"10\")\n        .add(id, \"6\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"cough\", \"cases_i\", \"10\")\n        .add(id, \"7\",  \"diseases_s\",  \"heart attack\", \"symptoms_s\", \"indigestion\", \"cases_i\", \"5\")\n        .add(id, \"8\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"urination\", \"cases_i\", \"10\")\n        .add(id, \"9\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .add(id, \"10\", \"diseases_s\", \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    String expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", count(*))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    Tuple tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"count(*)\").longValue(), 3);\n\n    Tuple tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple2.getLong(\"count(*)\").longValue(), 2);\n\n    Tuple tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"count(*)\").longValue(), 2);\n\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\")\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getString(\"count(*)\"), \"3\");\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple2.getString(\"count(*)\"), \"2\");\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getString(\"count(*)\"), \"2\");\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", sum(cases_i))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"sum(cases_i)\").longValue(), 60L);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple2.getLong(\"sum(cases_i)\").longValue(), 25L);\n\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"sum(cases_i)\").longValue(), 20L);\n\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", avg(cases_i))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"avg(cases_i)\").longValue(), 20);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple2.getLong(\"avg(cases_i)\").longValue(), 25);\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"avg(cases_i)\").longValue(), 10);\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"2,2\\\")\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 4);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"count(*)\").longValue(), 3);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"urination\");\n    assertEquals(tuple2.getLong(\"count(*)\").longValue(), 1);\n\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple3.getLong(\"count(*)\").longValue(), 2);\n\n    Tuple tuple4 = tuples.get(3);\n    assertEquals(tuple4.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple4.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple4.getLong(\"count(*)\").longValue(), 1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76aa3a2da9bcf0e6545dbed66c8bb8d12ee0cf90","date":1575925443,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacet2DStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacet2DStream().mjava","sourceNew":"  @Test\n  public void testFacet2DStream() throws Exception {\n    new UpdateRequest()\n        .add(id, \"0\",  \"diseases_s\",  \"stroke\", \"symptoms_s\", \"confusion\", \"cases_i\", \"10\")\n        .add(id, \"1\",  \"diseases_s\",  \"cancer\", \"symptoms_s\", \"indigestion\",\"cases_i\", \"5\" )\n        .add(id, \"2\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .add(id, \"3\",  \"diseases_s\",  \"stroke\", \"symptoms_s\", \"confusion\", \"cases_i\", \"10\")\n        .add(id, \"4\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"nausea\", \"cases_i\", \"25\")\n        .add(id, \"5\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"cough\", \"cases_i\", \"10\")\n        .add(id, \"6\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"cough\", \"cases_i\", \"10\")\n        .add(id, \"7\",  \"diseases_s\",  \"heart attack\", \"symptoms_s\", \"indigestion\", \"cases_i\", \"5\")\n        .add(id, \"8\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"urination\", \"cases_i\", \"10\")\n        .add(id, \"9\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .add(id, \"10\", \"diseases_s\", \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    String expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", count(*))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    Tuple tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"count(*)\").longValue(), 3);\n\n    Tuple tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple2.getLong(\"count(*)\").longValue(), 2);\n\n    Tuple tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"count(*)\").longValue(), 2);\n\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\")\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getString(\"count(*)\"), \"3\");\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple2.getString(\"count(*)\"), \"2\");\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getString(\"count(*)\"), \"2\");\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", sum(cases_i))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"sum(cases_i)\").longValue(), 60L);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple2.getLong(\"sum(cases_i)\").longValue(), 25L);\n\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"sum(cases_i)\").longValue(), 20L);\n\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", avg(cases_i))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"avg(cases_i)\").longValue(), 20);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple2.getLong(\"avg(cases_i)\").longValue(), 25);\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"avg(cases_i)\").longValue(), 10);\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"2,2\\\")\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 4);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"count(*)\").longValue(), 3);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"urination\");\n    assertEquals(tuple2.getLong(\"count(*)\").longValue(), 1);\n\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple3.getLong(\"count(*)\").longValue(), 2);\n\n    Tuple tuple4 = tuples.get(3);\n    assertEquals(tuple4.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple4.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple4.getLong(\"count(*)\").longValue(), 1);\n  }\n\n","sourceOld":"  @Test\n  public void testFacet2DStream() throws Exception {\n    new UpdateRequest()\n        .add(id, \"0\",  \"diseases_s\",  \"stroke\", \"symptoms_s\", \"confusion\", \"cases_i\", \"10\")\n        .add(id, \"1\",  \"diseases_s\",  \"cancer\", \"symptoms_s\", \"indigestion\",\"cases_i\", \"5\" )\n        .add(id, \"2\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .add(id, \"3\",  \"diseases_s\",  \"stroke\", \"symptoms_s\", \"confusion\", \"cases_i\", \"10\")\n        .add(id, \"4\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"nausea\", \"cases_i\", \"25\")\n        .add(id, \"5\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"cough\", \"cases_i\", \"10\")\n        .add(id, \"6\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"cough\", \"cases_i\", \"10\")\n        .add(id, \"7\",  \"diseases_s\",  \"heart attack\", \"symptoms_s\", \"indigestion\", \"cases_i\", \"5\")\n        .add(id, \"8\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"urination\", \"cases_i\", \"10\")\n        .add(id, \"9\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .add(id, \"10\", \"diseases_s\", \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    String expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", count(*))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    Tuple tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"count(*)\").longValue(), 3);\n\n    Tuple tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple2.getLong(\"count(*)\").longValue(), 2);\n\n    Tuple tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"count(*)\").longValue(), 2);\n\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\")\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getString(\"count(*)\"), \"3\");\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple2.getString(\"count(*)\"), \"2\");\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getString(\"count(*)\"), \"2\");\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", sum(cases_i))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"sum(cases_i)\").longValue(), 60L);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple2.getLong(\"sum(cases_i)\").longValue(), 25L);\n\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"sum(cases_i)\").longValue(), 20L);\n\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", avg(cases_i))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"avg(cases_i)\").longValue(), 20);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple2.getLong(\"avg(cases_i)\").longValue(), 25);\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"avg(cases_i)\").longValue(), 10);\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"2,2\\\")\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 4);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"count(*)\").longValue(), 3);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"urination\");\n    assertEquals(tuple2.getLong(\"count(*)\").longValue(), 1);\n\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple3.getLong(\"count(*)\").longValue(), 2);\n\n    Tuple tuple4 = tuples.get(3);\n    assertEquals(tuple4.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple4.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple4.getLong(\"count(*)\").longValue(), 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7107555998ea86d6f61e2ad770687d674fa8e012","date":1575927428,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacet2DStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacet2DStream().mjava","sourceNew":"  @Test\n  public void testFacet2DStream() throws Exception {\n    new UpdateRequest()\n        .add(id, \"0\",  \"diseases_s\",  \"stroke\", \"symptoms_s\", \"confusion\", \"cases_i\", \"10\")\n        .add(id, \"1\",  \"diseases_s\",  \"cancer\", \"symptoms_s\", \"indigestion\",\"cases_i\", \"5\" )\n        .add(id, \"2\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .add(id, \"3\",  \"diseases_s\",  \"stroke\", \"symptoms_s\", \"confusion\", \"cases_i\", \"10\")\n        .add(id, \"4\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"nausea\", \"cases_i\", \"25\")\n        .add(id, \"5\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"cough\", \"cases_i\", \"10\")\n        .add(id, \"6\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"cough\", \"cases_i\", \"10\")\n        .add(id, \"7\",  \"diseases_s\",  \"heart attack\", \"symptoms_s\", \"indigestion\", \"cases_i\", \"5\")\n        .add(id, \"8\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"urination\", \"cases_i\", \"10\")\n        .add(id, \"9\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .add(id, \"10\", \"diseases_s\", \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    String expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", count(*))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    Tuple tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"count(*)\").longValue(), 3);\n\n    Tuple tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple2.getLong(\"count(*)\").longValue(), 2);\n\n    Tuple tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"count(*)\").longValue(), 2);\n\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\")\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getString(\"count(*)\"), \"3\");\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple2.getString(\"count(*)\"), \"2\");\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getString(\"count(*)\"), \"2\");\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", sum(cases_i))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"sum(cases_i)\").longValue(), 60L);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple2.getLong(\"sum(cases_i)\").longValue(), 25L);\n\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"sum(cases_i)\").longValue(), 20L);\n\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", avg(cases_i))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"avg(cases_i)\").longValue(), 20);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple2.getLong(\"avg(cases_i)\").longValue(), 25);\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"avg(cases_i)\").longValue(), 10);\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"2,2\\\")\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 4);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"count(*)\").longValue(), 3);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"urination\");\n    assertEquals(tuple2.getLong(\"count(*)\").longValue(), 1);\n\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple3.getLong(\"count(*)\").longValue(), 2);\n\n    Tuple tuple4 = tuples.get(3);\n    assertEquals(tuple4.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple4.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple4.getLong(\"count(*)\").longValue(), 1);\n  }\n\n","sourceOld":"  @Test\n  public void testFacet2DStream() throws Exception {\n    new UpdateRequest()\n        .add(id, \"0\",  \"diseases_s\",  \"stroke\", \"symptoms_s\", \"confusion\", \"cases_i\", \"10\")\n        .add(id, \"1\",  \"diseases_s\",  \"cancer\", \"symptoms_s\", \"indigestion\",\"cases_i\", \"5\" )\n        .add(id, \"2\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .add(id, \"3\",  \"diseases_s\",  \"stroke\", \"symptoms_s\", \"confusion\", \"cases_i\", \"10\")\n        .add(id, \"4\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"nausea\", \"cases_i\", \"25\")\n        .add(id, \"5\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"cough\", \"cases_i\", \"10\")\n        .add(id, \"6\",  \"diseases_s\",  \"bronchus\", \"symptoms_s\", \"cough\", \"cases_i\", \"10\")\n        .add(id, \"7\",  \"diseases_s\",  \"heart attack\", \"symptoms_s\", \"indigestion\", \"cases_i\", \"5\")\n        .add(id, \"8\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"urination\", \"cases_i\", \"10\")\n        .add(id, \"9\",  \"diseases_s\",  \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .add(id, \"10\", \"diseases_s\", \"diabetes\", \"symptoms_s\", \"thirsty\", \"cases_i\", \"20\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    String expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", count(*))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    Tuple tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"count(*)\").longValue(), 3);\n\n    Tuple tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple2.getLong(\"count(*)\").longValue(), 2);\n\n    Tuple tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"count(*)\").longValue(), 2);\n\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\")\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getString(\"count(*)\"), \"3\");\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple2.getString(\"count(*)\"), \"2\");\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getString(\"count(*)\"), \"2\");\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", sum(cases_i))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"sum(cases_i)\").longValue(), 60L);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple2.getLong(\"sum(cases_i)\").longValue(), 25L);\n\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"sum(cases_i)\").longValue(), 20L);\n\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"3,1\\\", avg(cases_i))\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 3);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"avg(cases_i)\").longValue(), 20);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple2.getLong(\"avg(cases_i)\").longValue(), 25);\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"stroke\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"confusion\");\n    assertEquals(tuple3.getLong(\"avg(cases_i)\").longValue(), 10);\n\n    paramsLoc = new ModifiableSolrParams();\n    expr = \"facet2D(collection1, q=\\\"*:*\\\", x=\\\"diseases_s\\\", y=\\\"symptoms_s\\\", dimensions=\\\"2,2\\\")\";\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n\n    assertEquals(tuples.size(), 4);\n\n    tuple1 = tuples.get(0);\n    assertEquals(tuple1.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple1.getString(\"symptoms_s\"), \"thirsty\");\n    assertEquals(tuple1.getLong(\"count(*)\").longValue(), 3);\n\n    tuple2 = tuples.get(1);\n    assertEquals(tuple2.getString(\"diseases_s\"), \"diabetes\");\n    assertEquals(tuple2.getString(\"symptoms_s\"), \"urination\");\n    assertEquals(tuple2.getLong(\"count(*)\").longValue(), 1);\n\n\n    tuple3 = tuples.get(2);\n    assertEquals(tuple3.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple3.getString(\"symptoms_s\"), \"cough\");\n    assertEquals(tuple3.getLong(\"count(*)\").longValue(), 2);\n\n    Tuple tuple4 = tuples.get(3);\n    assertEquals(tuple4.getString(\"diseases_s\"), \"bronchus\");\n    assertEquals(tuple4.getString(\"symptoms_s\"), \"nausea\");\n    assertEquals(tuple4.getLong(\"count(*)\").longValue(), 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"76aa3a2da9bcf0e6545dbed66c8bb8d12ee0cf90":["8192418e56fee1a061317028a35f7f288824c856"],"7107555998ea86d6f61e2ad770687d674fa8e012":["8192418e56fee1a061317028a35f7f288824c856","76aa3a2da9bcf0e6545dbed66c8bb8d12ee0cf90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8192418e56fee1a061317028a35f7f288824c856":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["76aa3a2da9bcf0e6545dbed66c8bb8d12ee0cf90"]},"commit2Childs":{"76aa3a2da9bcf0e6545dbed66c8bb8d12ee0cf90":["7107555998ea86d6f61e2ad770687d674fa8e012","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7107555998ea86d6f61e2ad770687d674fa8e012":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8192418e56fee1a061317028a35f7f288824c856"],"8192418e56fee1a061317028a35f7f288824c856":["76aa3a2da9bcf0e6545dbed66c8bb8d12ee0cf90","7107555998ea86d6f61e2ad770687d674fa8e012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7107555998ea86d6f61e2ad770687d674fa8e012","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}