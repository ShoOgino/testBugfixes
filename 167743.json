{"path":"lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader#testUnwrap().mjava","commits":[{"id":"47b7c62e9d3815d64e8e867bfec00e3c1ceda068","date":1418069628,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader#testUnwrap().mjava","pathOld":"/dev/null","sourceNew":"  public void testUnwrap() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    DirectoryReader dr = w.getReader();\n    LeafReader r = dr.leaves().get(0).reader();\n    FilterLeafReader r2 = new FilterLeafReader(r);\n    assertEquals(r, r2.getDelegate());\n    assertEquals(r, FilterLeafReader.unwrap(r2));\n    w.close();\n    dr.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"153d8ff6911169b9b0d93166e3c48e9c8c7ce523","date":1457458606,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader#testUnwrap().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader#testUnwrap().mjava","sourceNew":"  public void testUnwrap() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    DirectoryReader dr = w.getReader();\n    LeafReader r = dr.leaves().get(0).reader();\n    FilterLeafReader r2 = new FilterLeafReader(r) {};\n    assertEquals(r, r2.getDelegate());\n    assertEquals(r, FilterLeafReader.unwrap(r2));\n    w.close();\n    dr.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUnwrap() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    DirectoryReader dr = w.getReader();\n    LeafReader r = dr.leaves().get(0).reader();\n    FilterLeafReader r2 = new FilterLeafReader(r);\n    assertEquals(r, r2.getDelegate());\n    assertEquals(r, FilterLeafReader.unwrap(r2));\n    w.close();\n    dr.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader#testUnwrap().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader#testUnwrap().mjava","sourceNew":"  public void testUnwrap() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    DirectoryReader dr = w.getReader();\n    LeafReader r = dr.leaves().get(0).reader();\n    FilterLeafReader r2 = new FilterLeafReader(r) {\n      @Override\n      public CacheHelper getCoreCacheHelper() {\n        return in.getCoreCacheHelper();\n      }\n      @Override\n      public CacheHelper getReaderCacheHelper() {\n        return in.getReaderCacheHelper();\n      }\n    };\n    assertEquals(r, r2.getDelegate());\n    assertEquals(r, FilterLeafReader.unwrap(r2));\n    w.close();\n    dr.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUnwrap() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    DirectoryReader dr = w.getReader();\n    LeafReader r = dr.leaves().get(0).reader();\n    FilterLeafReader r2 = new FilterLeafReader(r) {};\n    assertEquals(r, r2.getDelegate());\n    assertEquals(r, FilterLeafReader.unwrap(r2));\n    w.close();\n    dr.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"153d8ff6911169b9b0d93166e3c48e9c8c7ce523":["47b7c62e9d3815d64e8e867bfec00e3c1ceda068"],"d211216c83f01894810543d1c107160a9ae3650b":["153d8ff6911169b9b0d93166e3c48e9c8c7ce523"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"47b7c62e9d3815d64e8e867bfec00e3c1ceda068":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d211216c83f01894810543d1c107160a9ae3650b"]},"commit2Childs":{"153d8ff6911169b9b0d93166e3c48e9c8c7ce523":["d211216c83f01894810543d1c107160a9ae3650b"],"d211216c83f01894810543d1c107160a9ae3650b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["47b7c62e9d3815d64e8e867bfec00e3c1ceda068"],"47b7c62e9d3815d64e8e867bfec00e3c1ceda068":["153d8ff6911169b9b0d93166e3c48e9c8c7ce523"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}