{"path":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#rawDocs(int[],int,int).mjava","commits":[{"id":"1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30","date":1327936772,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#rawDocs(int[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the length in bytes of each raw document in a\n   *  contiguous range of length numDocs starting with\n   *  startDocID.  Returns the IndexInput (the fieldStream),\n   *  already seeked to the starting point for startDocID.*/\n  public final IndexInput rawDocs(int[] lengths, int startDocID, int numDocs) throws IOException {\n    seekIndex(startDocID);\n    long startOffset = indexStream.readLong();\n    long lastOffset = startOffset;\n    int count = 0;\n    while (count < numDocs) {\n      final long offset;\n      final int docID = docStoreOffset + startDocID + count + 1;\n      assert docID <= numTotalDocs;\n      if (docID < numTotalDocs) \n        offset = indexStream.readLong();\n      else\n        offset = fieldsStream.length();\n      lengths[count++] = (int) (offset-lastOffset);\n      lastOffset = offset;\n    }\n\n    fieldsStream.seek(startOffset);\n\n    return fieldsStream;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd4eee979aff782103a0de0be39af3b48ea94ce7","date":1327947414,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xStoredFieldsReader#rawDocs(int[],int,int).mjava","sourceNew":null,"sourceOld":"  /** Returns the length in bytes of each raw document in a\n   *  contiguous range of length numDocs starting with\n   *  startDocID.  Returns the IndexInput (the fieldStream),\n   *  already seeked to the starting point for startDocID.*/\n  public final IndexInput rawDocs(int[] lengths, int startDocID, int numDocs) throws IOException {\n    seekIndex(startDocID);\n    long startOffset = indexStream.readLong();\n    long lastOffset = startOffset;\n    int count = 0;\n    while (count < numDocs) {\n      final long offset;\n      final int docID = docStoreOffset + startDocID + count + 1;\n      assert docID <= numTotalDocs;\n      if (docID < numTotalDocs) \n        offset = indexStream.readLong();\n      else\n        offset = fieldsStream.length();\n      lengths[count++] = (int) (offset-lastOffset);\n      lastOffset = offset;\n    }\n\n    fieldsStream.seek(startOffset);\n\n    return fieldsStream;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bd4eee979aff782103a0de0be39af3b48ea94ce7":["1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30"],"1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bd4eee979aff782103a0de0be39af3b48ea94ce7":[],"1538bc2b1cdbe17dacb2c1e6d11a8dc7a18c6d30":["bd4eee979aff782103a0de0be39af3b48ea94ce7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bd4eee979aff782103a0de0be39af3b48ea94ce7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}