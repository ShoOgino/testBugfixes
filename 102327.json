{"path":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner],Random).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner],Random).mjava","pathOld":"/dev/null","sourceNew":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty, Random random) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    this.random = random;\n    \n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a6378064655e76cd7b908b1cab4ce425b384b508","a6378064655e76cd7b908b1cab4ce425b384b508","a6378064655e76cd7b908b1cab4ce425b384b508","a6378064655e76cd7b908b1cab4ce425b384b508","a6378064655e76cd7b908b1cab4ce425b384b508","a6378064655e76cd7b908b1cab4ce425b384b508"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner],Random).mjava","pathOld":"/dev/null","sourceNew":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty, Random random) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    this.random = random;\n    \n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner],Random).mjava","pathOld":"/dev/null","sourceNew":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty, Random random) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    this.random = random;\n    \n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0c46c486d300cbb600e170f5b68cd8e42e94ea0","date":1342363102,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner],Random).mjava","sourceNew":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","sourceOld":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty, Random random) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    this.random = random;\n    \n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner],Random).mjava","sourceNew":null,"sourceOld":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty, Random random) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    this.random = random;\n    \n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner],Random).mjava","sourceNew":null,"sourceOld":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty, Random random) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    this.random = random;\n    \n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"aba371508186796cc6151d8223a5b4e16d02e26e":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","c0c46c486d300cbb600e170f5b68cd8e42e94ea0"],"c0c46c486d300cbb600e170f5b68cd8e42e94ea0":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","c0c46c486d300cbb600e170f5b68cd8e42e94ea0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c0c46c486d300cbb600e170f5b68cd8e42e94ea0"]},"commit2Childs":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"c0c46c486d300cbb600e170f5b68cd8e42e94ea0":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","aba371508186796cc6151d8223a5b4e16d02e26e","c0c46c486d300cbb600e170f5b68cd8e42e94ea0","fe33227f6805edab2036cbb80645cc4e2d1fa424","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}