{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer#createComponents(String,Reader).mjava","commits":[{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n      StandardFilter}, a {@link LowerCaseFilter}, a {@link StopFilter},\n      and a {@link SnowballFilter} */\n  @Override\n  public TokenStreamComponents createComponents(String fieldName, Reader reader) {\n    Tokenizer tokenizer = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, tokenizer);\n    // remove the possessive 's for english stemmers\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && \n        (name.equals(\"English\") || name.equals(\"Porter\") || name.equals(\"Lovins\")))\n      result = new EnglishPossessiveFilter(result);\n    // Use a special lowercase filter for turkish, the stemmer expects it.\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && name.equals(\"Turkish\"))\n      result = new TurkishLowerCaseFilter(result);\n    else\n      result = new LowerCaseFilter(matchVersion, result);\n    if (stopSet != null)\n      result = new StopFilter(matchVersion,\n                              result, stopSet);\n    result = new SnowballFilter(result, name);\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n      StandardFilter}, a {@link LowerCaseFilter}, a {@link StopFilter},\n      and a {@link SnowballFilter} */\n  @Override\n  public TokenStreamComponents createComponents(String fieldName, Reader reader) {\n    Tokenizer tokenizer = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, tokenizer);\n    // remove the possessive 's for english stemmers\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && \n        (name.equals(\"English\") || name.equals(\"Porter\") || name.equals(\"Lovins\")))\n      result = new EnglishPossessiveFilter(result);\n    // Use a special lowercase filter for turkish, the stemmer expects it.\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && name.equals(\"Turkish\"))\n      result = new TurkishLowerCaseFilter(result);\n    else\n      result = new LowerCaseFilter(matchVersion, result);\n    if (stopSet != null)\n      result = new StopFilter(matchVersion,\n                              result, stopSet);\n    result = new SnowballFilter(result, name);\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n      StandardFilter}, a {@link LowerCaseFilter}, a {@link StopFilter},\n      and a {@link SnowballFilter} */\n  @Override\n  public TokenStreamComponents createComponents(String fieldName, Reader reader) {\n    Tokenizer tokenizer = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, tokenizer);\n    // remove the possessive 's for english stemmers\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && \n        (name.equals(\"English\") || name.equals(\"Porter\") || name.equals(\"Lovins\")))\n      result = new EnglishPossessiveFilter(result);\n    // Use a special lowercase filter for turkish, the stemmer expects it.\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && name.equals(\"Turkish\"))\n      result = new TurkishLowerCaseFilter(result);\n    else\n      result = new LowerCaseFilter(matchVersion, result);\n    if (stopSet != null)\n      result = new StopFilter(matchVersion,\n                              result, stopSet);\n    result = new SnowballFilter(result, name);\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n      StandardFilter}, a {@link LowerCaseFilter}, a {@link StopFilter},\n      and a {@link SnowballFilter} */\n  @Override\n  public TokenStreamComponents createComponents(String fieldName, Reader reader) {\n    Tokenizer tokenizer = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, tokenizer);\n    // remove the possessive 's for english stemmers\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && \n        (name.equals(\"English\") || name.equals(\"Porter\") || name.equals(\"Lovins\")))\n      result = new EnglishPossessiveFilter(result);\n    // Use a special lowercase filter for turkish, the stemmer expects it.\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && name.equals(\"Turkish\"))\n      result = new TurkishLowerCaseFilter(result);\n    else\n      result = new LowerCaseFilter(matchVersion, result);\n    if (stopSet != null)\n      result = new StopFilter(matchVersion,\n                              result, stopSet);\n    result = new SnowballFilter(result, name);\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n      StandardFilter}, a {@link LowerCaseFilter}, a {@link StopFilter},\n      and a {@link SnowballFilter} */\n  @Override\n  public TokenStreamComponents createComponents(String fieldName, Reader reader) {\n    Tokenizer tokenizer = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(matchVersion, tokenizer);\n    // remove the possessive 's for english stemmers\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && \n        (name.equals(\"English\") || name.equals(\"Porter\") || name.equals(\"Lovins\")))\n      result = new EnglishPossessiveFilter(result);\n    // Use a special lowercase filter for turkish, the stemmer expects it.\n    if (matchVersion.onOrAfter(Version.LUCENE_31) && name.equals(\"Turkish\"))\n      result = new TurkishLowerCaseFilter(result);\n    else\n      result = new LowerCaseFilter(matchVersion, result);\n    if (stopSet != null)\n      result = new StopFilter(matchVersion,\n                              result, stopSet);\n    result = new SnowballFilter(result, name);\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}