{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#runTests(Map[String,String],Evaluator).mjava","commits":[{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":1,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#runTests(Map[String,String],Evaluator).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEvaluatorBag#runTests(Map[String,String],Evaluator).mjava","sourceNew":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.<String, Object>emptyMap(), null, null);    \n    for (Map.Entry<String, String> entry : tests.entrySet()) {\n      Map<String, Object> values = new HashMap<String, Object>();\n      values.put(\"key\", entry.getKey());\n      resolver.addNamespace(\"A\", values);\n\n      String expected = entry.getValue();\n      String actual = evaluator.evaluate(\"A.key\", ctx);\n      assertEquals(expected, actual);\n    }\n    \n  }\n\n","sourceOld":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);    \n    for (Map.Entry<String, String> entry : tests.entrySet()) {\n      Map<String, Object> values = new HashMap<String, Object>();\n      values.put(\"key\", entry.getKey());\n      resolver.addNamespace(\"A\", values);\n\n      String expected = entry.getValue();\n      String actual = evaluator.evaluate(\"A.key\", ctx);\n      assertEquals(expected, actual);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#runTests(Map[String,String],Evaluator).mjava","pathOld":"/dev/null","sourceNew":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.<String, Object>emptyMap(), null, null);    \n    for (Map.Entry<String, String> entry : tests.entrySet()) {\n      Map<String, Object> values = new HashMap<String, Object>();\n      values.put(\"key\", entry.getKey());\n      resolver.addNamespace(\"A\", values);\n\n      String expected = entry.getValue();\n      String actual = evaluator.evaluate(\"A.key\", ctx);\n      assertEquals(expected, actual);\n    }\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#runTests(Map[String,String],Evaluator).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#runTests(Map[String,String],Evaluator).mjava","sourceNew":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.<String, Object>emptyMap(), null, null);    \n    for (Map.Entry<String, String> entry : tests.entrySet()) {\n      Map<String, Object> values = new HashMap<>();\n      values.put(\"key\", entry.getKey());\n      resolver.addNamespace(\"A\", values);\n\n      String expected = entry.getValue();\n      String actual = evaluator.evaluate(\"A.key\", ctx);\n      assertEquals(expected, actual);\n    }\n    \n  }\n\n","sourceOld":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.<String, Object>emptyMap(), null, null);    \n    for (Map.Entry<String, String> entry : tests.entrySet()) {\n      Map<String, Object> values = new HashMap<String, Object>();\n      values.put(\"key\", entry.getKey());\n      resolver.addNamespace(\"A\", values);\n\n      String expected = entry.getValue();\n      String actual = evaluator.evaluate(\"A.key\", ctx);\n      assertEquals(expected, actual);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#runTests(Map[String,String],Evaluator).mjava","sourceNew":null,"sourceOld":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.<String, Object>emptyMap(), null, null);    \n    for (Map.Entry<String, String> entry : tests.entrySet()) {\n      Map<String, Object> values = new HashMap<>();\n      values.put(\"key\", entry.getKey());\n      resolver.addNamespace(\"A\", values);\n\n      String expected = entry.getValue();\n      String actual = evaluator.evaluate(\"A.key\", ctx);\n      assertEquals(expected, actual);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7c7b0ae5716b6c2044195a818e9ae58205175659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}