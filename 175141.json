{"path":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","commits":[{"id":"c4ff8864209d2e972cb4393600c26082f9a6533d","date":1239297466,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new IndexWriterConfig(TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new IndexWriterConfig(TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT),\n          IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["0a046c0c310bc77931fc8441bd920053b607dd14"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["c4ff8864209d2e972cb4393600c26082f9a6533d","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"c4ff8864209d2e972cb4393600c26082f9a6533d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"0a046c0c310bc77931fc8441bd920053b607dd14":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"c4ff8864209d2e972cb4393600c26082f9a6533d":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}