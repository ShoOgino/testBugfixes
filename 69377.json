{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#applyDeleteOrUpdate(ToLongFunction[DocumentsWriterDeleteQueue]).mjava","commits":[{"id":"1926100d9b67becc9701c54266fee3ba7878a5f0","date":1524472150,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#applyDeleteOrUpdate(ToLongFunction[DocumentsWriterDeleteQueue]).mjava","pathOld":"/dev/null","sourceNew":"  private synchronized long applyDeleteOrUpdate(ToLongFunction<DocumentsWriterDeleteQueue> function) throws IOException {\n    // TODO why is this synchronized?\n    final DocumentsWriterDeleteQueue deleteQueue = this.deleteQueue;\n    long seqNo = function.applyAsLong(deleteQueue);\n    flushControl.doOnDelete();\n    lastSeqNo = Math.max(lastSeqNo, seqNo);\n    if (applyAllDeletes(deleteQueue)) {\n      seqNo = -seqNo;\n    }\n    return seqNo;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34067df01cbbefc83d0b316037fe4e10d89ba6a3","date":1559054674,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#applyDeleteOrUpdate(ToLongFunction[DocumentsWriterDeleteQueue]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#applyDeleteOrUpdate(ToLongFunction[DocumentsWriterDeleteQueue]).mjava","sourceNew":"  private synchronized long applyDeleteOrUpdate(ToLongFunction<DocumentsWriterDeleteQueue> function) throws IOException {\n    // This method is synchronized to make sure we don't replace the deleteQueue while applying this update / delete\n    // otherwise we might loose an update / delete if this happens concurrently to a full flush.\n    final DocumentsWriterDeleteQueue deleteQueue = this.deleteQueue;\n    long seqNo = function.applyAsLong(deleteQueue);\n    flushControl.doOnDelete();\n    lastSeqNo = Math.max(lastSeqNo, seqNo);\n    if (applyAllDeletes()) {\n      seqNo = -seqNo;\n    }\n    return seqNo;\n  }\n\n","sourceOld":"  private synchronized long applyDeleteOrUpdate(ToLongFunction<DocumentsWriterDeleteQueue> function) throws IOException {\n    // TODO why is this synchronized?\n    final DocumentsWriterDeleteQueue deleteQueue = this.deleteQueue;\n    long seqNo = function.applyAsLong(deleteQueue);\n    flushControl.doOnDelete();\n    lastSeqNo = Math.max(lastSeqNo, seqNo);\n    if (applyAllDeletes(deleteQueue)) {\n      seqNo = -seqNo;\n    }\n    return seqNo;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb8bbec6921ac49e842949130f72af93c867ddab","date":1559153357,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#applyDeleteOrUpdate(ToLongFunction[DocumentsWriterDeleteQueue]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#applyDeleteOrUpdate(ToLongFunction[DocumentsWriterDeleteQueue]).mjava","sourceNew":"  private synchronized long applyDeleteOrUpdate(ToLongFunction<DocumentsWriterDeleteQueue> function) throws IOException {\n    // This method is synchronized to make sure we don't replace the deleteQueue while applying this update / delete\n    // otherwise we might lose an update / delete if this happens concurrently to a full flush.\n    final DocumentsWriterDeleteQueue deleteQueue = this.deleteQueue;\n    long seqNo = function.applyAsLong(deleteQueue);\n    flushControl.doOnDelete();\n    lastSeqNo = Math.max(lastSeqNo, seqNo);\n    if (applyAllDeletes()) {\n      seqNo = -seqNo;\n    }\n    return seqNo;\n  }\n\n","sourceOld":"  private synchronized long applyDeleteOrUpdate(ToLongFunction<DocumentsWriterDeleteQueue> function) throws IOException {\n    // This method is synchronized to make sure we don't replace the deleteQueue while applying this update / delete\n    // otherwise we might loose an update / delete if this happens concurrently to a full flush.\n    final DocumentsWriterDeleteQueue deleteQueue = this.deleteQueue;\n    long seqNo = function.applyAsLong(deleteQueue);\n    flushControl.doOnDelete();\n    lastSeqNo = Math.max(lastSeqNo, seqNo);\n    if (applyAllDeletes()) {\n      seqNo = -seqNo;\n    }\n    return seqNo;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9","date":1559371943,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#applyDeleteOrUpdate(ToLongFunction[DocumentsWriterDeleteQueue]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#applyDeleteOrUpdate(ToLongFunction[DocumentsWriterDeleteQueue]).mjava","sourceNew":"  private synchronized long applyDeleteOrUpdate(ToLongFunction<DocumentsWriterDeleteQueue> function) throws IOException {\n    // This method is synchronized to make sure we don't replace the deleteQueue while applying this update / delete\n    // otherwise we might lose an update / delete if this happens concurrently to a full flush.\n    final DocumentsWriterDeleteQueue deleteQueue = this.deleteQueue;\n    long seqNo = function.applyAsLong(deleteQueue);\n    flushControl.doOnDelete();\n    lastSeqNo = Math.max(lastSeqNo, seqNo);\n    if (applyAllDeletes()) {\n      seqNo = -seqNo;\n    }\n    return seqNo;\n  }\n\n","sourceOld":"  private synchronized long applyDeleteOrUpdate(ToLongFunction<DocumentsWriterDeleteQueue> function) throws IOException {\n    // TODO why is this synchronized?\n    final DocumentsWriterDeleteQueue deleteQueue = this.deleteQueue;\n    long seqNo = function.applyAsLong(deleteQueue);\n    flushControl.doOnDelete();\n    lastSeqNo = Math.max(lastSeqNo, seqNo);\n    if (applyAllDeletes(deleteQueue)) {\n      seqNo = -seqNo;\n    }\n    return seqNo;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#applyDeleteOrUpdate(ToLongFunction[DocumentsWriterDeleteQueue]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#applyDeleteOrUpdate(ToLongFunction[DocumentsWriterDeleteQueue]).mjava","sourceNew":"  private synchronized long applyDeleteOrUpdate(ToLongFunction<DocumentsWriterDeleteQueue> function) throws IOException {\n    // This method is synchronized to make sure we don't replace the deleteQueue while applying this update / delete\n    // otherwise we might lose an update / delete if this happens concurrently to a full flush.\n    final DocumentsWriterDeleteQueue deleteQueue = this.deleteQueue;\n    long seqNo = function.applyAsLong(deleteQueue);\n    flushControl.doOnDelete();\n    if (applyAllDeletes()) {\n      seqNo = -seqNo;\n    }\n    return seqNo;\n  }\n\n","sourceOld":"  private synchronized long applyDeleteOrUpdate(ToLongFunction<DocumentsWriterDeleteQueue> function) throws IOException {\n    // This method is synchronized to make sure we don't replace the deleteQueue while applying this update / delete\n    // otherwise we might lose an update / delete if this happens concurrently to a full flush.\n    final DocumentsWriterDeleteQueue deleteQueue = this.deleteQueue;\n    long seqNo = function.applyAsLong(deleteQueue);\n    flushControl.doOnDelete();\n    lastSeqNo = Math.max(lastSeqNo, seqNo);\n    if (applyAllDeletes()) {\n      seqNo = -seqNo;\n    }\n    return seqNo;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"264935965977b4a9e2f3920420647072c9c49176":["34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9"],"bb8bbec6921ac49e842949130f72af93c867ddab":["34067df01cbbefc83d0b316037fe4e10d89ba6a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9":["1926100d9b67becc9701c54266fee3ba7878a5f0","bb8bbec6921ac49e842949130f72af93c867ddab"],"1926100d9b67becc9701c54266fee3ba7878a5f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"34067df01cbbefc83d0b316037fe4e10d89ba6a3":["1926100d9b67becc9701c54266fee3ba7878a5f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["264935965977b4a9e2f3920420647072c9c49176"]},"commit2Childs":{"264935965977b4a9e2f3920420647072c9c49176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb8bbec6921ac49e842949130f72af93c867ddab":["34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9"],"34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9":["264935965977b4a9e2f3920420647072c9c49176"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1926100d9b67becc9701c54266fee3ba7878a5f0"],"34067df01cbbefc83d0b316037fe4e10d89ba6a3":["bb8bbec6921ac49e842949130f72af93c867ddab"],"1926100d9b67becc9701c54266fee3ba7878a5f0":["34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9","34067df01cbbefc83d0b316037fe4e10d89ba6a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}