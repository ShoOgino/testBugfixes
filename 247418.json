{"path":"solr/core/src/java/org/apache/solr/request/json/JSONUtil#advanceToMapKey(JSONParser,String,boolean).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/json/JSONUtil#advanceToMapKey(JSONParser,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public static boolean advanceToMapKey(JSONParser parser, String key, boolean deepSearch) throws IOException {\n    for (;;) {\n      int event = parser.nextEvent();\n      switch (event) {\n        case JSONParser.STRING:\n          if (key != null && parser.wasKey()) {\n            String val = parser.getString();\n            if (key.equals(val)) {\n              return true;\n            }\n          }\n          break;\n        case JSONParser.OBJECT_END:\n          return false;\n        case JSONParser.OBJECT_START:\n          if (deepSearch) {\n            boolean found = advanceToMapKey(parser, key, true);\n            if (found) {\n              return true;\n            }\n          } else {\n            advanceToMapKey(parser, null, false);\n          }\n          break;\n        case JSONParser.ARRAY_START:\n          skipArray(parser, key, deepSearch);\n          break;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/json/JSONUtil#advanceToMapKey(JSONParser,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public static boolean advanceToMapKey(JSONParser parser, String key, boolean deepSearch) throws IOException {\n    for (;;) {\n      int event = parser.nextEvent();\n      switch (event) {\n        case JSONParser.STRING:\n          if (key != null && parser.wasKey()) {\n            String val = parser.getString();\n            if (key.equals(val)) {\n              return true;\n            }\n          }\n          break;\n        case JSONParser.OBJECT_END:\n          return false;\n        case JSONParser.OBJECT_START:\n          if (deepSearch) {\n            boolean found = advanceToMapKey(parser, key, true);\n            if (found) {\n              return true;\n            }\n          } else {\n            advanceToMapKey(parser, null, false);\n          }\n          break;\n        case JSONParser.ARRAY_START:\n          skipArray(parser, key, deepSearch);\n          break;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}