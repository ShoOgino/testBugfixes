{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.FailOnlyInCloseDocStore#eval(MockDirectoryWrapper).mjava","commits":[{"id":"84b590669deb3d3a471cec6cb13b104b2ee94418","date":1288889547,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.FailOnlyInCloseDocStore#eval(MockDirectoryWrapper).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.FailOnlyInCloseDocStore#eval(MockDirectoryWrapper).mjava","sourceNew":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        for (int i = 0; i < trace.length; i++) {\n          if (\"closeDocStore\".equals(trace[i].getMethodName())) {\n            if (onlyOnce)\n              doFail = false;\n            throw new IOException(\"now failing on purpose\");\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        for (int i = 0; i < trace.length; i++) {\n          if (\"closeDocStore\".equals(trace[i].getMethodName())) {\n            if (onlyOnce)\n              doFail = false;\n            throw new IOException(\"now failing on purpose\");\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.FailOnlyInCloseDocStore#eval(MockDirectoryWrapper).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.FailOnlyInCloseDocStore#eval(MockDirectoryWrapper).mjava","sourceNew":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        for (int i = 0; i < trace.length; i++) {\n          if (\"closeDocStore\".equals(trace[i].getMethodName())) {\n            if (onlyOnce)\n              doFail = false;\n            throw new IOException(\"now failing on purpose\");\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        for (int i = 0; i < trace.length; i++) {\n          if (\"closeDocStore\".equals(trace[i].getMethodName())) {\n            if (onlyOnce)\n              doFail = false;\n            throw new IOException(\"now failing on purpose\");\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.FailOnlyInCloseDocStore#eval(MockDirectoryWrapper).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        for (int i = 0; i < trace.length; i++) {\n          if (\"closeDocStore\".equals(trace[i].getMethodName())) {\n            if (onlyOnce)\n              doFail = false;\n            throw new IOException(\"now failing on purpose\");\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.FailOnlyInCloseDocStore#eval(MockDirectoryWrapper).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        for (int i = 0; i < trace.length; i++) {\n          if (\"closeDocStore\".equals(trace[i].getMethodName())) {\n            if (onlyOnce)\n              doFail = false;\n            throw new IOException(\"now failing on purpose\");\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84b590669deb3d3a471cec6cb13b104b2ee94418":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","84b590669deb3d3a471cec6cb13b104b2ee94418"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["85a883878c0af761245ab048babc63d099f835f3","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["84b590669deb3d3a471cec6cb13b104b2ee94418"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"]},"commit2Childs":{"84b590669deb3d3a471cec6cb13b104b2ee94418":["85a883878c0af761245ab048babc63d099f835f3","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["84b590669deb3d3a471cec6cb13b104b2ee94418","85a883878c0af761245ab048babc63d099f835f3"],"85a883878c0af761245ab048babc63d099f835f3":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}