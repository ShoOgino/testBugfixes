{"path":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToFieldsProducer(LeafReader).mjava","commits":[{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToFieldsProducer(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeState#readerToFieldsProducer(LeafReader).mjava","sourceNew":"  private static FieldsProducer readerToFieldsProducer(final LeafReader reader) throws IOException {\n    final Fields fields = reader.fields();\n    return new FieldsProducer() {\n      @Override\n      public Iterator<String> iterator() {\n        return fields.iterator();\n      }\n\n      @Override\n      public Terms terms(String field) throws IOException {\n        return fields.terms(field);\n      }\n\n      @Override\n      public int size() {\n        return fields.size();\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  private FieldsProducer readerToFieldsProducer(final LeafReader reader) throws IOException {\n    final Fields fields = reader.fields();\n    return new FieldsProducer() {\n      @Override\n      public Iterator<String> iterator() {\n        return fields.iterator();\n      }\n\n      @Override\n      public Terms terms(String field) throws IOException {\n        return fields.terms(field);\n      }\n\n      @Override\n      public int size() {\n        return fields.size();\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front in SegmentMerger\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b6f36bb733c575dd04fdfa785127ebf82b0033f","date":1497502741,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToFieldsProducer(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToFieldsProducer(LeafReader).mjava","sourceNew":"  private static FieldsProducer readerToFieldsProducer(final LeafReader reader) throws IOException {\n    ArrayList<String> indexedFields = new ArrayList<>();\n    for (FieldInfo fieldInfo : reader.getFieldInfos()) {\n      if (fieldInfo.getIndexOptions() != IndexOptions.NONE) {\n        indexedFields.add(fieldInfo.name);\n      }\n    }\n    Collections.sort(indexedFields);\n    return new FieldsProducer() {\n      @Override\n      public Iterator<String> iterator() {\n        return indexedFields.iterator();\n      }\n\n      @Override\n      public Terms terms(String field) throws IOException {\n        return reader.terms(field);\n      }\n\n      @Override\n      public int size() {\n        return indexedFields.size();\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  private static FieldsProducer readerToFieldsProducer(final LeafReader reader) throws IOException {\n    final Fields fields = reader.fields();\n    return new FieldsProducer() {\n      @Override\n      public Iterator<String> iterator() {\n        return fields.iterator();\n      }\n\n      @Override\n      public Terms terms(String field) throws IOException {\n        return fields.terms(field);\n      }\n\n      @Override\n      public int size() {\n        return fields.size();\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToFieldsProducer(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToFieldsProducer(LeafReader).mjava","sourceNew":"  private static FieldsProducer readerToFieldsProducer(final LeafReader reader) throws IOException {\n    ArrayList<String> indexedFields = new ArrayList<>();\n    for (FieldInfo fieldInfo : reader.getFieldInfos()) {\n      if (fieldInfo.getIndexOptions() != IndexOptions.NONE) {\n        indexedFields.add(fieldInfo.name);\n      }\n    }\n    Collections.sort(indexedFields);\n    return new FieldsProducer() {\n      @Override\n      public Iterator<String> iterator() {\n        return indexedFields.iterator();\n      }\n\n      @Override\n      public Terms terms(String field) throws IOException {\n        return reader.terms(field);\n      }\n\n      @Override\n      public int size() {\n        return indexedFields.size();\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  private static FieldsProducer readerToFieldsProducer(final LeafReader reader) throws IOException {\n    final Fields fields = reader.fields();\n    return new FieldsProducer() {\n      @Override\n      public Iterator<String> iterator() {\n        return fields.iterator();\n      }\n\n      @Override\n      public Terms terms(String field) throws IOException {\n        return fields.terms(field);\n      }\n\n      @Override\n      public int size() {\n        return fields.size();\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToFieldsProducer(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToFieldsProducer(LeafReader).mjava","sourceNew":"  private static FieldsProducer readerToFieldsProducer(final LeafReader reader) throws IOException {\n    ArrayList<String> indexedFields = new ArrayList<>();\n    for (FieldInfo fieldInfo : reader.getFieldInfos()) {\n      if (fieldInfo.getIndexOptions() != IndexOptions.NONE) {\n        indexedFields.add(fieldInfo.name);\n      }\n    }\n    Collections.sort(indexedFields);\n    return new FieldsProducer() {\n      @Override\n      public Iterator<String> iterator() {\n        return indexedFields.iterator();\n      }\n\n      @Override\n      public Terms terms(String field) throws IOException {\n        return reader.terms(field);\n      }\n\n      @Override\n      public int size() {\n        return indexedFields.size();\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  private static FieldsProducer readerToFieldsProducer(final LeafReader reader) throws IOException {\n    final Fields fields = reader.fields();\n    return new FieldsProducer() {\n      @Override\n      public Iterator<String> iterator() {\n        return fields.iterator();\n      }\n\n      @Override\n      public Terms terms(String field) throws IOException {\n        return fields.terms(field);\n      }\n\n      @Override\n      public int size() {\n        return fields.size();\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b6f36bb733c575dd04fdfa785127ebf82b0033f":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["505bff044e47a553f461b6f4484d1d08faf4ac85","2b6f36bb733c575dd04fdfa785127ebf82b0033f"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["505bff044e47a553f461b6f4484d1d08faf4ac85","2b6f36bb733c575dd04fdfa785127ebf82b0033f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"2b6f36bb733c575dd04fdfa785127ebf82b0033f":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["2b6f36bb733c575dd04fdfa785127ebf82b0033f","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}