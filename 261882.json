{"path":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#attemptToDetermineTypeFromFirstCharacter().mjava","commits":[{"id":"be58baf5760d4f17a711eb110f79091ab713ae36","date":1539906801,"type":0,"author":"Andrew Lundgren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#attemptToDetermineTypeFromFirstCharacter().mjava","pathOld":"/dev/null","sourceNew":"  private String attemptToDetermineTypeFromFirstCharacter() {\n    String type = null;\n    try (InputStream stream = getStream()) {\n      // Last ditch effort to determine content, if the first non-white space\n      // is a '<' or '{', assume xml or json.\n      int data = stream.read();\n      while (( data != -1 ) && ( ( (char)data ) == ' ' )) {\n        data = stream.read();\n      }\n      if ((char)data == '<') {\n        type = ContentType.APPLICATION_XML.getMimeType();\n      } else if ((char)data == '{') {\n        type = ContentType.APPLICATION_JSON.getMimeType();\n      }\n    } catch (Exception ex) {\n      // This code just eats, the exception and leaves\n      // the contentType untouched.\n    }\n    return type;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be58baf5760d4f17a711eb110f79091ab713ae36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["be58baf5760d4f17a711eb110f79091ab713ae36"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be58baf5760d4f17a711eb110f79091ab713ae36"],"be58baf5760d4f17a711eb110f79091ab713ae36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}