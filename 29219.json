{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n    Type valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"1\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random text blob\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"2\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random textual data\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"3\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"4\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"5\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"random blob\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"6\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newField(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"6\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newField(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"7\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n    Type valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"1\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random text blob\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"2\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random textual data\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"3\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"4\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"5\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"random blob\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"6\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newField(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"6\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newField(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"7\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    Type valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"1\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random text blob\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"2\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random textual data\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"3\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"4\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"5\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"random blob\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"6\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newField(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"6\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newField(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"7\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n    Type valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"1\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random text blob\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"2\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random textual data\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"3\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"4\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"5\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"random blob\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"6\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newField(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"6\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newField(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"7\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    Type valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"4\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"5\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"7\", Field.Store.YES));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    Type valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"1\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random text blob\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"2\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random textual data\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"3\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"4\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"some more random text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"5\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newField(\"content\", \"random blob\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"6\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newField(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"6\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newField(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(newField(\"id\", \"7\", StringField.TYPE_STORED));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"4\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"5\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"7\", Field.Store.YES));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    Type valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"4\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"5\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"7\", Field.Store.YES));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"4\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"5\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"7\", Field.Store.YES));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    Type valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"4\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"5\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"7\", Field.Store.YES));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97d4692d0c601ff773f0a2231967312428a904e4","date":1366026608,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"4\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"5\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"7\", Field.Store.YES));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"4\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"5\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"7\", Field.Store.YES));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3, canUseIDV, valueType);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","date":1366056945,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"4\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"5\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"7\", Field.Store.YES));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"4\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"5\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"7\", Field.Store.YES));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = new IndexSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849bbd2ada39a65c19f10b08e5f906d99be4a7e7","date":1369394437,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"1\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"2\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"2\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"3\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"3\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"4\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"5\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"5\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"6\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"6\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"7\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"7\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"4\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"5\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV, valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"6\", Field.Store.YES));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(newStringField(\"id\", \"7\", Field.Store.YES));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n    if (SlowCompositeReaderWrapper.class.isAssignableFrom(reader.getClass())) {\n      canUseIDV = false;\n    }\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59a0020b413d44dd79d85d7a66ed5004265fb453","date":1371758877,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 1, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 2, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"2\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 3, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"3\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 4, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 5, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"5\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 7, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"7\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"1\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"2\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"2\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"3\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"3\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"4\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"5\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"5\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"6\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"6\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"7\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"7\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 1, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 2, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"2\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 3, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"3\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 4, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 5, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"5\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 7, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"7\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"1\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"2\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"2\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"3\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"3\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"4\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"5\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"5\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"6\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"6\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(newStringField(\"id_1\", \"7\", Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"7\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 1, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 2, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"2\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 3, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"3\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 4, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 5, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"5\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 7, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"7\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 1, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 2, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"2\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 3, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"3\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 4, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 5, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"5\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 7, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"7\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7096c9de51ae4c8f695b981c157316e1b4687c00","date":1399819940,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 1, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 2, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"2\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 3, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"3\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 4, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 5, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"5\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 7, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"7\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee2e49d7d238ef272447503afe1249fa73b41646","date":1399823449,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = DocValuesType.SORTED;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = DocValuesType.SORTED;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 1, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 2, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"2\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 3, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"3\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 4, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 5, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"5\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 7, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"7\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = DocValuesType.SORTED;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = vts[random().nextInt(vts.length)];\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 1, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 2, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"2\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 3, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"3\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 4, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 5, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"5\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 6, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"6\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new IntField(\"id_1\", 7, Field.Store.NO));\n    doc.add(newStringField(\"id_2\", \"7\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = DocValuesType.SORTED;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = DocValuesType.SORTED;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = DocValuesType.SORTED;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = DocValuesType.SORTED;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.shutdown();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20e94e61fe5291647346b70437617e6b6c370408","date":1483783127,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = DocValuesType.SORTED;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = DocValuesType.SORTED;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = DocValuesType.SORTED;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    final String groupField = \"author\";\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    DocValuesType valueType = DocValuesType.SORTED;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 1));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 2));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"2\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", valueType);\n    doc.add(newTextField(\"content\", \"some more random textual data\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 3));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"3\")));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", valueType);\n    doc.add(newTextField(\"content\", \"some random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 4));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"some more random text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 5));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"5\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", valueType);\n    doc.add(newTextField(\"content\", \"random blob\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 6));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"6\")));\n    w.addDocument(doc);\n\n    // 7 -- no author field\n    doc = new Document();\n    doc.add(newTextField(\"content\", \"random word stuck in alot of other text\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"id_1\", 7));\n    doc.add(new SortedDocValuesField(\"id_2\", new BytesRef(\"7\")));\n    w.addDocument(doc);\n\n    IndexReader reader = w.getReader();\n    IndexSearcher indexSearcher = newSearcher(reader);\n\n    w.close();\n    int maxDoc = reader.maxDoc();\n\n    Sort sortWithinGroup = new Sort(new SortField(\"id_1\", SortField.Type.INT, true));\n    AbstractAllGroupHeadsCollector<?> allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 4}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{1, 5}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    // STRING sort type triggers different implementation\n    Sort sortWithinGroup2 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, true));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup2);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    assertTrue(arrayContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{2, 3, 5, 7}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    Sort sortWithinGroup3 = new Sort(new SortField(\"id_2\", SortField.Type.STRING, false));\n    allGroupHeadsCollector = createRandomCollector(groupField, sortWithinGroup3);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupHeadsCollector);\n    // 7 b/c higher doc id wins, even if order of field is in not in reverse.\n    assertTrue(arrayContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads()));\n    assertTrue(openBitSetContains(new int[]{0, 3, 4, 6}, allGroupHeadsCollector.retrieveGroupHeads(maxDoc), maxDoc));\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"20e94e61fe5291647346b70437617e6b6c370408":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"7096c9de51ae4c8f695b981c157316e1b4687c00":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["849bbd2ada39a65c19f10b08e5f906d99be4a7e7","59a0020b413d44dd79d85d7a66ed5004265fb453"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["d0ef034a4f10871667ae75181537775ddcf8ade4","20e94e61fe5291647346b70437617e6b6c370408"],"849bbd2ada39a65c19f10b08e5f906d99be4a7e7":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["04f07771a2a7dd3a395700665ed839c3dae2def2","0837ab0472feecb3a54260729d845f839e1cbd72"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","ee2e49d7d238ef272447503afe1249fa73b41646"],"97d4692d0c601ff773f0a2231967312428a904e4":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee2e49d7d238ef272447503afe1249fa73b41646":["7096c9de51ae4c8f695b981c157316e1b4687c00"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"59a0020b413d44dd79d85d7a66ed5004265fb453":["849bbd2ada39a65c19f10b08e5f906d99be4a7e7"],"0837ab0472feecb3a54260729d845f839e1cbd72":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["59a0020b413d44dd79d85d7a66ed5004265fb453"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["97d4692d0c601ff773f0a2231967312428a904e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20e94e61fe5291647346b70437617e6b6c370408"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"20e94e61fe5291647346b70437617e6b6c370408":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7096c9de51ae4c8f695b981c157316e1b4687c00":["ee2e49d7d238ef272447503afe1249fa73b41646"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"849bbd2ada39a65c19f10b08e5f906d99be4a7e7":["37a0f60745e53927c4c876cfe5b5a58170f0646c","59a0020b413d44dd79d85d7a66ed5004265fb453"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"04f07771a2a7dd3a395700665ed839c3dae2def2":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["97d4692d0c601ff773f0a2231967312428a904e4"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ee2e49d7d238ef272447503afe1249fa73b41646":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"97d4692d0c601ff773f0a2231967312428a904e4":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["20e94e61fe5291647346b70437617e6b6c370408","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"59a0020b413d44dd79d85d7a66ed5004265fb453":["37a0f60745e53927c4c876cfe5b5a58170f0646c","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["7096c9de51ae4c8f695b981c157316e1b4687c00","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["849bbd2ada39a65c19f10b08e5f906d99be4a7e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}