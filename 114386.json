{"path":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","commits":[{"id":"86a0a50d2d14aaee1e635bbec914468551f7f9a2","date":1482234306,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(docWriter.directory);\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(tmpDirectory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(docWriter.directory);\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(tmpDirectory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4","date":1599581893,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.ramBytesUsed()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(docWriter.directory);\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(tmpDirectory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(docWriter.directory);\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(tmpDirectory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"49f1924bd448393fbdfef8b5ebed799f938169d3","date":1600069616,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(directory);\n      writer = codec.termVectorsFormat().vectorsWriter(tmpDirectory, info, context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.ramBytesUsed()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(docWriter.directory);\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(tmpDirectory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0dcf8f79417865e5028d753e669fae06457e8369","date":1600073240,"type":3,"author":"noblepaul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(directory);\n      writer = codec.termVectorsFormat().vectorsWriter(tmpDirectory, info, context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.ramBytesUsed()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(docWriter.directory);\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(tmpDirectory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f56073cc34a5845a5b6b0978a769a0239068411","date":1600254322,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(directory);\n      writer = TEMP_TERM_VECTORS_FORMAT.vectorsWriter(tmpDirectory, info, context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(directory);\n      writer = codec.termVectorsFormat().vectorsWriter(tmpDirectory, info, context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65352f844eb9e9a677ec4eb2abced4404f08181d","date":1600297608,"type":3,"author":"noblepaul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingTermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(directory);\n      writer = TEMP_TERM_VECTORS_FORMAT.vectorsWriter(tmpDirectory, info, context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      tmpDirectory = new TrackingTmpOutputDirectoryWrapper(directory);\n      writer = codec.termVectorsFormat().vectorsWriter(tmpDirectory, info, context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"49f1924bd448393fbdfef8b5ebed799f938169d3":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"0dcf8f79417865e5028d753e669fae06457e8369":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4","49f1924bd448393fbdfef8b5ebed799f938169d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"65352f844eb9e9a677ec4eb2abced4404f08181d":["0dcf8f79417865e5028d753e669fae06457e8369","9f56073cc34a5845a5b6b0978a769a0239068411"],"9f56073cc34a5845a5b6b0978a769a0239068411":["49f1924bd448393fbdfef8b5ebed799f938169d3"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65352f844eb9e9a677ec4eb2abced4404f08181d"]},"commit2Childs":{"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4":["49f1924bd448393fbdfef8b5ebed799f938169d3","0dcf8f79417865e5028d753e669fae06457e8369"],"49f1924bd448393fbdfef8b5ebed799f938169d3":["0dcf8f79417865e5028d753e669fae06457e8369","9f56073cc34a5845a5b6b0978a769a0239068411"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"0dcf8f79417865e5028d753e669fae06457e8369":["65352f844eb9e9a677ec4eb2abced4404f08181d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"65352f844eb9e9a677ec4eb2abced4404f08181d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9f56073cc34a5845a5b6b0978a769a0239068411":["65352f844eb9e9a677ec4eb2abced4404f08181d"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}