{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j]));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j]));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j], Field.Store.NO));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j]));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j], Field.Store.NO));\n        writer.addDocument(d);\n      }\n      writer.shutdown();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j], Field.Store.NO));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j], Field.Store.NO));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j], Field.Store.NO));\n        writer.addDocument(d);\n      }\n      writer.shutdown();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new ByteBuffersDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j], Field.Store.NO));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j], Field.Store.NO));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d77dafd89756a5161d244985903e3487ca109182":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["d77dafd89756a5161d244985903e3487ca109182"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}