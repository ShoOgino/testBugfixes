{"path":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedPoolingHttpClientConnectionManager#initializeMetrics(SolrMetricsContext,String).mjava","commits":[{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedPoolingHttpClientConnectionManager#initializeMetrics(SolrMetricsContext,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    this.solrMetricsContext = parentContext.getChildContext(this);\n    parentContext.gauge(null, () -> getTotalStats().getAvailable(),\n        true, SolrMetricManager.mkName(\"availableConnections\", scope));\n    // this acquires a lock on the connection pool; remove if contention sucks\n    parentContext.gauge(null, () -> getTotalStats().getLeased(),\n        true, SolrMetricManager.mkName(\"leasedConnections\", scope));\n    parentContext.gauge(null, () -> getTotalStats().getMax(),\n        true, SolrMetricManager.mkName(\"maxConnections\", scope));\n    parentContext.gauge(null, () -> getTotalStats().getPending(),\n        true, SolrMetricManager.mkName(\"pendingConnections\", scope));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c2af5a711bd6e2d33e0221ced0f47ac596ed275","date":1572877903,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedPoolingHttpClientConnectionManager#initializeMetrics(SolrMetricsContext,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/InstrumentedPoolingHttpClientConnectionManager#initializeMetrics(SolrMetricsContext,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    this.solrMetricsContext = parentContext.getChildContext(this);\n    solrMetricsContext.gauge(() -> getTotalStats().getAvailable(),\n        true, SolrMetricManager.mkName(\"availableConnections\", scope));\n    // this acquires a lock on the connection pool; remove if contention sucks\n    solrMetricsContext.gauge(() -> getTotalStats().getLeased(),\n        true, SolrMetricManager.mkName(\"leasedConnections\", scope));\n    solrMetricsContext.gauge(() -> getTotalStats().getMax(),\n        true, SolrMetricManager.mkName(\"maxConnections\", scope));\n    solrMetricsContext.gauge(() -> getTotalStats().getPending(),\n        true, SolrMetricManager.mkName(\"pendingConnections\", scope));\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    this.solrMetricsContext = parentContext.getChildContext(this);\n    parentContext.gauge(null, () -> getTotalStats().getAvailable(),\n        true, SolrMetricManager.mkName(\"availableConnections\", scope));\n    // this acquires a lock on the connection pool; remove if contention sucks\n    parentContext.gauge(null, () -> getTotalStats().getLeased(),\n        true, SolrMetricManager.mkName(\"leasedConnections\", scope));\n    parentContext.gauge(null, () -> getTotalStats().getMax(),\n        true, SolrMetricManager.mkName(\"maxConnections\", scope));\n    parentContext.gauge(null, () -> getTotalStats().getPending(),\n        true, SolrMetricManager.mkName(\"pendingConnections\", scope));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"]},"commit2Childs":{"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}