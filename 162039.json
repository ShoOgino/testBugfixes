{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,TSTNode).mjava","commits":[{"id":"a645276cbaf5dc96a42fd473b9019bde352996c8","date":1391806699,"type":1,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,TSTNode).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInputStream,TSTNode).mjava","sourceNew":"  private void readRecursively(DataInput in, TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","sourceOld":"  private void readRecursively(DataInputStream in, TSTNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be3a0d79d783e26d4f9a3159d7926fc52ba69521","date":1490708104,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,TSTNode).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,TSTNode).mjava","sourceNew":"  private void readRecursively(DataInput in, TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","sourceOld":"  private void readRecursively(DataInput in, TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd9c84df269399d02b76bbeb73ec3d74893ff43c","date":1490873945,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,TSTNode).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,TSTNode).mjava","sourceNew":"  private void readRecursively(DataInput in, TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","sourceOld":"  private void readRecursively(DataInput in, TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,TSTNode).mjava","sourceNew":null,"sourceOld":"  private void readRecursively(DataInput in, TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,TSTNode).mjava","pathOld":"/dev/null","sourceNew":"  private void readRecursively(DataInput in, TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,TSTNode).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,TSTNode).mjava","sourceNew":"  private void readRecursively(DataInput in, TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = in.readLong();\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","sourceOld":"  private void readRecursively(DataInput in, TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd9c84df269399d02b76bbeb73ec3d74893ff43c":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["be3a0d79d783e26d4f9a3159d7926fc52ba69521"],"be3a0d79d783e26d4f9a3159d7926fc52ba69521":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"dd9c84df269399d02b76bbeb73ec3d74893ff43c":[],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"be3a0d79d783e26d4f9a3159d7926fc52ba69521":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["dd9c84df269399d02b76bbeb73ec3d74893ff43c","be3a0d79d783e26d4f9a3159d7926fc52ba69521"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dd9c84df269399d02b76bbeb73ec3d74893ff43c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}