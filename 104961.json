{"path":"lucene/sandbox/src/java/org/apache/lucene/document/InetAddressRangeField#newWithinQuery(String,InetAddress,InetAddress).mjava","commits":[{"id":"590098436706368b9121b3e55af3dec662f60a32","date":1489279903,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/InetAddressRangeField#newWithinQuery(String,InetAddress,InetAddress).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a query for matching indexed ip ranges that are {@code WITHIN} the defined range.\n   * @param field field name. must not be null.\n   * @param min range min value; provided as an {@code InetAddress}\n   * @param max range max value; provided as an {@code InetAddress}\n   * @return query for matching intersecting ranges (overlap, within, crosses, or contains)\n   * @throws IllegalArgumentException if {@code field} is null, {@code min} or {@code max} is invalid\n   */\n  public static Query newWithinQuery(String field, final InetAddress min, final InetAddress max) {\n    return newRelationQuery(field, min, max, QueryType.WITHIN);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/document/InetAddressRange#newWithinQuery(String,InetAddress,InetAddress).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/InetAddressRangeField#newWithinQuery(String,InetAddress,InetAddress).mjava","sourceNew":"  /**\n   * Create a query for matching indexed ip ranges that are {@code WITHIN} the defined range.\n   * @param field field name. must not be null.\n   * @param min range min value; provided as an {@code InetAddress}\n   * @param max range max value; provided as an {@code InetAddress}\n   * @return query for matching intersecting ranges (overlap, within, crosses, or contains)\n   * @throws IllegalArgumentException if {@code field} is null, {@code min} or {@code max} is invalid\n   */\n  public static Query newWithinQuery(String field, final InetAddress min, final InetAddress max) {\n    return newRelationQuery(field, min, max, QueryType.WITHIN);\n  }\n\n","sourceOld":"  /**\n   * Create a query for matching indexed ip ranges that are {@code WITHIN} the defined range.\n   * @param field field name. must not be null.\n   * @param min range min value; provided as an {@code InetAddress}\n   * @param max range max value; provided as an {@code InetAddress}\n   * @return query for matching intersecting ranges (overlap, within, crosses, or contains)\n   * @throws IllegalArgumentException if {@code field} is null, {@code min} or {@code max} is invalid\n   */\n  public static Query newWithinQuery(String field, final InetAddress min, final InetAddress max) {\n    return newRelationQuery(field, min, max, QueryType.WITHIN);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["590098436706368b9121b3e55af3dec662f60a32"],"590098436706368b9121b3e55af3dec662f60a32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a52b01a73cacbd2d360240e72d64c0ba353618f"]},"commit2Childs":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"590098436706368b9121b3e55af3dec662f60a32":["4a52b01a73cacbd2d360240e72d64c0ba353618f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["590098436706368b9121b3e55af3dec662f60a32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}