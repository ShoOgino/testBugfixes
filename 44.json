{"path":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","pathOld":"solr/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.getValues().remove(\"responseHeader\");\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n  }\n\n","sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.getValues().remove(\"responseHeader\");\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","pathOld":"solr/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.getValues().remove(\"responseHeader\");\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n  }\n\n","sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.getValues().remove(\"responseHeader\");\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","pathOld":"solr/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.getValues().remove(\"responseHeader\");\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n  }\n\n","sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.getValues().remove(\"responseHeader\");\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d5cfbe2d8c7d977ee1de6753167f6b7942a6818","date":1333504648,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.getValues().remove(\"responseHeader\");\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    if (doIndent) writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.getValues().remove(\"responseHeader\");\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9926a3b6bdadc8e8a8c97721ce4d60dd3431634b","date":1338838491,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.getValues().remove(\"responseHeader\");\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.getValues().remove(\"responseHeader\");\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    if (doIndent) writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecd75942508378ccc92c3a26f71db6cba9f25784","date":1450708761,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.removeResponseHeader();\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.getValues().remove(\"responseHeader\");\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ed124d21605b0e41f648c25f80f60ba1828e78a","date":1477056513,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    if(req.getParams().getBool(CommonParams.OMIT_HEADER, false)) rsp.removeResponseHeader();\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.removeResponseHeader();\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    if(req.getParams().getBool(CommonParams.OMIT_HEADER, false)) rsp.removeResponseHeader();\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if(omitHeader != null && omitHeader) rsp.removeResponseHeader();\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a6fbf1484b3c2b38b75d59998de5fe4330b6b40","date":1478163495,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    if(req.getParams().getBool(CommonParams.OMIT_HEADER, false)) rsp.removeResponseHeader();\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    if(req.getParams().getBool(CommonParams.OMIT_HEADER, false)) rsp.removeResponseHeader();\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"119f84a673d2ea32c0ec18c36987696dd31aa174","date":1528551316,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":null,"sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":null,"sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeResponse().mjava","sourceNew":null,"sourceOld":"  public void writeResponse() throws IOException {\n    if(wrapperFunction!=null) {\n        writer.write(wrapperFunction + \"(\");\n    }\n    writeNamedList(null, rsp.getValues());\n    if(wrapperFunction!=null) {\n        writer.write(')');\n    }\n    writer.write('\\n');  // ending with a newline looks much better from the command line\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","3a6fbf1484b3c2b38b75d59998de5fe4330b6b40"],"4d5cfbe2d8c7d977ee1de6753167f6b7942a6818":["c26f00b574427b55127e869b935845554afde1fa"],"3a6fbf1484b3c2b38b75d59998de5fe4330b6b40":["8ed124d21605b0e41f648c25f80f60ba1828e78a"],"8ed124d21605b0e41f648c25f80f60ba1828e78a":["ecd75942508378ccc92c3a26f71db6cba9f25784"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["3a6fbf1484b3c2b38b75d59998de5fe4330b6b40","119f84a673d2ea32c0ec18c36987696dd31aa174"],"119f84a673d2ea32c0ec18c36987696dd31aa174":["3a6fbf1484b3c2b38b75d59998de5fe4330b6b40"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["ecd75942508378ccc92c3a26f71db6cba9f25784","8ed124d21605b0e41f648c25f80f60ba1828e78a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ecd75942508378ccc92c3a26f71db6cba9f25784":["9926a3b6bdadc8e8a8c97721ce4d60dd3431634b"],"9926a3b6bdadc8e8a8c97721ce4d60dd3431634b":["4d5cfbe2d8c7d977ee1de6753167f6b7942a6818"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["119f84a673d2ea32c0ec18c36987696dd31aa174"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["3a6fbf1484b3c2b38b75d59998de5fe4330b6b40","119f84a673d2ea32c0ec18c36987696dd31aa174"]},"commit2Childs":{"c26f00b574427b55127e869b935845554afde1fa":["4d5cfbe2d8c7d977ee1de6753167f6b7942a6818"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"4d5cfbe2d8c7d977ee1de6753167f6b7942a6818":["9926a3b6bdadc8e8a8c97721ce4d60dd3431634b"],"3a6fbf1484b3c2b38b75d59998de5fe4330b6b40":["9720b151fde2073f4e401450f4574e5f31c2d0ff","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","119f84a673d2ea32c0ec18c36987696dd31aa174","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"8ed124d21605b0e41f648c25f80f60ba1828e78a":["3a6fbf1484b3c2b38b75d59998de5fe4330b6b40","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"119f84a673d2ea32c0ec18c36987696dd31aa174":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["9720b151fde2073f4e401450f4574e5f31c2d0ff"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ecd75942508378ccc92c3a26f71db6cba9f25784":["8ed124d21605b0e41f648c25f80f60ba1828e78a","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"9926a3b6bdadc8e8a8c97721ce4d60dd3431634b":["ecd75942508378ccc92c3a26f71db6cba9f25784"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["9720b151fde2073f4e401450f4574e5f31c2d0ff","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}