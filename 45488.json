{"path":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#getDVFields(IndexReader).mjava","commits":[{"id":"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06","date":1326148180,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#getDVFields(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<String>();\n    for(FieldInfo fi : ReaderUtil.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868186558eb3a854ce7e720a52bb445795d54910","date":1327853682,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#getDVFields(IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#getDVFields(IndexReader).mjava","sourceNew":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<String>();\n    for(FieldInfo fi : MultiFields.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<String>();\n    for(FieldInfo fi : ReaderUtil.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#getDVFields(IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#getDVFields(IndexReader).mjava","sourceNew":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<String>();\n    for(FieldInfo fi : MultiFields.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<String>();\n    for(FieldInfo fi : ReaderUtil.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#getDVFields(IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#getDVFields(IndexReader).mjava","sourceNew":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<String>();\n    for(FieldInfo fi : MultiFields.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<String>();\n    for(FieldInfo fi : MultiFields.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06","868186558eb3a854ce7e720a52bb445795d54910"],"868186558eb3a854ce7e720a52bb445795d54910":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["5cab9a86bd67202d20b6adc463008c8e982b070a","868186558eb3a854ce7e720a52bb445795d54910"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"868186558eb3a854ce7e720a52bb445795d54910":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}