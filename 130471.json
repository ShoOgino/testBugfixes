{"path":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","commits":[{"id":"605b061fadf71aa6458c0005eaae83a98350c403","date":1307117658,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      final IndexInput input = (IndexInput) datIn.clone();\n      boolean success = false;\n      try {\n        final Source source = packed ? new PackedIntsSource(input)\n            : new FixedIntsSource(input);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      final IndexInput input = (IndexInput) datIn.clone();\n      boolean success = false;\n      try {\n        final Source source = packed ? new PackedIntsSource(input)\n            : new FixedIntsSource(input);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      final IndexInput input = (IndexInput) datIn.clone();\n      boolean success = false;\n      try {\n        final Source source = packed ? new PackedIntsSource(input)\n            : new FixedIntsSource(input);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      final IndexInput input = (IndexInput) datIn.clone();\n      boolean success = false;\n      try {\n        final Source source = packed ? new PackedIntsSource(input)\n            : new FixedIntsSource(input);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93c59ad5034eecd863f267bd75e1df7b8a51e427","date":1309162882,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        input.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n        source  = loadFixedSource(type, input);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      final IndexInput input = (IndexInput) datIn.clone();\n      boolean success = false;\n      try {\n        final Source source = packed ? new PackedIntsSource(input)\n            : new FixedIntsSource(input);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","date":1309190785,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        input.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n        source  = loadFixedSource(type, input, numDocs);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        input.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n        source  = loadFixedSource(type, input);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        input.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n        source  = loadFixedSource(type, input, numDocs);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      final IndexInput input = (IndexInput) datIn.clone();\n      boolean success = false;\n      try {\n        final Source source = packed ? new PackedIntsSource(input)\n            : new FixedIntsSource(input);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        input.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n        source  = loadFixedSource(type, input, numDocs);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      final IndexInput input = (IndexInput) datIn.clone();\n      boolean success = false;\n      try {\n        final Source source = packed ? new PackedIntsSource(input)\n            : new FixedIntsSource(input);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        input.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n        source = loadFixedSource(type, input, numDocs);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        input.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n        source  = loadFixedSource(type, input, numDocs);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        input.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n        source = loadFixedSource(type, input, numDocs);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        input.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n        source = loadFixedSource(type, input, numDocs);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        input.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n        source = loadFixedSource(type, input, numDocs);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","605b061fadf71aa6458c0005eaae83a98350c403"],"605b061fadf71aa6458c0005eaae83a98350c403":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["93c59ad5034eecd863f267bd75e1df7b8a51e427"],"93c59ad5034eecd863f267bd75e1df7b8a51e427":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["24230fe54121f9be9d85f2c2067536296785e421"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"2553b00f699380c64959ccb27991289aae87be2e":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["2e8d7ba2175f47e280231533f7d3016249cea88b","5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85eb75e0c0203e44dcf686f35876cf6080f3a671"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["2553b00f699380c64959ccb27991289aae87be2e"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","93c59ad5034eecd863f267bd75e1df7b8a51e427","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"605b061fadf71aa6458c0005eaae83a98350c403":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["1509f151d7692d84fae414b2b799ac06ba60fcb4","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"93c59ad5034eecd863f267bd75e1df7b8a51e427":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","605b061fadf71aa6458c0005eaae83a98350c403"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["24230fe54121f9be9d85f2c2067536296785e421"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}