{"path":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","commits":[{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","sourceOld":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","sourceOld":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","sourceOld":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc","date":1308411958,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return allowArrayArcs &&\n      ((node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n       node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP);\n  }\n\n","sourceOld":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","date":1308439813,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return allowArrayArcs &&\n      ((node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n       node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP);\n  }\n\n","sourceOld":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return allowArrayArcs &&\n      ((node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n       node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP);\n  }\n\n","sourceOld":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return allowArrayArcs &&\n      ((node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n       node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":[],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8be6e1e4fbbc94d90b78f175c03ff389b6949373","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}