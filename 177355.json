{"path":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testLiteralsOverride().mjava","commits":[{"id":"2524df5693acc543d4f18fc9796414df11e57358","date":1340798755,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testLiteralsOverride().mjava","pathOld":"/dev/null","sourceNew":"  public void testLiteralsOverride() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n \n    assertQ(req(\"*:*\"), \"//*[@numFound='0']\");\n\n    // Here Tika should parse out a title for this document:\n    loadLocal(\"extraction/solr-word.pdf\", \n            \"fmap.created\", \"extractedDate\", \n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here the literal value should override the Tika-parsed title:\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literal.title\", \"wolf-man\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here we mimic the old behaviour where literals are added, not overridden\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literalsOverride\", \"false\",\n            // Trick - we first map the metadata-title to an ignored field before we replace with literal title\n            \"fmap.title\", \"ignored_a\",\n            \"literal.title\", \"old-behaviour\",\n            \"literal.extractedKeywords\", \"literalkeyword\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"five\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    assertU(commit());\n\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n    assertQ(req(\"title:wolf-man\"), \"//*[@numFound='1']\");\n    assertQ(req(\"extractedKeywords:(solr AND word AND pdf AND literalkeyword)\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testLiteralsOverride().mjava","pathOld":"/dev/null","sourceNew":"  public void testLiteralsOverride() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n \n    assertQ(req(\"*:*\"), \"//*[@numFound='0']\");\n\n    // Here Tika should parse out a title for this document:\n    loadLocal(\"extraction/solr-word.pdf\", \n            \"fmap.created\", \"extractedDate\", \n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here the literal value should override the Tika-parsed title:\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literal.title\", \"wolf-man\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here we mimic the old behaviour where literals are added, not overridden\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literalsOverride\", \"false\",\n            // Trick - we first map the metadata-title to an ignored field before we replace with literal title\n            \"fmap.title\", \"ignored_a\",\n            \"literal.title\", \"old-behaviour\",\n            \"literal.extractedKeywords\", \"literalkeyword\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"five\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    assertU(commit());\n\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n    assertQ(req(\"title:wolf-man\"), \"//*[@numFound='1']\");\n    assertQ(req(\"extractedKeywords:(solr AND word AND pdf AND literalkeyword)\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9","date":1345254460,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testLiteralsOverride().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testLiteralsOverride().mjava","sourceNew":"  public void testLiteralsOverride() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n \n    assertQ(req(\"*:*\"), \"//*[@numFound='0']\");\n\n    // Here Tika should parse out a title for this document:\n    loadLocal(\"extraction/solr-word.pdf\", \n            \"fmap.created\", \"extractedDate\", \n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here the literal value should override the Tika-parsed title:\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literal.title\", \"wolf-man\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here we mimic the old behaviour where literals are added, not overridden\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literalsOverride\", \"false\",\n            // Trick - we first map the metadata-title to an ignored field before we replace with literal title\n            \"fmap.title\", \"ignored_a\",\n            \"literal.title\", \"old-behaviour\",\n            \"literal.extractedKeywords\", \"literalkeyword\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"five\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    assertU(commit());\n\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n    assertQ(req(\"title:wolf-man\"), \"//*[@numFound='1']\");\n    assertQ(req(\"extractedKeywords:(solr AND word AND pdf AND literalkeyword)\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  public void testLiteralsOverride() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n \n    assertQ(req(\"*:*\"), \"//*[@numFound='0']\");\n\n    // Here Tika should parse out a title for this document:\n    loadLocal(\"extraction/solr-word.pdf\", \n            \"fmap.created\", \"extractedDate\", \n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here the literal value should override the Tika-parsed title:\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literal.title\", \"wolf-man\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here we mimic the old behaviour where literals are added, not overridden\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literalsOverride\", \"false\",\n            // Trick - we first map the metadata-title to an ignored field before we replace with literal title\n            \"fmap.title\", \"ignored_a\",\n            \"literal.title\", \"old-behaviour\",\n            \"literal.extractedKeywords\", \"literalkeyword\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"five\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    assertU(commit());\n\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n    assertQ(req(\"title:wolf-man\"), \"//*[@numFound='1']\");\n    assertQ(req(\"extractedKeywords:(solr AND word AND pdf AND literalkeyword)\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testLiteralsOverride().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testLiteralsOverride().mjava","sourceNew":"  public void testLiteralsOverride() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n \n    assertQ(req(\"*:*\"), \"//*[@numFound='0']\");\n\n    // Here Tika should parse out a title for this document:\n    loadLocal(\"extraction/solr-word.pdf\", \n            \"fmap.created\", \"extractedDate\", \n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here the literal value should override the Tika-parsed title:\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literal.title\", \"wolf-man\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here we mimic the old behaviour where literals are added, not overridden\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literalsOverride\", \"false\",\n            // Trick - we first map the metadata-title to an ignored field before we replace with literal title\n            \"fmap.title\", \"ignored_a\",\n            \"literal.title\", \"old-behaviour\",\n            \"literal.extractedKeywords\", \"literalkeyword\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"five\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    assertU(commit());\n\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n    assertQ(req(\"title:wolf-man\"), \"//*[@numFound='1']\");\n    assertQ(req(\"extractedKeywords:(solr AND word AND pdf AND literalkeyword)\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  public void testLiteralsOverride() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n \n    assertQ(req(\"*:*\"), \"//*[@numFound='0']\");\n\n    // Here Tika should parse out a title for this document:\n    loadLocal(\"extraction/solr-word.pdf\", \n            \"fmap.created\", \"extractedDate\", \n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here the literal value should override the Tika-parsed title:\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literal.title\", \"wolf-man\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here we mimic the old behaviour where literals are added, not overridden\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literalsOverride\", \"false\",\n            // Trick - we first map the metadata-title to an ignored field before we replace with literal title\n            \"fmap.title\", \"ignored_a\",\n            \"literal.title\", \"old-behaviour\",\n            \"literal.extractedKeywords\", \"literalkeyword\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"five\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    assertU(commit());\n\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n    assertQ(req(\"title:wolf-man\"), \"//*[@numFound='1']\");\n    assertQ(req(\"extractedKeywords:(solr AND word AND pdf AND literalkeyword)\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testLiteralsOverride().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testLiteralsOverride().mjava","sourceNew":"  public void testLiteralsOverride() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n \n    assertQ(req(\"*:*\"), \"//*[@numFound='0']\");\n\n    // Here Tika should parse out a title for this document:\n    loadLocal(\"extraction/solr-word.pdf\", \n            \"fmap.created\", \"extractedDate\", \n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here the literal value should override the Tika-parsed title:\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literal.title\", \"wolf-man\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here we mimic the old behaviour where literals are added, not overridden\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literalsOverride\", \"false\",\n            // Trick - we first map the metadata-title to an ignored field before we replace with literal title\n            \"fmap.title\", \"ignored_a\",\n            \"literal.title\", \"old-behaviour\",\n            \"literal.extractedKeywords\", \"literalkeyword\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"five\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    assertU(commit());\n\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n    assertQ(req(\"title:wolf-man\"), \"//*[@numFound='1']\");\n    assertQ(req(\"extractedKeywords:(solr AND word AND pdf AND literalkeyword)\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  public void testLiteralsOverride() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n \n    assertQ(req(\"*:*\"), \"//*[@numFound='0']\");\n\n    // Here Tika should parse out a title for this document:\n    loadLocal(\"extraction/solr-word.pdf\", \n            \"fmap.created\", \"extractedDate\", \n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here the literal value should override the Tika-parsed title:\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literal.title\", \"wolf-man\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    // Here we mimic the old behaviour where literals are added, not overridden\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"literalsOverride\", \"false\",\n            // Trick - we first map the metadata-title to an ignored field before we replace with literal title\n            \"fmap.title\", \"ignored_a\",\n            \"literal.title\", \"old-behaviour\",\n            \"literal.extractedKeywords\", \"literalkeyword\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\",\n            \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"five\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Last-Modified\", \"extractedDate\");\n\n    assertU(commit());\n\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n    assertQ(req(\"title:wolf-man\"), \"//*[@numFound='1']\");\n    assertQ(req(\"extractedKeywords:(solr AND word AND pdf AND literalkeyword)\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9":["2524df5693acc543d4f18fc9796414df11e57358"],"2524df5693acc543d4f18fc9796414df11e57358":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["2524df5693acc543d4f18fc9796414df11e57358","7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2524df5693acc543d4f18fc9796414df11e57358"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["fe33227f6805edab2036cbb80645cc4e2d1fa424","7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9"]},"commit2Childs":{"7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2524df5693acc543d4f18fc9796414df11e57358":["7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9","616c1830142ff5c1ddedec1ed898733b73c8e23b","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2524df5693acc543d4f18fc9796414df11e57358","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}