{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, DirectoryReader.getCommitUserData(dir).size());\n\n    DirectoryReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, DirectoryReader.getCommitUserData(dir).size());\n\n    DirectoryReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"438e995b4e32916f631722aab36254146830fefb","date":1328903827,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, DirectoryReader.getCommitUserData(dir).size());\n\n    DirectoryReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b47e1512544568a22b82c96169d466fae8a4b79e","date":1354519309,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.shutdown();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.shutdown();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.shutdown();\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.shutdown();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.shutdown();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.shutdown();\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.shutdown();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.shutdown();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.shutdown();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.shutdown();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.shutdown();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.shutdown();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71e1a70f18d64b93db3ef618e606d6df5062f747","date":1466156390,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<>();\n    data.put(\"label\", \"test1\");\n    w.setLiveCommitData(data.entrySet());\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","bugFix":["b47e1512544568a22b82c96169d466fae8a4b79e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<>();\n    data.put(\"label\", \"test1\");\n    w.setLiveCommitData(data.entrySet());\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getIndexCommit().getUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<>();\n    data.put(\"label\", \"test1\");\n    w.setCommitData(data);\n    w.close();\n\n    r = DirectoryReader.open(dir);\n    assertEquals(\"test1\", r.getIndexCommit().getUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    w.forceMerge(1);\n    w.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b47e1512544568a22b82c96169d466fae8a4b79e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"407687e67faf6e1f02a211ca078d8e3eed631027":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","b47e1512544568a22b82c96169d466fae8a4b79e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d0ef034a4f10871667ae75181537775ddcf8ade4","71e1a70f18d64b93db3ef618e606d6df5062f747"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"b47e1512544568a22b82c96169d466fae8a4b79e":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["438e995b4e32916f631722aab36254146830fefb"],"438e995b4e32916f631722aab36254146830fefb":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71e1a70f18d64b93db3ef618e606d6df5062f747"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["438e995b4e32916f631722aab36254146830fefb"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["407687e67faf6e1f02a211ca078d8e3eed631027","b47e1512544568a22b82c96169d466fae8a4b79e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["71e1a70f18d64b93db3ef618e606d6df5062f747","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b47e1512544568a22b82c96169d466fae8a4b79e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"438e995b4e32916f631722aab36254146830fefb":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}