{"path":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#testEntryList().mjava","commits":[{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#testEntryList().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#testEntryList().mjava","sourceNew":"  @Test\n  public void testEntryList() throws Exception {\n    // ensure entries to FieldCache\n    assertU(adoc(\"id\", \"id0\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"id asc\"), \"//*[@numFound='1']\");\n\n    // Test with entry list enabled\n    assertEntryListIncluded(false);\n\n    // Test again with entry list disabled\n    System.setProperty(\"disableSolrFieldCacheMBeanEntryList\", \"true\");\n    try {\n      assertEntryListNotIncluded(false);\n    } finally {\n      System.clearProperty(\"disableSolrFieldCacheMBeanEntryList\");\n    }\n\n    // Test with entry list enabled for jmx\n    assertEntryListIncluded(true);\n\n    // Test with entry list disabled for jmx\n    System.setProperty(\"disableSolrFieldCacheMBeanEntryListJmx\", \"true\");\n    try {\n      assertEntryListNotIncluded(true);\n    } finally {\n      System.clearProperty(\"disableSolrFieldCacheMBeanEntryListJmx\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testEntryList() throws Exception {\n    // ensure entries to FieldCache\n    assertU(adoc(\"id\", \"id0\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"id asc\"), \"//*[@numFound='1']\");\n\n    // Test with entry list enabled\n    assertEntryListIncluded(false);\n\n    // Test again with entry list disabled\n    System.setProperty(\"disableSolrFieldCacheMBeanEntryList\", \"true\");\n    try {\n      assertEntryListNotIncluded(false);\n    } finally {\n      System.clearProperty(\"disableSolrFieldCacheMBeanEntryList\");\n    }\n\n    // Test with entry list enabled for jmx\n    assertEntryListIncluded(true);\n\n    // Test with entry list disabled for jmx\n    System.setProperty(\"disableSolrFieldCacheMBeanEntryListJmx\", \"true\");\n    try {\n      assertEntryListNotIncluded(true);\n    } finally {\n      System.clearProperty(\"disableSolrFieldCacheMBeanEntryListJmx\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#testEntryList().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#testEntryList().mjava","sourceNew":"  @Test\n  public void testEntryList() throws Exception {\n    // ensure entries to FieldCache\n    assertU(adoc(\"id\", \"id0\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"id asc\"), \"//*[@numFound='1']\");\n\n    // Test with entry list enabled\n    assertEntryListIncluded(false);\n\n    // Test again with entry list disabled\n    System.setProperty(\"disableSolrFieldCacheMBeanEntryList\", \"true\");\n    try {\n      assertEntryListNotIncluded(false);\n    } finally {\n      System.clearProperty(\"disableSolrFieldCacheMBeanEntryList\");\n    }\n\n    // Test with entry list enabled for jmx\n    assertEntryListIncluded(true);\n\n    // Test with entry list disabled for jmx\n    System.setProperty(\"disableSolrFieldCacheMBeanEntryListJmx\", \"true\");\n    try {\n      assertEntryListNotIncluded(true);\n    } finally {\n      System.clearProperty(\"disableSolrFieldCacheMBeanEntryListJmx\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testEntryList() throws Exception {\n    // ensure entries to FieldCache\n    assertU(adoc(\"id\", \"id0\"));\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"id asc\"), \"//*[@numFound='1']\");\n\n    // Test with entry list enabled\n    assertEntryListIncluded(false);\n\n    // Test again with entry list disabled\n    System.setProperty(\"disableSolrFieldCacheMBeanEntryList\", \"true\");\n    try {\n      assertEntryListNotIncluded(false);\n    } finally {\n      System.clearProperty(\"disableSolrFieldCacheMBeanEntryList\");\n    }\n\n    // Test with entry list enabled for jmx\n    assertEntryListIncluded(true);\n\n    // Test with entry list disabled for jmx\n    System.setProperty(\"disableSolrFieldCacheMBeanEntryListJmx\", \"true\");\n    try {\n      assertEntryListNotIncluded(true);\n    } finally {\n      System.clearProperty(\"disableSolrFieldCacheMBeanEntryListJmx\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}