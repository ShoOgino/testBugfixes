{"path":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19e21d98da803ac6174cb50a880e6289139756ca","date":1323342587,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efc85580874d26ca9617f9ad61628d56f6859762","date":1323367273,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d0561cea94adff1867218e77bb763c7583be279","date":1324334341,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap(IndexReader reader, SolrCore core) throws Exception {\n    synchronized (elevationCache) {\n      Map<String, ElevationObj> map = elevationCache.get(null);\n      if (map != null) return map;\n\n      map = elevationCache.get(reader);\n      if (map == null) {\n        String f = initArgs.get(CONFIG_FILE);\n        if (f == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"QueryElevationComponent must specify argument: \" + CONFIG_FILE);\n        }\n        log.info(\"Loading QueryElevation from data dir: \" + f);\n\n        InputStream is = VersionedFile.getLatestFile(core.getDataDir(), f);\n        Config cfg = new Config(core.getResourceLoader(), f, new InputSource(is), null);\n        map = loadElevationMap(cfg);\n        elevationCache.put(reader, map);\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, new InputSource(is), null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe","date":1332176888,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap(IndexReader reader, SolrCore core) throws Exception {\n    synchronized (elevationCache) {\n      Map<String, ElevationObj> map = elevationCache.get(null);\n      if (map != null) return map;\n\n      map = elevationCache.get(reader);\n      if (map == null) {\n        String f = initArgs.get(CONFIG_FILE);\n        if (f == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"QueryElevationComponent must specify argument: \" + CONFIG_FILE);\n        }\n        log.info(\"Loading QueryElevation from data dir: \" + f);\n        \n        Config cfg;\n        \n        ZkController zkController = core.getCoreDescriptor().getCoreContainer().getZkController();\n        if (zkController != null) {\n          cfg = new Config(core.getResourceLoader(), f, null, null);\n        } else {\n          InputStream is = VersionedFile.getLatestFile(core.getDataDir(), f);\n          cfg = new Config(core.getResourceLoader(), f, new InputSource(is), null);\n        }\n  \n        map = loadElevationMap(cfg);\n        elevationCache.put(reader, map);\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap(IndexReader reader, SolrCore core) throws Exception {\n    synchronized (elevationCache) {\n      Map<String, ElevationObj> map = elevationCache.get(null);\n      if (map != null) return map;\n\n      map = elevationCache.get(reader);\n      if (map == null) {\n        String f = initArgs.get(CONFIG_FILE);\n        if (f == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"QueryElevationComponent must specify argument: \" + CONFIG_FILE);\n        }\n        log.info(\"Loading QueryElevation from data dir: \" + f);\n\n        InputStream is = VersionedFile.getLatestFile(core.getDataDir(), f);\n        Config cfg = new Config(core.getResourceLoader(), f, new InputSource(is), null);\n        map = loadElevationMap(cfg);\n        elevationCache.put(reader, map);\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap(IndexReader reader, SolrCore core) throws Exception {\n    synchronized (elevationCache) {\n      Map<String, ElevationObj> map = elevationCache.get(null);\n      if (map != null) return map;\n\n      map = elevationCache.get(reader);\n      if (map == null) {\n        String f = initArgs.get(CONFIG_FILE);\n        if (f == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"QueryElevationComponent must specify argument: \" + CONFIG_FILE);\n        }\n        log.info(\"Loading QueryElevation from data dir: \" + f);\n        \n        Config cfg;\n        \n        ZkController zkController = core.getCoreContainer().getZkController();\n        if (zkController != null) {\n          cfg = new Config(core.getResourceLoader(), f, null, null);\n        } else {\n          InputStream is = VersionedFile.getLatestFile(core.getDataDir(), f);\n          cfg = new Config(core.getResourceLoader(), f, new InputSource(is), null);\n        }\n  \n        map = loadElevationMap(cfg);\n        elevationCache.put(reader, map);\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap(IndexReader reader, SolrCore core) throws Exception {\n    synchronized (elevationCache) {\n      Map<String, ElevationObj> map = elevationCache.get(null);\n      if (map != null) return map;\n\n      map = elevationCache.get(reader);\n      if (map == null) {\n        String f = initArgs.get(CONFIG_FILE);\n        if (f == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"QueryElevationComponent must specify argument: \" + CONFIG_FILE);\n        }\n        log.info(\"Loading QueryElevation from data dir: \" + f);\n        \n        Config cfg;\n        \n        ZkController zkController = core.getCoreDescriptor().getCoreContainer().getZkController();\n        if (zkController != null) {\n          cfg = new Config(core.getResourceLoader(), f, null, null);\n        } else {\n          InputStream is = VersionedFile.getLatestFile(core.getDataDir(), f);\n          cfg = new Config(core.getResourceLoader(), f, new InputSource(is), null);\n        }\n  \n        map = loadElevationMap(cfg);\n        elevationCache.put(reader, map);\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap(IndexReader reader, SolrCore core) throws Exception {\n    synchronized (elevationCache) {\n      Map<String, ElevationObj> map = elevationCache.get(null);\n      if (map != null) return map;\n\n      map = elevationCache.get(reader);\n      if (map == null) {\n        String f = initArgs.get(CONFIG_FILE);\n        if (f == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"QueryElevationComponent must specify argument: \" + CONFIG_FILE);\n        }\n        log.info(\"Loading QueryElevation from data dir: \" + f);\n        \n        Config cfg;\n        \n        ZkController zkController = core.getCoreContainer().getZkController();\n        if (zkController != null) {\n          cfg = new Config(core.getResourceLoader(), f, null, null);\n        } else {\n          InputStream is = VersionedFile.getLatestFile(core.getDataDir(), f);\n          cfg = new Config(core.getResourceLoader(), f, new InputSource(is), null);\n        }\n  \n        map = loadElevationMap(cfg);\n        elevationCache.put(reader, map);\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap(IndexReader reader, SolrCore core) throws Exception {\n    synchronized (elevationCache) {\n      Map<String, ElevationObj> map = elevationCache.get(null);\n      if (map != null) return map;\n\n      map = elevationCache.get(reader);\n      if (map == null) {\n        String f = initArgs.get(CONFIG_FILE);\n        if (f == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"QueryElevationComponent must specify argument: \" + CONFIG_FILE);\n        }\n        log.info(\"Loading QueryElevation from data dir: \" + f);\n        \n        Config cfg;\n        \n        ZkController zkController = core.getCoreDescriptor().getCoreContainer().getZkController();\n        if (zkController != null) {\n          cfg = new Config(core.getResourceLoader(), f, null, null);\n        } else {\n          InputStream is = VersionedFile.getLatestFile(core.getDataDir(), f);\n          cfg = new Config(core.getResourceLoader(), f, new InputSource(is), null);\n        }\n  \n        map = loadElevationMap(cfg);\n        elevationCache.put(reader, map);\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ad458affd82a1d762eb506003907d9363a333cb","date":1528558344,"type":4,"author":"broustant","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":null,"sourceOld":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap(IndexReader reader, SolrCore core) throws Exception {\n    synchronized (elevationCache) {\n      Map<String, ElevationObj> map = elevationCache.get(null);\n      if (map != null) return map;\n\n      map = elevationCache.get(reader);\n      if (map == null) {\n        String f = initArgs.get(CONFIG_FILE);\n        if (f == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"QueryElevationComponent must specify argument: \" + CONFIG_FILE);\n        }\n        log.info(\"Loading QueryElevation from data dir: \" + f);\n        \n        Config cfg;\n        \n        ZkController zkController = core.getCoreContainer().getZkController();\n        if (zkController != null) {\n          cfg = new Config(core.getResourceLoader(), f, null, null);\n        } else {\n          InputStream is = VersionedFile.getLatestFile(core.getDataDir(), f);\n          cfg = new Config(core.getResourceLoader(), f, new InputSource(is), null);\n        }\n  \n        map = loadElevationMap(cfg);\n        elevationCache.put(reader, map);\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":null,"sourceOld":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap(IndexReader reader, SolrCore core) throws Exception {\n    synchronized (elevationCache) {\n      Map<String, ElevationObj> map = elevationCache.get(null);\n      if (map != null) return map;\n\n      map = elevationCache.get(reader);\n      if (map == null) {\n        String f = initArgs.get(CONFIG_FILE);\n        if (f == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"QueryElevationComponent must specify argument: \" + CONFIG_FILE);\n        }\n        log.info(\"Loading QueryElevation from data dir: \" + f);\n        \n        Config cfg;\n        \n        ZkController zkController = core.getCoreContainer().getZkController();\n        if (zkController != null) {\n          cfg = new Config(core.getResourceLoader(), f, null, null);\n        } else {\n          InputStream is = VersionedFile.getLatestFile(core.getDataDir(), f);\n          cfg = new Config(core.getResourceLoader(), f, new InputSource(is), null);\n        }\n  \n        map = loadElevationMap(cfg);\n        elevationCache.put(reader, map);\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":null,"sourceOld":"  //get the elevation map from the data dir\n  Map<String, ElevationObj> getElevationMap(IndexReader reader, SolrCore core) throws Exception {\n    synchronized (elevationCache) {\n      Map<String, ElevationObj> map = elevationCache.get(null);\n      if (map != null) return map;\n\n      map = elevationCache.get(reader);\n      if (map == null) {\n        String f = initArgs.get(CONFIG_FILE);\n        if (f == null) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"QueryElevationComponent must specify argument: \" + CONFIG_FILE);\n        }\n        log.info(\"Loading QueryElevation from data dir: \" + f);\n        \n        Config cfg;\n        \n        ZkController zkController = core.getCoreContainer().getZkController();\n        if (zkController != null) {\n          cfg = new Config(core.getResourceLoader(), f, null, null);\n        } else {\n          InputStream is = VersionedFile.getLatestFile(core.getDataDir(), f);\n          cfg = new Config(core.getResourceLoader(), f, new InputSource(is), null);\n        }\n  \n        map = loadElevationMap(cfg);\n        elevationCache.put(reader, map);\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["c26f00b574427b55127e869b935845554afde1fa","19e21d98da803ac6174cb50a880e6289139756ca"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe":["1d0561cea94adff1867218e77bb763c7583be279"],"1d0561cea94adff1867218e77bb763c7583be279":["19e21d98da803ac6174cb50a880e6289139756ca"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["729cb470f975115d4c60517b2cb7c42e37a7a2e1","2ad458affd82a1d762eb506003907d9363a333cb"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"19e21d98da803ac6174cb50a880e6289139756ca":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ad458affd82a1d762eb506003907d9363a333cb":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"efc85580874d26ca9617f9ad61628d56f6859762":["c26f00b574427b55127e869b935845554afde1fa","19e21d98da803ac6174cb50a880e6289139756ca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ad458affd82a1d762eb506003907d9363a333cb"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["729cb470f975115d4c60517b2cb7c42e37a7a2e1","2ad458affd82a1d762eb506003907d9363a333cb"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"c26f00b574427b55127e869b935845554afde1fa":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","19e21d98da803ac6174cb50a880e6289139756ca","efc85580874d26ca9617f9ad61628d56f6859762"],"e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"1d0561cea94adff1867218e77bb763c7583be279":["e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","2ad458affd82a1d762eb506003907d9363a333cb","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"19e21d98da803ac6174cb50a880e6289139756ca":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","1d0561cea94adff1867218e77bb763c7583be279","efc85580874d26ca9617f9ad61628d56f6859762"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"2ad458affd82a1d762eb506003907d9363a333cb":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"efc85580874d26ca9617f9ad61628d56f6859762":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a258fbb26824fd104ed795e5d9033d2d040049ee","efc85580874d26ca9617f9ad61628d56f6859762","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}