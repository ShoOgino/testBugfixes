{"path":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/FuzzyLikeThisQueryBuilder#getQuery(Element).mjava","commits":[{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/FuzzyLikeThisQueryBuilder#getQuery(Element).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/FuzzyLikeThisQueryBuilder#getQuery(Element).mjava","sourceNew":"  public Query getQuery(Element e) throws ParserException {\n    NodeList nl = e.getElementsByTagName(\"Field\");\n    int maxNumTerms = DOMUtils.getAttribute(e, \"maxNumTerms\", DEFAULT_MAX_NUM_TERMS);\n    FuzzyLikeThisQuery fbq = new FuzzyLikeThisQuery(maxNumTerms, analyzer);\n    fbq.setIgnoreTF(DOMUtils.getAttribute(e, \"ignoreTF\", DEFAULT_IGNORE_TF));\n\n    for (int i = 0; i < nl.getLength(); i++) {\n      Element fieldElem = (Element) nl.item(i);\n      float minSimilarity = DOMUtils.getAttribute(fieldElem, \"minSimilarity\", DEFAULT_MIN_SIMILARITY);\n      int prefixLength = DOMUtils.getAttribute(fieldElem, \"prefixLength\", DEFAULT_PREFIX_LENGTH);\n      String fieldName = DOMUtils.getAttributeWithInheritance(fieldElem, \"fieldName\");\n\n      String value = DOMUtils.getText(fieldElem);\n      fbq.addTerms(value, fieldName, minSimilarity, prefixLength);\n    }\n\n    fbq.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n    return fbq;\n  }\n\n","sourceOld":"  public Query getQuery(Element e) throws ParserException {\n    NodeList nl = e.getElementsByTagName(\"Field\");\n    int maxNumTerms = DOMUtils.getAttribute(e, \"maxNumTerms\", DEFAULT_MAX_NUM_TERMS);\n    FuzzyLikeThisQuery fbq = new FuzzyLikeThisQuery(maxNumTerms, analyzer);\n    fbq.setIgnoreTF(DOMUtils.getAttribute(e, \"ignoreTF\", DEFAULT_IGNORE_TF));\n\n    for (int i = 0; i < nl.getLength(); i++) {\n      Element fieldElem = (Element) nl.item(i);\n      float minSimilarity = DOMUtils.getAttribute(fieldElem, \"minSimilarity\", DEFAULT_MIN_SIMILARITY);\n      int prefixLength = DOMUtils.getAttribute(fieldElem, \"prefixLength\", DEFAULT_PREFIX_LENGTH);\n      String fieldName = DOMUtils.getAttributeWithInheritance(fieldElem, \"fieldName\");\n\n      String value = DOMUtils.getText(fieldElem);\n      fbq.addTerms(value, fieldName, minSimilarity, prefixLength);\n    }\n\n    fbq.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n    return fbq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/FuzzyLikeThisQueryBuilder#getQuery(Element).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/FuzzyLikeThisQueryBuilder#getQuery(Element).mjava","sourceNew":"  public Query getQuery(Element e) throws ParserException {\n    NodeList nl = e.getElementsByTagName(\"Field\");\n    int maxNumTerms = DOMUtils.getAttribute(e, \"maxNumTerms\", DEFAULT_MAX_NUM_TERMS);\n    FuzzyLikeThisQuery fbq = new FuzzyLikeThisQuery(maxNumTerms, analyzer);\n    fbq.setIgnoreTF(DOMUtils.getAttribute(e, \"ignoreTF\", DEFAULT_IGNORE_TF));\n\n    for (int i = 0; i < nl.getLength(); i++) {\n      Element fieldElem = (Element) nl.item(i);\n      float minSimilarity = DOMUtils.getAttribute(fieldElem, \"minSimilarity\", DEFAULT_MIN_SIMILARITY);\n      int prefixLength = DOMUtils.getAttribute(fieldElem, \"prefixLength\", DEFAULT_PREFIX_LENGTH);\n      String fieldName = DOMUtils.getAttributeWithInheritance(fieldElem, \"fieldName\");\n\n      String value = DOMUtils.getText(fieldElem);\n      fbq.addTerms(value, fieldName, minSimilarity, prefixLength);\n    }\n\n    fbq.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n    return fbq;\n  }\n\n","sourceOld":"  public Query getQuery(Element e) throws ParserException {\n    NodeList nl = e.getElementsByTagName(\"Field\");\n    int maxNumTerms = DOMUtils.getAttribute(e, \"maxNumTerms\", DEFAULT_MAX_NUM_TERMS);\n    FuzzyLikeThisQuery fbq = new FuzzyLikeThisQuery(maxNumTerms, analyzer);\n    fbq.setIgnoreTF(DOMUtils.getAttribute(e, \"ignoreTF\", DEFAULT_IGNORE_TF));\n\n    for (int i = 0; i < nl.getLength(); i++) {\n      Element fieldElem = (Element) nl.item(i);\n      float minSimilarity = DOMUtils.getAttribute(fieldElem, \"minSimilarity\", DEFAULT_MIN_SIMILARITY);\n      int prefixLength = DOMUtils.getAttribute(fieldElem, \"prefixLength\", DEFAULT_PREFIX_LENGTH);\n      String fieldName = DOMUtils.getAttributeWithInheritance(fieldElem, \"fieldName\");\n\n      String value = DOMUtils.getText(fieldElem);\n      fbq.addTerms(value, fieldName, minSimilarity, prefixLength);\n    }\n\n    fbq.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n    return fbq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}