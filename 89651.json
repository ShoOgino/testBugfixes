{"path":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sort).mjava","commits":[{"id":"b060a9c887ff2c6f4280953afc6fb6000934dae5","date":1394119540,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sort).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sorter).mjava","sourceNew":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sorter</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sort sort) throws IOException {\n    return wrap(reader, new SortSorter(sort).sort(reader));\n  }\n\n","sourceOld":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sorter</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sorter sorter) throws IOException {\n    return wrap(reader, sorter.sort(reader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e4cbd3e4a2b5f0b9cfcac79bfbccd35a0de5036","date":1394123292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sort).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sort).mjava","sourceNew":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sorter</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sort sort) throws IOException {\n    return wrap(reader, new Sorter(sort).sort(reader));\n  }\n\n","sourceOld":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sorter</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sort sort) throws IOException {\n    return wrap(reader, new SortSorter(sort).sort(reader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2e62f353f033b88592e01e103f1c6650f47347e","date":1394125436,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sort).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sort).mjava","sourceNew":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sort</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sort sort) throws IOException {\n    return wrap(reader, new Sorter(sort).sort(reader));\n  }\n\n","sourceOld":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sorter</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sort sort) throws IOException {\n    return wrap(reader, new Sorter(sort).sort(reader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4637747f71df783fc2014ef1f1e0418466e3bed6","date":1394196311,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sort).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sorter).mjava","sourceNew":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sort</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sort sort) throws IOException {\n    return wrap(reader, new Sorter(sort).sort(reader));\n  }\n\n","sourceOld":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sorter</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sorter sorter) throws IOException {\n    return wrap(reader, sorter.sort(reader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ea64d994d340044e0d57aeb6a5871539d10ca5","date":1394225445,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sort).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sorter).mjava","sourceNew":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sort</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sort sort) throws IOException {\n    return wrap(reader, new Sorter(sort).sort(reader));\n  }\n\n","sourceOld":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sorter</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sorter sorter) throws IOException {\n    return wrap(reader, sorter.sort(reader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sort).mjava","sourceNew":null,"sourceOld":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sort</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sort sort) throws IOException {\n    return wrap(reader, new Sorter(sort).sort(reader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4637747f71df783fc2014ef1f1e0418466e3bed6"],"3e4cbd3e4a2b5f0b9cfcac79bfbccd35a0de5036":["b060a9c887ff2c6f4280953afc6fb6000934dae5"],"b060a9c887ff2c6f4280953afc6fb6000934dae5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4637747f71df783fc2014ef1f1e0418466e3bed6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2e62f353f033b88592e01e103f1c6650f47347e"],"c2e62f353f033b88592e01e103f1c6650f47347e":["3e4cbd3e4a2b5f0b9cfcac79bfbccd35a0de5036"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["4637747f71df783fc2014ef1f1e0418466e3bed6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":[],"3e4cbd3e4a2b5f0b9cfcac79bfbccd35a0de5036":["c2e62f353f033b88592e01e103f1c6650f47347e"],"b060a9c887ff2c6f4280953afc6fb6000934dae5":["3e4cbd3e4a2b5f0b9cfcac79bfbccd35a0de5036"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["96ea64d994d340044e0d57aeb6a5871539d10ca5","b060a9c887ff2c6f4280953afc6fb6000934dae5","4637747f71df783fc2014ef1f1e0418466e3bed6"],"4637747f71df783fc2014ef1f1e0418466e3bed6":["96ea64d994d340044e0d57aeb6a5871539d10ca5","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c2e62f353f033b88592e01e103f1c6650f47347e":["4637747f71df783fc2014ef1f1e0418466e3bed6"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96ea64d994d340044e0d57aeb6a5871539d10ca5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}