{"path":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCores(File,boolean).mjava","commits":[{"id":"71130cfca9e17db547b4f78cce4b0ad0af72f638","date":1362280541,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCores(File,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void makeCores(File home, boolean oldStyle) throws Exception {\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    if (oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"solr-stress.xml\"), new File(home, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(testSrcRoot, \"solr-stress.properties\"), new File(home, \"solr.properties\"));\n    }\n\n    // create directories in groups of 100 until you have enough.\n    for (int idx = 0; idx < numCores; ++idx) {\n      String coreName = String.format(Locale.ROOT, \"%05d_core\", idx);\n      makeCore(new File(home, coreName), testSrcRoot, coreName);\n      coreCounts.put(coreName, 0L);\n      coreNames.add(coreName);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a3e922257586797a261dd44101d4044e1d0487b","date":1362322627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCores(File,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCores(File,boolean).mjava","sourceNew":"  private void makeCores(File home, boolean oldStyle) throws Exception {\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    if (oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"solr-stress.xml\"), new File(home, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(testSrcRoot, \"solr-stress.properties\"), new File(home, \"solr.properties\"));\n    }\n\n    // create directories in groups of 100 until you have enough.\n    for (int idx = 0; idx < numCores; ++idx) {\n      String coreName = String.format(Locale.ROOT, \"%05d_core\", idx);\n      makeCore(new File(home, coreName), testSrcRoot, oldStyle);\n      coreCounts.put(coreName, 0L);\n      coreNames.add(coreName);\n    }\n  }\n\n","sourceOld":"  private void makeCores(File home, boolean oldStyle) throws Exception {\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    if (oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"solr-stress.xml\"), new File(home, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(testSrcRoot, \"solr-stress.properties\"), new File(home, \"solr.properties\"));\n    }\n\n    // create directories in groups of 100 until you have enough.\n    for (int idx = 0; idx < numCores; ++idx) {\n      String coreName = String.format(Locale.ROOT, \"%05d_core\", idx);\n      makeCore(new File(home, coreName), testSrcRoot, coreName);\n      coreCounts.put(coreName, 0L);\n      coreNames.add(coreName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9818efa55563ddfecdecafbdd43f4bee9f252e7d","date":1364853872,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCores(File,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCores(File,boolean).mjava","sourceNew":"  private void makeCores(File home, boolean oldStyle) throws Exception {\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    String srcSolrXml = \"solr-stress-new.xml\";\n\n    if (oldStyle) {\n      srcSolrXml = \"solr-stress-old.xml\";\n    }\n    FileUtils.copyFile(new File(testSrcRoot, srcSolrXml), new File(home, \"solr.xml\"));\n\n    // create directories in groups of 100 until you have enough.\n    for (int idx = 0; idx < numCores; ++idx) {\n      String coreName = String.format(Locale.ROOT, \"%05d_core\", idx);\n      makeCore(new File(home, coreName), testSrcRoot, oldStyle);\n      coreCounts.put(coreName, 0L);\n      coreNames.add(coreName);\n    }\n  }\n\n","sourceOld":"  private void makeCores(File home, boolean oldStyle) throws Exception {\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    if (oldStyle) {\n      FileUtils.copyFile(new File(testSrcRoot, \"solr-stress.xml\"), new File(home, \"solr.xml\"));\n    } else {\n      FileUtils.copyFile(new File(testSrcRoot, \"solr-stress.properties\"), new File(home, \"solr.properties\"));\n    }\n\n    // create directories in groups of 100 until you have enough.\n    for (int idx = 0; idx < numCores; ++idx) {\n      String coreName = String.format(Locale.ROOT, \"%05d_core\", idx);\n      makeCore(new File(home, coreName), testSrcRoot, oldStyle);\n      coreCounts.put(coreName, 0L);\n      coreNames.add(coreName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCores(File).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest#makeCores(File,boolean).mjava","sourceNew":"  private void makeCores(File home) throws Exception {\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    String srcSolrXml = \"solr-stress-new.xml\";\n\n    FileUtils.copyFile(new File(testSrcRoot, srcSolrXml), new File(home, \"solr.xml\"));\n\n    // create directories in groups of 100 until you have enough.\n    for (int idx = 0; idx < numCores; ++idx) {\n      String coreName = String.format(Locale.ROOT, \"%05d_core\", idx);\n      makeCore(new File(home, coreName), testSrcRoot);\n      coreCounts.put(coreName, 0L);\n      coreNames.add(coreName);\n    }\n  }\n\n","sourceOld":"  private void makeCores(File home, boolean oldStyle) throws Exception {\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    String srcSolrXml = \"solr-stress-new.xml\";\n\n    if (oldStyle) {\n      srcSolrXml = \"solr-stress-old.xml\";\n    }\n    FileUtils.copyFile(new File(testSrcRoot, srcSolrXml), new File(home, \"solr.xml\"));\n\n    // create directories in groups of 100 until you have enough.\n    for (int idx = 0; idx < numCores; ++idx) {\n      String coreName = String.format(Locale.ROOT, \"%05d_core\", idx);\n      makeCore(new File(home, coreName), testSrcRoot, oldStyle);\n      coreCounts.put(coreName, 0L);\n      coreNames.add(coreName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a3e922257586797a261dd44101d4044e1d0487b":["71130cfca9e17db547b4f78cce4b0ad0af72f638"],"9818efa55563ddfecdecafbdd43f4bee9f252e7d":["5a3e922257586797a261dd44101d4044e1d0487b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71130cfca9e17db547b4f78cce4b0ad0af72f638":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["9818efa55563ddfecdecafbdd43f4bee9f252e7d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"5a3e922257586797a261dd44101d4044e1d0487b":["9818efa55563ddfecdecafbdd43f4bee9f252e7d"],"9818efa55563ddfecdecafbdd43f4bee9f252e7d":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["71130cfca9e17db547b4f78cce4b0ad0af72f638"],"71130cfca9e17db547b4f78cce4b0ad0af72f638":["5a3e922257586797a261dd44101d4044e1d0487b"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}