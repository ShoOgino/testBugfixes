{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/VMParamsSingleSetCredentialsDigestZkCredentialsProvider#createCredentials().mjava","commits":[{"id":"c83f985d9828d30801541f1eed26aa3169646baf","date":1409315453,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/VMParamsSingleSetCredentialsDigestZkCredentialsProvider#createCredentials().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected Collection<ZkCredentials> createCredentials() {\n    List<ZkCredentials> result = new ArrayList<ZkCredentials>();\n    String digestUsername = System.getProperty(zkDigestUsernameVMParamName);\n    String digestPassword = System.getProperty(zkDigestPasswordVMParamName);\n    if (!StringUtils.isEmpty(digestUsername) && !StringUtils.isEmpty(digestPassword)) {\n      try {\n        result.add(new ZkCredentials(\"digest\", (digestUsername + \":\" + digestPassword).getBytes(\"UTF-8\")));\n      } catch (UnsupportedEncodingException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5","date":1563597632,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/VMParamsSingleSetCredentialsDigestZkCredentialsProvider#createCredentials().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/VMParamsSingleSetCredentialsDigestZkCredentialsProvider#createCredentials().mjava","sourceNew":"  @Override\n  protected Collection<ZkCredentials> createCredentials() {\n    List<ZkCredentials> result = new ArrayList<ZkCredentials>();\n    String digestUsername = System.getProperty(zkDigestUsernameVMParamName);\n    String digestPassword = System.getProperty(zkDigestPasswordVMParamName);\n    if (!StringUtils.isEmpty(digestUsername) && !StringUtils.isEmpty(digestPassword)) {\n      result.add(new ZkCredentials(\"digest\",\n          (digestUsername + \":\" + digestPassword).getBytes(StandardCharsets.UTF_8)));\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  protected Collection<ZkCredentials> createCredentials() {\n    List<ZkCredentials> result = new ArrayList<ZkCredentials>();\n    String digestUsername = System.getProperty(zkDigestUsernameVMParamName);\n    String digestPassword = System.getProperty(zkDigestPasswordVMParamName);\n    if (!StringUtils.isEmpty(digestUsername) && !StringUtils.isEmpty(digestPassword)) {\n      try {\n        result.add(new ZkCredentials(\"digest\", (digestUsername + \":\" + digestPassword).getBytes(\"UTF-8\")));\n      } catch (UnsupportedEncodingException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5":["c83f985d9828d30801541f1eed26aa3169646baf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c83f985d9828d30801541f1eed26aa3169646baf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe214d6e09deed3001159c1ad5173f9c8fc4a7f5"]},"commit2Childs":{"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c83f985d9828d30801541f1eed26aa3169646baf"],"c83f985d9828d30801541f1eed26aa3169646baf":["fe214d6e09deed3001159c1ad5173f9c8fc4a7f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}