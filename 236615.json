{"path":"lucene/core/src/java/org/apache/lucene/geo/GeoEncodingUtils#encodeLatitude(double).mjava","commits":[{"id":"ed48f9723ad1b29c351ea43b5a2c8f90c3a45737","date":1460056040,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/GeoEncodingUtils#encodeLatitude(double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#encodeLatitude(double).mjava","sourceNew":"  /**\n   * Quantizes double (64 bit) latitude into 32 bits (rounding down: in the direction of -90)\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @return encoded value as a 32-bit {@code int}\n   * @throws IllegalArgumentException if latitude is out of bounds\n   */\n  public static int encodeLatitude(double latitude) {\n    checkLatitude(latitude);\n    // the maximum possible value cannot be encoded without overflow\n    if (latitude == 90.0D) {\n      latitude = Math.nextDown(latitude);\n    }\n    return (int) Math.floor(latitude / LAT_DECODE);\n  }\n\n","sourceOld":"  /** \n   * Quantizes double (64 bit) latitude into 32 bits (rounding down: in the direction of -90)\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @return encoded value as a 32-bit {@code int}\n   * @throws IllegalArgumentException if latitude is out of bounds\n   */\n  public static int encodeLatitude(double latitude) {\n    GeoUtils.checkLatitude(latitude);\n    // the maximum possible value cannot be encoded without overflow\n    if (latitude == 90.0D) {\n      latitude = Math.nextDown(latitude);\n    }\n    return (int) Math.floor(latitude / LATITUDE_DECODE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09f15823cf5eb6e807005579e875e117d8598f95","date":1460066385,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/GeoEncodingUtils#encodeLatitude(double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#encodeLatitude(double).mjava","sourceNew":"  /**\n   * Quantizes double (64 bit) latitude into 32 bits (rounding down: in the direction of -90)\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @return encoded value as a 32-bit {@code int}\n   * @throws IllegalArgumentException if latitude is out of bounds\n   */\n  public static int encodeLatitude(double latitude) {\n    checkLatitude(latitude);\n    // the maximum possible value cannot be encoded without overflow\n    if (latitude == 90.0D) {\n      latitude = Math.nextDown(latitude);\n    }\n    return (int) Math.floor(latitude / LAT_DECODE);\n  }\n\n","sourceOld":"  /** \n   * Quantizes double (64 bit) latitude into 32 bits (rounding down: in the direction of -90)\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @return encoded value as a 32-bit {@code int}\n   * @throws IllegalArgumentException if latitude is out of bounds\n   */\n  public static int encodeLatitude(double latitude) {\n    GeoUtils.checkLatitude(latitude);\n    // the maximum possible value cannot be encoded without overflow\n    if (latitude == 90.0D) {\n      latitude = Math.nextDown(latitude);\n    }\n    return (int) Math.floor(latitude / LATITUDE_DECODE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ed48f9723ad1b29c351ea43b5a2c8f90c3a45737":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09f15823cf5eb6e807005579e875e117d8598f95"],"09f15823cf5eb6e807005579e875e117d8598f95":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ed48f9723ad1b29c351ea43b5a2c8f90c3a45737"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ed48f9723ad1b29c351ea43b5a2c8f90c3a45737","09f15823cf5eb6e807005579e875e117d8598f95"],"ed48f9723ad1b29c351ea43b5a2c8f90c3a45737":["09f15823cf5eb6e807005579e875e117d8598f95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"09f15823cf5eb6e807005579e875e117d8598f95":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}