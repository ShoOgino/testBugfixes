{"path":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,IndexReader).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, IndexReader reader) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, reader);\n    final DocValues gh2DV = geoHash2.getValues(context, reader);\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DocValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      @Override\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      @Override\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":["5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DocValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      @Override\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      @Override\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DocValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      @Override\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      @Override\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eeff6b8391d7b5e70e37193643d76c05a3abf75","date":1302902022,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DocValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      @Override\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      @Override\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","0b76616526aa00e6e6983cbd99b234605e00e3cf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d493718201f0d0c54c773fb323d87bbd2fbffe41","date":1303546048,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DocValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      @Override\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      @Override\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DocValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      @Override\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      @Override\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DocValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      @Override\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n\n      @Override\n      public String strVal(int doc) {\n        return Double.toString(doubleVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues gh1DV = geoHash1.getValues(context, readerContext);\n    final DocValues gh2DV = geoHash2.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        return distance(doc, gh1DV, gh2DV);\n      }\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(name()).append('(');\n        sb.append(gh1DV.toString(doc)).append(',').append(gh2DV.toString(doc));\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["c220849f876de24a79f756f65b3eb045db59f63f"],"c26f00b574427b55127e869b935845554afde1fa":["5eeff6b8391d7b5e70e37193643d76c05a3abf75","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["bde51b089eb7f86171eb3406e38a274743f9b7ac","5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"5eeff6b8391d7b5e70e37193643d76c05a3abf75":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"c220849f876de24a79f756f65b3eb045db59f63f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c220849f876de24a79f756f65b3eb045db59f63f"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["868da859b43505d9d2a023bfeae6dd0c795f5295","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["5eeff6b8391d7b5e70e37193643d76c05a3abf75","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d493718201f0d0c54c773fb323d87bbd2fbffe41":[],"c220849f876de24a79f756f65b3eb045db59f63f":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","868da859b43505d9d2a023bfeae6dd0c795f5295"],"5eeff6b8391d7b5e70e37193643d76c05a3abf75":["c26f00b574427b55127e869b935845554afde1fa","135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","a3776dccca01c11e7046323cfad46a3b4a471233","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c220849f876de24a79f756f65b3eb045db59f63f","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["d493718201f0d0c54c773fb323d87bbd2fbffe41"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}