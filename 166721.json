{"path":"src/java/org/apache/lucene/store/IndexOutput#writeVLong(long).mjava","commits":[{"id":"dda77265180d41bf85c84c995e25eda7b8e1b74d","date":1096395352,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexOutput#writeVLong(long).mjava","pathOld":"src/java/org/apache/lucene/store/OutputStream#writeVLong(long).mjava","sourceNew":"  /** Writes an long in a variable-length format.  Writes between one and five\n   * bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see InputStream#readVLong()\n   */\n  public void writeVLong(long i) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      writeByte((byte)((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    writeByte((byte)i);\n  }\n\n","sourceOld":"  /** Writes an long in a variable-length format.  Writes between one and five\n   * bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see InputStream#readVLong()\n   */\n  public final void writeVLong(long i) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      writeByte((byte)((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    writeByte((byte)i);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77f2eb0d13b43db148a5e4f61c166fa3688a2df9","date":1096404326,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexOutput#writeVLong(long).mjava","pathOld":"src/java/org/apache/lucene/store/IndexOutput#writeVLong(long).mjava","sourceNew":"  /** Writes an long in a variable-length format.  Writes between one and five\n   * bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see IndexInput#readVLong()\n   */\n  public void writeVLong(long i) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      writeByte((byte)((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    writeByte((byte)i);\n  }\n\n","sourceOld":"  /** Writes an long in a variable-length format.  Writes between one and five\n   * bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see InputStream#readVLong()\n   */\n  public void writeVLong(long i) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      writeByte((byte)((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    writeByte((byte)i);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/IndexOutput#writeVLong(long).mjava","pathOld":"src/java/org/apache/lucene/store/IndexOutput#writeVLong(long).mjava","sourceNew":"  /** Writes an long in a variable-length format.  Writes between one and five\n   * bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see IndexInput#readVLong()\n   */\n  public void writeVLong(long i) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      writeByte((byte)((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    writeByte((byte)i);\n  }\n\n","sourceOld":"  /** Writes an long in a variable-length format.  Writes between one and five\n   * bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see IndexInput#readVLong()\n   */\n  public void writeVLong(long i) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      writeByte((byte)((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    writeByte((byte)i);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dda77265180d41bf85c84c995e25eda7b8e1b74d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77f2eb0d13b43db148a5e4f61c166fa3688a2df9":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["77f2eb0d13b43db148a5e4f61c166fa3688a2df9"]},"commit2Childs":{"dda77265180d41bf85c84c995e25eda7b8e1b74d":["77f2eb0d13b43db148a5e4f61c166fa3688a2df9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"77f2eb0d13b43db148a5e4f61c166fa3688a2df9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}