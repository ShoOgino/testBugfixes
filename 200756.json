{"path":"solr/core/src/test/org/apache/solr/handler/component/CloudReplicaSourceTest#testSimple_ShardsParam().mjava","commits":[{"id":"cc28b46d62a8b91c8e90f9345612c4050eab98d4","date":1581344825,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/CloudReplicaSourceTest#testSimple_ShardsParam().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSimple_ShardsParam() {\n    ReplicaListTransformer replicaListTransformer = Mockito.mock(ReplicaListTransformer.class);\n    HttpShardHandlerFactory.WhitelistHostChecker whitelistHostChecker = Mockito.mock(HttpShardHandlerFactory.WhitelistHostChecker.class);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"shards\", \"slice1,slice2\");\n    try (ZkStateReader zkStateReader = ClusterStateMockUtil.buildClusterState(\"csr*sr2\", \"baseUrl1_\", \"baseUrl2_\")) {\n      CloudReplicaSource cloudReplicaSource = new CloudReplicaSource.Builder()\n          .collection(\"collection1\")\n          .onlyNrt(false)\n          .zkStateReader(zkStateReader)\n          .replicaListTransformer(replicaListTransformer)\n          .whitelistHostChecker(whitelistHostChecker)\n          .params(params)\n          .build();\n      assertEquals(2, cloudReplicaSource.getSliceCount());\n      assertEquals(2, cloudReplicaSource.getSliceNames().size());\n      assertEquals(1, cloudReplicaSource.getReplicasBySlice(0).size());\n      assertEquals(\"http://baseUrl1/slice1_replica1/\", cloudReplicaSource.getReplicasBySlice(0).get(0));\n      assertEquals(1, cloudReplicaSource.getReplicasBySlice(1).size());\n      assertEquals(\"http://baseUrl2/slice2_replica2/\", cloudReplicaSource.getReplicasBySlice(1).get(0));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc28b46d62a8b91c8e90f9345612c4050eab98d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cc28b46d62a8b91c8e90f9345612c4050eab98d4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc28b46d62a8b91c8e90f9345612c4050eab98d4"],"cc28b46d62a8b91c8e90f9345612c4050eab98d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}