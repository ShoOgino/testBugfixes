{"path":"src/test/org/apache/lucene/util/TestBitVector#doTestWriteRead(int).mjava","commits":[{"id":"2cd79aaa46b0e8aa3c0c6d39c8a0dd77ced7dc99","date":1036646236,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestBitVector#doTestWriteRead(int).mjava","pathOld":"/dev/null","sourceNew":"    private void doTestWriteRead(int n) throws Exception {\n        Directory d = new  RAMDirectory();\n\n        BitVector bv = new BitVector(n);\n        // test count when incrementally setting bits\n        for(int i=0;i<bv.size();i++) {\n            assertFalse(bv.get(i));\n            assertEquals(i,bv.count());\n            bv.set(i);\n            assertTrue(bv.get(i));\n            assertEquals(i+1,bv.count());\n            bv.write(d, \"TESTBV\");\n            BitVector compare = new BitVector(d, \"TESTBV\");\n            // compare bit vectors with bits set incrementally\n            assertTrue(doCompare(bv,compare));\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestBitVector#doTestWriteRead(int).mjava","pathOld":"src/test/org/apache/lucene/util/TestBitVector#doTestWriteRead(int).mjava","sourceNew":"    private void doTestWriteRead(int n) throws Exception {\n        Directory d = new  RAMDirectory();\n\n        BitVector bv = new BitVector(n);\n        // test count when incrementally setting bits\n        for(int i=0;i<bv.size();i++) {\n            assertFalse(bv.get(i));\n            assertEquals(i,bv.count());\n            bv.set(i);\n            assertTrue(bv.get(i));\n            assertEquals(i+1,bv.count());\n            bv.write(d, \"TESTBV\");\n            BitVector compare = new BitVector(d, \"TESTBV\");\n            // compare bit vectors with bits set incrementally\n            assertTrue(doCompare(bv,compare));\n        }\n    }\n\n","sourceOld":"    private void doTestWriteRead(int n) throws Exception {\n        Directory d = new  RAMDirectory();\n\n        BitVector bv = new BitVector(n);\n        // test count when incrementally setting bits\n        for(int i=0;i<bv.size();i++) {\n            assertFalse(bv.get(i));\n            assertEquals(i,bv.count());\n            bv.set(i);\n            assertTrue(bv.get(i));\n            assertEquals(i+1,bv.count());\n            bv.write(d, \"TESTBV\");\n            BitVector compare = new BitVector(d, \"TESTBV\");\n            // compare bit vectors with bits set incrementally\n            assertTrue(doCompare(bv,compare));\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2cd79aaa46b0e8aa3c0c6d39c8a0dd77ced7dc99":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2cd79aaa46b0e8aa3c0c6d39c8a0dd77ced7dc99"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2cd79aaa46b0e8aa3c0c6d39c8a0dd77ced7dc99"],"2cd79aaa46b0e8aa3c0c6d39c8a0dd77ced7dc99":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}