{"path":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#createWeight(IndexSearcher,boolean).mjava","commits":[{"id":"d8b3f2faaf05547a6ed4e2769b664522af9514b3","date":1466522779,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return new Weight(this) {\n      @Override\n      public void extractTerms(Set<Term> terms) {\n      }\n\n      @Override\n      public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n        return Explanation.noMatch(\"\");\n      }\n\n      @Override\n      public Scorer scorer(LeafReaderContext context) throws IOException {\n        return null;\n      }\n\n      @Override\n      public final float getValueForNormalization() throws IOException {\n        return 0;\n      }\n\n      @Override\n      public void normalize(float norm, float boost) {\n      }\n\n      /** Return the normalization factor for this weight. */\n      protected final float queryNorm() {\n        return 0;\n      }\n\n      /** Return the boost for this weight. */\n      protected final float boost() {\n        return 0;\n      }\n\n      /** Return the score produced by this {@link Weight}. */\n      protected final float score() {\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4778b794a897685e2f6c62caa1ac04983d1e69f","date":1467997674,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return new Weight(this) {\n      @Override\n      public void extractTerms(Set<Term> terms) {\n      }\n\n      @Override\n      public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n        return Explanation.noMatch(reason);\n      }\n\n      @Override\n      public Scorer scorer(LeafReaderContext context) throws IOException {\n        return null;\n      }\n\n      @Override\n      public final float getValueForNormalization() throws IOException {\n        return 0;\n      }\n\n      @Override\n      public void normalize(float norm, float boost) {\n      }\n\n      /** Return the normalization factor for this weight. */\n      protected final float queryNorm() {\n        return 0;\n      }\n\n      /** Return the boost for this weight. */\n      protected final float boost() {\n        return 0;\n      }\n\n      /** Return the score produced by this {@link Weight}. */\n      protected final float score() {\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return new Weight(this) {\n      @Override\n      public void extractTerms(Set<Term> terms) {\n      }\n\n      @Override\n      public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n        return Explanation.noMatch(\"\");\n      }\n\n      @Override\n      public Scorer scorer(LeafReaderContext context) throws IOException {\n        return null;\n      }\n\n      @Override\n      public final float getValueForNormalization() throws IOException {\n        return 0;\n      }\n\n      @Override\n      public void normalize(float norm, float boost) {\n      }\n\n      /** Return the normalization factor for this weight. */\n      protected final float queryNorm() {\n        return 0;\n      }\n\n      /** Return the boost for this weight. */\n      protected final float boost() {\n        return 0;\n      }\n\n      /** Return the score produced by this {@link Weight}. */\n      protected final float score() {\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    return new Weight(this) {\n      @Override\n      public void extractTerms(Set<Term> terms) {\n      }\n\n      @Override\n      public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n        return Explanation.noMatch(reason);\n      }\n\n      @Override\n      public Scorer scorer(LeafReaderContext context) throws IOException {\n        return null;\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return new Weight(this) {\n      @Override\n      public void extractTerms(Set<Term> terms) {\n      }\n\n      @Override\n      public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n        return Explanation.noMatch(reason);\n      }\n\n      @Override\n      public Scorer scorer(LeafReaderContext context) throws IOException {\n        return null;\n      }\n\n      @Override\n      public final float getValueForNormalization() throws IOException {\n        return 0;\n      }\n\n      @Override\n      public void normalize(float norm, float boost) {\n      }\n\n      /** Return the normalization factor for this weight. */\n      protected final float queryNorm() {\n        return 0;\n      }\n\n      /** Return the boost for this weight. */\n      protected final float boost() {\n        return 0;\n      }\n\n      /** Return the score produced by this {@link Weight}. */\n      protected final float score() {\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["f4778b794a897685e2f6c62caa1ac04983d1e69f"],"d8b3f2faaf05547a6ed4e2769b664522af9514b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4778b794a897685e2f6c62caa1ac04983d1e69f":["d8b3f2faaf05547a6ed4e2769b664522af9514b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d8b3f2faaf05547a6ed4e2769b664522af9514b3"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8b3f2faaf05547a6ed4e2769b664522af9514b3":["f4778b794a897685e2f6c62caa1ac04983d1e69f"],"f4778b794a897685e2f6c62caa1ac04983d1e69f":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}