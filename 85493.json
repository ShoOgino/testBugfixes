{"path":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","commits":[{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            File instanceDir = new File(desc.getInstanceDir());\n            try {\n              FileUtils.deleteDirectory(instanceDir);\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + instanceDir.getAbsolutePath());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["344b0840364d990b29b97467bfcc766ff8325d11"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            File instanceDir = new File(desc.getInstanceDir());\n            try {\n              FileUtils.deleteDirectory(instanceDir);\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + instanceDir.getAbsolutePath());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c8c4677ab540889fa013693312bae3e5c4283df4","date":1499928201,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          boolean isSharedFs = replica.getStr(CoreAdminParams.DATA_DIR) != null;\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl) && isSharedFs) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f9a989a32a073c55e3aef6f807a3474184bbcf49","date":1499930209,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          boolean isSharedFs = replica.getStr(CoreAdminParams.DATA_DIR) != null;\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl) && isSharedFs) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fb569fd721c41eafc2a2d788499a7df490c7f1a5","date":1499930871,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          boolean isSharedFs = replica.getStr(CoreAdminParams.DATA_DIR) != null;\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl) && isSharedFs) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"717e5ceb2acae36d422ec75e5a4ce9fac40506e1","date":1501239603,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    if (!cc.isSharedFs(desc)) return;\n\n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          boolean isSharedFs = replica.getStr(CoreAdminParams.DATA_DIR) != null;\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl) && isSharedFs) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"344b0840364d990b29b97467bfcc766ff8325d11","date":1501574100,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());    \n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          boolean isSharedFs = replica.getStr(CoreAdminParams.DATA_DIR) != null;\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl) && isSharedFs) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          boolean isSharedFs = replica.getStr(CoreAdminParams.DATA_DIR) != null;\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl) && isSharedFs) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    if (!cc.isSharedFs(desc)) return;\n\n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());    \n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    if (!cc.isSharedFs(desc)) return;\n\n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    Map<String,Slice> slicesMap = zkController.getClusterState().getSlicesMap(desc.getCloudDescriptor().getCollectionName());\n    \n    if (slicesMap != null) {\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    if (!cc.isSharedFs(desc)) return;\n\n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());    \n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());    \n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          boolean isSharedFs = replica.getStr(CoreAdminParams.DATA_DIR) != null;\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl) && isSharedFs) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    if (!cc.isSharedFs(desc)) return;\n\n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());    \n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    \n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());    \n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          boolean isSharedFs = replica.getStr(CoreAdminParams.DATA_DIR) != null;\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl) && isSharedFs) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"216382c52eb6bf24fc72851399bb3750e8ad7a97","date":1538562171,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    if (!cc.isSharedFs(desc)) return;\n\n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n\n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());\n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n\n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n\n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n\n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    if (!cc.isSharedFs(desc)) return;\n\n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n    \n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());    \n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n          \n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n          \n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n            \n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad4957cde742defe6db19689abdc267c5d948066","date":1587990850,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    if (!cc.isSharedFs(desc)) return;\n\n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n\n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());\n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n\n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n\n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n\n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"{}\",\n                new SolrException(ErrorCode.SERVER_ERROR, \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\")); // logOk\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    if (!cc.isSharedFs(desc)) return;\n\n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n\n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());\n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n\n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n\n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n\n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"\", new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\"));\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2d19164145b2a65acf62a657c75f4a249b649c0","date":1601732857,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#checkSharedFSFailoverReplaced(CoreContainer,CoreDescriptor).mjava","sourceNew":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    if (!cc.isSharedFs(desc)) return;\n\n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n\n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());\n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n\n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n\n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n\n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"{}\",\n                new SolrException(ErrorCode.SERVER_ERROR, \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\")); // nowarn\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * See if coreNodeName has been taken over by another baseUrl and unload core\n   * + throw exception if it has been.\n   */\n  public static void checkSharedFSFailoverReplaced(CoreContainer cc, CoreDescriptor desc) {\n    if (!cc.isSharedFs(desc)) return;\n\n    ZkController zkController = cc.getZkController();\n    String thisCnn = zkController.getCoreNodeName(desc);\n    String thisBaseUrl = zkController.getBaseUrl();\n\n    log.debug(\"checkSharedFSFailoverReplaced running for coreNodeName={} baseUrl={}\", thisCnn, thisBaseUrl);\n\n    // if we see our core node name on a different base url, unload\n    final DocCollection docCollection = zkController.getClusterState().getCollectionOrNull(desc.getCloudDescriptor().getCollectionName());\n    if (docCollection != null && docCollection.getSlicesMap() != null) {\n      Map<String,Slice> slicesMap = docCollection.getSlicesMap();\n      for (Slice slice : slicesMap.values()) {\n        for (Replica replica : slice.getReplicas()) {\n\n          String cnn = replica.getName();\n          String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);\n          log.debug(\"compare against coreNodeName={} baseUrl={}\", cnn, baseUrl);\n\n          if (thisCnn != null && thisCnn.equals(cnn)\n              && !thisBaseUrl.equals(baseUrl)) {\n            if (cc.getLoadedCoreNames().contains(desc.getName())) {\n              cc.unload(desc.getName());\n            }\n\n            try {\n              FileUtils.deleteDirectory(desc.getInstanceDir().toFile());\n            } catch (IOException e) {\n              SolrException.log(log, \"Failed to delete instance dir for core:\"\n                  + desc.getName() + \" dir:\" + desc.getInstanceDir());\n            }\n            log.error(\"{}\",\n                new SolrException(ErrorCode.SERVER_ERROR, \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\")); // logOk\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Will not load SolrCore \" + desc.getName()\n                    + \" because it has been replaced due to failover.\");\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["344b0840364d990b29b97467bfcc766ff8325d11","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac"],"717e5ceb2acae36d422ec75e5a4ce9fac40506e1":["fb569fd721c41eafc2a2d788499a7df490c7f1a5"],"344b0840364d990b29b97467bfcc766ff8325d11":["c8c4677ab540889fa013693312bae3e5c4283df4"],"216382c52eb6bf24fc72851399bb3750e8ad7a97":["560c18d71dad43d675158783c3840f8c80d6d39c"],"fb569fd721c41eafc2a2d788499a7df490c7f1a5":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"ad4957cde742defe6db19689abdc267c5d948066":["216382c52eb6bf24fc72851399bb3750e8ad7a97"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"f9a989a32a073c55e3aef6f807a3474184bbcf49":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","c8c4677ab540889fa013693312bae3e5c4283df4"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["717e5ceb2acae36d422ec75e5a4ce9fac40506e1","344b0840364d990b29b97467bfcc766ff8325d11"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"c8c4677ab540889fa013693312bae3e5c4283df4":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b2d19164145b2a65acf62a657c75f4a249b649c0":["ad4957cde742defe6db19689abdc267c5d948066"],"560c18d71dad43d675158783c3840f8c80d6d39c":["344b0840364d990b29b97467bfcc766ff8325d11","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b2d19164145b2a65acf62a657c75f4a249b649c0"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["fb569fd721c41eafc2a2d788499a7df490c7f1a5","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"717e5ceb2acae36d422ec75e5a4ce9fac40506e1":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac"],"344b0840364d990b29b97467bfcc766ff8325d11":["c304e97e7c1d472bc70e801b35ee78583916c6cd","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","560c18d71dad43d675158783c3840f8c80d6d39c"],"fb569fd721c41eafc2a2d788499a7df490c7f1a5":["717e5ceb2acae36d422ec75e5a4ce9fac40506e1"],"216382c52eb6bf24fc72851399bb3750e8ad7a97":["ad4957cde742defe6db19689abdc267c5d948066"],"ad4957cde742defe6db19689abdc267c5d948066":["b2d19164145b2a65acf62a657c75f4a249b649c0"],"f9a989a32a073c55e3aef6f807a3474184bbcf49":["fb569fd721c41eafc2a2d788499a7df490c7f1a5"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["c8c4677ab540889fa013693312bae3e5c4283df4"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"c8c4677ab540889fa013693312bae3e5c4283df4":["344b0840364d990b29b97467bfcc766ff8325d11","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"b2d19164145b2a65acf62a657c75f4a249b649c0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"560c18d71dad43d675158783c3840f8c80d6d39c":["216382c52eb6bf24fc72851399bb3750e8ad7a97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}