{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenFilter#testGraphTokenStream().mjava","commits":[{"id":"7836a9b132efc1162fb9d817b3e766f0a82212be","date":1543916862,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenFilter#testGraphTokenStream().mjava","pathOld":"/dev/null","sourceNew":"  public void testGraphTokenStream() throws IOException {\n\n    TestGraphTokenizers.GraphTokenizer tok = new TestGraphTokenizers.GraphTokenizer();\n    GraphTokenFilter graph = new TestFilter(tok);\n\n    CharTermAttribute termAtt = graph.addAttribute(CharTermAttribute.class);\n    PositionIncrementAttribute posIncAtt = graph.addAttribute(PositionIncrementAttribute.class);\n\n    tok.setReader(new StringReader(\"a b/c d e/f:3 g/h i j k\"));\n    tok.reset();\n\n    assertFalse(graph.incrementGraph());\n    assertEquals(0, graph.cachedTokenCount());\n\n    assertTrue(graph.incrementBaseToken());\n    assertEquals(\"a\", termAtt.toString());\n    assertEquals(1, posIncAtt.getPositionIncrement());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"b\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"d\", termAtt.toString());\n    assertTrue(graph.incrementGraph());\n    assertEquals(\"a\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"c\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"d\", termAtt.toString());\n    assertFalse(graph.incrementGraph());\n    assertEquals(5, graph.cachedTokenCount());\n\n    assertTrue(graph.incrementBaseToken());\n    assertEquals(\"b\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"d\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"e\", termAtt.toString());\n    assertTrue(graph.incrementGraph());\n    assertEquals(\"b\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"d\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"f\", termAtt.toString());\n    assertFalse(graph.incrementGraph());\n    assertEquals(6, graph.cachedTokenCount());\n\n    assertTrue(graph.incrementBaseToken());\n    assertEquals(\"c\", termAtt.toString());\n    assertEquals(0, posIncAtt.getPositionIncrement());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"d\", termAtt.toString());\n    assertFalse(graph.incrementGraph());\n    assertEquals(6, graph.cachedTokenCount());\n\n    assertTrue(graph.incrementBaseToken());\n    assertEquals(\"d\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"e\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"g\", termAtt.toString());\n    assertTrue(graph.incrementGraph());\n    assertEquals(\"d\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"e\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"h\", termAtt.toString());\n    assertTrue(graph.incrementGraph());\n    assertEquals(\"d\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"f\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"j\", termAtt.toString());\n    assertFalse(graph.incrementGraph());\n    assertEquals(8, graph.cachedTokenCount());\n\n    //tok.setReader(new StringReader(\"a b/c d e/f:3 g/h i j k\"));\n\n    assertTrue(graph.incrementBaseToken());\n    assertEquals(\"e\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"g\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"i\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"j\", termAtt.toString());\n    assertTrue(graph.incrementGraph());\n    assertEquals(\"e\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"h\", termAtt.toString());\n    assertFalse(graph.incrementGraph());\n    assertEquals(8, graph.cachedTokenCount());\n\n    assertTrue(graph.incrementBaseToken());\n    assertEquals(\"f\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"j\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"k\", termAtt.toString());\n    assertFalse(graph.incrementGraphToken());\n    assertFalse(graph.incrementGraph());\n    assertEquals(8, graph.cachedTokenCount());\n\n    assertTrue(graph.incrementBaseToken());\n    assertEquals(\"g\", termAtt.toString());\n    assertTrue(graph.incrementGraphToken());\n    assertEquals(\"i\", termAtt.toString());\n    assertFalse(graph.incrementGraph());\n    assertEquals(8, graph.cachedTokenCount());\n\n    assertTrue(graph.incrementBaseToken());\n    assertEquals(\"h\", termAtt.toString());\n    assertFalse(graph.incrementGraph());\n    assertEquals(8, graph.cachedTokenCount());\n\n    assertTrue(graph.incrementBaseToken());\n    assertTrue(graph.incrementBaseToken());\n    assertTrue(graph.incrementBaseToken());\n    assertEquals(\"k\", termAtt.toString());\n    assertFalse(graph.incrementGraphToken());\n    assertEquals(0, graph.getTrailingPositions());\n    assertFalse(graph.incrementGraph());\n    assertFalse(graph.incrementBaseToken());\n    assertEquals(8, graph.cachedTokenCount());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7836a9b132efc1162fb9d817b3e766f0a82212be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7836a9b132efc1162fb9d817b3e766f0a82212be"]},"commit2Childs":{"7836a9b132efc1162fb9d817b3e766f0a82212be":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7836a9b132efc1162fb9d817b3e766f0a82212be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}