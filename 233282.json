{"path":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#readTvfPointers(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#readTvfPointers(int).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsReader#readTvfPointers(int).mjava","sourceNew":"  // Reads the long[] offsets into TVF; you have to pre-seek\n  // tvx/tvd to the right point\n  final private long[] readTvfPointers(int fieldCount) throws IOException {\n    // Compute position in the tvf file\n    long position;\n    if (format >= FORMAT_VERSION2)\n      position = tvx.readLong();\n    else\n      position = tvd.readVLong();\n\n    long[] tvfPointers = new long[fieldCount];\n    tvfPointers[0] = position;\n\n    for (int i = 1; i < fieldCount; i++) {\n      position += tvd.readVLong();\n      tvfPointers[i] = position;\n    }\n\n    return tvfPointers;\n  }\n\n","sourceOld":"  // Reads the long[] offsets into TVF; you have to pre-seek\n  // tvx/tvd to the right point\n  final private long[] readTvfPointers(int fieldCount) throws IOException {\n    // Compute position in the tvf file\n    long position;\n    if (format >= FORMAT_VERSION2)\n      position = tvx.readLong();\n    else\n      position = tvd.readVLong();\n\n    long[] tvfPointers = new long[fieldCount];\n    tvfPointers[0] = position;\n\n    for (int i = 1; i < fieldCount; i++) {\n      position += tvd.readVLong();\n      tvfPointers[i] = position;\n    }\n\n    return tvfPointers;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6267e1ce56c2eec111425690cd04e251b6f14952","date":1275222352,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#readTvfPointers(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#readTvfPointers(int).mjava","sourceNew":"  // Reads the long[] offsets into TVF; you have to pre-seek\n  // tvx/tvd to the right point\n  private long[] readTvfPointers(int fieldCount) throws IOException {\n    // Compute position in the tvf file\n    long position = tvx.readLong();\n\n    long[] tvfPointers = new long[fieldCount];\n    tvfPointers[0] = position;\n\n    for (int i = 1; i < fieldCount; i++) {\n      position += tvd.readVLong();\n      tvfPointers[i] = position;\n    }\n\n    return tvfPointers;\n  }\n\n","sourceOld":"  // Reads the long[] offsets into TVF; you have to pre-seek\n  // tvx/tvd to the right point\n  final private long[] readTvfPointers(int fieldCount) throws IOException {\n    // Compute position in the tvf file\n    long position;\n    if (format >= FORMAT_VERSION2)\n      position = tvx.readLong();\n    else\n      position = tvd.readVLong();\n\n    long[] tvfPointers = new long[fieldCount];\n    tvfPointers[0] = position;\n\n    for (int i = 1; i < fieldCount; i++) {\n      position += tvd.readVLong();\n      tvfPointers[i] = position;\n    }\n\n    return tvfPointers;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#readTvfPointers(int).mjava","sourceNew":null,"sourceOld":"  // Reads the long[] offsets into TVF; you have to pre-seek\n  // tvx/tvd to the right point\n  private long[] readTvfPointers(int fieldCount) throws IOException {\n    // Compute position in the tvf file\n    long position = tvx.readLong();\n\n    long[] tvfPointers = new long[fieldCount];\n    tvfPointers[0] = position;\n\n    for (int i = 1; i < fieldCount; i++) {\n      position += tvd.readVLong();\n      tvfPointers[i] = position;\n    }\n\n    return tvfPointers;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6267e1ce56c2eec111425690cd04e251b6f14952":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["6267e1ce56c2eec111425690cd04e251b6f14952"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6267e1ce56c2eec111425690cd04e251b6f14952":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6267e1ce56c2eec111425690cd04e251b6f14952"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}