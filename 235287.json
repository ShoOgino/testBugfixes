{"path":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n                                                     .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), TextField.TYPE_STORED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newField(\"field\", English.intToEnglish(i), TextField.TYPE_STORED));\n      doc.add(newField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n                                                     .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), TextField.TYPE_STORED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newField(\"field\", English.intToEnglish(i), TextField.TYPE_STORED));\n      doc.add(newField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n                                                     .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), TextField.TYPE_STORED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newField(\"field\", English.intToEnglish(i), TextField.TYPE_STORED));\n      doc.add(newField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n                                                     .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), TextField.TYPE_STORED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newField(\"field\", English.intToEnglish(i), TextField.TYPE_STORED));\n      doc.add(newField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n                                                     .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n                                                     .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), TextField.TYPE_STORED);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newField(\"field\", English.intToEnglish(i), TextField.TYPE_STORED));\n      doc.add(newField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n                                                     .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.shutdown();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n                                                     .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new PayloadAnalyzer())\n           .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.shutdown();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n                                                     .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.shutdown();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new PayloadAnalyzer())\n           .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new PayloadAnalyzer())\n           .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.shutdown();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadTermQuery#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new PayloadAnalyzer())\n           .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new PayloadAnalyzer())\n           .setSimilarity(similarity).setMergePolicy(newLogMergePolicy()));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      Field noPayloadField = newTextField(PayloadHelper.NO_PAYLOAD_FIELD, English.intToEnglish(i), Field.Store.YES);\n      //noPayloadField.setBoost(0);\n      doc.add(noPayloadField);\n      doc.add(newTextField(\"field\", English.intToEnglish(i), Field.Store.YES));\n      doc.add(newTextField(\"multiField\", English.intToEnglish(i) + \"  \" + English.intToEnglish(i), Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}