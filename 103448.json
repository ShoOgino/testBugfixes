{"path":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testAddDistinct().mjava","commits":[{"id":"b4d3dd8938b47955be7cebf7724fa9ae6122f106","date":1520246230,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testAddDistinct().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAddDistinct() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//doc/arr[@name='cat'][count(str)=3]\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", Arrays.asList(new String[]{\"bbb\", \"bbb\"})));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//doc/arr[@name='cat'][count(str)=3]\"); //'bbb' already present will not be added again\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"5\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\"); //'cat' field not present, do 'add' atomic operation\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5b5fa3584550267bf4209f334513a9d5850dd1e0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5b5fa3584550267bf4209f334513a9d5850dd1e0","date":1591795784,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testAddDistinct().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest#testAddDistinct().mjava","sourceNew":"  @Test\n  public void testAddDistinct() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    doc.setField(\"atomic_is\", 10);\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    doc.setField(\"atomic_is\", ImmutableMap.of(\"add-distinct\", 10));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"),\n        \"//doc/arr[@name='cat'][count(str)=3]\",\n        \"//doc/arr[@name='atomic_is'][count(int)=1]\"\n    );\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", Arrays.asList(\"bbb\", \"bbb\")));\n    doc.setField(\"atomic_is\", ImmutableMap.of(\"add-distinct\", Arrays.asList(10, 34)));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"),\n        \"//doc/arr[@name='cat'][count(str)=3]\", //'bbb' already present will not be added again\n        \"//doc/arr[@name='atomic_is'][count(int)=2]\"\n    );\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"5\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\"); //'cat' field not present, do 'add' atomic operation\n  }\n\n","sourceOld":"  @Test\n  public void testAddDistinct() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//doc/arr[@name='cat'][count(str)=3]\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", Arrays.asList(new String[]{\"bbb\", \"bbb\"})));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//doc/arr[@name='cat'][count(str)=3]\"); //'bbb' already present will not be added again\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"5\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\"); //'cat' field not present, do 'add' atomic operation\n  }\n\n","bugFix":["b4d3dd8938b47955be7cebf7724fa9ae6122f106"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b5fa3584550267bf4209f334513a9d5850dd1e0":["b4d3dd8938b47955be7cebf7724fa9ae6122f106"],"b4d3dd8938b47955be7cebf7724fa9ae6122f106":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b5fa3584550267bf4209f334513a9d5850dd1e0"]},"commit2Childs":{"5b5fa3584550267bf4209f334513a9d5850dd1e0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b4d3dd8938b47955be7cebf7724fa9ae6122f106":["5b5fa3584550267bf4209f334513a9d5850dd1e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4d3dd8938b47955be7cebf7724fa9ae6122f106"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}