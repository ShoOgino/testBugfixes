{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,Type).mjava","commits":[{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,Type).mjava","pathOld":"/dev/null","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, Type docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39d51e9acac1e629cffe47855e85dc6dedc4754d","date":1305711497,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,Type).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, Type docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"39d51e9acac1e629cffe47855e85dc6dedc4754d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"39d51e9acac1e629cffe47855e85dc6dedc4754d":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":["39d51e9acac1e629cffe47855e85dc6dedc4754d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["39d51e9acac1e629cffe47855e85dc6dedc4754d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}