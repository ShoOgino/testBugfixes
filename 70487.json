{"path":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCheckSum(Checksum,File).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCheckSum(Checksum,File).mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getCheckSum(Checksum,File).mjava","sourceNew":"  static Long getCheckSum(Checksum checksum, File f) {\n    FileInputStream fis = null;\n    checksum.reset();\n    byte[] buffer = new byte[1024 * 1024];\n    int bytesRead;\n    try {\n      fis = new FileInputStream(f);\n      while ((bytesRead = fis.read(buffer)) >= 0)\n        checksum.update(buffer, 0, bytesRead);\n      return checksum.getValue();\n    } catch (Exception e) {\n      LOG.warn(\"Exception in finding checksum of \" + f, e);\n    } finally {\n      IOUtils.closeQuietly(fis);\n    }\n    return null;\n  }\n\n","sourceOld":"  static Long getCheckSum(Checksum checksum, File f) {\n    FileInputStream fis = null;\n    checksum.reset();\n    byte[] buffer = new byte[1024 * 1024];\n    int bytesRead;\n    try {\n      fis = new FileInputStream(f);\n      while ((bytesRead = fis.read(buffer)) >= 0)\n        checksum.update(buffer, 0, bytesRead);\n      return checksum.getValue();\n    } catch (Exception e) {\n      LOG.warn(\"Exception in finding checksum of \" + f, e);\n    } finally {\n      IOUtils.closeQuietly(fis);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCheckSum(Checksum,File).mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getCheckSum(Checksum,File).mjava","sourceNew":"  static Long getCheckSum(Checksum checksum, File f) {\n    FileInputStream fis = null;\n    checksum.reset();\n    byte[] buffer = new byte[1024 * 1024];\n    int bytesRead;\n    try {\n      fis = new FileInputStream(f);\n      while ((bytesRead = fis.read(buffer)) >= 0)\n        checksum.update(buffer, 0, bytesRead);\n      return checksum.getValue();\n    } catch (Exception e) {\n      LOG.warn(\"Exception in finding checksum of \" + f, e);\n    } finally {\n      IOUtils.closeQuietly(fis);\n    }\n    return null;\n  }\n\n","sourceOld":"  static Long getCheckSum(Checksum checksum, File f) {\n    FileInputStream fis = null;\n    checksum.reset();\n    byte[] buffer = new byte[1024 * 1024];\n    int bytesRead;\n    try {\n      fis = new FileInputStream(f);\n      while ((bytesRead = fis.read(buffer)) >= 0)\n        checksum.update(buffer, 0, bytesRead);\n      return checksum.getValue();\n    } catch (Exception e) {\n      LOG.warn(\"Exception in finding checksum of \" + f, e);\n    } finally {\n      IOUtils.closeQuietly(fis);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCheckSum(Checksum,File).mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getCheckSum(Checksum,File).mjava","sourceNew":"  static Long getCheckSum(Checksum checksum, File f) {\n    FileInputStream fis = null;\n    checksum.reset();\n    byte[] buffer = new byte[1024 * 1024];\n    int bytesRead;\n    try {\n      fis = new FileInputStream(f);\n      while ((bytesRead = fis.read(buffer)) >= 0)\n        checksum.update(buffer, 0, bytesRead);\n      return checksum.getValue();\n    } catch (Exception e) {\n      LOG.warn(\"Exception in finding checksum of \" + f, e);\n    } finally {\n      IOUtils.closeQuietly(fis);\n    }\n    return null;\n  }\n\n","sourceOld":"  static Long getCheckSum(Checksum checksum, File f) {\n    FileInputStream fis = null;\n    checksum.reset();\n    byte[] buffer = new byte[1024 * 1024];\n    int bytesRead;\n    try {\n      fis = new FileInputStream(f);\n      while ((bytesRead = fis.read(buffer)) >= 0)\n        checksum.update(buffer, 0, bytesRead);\n      return checksum.getValue();\n    } catch (Exception e) {\n      LOG.warn(\"Exception in finding checksum of \" + f, e);\n    } finally {\n      IOUtils.closeQuietly(fis);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCheckSum(Checksum,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCheckSum(Checksum,File).mjava","sourceNew":"  static Long getCheckSum(Checksum checksum, File f) {\n    FileInputStream fis = null;\n    checksum.reset();\n    byte[] buffer = new byte[1024 * 1024];\n    int bytesRead;\n    try {\n      fis = new FileInputStream(f);\n      while ((bytesRead = fis.read(buffer)) >= 0)\n        checksum.update(buffer, 0, bytesRead);\n      return checksum.getValue();\n    } catch (Exception e) {\n      log.warn(\"Exception in finding checksum of \" + f, e);\n    } finally {\n      IOUtils.closeQuietly(fis);\n    }\n    return null;\n  }\n\n","sourceOld":"  static Long getCheckSum(Checksum checksum, File f) {\n    FileInputStream fis = null;\n    checksum.reset();\n    byte[] buffer = new byte[1024 * 1024];\n    int bytesRead;\n    try {\n      fis = new FileInputStream(f);\n      while ((bytesRead = fis.read(buffer)) >= 0)\n        checksum.update(buffer, 0, bytesRead);\n      return checksum.getValue();\n    } catch (Exception e) {\n      LOG.warn(\"Exception in finding checksum of \" + f, e);\n    } finally {\n      IOUtils.closeQuietly(fis);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4","date":1588172214,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCheckSum(Checksum,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getCheckSum(Checksum,File).mjava","sourceNew":"  static Long getCheckSum(Checksum checksum, File f) {\n    FileInputStream fis = null;\n    checksum.reset();\n    byte[] buffer = new byte[1024 * 1024];\n    int bytesRead;\n    try {\n      fis = new FileInputStream(f);\n      while ((bytesRead = fis.read(buffer)) >= 0)\n        checksum.update(buffer, 0, bytesRead);\n      return checksum.getValue();\n    } catch (Exception e) {\n      log.warn(\"Exception in finding checksum of {}\", f, e);\n    } finally {\n      IOUtils.closeQuietly(fis);\n    }\n    return null;\n  }\n\n","sourceOld":"  static Long getCheckSum(Checksum checksum, File f) {\n    FileInputStream fis = null;\n    checksum.reset();\n    byte[] buffer = new byte[1024 * 1024];\n    int bytesRead;\n    try {\n      fis = new FileInputStream(f);\n      while ((bytesRead = fis.read(buffer)) >= 0)\n        checksum.update(buffer, 0, bytesRead);\n      return checksum.getValue();\n    } catch (Exception e) {\n      log.warn(\"Exception in finding checksum of \" + f, e);\n    } finally {\n      IOUtils.closeQuietly(fis);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}