{"path":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","commits":[{"id":"3ee067e27d1cce6d2d5d64280007410c2e1a38d8","date":1001438945,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * @param wordfile  Complete path to the wordlist\n\t */\n\tpublic static Hashtable getWordtable( String wordfile ) {\n\t\tif ( wordfile == null ) {\n\t\t\treturn new Hashtable();\n\t\t}\n\t\tFile absoluteName = new File( wordfile );\n\t\treturn getWordtable( absoluteName );\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b027969b494a02d6f7a03a43537cc6935afce2a","date":1008019104,"type":3,"author":"gschwarz","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","sourceNew":"\t/**\n\t * @param wordfile  Complete path to the wordlist\n\t */\n\tpublic static Hashtable getWordtable( String wordfile ) {\n\t\tif ( wordfile == null ) {\n\t\t\treturn new Hashtable();\n\t\t}\n\t\treturn getWordtable( new File( wordfile ) );\n\t}\n\n","sourceOld":"\t/**\n\t * @param wordfile  Complete path to the wordlist\n\t */\n\tpublic static Hashtable getWordtable( String wordfile ) {\n\t\tif ( wordfile == null ) {\n\t\t\treturn new Hashtable();\n\t\t}\n\t\tFile absoluteName = new File( wordfile );\n\t\treturn getWordtable( absoluteName );\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e","date":1029691996,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","sourceNew":"    /**\n     * @param wordfile  Complete path to the wordlist\n     */\n    public static Hashtable getWordtable( String wordfile ) {\n\tif ( wordfile == null ) {\n\t    return new Hashtable();\n\t}\n\treturn getWordtable( new File( wordfile ) );\n    }\n\n","sourceOld":"\t/**\n\t * @param wordfile  Complete path to the wordlist\n\t */\n\tpublic static Hashtable getWordtable( String wordfile ) {\n\t\tif ( wordfile == null ) {\n\t\t\treturn new Hashtable();\n\t\t}\n\t\treturn getWordtable( new File( wordfile ) );\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da84b655ba7795af0018633fd31fba21fb61e9c1","date":1078877882,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","sourceNew":"  /**\n   * @param wordfile  Complete path to the wordlist\n   */\n  public static Hashtable getWordtable(String wordfile) {\n    if (wordfile == null) {\n      return new Hashtable();\n    }\n    return getWordtable(new File(wordfile));\n  }\n\n","sourceOld":"    /**\n     * @param wordfile  Complete path to the wordlist\n     */\n    public static Hashtable getWordtable( String wordfile ) {\n\tif ( wordfile == null ) {\n\t    return new Hashtable();\n\t}\n\treturn getWordtable( new File( wordfile ) );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d228cde601d14f5ebb8739acab29a9b9a3a8098e","date":1080579215,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","sourceNew":"  /**\n   * @param wordfile Complete path to the wordlist\n   */\n  public static Hashtable getWordtable(String wordfile) throws IOException {\n    if (wordfile == null) {\n      return new Hashtable();\n    }\n    return getWordtable(new File(wordfile));\n  }\n\n","sourceOld":"  /**\n   * @param wordfile  Complete path to the wordlist\n   */\n  public static Hashtable getWordtable(String wordfile) {\n    if (wordfile == null) {\n      return new Hashtable();\n    }\n    return getWordtable(new File(wordfile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4230eef3a047e2a85e989e7ced62bf7fd4a9f859","date":1080661498,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","sourceNew":"  /**\n   * @param wordfile  Complete path to the wordlist\n   * \n   * @deprecated Use {@link #getWordSet(File)} getWordSet(File)} instead\n   */\n  public static Hashtable getWordtable(String wordfile) throws IOException {\n    return getWordtable(new File(wordfile));\n  }\n\n","sourceOld":"  /**\n   * @param wordfile Complete path to the wordlist\n   */\n  public static Hashtable getWordtable(String wordfile) throws IOException {\n    if (wordfile == null) {\n      return new Hashtable();\n    }\n    return getWordtable(new File(wordfile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2","date":1092688309,"type":4,"author":"Daniel Naber","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * @param wordfile  Complete path to the wordlist\n   * \n   * @deprecated Use {@link #getWordSet(File)} getWordSet(File)} instead\n   */\n  public static Hashtable getWordtable(String wordfile) throws IOException {\n    return getWordtable(new File(wordfile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"266fc7afc9269ff0e59f58194b01d4b42784ba3a","date":1095708421,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param wordfile  Complete path to the wordlist\n   * \n   * @deprecated Use {@link #getWordSet(File)} getWordSet(File)} instead\n   */\n  public static Hashtable getWordtable(String wordfile) throws IOException {\n    return getWordtable(new File(wordfile));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#getWordtable(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * @param wordfile  Complete path to the wordlist\n   * \n   * @deprecated Use {@link #getWordSet(File)} getWordSet(File)} instead\n   */\n  public static Hashtable getWordtable(String wordfile) throws IOException {\n    return getWordtable(new File(wordfile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ee067e27d1cce6d2d5d64280007410c2e1a38d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2":["4230eef3a047e2a85e989e7ced62bf7fd4a9f859"],"4230eef3a047e2a85e989e7ced62bf7fd4a9f859":["d228cde601d14f5ebb8739acab29a9b9a3a8098e"],"da84b655ba7795af0018633fd31fba21fb61e9c1":["f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["266fc7afc9269ff0e59f58194b01d4b42784ba3a"],"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e":["9b027969b494a02d6f7a03a43537cc6935afce2a"],"9b027969b494a02d6f7a03a43537cc6935afce2a":["3ee067e27d1cce6d2d5d64280007410c2e1a38d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d228cde601d14f5ebb8739acab29a9b9a3a8098e":["da84b655ba7795af0018633fd31fba21fb61e9c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"266fc7afc9269ff0e59f58194b01d4b42784ba3a":["eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2"]},"commit2Childs":{"3ee067e27d1cce6d2d5d64280007410c2e1a38d8":["9b027969b494a02d6f7a03a43537cc6935afce2a"],"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2":["266fc7afc9269ff0e59f58194b01d4b42784ba3a"],"4230eef3a047e2a85e989e7ced62bf7fd4a9f859":["eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2"],"da84b655ba7795af0018633fd31fba21fb61e9c1":["d228cde601d14f5ebb8739acab29a9b9a3a8098e"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ee067e27d1cce6d2d5d64280007410c2e1a38d8"],"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e":["da84b655ba7795af0018633fd31fba21fb61e9c1"],"9b027969b494a02d6f7a03a43537cc6935afce2a":["f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e"],"d228cde601d14f5ebb8739acab29a9b9a3a8098e":["4230eef3a047e2a85e989e7ced62bf7fd4a9f859"],"266fc7afc9269ff0e59f58194b01d4b42784ba3a":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}