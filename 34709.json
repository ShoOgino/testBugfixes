{"path":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","sourceNew":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * @see #addField(String, Object, float)\n   * @param name name of the field to add\n   * @param value value of the field\n   */\n  public void addField(String name, Object value) \n  {\n    addField(name, value, 1.0f );\n  }\n\n","sourceOld":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * @see #addField(String, Object, float)\n   * @param name name of the field to add\n   * @param value value of the field\n   */\n  public void addField(String name, Object value) \n  {\n    addField(name, value, 1.0f );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","sourceNew":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * @see #addField(String, Object, float)\n   * @param name name of the field to add\n   * @param value value of the field\n   */\n  public void addField(String name, Object value) \n  {\n    addField(name, value, 1.0f );\n  }\n\n","sourceOld":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * @see #addField(String, Object, float)\n   * @param name name of the field to add\n   * @param value value of the field\n   */\n  public void addField(String name, Object value) \n  {\n    addField(name, value, 1.0f );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","sourceNew":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * @see #addField(String, Object, float)\n   * @param name name of the field to add\n   * @param value value of the field\n   */\n  public void addField(String name, Object value) \n  {\n    addField(name, value, 1.0f );\n  }\n\n","sourceOld":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * @see #addField(String, Object, float)\n   * @param name name of the field to add\n   * @param value value of the field\n   */\n  public void addField(String name, Object value) \n  {\n    addField(name, value, 1.0f );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcede1b4eab17943b211f8bf2c39965619153b7d","date":1359206377,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","sourceNew":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   * @see #addField(String, Object, float)\n   */\n  public void addField(String name, Object value) \n  {\n    addField(name, value, 1.0f );\n  }\n\n","sourceOld":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * @see #addField(String, Object, float)\n   * @param name name of the field to add\n   * @param value value of the field\n   */\n  public void addField(String name, Object value) \n  {\n    addField(name, value, 1.0f );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd45d4a2ee01a1932d33eec42f5272c2402da679","date":1359316912,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","sourceNew":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   * @see #addField(String, Object, float)\n   */\n  public void addField(String name, Object value) \n  {\n    addField(name, value, 1.0f );\n  }\n\n","sourceOld":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * @see #addField(String, Object, float)\n   * @param name name of the field to add\n   * @param value value of the field\n   */\n  public void addField(String name, Object value) \n  {\n    addField(name, value, 1.0f );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","sourceNew":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   */\n  public void addField(String name, Object value) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value);\n    }\n    else {\n      field.addValue( value );\n    }\n  }\n\n","sourceOld":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   * @see #addField(String, Object, float)\n   */\n  public void addField(String name, Object value) \n  {\n    addField(name, value, 1.0f );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5ce7c704ca874aa623a99f2669737b52ec71cfc","date":1528728510,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","sourceNew":"  /** \n   * Add a field value to any existing values that may or may not exist.\n   * \n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   */\n  public void addField(String name, Object value) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value);\n    }\n    else {\n      field.addValue( value );\n    }\n  }\n\n","sourceOld":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   */\n  public void addField(String name, Object value) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value);\n    }\n    else {\n      field.addValue( value );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","sourceNew":"  /** \n   * Add a field value to any existing values that may or may not exist.\n   * \n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   */\n  public void addField(String name, Object value) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value);\n    }\n    else {\n      field.addValue( value );\n    }\n  }\n\n","sourceOld":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   */\n  public void addField(String name, Object value) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value);\n    }\n    else {\n      field.addValue( value );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputDocument#addField(String,Object).mjava","sourceNew":"  /** \n   * Add a field value to any existing values that may or may not exist.\n   * \n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   */\n  public void addField(String name, Object value) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value);\n    }\n    else {\n      field.addValue( value );\n    }\n  }\n\n","sourceOld":"  /** \n   * Add a field with implied null value for boost.\n   * \n   * The class type of value and the name parameter should match schema.xml. \n   * schema.xml can be found in conf directory under the solr home by default.\n   * \n   * @param name Name of the field, should match one of the field names defined under \"fields\" tag in schema.xml.\n   * @param value Value of the field, should be of same class type as defined by \"type\" attribute of the corresponding field in schema.xml. \n   */\n  public void addField(String name, Object value) \n  {\n    SolrInputField field = _fields.get( name );\n    if( field == null || field.value == null ) {\n      setField(name, value);\n    }\n    else {\n      field.addValue( value );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fcede1b4eab17943b211f8bf2c39965619153b7d":["c26f00b574427b55127e869b935845554afde1fa"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["acd9883560fd89e6448b2b447302fe543040cd4f","c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd45d4a2ee01a1932d33eec42f5272c2402da679":["c26f00b574427b55127e869b935845554afde1fa","fcede1b4eab17943b211f8bf2c39965619153b7d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"acd9883560fd89e6448b2b447302fe543040cd4f":["fcede1b4eab17943b211f8bf2c39965619153b7d"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["acd9883560fd89e6448b2b447302fe543040cd4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["acd9883560fd89e6448b2b447302fe543040cd4f","c5ce7c704ca874aa623a99f2669737b52ec71cfc"]},"commit2Childs":{"fcede1b4eab17943b211f8bf2c39965619153b7d":["dd45d4a2ee01a1932d33eec42f5272c2402da679","acd9883560fd89e6448b2b447302fe543040cd4f"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["fcede1b4eab17943b211f8bf2c39965619153b7d","dd45d4a2ee01a1932d33eec42f5272c2402da679"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","c5ce7c704ca874aa623a99f2669737b52ec71cfc","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","dd45d4a2ee01a1932d33eec42f5272c2402da679","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}