{"path":"solr/contrib/solr-morphlines-core/src/java/org/apache/solr/morphlines/solr/SanitizeUnknownSolrFieldsBuilder.SanitizeUnknownSolrFields#doProcess(Record).mjava","commits":[{"id":"d6e604e9030fb0cabf0c5a85ae6039921a81419c","date":1386009743,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/solr-morphlines-core/src/java/org/apache/solr/morphlines/solr/SanitizeUnknownSolrFieldsBuilder.SanitizeUnknownSolrFields#doProcess(Record).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected boolean doProcess(Record record) {\n      Collection<Map.Entry> entries = new ArrayList<Map.Entry>(record.getFields().asMap().entrySet());\n      for (Map.Entry<String, Collection<Object>> entry : entries) {\n        String key = entry.getKey();\n        if (schema.getFieldOrNull(key) == null) {\n          LOG.debug(\"Sanitizing unknown Solr field: {}\", key);\n          Collection values = entry.getValue();\n          if (renameToPrefix != null) {\n            record.getFields().putAll(renameToPrefix + key, values);\n          }\n          values.clear(); // implicitly removes key from record\n        }\n      }\n      return super.doProcess(record);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/java/org/apache/solr/morphlines/solr/SanitizeUnknownSolrFieldsBuilder.SanitizeUnknownSolrFields#doProcess(Record).mjava","pathOld":"solr/contrib/solr-morphlines-core/src/java/org/apache/solr/morphlines/solr/SanitizeUnknownSolrFieldsBuilder.SanitizeUnknownSolrFields#doProcess(Record).mjava","sourceNew":"    @Override\n    protected boolean doProcess(Record record) {\n      Collection<Map.Entry> entries = new ArrayList<Map.Entry>(record.getFields().asMap().entrySet());\n      for (Map.Entry<String, Collection<Object>> entry : entries) {\n        String key = entry.getKey();\n        if (schema.getFieldOrNull(key) == null) {\n          LOG.debug(\"Sanitizing unknown Solr field: {}\", key);\n          Collection values = entry.getValue();\n          if (renameToPrefix != null) {\n            record.getFields().putAll(renameToPrefix + key, values);\n          }\n          values.clear(); // implicitly removes key from record\n        }\n      }\n      return super.doProcess(record);\n    }\n\n","sourceOld":"    @Override\n    protected boolean doProcess(Record record) {\n      Collection<Map.Entry> entries = new ArrayList<Map.Entry>(record.getFields().asMap().entrySet());\n      for (Map.Entry<String, Collection<Object>> entry : entries) {\n        String key = entry.getKey();\n        if (schema.getFieldOrNull(key) == null) {\n          LOG.debug(\"Sanitizing unknown Solr field: {}\", key);\n          Collection values = entry.getValue();\n          if (renameToPrefix != null) {\n            record.getFields().putAll(renameToPrefix + key, values);\n          }\n          values.clear(); // implicitly removes key from record\n        }\n      }\n      return super.doProcess(record);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["d6e604e9030fb0cabf0c5a85ae6039921a81419c"],"d6e604e9030fb0cabf0c5a85ae6039921a81419c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d6e604e9030fb0cabf0c5a85ae6039921a81419c":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6e604e9030fb0cabf0c5a85ae6039921a81419c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}