{"path":"lucene/core/src/java/org/apache/lucene/index/CodecReader#checkIntegrity().mjava","commits":[{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#checkIntegrity().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#checkIntegrity().mjava","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // terms/postings\n    getPostingsReader().checkIntegrity();\n    \n    // norms\n    if (getNormsReader() != null) {\n      getNormsReader().checkIntegrity();\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      getDocValuesReader().checkIntegrity();\n    }\n\n    // stored fields\n    if (getFieldsReader() != null) {\n      getFieldsReader().checkIntegrity();\n    }\n    \n    // term vectors\n    if (getTermVectorsReader() != null) {\n      getTermVectorsReader().checkIntegrity();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n\n    // stored fields\n    getFieldsReader().checkIntegrity();\n    \n    // term vectors\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader != null) {\n      termVectorsReader.checkIntegrity();\n    }\n    \n    // terms/postings\n    if (core.fields != null) {\n      core.fields.checkIntegrity();\n    }\n    \n    // norms\n    if (core.normsProducer != null) {\n      core.normsProducer.checkIntegrity();\n    }\n    \n    // docvalues\n    if (docValuesProducer != null) {\n      docValuesProducer.checkIntegrity();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11a4140b15efc64fe1f3dc86b79679d3474add50","date":1457130322,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#checkIntegrity().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CodecReader#checkIntegrity().mjava","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // terms/postings\n    getPostingsReader().checkIntegrity();\n    \n    // norms\n    if (getNormsReader() != null) {\n      getNormsReader().checkIntegrity();\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      getDocValuesReader().checkIntegrity();\n    }\n\n    // stored fields\n    if (getFieldsReader() != null) {\n      getFieldsReader().checkIntegrity();\n    }\n    \n    // term vectors\n    if (getTermVectorsReader() != null) {\n      getTermVectorsReader().checkIntegrity();\n    }\n\n    // points\n    if (getPointReader() != null) {\n      getPointReader().checkIntegrity();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // terms/postings\n    getPostingsReader().checkIntegrity();\n    \n    // norms\n    if (getNormsReader() != null) {\n      getNormsReader().checkIntegrity();\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      getDocValuesReader().checkIntegrity();\n    }\n\n    // stored fields\n    if (getFieldsReader() != null) {\n      getFieldsReader().checkIntegrity();\n    }\n    \n    // term vectors\n    if (getTermVectorsReader() != null) {\n      getTermVectorsReader().checkIntegrity();\n    }\n  }\n\n","bugFix":null,"bugIntro":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"922ddd897402a6df25c766ea8300443be5e82b3d","date":1457157606,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#checkIntegrity().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CodecReader#checkIntegrity().mjava","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // terms/postings\n    getPostingsReader().checkIntegrity();\n    \n    // norms\n    if (getNormsReader() != null) {\n      getNormsReader().checkIntegrity();\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      getDocValuesReader().checkIntegrity();\n    }\n\n    // stored fields\n    if (getFieldsReader() != null) {\n      getFieldsReader().checkIntegrity();\n    }\n    \n    // term vectors\n    if (getTermVectorsReader() != null) {\n      getTermVectorsReader().checkIntegrity();\n    }\n\n    // points\n    if (getPointReader() != null) {\n      getPointReader().checkIntegrity();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // terms/postings\n    getPostingsReader().checkIntegrity();\n    \n    // norms\n    if (getNormsReader() != null) {\n      getNormsReader().checkIntegrity();\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      getDocValuesReader().checkIntegrity();\n    }\n\n    // stored fields\n    if (getFieldsReader() != null) {\n      getFieldsReader().checkIntegrity();\n    }\n    \n    // term vectors\n    if (getTermVectorsReader() != null) {\n      getTermVectorsReader().checkIntegrity();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#checkIntegrity().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CodecReader#checkIntegrity().mjava","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // terms/postings\n    getPostingsReader().checkIntegrity();\n    \n    // norms\n    if (getNormsReader() != null) {\n      getNormsReader().checkIntegrity();\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      getDocValuesReader().checkIntegrity();\n    }\n\n    // stored fields\n    if (getFieldsReader() != null) {\n      getFieldsReader().checkIntegrity();\n    }\n    \n    // term vectors\n    if (getTermVectorsReader() != null) {\n      getTermVectorsReader().checkIntegrity();\n    }\n\n    // points\n    if (getPointsReader() != null) {\n      getPointsReader().checkIntegrity();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void checkIntegrity() throws IOException {\n    ensureOpen();\n    \n    // terms/postings\n    getPostingsReader().checkIntegrity();\n    \n    // norms\n    if (getNormsReader() != null) {\n      getNormsReader().checkIntegrity();\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      getDocValuesReader().checkIntegrity();\n    }\n\n    // stored fields\n    if (getFieldsReader() != null) {\n      getFieldsReader().checkIntegrity();\n    }\n    \n    // term vectors\n    if (getTermVectorsReader() != null) {\n      getTermVectorsReader().checkIntegrity();\n    }\n\n    // points\n    if (getPointReader() != null) {\n      getPointReader().checkIntegrity();\n    }\n  }\n\n","bugFix":["11a4140b15efc64fe1f3dc86b79679d3474add50"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11a4140b15efc64fe1f3dc86b79679d3474add50":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["922ddd897402a6df25c766ea8300443be5e82b3d"],"922ddd897402a6df25c766ea8300443be5e82b3d":["505bff044e47a553f461b6f4484d1d08faf4ac85","11a4140b15efc64fe1f3dc86b79679d3474add50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"505bff044e47a553f461b6f4484d1d08faf4ac85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"]},"commit2Childs":{"11a4140b15efc64fe1f3dc86b79679d3474add50":["922ddd897402a6df25c766ea8300443be5e82b3d"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"922ddd897402a6df25c766ea8300443be5e82b3d":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["11a4140b15efc64fe1f3dc86b79679d3474add50","922ddd897402a6df25c766ea8300443be5e82b3d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}