{"path":"src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#set(Object,Object).mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#set(Object,Object).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#set(Object,Object).mjava","sourceNew":"    private void set(Object obj, Object v) {\n      try {\n        if (field != null) {\n          field.set(obj, v);\n        } else if (setter != null) {\n          setter.invoke(obj, v);\n        }\n      } \n      catch (Exception e) {\n        throw new RuntimeException(\"Exception while setting value : \"+v+\" on \" + (field != null ? field : setter), e);\n      }\n    }\n\n","sourceOld":"    private void set(Object obj, Object v) {\n      try {\n        if (field != null) {\n          field.set(obj, v);\n        } else if (setter != null) {\n          setter.invoke(obj, v);\n        }\n      } \n      catch (Exception e) {\n        throw new RuntimeException(\"Exception while setting value : \"+v+\" on \" + (field != null ? field : setter), e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8281d815c10235e2dab9ded85615ebe920dd3c22","date":1243323879,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#set(Object,Object).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#set(Object,Object).mjava","sourceNew":"    private void set(Object obj, Object v) {\n      if(v!= null && type == ByteBuffer.class && v.getClass()== byte[].class) {\n        v = ByteBuffer.wrap((byte[])v);\n      }\n      try {\n        if (field != null) {\n          field.set(obj, v);\n        } else if (setter != null) {\n          setter.invoke(obj, v);\n        }\n      } \n      catch (Exception e) {\n        throw new RuntimeException(\"Exception while setting value : \"+v+\" on \" + (field != null ? field : setter), e);\n      }\n    }\n\n","sourceOld":"    private void set(Object obj, Object v) {\n      try {\n        if (field != null) {\n          field.set(obj, v);\n        } else if (setter != null) {\n          setter.invoke(obj, v);\n        }\n      } \n      catch (Exception e) {\n        throw new RuntimeException(\"Exception while setting value : \"+v+\" on \" + (field != null ? field : setter), e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#set(Object,Object).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#set(Object,Object).mjava","sourceNew":"    private void set(Object obj, Object v) {\n      if(v!= null && type == ByteBuffer.class && v.getClass()== byte[].class) {\n        v = ByteBuffer.wrap((byte[])v);\n      }\n      try {\n        if (field != null) {\n          field.set(obj, v);\n        } else if (setter != null) {\n          setter.invoke(obj, v);\n        }\n      } \n      catch (Exception e) {\n        throw new RuntimeException(\"Exception while setting value : \"+v+\" on \" + (field != null ? field : setter), e);\n      }\n    }\n\n","sourceOld":"    private void set(Object obj, Object v) {\n      if(v!= null && type == ByteBuffer.class && v.getClass()== byte[].class) {\n        v = ByteBuffer.wrap((byte[])v);\n      }\n      try {\n        if (field != null) {\n          field.set(obj, v);\n        } else if (setter != null) {\n          setter.invoke(obj, v);\n        }\n      } \n      catch (Exception e) {\n        throw new RuntimeException(\"Exception while setting value : \"+v+\" on \" + (field != null ? field : setter), e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"8281d815c10235e2dab9ded85615ebe920dd3c22":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"ad94625fb8d088209f46650c8097196fec67f00c":["8281d815c10235e2dab9ded85615ebe920dd3c22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["8281d815c10235e2dab9ded85615ebe920dd3c22"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8281d815c10235e2dab9ded85615ebe920dd3c22":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}