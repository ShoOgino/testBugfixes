{"path":"lucene/core/src/test/org/apache/lucene/search/TestSimpleExplanations#testDMQ6().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSimpleExplanations#testDMQ6().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSimpleExplanations#testDMQ6().mjava","sourceNew":"  public void testDMQ6() throws Exception {\n    DisjunctionMaxQuery q = new DisjunctionMaxQuery(0.5f);\n\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"yy\")), BooleanClause.Occur.MUST_NOT);\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"w3\")), BooleanClause.Occur.SHOULD);\n\n    q.add(booleanQuery);\n    q.add(new TermQuery(new Term(FIELD, \"xx\")));\n    qtest(q, new int[] { 0,1,2,3 });\n  }\n\n","sourceOld":"  public void testDMQ6() throws Exception {\n    DisjunctionMaxQuery q = new DisjunctionMaxQuery(0.5f);\n\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"yy\")), BooleanClause.Occur.MUST_NOT);\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"w3\")), BooleanClause.Occur.SHOULD);\n\n    q.add(booleanQuery);\n    q.add(new TermQuery(new Term(FIELD, \"xx\")));\n    qtest(q, new int[] { 0,1,2,3 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSimpleExplanations#testDMQ6().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSimpleExplanations#testDMQ6().mjava","sourceNew":"  public void testDMQ6() throws Exception {\n    DisjunctionMaxQuery q = new DisjunctionMaxQuery(0.5f);\n\n    BooleanQuery.Builder booleanQuery = new BooleanQuery.Builder();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"yy\")), BooleanClause.Occur.MUST_NOT);\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"w3\")), BooleanClause.Occur.SHOULD);\n\n    q.add(booleanQuery.build());\n    q.add(new TermQuery(new Term(FIELD, \"xx\")));\n    qtest(q, new int[] { 0,1,2,3 });\n  }\n\n","sourceOld":"  public void testDMQ6() throws Exception {\n    DisjunctionMaxQuery q = new DisjunctionMaxQuery(0.5f);\n\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"yy\")), BooleanClause.Occur.MUST_NOT);\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"w3\")), BooleanClause.Occur.SHOULD);\n\n    q.add(booleanQuery);\n    q.add(new TermQuery(new Term(FIELD, \"xx\")));\n    qtest(q, new int[] { 0,1,2,3 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5d3ee590efa5b1f764e8ce985d9125bc97af483","date":1446225158,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSimpleExplanations#testDMQ6().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSimpleExplanations#testDMQ6().mjava","sourceNew":"  public void testDMQ6() throws Exception {\n    BooleanQuery.Builder booleanQuery = new BooleanQuery.Builder();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"yy\")), BooleanClause.Occur.MUST_NOT);\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"w3\")), BooleanClause.Occur.SHOULD);\n\n    DisjunctionMaxQuery q = new DisjunctionMaxQuery(\n        Arrays.asList(\n            booleanQuery.build(),\n            new TermQuery(new Term(FIELD, \"xx\"))),\n        0.5f);\n    qtest(q, new int[] { 0,1,2,3 });\n  }\n\n","sourceOld":"  public void testDMQ6() throws Exception {\n    DisjunctionMaxQuery q = new DisjunctionMaxQuery(0.5f);\n\n    BooleanQuery.Builder booleanQuery = new BooleanQuery.Builder();\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"yy\")), BooleanClause.Occur.MUST_NOT);\n    booleanQuery.add(new TermQuery(new Term(FIELD, \"w3\")), BooleanClause.Occur.SHOULD);\n\n    q.add(booleanQuery.build());\n    q.add(new TermQuery(new Term(FIELD, \"xx\")));\n    qtest(q, new int[] { 0,1,2,3 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5d3ee590efa5b1f764e8ce985d9125bc97af483":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a5d3ee590efa5b1f764e8ce985d9125bc97af483"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["a5d3ee590efa5b1f764e8ce985d9125bc97af483"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a5d3ee590efa5b1f764e8ce985d9125bc97af483":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}