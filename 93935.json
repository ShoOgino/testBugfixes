{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat.AssertingDocValuesConsumer#addSortedSetField(FieldInfo,DocValuesProducer).mjava","commits":[{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat.AssertingDocValuesConsumer#addSortedSetField(FieldInfo,DocValuesProducer).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat.AssertingDocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","sourceNew":"    @Override\n    public void addSortedSetField(FieldInfo field, DocValuesProducer valuesProducer) throws IOException {\n      SortedSetDocValues values = valuesProducer.getSortedSet(field);\n\n      long valueCount = values.getValueCount();\n      BytesRef lastValue = null;\n      for (long i=0;i<valueCount;i++) {\n        BytesRef b = values.lookupOrd(i);\n        assert b != null;\n        assert b.isValid();\n        if (i > 0) {\n          assert b.compareTo(lastValue) > 0;\n        }\n        lastValue = BytesRef.deepCopyOf(b);\n      }\n      \n      int docCount = 0;\n      LongBitSet seenOrds = new LongBitSet(valueCount);\n      while (true) {\n        int docID = values.nextDoc();\n        if (docID == NO_MORE_DOCS) {\n          break;\n        }\n        docCount++;\n        \n        long lastOrd = -1;\n        while (true) {\n          long ord = values.nextOrd();\n          if (ord == SortedSetDocValues.NO_MORE_ORDS) {\n            break;\n          }\n          assert ord >= 0 && ord < valueCount: \"ord=\" + ord + \" is not in bounds 0 ..\" + (valueCount-1);\n          assert ord > lastOrd : \"ord=\" + ord + \",lastOrd=\" + lastOrd;\n          seenOrds.set(ord);\n          lastOrd = ord;\n        }\n      }\n      \n      assert seenOrds.cardinality() == valueCount;\n      in.addSortedSetField(field, valuesProducer);\n    }\n\n","sourceOld":"    @Override\n    public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrdCount, Iterable<Number> ords) throws IOException {\n      long valueCount = 0;\n      BytesRef lastValue = null;\n      for (BytesRef b : values) {\n        assert b != null;\n        assert b.isValid();\n        if (valueCount > 0) {\n          assert b.compareTo(lastValue) > 0;\n        }\n        lastValue = BytesRef.deepCopyOf(b);\n        valueCount++;\n      }\n      \n      int docCount = 0;\n      long ordCount = 0;\n      LongBitSet seenOrds = new LongBitSet(valueCount);\n      Iterator<Number> ordIterator = ords.iterator();\n      for (Number v : docToOrdCount) {\n        assert v != null;\n        int count = v.intValue();\n        assert count >= 0;\n        docCount++;\n        ordCount += count;\n        \n        long lastOrd = -1;\n        for (int i = 0; i < count; i++) {\n          Number o = ordIterator.next();\n          assert o != null;\n          long ord = o.longValue();\n          assert ord >= 0 && ord < valueCount;\n          assert ord > lastOrd : \"ord=\" + ord + \",lastOrd=\" + lastOrd;\n          seenOrds.set(ord);\n          lastOrd = ord;\n        }\n      }\n      assert ordIterator.hasNext() == false;\n      \n      assert docCount == maxDoc;\n      assert seenOrds.cardinality() == valueCount;\n      TestUtil.checkIterator(values.iterator(), valueCount, false);\n      TestUtil.checkIterator(docToOrdCount.iterator(), maxDoc, false);\n      TestUtil.checkIterator(ords.iterator(), ordCount, false);\n      in.addSortedSetField(field, values, docToOrdCount, ords);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat.AssertingDocValuesConsumer#addSortedSetField(FieldInfo,DocValuesProducer).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void addSortedSetField(FieldInfo field, DocValuesProducer valuesProducer) throws IOException {\n      SortedSetDocValues values = valuesProducer.getSortedSet(field);\n\n      long valueCount = values.getValueCount();\n      BytesRef lastValue = null;\n      for (long i=0;i<valueCount;i++) {\n        BytesRef b = values.lookupOrd(i);\n        assert b != null;\n        assert b.isValid();\n        if (i > 0) {\n          assert b.compareTo(lastValue) > 0;\n        }\n        lastValue = BytesRef.deepCopyOf(b);\n      }\n      \n      int docCount = 0;\n      LongBitSet seenOrds = new LongBitSet(valueCount);\n      while (true) {\n        int docID = values.nextDoc();\n        if (docID == NO_MORE_DOCS) {\n          break;\n        }\n        docCount++;\n        \n        long lastOrd = -1;\n        while (true) {\n          long ord = values.nextOrd();\n          if (ord == SortedSetDocValues.NO_MORE_ORDS) {\n            break;\n          }\n          assert ord >= 0 && ord < valueCount: \"ord=\" + ord + \" is not in bounds 0 ..\" + (valueCount-1);\n          assert ord > lastOrd : \"ord=\" + ord + \",lastOrd=\" + lastOrd;\n          seenOrds.set(ord);\n          lastOrd = ord;\n        }\n      }\n      \n      assert seenOrds.cardinality() == valueCount;\n      in.addSortedSetField(field, valuesProducer);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat.AssertingDocValuesConsumer#addSortedSetField(FieldInfo,DocValuesProducer).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void addSortedSetField(FieldInfo field, DocValuesProducer valuesProducer) throws IOException {\n      SortedSetDocValues values = valuesProducer.getSortedSet(field);\n\n      long valueCount = values.getValueCount();\n      BytesRef lastValue = null;\n      for (long i=0;i<valueCount;i++) {\n        BytesRef b = values.lookupOrd(i);\n        assert b != null;\n        assert b.isValid();\n        if (i > 0) {\n          assert b.compareTo(lastValue) > 0;\n        }\n        lastValue = BytesRef.deepCopyOf(b);\n      }\n      \n      int docCount = 0;\n      LongBitSet seenOrds = new LongBitSet(valueCount);\n      while (true) {\n        int docID = values.nextDoc();\n        if (docID == NO_MORE_DOCS) {\n          break;\n        }\n        docCount++;\n        \n        long lastOrd = -1;\n        while (true) {\n          long ord = values.nextOrd();\n          if (ord == SortedSetDocValues.NO_MORE_ORDS) {\n            break;\n          }\n          assert ord >= 0 && ord < valueCount: \"ord=\" + ord + \" is not in bounds 0 ..\" + (valueCount-1);\n          assert ord > lastOrd : \"ord=\" + ord + \",lastOrd=\" + lastOrd;\n          seenOrds.set(ord);\n          lastOrd = ord;\n        }\n      }\n      \n      assert seenOrds.cardinality() == valueCount;\n      in.addSortedSetField(field, valuesProducer);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}