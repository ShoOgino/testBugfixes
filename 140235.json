{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","commits":[{"id":"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb","date":1359046870,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n  \n    long maxAddress = index.readLong();\n    // nocommit? can the current impl even handle > 2G?\n    final byte[] bytes = new byte[(int)maxAddress];\n    data.readBytes(bytes, 0, bytes.length);\n    \n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n    \n    final int valueCount = addressReader.size() - 1;\n    \n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        result.bytes = bytes;\n        result.offset = (int)startAddress;\n        result.length = (int)(endAddress - startAddress);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["dac1db31006989ae24922811f00f909d30f1391d","ef514ff4e66c8f03df0d725849877ace5c16da0a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef514ff4e66c8f03df0d725849877ace5c16da0a","date":1359061656,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","sourceNew":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n  \n    long maxAddress = index.readLong();\n    // nocommit? can the current impl even handle > 2G?\n    final byte[] bytes = new byte[(int)maxAddress];\n    data.readBytes(bytes, 0, bytes.length);\n    \n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n    \n    final int valueCount = addressReader.size() - 1;\n    \n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        result.bytes = bytes;\n        result.offset = (int)startAddress;\n        result.length = (int)(endAddress - startAddress);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","sourceOld":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n  \n    long maxAddress = index.readLong();\n    // nocommit? can the current impl even handle > 2G?\n    final byte[] bytes = new byte[(int)maxAddress];\n    data.readBytes(bytes, 0, bytes.length);\n    \n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n    \n    final int valueCount = addressReader.size() - 1;\n    \n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        result.bytes = bytes;\n        result.offset = (int)startAddress;\n        result.length = (int)(endAddress - startAddress);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    };\n  }\n\n","bugFix":["9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"caa40272511a69bd4ad04b8242ae420932f5799b","date":1359341326,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","sourceNew":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n  \n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n    \n    final int valueCount = addressReader.size() - 1;\n    \n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(result, startAddress, (int)(endAddress - startAddress));\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","sourceOld":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n  \n    long maxAddress = index.readLong();\n    // nocommit? can the current impl even handle > 2G?\n    final byte[] bytes = new byte[(int)maxAddress];\n    data.readBytes(bytes, 0, bytes.length);\n    \n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n    \n    final int valueCount = addressReader.size() - 1;\n    \n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        result.bytes = bytes;\n        result.offset = (int)startAddress;\n        result.length = (int)(endAddress - startAddress);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n  \n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n    \n    final int valueCount = addressReader.size() - 1;\n    \n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(result, startAddress, (int)(endAddress - startAddress));\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dac1db31006989ae24922811f00f909d30f1391d","date":1387560411,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","sourceNew":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n\n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n\n    final int valueCount = addressReader.size() - 1;\n    ramBytesUsed.addAndGet(bytes.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());\n\n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(result, startAddress, (int)(endAddress - startAddress));\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","sourceOld":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START, \n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n  \n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n    \n    final int valueCount = addressReader.size() - 1;\n    \n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(result, startAddress, (int)(endAddress - startAddress));\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","bugFix":["9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","sourceNew":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n\n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n\n    final int valueCount = addressReader.size() - 1;\n    ramBytesUsed.addAndGet(bytes.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());\n\n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        final BytesRef term = new BytesRef();\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(term, startAddress, (int)(endAddress - startAddress));\n        return term;\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","sourceOld":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n\n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n\n    final int valueCount = addressReader.size() - 1;\n    ramBytesUsed.addAndGet(bytes.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());\n\n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(result, startAddress, (int)(endAddress - startAddress));\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d943163030bbd7a9caf93cb5fea92257390a2a99","date":1403094254,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","sourceNew":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n\n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n\n    final int valueCount = addressReader.size() - 1;\n    ramBytesUsed.addAndGet(bytesReader.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());\n\n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        final BytesRef term = new BytesRef();\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(term, startAddress, (int)(endAddress - startAddress));\n        return term;\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","sourceOld":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n\n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n\n    final int valueCount = addressReader.size() - 1;\n    ramBytesUsed.addAndGet(bytes.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());\n\n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        final BytesRef term = new BytesRef();\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(term, startAddress, (int)(endAddress - startAddress));\n        return term;\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","sourceNew":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n\n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n\n    final int valueCount = addressReader.size() - 1;\n    ramBytesUsed.addAndGet(bytesReader.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());\n\n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        final BytesRef term = new BytesRef();\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(term, startAddress, (int)(endAddress - startAddress));\n        return term;\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","sourceOld":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n\n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n\n    final int valueCount = addressReader.size() - 1;\n    ramBytesUsed.addAndGet(bytes.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());\n\n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        final BytesRef term = new BytesRef();\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(term, startAddress, (int)(endAddress - startAddress));\n        return term;\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","sourceNew":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n\n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n\n    final int valueCount = addressReader.size() - 1;\n    ramBytesUsed.addAndGet(bytesReader.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());\n\n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        final BytesRef term = new BytesRef();\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(term, startAddress, (int)(endAddress - startAddress));\n        return term;\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","sourceOld":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n\n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n\n    final int valueCount = addressReader.size() - 1;\n    ramBytesUsed.addAndGet(bytesReader.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());\n\n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        final BytesRef term = new BytesRef();\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(term, startAddress, (int)(endAddress - startAddress));\n        return term;\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#loadBytesVarSorted(FieldInfo,IndexInput,IndexInput).mjava","sourceNew":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n\n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n\n    final int valueCount = addressReader.size() - 1;\n    ramBytesUsed.addAndGet(bytesReader.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());\n\n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        final BytesRef term = new BytesRef();\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(term, startAddress, (int)(endAddress - startAddress));\n        return term;\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","sourceOld":"  private SortedDocValues loadBytesVarSorted(FieldInfo field, IndexInput data, IndexInput index) throws IOException {\n    CodecUtil.checkHeader(data, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n    CodecUtil.checkHeader(index, Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,\n                                 Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);\n\n    long maxAddress = index.readLong();\n    PagedBytes bytes = new PagedBytes(16);\n    bytes.copy(data, maxAddress);\n    final PagedBytes.Reader bytesReader = bytes.freeze(true);\n    final PackedInts.Reader addressReader = PackedInts.getReader(index);\n    final PackedInts.Reader ordsReader = PackedInts.getReader(index);\n\n    final int valueCount = addressReader.size() - 1;\n    ramBytesUsed.addAndGet(bytesReader.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());\n\n    return correctBuggyOrds(new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return (int)ordsReader.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        final BytesRef term = new BytesRef();\n        long startAddress = addressReader.get(ord);\n        long endAddress = addressReader.get(ord+1);\n        bytesReader.fillSlice(term, startAddress, (int)(endAddress - startAddress));\n        return term;\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","caa40272511a69bd4ad04b8242ae420932f5799b"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","d943163030bbd7a9caf93cb5fea92257390a2a99"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["dac1db31006989ae24922811f00f909d30f1391d"],"caa40272511a69bd4ad04b8242ae420932f5799b":["ef514ff4e66c8f03df0d725849877ace5c16da0a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["d943163030bbd7a9caf93cb5fea92257390a2a99"],"d943163030bbd7a9caf93cb5fea92257390a2a99":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"dac1db31006989ae24922811f00f909d30f1391d":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ef514ff4e66c8f03df0d725849877ace5c16da0a":["9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["d943163030bbd7a9caf93cb5fea92257390a2a99","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb":["ef514ff4e66c8f03df0d725849877ace5c16da0a"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["dac1db31006989ae24922811f00f909d30f1391d"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"caa40272511a69bd4ad04b8242ae420932f5799b":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","d943163030bbd7a9caf93cb5fea92257390a2a99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb","d4d69c535930b5cce125cff868d40f6373dc27d4"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"d943163030bbd7a9caf93cb5fea92257390a2a99":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"dac1db31006989ae24922811f00f909d30f1391d":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"ef514ff4e66c8f03df0d725849877ace5c16da0a":["caa40272511a69bd4ad04b8242ae420932f5799b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}