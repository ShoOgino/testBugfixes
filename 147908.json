{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newField(\"field\", \"testData\", TextField.TYPE_STORED);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","sourceOld":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newField(\"field\", \"testData\", TextField.TYPE_STORED);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newField(\"field\", \"testData\", TextField.TYPE_STORED);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","sourceOld":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newField(\"field\", \"testData\", TextField.TYPE_STORED);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","bugFix":null,"bugIntro":["f241b963c5bcd6c2293a928059dd2d64988a6042"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","sourceOld":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newField(\"field\", \"testData\", TextField.TYPE_STORED);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":["f241b963c5bcd6c2293a928059dd2d64988a6042"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f241b963c5bcd6c2293a928059dd2d64988a6042","date":1340296137,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n                                                                       TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        iwConstructed.countDown();\n        startIndexing.await();\n        writer.addDocument(doc);\n        writer.close();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n        failure.printStackTrace(System.out);\n        return;\n      }\n    }\n\n","sourceOld":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","bugFix":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","adde4ed7da03e734626803a3802e6cf88b77a2e7","04f07771a2a7dd3a395700665ed839c3dae2def2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n                                                                       TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        iwConstructed.countDown();\n        startIndexing.await();\n        writer.addDocument(doc);\n        writer.close();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n        failure.printStackTrace(System.out);\n        return;\n      }\n    }\n\n","sourceOld":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n                                                                       TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        iwConstructed.countDown();\n        startIndexing.await();\n        writer.addDocument(doc);\n        writer.shutdown();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n        failure.printStackTrace(System.out);\n        return;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n                                                                       TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        iwConstructed.countDown();\n        startIndexing.await();\n        writer.addDocument(doc);\n        writer.close();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n        failure.printStackTrace(System.out);\n        return;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        iwConstructed.countDown();\n        startIndexing.await();\n        writer.addDocument(doc);\n        writer.shutdown();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n        failure.printStackTrace(System.out);\n        return;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n                                                                       TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n        iwConstructed.countDown();\n        startIndexing.await();\n        writer.addDocument(doc);\n        writer.shutdown();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n        failure.printStackTrace(System.out);\n        return;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        iwConstructed.countDown();\n        startIndexing.await();\n        writer.addDocument(doc);\n        writer.close();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n        failure.printStackTrace(System.out);\n        return;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        iwConstructed.countDown();\n        startIndexing.await();\n        writer.addDocument(doc);\n        writer.shutdown();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n        failure.printStackTrace(System.out);\n        return;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9f7829b01acc3b2d4cad883060a0fbf544eaae1","date":1521396858,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n\n        syncStart.await();\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        writer.addDocument(doc);\n        writer.close();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        iwConstructed.countDown();\n        startIndexing.await();\n        writer.addDocument(doc);\n        writer.close();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n        failure.printStackTrace(System.out);\n        return;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"203e3fcf513c02ee2c07015f2ce277e26dc60907","date":1521404157,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n\n        syncStart.await();\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        writer.addDocument(doc);\n        writer.close();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        Document doc = new Document();\n        Field field = newTextField(\"field\", \"testData\", Field.Store.YES);\n        doc.add(field);\n        IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n        iwConstructed.countDown();\n        startIndexing.await();\n        writer.addDocument(doc);\n        writer.close();\n      } catch (Throwable e) {\n        failed = true;\n        failure = e;\n        failure.printStackTrace(System.out);\n        return;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"f241b963c5bcd6c2293a928059dd2d64988a6042":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["04f07771a2a7dd3a395700665ed839c3dae2def2","f241b963c5bcd6c2293a928059dd2d64988a6042"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"203e3fcf513c02ee2c07015f2ce277e26dc60907":["d0ef034a4f10871667ae75181537775ddcf8ade4","d9f7829b01acc3b2d4cad883060a0fbf544eaae1"],"d9f7829b01acc3b2d4cad883060a0fbf544eaae1":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["f241b963c5bcd6c2293a928059dd2d64988a6042"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["203e3fcf513c02ee2c07015f2ce277e26dc60907"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["f241b963c5bcd6c2293a928059dd2d64988a6042","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"f241b963c5bcd6c2293a928059dd2d64988a6042":["fe33227f6805edab2036cbb80645cc4e2d1fa424","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["203e3fcf513c02ee2c07015f2ce277e26dc60907","d9f7829b01acc3b2d4cad883060a0fbf544eaae1"],"203e3fcf513c02ee2c07015f2ce277e26dc60907":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d9f7829b01acc3b2d4cad883060a0fbf544eaae1":["203e3fcf513c02ee2c07015f2ce277e26dc60907"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}