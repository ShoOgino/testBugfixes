{"path":"contrib/queries/src/java/org/apache/lucene/search/trie/AbstractTrieRangeFilter#AbstractTrieRangeFilter(String,int,Number,Number,boolean,boolean).mjava","commits":[{"id":"c1b4c49e8cb0b92d10e3757eb85ffdbd5b675eb1","date":1239104855,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/AbstractTrieRangeFilter#AbstractTrieRangeFilter(String,int,Number,Number,boolean,boolean).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/AbstractTrieRangeFilter#AbstractTrieRangeFilter(String[],int,Number,Number,boolean,boolean).mjava","sourceNew":"  AbstractTrieRangeFilter(final String field, final int precisionStep,\r\n    Number min, Number max, final boolean minInclusive, final boolean maxInclusive\r\n  ) {\r\n    this.field=field.intern();\r\n    this.precisionStep=precisionStep;\r\n    this.min=min;\r\n    this.max=max;\r\n    this.minInclusive=minInclusive;\r\n    this.maxInclusive=maxInclusive;\r\n  }\r\n\n","sourceOld":"  AbstractTrieRangeFilter(final String[] fields, final int precisionStep,\r\n    Number min, Number max, final boolean minInclusive, final boolean maxInclusive\r\n  ) {\r\n    this.fields=(String[])fields.clone();\r\n    this.precisionStep=precisionStep;\r\n    this.min=min;\r\n    this.max=max;\r\n    this.minInclusive=minInclusive;\r\n    this.maxInclusive=maxInclusive;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9c5935b70b4650c37e1ac32e6ee4f93ee4449cc","date":1239886708,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/AbstractTrieRangeFilter#AbstractTrieRangeFilter(String,int,Number,Number,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  AbstractTrieRangeFilter(final String field, final int precisionStep,\r\n    Number min, Number max, final boolean minInclusive, final boolean maxInclusive\r\n  ) {\r\n    this.field=field.intern();\r\n    this.precisionStep=precisionStep;\r\n    this.min=min;\r\n    this.max=max;\r\n    this.minInclusive=minInclusive;\r\n    this.maxInclusive=maxInclusive;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c1b4c49e8cb0b92d10e3757eb85ffdbd5b675eb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9c5935b70b4650c37e1ac32e6ee4f93ee4449cc":["c1b4c49e8cb0b92d10e3757eb85ffdbd5b675eb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9c5935b70b4650c37e1ac32e6ee4f93ee4449cc"]},"commit2Childs":{"c1b4c49e8cb0b92d10e3757eb85ffdbd5b675eb1":["c9c5935b70b4650c37e1ac32e6ee4f93ee4449cc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1b4c49e8cb0b92d10e3757eb85ffdbd5b675eb1"],"c9c5935b70b4650c37e1ac32e6ee4f93ee4449cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}