{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (Throwable e) {\n      // Messy: because getHasVectors may be used in an\n      // thread-unsafe way, and may attempt to open an fnm\n      // file that has since (legitimately) been deleted by\n      // IndexWriter, instead of throwing these exceptions\n      // up, just add v? to indicate we don't know if this\n      // segment has vectors:\n      s.append(\"v?\");\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (Throwable e) {\n      // Messy: because getHasVectors may be used in an\n      // thread-unsafe way, and may attempt to open an fnm\n      // file that has since (legitimately) been deleted by\n      // IndexWriter, instead of throwing these exceptions\n      // up, just add v? to indicate we don't know if this\n      // segment has vectors:\n      s.append(\"v?\");\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a8b14bc4241c302311422d5c6f7627f8febb86e","date":1337291675,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (Throwable e) {\n      // Messy: because getHasVectors may be used in an\n      // thread-unsafe way, and may attempt to open an fnm\n      // file that has since (legitimately) been deleted by\n      // IndexWriter, instead of throwing these exceptions\n      // up, just add v? to indicate we don't know if this\n      // segment has vectors:\n      s.append(\"v?\");\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int delCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a917aca07a305ab70118a83e84d931503441271","date":1337826487,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions).</p>\n   */\n  public String toString(Directory dir, int delCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    // TODO: we could append toString of attributes() here?\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int delCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions).</p>\n   */\n  public String toString(Directory dir, int delCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    // TODO: we could append toString of attributes() here?\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (Throwable e) {\n      // Messy: because getHasVectors may be used in an\n      // thread-unsafe way, and may attempt to open an fnm\n      // file that has since (legitimately) been deleted by\n      // IndexWriter, instead of throwing these exceptions\n      // up, just add v? to indicate we don't know if this\n      // segment has vectors:\n      s.append(\"v?\");\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e072d0b1fc19e0533d8ce432eed245196bca6fde","date":1379265112,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions).</p>\n   */\n  public String toString(Directory dir, int delCount) {\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    // TODO: we could append toString of attributes() here?\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions).</p>\n   */\n  public String toString(Directory dir, int delCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    // TODO: we could append toString of attributes() here?\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fba839b7548159227edcb740033d0f814b323d8d","date":1424455904,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /**\n   * Used for debugging.\n   * \n   * @deprecated Use {@link #toString(int)} instead.\n   */\n  @Deprecated\n  public String toString(Directory dir, int delCount) {\n    return toString(delCount);\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions).</p>\n   */\n  public String toString(Directory dir, int delCount) {\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    // TODO: we could append toString of attributes() here?\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ccce186408f57d2cb66d65a12e181526e47a165","date":1424456571,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Used for debugging.\n   * \n   * @deprecated Use {@link #toString(int)} instead.\n   */\n  @Deprecated\n  public String toString(Directory dir, int delCount) {\n    return toString(delCount);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"4a8b14bc4241c302311422d5c6f7627f8febb86e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","6a917aca07a305ab70118a83e84d931503441271"],"6a917aca07a305ab70118a83e84d931503441271":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"fba839b7548159227edcb740033d0f814b323d8d":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["4a8b14bc4241c302311422d5c6f7627f8febb86e"],"6ccce186408f57d2cb66d65a12e181526e47a165":["fba839b7548159227edcb740033d0f814b323d8d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6ccce186408f57d2cb66d65a12e181526e47a165"]},"commit2Childs":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["fba839b7548159227edcb740033d0f814b323d8d"],"4a8b14bc4241c302311422d5c6f7627f8febb86e":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"6a917aca07a305ab70118a83e84d931503441271":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4a8b14bc4241c302311422d5c6f7627f8febb86e","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"fba839b7548159227edcb740033d0f814b323d8d":["6ccce186408f57d2cb66d65a12e181526e47a165"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["6a917aca07a305ab70118a83e84d931503441271"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6ccce186408f57d2cb66d65a12e181526e47a165":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}