{"path":"modules/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testNumber().mjava","commits":[{"id":"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","date":1310355420,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testNumber().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testNumber().mjava","sourceNew":"  public void testNumber() throws Exception {\n// The numbers go away because SimpleAnalzyer ignores them\n    assertQueryEquals(\"3\", null, \"\");\n    assertQueryEquals(\"term 1.0 1 2\", null, \"term\");\n    assertQueryEquals(\"term term1 term2\", null, \"term term term\");\n\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.WHITESPACE, true);\n    assertQueryEquals(\"3\", a, \"3\");\n    assertQueryEquals(\"term 1.0 1 2\", a, \"term 1.0 1 2\");\n    assertQueryEquals(\"term term1 term2\", a, \"term term1 term2\");\n  }\n\n","sourceOld":"  public void testNumber() throws Exception {\n// The numbers go away because SimpleAnalzyer ignores them\n    assertQueryEquals(\"3\", null, \"\");\n    assertQueryEquals(\"term 1.0 1 2\", null, \"term\");\n    assertQueryEquals(\"term term1 term2\", null, \"term term term\");\n\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.WHITESPACE, true);\n    assertQueryEquals(\"3\", a, \"3\");\n    assertQueryEquals(\"term 1.0 1 2\", a, \"term 1.0 1 2\");\n    assertQueryEquals(\"term term1 term2\", a, \"term term1 term2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5629050969c1e696c5dc14e8639f3e733e8e33c","date":1313606044,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testNumber().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testNumber().mjava","sourceNew":"  public void testNumber() throws Exception {\n// The numbers go away because SimpleAnalzyer ignores them\n    assertQueryEquals(\"3\", null, \"\");\n    assertQueryEquals(\"term 1.0 1 2\", null, \"term\");\n    assertQueryEquals(\"term term1 term2\", null, \"term term term\");\n\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.WHITESPACE, true);\n    assertQueryEquals(\"3\", a, \"3\");\n    assertQueryEquals(\"term 1.0 1 2\", a, \"term 1.0 1 2\");\n    assertQueryEquals(\"term term1 term2\", a, \"term term1 term2\");\n  }\n\n","sourceOld":"  public void testNumber() throws Exception {\n// The numbers go away because SimpleAnalzyer ignores them\n    assertQueryEquals(\"3\", null, \"\");\n    assertQueryEquals(\"term 1.0 1 2\", null, \"term\");\n    assertQueryEquals(\"term term1 term2\", null, \"term term term\");\n\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.WHITESPACE, true);\n    assertQueryEquals(\"3\", a, \"3\");\n    assertQueryEquals(\"term 1.0 1 2\", a, \"term 1.0 1 2\");\n    assertQueryEquals(\"term term1 term2\", a, \"term term1 term2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5629050969c1e696c5dc14e8639f3e733e8e33c":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5629050969c1e696c5dc14e8639f3e733e8e33c"]},"commit2Childs":{"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["b5629050969c1e696c5dc14e8639f3e733e8e33c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"b5629050969c1e696c5dc14e8639f3e733e8e33c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}