{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e76e769a8863037082ce292c260151d588e6724e","date":1337253730,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config, new OneDocSource());\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config, new OneDocSource());\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"directory\", \"ByteBuffersDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config, new OneDocSource());\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config, new OneDocSource());\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e76e769a8863037082ce292c260151d588e6724e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d77dafd89756a5161d244985903e3487ca109182":["e76e769a8863037082ce292c260151d588e6724e"],"ef0d8a69209261514c5739c770bba706c2308450":["b89678825b68eccaf09e6ab71675fc0b0af1e099","e76e769a8863037082ce292c260151d588e6724e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e76e769a8863037082ce292c260151d588e6724e","ef0d8a69209261514c5739c770bba706c2308450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"e76e769a8863037082ce292c260151d588e6724e":["d77dafd89756a5161d244985903e3487ca109182","ef0d8a69209261514c5739c770bba706c2308450"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}