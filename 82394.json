{"path":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#testDuplicates().mjava","commits":[{"id":"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80","date":1532111887,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#testDuplicates().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestExportWriter#testDuplicates().mjava","sourceNew":"  @Test\n  public void testDuplicates() throws Exception {\n    // see SOLR-10924\n    String expected = h.getCore().getLatestSchema().getField(\"int_is_t\").getType().isPointField()\n      ? \"1,1,1,1\" : \"1\";\n    String s =  h.query(req(\"q\", \"id:3\", \"qt\", \"/export\", \"fl\", \"int_is_t\", \"sort\", \"intdv asc\"));\n    assertJsonEquals(s, \"{\\\"responseHeader\\\": {\\\"status\\\": 0}, \\\"response\\\":{\\\"numFound\\\":1, \\\"docs\\\":[{\\\"int_is_t\\\":[\"+expected+\"]}]}}\");\n    expected = h.getCore().getLatestSchema().getField(\"int_is_p\").getType().isPointField()\n      ? \"1,1,1,1\" : \"1\";\n    s =  h.query(req(\"q\", \"id:8\", \"qt\", \"/export\", \"fl\", \"int_is_p\", \"sort\", \"intdv asc\"));\n    assertJsonEquals(s, \"{\\\"responseHeader\\\": {\\\"status\\\": 0}, \\\"response\\\":{\\\"numFound\\\":1, \\\"docs\\\":[{\\\"int_is_p\\\":[1,1,1,1]}]}}\");\n  }\n\n","sourceOld":"  @Test\n  public void testDuplicates() throws Exception {\n    // see SOLR-10924\n    String expected = h.getCore().getLatestSchema().getField(\"int_is_t\").getType().isPointField()\n      ? \"1,1,1,1\" : \"1\";\n    String s =  h.query(req(\"q\", \"id:3\", \"qt\", \"/export\", \"fl\", \"int_is_t\", \"sort\", \"intdv asc\"));\n    assertJsonEquals(s, \"{\\\"responseHeader\\\": {\\\"status\\\": 0}, \\\"response\\\":{\\\"numFound\\\":1, \\\"docs\\\":[{\\\"int_is_t\\\":[\"+expected+\"]}]}}\");\n    expected = h.getCore().getLatestSchema().getField(\"int_is_p\").getType().isPointField()\n      ? \"1,1,1,1\" : \"1\";\n    s =  h.query(req(\"q\", \"id:8\", \"qt\", \"/export\", \"fl\", \"int_is_p\", \"sort\", \"intdv asc\"));\n    assertJsonEquals(s, \"{\\\"responseHeader\\\": {\\\"status\\\": 0}, \\\"response\\\":{\\\"numFound\\\":1, \\\"docs\\\":[{\\\"int_is_p\\\":[1,1,1,1]}]}}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19ac23af87640262bab6204be31cd5c245e8b133","date":1532462944,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#testDuplicates().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#testDuplicates().mjava","sourceNew":"  private void testDuplicates() throws Exception {\n    // see SOLR-10924\n    String expected = h.getCore().getLatestSchema().getField(\"int_is_t\").getType().isPointField()\n      ? \"1,1,1,1\" : \"1\";\n    String s =  h.query(req(\"q\", \"id:3\", \"qt\", \"/export\", \"fl\", \"int_is_t\", \"sort\", \"intdv asc\"));\n    assertJsonEquals(s, \"{\\\"responseHeader\\\": {\\\"status\\\": 0}, \\\"response\\\":{\\\"numFound\\\":1, \\\"docs\\\":[{\\\"int_is_t\\\":[\"+expected+\"]}]}}\");\n    expected = h.getCore().getLatestSchema().getField(\"int_is_p\").getType().isPointField()\n      ? \"1,1,1,1\" : \"1\";\n    s =  h.query(req(\"q\", \"id:8\", \"qt\", \"/export\", \"fl\", \"int_is_p\", \"sort\", \"intdv asc\"));\n    assertJsonEquals(s, \"{\\\"responseHeader\\\": {\\\"status\\\": 0}, \\\"response\\\":{\\\"numFound\\\":1, \\\"docs\\\":[{\\\"int_is_p\\\":[1,1,1,1]}]}}\");\n  }\n\n","sourceOld":"  @Test\n  public void testDuplicates() throws Exception {\n    // see SOLR-10924\n    String expected = h.getCore().getLatestSchema().getField(\"int_is_t\").getType().isPointField()\n      ? \"1,1,1,1\" : \"1\";\n    String s =  h.query(req(\"q\", \"id:3\", \"qt\", \"/export\", \"fl\", \"int_is_t\", \"sort\", \"intdv asc\"));\n    assertJsonEquals(s, \"{\\\"responseHeader\\\": {\\\"status\\\": 0}, \\\"response\\\":{\\\"numFound\\\":1, \\\"docs\\\":[{\\\"int_is_t\\\":[\"+expected+\"]}]}}\");\n    expected = h.getCore().getLatestSchema().getField(\"int_is_p\").getType().isPointField()\n      ? \"1,1,1,1\" : \"1\";\n    s =  h.query(req(\"q\", \"id:8\", \"qt\", \"/export\", \"fl\", \"int_is_p\", \"sort\", \"intdv asc\"));\n    assertJsonEquals(s, \"{\\\"responseHeader\\\": {\\\"status\\\": 0}, \\\"response\\\":{\\\"numFound\\\":1, \\\"docs\\\":[{\\\"int_is_p\\\":[1,1,1,1]}]}}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19ac23af87640262bab6204be31cd5c245e8b133":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19ac23af87640262bab6204be31cd5c245e8b133"]},"commit2Childs":{"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["19ac23af87640262bab6204be31cd5c245e8b133"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"19ac23af87640262bab6204be31cd5c245e8b133":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}