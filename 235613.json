{"path":"lucene/src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","sourceNew":"  /** Returns the time the named file was last modified.\n   * @throws IOException if the file does not exist\n   */\n  @Override\n  public final long fileModified(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file==null)\n      throw new FileNotFoundException(name);\n    return file.getLastModified();\n  }\n\n","sourceOld":"  /** Returns the time the named file was last modified.\n   * @throws IOException if the file does not exist\n   */\n  @Override\n  public final long fileModified(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file==null)\n      throw new FileNotFoundException(name);\n    return file.getLastModified();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"036fc5e4ac5c9867717aaec352e2b39fe73daedb","date":1291043261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","sourceNew":"  /** Returns the time the named file was last modified.\n   * @throws IOException if the file does not exist\n   */\n  @Override\n  public final long fileModified(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return file.getLastModified();\n  }\n\n","sourceOld":"  /** Returns the time the named file was last modified.\n   * @throws IOException if the file does not exist\n   */\n  @Override\n  public final long fileModified(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file==null)\n      throw new FileNotFoundException(name);\n    return file.getLastModified();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","sourceNew":"  /** Returns the time the named file was last modified.\n   * @throws IOException if the file does not exist\n   */\n  @Override\n  public final long fileModified(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return file.getLastModified();\n  }\n\n","sourceOld":"  /** Returns the time the named file was last modified.\n   * @throws IOException if the file does not exist\n   */\n  @Override\n  public final long fileModified(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file==null)\n      throw new FileNotFoundException(name);\n    return file.getLastModified();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","sourceNew":"  /** Returns the time the named file was last modified.\n   * @throws IOException if the file does not exist\n   */\n  @Override\n  public final long fileModified(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return file.getLastModified();\n  }\n\n","sourceOld":"  /** Returns the time the named file was last modified.\n   * @throws IOException if the file does not exist\n   */\n  @Override\n  public final long fileModified(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file==null)\n      throw new FileNotFoundException(name);\n    return file.getLastModified();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c01638f4dd94981c1d3d52c4f7991246a5a24aba","date":1327876712,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","sourceNew":null,"sourceOld":"  /** Returns the time the named file was last modified.\n   * @throws IOException if the file does not exist\n   */\n  @Override\n  public final long fileModified(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return file.getLastModified();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","sourceNew":null,"sourceOld":"  /** Returns the time the named file was last modified.\n   * @throws IOException if the file does not exist\n   */\n  @Override\n  public final long fileModified(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return file.getLastModified();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#fileModified(String).mjava","sourceNew":null,"sourceOld":"  /** Returns the time the named file was last modified.\n   * @throws IOException if the file does not exist\n   */\n  @Override\n  public final long fileModified(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return file.getLastModified();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["036fc5e4ac5c9867717aaec352e2b39fe73daedb"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["036fc5e4ac5c9867717aaec352e2b39fe73daedb","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"036fc5e4ac5c9867717aaec352e2b39fe73daedb":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5b6fdfce35d0adb18836cf8711abe487a934df33":["036fc5e4ac5c9867717aaec352e2b39fe73daedb","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","036fc5e4ac5c9867717aaec352e2b39fe73daedb"],"3bb13258feba31ab676502787ab2e1779f129b7a":["9454a6510e2db155fb01faa5c049b06ece95fab9","036fc5e4ac5c9867717aaec352e2b39fe73daedb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"036fc5e4ac5c9867717aaec352e2b39fe73daedb":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["036fc5e4ac5c9867717aaec352e2b39fe73daedb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}