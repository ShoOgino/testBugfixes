{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","sourceNew":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   * \n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:  \n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>  \n   * \n   * Handlers <em>must</em> be initalized before getting registered.  Registered\n   * handlers can immediatly accept requests.\n   * \n   * This call is thread safe.\n   *  \n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","sourceOld":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   * \n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:  \n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>  \n   * \n   * Handlers <em>must</em> be initalized before getting registered.  Registered\n   * handlers can immediatly accept requests.\n   * \n   * This call is thread safe.\n   *  \n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","sourceNew":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   * \n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:  \n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>  \n   * \n   * Handlers <em>must</em> be initalized before getting registered.  Registered\n   * handlers can immediatly accept requests.\n   * \n   * This call is thread safe.\n   *  \n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","sourceOld":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   * \n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:  \n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>  \n   * \n   * Handlers <em>must</em> be initalized before getting registered.  Registered\n   * handlers can immediatly accept requests.\n   * \n   * This call is thread safe.\n   *  \n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","sourceNew":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   * \n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:  \n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>  \n   * \n   * Handlers <em>must</em> be initalized before getting registered.  Registered\n   * handlers can immediatly accept requests.\n   * \n   * This call is thread safe.\n   *  \n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","sourceOld":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   * \n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:  \n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>  \n   * \n   * Handlers <em>must</em> be initalized before getting registered.  Registered\n   * handlers can immediatly accept requests.\n   * \n   * This call is thread safe.\n   *  \n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6d3fca4763c45f22581927b942c808dbb2e2aec","date":1347304121,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","sourceNew":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   * \n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:  \n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>  \n   * \n   * Handlers <em>must</em> be initialized before getting registered.  Registered\n   * handlers can immediately accept requests.\n   * \n   * This call is thread safe.\n   *  \n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","sourceOld":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   * \n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:  \n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>  \n   * \n   * Handlers <em>must</em> be initalized before getting registered.  Registered\n   * handlers can immediatly accept requests.\n   * \n   * This call is thread safe.\n   *  \n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","sourceNew":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   *\n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:\n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>\n   *\n   * Handlers <em>must</em> be initialized before getting registered.  Registered\n   * handlers can immediately accept requests.\n   *\n   * This call is thread safe.\n   *\n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","sourceOld":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   * \n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:  \n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>  \n   * \n   * Handlers <em>must</em> be initialized before getting registered.  Registered\n   * handlers can immediately accept requests.\n   * \n   * This call is thread safe.\n   *  \n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","sourceNew":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   *\n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:\n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>\n   *\n   * Handlers <em>must</em> be initialized before getting registered.  Registered\n   * handlers can immediately accept requests.\n   *\n   * This call is thread safe.\n   *\n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","sourceOld":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   * \n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:  \n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>  \n   * \n   * Handlers <em>must</em> be initialized before getting registered.  Registered\n   * handlers can immediately accept requests.\n   * \n   * This call is thread safe.\n   *  \n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerRequestHandler(String,SolrRequestHandler).mjava","sourceNew":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   * <p>\n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:\n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>\n   * <p>\n   * Handlers <em>must</em> be initialized before getting registered.  Registered\n   * handlers can immediately accept requests.\n   * <p>\n   * This call is thread safe.\n   *\n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName, handler);\n  }\n\n","sourceOld":"  /**\n   * Registers a handler at the specified location.  If one exists there, it will be replaced.\n   * To remove a handler, register <code>null</code> at its path\n   *\n   * Once registered the handler can be accessed through:\n   * <pre>\n   *   http://${host}:${port}/${context}/${handlerName}\n   * or:\n   *   http://${host}:${port}/${context}/select?qt=${handlerName}\n   * </pre>\n   *\n   * Handlers <em>must</em> be initialized before getting registered.  Registered\n   * handlers can immediately accept requests.\n   *\n   * This call is thread safe.\n   *\n   * @return the previous <code>SolrRequestHandler</code> registered to this name <code>null</code> if none.\n   */\n  public SolrRequestHandler registerRequestHandler(String handlerName, SolrRequestHandler handler) {\n    return reqHandlers.register(handlerName,handler);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a6d3fca4763c45f22581927b942c808dbb2e2aec":["c26f00b574427b55127e869b935845554afde1fa"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a6d3fca4763c45f22581927b942c808dbb2e2aec","9aea0485ecacb6734c17da2d02569816c23a69c1"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["9aea0485ecacb6734c17da2d02569816c23a69c1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a6d3fca4763c45f22581927b942c808dbb2e2aec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2668c99990e4c94a78bac005aa682b7c5986d23a"]},"commit2Childs":{"a6d3fca4763c45f22581927b942c808dbb2e2aec":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2668c99990e4c94a78bac005aa682b7c5986d23a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a6d3fca4763c45f22581927b942c808dbb2e2aec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2668c99990e4c94a78bac005aa682b7c5986d23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}