{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SearchStream#toExpression(StreamFactory).mjava","commits":[{"id":"b73cc5cc718a5ccdc940b7e3ecbf17e6c145d233","date":1543335722,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SearchStream#toExpression(StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public StreamExpressionParameter toExpression(StreamFactory factory) throws IOException {\n    // function name\n    StreamExpression expression = new StreamExpression(\"search\");\n\n    // collection\n    expression.addParameter(collection);\n\n    for (Entry<String, String[]> param : params.getMap().entrySet()) {\n      for (String val : param.getValue()) {\n        // SOLR-8409: Escaping the \" is a special case.\n        // Do note that in any other BASE streams with parameters where a \" might come into play\n        // that this same replacement needs to take place.\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),\n            val.replace(\"\\\"\", \"\\\\\\\"\")));\n      }\n    }\n\n    // zkHost\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n\n    return expression;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a209db4770770843a101e5dfe46086a63507fd3","date":1544624168,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SearchStream#toExpression(StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SearchStream#toExpression(StreamFactory).mjava","sourceNew":"  @Override\n  public StreamExpressionParameter toExpression(StreamFactory factory) throws IOException {\n    // function name\n    StreamExpression expression = new StreamExpression(\"search\");\n\n    // collection\n    if(collection.indexOf(',') > -1) {\n      expression.addParameter(\"\\\"\"+collection+\"\\\"\");\n    } else {\n      expression.addParameter(collection);\n    }\n\n    for (Entry<String, String[]> param : params.getMap().entrySet()) {\n      for (String val : param.getValue()) {\n        // SOLR-8409: Escaping the \" is a special case.\n        // Do note that in any other BASE streams with parameters where a \" might come into play\n        // that this same replacement needs to take place.\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),\n            val.replace(\"\\\"\", \"\\\\\\\"\")));\n      }\n    }\n\n    // zkHost\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n\n    return expression;\n  }\n\n","sourceOld":"  @Override\n  public StreamExpressionParameter toExpression(StreamFactory factory) throws IOException {\n    // function name\n    StreamExpression expression = new StreamExpression(\"search\");\n\n    // collection\n    expression.addParameter(collection);\n\n    for (Entry<String, String[]> param : params.getMap().entrySet()) {\n      for (String val : param.getValue()) {\n        // SOLR-8409: Escaping the \" is a special case.\n        // Do note that in any other BASE streams with parameters where a \" might come into play\n        // that this same replacement needs to take place.\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),\n            val.replace(\"\\\"\", \"\\\\\\\"\")));\n      }\n    }\n\n    // zkHost\n    expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\", zkHost));\n\n    return expression;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a209db4770770843a101e5dfe46086a63507fd3":["b73cc5cc718a5ccdc940b7e3ecbf17e6c145d233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a209db4770770843a101e5dfe46086a63507fd3"],"b73cc5cc718a5ccdc940b7e3ecbf17e6c145d233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b73cc5cc718a5ccdc940b7e3ecbf17e6c145d233"],"5a209db4770770843a101e5dfe46086a63507fd3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b73cc5cc718a5ccdc940b7e3ecbf17e6c145d233":["5a209db4770770843a101e5dfe46086a63507fd3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}