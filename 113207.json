{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","commits":[{"id":"7af110b00ea8df9429309d83e38e0533d82e144f","date":1376924768,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","pathOld":"/dev/null","sourceNew":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      applyAllDeletes();\n      flushCount.incrementAndGet();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","pathOld":"/dev/null","sourceNew":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      applyAllDeletes();\n      flushCount.incrementAndGet();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","pathOld":"/dev/null","sourceNew":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      applyAllDeletes();\n      flushCount.incrementAndGet();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","sourceNew":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      applyAllDeletesAndUpdates();\n      flushCount.incrementAndGet();\n    }\n  }\n\n","sourceOld":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      applyAllDeletes();\n      flushCount.incrementAndGet();\n    }\n  }\n\n","bugFix":null,"bugIntro":["e4f3b0a30c9d521b86f768348f832af93505b4eb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e4f3b0a30c9d521b86f768348f832af93505b4eb","date":1420797674,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","sourceNew":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      if (applyAllDeletesAndUpdates()) {\n        maybeMerge(config.getMergePolicy(), MergeTrigger.SEGMENT_FLUSH, UNBOUNDED_MAX_MERGE_SEGMENTS);\n      }\n      flushCount.incrementAndGet();\n    }\n  }\n\n","sourceOld":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      applyAllDeletesAndUpdates();\n      flushCount.incrementAndGet();\n    }\n  }\n\n","bugFix":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","sourceNew":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      flushCount.incrementAndGet();\n    }\n  }\n\n","sourceOld":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      if (applyAllDeletesAndUpdates()) {\n        maybeMerge(config.getMergePolicy(), MergeTrigger.SEGMENT_FLUSH, UNBOUNDED_MAX_MERGE_SEGMENTS);\n      }\n      flushCount.incrementAndGet();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","sourceNew":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      flushCount.incrementAndGet();\n    }\n  }\n\n","sourceOld":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      if (applyAllDeletesAndUpdates()) {\n        maybeMerge(config.getMergePolicy(), MergeTrigger.SEGMENT_FLUSH, UNBOUNDED_MAX_MERGE_SEGMENTS);\n      }\n      flushCount.incrementAndGet();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","sourceNew":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      flushCount.incrementAndGet();\n    }\n  }\n\n","sourceOld":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      if (applyAllDeletesAndUpdates()) {\n        maybeMerge(config.getMergePolicy(), MergeTrigger.SEGMENT_FLUSH, UNBOUNDED_MAX_MERGE_SEGMENTS);\n      }\n      flushCount.incrementAndGet();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7","date":1524496660,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#applyDeletesAndPurge(boolean).mjava","sourceNew":null,"sourceOld":"  final void applyDeletesAndPurge(boolean forcePurge) throws IOException {\n    try {\n      purge(forcePurge);\n    } finally {\n      flushCount.incrementAndGet();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["7af110b00ea8df9429309d83e38e0533d82e144f"],"7af110b00ea8df9429309d83e38e0533d82e144f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["28288370235ed02234a64753cdbf0c6ec096304a"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["e4f3b0a30c9d521b86f768348f832af93505b4eb"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7af110b00ea8df9429309d83e38e0533d82e144f"],"31d4861802ca404d78ca1d15f4550eec415b9199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7af110b00ea8df9429309d83e38e0533d82e144f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e4f3b0a30c9d521b86f768348f832af93505b4eb":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["e4f3b0a30c9d521b86f768348f832af93505b4eb","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["e4f3b0a30c9d521b86f768348f832af93505b4eb","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["e4f3b0a30c9d521b86f768348f832af93505b4eb"],"7af110b00ea8df9429309d83e38e0533d82e144f":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199"],"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7af110b00ea8df9429309d83e38e0533d82e144f","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199"],"e4f3b0a30c9d521b86f768348f832af93505b4eb":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}