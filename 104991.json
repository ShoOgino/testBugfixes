{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testNumberMergeAwayAllValues().mjava","commits":[{"id":"26528d5285d5485e3c0b24a6fae22ef227513cf7","date":1413457389,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testNumberMergeAwayAllValues().mjava","pathOld":"/dev/null","sourceNew":"  public void testNumberMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"field\", 5));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    NumericDocValues dv = getOnlySegmentReader(ireader).getNumericDocValues(\"field\");\n    assertEquals(0, dv.get(0));\n    \n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testNumberMergeAwayAllValues().mjava","pathOld":"/dev/null","sourceNew":"  public void testNumberMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"field\", 5));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    NumericDocValues dv = getOnlySegmentReader(ireader).getNumericDocValues(\"field\");\n    assertEquals(0, dv.get(0));\n    \n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","date":1457644139,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testNumberMergeAwayAllValues().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testNumberMergeAwayAllValues().mjava","sourceNew":"  public void testNumberMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"field\", 5));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    NumericDocValues dv = getOnlyLeafReader(ireader).getNumericDocValues(\"field\");\n    assertEquals(0, dv.get(0));\n    \n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testNumberMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"field\", 5));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    NumericDocValues dv = getOnlySegmentReader(ireader).getNumericDocValues(\"field\");\n    assertEquals(0, dv.get(0));\n    \n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":["26528d5285d5485e3c0b24a6fae22ef227513cf7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testNumberMergeAwayAllValues().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testNumberMergeAwayAllValues().mjava","sourceNew":"  public void testNumberMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"field\", 5));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    NumericDocValues dv = getOnlyLeafReader(ireader).getNumericDocValues(\"field\");\n    assertEquals(NO_MORE_DOCS, dv.nextDoc());\n    \n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testNumberMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"field\", 5));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    NumericDocValues dv = getOnlyLeafReader(ireader).getNumericDocValues(\"field\");\n    assertEquals(0, dv.get(0));\n    \n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testNumberMergeAwayAllValues().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testNumberMergeAwayAllValues().mjava","sourceNew":"  public void testNumberMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"field\", 5));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    NumericDocValues dv = getOnlyLeafReader(ireader).getNumericDocValues(\"field\");\n    assertEquals(NO_MORE_DOCS, dv.nextDoc());\n    \n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testNumberMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"field\", 5));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    NumericDocValues dv = getOnlyLeafReader(ireader).getNumericDocValues(\"field\");\n    assertEquals(0, dv.get(0));\n    \n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testNumberMergeAwayAllValues().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testNumberMergeAwayAllValues().mjava","sourceNew":"  public void testNumberMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"field\", 5));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    NumericDocValues dv = getOnlyLeafReader(ireader).getNumericDocValues(\"field\");\n    assertEquals(NO_MORE_DOCS, dv.nextDoc());\n    \n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testNumberMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"field\", 5));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    NumericDocValues dv = getOnlyLeafReader(ireader).getNumericDocValues(\"field\");\n    assertEquals(0, dv.get(0));\n    \n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","26528d5285d5485e3c0b24a6fae22ef227513cf7"],"26528d5285d5485e3c0b24a6fae22ef227513cf7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238","26528d5285d5485e3c0b24a6fae22ef227513cf7"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"26528d5285d5485e3c0b24a6fae22ef227513cf7":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}