{"path":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","commits":[{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","sourceNew":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","sourceOld":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71849bd31d150133a9a1027bf1607967b406c57","date":1436811056,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","sourceNew":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   *@param planetModel is the planet model.\n   *@param pointList is the set of points to create the polygon from.\n   *@param internalEdgeFlags is a bitset describing whether each edge is internal or not.\n   *@param returnEdgeInternal is true when the final return edge is an internal one.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","sourceOld":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","sourceNew":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   *@param planetModel is the planet model.\n   *@param pointList is the set of points to create the polygon from.\n   *@param internalEdgeFlags is a bitset describing whether each edge is internal or not.\n   *@param returnEdgeInternal is true when the final return edge is an internal one.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","sourceOld":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   *@param planetModel is the planet model.\n   *@param pointList is the set of points to create the polygon from.\n   *@param internalEdgeFlags is a bitset describing whether each edge is internal or not.\n   *@param returnEdgeInternal is true when the final return edge is an internal one.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a71849bd31d150133a9a1027bf1607967b406c57":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4e444678504caf66a8060b1d514383aa4feac0c":["a71849bd31d150133a9a1027bf1607967b406c57"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"a71849bd31d150133a9a1027bf1607967b406c57":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a71849bd31d150133a9a1027bf1607967b406c57"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}