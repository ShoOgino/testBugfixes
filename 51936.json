{"path":"lucene/backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpansSkipTo().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpansSkipTo().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpansSkipTo().mjava","sourceNew":"  public void testSpansSkipTo() throws Exception {\n\t  SpanTermQuery t1 = new SpanTermQuery(new Term(\"field\", \"seventy\"));\n\t  SpanTermQuery t2 = new SpanTermQuery(new Term(\"field\", \"seventy\"));\n\t  Spans s1 = t1.getSpans(searcher.getIndexReader());\n\t  Spans s2 = t2.getSpans(searcher.getIndexReader());\n\t  \n\t  assertTrue(s1.next());\n\t  assertTrue(s2.next());\n\t  \n\t  boolean hasMore = true;\n\t  \n\t  do {\n\t\t  hasMore = skipToAccoringToJavaDocs(s1, s1.doc());\n\t\t  assertEquals(hasMore, s2.skipTo(s2.doc()));\n\t\t  assertEquals(s1.doc(), s2.doc());\n\t  } while (hasMore);\n  }\n\n","sourceOld":"  public void testSpansSkipTo() throws Exception {\n\t  SpanTermQuery t1 = new SpanTermQuery(new Term(\"field\", \"seventy\"));\n\t  SpanTermQuery t2 = new SpanTermQuery(new Term(\"field\", \"seventy\"));\n\t  Spans s1 = t1.getSpans(searcher.getIndexReader());\n\t  Spans s2 = t2.getSpans(searcher.getIndexReader());\n\t  \n\t  assertTrue(s1.next());\n\t  assertTrue(s2.next());\n\t  \n\t  boolean hasMore = true;\n\t  \n\t  do {\n\t\t  hasMore = skipToAccoringToJavaDocs(s1, s1.doc());\n\t\t  assertEquals(hasMore, s2.skipTo(s2.doc()));\n\t\t  assertEquals(s1.doc(), s2.doc());\n\t  } while (hasMore);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpansSkipTo().mjava","sourceNew":null,"sourceOld":"  public void testSpansSkipTo() throws Exception {\n\t  SpanTermQuery t1 = new SpanTermQuery(new Term(\"field\", \"seventy\"));\n\t  SpanTermQuery t2 = new SpanTermQuery(new Term(\"field\", \"seventy\"));\n\t  Spans s1 = t1.getSpans(searcher.getIndexReader());\n\t  Spans s2 = t2.getSpans(searcher.getIndexReader());\n\t  \n\t  assertTrue(s1.next());\n\t  assertTrue(s2.next());\n\t  \n\t  boolean hasMore = true;\n\t  \n\t  do {\n\t\t  hasMore = skipToAccoringToJavaDocs(s1, s1.doc());\n\t\t  assertEquals(hasMore, s2.skipTo(s2.doc()));\n\t\t  assertEquals(s1.doc(), s2.doc());\n\t  } while (hasMore);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}