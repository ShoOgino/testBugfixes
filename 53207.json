{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamOffsetsEnum#nextPosition().mjava","commits":[{"id":"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571","date":1515642580,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamOffsetsEnum#nextPosition().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamPostingsEnum#nextPosition().mjava","sourceNew":"    @Override\n    public boolean nextPosition() throws IOException {\n      if (stream != null) {\n        while (stream.incrementToken()) {\n          for (int i = 0; i < matchers.length; i++) {\n            if (matchers[i].run(charTermAtt.buffer(), 0, charTermAtt.length())) {\n              currentMatch = i;\n              return true;\n            }\n          }\n        }\n        stream.end();\n        close();\n      }\n      // exhausted\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public int nextPosition() throws IOException {\n      if (stream != null) {\n        while (stream.incrementToken()) {\n          for (int i = 0; i < matchers.length; i++) {\n            if (matchers[i].run(charTermAtt.buffer(), 0, charTermAtt.length())) {\n              currentStartOffset = offsetAtt.startOffset();\n              currentEndOffset = offsetAtt.endOffset();\n              currentMatch = i;\n              return 0;\n            }\n          }\n        }\n        stream.end();\n        close();\n      }\n      // exhausted\n      currentStartOffset = currentEndOffset = Integer.MAX_VALUE;\n      return Integer.MAX_VALUE;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamOffsetsEnum#nextPosition().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean nextPosition() throws IOException {\n      if (stream != null) {\n        while (stream.incrementToken()) {\n          for (int i = 0; i < matchers.length; i++) {\n            if (matchers[i].run(charTermAtt.buffer(), 0, charTermAtt.length())) {\n              currentMatch = i;\n              return true;\n            }\n          }\n        }\n        stream.end();\n        close();\n      }\n      // exhausted\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d35c63123a7e255b58f8cf3948eb9a6128100a32","date":1574872099,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamOffsetsEnum#nextPosition().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/TokenStreamOffsetStrategy.TokenStreamOffsetsEnum#nextPosition().mjava","sourceNew":"    @Override\n    public boolean nextPosition() throws IOException {\n      if (stream != null) {\n        while (stream.incrementToken()) {\n          for (int i = 0; i < matchers.length; i++) {\n            if (matchers[i].match(charTermAtt.buffer(), 0, charTermAtt.length())) {\n              currentMatch = i;\n              return true;\n            }\n          }\n        }\n        stream.end();\n        close();\n      }\n      // exhausted\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean nextPosition() throws IOException {\n      if (stream != null) {\n        while (stream.incrementToken()) {\n          for (int i = 0; i < matchers.length; i++) {\n            if (matchers[i].run(charTermAtt.buffer(), 0, charTermAtt.length())) {\n              currentMatch = i;\n              return true;\n            }\n          }\n        }\n        stream.end();\n        close();\n      }\n      // exhausted\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d35c63123a7e255b58f8cf3948eb9a6128100a32":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d35c63123a7e255b58f8cf3948eb9a6128100a32"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["d35c63123a7e255b58f8cf3948eb9a6128100a32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571"],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["b94236357aaa22b76c10629851fe4e376e0cea82"],"d35c63123a7e255b58f8cf3948eb9a6128100a32":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}