{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testWithStemExclusionSet().mjava","commits":[{"id":"b9fc748b8fc4097ccc222bdf2948cc2d20770c54","date":1264591145,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testWithStemExclusionSet().mjava","pathOld":"/dev/null","sourceNew":"  public void testWithStemExclusionSet() throws IOException {\n    Set<String> set = new HashSet<String>();\n    set.add(\"ساهدهات\");\n    ArabicAnalyzer a = new ArabicAnalyzer(Version.LUCENE_CURRENT, CharArraySet.EMPTY_SET, set);\n    assertAnalyzesTo(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهدهات\" });\n    assertAnalyzesToReuse(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهدهات\" });\n\n    \n    a = new ArabicAnalyzer(Version.LUCENE_CURRENT, CharArraySet.EMPTY_SET, CharArraySet.EMPTY_SET);\n    assertAnalyzesTo(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهد\" });\n    assertAnalyzesToReuse(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهد\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testWithStemExclusionSet().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testWithStemExclusionSet().mjava","sourceNew":"  public void testWithStemExclusionSet() throws IOException {\n    Set<String> set = new HashSet<String>();\n    set.add(\"ساهدهات\");\n    ArabicAnalyzer a = new ArabicAnalyzer(TEST_VERSION_CURRENT, CharArraySet.EMPTY_SET, set);\n    assertAnalyzesTo(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهدهات\" });\n    assertAnalyzesToReuse(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهدهات\" });\n\n    \n    a = new ArabicAnalyzer(TEST_VERSION_CURRENT, CharArraySet.EMPTY_SET, CharArraySet.EMPTY_SET);\n    assertAnalyzesTo(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهد\" });\n    assertAnalyzesToReuse(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهد\" });\n  }\n\n","sourceOld":"  public void testWithStemExclusionSet() throws IOException {\n    Set<String> set = new HashSet<String>();\n    set.add(\"ساهدهات\");\n    ArabicAnalyzer a = new ArabicAnalyzer(Version.LUCENE_CURRENT, CharArraySet.EMPTY_SET, set);\n    assertAnalyzesTo(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهدهات\" });\n    assertAnalyzesToReuse(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهدهات\" });\n\n    \n    a = new ArabicAnalyzer(Version.LUCENE_CURRENT, CharArraySet.EMPTY_SET, CharArraySet.EMPTY_SET);\n    assertAnalyzesTo(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهد\" });\n    assertAnalyzesToReuse(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهد\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testWithStemExclusionSet().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testWithStemExclusionSet().mjava","sourceNew":"  public void testWithStemExclusionSet() throws IOException {\n    Set<String> set = new HashSet<String>();\n    set.add(\"ساهدهات\");\n    ArabicAnalyzer a = new ArabicAnalyzer(TEST_VERSION_CURRENT, CharArraySet.EMPTY_SET, set);\n    assertAnalyzesTo(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهدهات\" });\n    assertAnalyzesToReuse(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهدهات\" });\n\n    \n    a = new ArabicAnalyzer(TEST_VERSION_CURRENT, CharArraySet.EMPTY_SET, CharArraySet.EMPTY_SET);\n    assertAnalyzesTo(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهد\" });\n    assertAnalyzesToReuse(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهد\" });\n  }\n\n","sourceOld":"  public void testWithStemExclusionSet() throws IOException {\n    Set<String> set = new HashSet<String>();\n    set.add(\"ساهدهات\");\n    ArabicAnalyzer a = new ArabicAnalyzer(TEST_VERSION_CURRENT, CharArraySet.EMPTY_SET, set);\n    assertAnalyzesTo(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهدهات\" });\n    assertAnalyzesToReuse(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهدهات\" });\n\n    \n    a = new ArabicAnalyzer(TEST_VERSION_CURRENT, CharArraySet.EMPTY_SET, CharArraySet.EMPTY_SET);\n    assertAnalyzesTo(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهد\" });\n    assertAnalyzesToReuse(a, \"كبيرة the quick ساهدهات\", new String[] { \"كبير\",\"the\", \"quick\", \"ساهد\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b9fc748b8fc4097ccc222bdf2948cc2d20770c54":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["b9fc748b8fc4097ccc222bdf2948cc2d20770c54"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"b9fc748b8fc4097ccc222bdf2948cc2d20770c54":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b9fc748b8fc4097ccc222bdf2948cc2d20770c54"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}