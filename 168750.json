{"path":"solr/core/src/java/org/apache/solr/rest/ManagedResource#loadManagedDataAndNotify(Collection[ManagedResourceObserver]).mjava","commits":[{"id":"716cfb7876e1d813737493c55157adc5883673ae","date":1568392527,"type":1,"author":"Thomas WÃ¶ckinger","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/ManagedResource#loadManagedDataAndNotify(Collection[ManagedResourceObserver]).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/ManagedResource#loadManagedDataAndNotify(List[ManagedResourceObserver]).mjava","sourceNew":"  /**\n   * Called once during core initialization to get the managed\n   * data loaded from storage and notify observers.\n   */\n  public void loadManagedDataAndNotify(Collection<ManagedResourceObserver> observers) \n      throws SolrException {\n\n    // load managed data from storage\n    reloadFromStorage();\n    \n    // important!!! only affect the Solr component once during core initialization\n    // also, as most analysis components will alter the initArgs it is processes them\n    // we need to clone the managed initArgs\n    notifyObserversDuringInit(managedInitArgs, observers);\n    \n    // some basic date tracking around when the data was initialized and updated\n    initializedOn = new Date();\n    lastUpdateSinceInitialization = null;    \n  }\n\n","sourceOld":"  /**\n   * Called once during core initialization to get the managed\n   * data loaded from storage and notify observers.\n   */\n  public void loadManagedDataAndNotify(List<ManagedResourceObserver> observers) \n      throws SolrException {\n\n    // load managed data from storage\n    reloadFromStorage();\n    \n    // important!!! only affect the Solr component once during core initialization\n    // also, as most analysis components will alter the initArgs it is processes them\n    // we need to clone the managed initArgs\n    notifyObserversDuringInit(managedInitArgs, observers);\n    \n    // some basic date tracking around when the data was initialized and updated\n    initializedOn = new Date();\n    lastUpdateSinceInitialization = null;    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716cfb7876e1d813737493c55157adc5883673ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["716cfb7876e1d813737493c55157adc5883673ae"]},"commit2Childs":{"716cfb7876e1d813737493c55157adc5883673ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["716cfb7876e1d813737493c55157adc5883673ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}