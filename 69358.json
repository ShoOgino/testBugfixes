{"path":"modules/spatial/src/test/java/org/apache/lucene/spatial/base/shape/TestShapes2D#testSimplePoint().mjava","commits":[{"id":"ef186f4ac90644cd4e8df6b66acb56a52e5ca602","date":1329778037,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/test/java/org/apache/lucene/spatial/base/shape/TestShapes2D#testSimplePoint().mjava","pathOld":"modules/spatial-lucene/src/test/java/org/apache/lucene/spatial/base/shape/TestShapes2D#testSimplePoint().mjava","sourceNew":"  @Test\n  public void testSimplePoint() {\n    Point pt = ctx.makePoint(0,0);\n    String msg = pt.toString();\n\n    //test equals & hashcode\n    Point pt2 = ctx.makePoint(0,0);\n    assertEquals(msg, pt, pt2);\n    assertEquals(msg, pt.hashCode(), pt2.hashCode());\n\n    assertFalse(msg,pt.hasArea());\n    assertEquals(msg,pt.getCenter(),pt);\n    Rectangle bbox = pt.getBoundingBox();\n    assertFalse(msg,bbox.hasArea());\n    assertEquals(msg,pt,bbox.getCenter());\n\n    assertRelation(msg, CONTAINS, pt, pt2);\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(0, 1));\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(1, 0));\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(1, 1));\n  }\n\n","sourceOld":"  @Test\n  public void testSimplePoint() {\n    Point pt = ctx.makePoint(0,0);\n    String msg = pt.toString();\n\n    //test equals & hashcode\n    Point pt2 = ctx.makePoint(0,0);\n    assertEquals(msg, pt, pt2);\n    assertEquals(msg, pt.hashCode(), pt2.hashCode());\n\n    assertFalse(msg,pt.hasArea());\n    assertEquals(msg,pt.getCenter(),pt);\n    Rectangle bbox = pt.getBoundingBox();\n    assertFalse(msg,bbox.hasArea());\n    assertEquals(msg,pt,bbox.getCenter());\n\n    assertRelation(msg, CONTAINS, pt, pt2);\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(0, 1));\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(1, 0));\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(1, 1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"935445a30e9e8dc0240a7c78efc73d08c2faa6a8","date":1329778521,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/test/org/apache/lucene/spatial/base/shape/TestShapes2D#testSimplePoint().mjava","pathOld":"modules/spatial/src/test/java/org/apache/lucene/spatial/base/shape/TestShapes2D#testSimplePoint().mjava","sourceNew":"  @Test\n  public void testSimplePoint() {\n    Point pt = ctx.makePoint(0,0);\n    String msg = pt.toString();\n\n    //test equals & hashcode\n    Point pt2 = ctx.makePoint(0,0);\n    assertEquals(msg, pt, pt2);\n    assertEquals(msg, pt.hashCode(), pt2.hashCode());\n\n    assertFalse(msg,pt.hasArea());\n    assertEquals(msg,pt.getCenter(),pt);\n    Rectangle bbox = pt.getBoundingBox();\n    assertFalse(msg,bbox.hasArea());\n    assertEquals(msg,pt,bbox.getCenter());\n\n    assertRelation(msg, CONTAINS, pt, pt2);\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(0, 1));\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(1, 0));\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(1, 1));\n  }\n\n","sourceOld":"  @Test\n  public void testSimplePoint() {\n    Point pt = ctx.makePoint(0,0);\n    String msg = pt.toString();\n\n    //test equals & hashcode\n    Point pt2 = ctx.makePoint(0,0);\n    assertEquals(msg, pt, pt2);\n    assertEquals(msg, pt.hashCode(), pt2.hashCode());\n\n    assertFalse(msg,pt.hasArea());\n    assertEquals(msg,pt.getCenter(),pt);\n    Rectangle bbox = pt.getBoundingBox();\n    assertFalse(msg,bbox.hasArea());\n    assertEquals(msg,pt,bbox.getCenter());\n\n    assertRelation(msg, CONTAINS, pt, pt2);\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(0, 1));\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(1, 0));\n    assertRelation(msg, DISJOINT, pt, ctx.makePoint(1, 1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}