{"path":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","pathOld":"solr/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","sourceNew":"  private String appendParam(String url, String param) {\n    return url + (url.indexOf('?')>0 ? \"&\" : \"?\") + param;\n  }\n\n","sourceOld":"  private String appendParam(String url, String param) {\n    return url + (url.indexOf('?')>0 ? \"&\" : \"?\") + param;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","pathOld":"solr/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","sourceNew":"  private String appendParam(String url, String param) {\n    return url + (url.indexOf('?')>0 ? \"&\" : \"?\") + param;\n  }\n\n","sourceOld":"  private String appendParam(String url, String param) {\n    return url + (url.indexOf('?')>0 ? \"&\" : \"?\") + param;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","pathOld":"solr/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","sourceNew":"  private String appendParam(String url, String param) {\n    return url + (url.indexOf('?')>0 ? \"&\" : \"?\") + param;\n  }\n\n","sourceOld":"  private String appendParam(String url, String param) {\n    return url + (url.indexOf('?')>0 ? \"&\" : \"?\") + param;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa","date":1343692569,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","sourceNew":"  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","sourceOld":"  private String appendParam(String url, String param) {\n    return url + (url.indexOf('?')>0 ? \"&\" : \"?\") + param;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","sourceNew":"  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","sourceOld":"  private String appendParam(String url, String param) {\n    return url + (url.indexOf('?')>0 ? \"&\" : \"?\") + param;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","sourceNew":"  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","sourceOld":"  private String appendParam(String url, String param) {\n    return url + (url.indexOf('?')>0 ? \"&\" : \"?\") + param;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2c3a504730329ae644b009dee43024116605d47","date":1345253449,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","sourceNew":"  /**\n   * Appends a URL query parameter to a URL \n   * @param url the original URL\n   * @param param the parameter(s) to append, separated by \"&\"\n   * @return the string version of the resulting URL\n   */\n  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","sourceOld":"  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","bugFix":null,"bugIntro":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","sourceNew":"  /**\n   * Appends a URL query parameter to a URL \n   * @param url the original URL\n   * @param param the parameter(s) to append, separated by \"&\"\n   * @return the string version of the resulting URL\n   */\n  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","sourceOld":"  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","sourceNew":"  /**\n   * Appends a URL query parameter to a URL \n   * @param url the original URL\n   * @param param the parameter(s) to append, separated by \"&\"\n   * @return the string version of the resulting URL\n   */\n  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","sourceOld":"  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","date":1423508552,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","sourceNew":"  /**\n   * Appends a URL query parameter to a URL \n   * @param url the original URL\n   * @param param the parameter(s) to append, separated by \"&amp;\"\n   * @return the string version of the resulting URL\n   */\n  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","sourceOld":"  /**\n   * Appends a URL query parameter to a URL \n   * @param url the original URL\n   * @param param the parameter(s) to append, separated by \"&\"\n   * @return the string version of the resulting URL\n   */\n  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","bugFix":["c2c3a504730329ae644b009dee43024116605d47"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#appendParam(String,String).mjava","sourceNew":"  /**\n   * Appends a URL query parameter to a URL\n   * @param url the original URL\n   * @param param the parameter(s) to append, separated by \"&amp;\"\n   * @return the string version of the resulting URL\n   */\n  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","sourceOld":"  /**\n   * Appends a URL query parameter to a URL \n   * @param url the original URL\n   * @param param the parameter(s) to append, separated by \"&amp;\"\n   * @return the string version of the resulting URL\n   */\n  public static String appendParam(String url, String param) {\n    String[] pa = param.split(\"&\");\n    for(String p : pa) {\n      if(p.trim().length() == 0) continue;\n      String[] kv = p.split(\"=\");\n      if(kv.length == 2) {\n        url = url + (url.indexOf('?')>0 ? \"&\" : \"?\") + kv[0] +\"=\"+ kv[1];\n      } else {\n        warn(\"Skipping param \"+p+\" which is not on form key=value\");\n      }\n    }\n    return url;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"616c1830142ff5c1ddedec1ed898733b73c8e23b":["d6f074e73200c07d54f242d3880a8da5a35ff97b","c2c3a504730329ae644b009dee43024116605d47"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"c2c3a504730329ae644b009dee43024116605d47":["2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","c2c3a504730329ae644b009dee43024116605d47"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["c26f00b574427b55127e869b935845554afde1fa","2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["c26f00b574427b55127e869b935845554afde1fa","2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["c2c3a504730329ae644b009dee43024116605d47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"]},"commit2Childs":{"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"c26f00b574427b55127e869b935845554afde1fa":["2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"c2c3a504730329ae644b009dee43024116605d47":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa":["c2c3a504730329ae644b009dee43024116605d47","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["616c1830142ff5c1ddedec1ed898733b73c8e23b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}