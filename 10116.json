{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<String,Long>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, \"UTF-8\");\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<String,Long>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, \"UTF-8\");\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, \"UTF-8\");\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<String,Long>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, \"UTF-8\");\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, StandardCharsets.UTF_8);\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, \"UTF-8\");\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    ChecksumIndexInput input = new BufferedChecksumIndexInput(in);\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(input, scratch);\n      if (scratch.equals(END)) {\n        SimpleTextUtil.checkFooter(input, CHECKSUM);\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, StandardCharsets.UTF_8);\n        fields.put(fieldName, input.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, StandardCharsets.UTF_8);\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["caf65fa364fcf8ea8ef1032c1247622933af3b04"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    ChecksumIndexInput input = new BufferedChecksumIndexInput(in);\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(input, scratch);\n      if (scratch.equals(END)) {\n        SimpleTextUtil.checkFooter(input, CHECKSUM);\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, StandardCharsets.UTF_8);\n        fields.put(fieldName, input.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, \"UTF-8\");\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"caf65fa364fcf8ea8ef1032c1247622933af3b04","date":1397057745,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    ChecksumIndexInput input = new BufferedChecksumIndexInput(in);\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(input, scratch);\n      if (scratch.equals(END)) {\n        SimpleTextUtil.checkFooter(input);\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, StandardCharsets.UTF_8);\n        fields.put(fieldName, input.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    ChecksumIndexInput input = new BufferedChecksumIndexInput(in);\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(input, scratch);\n      if (scratch.equals(END)) {\n        SimpleTextUtil.checkFooter(input, CHECKSUM);\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, StandardCharsets.UTF_8);\n        fields.put(fieldName, input.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    ChecksumIndexInput input = new BufferedChecksumIndexInput(in);\n    BytesRefBuilder scratch = new BytesRefBuilder();\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(input, scratch);\n      if (scratch.get().equals(END)) {\n        SimpleTextUtil.checkFooter(input);\n        return fields;\n      } else if (StringHelper.startsWith(scratch.get(), FIELD)) {\n        String fieldName = new String(scratch.bytes(), FIELD.length, scratch.length() - FIELD.length, StandardCharsets.UTF_8);\n        fields.put(fieldName, input.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    ChecksumIndexInput input = new BufferedChecksumIndexInput(in);\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(input, scratch);\n      if (scratch.equals(END)) {\n        SimpleTextUtil.checkFooter(input);\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, StandardCharsets.UTF_8);\n        fields.put(fieldName, input.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":["7d89d7e4e5101347833eea558851bf4209218619","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    ChecksumIndexInput input = new BufferedChecksumIndexInput(in);\n    BytesRefBuilder scratch = new BytesRefBuilder();\n    TreeMap<String,Long> fields = new TreeMap<>();\n\n    while (true) {\n      SimpleTextUtil.readLine(input, scratch);\n      if (scratch.get().equals(END)) {\n        SimpleTextUtil.checkFooter(input);\n        return fields;\n      } else if (StringHelper.startsWith(scratch.get(), FIELD)) {\n        String fieldName = new String(scratch.bytes(), FIELD.length, scratch.length() - FIELD.length, StandardCharsets.UTF_8);\n        fields.put(fieldName, input.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    ChecksumIndexInput input = new BufferedChecksumIndexInput(in);\n    BytesRefBuilder scratch = new BytesRefBuilder();\n    TreeMap<String,Long> fields = new TreeMap<>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(input, scratch);\n      if (scratch.get().equals(END)) {\n        SimpleTextUtil.checkFooter(input);\n        return fields;\n      } else if (StringHelper.startsWith(scratch.get(), FIELD)) {\n        String fieldName = new String(scratch.bytes(), FIELD.length, scratch.length() - FIELD.length, StandardCharsets.UTF_8);\n        fields.put(fieldName, input.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["7d89d7e4e5101347833eea558851bf4209218619"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["caf65fa364fcf8ea8ef1032c1247622933af3b04"],"caf65fa364fcf8ea8ef1032c1247622933af3b04":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"7d89d7e4e5101347833eea558851bf4209218619":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"51f5280f31484820499077f41fcdfe92d527d9dc":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51f5280f31484820499077f41fcdfe92d527d9dc"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","caf65fa364fcf8ea8ef1032c1247622933af3b04"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["51f5280f31484820499077f41fcdfe92d527d9dc"],"7d89d7e4e5101347833eea558851bf4209218619":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"caf65fa364fcf8ea8ef1032c1247622933af3b04":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"51f5280f31484820499077f41fcdfe92d527d9dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}