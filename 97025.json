{"path":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestCollectionAPI#missingParamsError(CloudSolrClient,ModifiableSolrParams).mjava","commits":[{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestCollectionAPI#missingParamsError(CloudSolrClient,ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI#missingParamsError(CloudSolrClient,ModifiableSolrParams).mjava","sourceNew":"  private void missingParamsError(CloudSolrClient client, ModifiableSolrParams origParams)\n      throws IOException, SolrServerException {\n\n    SolrRequest request;\n    try {\n      request = new QueryRequest(origParams);\n      request.setPath(\"/admin/collections\");\n      client.request(request);\n      fail(\"Should have thrown a SolrException due to lack of a required parameter.\");\n    } catch (SolrException se) {\n      assertTrue(\"Should have gotten a specific message back mentioning 'missing required parameter'. Got: \" + se.getMessage(),\n          se.getMessage().toLowerCase(Locale.ROOT).contains(\"missing required parameter:\"));\n    }\n  }\n\n","sourceOld":"  private void missingParamsError(CloudSolrClient client, ModifiableSolrParams origParams)\n      throws IOException, SolrServerException {\n\n    SolrRequest request;\n    try {\n      request = new QueryRequest(origParams);\n      request.setPath(\"/admin/collections\");\n      client.request(request);\n      fail(\"Should have thrown a SolrException due to lack of a required parameter.\");\n    } catch (SolrException se) {\n      assertTrue(\"Should have gotten a specific message back mentioning 'missing required parameter'. Got: \" + se.getMessage(),\n          se.getMessage().toLowerCase(Locale.ROOT).contains(\"missing required parameter:\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestCollectionAPI#missingParamsError(CloudSolrClient,ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI#missingParamsError(CloudSolrClient,ModifiableSolrParams).mjava","sourceNew":"  private void missingParamsError(CloudSolrClient client, ModifiableSolrParams origParams)\n      throws IOException, SolrServerException {\n\n    SolrRequest request;\n    try {\n      request = new QueryRequest(origParams);\n      request.setPath(\"/admin/collections\");\n      client.request(request);\n      fail(\"Should have thrown a SolrException due to lack of a required parameter.\");\n    } catch (SolrException se) {\n      assertTrue(\"Should have gotten a specific message back mentioning 'missing required parameter'. Got: \" + se.getMessage(),\n          se.getMessage().toLowerCase(Locale.ROOT).contains(\"missing required parameter:\"));\n    }\n  }\n\n","sourceOld":"  private void missingParamsError(CloudSolrClient client, ModifiableSolrParams origParams)\n      throws IOException, SolrServerException {\n\n    SolrRequest request;\n    try {\n      request = new QueryRequest(origParams);\n      request.setPath(\"/admin/collections\");\n      client.request(request);\n      fail(\"Should have thrown a SolrException due to lack of a required parameter.\");\n    } catch (SolrException se) {\n      assertTrue(\"Should have gotten a specific message back mentioning 'missing required parameter'. Got: \" + se.getMessage(),\n          se.getMessage().toLowerCase(Locale.ROOT).contains(\"missing required parameter:\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestCollectionAPI#missingParamsError(CloudSolrClient,ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestCollectionAPI#missingParamsError(CloudSolrClient,ModifiableSolrParams).mjava","sourceNew":"  private void missingParamsError(CloudSolrClient client, ModifiableSolrParams origParams)\n      throws IOException, SolrServerException {\n\n    @SuppressWarnings({\"rawtypes\"})\n    SolrRequest request;\n    try {\n      request = new QueryRequest(origParams);\n      request.setPath(\"/admin/collections\");\n      client.request(request);\n      fail(\"Should have thrown a SolrException due to lack of a required parameter.\");\n    } catch (SolrException se) {\n      assertTrue(\"Should have gotten a specific message back mentioning 'missing required parameter'. Got: \" + se.getMessage(),\n          se.getMessage().toLowerCase(Locale.ROOT).contains(\"missing required parameter:\"));\n    }\n  }\n\n","sourceOld":"  private void missingParamsError(CloudSolrClient client, ModifiableSolrParams origParams)\n      throws IOException, SolrServerException {\n\n    SolrRequest request;\n    try {\n      request = new QueryRequest(origParams);\n      request.setPath(\"/admin/collections\");\n      client.request(request);\n      fail(\"Should have thrown a SolrException due to lack of a required parameter.\");\n    } catch (SolrException se) {\n      assertTrue(\"Should have gotten a specific message back mentioning 'missing required parameter'. Got: \" + se.getMessage(),\n          se.getMessage().toLowerCase(Locale.ROOT).contains(\"missing required parameter:\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}