{"path":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","commits":[{"id":"55110eb60c5105294fc2ae7912d82b750865aa58","date":1341389822,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem)\n      throws IOException {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    bulkOperation = BulkOperation.of(format, bitsPerValue);\n    iterations = bulkOperation.computeIterations(valueCount, mem);\n    nextBlocks = new long[iterations * bulkOperation.blocks()];\n    nextValues = new long[iterations * bulkOperation.values()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem)\n      throws IOException {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    bulkOperation = BulkOperation.of(format, bitsPerValue);\n    iterations = bulkOperation.computeIterations(valueCount, mem);\n    nextBlocks = new long[iterations * bulkOperation.blocks()];\n    nextValues = new long[iterations * bulkOperation.values()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"035130b0c342f404c027af8c8870587c3741cb1e","date":1342898805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","sourceNew":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem) {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    bulkOperation = BulkOperation.of(format, bitsPerValue);\n    iterations = bulkOperation.computeIterations(valueCount, mem);\n    nextBlocks = LongBuffer.allocate(iterations * bulkOperation.blocks());\n    nextValues = LongBuffer.allocate(iterations * bulkOperation.values());\n    written = 0;\n    finished = false;\n  }\n\n","sourceOld":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem)\n      throws IOException {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    bulkOperation = BulkOperation.of(format, bitsPerValue);\n    iterations = bulkOperation.computeIterations(valueCount, mem);\n    nextBlocks = new long[iterations * bulkOperation.blocks()];\n    nextValues = new long[iterations * bulkOperation.values()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e3359210474c12c0b79e6400450313e3d7ef2bb","date":1344347790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","sourceNew":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem) {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    encoder = BulkOperation.of(format, bitsPerValue);\n    iterations = encoder.computeIterations(valueCount, mem);\n    nextBlocks = new long[iterations * encoder.blockCount()];\n    nextValues = new long[iterations * encoder.valueCount()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","sourceOld":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem) {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    bulkOperation = BulkOperation.of(format, bitsPerValue);\n    iterations = bulkOperation.computeIterations(valueCount, mem);\n    nextBlocks = LongBuffer.allocate(iterations * bulkOperation.blocks());\n    nextValues = LongBuffer.allocate(iterations * bulkOperation.values());\n    written = 0;\n    finished = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","sourceNew":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem) {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    encoder = BulkOperation.of(format, bitsPerValue);\n    iterations = encoder.computeIterations(valueCount, mem);\n    nextBlocks = new long[iterations * encoder.blockCount()];\n    nextValues = new long[iterations * encoder.valueCount()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","sourceOld":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem)\n      throws IOException {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    bulkOperation = BulkOperation.of(format, bitsPerValue);\n    iterations = bulkOperation.computeIterations(valueCount, mem);\n    nextBlocks = new long[iterations * bulkOperation.blocks()];\n    nextValues = new long[iterations * bulkOperation.values()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","sourceNew":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem) {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    encoder = BulkOperation.of(format, bitsPerValue);\n    iterations = encoder.computeIterations(valueCount, mem);\n    nextBlocks = new long[iterations * encoder.blockCount()];\n    nextValues = new long[iterations * encoder.valueCount()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","sourceOld":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem)\n      throws IOException {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    bulkOperation = BulkOperation.of(format, bitsPerValue);\n    iterations = bulkOperation.computeIterations(valueCount, mem);\n    nextBlocks = new long[iterations * bulkOperation.blocks()];\n    nextValues = new long[iterations * bulkOperation.values()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c661dcad9680b8a6ce5bf2cc583a69ec965328bc","date":1352297862,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","sourceNew":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem) {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    encoder = BulkOperation.of(format, bitsPerValue);\n    iterations = encoder.computeIterations(valueCount, mem);\n    nextBlocks = new byte[8 * iterations * encoder.blockCount()];\n    nextValues = new long[iterations * encoder.valueCount()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","sourceOld":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem) {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    encoder = BulkOperation.of(format, bitsPerValue);\n    iterations = encoder.computeIterations(valueCount, mem);\n    nextBlocks = new long[iterations * encoder.blockCount()];\n    nextValues = new long[iterations * encoder.valueCount()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e29d4d91327929d477b701d3ef2f5b3457d26ec5","date":1359465689,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","sourceNew":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem) {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    encoder = BulkOperation.of(format, bitsPerValue);\n    iterations = encoder.computeIterations(valueCount, mem);\n    nextBlocks = new byte[iterations * encoder.byteBlockCount()];\n    nextValues = new long[iterations * encoder.byteValueCount()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","sourceOld":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem) {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    encoder = BulkOperation.of(format, bitsPerValue);\n    iterations = encoder.computeIterations(valueCount, mem);\n    nextBlocks = new byte[8 * iterations * encoder.blockCount()];\n    nextValues = new long[iterations * encoder.valueCount()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de522d9303bd67c8473a269a1319125d1f3700e0","date":1359477856,"type":3,"author":"Adrien Grand","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedWriter#PackedWriter(PackedInts.Format,DataOutput,int,int,int).mjava","sourceNew":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem) {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    encoder = BulkOperation.of(format, bitsPerValue);\n    iterations = encoder.computeIterations(valueCount, mem);\n    nextBlocks = new byte[iterations * encoder.byteBlockCount()];\n    nextValues = new long[iterations * encoder.byteValueCount()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","sourceOld":"  PackedWriter(PackedInts.Format format, DataOutput out, int valueCount, int bitsPerValue, int mem) {\n    super(out, valueCount, bitsPerValue);\n    this.format = format;\n    encoder = BulkOperation.of(format, bitsPerValue);\n    iterations = encoder.computeIterations(valueCount, mem);\n    nextBlocks = new byte[8 * iterations * encoder.blockCount()];\n    nextValues = new long[iterations * encoder.valueCount()];\n    off = 0;\n    written = 0;\n    finished = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e29d4d91327929d477b701d3ef2f5b3457d26ec5":["c661dcad9680b8a6ce5bf2cc583a69ec965328bc"],"001b25b42373b22a52f399dbf072f1224632e8e6":["55110eb60c5105294fc2ae7912d82b750865aa58","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"55110eb60c5105294fc2ae7912d82b750865aa58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","55110eb60c5105294fc2ae7912d82b750865aa58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c661dcad9680b8a6ce5bf2cc583a69ec965328bc":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"0e3359210474c12c0b79e6400450313e3d7ef2bb":["035130b0c342f404c027af8c8870587c3741cb1e"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["55110eb60c5105294fc2ae7912d82b750865aa58","0e3359210474c12c0b79e6400450313e3d7ef2bb"],"035130b0c342f404c027af8c8870587c3741cb1e":["fe33227f6805edab2036cbb80645cc4e2d1fa424"],"de522d9303bd67c8473a269a1319125d1f3700e0":["c661dcad9680b8a6ce5bf2cc583a69ec965328bc","e29d4d91327929d477b701d3ef2f5b3457d26ec5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e29d4d91327929d477b701d3ef2f5b3457d26ec5"]},"commit2Childs":{"e29d4d91327929d477b701d3ef2f5b3457d26ec5":["de522d9303bd67c8473a269a1319125d1f3700e0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"001b25b42373b22a52f399dbf072f1224632e8e6":[],"55110eb60c5105294fc2ae7912d82b750865aa58":["001b25b42373b22a52f399dbf072f1224632e8e6","fe33227f6805edab2036cbb80645cc4e2d1fa424","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["035130b0c342f404c027af8c8870587c3741cb1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55110eb60c5105294fc2ae7912d82b750865aa58","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"c661dcad9680b8a6ce5bf2cc583a69ec965328bc":["e29d4d91327929d477b701d3ef2f5b3457d26ec5","de522d9303bd67c8473a269a1319125d1f3700e0"],"0e3359210474c12c0b79e6400450313e3d7ef2bb":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","c661dcad9680b8a6ce5bf2cc583a69ec965328bc"],"035130b0c342f404c027af8c8870587c3741cb1e":["0e3359210474c12c0b79e6400450313e3d7ef2bb"],"de522d9303bd67c8473a269a1319125d1f3700e0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","de522d9303bd67c8473a269a1319125d1f3700e0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}