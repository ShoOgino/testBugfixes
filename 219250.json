{"path":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","commits":[{"id":"322360ac5185a8446d3e0b530b2068bef67cd3d5","date":1343669494,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,boolean).mjava","sourceNew":"      @Override\n      public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) {\n        if (reuse == null || !(reuse instanceof MemoryDocsAndPositionsEnum)) {\n          reuse = new MemoryDocsAndPositionsEnum();\n        }\n        return ((MemoryDocsAndPositionsEnum) reuse).reset(liveDocs, info.sortedTerms[termUpto].getValue());\n      }\n\n","sourceOld":"      @Override\n      public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, boolean needsOffsets) {\n        if (needsOffsets) {\n          return null;\n        }\n        if (reuse == null || !(reuse instanceof MemoryDocsAndPositionsEnum)) {\n          reuse = new MemoryDocsAndPositionsEnum();\n        }\n        return ((MemoryDocsAndPositionsEnum) reuse).reset(liveDocs, info.sortedTerms[termUpto].getValue());\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) {\n        if (reuse == null || !(reuse instanceof MemoryDocsAndPositionsEnum)) {\n          reuse = new MemoryDocsAndPositionsEnum();\n        }\n        return ((MemoryDocsAndPositionsEnum) reuse).reset(liveDocs, info.sortedTerms[termUpto].getValue());\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) {\n        if (reuse == null || !(reuse instanceof MemoryDocsAndPositionsEnum)) {\n          reuse = new MemoryDocsAndPositionsEnum();\n        }\n        return ((MemoryDocsAndPositionsEnum) reuse).reset(liveDocs, info.sortedTerms[termUpto].getValue());\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30fd30bfbfa6b9e036bcd99c8339712e965d4a63","date":1351859294,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","sourceNew":"      @Override\n      public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) {\n        if (reuse == null || !(reuse instanceof MemoryDocsAndPositionsEnum)) {\n          reuse = new MemoryDocsAndPositionsEnum();\n        }\n        final int ord = info.sortedTerms[termUpto];\n        return ((MemoryDocsAndPositionsEnum) reuse).reset(liveDocs, info.sliceArray.start[ord], info.sliceArray.end[ord], info.sliceArray.freq[ord]);\n      }\n\n","sourceOld":"      @Override\n      public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) {\n        if (reuse == null || !(reuse instanceof MemoryDocsAndPositionsEnum)) {\n          reuse = new MemoryDocsAndPositionsEnum();\n        }\n        return ((MemoryDocsAndPositionsEnum) reuse).reset(liveDocs, info.sortedTerms[termUpto].getValue());\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","sourceNew":null,"sourceOld":"      @Override\n      public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) {\n        if (reuse == null || !(reuse instanceof MemoryDocsAndPositionsEnum)) {\n          reuse = new MemoryDocsAndPositionsEnum();\n        }\n        final int ord = info.sortedTerms[termUpto];\n        return ((MemoryDocsAndPositionsEnum) reuse).reset(liveDocs, info.sliceArray.start[ord], info.sliceArray.end[ord], info.sliceArray.freq[ord]);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["322360ac5185a8446d3e0b530b2068bef67cd3d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"51f5280f31484820499077f41fcdfe92d527d9dc":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63"],"322360ac5185a8446d3e0b530b2068bef67cd3d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51f5280f31484820499077f41fcdfe92d527d9dc"]},"commit2Childs":{"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["51f5280f31484820499077f41fcdfe92d527d9dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"322360ac5185a8446d3e0b530b2068bef67cd3d5":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}