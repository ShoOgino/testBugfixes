{"path":"modules/spatial-TEMP/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","commits":[{"id":"33ee89d976c91275e5be5da438ca0977b1c5b90f","date":1329808149,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial-TEMP/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"modules/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new Field(\"id\", data.id, StringField.TYPE_STORED));\n      document.add(new Field(\"name\", data.name, StringField.TYPE_STORED));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(fieldInfo, shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new Field(\"id\", data.id, StringField.TYPE_STORED));\n      document.add(new Field(\"name\", data.name, StringField.TYPE_STORED));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(fieldInfo, shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2047ba81272a0c4edeb11b1c7810ee23ba73502","date":1329808655,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/strategy/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"modules/spatial-TEMP/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new Field(\"id\", data.id, StringField.TYPE_STORED));\n      document.add(new Field(\"name\", data.name, StringField.TYPE_STORED));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(fieldInfo, shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new Field(\"id\", data.id, StringField.TYPE_STORED));\n      document.add(new Field(\"name\", data.name, StringField.TYPE_STORED));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(fieldInfo, shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":["33ee89d976c91275e5be5da438ca0977b1c5b90f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33ee89d976c91275e5be5da438ca0977b1c5b90f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":[],"33ee89d976c91275e5be5da438ca0977b1c5b90f":["c2047ba81272a0c4edeb11b1c7810ee23ba73502"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33ee89d976c91275e5be5da438ca0977b1c5b90f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c2047ba81272a0c4edeb11b1c7810ee23ba73502","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}