{"path":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        // nocommit - should be do bulks with deletes too?\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        if (datOut == null)\n          initDatOut();\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else\n        super.merge(state);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","date":1291128345,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","sourceNew":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        // TODO: should be do bulks with deletes too?\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        if (datOut == null)\n          initDatOut();\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else\n        super.merge(state);\n    }\n\n","sourceOld":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        // nocommit - should be do bulks with deletes too?\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        if (datOut == null)\n          initDatOut();\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else\n        super.merge(state);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd04845a7e675e6eda07c4475e3f5ec15d5a2f94","date":1305894342,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","sourceNew":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        // TODO: should be do bulks with deletes too?\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else\n        super.merge(state);\n    }\n\n","sourceOld":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        // TODO: should be do bulks with deletes too?\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        if (datOut == null)\n          initDatOut();\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else\n        super.merge(state);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        // TODO: should be do bulks with deletes too?\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else\n        super.merge(state);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        // TODO: should be do bulks with deletes too?\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else\n        super.merge(state);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d99ebe8731bf50d5cb230be452816572bdfd7037","date":1309162035,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","sourceNew":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (datOut == null) {\n        initDataOut();\n      }\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else {\n        super.merge(state);        \n      }\n\n    }\n\n","sourceOld":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        // TODO: should be do bulks with deletes too?\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else\n        super.merge(state);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","sourceNew":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (datOut == null) {\n        initDataOut();\n      }\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else {\n        super.merge(state);        \n      }\n\n    }\n\n","sourceOld":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        // TODO: should be do bulks with deletes too?\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else\n        super.merge(state);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","sourceNew":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (datOut == null) {\n        initDataOut();\n      }\n      if (state.liveDocs == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else {\n        super.merge(state);        \n      }\n\n    }\n\n","sourceOld":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (datOut == null) {\n        initDataOut();\n      }\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else {\n        super.merge(state);        \n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","sourceNew":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (datOut == null) {\n        initDataOut();\n      }\n      if (state.liveDocs == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else {\n        super.merge(state);        \n      }\n\n    }\n\n","sourceOld":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (datOut == null) {\n        initDataOut();\n      }\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else {\n        super.merge(state);        \n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","sourceNew":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (datOut == null) {\n        initDataOut();\n      }\n      if (state.liveDocs == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else {\n        super.merge(state);        \n      }\n\n    }\n\n","sourceOld":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (state.bits == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        // TODO: should be do bulks with deletes too?\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else\n        super.merge(state);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#merge(MergeState).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected void merge(MergeState state) throws IOException {\n      if (datOut == null) {\n        initDataOut();\n      }\n      if (state.liveDocs == null && state.reader instanceof FloatsReader) {\n        // no deletes - bulk copy\n        final FloatsReader reader = (FloatsReader) state.reader;\n        assert reader.precisionBytes == (int) precision;\n        if (reader.maxDoc == 0)\n          return;\n        final int docBase = state.docBase;\n        if (docBase - lastDocId > 1) {\n          // fill with default values\n          lastDocId += fillDefault(docBase - lastDocId - 1);\n        }\n        lastDocId += reader.transferTo(datOut);\n      } else {\n        super.merge(state);        \n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["d99ebe8731bf50d5cb230be452816572bdfd7037"],"d99ebe8731bf50d5cb230be452816572bdfd7037":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"2553b00f699380c64959ccb27991289aae87be2e":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","d99ebe8731bf50d5cb230be452816572bdfd7037"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["2e8d7ba2175f47e280231533f7d3016249cea88b","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["2553b00f699380c64959ccb27991289aae87be2e","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dd04845a7e675e6eda07c4475e3f5ec15d5a2f94"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd04845a7e675e6eda07c4475e3f5ec15d5a2f94":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85eb75e0c0203e44dcf686f35876cf6080f3a671"]},"commit2Childs":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["dd04845a7e675e6eda07c4475e3f5ec15d5a2f94"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["2553b00f699380c64959ccb27991289aae87be2e"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","85eb75e0c0203e44dcf686f35876cf6080f3a671"],"d99ebe8731bf50d5cb230be452816572bdfd7037":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","2553b00f699380c64959ccb27991289aae87be2e"],"2553b00f699380c64959ccb27991289aae87be2e":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","d99ebe8731bf50d5cb230be452816572bdfd7037","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","01f60198ece724a6e96cd0b45f289cf42ff83d4f","2e8d7ba2175f47e280231533f7d3016249cea88b"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dd04845a7e675e6eda07c4475e3f5ec15d5a2f94":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}