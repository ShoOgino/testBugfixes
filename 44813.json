{"path":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","commits":[{"id":"0d6879a535f14bc53be7c86de58142558c4f9eee","date":1492512399,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPropertyFilter() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPropertyFilter() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f64f8e052717959802115213f85d0d634df4fa17","date":1500176236,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","sourceNew":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testPropertyFilter() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaf90fc29510e72665ac7934f34c3d1c25efad64","date":1500354819,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","sourceNew":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testPropertyFilter() throws Exception {\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","sourceNew":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer().getMetricManager());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"750239682d222924398443d581163940f48d68fc","date":1533297311,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","sourceNew":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer().getMetricManager());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a117d95183986014a31f25bb04e5464ca06d6068","date":1566208086,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","sourceNew":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","sourceNew":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","sourceNew":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","sourceNew":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map)v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","sourceNew":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n    handler.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      @SuppressWarnings({\"rawtypes\"})\n      Map map = (Map) v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      @SuppressWarnings({\"rawtypes\"})\n      Map map = (Map) v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n    handler.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      Map map = (Map) v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n    handler.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"233211c3dbff6f367588be5bbb4ac77f72eae193","date":1602085975,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#testPropertyFilter().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof MapWriter);\n      Map<String, Object> map = new HashMap<>();\n      ((MapWriter) v).toMap(map);\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof MapWriter);\n      Map<String, Object> map = new HashMap<>();\n      ((MapWriter) v).toMap(map);\n      assertEquals(\"k=\" + k + \", v=\" + map, 2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n    handler.close();\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void testPropertyFilter() throws Exception {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n\n    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());\n\n    SolrQueryResponse resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\"), resp);\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList values = resp.getValues();\n    assertNotNull(values.get(\"metrics\"));\n    values = (NamedList) values.get(\"metrics\");\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      @SuppressWarnings({\"rawtypes\"})\n      Map map = (Map) v;\n      assertTrue(map.size() > 2);\n    });\n\n    resp = new SolrQueryResponse();\n    handler.handleRequestBody(req(CommonParams.QT, \"/admin/metrics\", CommonParams.WT, \"json\",\n        MetricsHandler.COMPACT_PARAM, \"true\", \"group\", \"core\", \"prefix\", \"CACHE.searcher\",\n        \"property\", \"inserts\", \"property\", \"size\"), resp);\n    values = resp.getValues();\n    values = (NamedList) values.get(\"metrics\");\n    nl = (NamedList) values.get(\"solr.core.collection1\");\n    assertNotNull(nl);\n    assertTrue(nl.size() > 0);\n    nl.forEach((k, v) -> {\n      assertTrue(v instanceof Map);\n      @SuppressWarnings({\"rawtypes\"})\n      Map map = (Map) v;\n      assertEquals(2, map.size());\n      assertNotNull(map.get(\"inserts\"));\n      assertNotNull(map.get(\"size\"));\n    });\n    handler.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["c44cc06c26e456fe9c215072b79fce30babe3975"],"233211c3dbff6f367588be5bbb4ac77f72eae193":["e98520789adb1d5ad05afb4956eca0944a929688"],"c44cc06c26e456fe9c215072b79fce30babe3975":["a117d95183986014a31f25bb04e5464ca06d6068"],"a117d95183986014a31f25bb04e5464ca06d6068":["750239682d222924398443d581163940f48d68fc"],"e98520789adb1d5ad05afb4956eca0944a929688":["ba055e19afc289adcb5bedaf68513793a7254012"],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["f64f8e052717959802115213f85d0d634df4fa17"],"ba055e19afc289adcb5bedaf68513793a7254012":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","f64f8e052717959802115213f85d0d634df4fa17"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f64f8e052717959802115213f85d0d634df4fa17":["0d6879a535f14bc53be7c86de58142558c4f9eee"],"750239682d222924398443d581163940f48d68fc":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["233211c3dbff6f367588be5bbb4ac77f72eae193"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a117d95183986014a31f25bb04e5464ca06d6068","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["aaf90fc29510e72665ac7934f34c3d1c25efad64"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["ba055e19afc289adcb5bedaf68513793a7254012"],"c44cc06c26e456fe9c215072b79fce30babe3975":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","b0b597c65628ca9e73913a07e81691f8229bae35"],"233211c3dbff6f367588be5bbb4ac77f72eae193":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a117d95183986014a31f25bb04e5464ca06d6068":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"e98520789adb1d5ad05afb4956eca0944a929688":["233211c3dbff6f367588be5bbb4ac77f72eae193"],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["750239682d222924398443d581163940f48d68fc"],"ba055e19afc289adcb5bedaf68513793a7254012":["e98520789adb1d5ad05afb4956eca0944a929688"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","0d6879a535f14bc53be7c86de58142558c4f9eee"],"f64f8e052717959802115213f85d0d634df4fa17":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","aaf90fc29510e72665ac7934f34c3d1c25efad64"],"750239682d222924398443d581163940f48d68fc":["a117d95183986014a31f25bb04e5464ca06d6068"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["f64f8e052717959802115213f85d0d634df4fa17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}