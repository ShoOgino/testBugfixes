{"path":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#bulkScorer(AtomicReaderContext,boolean,Bits).mjava","commits":[{"id":"a5794e5c995c57444b154b01a9f3c837cd530a77","date":1394190201,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#bulkScorer(AtomicReaderContext,boolean,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#topScorer(AtomicReaderContext,boolean,Bits).mjava","sourceNew":"    @Override\n    public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) throws IOException {\n      final DocIdSetIterator disi;\n      if (filter != null) {\n        assert query == null;\n        return super.bulkScorer(context, scoreDocsInOrder, acceptDocs);\n      } else {\n        assert query != null && innerWeight != null;\n        BulkScorer bulkScorer = innerWeight.bulkScorer(context, scoreDocsInOrder, acceptDocs);\n        if (bulkScorer == null) {\n          return null;\n        }\n        return new ConstantBulkScorer(bulkScorer, this, queryWeight);\n      }\n    }\n\n","sourceOld":"    @Override\n    public TopScorer topScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) throws IOException {\n      final DocIdSetIterator disi;\n      if (filter != null) {\n        assert query == null;\n        return super.topScorer(context, scoreDocsInOrder, acceptDocs);\n      } else {\n        assert query != null && innerWeight != null;\n        TopScorer topScorer = innerWeight.topScorer(context, scoreDocsInOrder, acceptDocs);\n        if (topScorer == null) {\n          return null;\n        }\n        return new ConstantTopScorer(topScorer, this, queryWeight);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#bulkScorer(AtomicReaderContext,boolean,Bits).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) throws IOException {\n      final DocIdSetIterator disi;\n      if (filter != null) {\n        assert query == null;\n        return super.bulkScorer(context, scoreDocsInOrder, acceptDocs);\n      } else {\n        assert query != null && innerWeight != null;\n        BulkScorer bulkScorer = innerWeight.bulkScorer(context, scoreDocsInOrder, acceptDocs);\n        if (bulkScorer == null) {\n          return null;\n        }\n        return new ConstantBulkScorer(bulkScorer, this, queryWeight);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#bulkScorer(AtomicReaderContext,boolean,Bits).mjava","sourceNew":null,"sourceOld":"    @Override\n    public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) throws IOException {\n      final DocIdSetIterator disi;\n      if (filter != null) {\n        assert query == null;\n        return super.bulkScorer(context, scoreDocsInOrder, acceptDocs);\n      } else {\n        assert query != null && innerWeight != null;\n        BulkScorer bulkScorer = innerWeight.bulkScorer(context, scoreDocsInOrder, acceptDocs);\n        if (bulkScorer == null) {\n          return null;\n        }\n        return new ConstantBulkScorer(bulkScorer, this, queryWeight);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5794e5c995c57444b154b01a9f3c837cd530a77":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a5794e5c995c57444b154b01a9f3c837cd530a77"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5794e5c995c57444b154b01a9f3c837cd530a77","acf00221f44c5f08ccea014f2492b53af15ecd66"],"a5794e5c995c57444b154b01a9f3c837cd530a77":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}