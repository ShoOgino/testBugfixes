{"path":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","commits":[{"id":"227c5621583c5b934878e3c051aae9c4649ae700","date":1356045968,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * utilitiy method fro trimming and leading and/or trailing slashes from \n   * it's input.  May return the empty string.  May return null if and only \n   * if the input is null.\n   */\n  private static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n    \n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0,out.length()-1);\n    }\n    return out;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * utilitiy method fro trimming and leading and/or trailing slashes from \n   * it's input.  May return the empty string.  May return null if and only \n   * if the input is null.\n   */\n  private static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n    \n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0,out.length()-1);\n    }\n    return out;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","sourceNew":"  /**\n   * Utility method for trimming and leading and/or trailing slashes from \n   * it's input.  May return the empty string.  May return null if and only \n   * if the input is null.\n   */\n  public static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n    \n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0,out.length()-1);\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * utilitiy method fro trimming and leading and/or trailing slashes from \n   * it's input.  May return the empty string.  May return null if and only \n   * if the input is null.\n   */\n  private static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n    \n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0,out.length()-1);\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","sourceNew":"  /**\n   * Utility method for trimming and leading and/or trailing slashes from \n   * it's input.  May return the empty string.  May return null if and only \n   * if the input is null.\n   */\n  public static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n    \n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0,out.length()-1);\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * utilitiy method fro trimming and leading and/or trailing slashes from \n   * it's input.  May return the empty string.  May return null if and only \n   * if the input is null.\n   */\n  private static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n    \n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0,out.length()-1);\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","sourceNew":"  /**\n   * Utility method for trimming and leading and/or trailing slashes from \n   * its input.  May return the empty string.  May return null if and only \n   * if the input is null.\n   */\n  public static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n    \n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0,out.length()-1);\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Utility method for trimming and leading and/or trailing slashes from \n   * it's input.  May return the empty string.  May return null if and only \n   * if the input is null.\n   */\n  public static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n    \n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0,out.length()-1);\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbcfc050b9f253136eaa5950b57248b2109eac11","date":1427308993,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","sourceNew":"  /**\n   * Utility method for trimming and leading and/or trailing slashes from\n   * its input.  May return the empty string.  May return null if and only\n   * if the input is null.\n   */\n  public static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n\n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0, out.length() - 1);\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Utility method for trimming and leading and/or trailing slashes from \n   * its input.  May return the empty string.  May return null if and only \n   * if the input is null.\n   */\n  public static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n    \n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0,out.length()-1);\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#trimLeadingAndTrailingSlashes(String).mjava","sourceNew":"  /**\n   * Utility method for trimming and leading and/or trailing slashes from\n   * its input.  May return the empty string.  May return null if and only\n   * if the input is null.\n   */\n  public static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n\n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0, out.length() - 1);\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Utility method for trimming and leading and/or trailing slashes from \n   * its input.  May return the empty string.  May return null if and only \n   * if the input is null.\n   */\n  public static String trimLeadingAndTrailingSlashes(final String in) {\n    if (null == in) return in;\n    \n    String out = in;\n    if (out.startsWith(\"/\")) {\n      out = out.substring(1);\n    }\n    if (out.endsWith(\"/\")) {\n      out = out.substring(0,out.length()-1);\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["227c5621583c5b934878e3c051aae9c4649ae700"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","227c5621583c5b934878e3c051aae9c4649ae700"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","fbcfc050b9f253136eaa5950b57248b2109eac11"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"227c5621583c5b934878e3c051aae9c4649ae700":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["227c5621583c5b934878e3c051aae9c4649ae700","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fbcfc050b9f253136eaa5950b57248b2109eac11"],"fbcfc050b9f253136eaa5950b57248b2109eac11":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fbcfc050b9f253136eaa5950b57248b2109eac11"],"227c5621583c5b934878e3c051aae9c4649ae700":["849494cf2f3a96af5c8c84995108ddd8456fcd04","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","227c5621583c5b934878e3c051aae9c4649ae700"],"fbcfc050b9f253136eaa5950b57248b2109eac11":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}