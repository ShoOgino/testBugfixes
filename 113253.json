{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#add(Map[String,Object]).mjava","commits":[{"id":"3337b86edd36607f0208321f1deee79c55e5fd21","date":1321266471,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#add(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void add(Map<String,Object> rec) {\n    checkOpen(true);\n    checkReadOnly();\n    \n    if (rec == null || rec.size() == 0) {\n      return;\n    }\n    \n    if (primaryKeyName == null) {\n      primaryKeyName = rec.keySet().iterator().next();\n    }\n    \n    Object pk = rec.get(primaryKeyName);\n    if (pk instanceof Collection<?>) {\n      Collection<Object> c = (Collection<Object>) pk;\n      if (c.size() != 1) {\n        throw new RuntimeException(\n            \"The primary key must have exactly 1 element.\");\n      }\n      pk = c.iterator().next();\n    }\n    List<Map<String,Object>> thisKeysRecs = theMap.get(pk);\n    if (thisKeysRecs == null) {\n      thisKeysRecs = new ArrayList<Map<String,Object>>();\n      theMap.put(pk, thisKeysRecs);\n    }\n    thisKeysRecs.add(rec);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ca2e21bffe25de677a4ed8bde879968e4c5da6b","date":1347636388,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#add(Map[String,Object]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#add(Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void add(Map<String,Object> rec) {\n    checkOpen(true);\n    checkReadOnly();\n    \n    if (rec == null || rec.size() == 0) {\n      return;\n    }\n    \n    if (primaryKeyName == null) {\n      primaryKeyName = rec.keySet().iterator().next();\n    }\n    \n    Object pk = rec.get(primaryKeyName);\n    if (pk instanceof Collection<?>) {\n      Collection<Object> c = (Collection<Object>) pk;\n      if (c.size() != 1) {\n        throw new RuntimeException(\n            \"The primary key must have exactly 1 element.\");\n      }\n      pk = c.iterator().next();\n    }\n    //Rows with null keys are not added.\n    if(pk==null) {\n      return;\n    }\n    List<Map<String,Object>> thisKeysRecs = theMap.get(pk);\n    if (thisKeysRecs == null) {\n      thisKeysRecs = new ArrayList<Map<String,Object>>();\n      theMap.put(pk, thisKeysRecs);\n    }\n    thisKeysRecs.add(rec);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void add(Map<String,Object> rec) {\n    checkOpen(true);\n    checkReadOnly();\n    \n    if (rec == null || rec.size() == 0) {\n      return;\n    }\n    \n    if (primaryKeyName == null) {\n      primaryKeyName = rec.keySet().iterator().next();\n    }\n    \n    Object pk = rec.get(primaryKeyName);\n    if (pk instanceof Collection<?>) {\n      Collection<Object> c = (Collection<Object>) pk;\n      if (c.size() != 1) {\n        throw new RuntimeException(\n            \"The primary key must have exactly 1 element.\");\n      }\n      pk = c.iterator().next();\n    }\n    List<Map<String,Object>> thisKeysRecs = theMap.get(pk);\n    if (thisKeysRecs == null) {\n      thisKeysRecs = new ArrayList<Map<String,Object>>();\n      theMap.put(pk, thisKeysRecs);\n    }\n    thisKeysRecs.add(rec);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#add(Map[String,Object]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#add(Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void add(Map<String,Object> rec) {\n    checkOpen(true);\n    checkReadOnly();\n    \n    if (rec == null || rec.size() == 0) {\n      return;\n    }\n    \n    if (primaryKeyName == null) {\n      primaryKeyName = rec.keySet().iterator().next();\n    }\n    \n    Object pk = rec.get(primaryKeyName);\n    if (pk instanceof Collection<?>) {\n      Collection<Object> c = (Collection<Object>) pk;\n      if (c.size() != 1) {\n        throw new RuntimeException(\n            \"The primary key must have exactly 1 element.\");\n      }\n      pk = c.iterator().next();\n    }\n    //Rows with null keys are not added.\n    if(pk==null) {\n      return;\n    }\n    List<Map<String,Object>> thisKeysRecs = theMap.get(pk);\n    if (thisKeysRecs == null) {\n      thisKeysRecs = new ArrayList<>();\n      theMap.put(pk, thisKeysRecs);\n    }\n    thisKeysRecs.add(rec);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void add(Map<String,Object> rec) {\n    checkOpen(true);\n    checkReadOnly();\n    \n    if (rec == null || rec.size() == 0) {\n      return;\n    }\n    \n    if (primaryKeyName == null) {\n      primaryKeyName = rec.keySet().iterator().next();\n    }\n    \n    Object pk = rec.get(primaryKeyName);\n    if (pk instanceof Collection<?>) {\n      Collection<Object> c = (Collection<Object>) pk;\n      if (c.size() != 1) {\n        throw new RuntimeException(\n            \"The primary key must have exactly 1 element.\");\n      }\n      pk = c.iterator().next();\n    }\n    //Rows with null keys are not added.\n    if(pk==null) {\n      return;\n    }\n    List<Map<String,Object>> thisKeysRecs = theMap.get(pk);\n    if (thisKeysRecs == null) {\n      thisKeysRecs = new ArrayList<Map<String,Object>>();\n      theMap.put(pk, thisKeysRecs);\n    }\n    thisKeysRecs.add(rec);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#add(Map[String,Object]).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void add(Map<String,Object> rec) {\n    checkOpen(true);\n    checkReadOnly();\n    \n    if (rec == null || rec.size() == 0) {\n      return;\n    }\n    \n    if (primaryKeyName == null) {\n      primaryKeyName = rec.keySet().iterator().next();\n    }\n    \n    Object pk = rec.get(primaryKeyName);\n    if (pk instanceof Collection<?>) {\n      Collection<Object> c = (Collection<Object>) pk;\n      if (c.size() != 1) {\n        throw new RuntimeException(\n            \"The primary key must have exactly 1 element.\");\n      }\n      pk = c.iterator().next();\n    }\n    //Rows with null keys are not added.\n    if(pk==null) {\n      return;\n    }\n    List<Map<String,Object>> thisKeysRecs = theMap.get(pk);\n    if (thisKeysRecs == null) {\n      thisKeysRecs = new ArrayList<>();\n      theMap.put(pk, thisKeysRecs);\n    }\n    thisKeysRecs.add(rec);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["5ca2e21bffe25de677a4ed8bde879968e4c5da6b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"3337b86edd36607f0208321f1deee79c55e5fd21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ca2e21bffe25de677a4ed8bde879968e4c5da6b":["3337b86edd36607f0208321f1deee79c55e5fd21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3337b86edd36607f0208321f1deee79c55e5fd21":["5ca2e21bffe25de677a4ed8bde879968e4c5da6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3337b86edd36607f0208321f1deee79c55e5fd21"],"5ca2e21bffe25de677a4ed8bde879968e4c5da6b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}