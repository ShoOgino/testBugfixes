{"path":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","sourceNew":"    private void getNextBatch(int batchSize, Folder folder) throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage)\n            ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1, lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","sourceOld":"    private void getNextBatch(int batchSize, Folder folder) throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage)\n            ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1, lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","sourceNew":"    private void getNextBatch(int batchSize, Folder folder) throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage)\n            ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1, lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","sourceOld":"    private void getNextBatch(int batchSize, Folder folder) throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage)\n            ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1, lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36113efe922ae370819b20fba837a1a37d3dd2d8","date":1404234826,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","sourceNew":"    private void getNextBatch(int batchSize, Folder folder)\n        throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage) ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1,\n          lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","sourceOld":"    private void getNextBatch(int batchSize, Folder folder) throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage)\n            ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1, lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bac5e4f5082317c9a942b1deeeb22d6700ecff7","date":1404338458,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","sourceNew":"    private void getNextBatch(int batchSize, Folder folder) throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage)\n            ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1, lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","sourceOld":"    private void getNextBatch(int batchSize, Folder folder)\n        throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage) ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1,\n          lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cd303657ee7726e12c45f9fd39b0285acf10c07","date":1405460668,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","sourceNew":"    private void getNextBatch(int batchSize, Folder folder)\n        throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage) ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1,\n          lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","sourceOld":"    private void getNextBatch(int batchSize, Folder folder) throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage)\n            ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1, lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","sourceNew":"    private void getNextBatch(int batchSize, Folder folder)\n        throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage) ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1,\n          lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      log.info(\"Current Batch  : \" + currentBatch);\n      log.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","sourceOld":"    private void getNextBatch(int batchSize, Folder folder)\n        throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage) ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1,\n          lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      LOG.info(\"Current Batch  : \" + currentBatch);\n      LOG.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","sourceNew":"    private void getNextBatch(int batchSize, Folder folder)\n        throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage) ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1,\n          lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      log.info(\"Current Batch  : {}\", currentBatch);\n      log.info(\"Messages in this batch  : {}\", messagesInCurBatch.length);\n    }\n\n","sourceOld":"    private void getNextBatch(int batchSize, Folder folder)\n        throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage) ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1,\n          lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      log.info(\"Current Batch  : \" + currentBatch);\n      log.info(\"Messages in this batch  : \" + messagesInCurBatch.length);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.MessageIterator#getNextBatch(int,Folder).mjava","sourceNew":null,"sourceOld":"    private void getNextBatch(int batchSize, Folder folder)\n        throws MessagingException {\n      // after each batch invalidate cache\n      if (messagesInCurBatch != null) {\n        for (Message m : messagesInCurBatch) {\n          if (m instanceof IMAPMessage) ((IMAPMessage) m).invalidateHeaders();\n        }\n      }\n      int lastMsg = (currentBatch + 1) * batchSize;\n      lastMsg = lastMsg > totalInFolder ? totalInFolder : lastMsg;\n      messagesInCurBatch = folder.getMessages(currentBatch * batchSize + 1,\n          lastMsg);\n      folder.fetch(messagesInCurBatch, fp);\n      current = 0;\n      currentBatch++;\n      log.info(\"Current Batch  : {}\", currentBatch);\n      log.info(\"Messages in this batch  : {}\", messagesInCurBatch.length);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"36113efe922ae370819b20fba837a1a37d3dd2d8":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"0bac5e4f5082317c9a942b1deeeb22d6700ecff7":["36113efe922ae370819b20fba837a1a37d3dd2d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0cd303657ee7726e12c45f9fd39b0285acf10c07":["0bac5e4f5082317c9a942b1deeeb22d6700ecff7"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["0cd303657ee7726e12c45f9fd39b0285acf10c07"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36113efe922ae370819b20fba837a1a37d3dd2d8":["0bac5e4f5082317c9a942b1deeeb22d6700ecff7"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["36113efe922ae370819b20fba837a1a37d3dd2d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"0bac5e4f5082317c9a942b1deeeb22d6700ecff7":["0cd303657ee7726e12c45f9fd39b0285acf10c07"],"0cd303657ee7726e12c45f9fd39b0285acf10c07":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}