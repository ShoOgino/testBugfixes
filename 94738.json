{"path":"src/java/org/apache/lucene/search/Scorer#score(Collector,int,int).mjava","commits":[{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Scorer#score(Collector,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: Collects matching documents in a range. Hook for optimization.\n   * Note, <code>firstDocID</code> is added to ensure that {@link #nextDoc()}\n   * was called before this method.\n   * \n   * @param collector\n   *          The collector to which all matching documents are passed.\n   * @param max\n   *          Do not score documents past this.\n   * @param firstDocID\n   *          The first document ID (ensures {@link #nextDoc()} is called before\n   *          this method.\n   * @return true if more matching documents may remain.\n   */\n  protected boolean score(Collector collector, int max, int firstDocID) throws IOException {\n    collector.setScorer(this);\n    int doc = firstDocID;\n    while (doc < max) {\n      collector.collect(doc);\n      doc = nextDoc();\n    }\n    return doc == NO_MORE_DOCS;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["54c40f2a4f8741ec845d55de05ea762e631b5c90"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c05f081b230c9f9a54fd4c170e6f9d6c923aa31a","date":1255477898,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Scorer#score(Collector,int,int).mjava","pathOld":"src/java/org/apache/lucene/search/Scorer#score(Collector,int,int).mjava","sourceNew":"  /**\n   * Expert: Collects matching documents in a range. Hook for optimization.\n   * Note, <code>firstDocID</code> is added to ensure that {@link #nextDoc()}\n   * was called before this method.\n   * \n   * @param collector\n   *          The collector to which all matching documents are passed.\n   * @param max\n   *          Do not score documents past this.\n   * @param firstDocID\n   *          The first document ID (ensures {@link #nextDoc()} is called before\n   *          this method.\n   * @return true if more matching documents may remain.\n   */\n  protected boolean score(Collector collector, int max, int firstDocID) throws IOException {\n    collector.setScorer(this);\n    int doc = firstDocID;\n    while (doc < max) {\n      collector.collect(doc);\n      doc = nextDoc();\n    }\n    return doc != NO_MORE_DOCS;\n  }\n\n","sourceOld":"  /**\n   * Expert: Collects matching documents in a range. Hook for optimization.\n   * Note, <code>firstDocID</code> is added to ensure that {@link #nextDoc()}\n   * was called before this method.\n   * \n   * @param collector\n   *          The collector to which all matching documents are passed.\n   * @param max\n   *          Do not score documents past this.\n   * @param firstDocID\n   *          The first document ID (ensures {@link #nextDoc()} is called before\n   *          this method.\n   * @return true if more matching documents may remain.\n   */\n  protected boolean score(Collector collector, int max, int firstDocID) throws IOException {\n    collector.setScorer(this);\n    int doc = firstDocID;\n    while (doc < max) {\n      collector.collect(doc);\n      doc = nextDoc();\n    }\n    return doc == NO_MORE_DOCS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Scorer#score(Collector,int,int).mjava","pathOld":"src/java/org/apache/lucene/search/Scorer#score(Collector,int,int).mjava","sourceNew":"  /**\n   * Expert: Collects matching documents in a range. Hook for optimization.\n   * Note, <code>firstDocID</code> is added to ensure that {@link #nextDoc()}\n   * was called before this method.\n   * \n   * @param collector\n   *          The collector to which all matching documents are passed.\n   * @param max\n   *          Do not score documents past this.\n   * @param firstDocID\n   *          The first document ID (ensures {@link #nextDoc()} is called before\n   *          this method.\n   * @return true if more matching documents may remain.\n   */\n  protected boolean score(Collector collector, int max, int firstDocID) throws IOException {\n    collector.setScorer(this);\n    int doc = firstDocID;\n    while (doc < max) {\n      collector.collect(doc);\n      doc = nextDoc();\n    }\n    return doc != NO_MORE_DOCS;\n  }\n\n","sourceOld":"  /**\n   * Expert: Collects matching documents in a range. Hook for optimization.\n   * Note, <code>firstDocID</code> is added to ensure that {@link #nextDoc()}\n   * was called before this method.\n   * \n   * @param collector\n   *          The collector to which all matching documents are passed.\n   * @param max\n   *          Do not score documents past this.\n   * @param firstDocID\n   *          The first document ID (ensures {@link #nextDoc()} is called before\n   *          this method.\n   * @return true if more matching documents may remain.\n   */\n  protected boolean score(Collector collector, int max, int firstDocID) throws IOException {\n    collector.setScorer(this);\n    int doc = firstDocID;\n    while (doc < max) {\n      collector.collect(doc);\n      doc = nextDoc();\n    }\n    return doc != NO_MORE_DOCS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"30a558487f2298c2c19ceca9103c1b6865d64708":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c05f081b230c9f9a54fd4c170e6f9d6c923aa31a":["30a558487f2298c2c19ceca9103c1b6865d64708"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c05f081b230c9f9a54fd4c170e6f9d6c923aa31a"]},"commit2Childs":{"30a558487f2298c2c19ceca9103c1b6865d64708":["c05f081b230c9f9a54fd4c170e6f9d6c923aa31a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30a558487f2298c2c19ceca9103c1b6865d64708"],"c05f081b230c9f9a54fd4c170e6f9d6c923aa31a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}