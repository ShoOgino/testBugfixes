{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean).mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean).mjava","pathOld":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean).mjava","sourceNew":"\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited) \n\t{\n\t\tif (query instanceof BooleanQuery)\n\t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited);\n\t\telse\n\t\t\tif (query instanceof PhraseQuery)\n\t\t\t\tgetTermsFromPhraseQuery((PhraseQuery) query, terms);\n\t\t\telse\n\t\t\t\tif (query instanceof TermQuery)\n\t\t\t\t\tgetTermsFromTermQuery((TermQuery) query, terms);\n//\t\t\t\telse\n//\t\t\t\t\tif ((query instanceof PrefixQuery)\n//\t\t\t\t\t\t|| (query instanceof RangeQuery)\n//\t\t\t\t\t\t|| (query instanceof MultiTermQuery))\n//\t\t\t\t\t{\n//\t\t\t\t\t\t//client should call rewrite BEFORE calling highlighter\n//\t\t\t\t\t\t//\t\t\t\t\t\tQuery expandedQuery = rewrite(reader, query);\n//\t\t\t\t\t\t//\t\t\t\tgetTerms(reader, expandedQuery, terms, prohibited);\n//\t\t\t\t\t}\n\t}\n\n","sourceOld":"\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited) \n\t{\n\t\tif (query instanceof BooleanQuery)\n\t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited);\n\t\telse\n\t\t\tif (query instanceof PhraseQuery)\n\t\t\t\tgetTermsFromPhraseQuery((PhraseQuery) query, terms);\n\t\t\telse\n\t\t\t\tif (query instanceof TermQuery)\n\t\t\t\t\tgetTermsFromTermQuery((TermQuery) query, terms);\n//\t\t\t\telse\n//\t\t\t\t\tif ((query instanceof PrefixQuery)\n//\t\t\t\t\t\t|| (query instanceof RangeQuery)\n//\t\t\t\t\t\t|| (query instanceof MultiTermQuery))\n//\t\t\t\t\t{\n//\t\t\t\t\t\t//client should call rewrite BEFORE calling highlighter\n//\t\t\t\t\t\t//\t\t\t\t\t\tQuery expandedQuery = rewrite(reader, query);\n//\t\t\t\t\t\t//\t\t\t\tgetTerms(reader, expandedQuery, terms, prohibited);\n//\t\t\t\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"350fa31b84f8fdbfd93925b488f55625653ad444","date":1120162198,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean).mjava","sourceNew":"\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited) \n\t{\n\t\tif (query instanceof BooleanQuery)\n\t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited);\n\t\telse\n\t\t\tif (query instanceof PhraseQuery)\n\t\t\t\tgetTermsFromPhraseQuery((PhraseQuery) query, terms);\n\t\t\telse\n\t\t\t\tif (query instanceof TermQuery)\n\t\t\t\t\tgetTermsFromTermQuery((TermQuery) query, terms);\n\t\t\t\telse\n\t\t        if(query instanceof SpanNearQuery)\n\t\t            getTermsFromSpanNearQuery((SpanNearQuery) query, terms);\n\t}\n\n","sourceOld":"\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited) \n\t{\n\t\tif (query instanceof BooleanQuery)\n\t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited);\n\t\telse\n\t\t\tif (query instanceof PhraseQuery)\n\t\t\t\tgetTermsFromPhraseQuery((PhraseQuery) query, terms);\n\t\t\telse\n\t\t\t\tif (query instanceof TermQuery)\n\t\t\t\t\tgetTermsFromTermQuery((TermQuery) query, terms);\n//\t\t\t\telse\n//\t\t\t\t\tif ((query instanceof PrefixQuery)\n//\t\t\t\t\t\t|| (query instanceof RangeQuery)\n//\t\t\t\t\t\t|| (query instanceof MultiTermQuery))\n//\t\t\t\t\t{\n//\t\t\t\t\t\t//client should call rewrite BEFORE calling highlighter\n//\t\t\t\t\t\t//\t\t\t\t\t\tQuery expandedQuery = rewrite(reader, query);\n//\t\t\t\t\t\t//\t\t\t\tgetTerms(reader, expandedQuery, terms, prohibited);\n//\t\t\t\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68fa956cfdb1b0e625046dcfa99f545fc8f04997","date":1133475513,"type":5,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean).mjava","sourceNew":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited, String fieldName) \n\t{\n\t\tif (query instanceof BooleanQuery)\n\t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited, fieldName);\n\t\telse\n\t\t\tif (query instanceof PhraseQuery)\n\t\t\t\tgetTermsFromPhraseQuery((PhraseQuery) query, terms, fieldName);\n\t\t\telse\n\t\t\t\tif (query instanceof TermQuery)\n\t\t\t\t\tgetTermsFromTermQuery((TermQuery) query, terms, fieldName);\n\t\t\t\telse\n\t\t        if(query instanceof SpanNearQuery)\n\t\t            getTermsFromSpanNearQuery((SpanNearQuery) query, terms, fieldName);\n\t}\n\n","sourceOld":"\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited) \n\t{\n\t\tif (query instanceof BooleanQuery)\n\t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited);\n\t\telse\n\t\t\tif (query instanceof PhraseQuery)\n\t\t\t\tgetTermsFromPhraseQuery((PhraseQuery) query, terms);\n\t\t\telse\n\t\t\t\tif (query instanceof TermQuery)\n\t\t\t\t\tgetTermsFromTermQuery((TermQuery) query, terms);\n\t\t\t\telse\n\t\t        if(query instanceof SpanNearQuery)\n\t\t            getTermsFromSpanNearQuery((SpanNearQuery) query, terms);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"68fa956cfdb1b0e625046dcfa99f545fc8f04997":["350fa31b84f8fdbfd93925b488f55625653ad444"],"350fa31b84f8fdbfd93925b488f55625653ad444":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68fa956cfdb1b0e625046dcfa99f545fc8f04997"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["350fa31b84f8fdbfd93925b488f55625653ad444"],"68fa956cfdb1b0e625046dcfa99f545fc8f04997":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"350fa31b84f8fdbfd93925b488f55625653ad444":["68fa956cfdb1b0e625046dcfa99f545fc8f04997"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}