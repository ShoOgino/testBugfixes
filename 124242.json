{"path":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPResponse#invokeTrailerHandlers(boolean).mjava","commits":[{"id":"bc6055f4a2e8e9f9caaec2297010c9502480ed69","date":1050060580,"type":0,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPResponse#invokeTrailerHandlers(boolean).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * This is invoked by the RespInputStream when it is close()'d. It just\n     * invokes the trailer handler in each module.\n     *\n     * @param force                invoke the handlers even if not initialized\n     *      yet?\n     * @exception IOException      if thrown by any module\n     * @exception ModuleException  if thrown by any module\n     */\n    void invokeTrailerHandlers(boolean force)\n        throws IOException, ModuleException\n    {\n        if (trailers_handled)\n        {\n            return;\n        }\n\n        if (!force && !initialized)\n        {\n            handle_trailers = true;\n            return;\n        }\n\n        for (int idx = 0; idx < modules.length && !aborted; idx++)\n        {\n            modules[idx].trailerHandler(response, request);\n        }\n\n        trailers_handled = true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPResponse#invokeTrailerHandlers(boolean).mjava","sourceNew":null,"sourceOld":"    /**\n     * This is invoked by the RespInputStream when it is close()'d. It just\n     * invokes the trailer handler in each module.\n     *\n     * @param force                invoke the handlers even if not initialized\n     *      yet?\n     * @exception IOException      if thrown by any module\n     * @exception ModuleException  if thrown by any module\n     */\n    void invokeTrailerHandlers(boolean force)\n        throws IOException, ModuleException\n    {\n        if (trailers_handled)\n        {\n            return;\n        }\n\n        if (!force && !initialized)\n        {\n            handle_trailers = true;\n            return;\n        }\n\n        for (int idx = 0; idx < modules.length && !aborted; idx++)\n        {\n            modules[idx].trailerHandler(response, request);\n        }\n\n        trailers_handled = true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}