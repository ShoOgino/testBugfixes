{"path":"lucene/src/java/org/apache/lucene/util/SentinelIntSet#getSlot(int).mjava","commits":[{"id":"1d0561cea94adff1867218e77bb763c7583be279","date":1324334341,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/SentinelIntSet#getSlot(int).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/SentinelIntSet#getSlot(int).mjava","sourceNew":"  /** returns the slot for this key */\n  public int getSlot(int key) {\n    assert key != emptyVal;\n    int h = hash(key);\n    int s = h & (keys.length-1);\n    if (keys[s] == key || keys[s]== emptyVal) return s;\n\n    int increment = (h>>7)|1;\n    do {\n      s = (s + increment) & (keys.length-1);\n    } while (keys[s] != key && keys[s] != emptyVal);\n    return s;\n  }\n\n","sourceOld":"  /** returns the slot for this key */\n  public int getSlot(int key) {\n    assert key != emptyVal;\n    int h = hash(key);\n    int s = h & (keys.length-1);\n    if (keys[s] == key || keys[s]== emptyVal) return s;\n\n    int increment = (h>>7)|1;\n    do {\n      s = (s + increment) & (keys.length-1);\n    } while (keys[s] != key && keys[s] != emptyVal);\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SentinelIntSet#getSlot(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/SentinelIntSet#getSlot(int).mjava","sourceNew":"  /** returns the slot for this key */\n  public int getSlot(int key) {\n    assert key != emptyVal;\n    int h = hash(key);\n    int s = h & (keys.length-1);\n    if (keys[s] == key || keys[s]== emptyVal) return s;\n\n    int increment = (h>>7)|1;\n    do {\n      s = (s + increment) & (keys.length-1);\n    } while (keys[s] != key && keys[s] != emptyVal);\n    return s;\n  }\n\n","sourceOld":"  /** returns the slot for this key */\n  public int getSlot(int key) {\n    assert key != emptyVal;\n    int h = hash(key);\n    int s = h & (keys.length-1);\n    if (keys[s] == key || keys[s]== emptyVal) return s;\n\n    int increment = (h>>7)|1;\n    do {\n      s = (s + increment) & (keys.length-1);\n    } while (keys[s] != key && keys[s] != emptyVal);\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1d0561cea94adff1867218e77bb763c7583be279"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d0561cea94adff1867218e77bb763c7583be279":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d0561cea94adff1867218e77bb763c7583be279"],"1d0561cea94adff1867218e77bb763c7583be279":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}