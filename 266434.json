{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#setIndexWriterMaxDocs(int).mjava","commits":[{"id":"d6b7c6630218ed9693cdb8643276513f9f0043f4","date":1406648084,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#setIndexWriterMaxDocs(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Tells {@link IndexWriter} to enforce the specified limit as the maximum number of documents in one index; call\n   *  {@link #restoreIndexWriterMaxDocs} once your test is done. */\n  public void setIndexWriterMaxDocs(int limit) {\n    Method m;\n    try {\n      m = IndexWriter.class.getDeclaredMethod(\"setMaxDocs\", int.class);\n    } catch (NoSuchMethodException nsme) {\n      throw new RuntimeException(nsme);\n    }\n    m.setAccessible(true);\n    try {\n      m.invoke(IndexWriter.class, limit);\n    } catch (IllegalAccessException iae) {\n      throw new RuntimeException(iae);\n    } catch (InvocationTargetException ite) {\n      throw new RuntimeException(ite);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6","date":1421884114,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#setIndexWriterMaxDocs(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#setIndexWriterMaxDocs(int).mjava","sourceNew":"  /** Tells {@link IndexWriter} to enforce the specified limit as the maximum number of documents in one index; call\n   *  {@link #restoreIndexWriterMaxDocs} once your test is done. */\n  public void setIndexWriterMaxDocs(int limit) {\n    Method m;\n    try {\n      m = IndexWriter.class.getDeclaredMethod(\"setMaxDocs\", int.class);\n    } catch (NoSuchMethodException nsme) {\n      throw new RuntimeException(nsme);\n    }\n    m.setAccessible(true);\n    try {\n      m.invoke(IndexWriter.class, limit);\n    } catch (IllegalAccessException | InvocationTargetException iae) {\n      throw new RuntimeException(iae);\n    }\n  }\n\n","sourceOld":"  /** Tells {@link IndexWriter} to enforce the specified limit as the maximum number of documents in one index; call\n   *  {@link #restoreIndexWriterMaxDocs} once your test is done. */\n  public void setIndexWriterMaxDocs(int limit) {\n    Method m;\n    try {\n      m = IndexWriter.class.getDeclaredMethod(\"setMaxDocs\", int.class);\n    } catch (NoSuchMethodException nsme) {\n      throw new RuntimeException(nsme);\n    }\n    m.setAccessible(true);\n    try {\n      m.invoke(IndexWriter.class, limit);\n    } catch (IllegalAccessException iae) {\n      throw new RuntimeException(iae);\n    } catch (InvocationTargetException ite) {\n      throw new RuntimeException(ite);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4383b91725e5b335d0a9d5f24b122b813dddd0cc","date":1442106431,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#setIndexWriterMaxDocs(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#setIndexWriterMaxDocs(int).mjava","sourceNew":"  /** Tells {@link IndexWriter} to enforce the specified limit as the maximum number of documents in one index; call\n   *  {@link #restoreIndexWriterMaxDocs} once your test is done. */\n  public void setIndexWriterMaxDocs(int limit) {\n    IndexWriterMaxDocsChanger.setMaxDocs(limit);\n  }\n\n","sourceOld":"  /** Tells {@link IndexWriter} to enforce the specified limit as the maximum number of documents in one index; call\n   *  {@link #restoreIndexWriterMaxDocs} once your test is done. */\n  public void setIndexWriterMaxDocs(int limit) {\n    Method m;\n    try {\n      m = IndexWriter.class.getDeclaredMethod(\"setMaxDocs\", int.class);\n    } catch (NoSuchMethodException nsme) {\n      throw new RuntimeException(nsme);\n    }\n    m.setAccessible(true);\n    try {\n      m.invoke(IndexWriter.class, limit);\n    } catch (IllegalAccessException | InvocationTargetException iae) {\n      throw new RuntimeException(iae);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6":["d6b7c6630218ed9693cdb8643276513f9f0043f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4383b91725e5b335d0a9d5f24b122b813dddd0cc":["5891bd634d5ddbf7c48cff0f4818c682ca42a4a6"],"d6b7c6630218ed9693cdb8643276513f9f0043f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4383b91725e5b335d0a9d5f24b122b813dddd0cc"]},"commit2Childs":{"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6":["4383b91725e5b335d0a9d5f24b122b813dddd0cc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6b7c6630218ed9693cdb8643276513f9f0043f4"],"d6b7c6630218ed9693cdb8643276513f9f0043f4":["5891bd634d5ddbf7c48cff0f4818c682ca42a4a6"],"4383b91725e5b335d0a9d5f24b122b813dddd0cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}