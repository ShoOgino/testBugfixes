{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","commits":[{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","pathOld":"/dev/null","sourceNew":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, StandardCharsets.UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a2b2a7398bbacbd8139fd421e060592fd79a60","date":1465913838,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","sourceNew":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","sourceOld":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, StandardCharsets.UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","sourceNew":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","sourceOld":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, StandardCharsets.UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","sourceNew":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","sourceOld":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","sourceNew":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","sourceOld":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","sourceNew":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","sourceOld":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","sourceNew":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n\n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg =\n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","sourceOld":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n      \n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg = \n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5","date":1563597632,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","sourceNew":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n\n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, StandardCharsets.UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg =\n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","sourceOld":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n\n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg =\n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee8fbffa595c312bc0437f2c9bb6376a29c1b427","date":1589412657,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#runCloudExample(CommandLine).mjava","sourceNew":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n\n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, StandardCharsets.UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg =\n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        @SuppressWarnings(\"unchecked\")\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","sourceOld":"    protected void runCloudExample(CommandLine cli) throws Exception {\n\n      boolean prompt = !cli.hasOption(\"noprompt\");\n      int numNodes = 2;\n      int[] cloudPorts = new int[]{ 8983, 7574, 8984, 7575 };\n      File cloudDir = new File(exampleDir, \"cloud\");\n      if (!cloudDir.isDirectory())\n        cloudDir.mkdir();\n\n      echo(\"\\nWelcome to the SolrCloud example!\\n\");\n\n      Scanner readInput = prompt ? new Scanner(userInput, StandardCharsets.UTF_8.name()) : null;\n      if (prompt) {\n        echo(\"This interactive session will help you launch a SolrCloud cluster on your local workstation.\");\n\n        // get the number of nodes to start\n        numNodes = promptForInt(readInput,\n            \"To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]: \",\n            \"a number\", numNodes, 1, 4);\n\n        echo(\"Ok, let's start up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\");\n\n        // get the ports for each port\n        for (int n=0; n < numNodes; n++) {\n          String promptMsg =\n              String.format(Locale.ROOT, \"Please enter the port for node%d [%d]: \", (n+1), cloudPorts[n]);\n          int port = promptForPort(readInput, n+1, promptMsg, cloudPorts[n]);\n          while (!isPortAvailable(port)) {\n            port = promptForPort(readInput, n+1,\n                \"Oops! Looks like port \"+port+\n                    \" is already being used by another process. Please choose a different port.\", cloudPorts[n]);\n          }\n\n          cloudPorts[n] = port;\n          if (verbose)\n            echo(\"Using port \"+port+\" for node \"+(n+1));\n        }\n      } else {\n        echo(\"Starting up \"+numNodes+\" Solr nodes for your example SolrCloud cluster.\\n\");\n      }\n\n      // setup a unique solr.solr.home directory for each node\n      File node1Dir = setupExampleDir(serverDir, cloudDir, \"node1\");\n      for (int n=2; n <= numNodes; n++) {\n        File nodeNDir = new File(cloudDir, \"node\"+n);\n        if (!nodeNDir.isDirectory()) {\n          echo(\"Cloning \" + node1Dir.getAbsolutePath() + \" into\\n   \"+nodeNDir.getAbsolutePath());\n          FileUtils.copyDirectory(node1Dir, nodeNDir);\n        } else {\n          echo(nodeNDir.getAbsolutePath()+\" already exists.\");\n        }\n      }\n\n      // deal with extra args passed to the script to run the example\n      String zkHost = cli.getOptionValue('z');\n\n      // start the first node (most likely with embedded ZK)\n      Map<String,Object> nodeStatus =\n          startSolr(new File(node1Dir,\"solr\"), true, cli, cloudPorts[0], zkHost, 30);\n\n      if (zkHost == null) {\n        Map<String,Object> cloudStatus = (Map<String,Object>)nodeStatus.get(\"cloud\");\n        if (cloudStatus != null) {\n          String zookeeper = (String)cloudStatus.get(\"ZooKeeper\");\n          if (zookeeper != null)\n            zkHost = zookeeper;\n        }\n        if (zkHost == null)\n          throw new Exception(\"Could not get the ZooKeeper connection string for node1!\");\n      }\n\n      if (numNodes > 1) {\n        // start the other nodes\n        for (int n = 1; n < numNodes; n++)\n          startSolr(new File(cloudDir, \"node\"+(n+1)+\"/solr\"), true, cli, cloudPorts[n], zkHost, 30);\n      }\n\n      String solrUrl = (String)nodeStatus.get(\"baseUrl\");\n      if (solrUrl.endsWith(\"/\"))\n        solrUrl = solrUrl.substring(0,solrUrl.length()-1);\n\n      // wait until live nodes == numNodes\n      waitToSeeLiveNodes(10 /* max wait */, zkHost, numNodes);\n\n      // create the collection\n      String collectionName =\n          createCloudExampleCollection(numNodes, readInput, prompt, solrUrl);\n\n      // update the config to enable soft auto-commit\n      echo(\"\\nEnabling auto soft-commits with maxTime 3 secs using the Config API\");\n      setCollectionConfigProperty(solrUrl, collectionName, \"updateHandler.autoSoftCommit.maxTime\", \"3000\");\n\n      echo(\"\\n\\nSolrCloud example running, please visit: \"+solrUrl+\" \\n\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ca20be81c9284c840498143264e583ccbb8525a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["30a2b2a7398bbacbd8139fd421e060592fd79a60","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30a2b2a7398bbacbd8139fd421e060592fd79a60":["4ca20be81c9284c840498143264e583ccbb8525a"],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["fe214d6e09deed3001159c1ad5173f9c8fc4a7f5"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4ca20be81c9284c840498143264e583ccbb8525a","30a2b2a7398bbacbd8139fd421e060592fd79a60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["30a2b2a7398bbacbd8139fd421e060592fd79a60"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["30a2b2a7398bbacbd8139fd421e060592fd79a60","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"4ca20be81c9284c840498143264e583ccbb8525a":["30a2b2a7398bbacbd8139fd421e060592fd79a60","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca20be81c9284c840498143264e583ccbb8525a"],"30a2b2a7398bbacbd8139fd421e060592fd79a60":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["fe214d6e09deed3001159c1ad5173f9c8fc4a7f5"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}