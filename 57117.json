{"path":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","commits":[{"id":"d14ffaac9c4a4a2c750bf0cd956506802561e062","date":1402602036,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","pathOld":"/dev/null","sourceNew":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","pathOld":"/dev/null","sourceNew":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","sourceNew":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","sourceNew":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", LegacyNumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", LegacyNumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", LegacyNumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb","date":1457059932,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","sourceNew":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", LegacyNumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", LegacyNumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", LegacyNumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":["770342641f7b505eaa8dccdc666158bff2419109"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","sourceNew":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", LegacyNumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", LegacyNumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", LegacyNumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSortedNumericSortField#testDouble().mjava","sourceNew":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits.value);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDouble() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-3d)));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(-5d)));\n    doc.add(new SortedNumericDocValuesField(\"value\", NumericUtils.doubleToSortableLong(7d)));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedNumericSortField(\"value\", SortField.Type.DOUBLE));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // -5 comes before -3\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["d14ffaac9c4a4a2c750bf0cd956506802561e062"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["770342641f7b505eaa8dccdc666158bff2419109","a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"770342641f7b505eaa8dccdc666158bff2419109":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["770342641f7b505eaa8dccdc666158bff2419109"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"770342641f7b505eaa8dccdc666158bff2419109":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["d0ef034a4f10871667ae75181537775ddcf8ade4","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}