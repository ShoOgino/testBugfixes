{"path":"solr/core/src/java/org/apache/solr/search/PointSetQuery[GraphTermsQParserPlugin]#newSetQuery(String,float...).mjava","commits":[{"id":"e05158fccbb5082f97e4ae2566c5ecfb9df35b7a","date":1501604915,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/PointSetQuery[GraphTermsQParserPlugin]#newSetQuery(String,float...).mjava","pathOld":"/dev/null","sourceNew":"  public static PointSetQuery newSetQuery(String field, float... sortedValues) {\n\n    final BytesRef encoded = new BytesRef(new byte[Float.BYTES]);\n\n    return new PointSetQuery(field, 1, Float.BYTES,\n        new PointSetQuery.Stream() {\n\n          int upto;\n\n          @Override\n          public BytesRef next() {\n            if (upto == sortedValues.length) {\n              return null;\n            } else {\n              FloatPoint.encodeDimension(sortedValues[upto], encoded.bytes, 0);\n              upto++;\n              return encoded;\n            }\n          }\n        }) {\n      @Override\n      protected String toString(byte[] value) {\n        assert value.length == Float.BYTES;\n        return Float.toString(FloatPoint.decodeDimension(value, 0));\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/PointSetQuery[GraphTermsQParserPlugin]#newSetQuery(String,float...).mjava","pathOld":"/dev/null","sourceNew":"  public static PointSetQuery newSetQuery(String field, float... sortedValues) {\n\n    final BytesRef encoded = new BytesRef(new byte[Float.BYTES]);\n\n    return new PointSetQuery(field, 1, Float.BYTES,\n        new PointSetQuery.Stream() {\n\n          int upto;\n\n          @Override\n          public BytesRef next() {\n            if (upto == sortedValues.length) {\n              return null;\n            } else {\n              FloatPoint.encodeDimension(sortedValues[upto], encoded.bytes, 0);\n              upto++;\n              return encoded;\n            }\n          }\n        }) {\n      @Override\n      protected String toString(byte[] value) {\n        assert value.length == Float.BYTES;\n        return Float.toString(FloatPoint.decodeDimension(value, 0));\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e05158fccbb5082f97e4ae2566c5ecfb9df35b7a"],"e05158fccbb5082f97e4ae2566c5ecfb9df35b7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e05158fccbb5082f97e4ae2566c5ecfb9df35b7a"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"e05158fccbb5082f97e4ae2566c5ecfb9df35b7a":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","e05158fccbb5082f97e4ae2566c5ecfb9df35b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}