{"path":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestPlainTextDictionary#testBuild().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestPlainTextDictionary#testBuild().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestPlainTextDictionary#testBuild().mjava","sourceNew":"  public void testBuild() throws IOException {\n    final String LF = System.getProperty(\"line.separator\");\n    String input = \"oneword\" + LF + \"twoword\" + LF + \"threeword\";\n    PlainTextDictionary ptd = new PlainTextDictionary(new StringReader(input));\n    Directory ramDir = newDirectory();\n    SpellChecker spellChecker = new SpellChecker(ramDir);\n    spellChecker.indexDictionary(ptd, newIndexWriterConfig(TEST_VERSION_CURRENT, null), false);\n    String[] similar = spellChecker.suggestSimilar(\"treeword\", 2);\n    assertEquals(2, similar.length);\n    assertEquals(similar[0], \"threeword\");\n    assertEquals(similar[1], \"oneword\");\n    spellChecker.close();\n    ramDir.close();\n  }\n\n","sourceOld":"  public void testBuild() throws IOException {\n    final String LF = System.getProperty(\"line.separator\");\n    String input = \"oneword\" + LF + \"twoword\" + LF + \"threeword\";\n    PlainTextDictionary ptd = new PlainTextDictionary(new StringReader(input));\n    Directory ramDir = newDirectory();\n    SpellChecker spellChecker = new SpellChecker(ramDir);\n    spellChecker.indexDictionary(ptd, newIndexWriterConfig(TEST_VERSION_CURRENT, null), false);\n    String[] similar = spellChecker.suggestSimilar(\"treeword\", 2);\n    assertEquals(2, similar.length);\n    assertEquals(similar[0], \"threeword\");\n    assertEquals(similar[1], \"oneword\");\n    spellChecker.close();\n    ramDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestPlainTextDictionary#testBuild().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestPlainTextDictionary#testBuild().mjava","sourceNew":"  public void testBuild() throws IOException {\n    final String LF = System.getProperty(\"line.separator\");\n    String input = \"oneword\" + LF + \"twoword\" + LF + \"threeword\";\n    PlainTextDictionary ptd = new PlainTextDictionary(new StringReader(input));\n    Directory ramDir = newDirectory();\n    SpellChecker spellChecker = new SpellChecker(ramDir);\n    spellChecker.indexDictionary(ptd, newIndexWriterConfig(null), false);\n    String[] similar = spellChecker.suggestSimilar(\"treeword\", 2);\n    assertEquals(2, similar.length);\n    assertEquals(similar[0], \"threeword\");\n    assertEquals(similar[1], \"oneword\");\n    spellChecker.close();\n    ramDir.close();\n  }\n\n","sourceOld":"  public void testBuild() throws IOException {\n    final String LF = System.getProperty(\"line.separator\");\n    String input = \"oneword\" + LF + \"twoword\" + LF + \"threeword\";\n    PlainTextDictionary ptd = new PlainTextDictionary(new StringReader(input));\n    Directory ramDir = newDirectory();\n    SpellChecker spellChecker = new SpellChecker(ramDir);\n    spellChecker.indexDictionary(ptd, newIndexWriterConfig(TEST_VERSION_CURRENT, null), false);\n    String[] similar = spellChecker.suggestSimilar(\"treeword\", 2);\n    assertEquals(2, similar.length);\n    assertEquals(similar[0], \"threeword\");\n    assertEquals(similar[1], \"oneword\");\n    spellChecker.close();\n    ramDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}