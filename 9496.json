{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#copy(Version,Set[#]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#copy(Version,Set[#]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#copy(Version,Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * <p>\n   * <b>Note:</b> If you intend to create a copy of another {@link CharArraySet} where\n   * the {@link Version} of the source set differs from its copy\n   * {@link #CharArraySet(Version, Collection, boolean)} should be used instead.\n   * The {@link #copy(Version, Set)} will preserve the {@link Version} of the\n   * source set it is an instance of {@link CharArraySet}.\n   * </p>\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details. This argument will be ignored if the\n   *          given set is a {@link CharArraySet}.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Version matchVersion, final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      return new CharArraySet(CharArrayMap.copy(source.map.matchVersion, source.map));\n    }\n    return new CharArraySet(matchVersion, set, false);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * <p>\n   * <b>Note:</b> If you intend to create a copy of another {@link CharArraySet} where\n   * the {@link Version} of the source set differs from its copy\n   * {@link #CharArraySet(Version, Collection, boolean)} should be used instead.\n   * The {@link #copy(Version, Set)} will preserve the {@link Version} of the\n   * source set it is an instance of {@link CharArraySet}.\n   * </p>\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details. This argument will be ignored if the\n   *          given set is a {@link CharArraySet}.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Version matchVersion, final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      return new CharArraySet(CharArrayMap.copy(source.map.matchVersion, source.map));\n    }\n    return new CharArraySet(matchVersion, set, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#copy(Set[#]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#copy(Version,Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      return new CharArraySet(CharArrayMap.copy(source.map));\n    }\n    return new CharArraySet(set, false);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * <p>\n   * <b>Note:</b> If you intend to create a copy of another {@link CharArraySet} where\n   * the {@link Version} of the source set differs from its copy\n   * {@link #CharArraySet(Version, Collection, boolean)} should be used instead.\n   * The {@link #copy(Version, Set)} will preserve the {@link Version} of the\n   * source set it is an instance of {@link CharArraySet}.\n   * </p>\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details. This argument will be ignored if the\n   *          given set is a {@link CharArraySet}.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Version matchVersion, final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      return new CharArraySet(CharArrayMap.copy(source.map.matchVersion, source.map));\n    }\n    return new CharArraySet(matchVersion, set, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#copy(Version,Set[#]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#copy(Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * <p>\n   * <b>Note:</b> If you intend to create a copy of another {@link CharArraySet} where\n   * the {@link Version} of the source set differs from its copy\n   * {@link #CharArraySet(Version, Collection, boolean)} should be used instead.\n   * The {@link #copy(Version, Set)} will preserve the {@link Version} of the\n   * source set it is an instance of {@link CharArraySet}.\n   * </p>\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details. This argument will be ignored if the\n   *          given set is a {@link CharArraySet}.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Version matchVersion, final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      return new CharArraySet(CharArrayMap.copy(source.map.matchVersion, source.map));\n    }\n    return new CharArraySet(matchVersion, set, false);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      return new CharArraySet(CharArrayMap.copy(source.map));\n    }\n    return new CharArraySet(set, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#copy(Set[#]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#copy(Version,Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      return new CharArraySet(CharArrayMap.copy(source.map));\n    }\n    return new CharArraySet(set, false);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * <p>\n   * <b>Note:</b> If you intend to create a copy of another {@link CharArraySet} where\n   * the {@link Version} of the source set differs from its copy\n   * {@link #CharArraySet(Version, Collection, boolean)} should be used instead.\n   * The {@link #copy(Version, Set)} will preserve the {@link Version} of the\n   * source set it is an instance of {@link CharArraySet}.\n   * </p>\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details. This argument will be ignored if the\n   *          given set is a {@link CharArraySet}.\n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property as well as the\n   *         matchVersion will be of the given set will be preserved.\n   */\n  public static CharArraySet copy(final Version matchVersion, final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    if(set instanceof CharArraySet) {\n      final CharArraySet source = (CharArraySet) set;\n      return new CharArraySet(CharArrayMap.copy(source.map.matchVersion, source.map));\n    }\n    return new CharArraySet(matchVersion, set, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["379db3ad24c4f0214f30a122265a6d6be003a99d"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}