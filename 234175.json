{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","sourceNew":"    public EverythingEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = BlockPostingsReader.this.posIn.clone();\n      this.payIn = BlockPostingsReader.this.payIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      if (indexHasOffsets) {\n        offsetStartDeltaBuffer = new int[MAX_DATA_SIZE];\n        offsetLengthBuffer = new int[MAX_DATA_SIZE];\n      } else {\n        offsetStartDeltaBuffer = null;\n        offsetLengthBuffer = null;\n        startOffset = -1;\n        endOffset = -1;\n      }\n\n      indexHasPayloads = fieldInfo.hasPayloads();\n      if (indexHasPayloads) {\n        payloadLengthBuffer = new int[MAX_DATA_SIZE];\n        payloadBytes = new byte[128];\n        payload = new BytesRef();\n      } else {\n        payloadLengthBuffer = null;\n        payloadBytes = null;\n        payload = null;\n      }\n    }\n\n","sourceOld":"    public EverythingEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = BlockPostingsReader.this.posIn.clone();\n      this.payIn = BlockPostingsReader.this.payIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      if (indexHasOffsets) {\n        offsetStartDeltaBuffer = new int[MAX_DATA_SIZE];\n        offsetLengthBuffer = new int[MAX_DATA_SIZE];\n      } else {\n        offsetStartDeltaBuffer = null;\n        offsetLengthBuffer = null;\n        startOffset = -1;\n        endOffset = -1;\n      }\n\n      indexHasPayloads = fieldInfo.hasPayloads();\n      if (indexHasPayloads) {\n        payloadLengthBuffer = new int[MAX_DATA_SIZE];\n        payloadBytes = new byte[128];\n        payload = new BytesRef();\n      } else {\n        payloadLengthBuffer = null;\n        payloadBytes = null;\n        payload = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf8086c7e11dc41303ef1b8050bd355ddfaee76d","date":1350007219,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","sourceNew":"    public EverythingEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = Lucene41PostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = Lucene41PostingsReader.this.posIn.clone();\n      this.payIn = Lucene41PostingsReader.this.payIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      if (indexHasOffsets) {\n        offsetStartDeltaBuffer = new int[MAX_DATA_SIZE];\n        offsetLengthBuffer = new int[MAX_DATA_SIZE];\n      } else {\n        offsetStartDeltaBuffer = null;\n        offsetLengthBuffer = null;\n        startOffset = -1;\n        endOffset = -1;\n      }\n\n      indexHasPayloads = fieldInfo.hasPayloads();\n      if (indexHasPayloads) {\n        payloadLengthBuffer = new int[MAX_DATA_SIZE];\n        payloadBytes = new byte[128];\n        payload = new BytesRef();\n      } else {\n        payloadLengthBuffer = null;\n        payloadBytes = null;\n        payload = null;\n      }\n    }\n\n","sourceOld":"    public EverythingEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = BlockPostingsReader.this.posIn.clone();\n      this.payIn = BlockPostingsReader.this.payIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      if (indexHasOffsets) {\n        offsetStartDeltaBuffer = new int[MAX_DATA_SIZE];\n        offsetLengthBuffer = new int[MAX_DATA_SIZE];\n      } else {\n        offsetStartDeltaBuffer = null;\n        offsetLengthBuffer = null;\n        startOffset = -1;\n        endOffset = -1;\n      }\n\n      indexHasPayloads = fieldInfo.hasPayloads();\n      if (indexHasPayloads) {\n        payloadLengthBuffer = new int[MAX_DATA_SIZE];\n        payloadBytes = new byte[128];\n        payload = new BytesRef();\n      } else {\n        payloadLengthBuffer = null;\n        payloadBytes = null;\n        payload = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","sourceNew":"    public EverythingEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = Lucene41PostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = Lucene41PostingsReader.this.posIn.clone();\n      this.payIn = Lucene41PostingsReader.this.payIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      if (indexHasOffsets) {\n        offsetStartDeltaBuffer = new int[MAX_DATA_SIZE];\n        offsetLengthBuffer = new int[MAX_DATA_SIZE];\n      } else {\n        offsetStartDeltaBuffer = null;\n        offsetLengthBuffer = null;\n        startOffset = -1;\n        endOffset = -1;\n      }\n\n      indexHasPayloads = fieldInfo.hasPayloads();\n      if (indexHasPayloads) {\n        payloadLengthBuffer = new int[MAX_DATA_SIZE];\n        payloadBytes = new byte[128];\n        payload = new BytesRef();\n      } else {\n        payloadLengthBuffer = null;\n        payloadBytes = null;\n        payload = null;\n      }\n    }\n\n","sourceOld":"    public EverythingEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = BlockPostingsReader.this.posIn.clone();\n      this.payIn = BlockPostingsReader.this.payIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      if (indexHasOffsets) {\n        offsetStartDeltaBuffer = new int[MAX_DATA_SIZE];\n        offsetLengthBuffer = new int[MAX_DATA_SIZE];\n      } else {\n        offsetStartDeltaBuffer = null;\n        offsetLengthBuffer = null;\n        startOffset = -1;\n        endOffset = -1;\n      }\n\n      indexHasPayloads = fieldInfo.hasPayloads();\n      if (indexHasPayloads) {\n        payloadLengthBuffer = new int[MAX_DATA_SIZE];\n        payloadBytes = new byte[128];\n        payload = new BytesRef();\n      } else {\n        payloadLengthBuffer = null;\n        payloadBytes = null;\n        payload = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","sourceNew":"    public EverythingEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = Lucene41PostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = Lucene41PostingsReader.this.posIn.clone();\n      this.payIn = Lucene41PostingsReader.this.payIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      if (indexHasOffsets) {\n        offsetStartDeltaBuffer = new int[MAX_DATA_SIZE];\n        offsetLengthBuffer = new int[MAX_DATA_SIZE];\n      } else {\n        offsetStartDeltaBuffer = null;\n        offsetLengthBuffer = null;\n        startOffset = -1;\n        endOffset = -1;\n      }\n\n      indexHasPayloads = fieldInfo.hasPayloads();\n      if (indexHasPayloads) {\n        payloadLengthBuffer = new int[MAX_DATA_SIZE];\n        payloadBytes = new byte[128];\n        payload = new BytesRef();\n      } else {\n        payloadLengthBuffer = null;\n        payloadBytes = null;\n        payload = null;\n      }\n    }\n\n","sourceOld":"    public EverythingEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = BlockPostingsReader.this.posIn.clone();\n      this.payIn = BlockPostingsReader.this.payIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      if (indexHasOffsets) {\n        offsetStartDeltaBuffer = new int[MAX_DATA_SIZE];\n        offsetLengthBuffer = new int[MAX_DATA_SIZE];\n      } else {\n        offsetStartDeltaBuffer = null;\n        offsetLengthBuffer = null;\n        startOffset = -1;\n        endOffset = -1;\n      }\n\n      indexHasPayloads = fieldInfo.hasPayloads();\n      if (indexHasPayloads) {\n        payloadLengthBuffer = new int[MAX_DATA_SIZE];\n        payloadBytes = new byte[128];\n        payload = new BytesRef();\n      } else {\n        payloadLengthBuffer = null;\n        payloadBytes = null;\n        payload = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"]},"commit2Childs":{"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","cf8086c7e11dc41303ef1b8050bd355ddfaee76d","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}