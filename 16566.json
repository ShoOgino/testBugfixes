{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/SimpleStandardTermsIndexWriter#SimpleStandardTermsIndexWriter(SegmentWriteState).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/SimpleStandardTermsIndexWriter#SimpleStandardTermsIndexWriter(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  public SimpleStandardTermsIndexWriter(SegmentWriteState state) throws IOException {\n    final String indexFileName = IndexFileNames.segmentFileName(state.segmentName, StandardCodec.TERMS_INDEX_EXTENSION);\n    state.flushedFiles.add(indexFileName);\n    termIndexInterval = state.termIndexInterval;\n    out = state.directory.createOutput(indexFileName);\n    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n    fieldInfos = state.fieldInfos;\n\n    // Placeholder for dir offset\n    out.writeLong(0);\n    out.writeInt(termIndexInterval);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/SimpleStandardTermsIndexWriter#SimpleStandardTermsIndexWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/SimpleStandardTermsIndexWriter#SimpleStandardTermsIndexWriter(SegmentWriteState).mjava","sourceNew":"  public SimpleStandardTermsIndexWriter(SegmentWriteState state) throws IOException {\n    final String indexFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.TERMS_INDEX_EXTENSION);\n    state.flushedFiles.add(indexFileName);\n    termIndexInterval = state.termIndexInterval;\n    out = state.directory.createOutput(indexFileName);\n    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n    fieldInfos = state.fieldInfos;\n\n    // Placeholder for dir offset\n    out.writeLong(0);\n    out.writeInt(termIndexInterval);\n  }\n\n","sourceOld":"  public SimpleStandardTermsIndexWriter(SegmentWriteState state) throws IOException {\n    final String indexFileName = IndexFileNames.segmentFileName(state.segmentName, StandardCodec.TERMS_INDEX_EXTENSION);\n    state.flushedFiles.add(indexFileName);\n    termIndexInterval = state.termIndexInterval;\n    out = state.directory.createOutput(indexFileName);\n    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n    fieldInfos = state.fieldInfos;\n\n    // Placeholder for dir offset\n    out.writeLong(0);\n    out.writeInt(termIndexInterval);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6066dbe072ec5334ff5824f474e9d3abd1620fb7","date":1278709584,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/SimpleStandardTermsIndexWriter#SimpleStandardTermsIndexWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/SimpleStandardTermsIndexWriter#SimpleStandardTermsIndexWriter(SegmentWriteState).mjava","sourceNew":"  public SimpleStandardTermsIndexWriter(SegmentWriteState state) throws IOException {\n    final String indexFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.TERMS_INDEX_EXTENSION);\n    state.flushedFiles.add(indexFileName);\n    termIndexInterval = state.termIndexInterval;\n    out = state.directory.createOutput(indexFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    out.writeInt(termIndexInterval);\n  }\n\n","sourceOld":"  public SimpleStandardTermsIndexWriter(SegmentWriteState state) throws IOException {\n    final String indexFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.TERMS_INDEX_EXTENSION);\n    state.flushedFiles.add(indexFileName);\n    termIndexInterval = state.termIndexInterval;\n    out = state.directory.createOutput(indexFileName);\n    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n    fieldInfos = state.fieldInfos;\n\n    // Placeholder for dir offset\n    out.writeLong(0);\n    out.writeInt(termIndexInterval);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/SimpleStandardTermsIndexWriter#SimpleStandardTermsIndexWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/SimpleStandardTermsIndexWriter#SimpleStandardTermsIndexWriter(SegmentWriteState).mjava","sourceNew":"  public SimpleStandardTermsIndexWriter(SegmentWriteState state) throws IOException {\n    final String indexFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.TERMS_INDEX_EXTENSION);\n    state.flushedFiles.add(indexFileName);\n    termIndexInterval = state.termIndexInterval;\n    out = state.directory.createOutput(indexFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    out.writeInt(termIndexInterval);\n  }\n\n","sourceOld":"  public SimpleStandardTermsIndexWriter(SegmentWriteState state) throws IOException {\n    final String indexFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.TERMS_INDEX_EXTENSION);\n    state.flushedFiles.add(indexFileName);\n    termIndexInterval = state.termIndexInterval;\n    out = state.directory.createOutput(indexFileName);\n    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n    fieldInfos = state.fieldInfos;\n\n    // Placeholder for dir offset\n    out.writeLong(0);\n    out.writeInt(termIndexInterval);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexWriter#FixedGapTermsIndexWriter(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/SimpleStandardTermsIndexWriter#SimpleStandardTermsIndexWriter(SegmentWriteState).mjava","sourceNew":"  public FixedGapTermsIndexWriter(SegmentWriteState state) throws IOException {\n    final String indexFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", TERMS_INDEX_EXTENSION);\n    state.flushedFiles.add(indexFileName);\n    termIndexInterval = state.termIndexInterval;\n    out = state.directory.createOutput(indexFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    out.writeInt(termIndexInterval);\n  }\n\n","sourceOld":"  public SimpleStandardTermsIndexWriter(SegmentWriteState state) throws IOException {\n    final String indexFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.TERMS_INDEX_EXTENSION);\n    state.flushedFiles.add(indexFileName);\n    termIndexInterval = state.termIndexInterval;\n    out = state.directory.createOutput(indexFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    out.writeInt(termIndexInterval);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/SimpleStandardTermsIndexWriter#SimpleStandardTermsIndexWriter(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  public SimpleStandardTermsIndexWriter(SegmentWriteState state) throws IOException {\n    final String indexFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.TERMS_INDEX_EXTENSION);\n    state.flushedFiles.add(indexFileName);\n    termIndexInterval = state.termIndexInterval;\n    out = state.directory.createOutput(indexFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    out.writeInt(termIndexInterval);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","99cf56f3a650b908f7017a72f9d23940418f8a52"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["99cf56f3a650b908f7017a72f9d23940418f8a52"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"]},"commit2Childs":{"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["5f4e87790277826a2aea119328600dfb07761f32","99cf56f3a650b908f7017a72f9d23940418f8a52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"99cf56f3a650b908f7017a72f9d23940418f8a52":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["6066dbe072ec5334ff5824f474e9d3abd1620fb7","5f4e87790277826a2aea119328600dfb07761f32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}