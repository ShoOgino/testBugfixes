{"path":"src/java/org/apache/lucene/index/FreqProxTermsWriter#compareText(char[],int,char[],int).mjava","commits":[{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FreqProxTermsWriter#compareText(char[],int,char[],int).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#compareText(char[],int,char[],int).mjava","sourceNew":"  private static int compareText(final char[] text1, int pos1, final char[] text2, int pos2) {\n    while(true) {\n      final char c1 = text1[pos1++];\n      final char c2 = text2[pos2++];\n      if (c1 != c2) {\n        if (0xffff == c2)\n          return 1;\n        else if (0xffff == c1)\n          return -1;\n        else\n          return c1-c2;\n      } else if (0xffff == c1)\n        return 0;\n    }\n  }\n\n","sourceOld":"  private static int compareText(final char[] text1, int pos1, final char[] text2, int pos2) {\n    while(true) {\n      final char c1 = text1[pos1++];\n      final char c2 = text2[pos2++];\n      if (c1 != c2) {\n        if (0xffff == c2)\n          return 1;\n        else if (0xffff == c1)\n          return -1;\n        else\n          return c1-c2;\n      } else if (0xffff == c1)\n        return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriter#compareText(char[],int,char[],int).mjava","pathOld":"src/java/org/apache/lucene/index/FreqProxTermsWriter#compareText(char[],int,char[],int).mjava","sourceNew":"  private static int compareText(final char[] text1, int pos1, final char[] text2, int pos2) {\n    while(true) {\n      final char c1 = text1[pos1++];\n      final char c2 = text2[pos2++];\n      if (c1 != c2) {\n        if (0xffff == c2)\n          return 1;\n        else if (0xffff == c1)\n          return -1;\n        else\n          return c1-c2;\n      } else if (0xffff == c1)\n        return 0;\n    }\n  }\n\n","sourceOld":"  private static int compareText(final char[] text1, int pos1, final char[] text2, int pos2) {\n    while(true) {\n      final char c1 = text1[pos1++];\n      final char c2 = text2[pos2++];\n      if (c1 != c2) {\n        if (0xffff == c2)\n          return 1;\n        else if (0xffff == c1)\n          return -1;\n        else\n          return c1-c2;\n      } else if (0xffff == c1)\n        return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5350389bf83287111f7760b9e3db3af8e3648474":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5350389bf83287111f7760b9e3db3af8e3648474"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5350389bf83287111f7760b9e3db3af8e3648474"],"5350389bf83287111f7760b9e3db3af8e3648474":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}