{"path":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = FieldCache.DEFAULT.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = FieldCache.DEFAULT.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = DocValues.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = FieldCache.DEFAULT.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9274621789ce990dbfef455dabdf026bb3184821","date":1400046684,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = DocValues.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = DocValues.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","bugFix":["6fff8f4b218bd0626afcdce82027bafeb84a50a4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = DocValues.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = FieldCache.DEFAULT.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = DocValues.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = FieldCache.DEFAULT.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = DocValues.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9274621789ce990dbfef455dabdf026bb3184821":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","9274621789ce990dbfef455dabdf026bb3184821"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","93dd449115a9247533e44bab47e8429e5dccbc6d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"9274621789ce990dbfef455dabdf026bb3184821":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["9274621789ce990dbfef455dabdf026bb3184821"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}