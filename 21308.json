{"path":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RollupRequestReplicationTracker,LeaderRequestReplicationTracker).mjava","commits":[{"id":"615bf5b56d95ed8c9bf06a402db6c817d6bff21a","date":1509492118,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RollupRequestReplicationTracker,LeaderRequestReplicationTracker).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","sourceNew":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous,\n                         RollupRequestReplicationTracker rollupTracker,\n                         LeaderRequestReplicationTracker leaderTracker) throws IOException {\n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      if (cmd.isInPlaceUpdate()) {\n        params.set(DistributedUpdateProcessor.DISTRIB_INPLACE_PREVVERSION, String.valueOf(cmd.prevVersion));\n      }\n      submit(new Req(cmd, node, uReq, synchronous, rollupTracker, leaderTracker), false);\n    }\n    \n  }\n\n","sourceOld":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      if (cmd.isInPlaceUpdate()) {\n        params.set(DistributedUpdateProcessor.DISTRIB_INPLACE_PREVVERSION, String.valueOf(cmd.prevVersion));\n      }\n      submit(new Req(cmd, node, uReq, synchronous, rrt), false);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"615bf5b56d95ed8c9bf06a402db6c817d6bff21a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615bf5b56d95ed8c9bf06a402db6c817d6bff21a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615bf5b56d95ed8c9bf06a402db6c817d6bff21a"],"615bf5b56d95ed8c9bf06a402db6c817d6bff21a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}