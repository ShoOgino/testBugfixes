{"path":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#search().mjava","commits":[{"id":"3e1de378515e2ab9bcfd5b80901238a3f9078a7c","date":1385904665,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#search().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestRangeFacetCounts#testDistanceRangeFaceting().mjava","sourceNew":"  /** User runs a query and counts facets. */\n  public FacetResult search() throws IOException {\n\n    Expression distance;\n    try {\n      distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    } catch (ParseException pe) {\n      // Should not happen\n      throw new RuntimeException(pe);\n    }\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n\n    FacetsCollector fc = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new DoubleRangeFacetCounts(\"field\", distance.getValueSource(bindings), fc,\n        new DoubleRange(\"< 1 km\", 0.0, true, 1.0, false),\n        new DoubleRange(\"< 2 km\", 0.0, true, 2.0, false),\n        new DoubleRange(\"< 5 km\", 0.0, true, 5.0, false),\n        new DoubleRange(\"< 10 km\", 0.0, true, 10.0, false),\n        new DoubleRange(\"< 20 km\", 0.0, true, 20.0, false),\n        new DoubleRange(\"< 50 km\", 0.0, true, 50.0, false));\n\n    return facets.getTopChildren(10, \"field\");\n  }\n\n","sourceOld":"  public void testDistanceRangeFaceting() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    \n    Document doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.759011, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -73.9844722, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.718266, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.007819, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new DoubleField(\"latitude\", 40.7051157, Field.Store.NO));\n    doc.add(new DoubleField(\"longitude\", -74.0088305, Field.Store.NO));\n    writer.addDocument(doc);\n    \n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n\n    FacetsCollector fc = new FacetsCollector();\n\n    IndexReader r = writer.getReader();\n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new DoubleRangeFacetCounts(\"field\", distance.getValueSource(bindings), fc,\n        new DoubleRange(\"< 1 km\", 0.0, true, 1.0, false),\n        new DoubleRange(\"< 2 km\", 0.0, true, 2.0, false),\n        new DoubleRange(\"< 5 km\", 0.0, true, 5.0, false),\n        new DoubleRange(\"< 10 km\", 0.0, true, 10.0, false),\n        new DoubleRange(\"< 20 km\", 0.0, true, 20.0, false),\n        new DoubleRange(\"< 50 km\", 0.0, true, 50.0, false));\n\n    assertEquals(\"value=3 childCount=6\\n  < 1 km (1)\\n  < 2 km (2)\\n  < 5 km (2)\\n  < 10 km (3)\\n  < 20 km (3)\\n  < 50 km (3)\\n\", facets.getTopChildren(10, \"field\").toString());\n    IOUtils.close(r, writer, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56d44586f4c409c6c6c5942b9f0227df806b7300","date":1386027853,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#search().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#search().mjava","sourceNew":"  /** User runs a query and counts facets. */\n  public FacetResult search() throws IOException {\n\n\n    FacetsCollector fc = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new DoubleRangeFacetCounts(\"field\", getDistanceValueSource(), fc,\n                                               ONE_KM,\n                                               TWO_KM,\n                                               FIVE_KM,\n                                               TEN_KM);\n\n    return facets.getTopChildren(10, \"field\");\n  }\n\n","sourceOld":"  /** User runs a query and counts facets. */\n  public FacetResult search() throws IOException {\n\n    Expression distance;\n    try {\n      distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    } catch (ParseException pe) {\n      // Should not happen\n      throw new RuntimeException(pe);\n    }\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n\n    FacetsCollector fc = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new DoubleRangeFacetCounts(\"field\", distance.getValueSource(bindings), fc,\n        new DoubleRange(\"< 1 km\", 0.0, true, 1.0, false),\n        new DoubleRange(\"< 2 km\", 0.0, true, 2.0, false),\n        new DoubleRange(\"< 5 km\", 0.0, true, 5.0, false),\n        new DoubleRange(\"< 10 km\", 0.0, true, 10.0, false),\n        new DoubleRange(\"< 20 km\", 0.0, true, 20.0, false),\n        new DoubleRange(\"< 50 km\", 0.0, true, 50.0, false));\n\n    return facets.getTopChildren(10, \"field\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#search().mjava","pathOld":"/dev/null","sourceNew":"  /** User runs a query and counts facets. */\n  public FacetResult search() throws IOException {\n\n\n    FacetsCollector fc = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new DoubleRangeFacetCounts(\"field\", getDistanceValueSource(), fc,\n                                               ONE_KM,\n                                               TWO_KM,\n                                               FIVE_KM,\n                                               TEN_KM);\n\n    return facets.getTopChildren(10, \"field\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40640359164f629dd440a47df2e145d084ce9645","date":1391711808,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#search().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#search().mjava","sourceNew":"  /** User runs a query and counts facets. */\n  public FacetResult search() throws IOException {\n\n    FacetsCollector fc = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new DoubleRangeFacetCounts(\"field\", getDistanceValueSource(), fc,\n                                               getBoundingBoxFilter(ORIGIN_LATITUDE, ORIGIN_LONGITUDE, 10.0),\n                                               ONE_KM,\n                                               TWO_KM,\n                                               FIVE_KM,\n                                               TEN_KM);\n\n    return facets.getTopChildren(10, \"field\");\n  }\n\n","sourceOld":"  /** User runs a query and counts facets. */\n  public FacetResult search() throws IOException {\n\n\n    FacetsCollector fc = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new DoubleRangeFacetCounts(\"field\", getDistanceValueSource(), fc,\n                                               ONE_KM,\n                                               TWO_KM,\n                                               FIVE_KM,\n                                               TEN_KM);\n\n    return facets.getTopChildren(10, \"field\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd6be878365e339c75cc43ad7d5df95ab4ea21e5","date":1435762101,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#search().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#search().mjava","sourceNew":"  /** User runs a query and counts facets. */\n  public FacetResult search() throws IOException {\n\n    FacetsCollector fc = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new DoubleRangeFacetCounts(\"field\", getDistanceValueSource(), fc,\n                                               getBoundingBoxQuery(ORIGIN_LATITUDE, ORIGIN_LONGITUDE, 10.0),\n                                               ONE_KM,\n                                               TWO_KM,\n                                               FIVE_KM,\n                                               TEN_KM);\n\n    return facets.getTopChildren(10, \"field\");\n  }\n\n","sourceOld":"  /** User runs a query and counts facets. */\n  public FacetResult search() throws IOException {\n\n    FacetsCollector fc = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), fc);\n\n    Facets facets = new DoubleRangeFacetCounts(\"field\", getDistanceValueSource(), fc,\n                                               getBoundingBoxFilter(ORIGIN_LATITUDE, ORIGIN_LONGITUDE, 10.0),\n                                               ONE_KM,\n                                               TWO_KM,\n                                               FIVE_KM,\n                                               TEN_KM);\n\n    return facets.getTopChildren(10, \"field\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["3e1de378515e2ab9bcfd5b80901238a3f9078a7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56d44586f4c409c6c6c5942b9f0227df806b7300"],"40640359164f629dd440a47df2e145d084ce9645":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3e1de378515e2ab9bcfd5b80901238a3f9078a7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dd6be878365e339c75cc43ad7d5df95ab4ea21e5":["40640359164f629dd440a47df2e145d084ce9645"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd6be878365e339c75cc43ad7d5df95ab4ea21e5"]},"commit2Childs":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cc728b07df73b197e6d940d27f9b08b63918f13","3e1de378515e2ab9bcfd5b80901238a3f9078a7c"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["40640359164f629dd440a47df2e145d084ce9645"],"3e1de378515e2ab9bcfd5b80901238a3f9078a7c":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"40640359164f629dd440a47df2e145d084ce9645":["dd6be878365e339c75cc43ad7d5df95ab4ea21e5"],"dd6be878365e339c75cc43ad7d5df95ab4ea21e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}