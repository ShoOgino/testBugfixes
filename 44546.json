{"path":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","pathOld":"/dev/null","sourceNew":"  /* The queue for ConfigSet related operations */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19498030e0adab22f604f935cae3c03dcf0952a6","date":1456558851,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","sourceNew":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link DistributedQueue} object\n   */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","sourceOld":"  /* The queue for ConfigSet related operations */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","sourceNew":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link DistributedQueue} object\n   */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","sourceOld":"  /* The queue for ConfigSet related operations */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac","date":1503580177,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","sourceNew":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link ZkDistributedQueue} object\n   */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","sourceOld":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link DistributedQueue} object\n   */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b869898f50ca80263bac2e3ae0949f7700e5c977","date":1503580229,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","sourceNew":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link DistributedQueue} object\n   */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","sourceOld":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link ZkDistributedQueue} object\n   */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89c102d671c256ef8dd67b3ecb3ab96fe7a8006e","date":1505888025,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","sourceNew":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link ZkDistributedQueue} object\n   */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","sourceOld":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link DistributedQueue} object\n   */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","sourceNew":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link ZkDistributedQueue} object\n   */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","sourceOld":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link DistributedQueue} object\n   */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#getConfigSetQueue(SolrZkClient).mjava","sourceNew":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link ZkDistributedQueue} object\n   */\n  OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","sourceOld":"  /**\n   * Get queue that can be used to submit configset API tasks to the Overseer.\n   * <p>\n   * This queue is used internally by the {@link org.apache.solr.handler.admin.ConfigSetsHandler} to submit\n   * tasks which are executed by the {@link OverseerConfigSetMessageHandler}. The actions supported\n   * by this queue are listed in the {@link org.apache.solr.common.params.ConfigSetParams.ConfigSetAction}\n   * enum.\n   * <p>\n   * Performance statistics on the returned queue\n   * are <em>not</em> tracked by the Overseer Stats API,\n   * see {@link org.apache.solr.common.params.CollectionParams.CollectionAction#OVERSEERSTATUS}.\n   *\n   * @param zkClient the {@link SolrZkClient} to be used for reading/writing to the queue\n   * @return a {@link ZkDistributedQueue} object\n   */\n  static OverseerTaskQueue getConfigSetQueue(final SolrZkClient zkClient)  {\n    return getConfigSetQueue(zkClient, new Stats());\n  }\n\n","bugFix":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["2209af2c265d2258ec4b29c8cc78622d36994a15","19498030e0adab22f604f935cae3c03dcf0952a6"],"19498030e0adab22f604f935cae3c03dcf0952a6":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["af2638813028b254a88b418ebeafb541afb49653"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["b869898f50ca80263bac2e3ae0949f7700e5c977","89c102d671c256ef8dd67b3ecb3ab96fe7a8006e"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["89c102d671c256ef8dd67b3ecb3ab96fe7a8006e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"89c102d671c256ef8dd67b3ecb3ab96fe7a8006e":["af2638813028b254a88b418ebeafb541afb49653"],"b869898f50ca80263bac2e3ae0949f7700e5c977":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac","89c102d671c256ef8dd67b3ecb3ab96fe7a8006e"],"19498030e0adab22f604f935cae3c03dcf0952a6":["af2638813028b254a88b418ebeafb541afb49653"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["af2638813028b254a88b418ebeafb541afb49653","19498030e0adab22f604f935cae3c03dcf0952a6"],"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["b869898f50ca80263bac2e3ae0949f7700e5c977"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"b869898f50ca80263bac2e3ae0949f7700e5c977":["6240b74b884c5587f2a4062dd27d6c32bf228889"],"89c102d671c256ef8dd67b3ecb3ab96fe7a8006e":["6240b74b884c5587f2a4062dd27d6c32bf228889","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}