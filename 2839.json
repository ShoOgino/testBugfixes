{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","sourceNew":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.length(), 5);\n    assertEquals(t.toString(), \"hello\");\n    t.setEmpty().append(\"hello2\");\n    assertEquals(t.length(), 6);\n    assertEquals(t.toString(), \"hello2\");\n    t.copyBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.toString(), \"hello3\");\n\n    char[] buffer = t.buffer();\n    buffer[1] = 'o';\n    assertEquals(t.toString(), \"hollo3\");\n  }\n\n","sourceOld":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.length(), 5);\n    assertEquals(t.toString(), \"hello\");\n    t.setEmpty().append(\"hello2\");\n    assertEquals(t.length(), 6);\n    assertEquals(t.toString(), \"hello2\");\n    t.copyBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.toString(), \"hello3\");\n\n    char[] buffer = t.buffer();\n    buffer[1] = 'o';\n    assertEquals(t.toString(), \"hollo3\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93124590c6e2a8b45898cbae46f96c3a05d9bce0","date":1399415098,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","sourceNew":null,"sourceOld":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.length(), 5);\n    assertEquals(t.toString(), \"hello\");\n    t.setEmpty().append(\"hello2\");\n    assertEquals(t.length(), 6);\n    assertEquals(t.toString(), \"hello2\");\n    t.copyBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.toString(), \"hello3\");\n\n    char[] buffer = t.buffer();\n    buffer[1] = 'o';\n    assertEquals(t.toString(), \"hollo3\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93124590c6e2a8b45898cbae46f96c3a05d9bce0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93124590c6e2a8b45898cbae46f96c3a05d9bce0"]},"commit2Childs":{"93124590c6e2a8b45898cbae46f96c3a05d9bce0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["93124590c6e2a8b45898cbae46f96c3a05d9bce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}