{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer#replaceWith().mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer#replaceWith().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void replaceWith() {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    Map<String, String> fld = getField(\"name\", \"string\", \"'\", null, null);\n    fld.put(\"replaceWith\", \"''\");\n    fields.add(fld);\n    Context context = AbstractDataImportHandlerTest.getContext(null, null,\n            null, 0, fields, null);\n    Map<String, Object> src = new HashMap<String, Object>();\n    String s = \"D'souza\";\n    src.put(\"name\", s);\n    Map<String, Object> result = new RegexTransformer().transformRow(src,\n            context);\n    Assert.assertEquals(\"D''souza\", result.get(\"name\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d183f54b5c7a1c64bd2935a5d5bd71091ebe4198","date":1235539651,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer#replaceWith().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer#replaceWith().mjava","sourceNew":"  @Test\n  public void replaceWith() {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    // <field column=\"name\" sourceColName=\"a\" regexp=\"'\" replaceWith=\"''\" />\n    Map<String, String> fld = getField(\"name\", \"string\", \"'\", null, null);\n    fld.put(\"replaceWith\", \"''\");\n    fields.add(fld);\n    Context context = AbstractDataImportHandlerTest.getContext(null, null,\n            null, 0, fields, null);\n\n    Map<String, Object> src = new HashMap<String, Object>();\n    String s = \"D'souza\";\n    src.put(\"name\", s);\n\n    Map<String, Object> result = new RegexTransformer().transformRow(src,\n            context);\n    Assert.assertEquals(\"D''souza\", result.get(\"name\"));\n  }\n\n","sourceOld":"  @Test\n  public void replaceWith() {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    Map<String, String> fld = getField(\"name\", \"string\", \"'\", null, null);\n    fld.put(\"replaceWith\", \"''\");\n    fields.add(fld);\n    Context context = AbstractDataImportHandlerTest.getContext(null, null,\n            null, 0, fields, null);\n    Map<String, Object> src = new HashMap<String, Object>();\n    String s = \"D'souza\";\n    src.put(\"name\", s);\n    Map<String, Object> result = new RegexTransformer().transformRow(src,\n            context);\n    Assert.assertEquals(\"D''souza\", result.get(\"name\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"594d4ee17b3d941ed34827ca6646e378cf7d8d2a","date":1239868870,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer#replaceWith().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer#replaceWith().mjava","sourceNew":"  @Test\n  public void replaceWith() {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    // <field column=\"name\" sourceColName=\"a\" regexp=\"'\" replaceWith=\"''\" />\n    Map<String, String> fld = getField(\"name\", \"string\", \"'\", null, null);\n    fld.put(\"replaceWith\", \"''\");\n    fields.add(fld);\n    Context context = AbstractDataImportHandlerTest.getContext(null, null,\n            null, Context.FULL_DUMP, fields, null);\n\n    Map<String, Object> src = new HashMap<String, Object>();\n    String s = \"D'souza\";\n    src.put(\"name\", s);\n\n    Map<String, Object> result = new RegexTransformer().transformRow(src,\n            context);\n    Assert.assertEquals(\"D''souza\", result.get(\"name\"));\n  }\n\n","sourceOld":"  @Test\n  public void replaceWith() {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    // <field column=\"name\" sourceColName=\"a\" regexp=\"'\" replaceWith=\"''\" />\n    Map<String, String> fld = getField(\"name\", \"string\", \"'\", null, null);\n    fld.put(\"replaceWith\", \"''\");\n    fields.add(fld);\n    Context context = AbstractDataImportHandlerTest.getContext(null, null,\n            null, 0, fields, null);\n\n    Map<String, Object> src = new HashMap<String, Object>();\n    String s = \"D'souza\";\n    src.put(\"name\", s);\n\n    Map<String, Object> result = new RegexTransformer().transformRow(src,\n            context);\n    Assert.assertEquals(\"D''souza\", result.get(\"name\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72f7cca1d9eaf9232fb247ff10b18fb6e94d3250","date":1239876954,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer#replaceWith().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer#replaceWith().mjava","sourceNew":"  @Test\n  public void replaceWith() {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    // <field column=\"name\" regexp=\"'\" replaceWith=\"''\" />\n    Map<String, String> fld = getField(\"name\", \"string\", \"'\", null, null);\n    fld.put(REPLACE_WITH, \"''\");\n    fields.add(fld);\n    Context context = AbstractDataImportHandlerTest.getContext(null, null,\n            null, Context.FULL_DUMP, fields, null);\n\n    Map<String, Object> src = new HashMap<String, Object>();\n    String s = \"D'souza\";\n    src.put(\"name\", s);\n\n    Map<String, Object> result = new RegexTransformer().transformRow(src,\n            context);\n    Assert.assertEquals(\"D''souza\", result.get(\"name\"));\n  }\n\n","sourceOld":"  @Test\n  public void replaceWith() {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    // <field column=\"name\" sourceColName=\"a\" regexp=\"'\" replaceWith=\"''\" />\n    Map<String, String> fld = getField(\"name\", \"string\", \"'\", null, null);\n    fld.put(\"replaceWith\", \"''\");\n    fields.add(fld);\n    Context context = AbstractDataImportHandlerTest.getContext(null, null,\n            null, Context.FULL_DUMP, fields, null);\n\n    Map<String, Object> src = new HashMap<String, Object>();\n    String s = \"D'souza\";\n    src.put(\"name\", s);\n\n    Map<String, Object> result = new RegexTransformer().transformRow(src,\n            context);\n    Assert.assertEquals(\"D''souza\", result.get(\"name\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer#replaceWith().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestRegexTransformer#replaceWith().mjava","sourceNew":"  @Test\n  public void replaceWith() {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    // <field column=\"name\" regexp=\"'\" replaceWith=\"''\" />\n    Map<String, String> fld = getField(\"name\", \"string\", \"'\", null, null);\n    fld.put(REPLACE_WITH, \"''\");\n    fields.add(fld);\n    Context context = AbstractDataImportHandlerTest.getContext(null, null,\n            null, Context.FULL_DUMP, fields, null);\n\n    Map<String, Object> src = new HashMap<String, Object>();\n    String s = \"D'souza\";\n    src.put(\"name\", s);\n\n    Map<String, Object> result = new RegexTransformer().transformRow(src,\n            context);\n    Assert.assertEquals(\"D''souza\", result.get(\"name\"));\n  }\n\n","sourceOld":"  @Test\n  public void replaceWith() {\n    List<Map<String, String>> fields = new ArrayList<Map<String, String>>();\n    // <field column=\"name\" regexp=\"'\" replaceWith=\"''\" />\n    Map<String, String> fld = getField(\"name\", \"string\", \"'\", null, null);\n    fld.put(REPLACE_WITH, \"''\");\n    fields.add(fld);\n    Context context = AbstractDataImportHandlerTest.getContext(null, null,\n            null, Context.FULL_DUMP, fields, null);\n\n    Map<String, Object> src = new HashMap<String, Object>();\n    String s = \"D'souza\";\n    src.put(\"name\", s);\n\n    Map<String, Object> result = new RegexTransformer().transformRow(src,\n            context);\n    Assert.assertEquals(\"D''souza\", result.get(\"name\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"d183f54b5c7a1c64bd2935a5d5bd71091ebe4198":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"ad94625fb8d088209f46650c8097196fec67f00c":["72f7cca1d9eaf9232fb247ff10b18fb6e94d3250"],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["d183f54b5c7a1c64bd2935a5d5bd71091ebe4198"],"72f7cca1d9eaf9232fb247ff10b18fb6e94d3250":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["d183f54b5c7a1c64bd2935a5d5bd71091ebe4198"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d183f54b5c7a1c64bd2935a5d5bd71091ebe4198":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["72f7cca1d9eaf9232fb247ff10b18fb6e94d3250"],"72f7cca1d9eaf9232fb247ff10b18fb6e94d3250":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}