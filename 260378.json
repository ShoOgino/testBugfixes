{"path":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(SegmentInfo,FieldInfos,Directory,FieldData[]).mjava","commits":[{"id":"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","date":1412231650,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(SegmentInfo,FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(SegmentInfo si, final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = si.getCodec();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Version.LATEST, SEGMENT, 10000, false, codec, null, StringHelper.randomId());\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(SegmentInfo,FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(SegmentInfo si, final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = si.getCodec();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Version.LATEST, SEGMENT, 10000, false, codec, null, StringHelper.randomId());\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(SegmentInfo,FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(SegmentInfo,FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(SegmentInfo si, final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = si.getCodec();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    NormsProducer fakeNorms = new NormsProducer() {\n      \n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n      \n      @Override\n      public void close() throws IOException {}\n      \n      @Override\n      public NumericDocValues getNorms(FieldInfo field) throws IOException {\n        return new NumericDocValues() {\n          \n          int doc = -1;\n          \n          @Override\n          public int nextDoc() throws IOException {\n            return advance(doc + 1);\n          }\n          \n          @Override\n          public int docID() {\n            return doc;\n          }\n          \n          @Override\n          public long cost() {\n            return si.maxDoc();\n          }\n          \n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= si.maxDoc()) {\n              return doc = NO_MORE_DOCS;\n            } else {\n              return doc = target;\n            }\n          }\n          \n          @Override\n          public boolean advanceExact(int target) throws IOException {\n            doc = target;\n            return true;\n          }\n          \n          @Override\n          public long longValue() throws IOException {\n            return 1;\n          }\n        };\n      }\n      \n      @Override\n      public void checkIntegrity() throws IOException {}\n    };\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields), fakeNorms);\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","sourceOld":"  private void write(SegmentInfo si, final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = si.getCodec();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f382b2e9f4ca7dbe98e2f15da70983ecfc02b171"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["622a708571e534680618b3c5e0c28ac539a47776"]},"commit2Childs":{"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["622a708571e534680618b3c5e0c28ac539a47776"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","9bb9a29a5e71a90295f175df8919802993142c9a"],"622a708571e534680618b3c5e0c28ac539a47776":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}