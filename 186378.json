{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.Session#addClausesForCollection(Policy,List[Clause],ClusterStateProvider,String).mjava","commits":[{"id":"e5028c6838e2e49cb9da1cf70269851c049f107a","date":1584984100,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.Session#addClausesForCollection(Policy,List[Clause],ClusterStateProvider,String).mjava","pathOld":"/dev/null","sourceNew":"    public static void addClausesForCollection(Policy policy, List<Clause> clauses, ClusterStateProvider stateProvider, String c) {\n      String p = stateProvider.getPolicyNameByCollection(c);\n      if (p != null) {\n        List<Clause> perCollPolicy = policy.getPolicies().get(p);\n        if (perCollPolicy == null) {\n          return;\n        }\n      }\n      clauses.addAll(mergePolicies(c, policy.getPolicies().getOrDefault(p, emptyList()), policy.getClusterPolicy()));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7b0249ced9c25c3b173d20c3ca74160b9eade78c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7b0249ced9c25c3b173d20c3ca74160b9eade78c","date":1591787635,"type":3,"author":"murblanc","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.Session#addClausesForCollection(Policy,List[Clause],ClusterStateProvider,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.Session#addClausesForCollection(Policy,List[Clause],ClusterStateProvider,String).mjava","sourceNew":"    public static void addClausesForCollection(Policy policy, List<Clause> clauses, ClusterStateProvider stateProvider, String collectionName) {\n      String p = stateProvider.getPolicyNameByCollection(collectionName);\n      if (p != null) {\n        List<Clause> perCollPolicy = policy.getPolicies().get(p);\n        if (perCollPolicy == null) {\n          return;\n        }\n      }\n      clauses.addAll(mergePolicies(collectionName, policy.getPolicies().getOrDefault(p, emptyList()), policy.getClusterPolicy()));\n    }\n\n","sourceOld":"    public static void addClausesForCollection(Policy policy, List<Clause> clauses, ClusterStateProvider stateProvider, String c) {\n      String p = stateProvider.getPolicyNameByCollection(c);\n      if (p != null) {\n        List<Clause> perCollPolicy = policy.getPolicies().get(p);\n        if (perCollPolicy == null) {\n          return;\n        }\n      }\n      clauses.addAll(mergePolicies(c, policy.getPolicies().getOrDefault(p, emptyList()), policy.getClusterPolicy()));\n    }\n\n","bugFix":["e5028c6838e2e49cb9da1cf70269851c049f107a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.Session#addClausesForCollection(Policy,List[Clause],ClusterStateProvider,String).mjava","sourceNew":null,"sourceOld":"    public static void addClausesForCollection(Policy policy, List<Clause> clauses, ClusterStateProvider stateProvider, String collectionName) {\n      String p = stateProvider.getPolicyNameByCollection(collectionName);\n      if (p != null) {\n        List<Clause> perCollPolicy = policy.getPolicies().get(p);\n        if (perCollPolicy == null) {\n          return;\n        }\n      }\n      clauses.addAll(mergePolicies(collectionName, policy.getPolicies().getOrDefault(p, emptyList()), policy.getClusterPolicy()));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["7b0249ced9c25c3b173d20c3ca74160b9eade78c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b0249ced9c25c3b173d20c3ca74160b9eade78c":["e5028c6838e2e49cb9da1cf70269851c049f107a"],"e5028c6838e2e49cb9da1cf70269851c049f107a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e5028c6838e2e49cb9da1cf70269851c049f107a"],"7b0249ced9c25c3b173d20c3ca74160b9eade78c":["3f504512a03d978990cbff30db0522b354e846db"],"e5028c6838e2e49cb9da1cf70269851c049f107a":["7b0249ced9c25c3b173d20c3ca74160b9eade78c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}