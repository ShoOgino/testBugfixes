{"path":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\");\n      cache.getFloats(reader, \"theDouble\");\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\");\n      cache.getFloats(reader, \"theDouble\");\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"382fe3a6ca9745891afebda9b9a57cc158305545","date":1320952430,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\");\n      cache.getFloats(reader, \"theDouble\");\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testInfoStream().mjava","sourceNew":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","sourceOld":"  public void testInfoStream() throws Exception {\n    try {\n      FieldCache cache = FieldCache.DEFAULT;\n      ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n      cache.setInfoStream(new PrintStream(bos));\n      cache.getDoubles(reader, \"theDouble\", false);\n      cache.getFloats(reader, \"theDouble\", false);\n      assertTrue(bos.toString().indexOf(\"WARNING\") != -1);\n    } finally {\n      FieldCache.DEFAULT.purgeAllCaches();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["382fe3a6ca9745891afebda9b9a57cc158305545"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"382fe3a6ca9745891afebda9b9a57cc158305545":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"382fe3a6ca9745891afebda9b9a57cc158305545":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["382fe3a6ca9745891afebda9b9a57cc158305545"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}