{"path":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(String,String,Map[String,String],Node).mjava","commits":[{"id":"a4cc0532e82274748c1910318b92089c5604e48a","date":1183443010,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(String,String,Map[String,String],Node).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param name - The registered name\n   * @param className - class name for requested plugin\n   * @param params - the parameters specified in the XML\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( String name, String className, Map<String,String> params, Node node ) throws Exception\n  {\n    return (T) Config.newInstance( className, getDefaultPackages() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"110bbd9ae9f8b3ce3aa98c0c3e12de621c76ed78","date":1183449681,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(String,String,Map[String,String],Node).mjava","pathOld":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(String,String,Map[String,String],Node).mjava","sourceNew":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\" arg1=\"val1\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param params - the parameters specified in the XML.  In the example above,\n   * this would be a map containing [name=name1, class=solr.ClassName, arg1=val1]\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( String name, String className, Map<String,String> params, Node node ) throws Exception\n  {\n    return (T) Config.newInstance( className, getDefaultPackages() );\n  }\n\n","sourceOld":"  /**\n   * @param name - The registered name\n   * @param className - class name for requested plugin\n   * @param params - the parameters specified in the XML\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( String name, String className, Map<String,String> params, Node node ) throws Exception\n  {\n    return (T) Config.newInstance( className, getDefaultPackages() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29633c90dc51f05e4bbfe2e9f1991cdeee08b2d1","date":1183450581,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(String,String,Node).mjava","pathOld":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(String,String,Map[String,String],Node).mjava","sourceNew":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( String name, String className, Node node ) throws Exception\n  {\n    return (T) Config.newInstance( className, getDefaultPackages() );\n  }\n\n","sourceOld":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\" arg1=\"val1\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param params - the parameters specified in the XML.  In the example above,\n   * this would be a map containing [name=name1, class=solr.ClassName, arg1=val1]\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( String name, String className, Map<String,String> params, Node node ) throws Exception\n  {\n    return (T) Config.newInstance( className, getDefaultPackages() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29633c90dc51f05e4bbfe2e9f1991cdeee08b2d1":["110bbd9ae9f8b3ce3aa98c0c3e12de621c76ed78"],"a4cc0532e82274748c1910318b92089c5604e48a":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"110bbd9ae9f8b3ce3aa98c0c3e12de621c76ed78":["a4cc0532e82274748c1910318b92089c5604e48a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"29633c90dc51f05e4bbfe2e9f1991cdeee08b2d1":[],"a4cc0532e82274748c1910318b92089c5604e48a":["110bbd9ae9f8b3ce3aa98c0c3e12de621c76ed78"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["a4cc0532e82274748c1910318b92089c5604e48a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"110bbd9ae9f8b3ce3aa98c0c3e12de621c76ed78":["29633c90dc51f05e4bbfe2e9f1991cdeee08b2d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29633c90dc51f05e4bbfe2e9f1991cdeee08b2d1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}