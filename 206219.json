{"path":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","commits":[{"id":"16c697f6ca5cdc82f918f753317a4ac9c70d259f","date":1289840486,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      PrefixCodedTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      PrefixCodedTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      PrefixCodedTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","sourceNew":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      BlockTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","sourceOld":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      PrefixCodedTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","sourceNew":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      BlockTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","sourceOld":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      PrefixCodedTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","sourceNew":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      BlockTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","sourceOld":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      PrefixCodedTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","date":1297938719,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      BlockTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      BlockTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs.PulsingReverseTermsCodec#files(Directory,SegmentInfo,String,Set[String]).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void files(Directory dir, SegmentInfo segmentInfo, String codecId, Set<String> files) throws IOException {\n      StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n      BlockTermsReader.files(dir, segmentInfo, codecId, files);\n      FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"16c697f6ca5cdc82f918f753317a4ac9c70d259f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["e79a6d080bdd5b2a8f56342cf571b5476de04180","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"16c697f6ca5cdc82f918f753317a4ac9c70d259f":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","b1add9ddc0005b07550d4350720aac22dc9886b3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16c697f6ca5cdc82f918f753317a4ac9c70d259f","9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}