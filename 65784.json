{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","commits":[{"id":"edb8e0d6398ffb1bca995034c5b743dd96aa5622","date":1228420243,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = field.get(STRIP_HTML);\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c99c7ebf7ea844fd0848a306c3c2fa43f4fcd1a","date":1232374678,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = field.get(STRIP_HTML);\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = field.get(STRIP_HTML);\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73dfcb0f0208cdc38da92da0c7be6ed50fef55ba","date":1233903110,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    VariableResolver resolver = context.getVariableResolver();\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = resolver.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = field.get(STRIP_HTML);\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"153cc06382fdc94d0ea3db127eab860ae4310525","date":1260181667,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    VariableResolver resolver = context.getVariableResolver();\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = resolver.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object transformRow(Map<String, Object> row, Context context) {\n    List<Map<String, String>> fields = context.getAllEntityFields();\n    for (Map<String, String> field : fields) {\n      String col = field.get(DataImporter.COLUMN);\n      String splitHTML = context.replaceTokens(field.get(STRIP_HTML));\n      if (!TRUE.equals(splitHTML))\n        continue;\n      Object tmpVal = row.get(col);\n      if (tmpVal == null)\n        continue;\n\n      if (tmpVal instanceof List) {\n        List<String> inputs = (List<String>) tmpVal;\n        List results = new ArrayList();\n        for (String input : inputs) {\n          if (input == null)\n            continue;\n          Object o = stripHTML(input, col);\n          if (o != null)\n            results.add(o);\n        }\n        row.put(col, results);\n      } else {\n        String value = tmpVal.toString();\n        Object o = stripHTML(value, col);\n        if (o != null)\n          row.put(col, o);\n      }\n    }\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73dfcb0f0208cdc38da92da0c7be6ed50fef55ba":["3c99c7ebf7ea844fd0848a306c3c2fa43f4fcd1a"],"3c99c7ebf7ea844fd0848a306c3c2fa43f4fcd1a":["edb8e0d6398ffb1bca995034c5b743dd96aa5622"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"edb8e0d6398ffb1bca995034c5b743dd96aa5622":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["153cc06382fdc94d0ea3db127eab860ae4310525"],"153cc06382fdc94d0ea3db127eab860ae4310525":["73dfcb0f0208cdc38da92da0c7be6ed50fef55ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"73dfcb0f0208cdc38da92da0c7be6ed50fef55ba":["153cc06382fdc94d0ea3db127eab860ae4310525"],"3c99c7ebf7ea844fd0848a306c3c2fa43f4fcd1a":["73dfcb0f0208cdc38da92da0c7be6ed50fef55ba"],"edb8e0d6398ffb1bca995034c5b743dd96aa5622":["3c99c7ebf7ea844fd0848a306c3c2fa43f4fcd1a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["edb8e0d6398ffb1bca995034c5b743dd96aa5622"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"153cc06382fdc94d0ea3db127eab860ae4310525":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}