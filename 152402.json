{"path":"lucene/test-framework/src/java/org/apache/lucene/util/fst/FSTTester#randomAcceptedWord(FST[T],IntsRefBuilder).mjava","commits":[{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/fst/FSTTester#randomAcceptedWord(FST[T],IntsRefBuilder).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/fst/FSTTester#randomAcceptedWord(FST[T],IntsRef).mjava","sourceNew":"  private T randomAcceptedWord(FST<T> fst, IntsRefBuilder in) throws IOException {\n    FST.Arc<T> arc = fst.getFirstArc(new FST.Arc<T>());\n\n    final List<FST.Arc<T>> arcs = new ArrayList<>();\n    in.clear();\n    final T NO_OUTPUT = fst.outputs.getNoOutput();\n    T output = NO_OUTPUT;\n    final FST.BytesReader fstReader = fst.getBytesReader();\n\n    while(true) {\n      // read all arcs:\n      fst.readFirstTargetArc(arc, arc, fstReader);\n      arcs.add(new FST.Arc<T>().copyFrom(arc));\n      while(!arc.isLast()) {\n        fst.readNextArc(arc, fstReader);\n        arcs.add(new FST.Arc<T>().copyFrom(arc));\n      }\n      \n      // pick one\n      arc = arcs.get(random.nextInt(arcs.size()));\n      arcs.clear();\n\n      // accumulate output\n      output = fst.outputs.add(output, arc.output);\n\n      // append label\n      if (arc.label == FST.END_LABEL) {\n        break;\n      }\n\n      in.append(arc.label);\n    }\n\n    return output;\n  }\n\n","sourceOld":"  private T randomAcceptedWord(FST<T> fst, IntsRef in) throws IOException {\n    FST.Arc<T> arc = fst.getFirstArc(new FST.Arc<T>());\n\n    final List<FST.Arc<T>> arcs = new ArrayList<>();\n    in.length = 0;\n    in.offset = 0;\n    final T NO_OUTPUT = fst.outputs.getNoOutput();\n    T output = NO_OUTPUT;\n    final FST.BytesReader fstReader = fst.getBytesReader();\n\n    while(true) {\n      // read all arcs:\n      fst.readFirstTargetArc(arc, arc, fstReader);\n      arcs.add(new FST.Arc<T>().copyFrom(arc));\n      while(!arc.isLast()) {\n        fst.readNextArc(arc, fstReader);\n        arcs.add(new FST.Arc<T>().copyFrom(arc));\n      }\n      \n      // pick one\n      arc = arcs.get(random.nextInt(arcs.size()));\n      arcs.clear();\n\n      // accumulate output\n      output = fst.outputs.add(output, arc.output);\n\n      // append label\n      if (arc.label == FST.END_LABEL) {\n        break;\n      }\n\n      if (in.ints.length == in.length) {\n        in.grow(1+in.length);\n      }\n      in.ints[in.length++] = arc.label;\n    }\n\n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54204c8a3ca26aeafd273139fc29baf70d0f6786","date":1564170395,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/fst/FSTTester#randomAcceptedWord(FST[T],IntsRefBuilder).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/fst/FSTTester#randomAcceptedWord(FST[T],IntsRefBuilder).mjava","sourceNew":"  private T randomAcceptedWord(FST<T> fst, IntsRefBuilder in) throws IOException {\n    FST.Arc<T> arc = fst.getFirstArc(new FST.Arc<T>());\n\n    final List<FST.Arc<T>> arcs = new ArrayList<>();\n    in.clear();\n    final T NO_OUTPUT = fst.outputs.getNoOutput();\n    T output = NO_OUTPUT;\n    final FST.BytesReader fstReader = fst.getBytesReader();\n\n    while(true) {\n      // read all arcs:\n      fst.readFirstTargetArc(arc, arc, fstReader);\n      arcs.add(new FST.Arc<T>().copyFrom(arc));\n      while(!arc.isLast()) {\n        fst.readNextArc(arc, fstReader);\n        arcs.add(new FST.Arc<T>().copyFrom(arc));\n      }\n      \n      // pick one\n      arc = arcs.get(random.nextInt(arcs.size()));\n      arcs.clear();\n\n      // accumulate output\n      output = fst.outputs.add(output, arc.output());\n\n      // append label\n      if (arc.label() == FST.END_LABEL) {\n        break;\n      }\n\n      in.append(arc.label());\n    }\n\n    return output;\n  }\n\n","sourceOld":"  private T randomAcceptedWord(FST<T> fst, IntsRefBuilder in) throws IOException {\n    FST.Arc<T> arc = fst.getFirstArc(new FST.Arc<T>());\n\n    final List<FST.Arc<T>> arcs = new ArrayList<>();\n    in.clear();\n    final T NO_OUTPUT = fst.outputs.getNoOutput();\n    T output = NO_OUTPUT;\n    final FST.BytesReader fstReader = fst.getBytesReader();\n\n    while(true) {\n      // read all arcs:\n      fst.readFirstTargetArc(arc, arc, fstReader);\n      arcs.add(new FST.Arc<T>().copyFrom(arc));\n      while(!arc.isLast()) {\n        fst.readNextArc(arc, fstReader);\n        arcs.add(new FST.Arc<T>().copyFrom(arc));\n      }\n      \n      // pick one\n      arc = arcs.get(random.nextInt(arcs.size()));\n      arcs.clear();\n\n      // accumulate output\n      output = fst.outputs.add(output, arc.output);\n\n      // append label\n      if (arc.label == FST.END_LABEL) {\n        break;\n      }\n\n      in.append(arc.label);\n    }\n\n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/fst/FSTTester#randomAcceptedWord(FST[T],IntsRefBuilder).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/fst/FSTTester#randomAcceptedWord(FST[T],IntsRefBuilder).mjava","sourceNew":"  private T randomAcceptedWord(FST<T> fst, IntsRefBuilder in) throws IOException {\n    FST.Arc<T> arc = fst.getFirstArc(new FST.Arc<T>());\n\n    final List<FST.Arc<T>> arcs = new ArrayList<>();\n    in.clear();\n    final T NO_OUTPUT = fst.outputs.getNoOutput();\n    T output = NO_OUTPUT;\n    final FST.BytesReader fstReader = fst.getBytesReader();\n\n    while(true) {\n      // read all arcs:\n      fst.readFirstTargetArc(arc, arc, fstReader);\n      arcs.add(new FST.Arc<T>().copyFrom(arc));\n      while(!arc.isLast()) {\n        fst.readNextArc(arc, fstReader);\n        arcs.add(new FST.Arc<T>().copyFrom(arc));\n      }\n      \n      // pick one\n      arc = arcs.get(random.nextInt(arcs.size()));\n      arcs.clear();\n\n      // accumulate output\n      output = fst.outputs.add(output, arc.output());\n\n      // append label\n      if (arc.label() == FST.END_LABEL) {\n        break;\n      }\n\n      in.append(arc.label());\n    }\n\n    return output;\n  }\n\n","sourceOld":"  private T randomAcceptedWord(FST<T> fst, IntsRefBuilder in) throws IOException {\n    FST.Arc<T> arc = fst.getFirstArc(new FST.Arc<T>());\n\n    final List<FST.Arc<T>> arcs = new ArrayList<>();\n    in.clear();\n    final T NO_OUTPUT = fst.outputs.getNoOutput();\n    T output = NO_OUTPUT;\n    final FST.BytesReader fstReader = fst.getBytesReader();\n\n    while(true) {\n      // read all arcs:\n      fst.readFirstTargetArc(arc, arc, fstReader);\n      arcs.add(new FST.Arc<T>().copyFrom(arc));\n      while(!arc.isLast()) {\n        fst.readNextArc(arc, fstReader);\n        arcs.add(new FST.Arc<T>().copyFrom(arc));\n      }\n      \n      // pick one\n      arc = arcs.get(random.nextInt(arcs.size()));\n      arcs.clear();\n\n      // accumulate output\n      output = fst.outputs.add(output, arc.output);\n\n      // append label\n      if (arc.label == FST.END_LABEL) {\n        break;\n      }\n\n      in.append(arc.label);\n    }\n\n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8061ddd97f3352007d927dae445884a6f3d857b":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","54204c8a3ca26aeafd273139fc29baf70d0f6786"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54204c8a3ca26aeafd273139fc29baf70d0f6786"]},"commit2Childs":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["54204c8a3ca26aeafd273139fc29baf70d0f6786","f8061ddd97f3352007d927dae445884a6f3d857b"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}