{"path":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","commits":[{"id":"26db0fd7da61a97dcbf4558f4fd1ebed330bbd45","date":1425862488,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","pathOld":"/dev/null","sourceNew":"  private SimpleOrderedMap<Object> getSegmentInfo(\n      SegmentCommitInfo segmentCommitInfo) throws IOException {\n    SimpleOrderedMap<Object> segmentInfoMap = new SimpleOrderedMap<>();\n\n    segmentInfoMap.add(\"name\", segmentCommitInfo.info.name);\n    segmentInfoMap.add(\"delCount\", segmentCommitInfo.getDelCount());\n    segmentInfoMap.add(\"sizeInBytes\", segmentCommitInfo.sizeInBytes());\n    segmentInfoMap.add(\"size\", segmentCommitInfo.info.maxDoc());\n    Long timestamp = Long.parseLong(segmentCommitInfo.info.getDiagnostics()\n        .get(\"timestamp\"));\n    segmentInfoMap.add(\"age\", new Date(timestamp));\n    segmentInfoMap.add(\"source\",\n        segmentCommitInfo.info.getDiagnostics().get(\"source\"));\n\n    return segmentInfoMap;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","pathOld":"/dev/null","sourceNew":"  private SimpleOrderedMap<Object> getSegmentInfo(\n      SegmentCommitInfo segmentCommitInfo) throws IOException {\n    SimpleOrderedMap<Object> segmentInfoMap = new SimpleOrderedMap<>();\n\n    segmentInfoMap.add(\"name\", segmentCommitInfo.info.name);\n    segmentInfoMap.add(\"delCount\", segmentCommitInfo.getDelCount());\n    segmentInfoMap.add(\"sizeInBytes\", segmentCommitInfo.sizeInBytes());\n    segmentInfoMap.add(\"size\", segmentCommitInfo.info.maxDoc());\n    Long timestamp = Long.parseLong(segmentCommitInfo.info.getDiagnostics()\n        .get(\"timestamp\"));\n    segmentInfoMap.add(\"age\", new Date(timestamp));\n    segmentInfoMap.add(\"source\",\n        segmentCommitInfo.info.getDiagnostics().get(\"source\"));\n\n    return segmentInfoMap;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1390137e395d2f07f9ba5b8c43d293befe84d563","date":1427947685,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","sourceNew":"  private SimpleOrderedMap<Object> getSegmentInfo(\n      SegmentCommitInfo segmentCommitInfo) throws IOException {\n    SimpleOrderedMap<Object> segmentInfoMap = new SimpleOrderedMap<>();\n\n    segmentInfoMap.add(NAME, segmentCommitInfo.info.name);\n    segmentInfoMap.add(\"delCount\", segmentCommitInfo.getDelCount());\n    segmentInfoMap.add(\"sizeInBytes\", segmentCommitInfo.sizeInBytes());\n    segmentInfoMap.add(\"size\", segmentCommitInfo.info.maxDoc());\n    Long timestamp = Long.parseLong(segmentCommitInfo.info.getDiagnostics()\n        .get(\"timestamp\"));\n    segmentInfoMap.add(\"age\", new Date(timestamp));\n    segmentInfoMap.add(\"source\",\n        segmentCommitInfo.info.getDiagnostics().get(\"source\"));\n\n    return segmentInfoMap;\n  }\n\n","sourceOld":"  private SimpleOrderedMap<Object> getSegmentInfo(\n      SegmentCommitInfo segmentCommitInfo) throws IOException {\n    SimpleOrderedMap<Object> segmentInfoMap = new SimpleOrderedMap<>();\n\n    segmentInfoMap.add(\"name\", segmentCommitInfo.info.name);\n    segmentInfoMap.add(\"delCount\", segmentCommitInfo.getDelCount());\n    segmentInfoMap.add(\"sizeInBytes\", segmentCommitInfo.sizeInBytes());\n    segmentInfoMap.add(\"size\", segmentCommitInfo.info.maxDoc());\n    Long timestamp = Long.parseLong(segmentCommitInfo.info.getDiagnostics()\n        .get(\"timestamp\"));\n    segmentInfoMap.add(\"age\", new Date(timestamp));\n    segmentInfoMap.add(\"source\",\n        segmentCommitInfo.info.getDiagnostics().get(\"source\"));\n\n    return segmentInfoMap;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","sourceNew":"  private SimpleOrderedMap<Object> getSegmentInfo(\n      SegmentCommitInfo segmentCommitInfo) throws IOException {\n    SimpleOrderedMap<Object> segmentInfoMap = new SimpleOrderedMap<>();\n\n    segmentInfoMap.add(NAME, segmentCommitInfo.info.name);\n    segmentInfoMap.add(\"delCount\", segmentCommitInfo.getDelCount());\n    segmentInfoMap.add(\"sizeInBytes\", segmentCommitInfo.sizeInBytes());\n    segmentInfoMap.add(\"size\", segmentCommitInfo.info.maxDoc());\n    Long timestamp = Long.parseLong(segmentCommitInfo.info.getDiagnostics()\n        .get(\"timestamp\"));\n    segmentInfoMap.add(\"age\", new Date(timestamp));\n    segmentInfoMap.add(\"source\",\n        segmentCommitInfo.info.getDiagnostics().get(\"source\"));\n\n    return segmentInfoMap;\n  }\n\n","sourceOld":"  private SimpleOrderedMap<Object> getSegmentInfo(\n      SegmentCommitInfo segmentCommitInfo) throws IOException {\n    SimpleOrderedMap<Object> segmentInfoMap = new SimpleOrderedMap<>();\n\n    segmentInfoMap.add(\"name\", segmentCommitInfo.info.name);\n    segmentInfoMap.add(\"delCount\", segmentCommitInfo.getDelCount());\n    segmentInfoMap.add(\"sizeInBytes\", segmentCommitInfo.sizeInBytes());\n    segmentInfoMap.add(\"size\", segmentCommitInfo.info.maxDoc());\n    Long timestamp = Long.parseLong(segmentCommitInfo.info.getDiagnostics()\n        .get(\"timestamp\"));\n    segmentInfoMap.add(\"age\", new Date(timestamp));\n    segmentInfoMap.add(\"source\",\n        segmentCommitInfo.info.getDiagnostics().get(\"source\"));\n\n    return segmentInfoMap;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67b008414df14724ab7e4788787d28c65a1ac59e","date":1482345687,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","sourceNew":"  private SimpleOrderedMap<Object> getSegmentInfo(\n      SegmentCommitInfo segmentCommitInfo) throws IOException {\n    SimpleOrderedMap<Object> segmentInfoMap = new SimpleOrderedMap<>();\n\n    segmentInfoMap.add(NAME, segmentCommitInfo.info.name);\n    segmentInfoMap.add(\"delCount\", segmentCommitInfo.getDelCount());\n    segmentInfoMap.add(\"sizeInBytes\", segmentCommitInfo.sizeInBytes());\n    segmentInfoMap.add(\"size\", segmentCommitInfo.info.maxDoc());\n    Long timestamp = Long.parseLong(segmentCommitInfo.info.getDiagnostics()\n        .get(\"timestamp\"));\n    segmentInfoMap.add(\"age\", new Date(timestamp));\n    segmentInfoMap.add(\"source\",\n        segmentCommitInfo.info.getDiagnostics().get(\"source\"));\n    segmentInfoMap.add(\"version\", segmentCommitInfo.info.getVersion().toString());\n\n    return segmentInfoMap;\n  }\n\n","sourceOld":"  private SimpleOrderedMap<Object> getSegmentInfo(\n      SegmentCommitInfo segmentCommitInfo) throws IOException {\n    SimpleOrderedMap<Object> segmentInfoMap = new SimpleOrderedMap<>();\n\n    segmentInfoMap.add(NAME, segmentCommitInfo.info.name);\n    segmentInfoMap.add(\"delCount\", segmentCommitInfo.getDelCount());\n    segmentInfoMap.add(\"sizeInBytes\", segmentCommitInfo.sizeInBytes());\n    segmentInfoMap.add(\"size\", segmentCommitInfo.info.maxDoc());\n    Long timestamp = Long.parseLong(segmentCommitInfo.info.getDiagnostics()\n        .get(\"timestamp\"));\n    segmentInfoMap.add(\"age\", new Date(timestamp));\n    segmentInfoMap.add(\"source\",\n        segmentCommitInfo.info.getDiagnostics().get(\"source\"));\n\n    return segmentInfoMap;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","sourceNew":"  private SimpleOrderedMap<Object> getSegmentInfo(\n      SegmentCommitInfo segmentCommitInfo) throws IOException {\n    SimpleOrderedMap<Object> segmentInfoMap = new SimpleOrderedMap<>();\n\n    segmentInfoMap.add(NAME, segmentCommitInfo.info.name);\n    segmentInfoMap.add(\"delCount\", segmentCommitInfo.getDelCount());\n    segmentInfoMap.add(\"sizeInBytes\", segmentCommitInfo.sizeInBytes());\n    segmentInfoMap.add(\"size\", segmentCommitInfo.info.maxDoc());\n    Long timestamp = Long.parseLong(segmentCommitInfo.info.getDiagnostics()\n        .get(\"timestamp\"));\n    segmentInfoMap.add(\"age\", new Date(timestamp));\n    segmentInfoMap.add(\"source\",\n        segmentCommitInfo.info.getDiagnostics().get(\"source\"));\n    segmentInfoMap.add(\"version\", segmentCommitInfo.info.getVersion().toString());\n\n    return segmentInfoMap;\n  }\n\n","sourceOld":"  private SimpleOrderedMap<Object> getSegmentInfo(\n      SegmentCommitInfo segmentCommitInfo) throws IOException {\n    SimpleOrderedMap<Object> segmentInfoMap = new SimpleOrderedMap<>();\n\n    segmentInfoMap.add(NAME, segmentCommitInfo.info.name);\n    segmentInfoMap.add(\"delCount\", segmentCommitInfo.getDelCount());\n    segmentInfoMap.add(\"sizeInBytes\", segmentCommitInfo.sizeInBytes());\n    segmentInfoMap.add(\"size\", segmentCommitInfo.info.maxDoc());\n    Long timestamp = Long.parseLong(segmentCommitInfo.info.getDiagnostics()\n        .get(\"timestamp\"));\n    segmentInfoMap.add(\"age\", new Date(timestamp));\n    segmentInfoMap.add(\"source\",\n        segmentCommitInfo.info.getDiagnostics().get(\"source\"));\n\n    return segmentInfoMap;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3470ed04f0378c1ceb02e540e3296dd27c0ae3d5","date":1552136881,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SegmentsInfoRequestHandler#getSegmentInfo(SegmentCommitInfo).mjava","sourceNew":null,"sourceOld":"  private SimpleOrderedMap<Object> getSegmentInfo(\n      SegmentCommitInfo segmentCommitInfo) throws IOException {\n    SimpleOrderedMap<Object> segmentInfoMap = new SimpleOrderedMap<>();\n\n    segmentInfoMap.add(NAME, segmentCommitInfo.info.name);\n    segmentInfoMap.add(\"delCount\", segmentCommitInfo.getDelCount());\n    segmentInfoMap.add(\"sizeInBytes\", segmentCommitInfo.sizeInBytes());\n    segmentInfoMap.add(\"size\", segmentCommitInfo.info.maxDoc());\n    Long timestamp = Long.parseLong(segmentCommitInfo.info.getDiagnostics()\n        .get(\"timestamp\"));\n    segmentInfoMap.add(\"age\", new Date(timestamp));\n    segmentInfoMap.add(\"source\",\n        segmentCommitInfo.info.getDiagnostics().get(\"source\"));\n    segmentInfoMap.add(\"version\", segmentCommitInfo.info.getVersion().toString());\n\n    return segmentInfoMap;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","26db0fd7da61a97dcbf4558f4fd1ebed330bbd45"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["26db0fd7da61a97dcbf4558f4fd1ebed330bbd45"],"67b008414df14724ab7e4788787d28c65a1ac59e":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1390137e395d2f07f9ba5b8c43d293befe84d563"],"3470ed04f0378c1ceb02e540e3296dd27c0ae3d5":["67b008414df14724ab7e4788787d28c65a1ac59e"],"26db0fd7da61a97dcbf4558f4fd1ebed330bbd45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3470ed04f0378c1ceb02e540e3296dd27c0ae3d5"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["1390137e395d2f07f9ba5b8c43d293befe84d563","67b008414df14724ab7e4788787d28c65a1ac59e"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d2638f781be724518ff6c2263d14a48cf6e68017"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["67b008414df14724ab7e4788787d28c65a1ac59e","d2638f781be724518ff6c2263d14a48cf6e68017","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","26db0fd7da61a97dcbf4558f4fd1ebed330bbd45"],"67b008414df14724ab7e4788787d28c65a1ac59e":["3470ed04f0378c1ceb02e540e3296dd27c0ae3d5","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"3470ed04f0378c1ceb02e540e3296dd27c0ae3d5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"26db0fd7da61a97dcbf4558f4fd1ebed330bbd45":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1390137e395d2f07f9ba5b8c43d293befe84d563"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}