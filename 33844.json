{"path":"solr/core/src/java/org/apache/solr/security/AuditLoggerPlugin.JSONAuditEventFormatter#formatEvent(AuditEvent).mjava","commits":[{"id":"12ddd922ea96c1d0ea68a68506b6984a246cfb22","date":1554385731,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/AuditLoggerPlugin.JSONAuditEventFormatter#formatEvent(AuditEvent).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Formats an audit event as a JSON string\n     */\n    @Override\n    public String formatEvent(AuditEvent event) {\n      ObjectMapper mapper = new ObjectMapper();\n      mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);\n      mapper.setSerializationInclusion(Include.NON_NULL);\n      try {\n        StringWriter sw = new StringWriter();\n        mapper.writeValue(sw, event);\n        return sw.toString();\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error converting Event to JSON\", e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b130087f06a551e296360e0bf16b441e13c857e8","date":1577724032,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/AuditLoggerPlugin.JSONAuditEventFormatter#formatEvent(AuditEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/AuditLoggerPlugin.JSONAuditEventFormatter#formatEvent(AuditEvent).mjava","sourceNew":"    /**\n     * Formats an audit event as a JSON string\n     */\n    @Override\n    public String formatEvent(AuditEvent event) {\n      try {\n        StringWriter sw = new StringWriter();\n        mapper.writeValue(sw, event);\n        return sw.toString();\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error converting Event to JSON\", e);\n      }\n    }\n\n","sourceOld":"    /**\n     * Formats an audit event as a JSON string\n     */\n    @Override\n    public String formatEvent(AuditEvent event) {\n      ObjectMapper mapper = new ObjectMapper();\n      mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);\n      mapper.setSerializationInclusion(Include.NON_NULL);\n      try {\n        StringWriter sw = new StringWriter();\n        mapper.writeValue(sw, event);\n        return sw.toString();\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error converting Event to JSON\", e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e478fa10594a2ef9d1ddf7d195020300453c4e","date":1577783287,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/AuditLoggerPlugin.JSONAuditEventFormatter#formatEvent(AuditEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/AuditLoggerPlugin.JSONAuditEventFormatter#formatEvent(AuditEvent).mjava","sourceNew":"    /**\n     * Formats an audit event as a JSON string\n     */\n    @Override\n    public String formatEvent(AuditEvent event) {\n      try {\n        StringWriter sw = new StringWriter();\n        mapper.writeValue(sw, event);\n        return sw.toString();\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error converting Event to JSON\", e);\n      }\n    }\n\n","sourceOld":"    /**\n     * Formats an audit event as a JSON string\n     */\n    @Override\n    public String formatEvent(AuditEvent event) {\n      ObjectMapper mapper = new ObjectMapper();\n      mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);\n      mapper.setSerializationInclusion(Include.NON_NULL);\n      try {\n        StringWriter sw = new StringWriter();\n        mapper.writeValue(sw, event);\n        return sw.toString();\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error converting Event to JSON\", e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"62e478fa10594a2ef9d1ddf7d195020300453c4e":["12ddd922ea96c1d0ea68a68506b6984a246cfb22","b130087f06a551e296360e0bf16b441e13c857e8"],"b130087f06a551e296360e0bf16b441e13c857e8":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b130087f06a551e296360e0bf16b441e13c857e8"]},"commit2Childs":{"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["62e478fa10594a2ef9d1ddf7d195020300453c4e","b130087f06a551e296360e0bf16b441e13c857e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"62e478fa10594a2ef9d1ddf7d195020300453c4e":[],"b130087f06a551e296360e0bf16b441e13c857e8":["62e478fa10594a2ef9d1ddf7d195020300453c4e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["62e478fa10594a2ef9d1ddf7d195020300453c4e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}