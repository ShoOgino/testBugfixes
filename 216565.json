{"path":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","commits":[{"id":"fd4c4b2a55a46d2c45e3de4514f08e33215caa21","date":1288902330,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = new MockDirectoryWrapper(new RAMDirectory());\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.commit();\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = new MockDirectoryWrapper(new RAMDirectory());\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.commit();\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = new MockDirectoryWrapper(new RAMDirectory());\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.commit();\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = new MockDirectoryWrapper(new RAMDirectory());\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.commit();\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53a31399f2471493d67b19a95c028a74e0113b6a","date":1289817072,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = new MockDirectoryWrapper(random, new RAMDirectory());\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.commit();\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = new MockDirectoryWrapper(new RAMDirectory());\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.commit();\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = new MockDirectoryWrapper(random, new RAMDirectory());\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.commit();\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = new MockDirectoryWrapper(new RAMDirectory());\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.commit();\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e1cbd7e289dc1243c7a59e1a83d078163a147fe","date":1292268032,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = new MockDirectoryWrapper(random, new RAMDirectory());\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.commit();\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = new MockDirectoryWrapper(random, new RAMDirectory());\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.commit();\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"/dev/null","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n\n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.setInfoStream(VERBOSE ? System.out : null);\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.RunAddIndexesThreads#RunAddIndexesThreads(int).mjava","sourceNew":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir);\n    }\n\n","sourceOld":"    public RunAddIndexesThreads(int numCopy) throws Throwable {\n      NUM_COPY = numCopy;\n      dir = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++)\n        addDoc(writer);\n      writer.close();\n\n      dir2 = newDirectory();\n      writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      writer2.commit();\n      \n\n      readers = new IndexReader[NUM_COPY];\n      for(int i=0;i<NUM_COPY;i++)\n        readers[i] = IndexReader.open(dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["85a883878c0af761245ab048babc63d099f835f3","53a31399f2471493d67b19a95c028a74e0113b6a"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["06584e6e98d592b34e1329b384182f368d2025e8","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"06584e6e98d592b34e1329b384182f368d2025e8":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["06584e6e98d592b34e1329b384182f368d2025e8"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"53a31399f2471493d67b19a95c028a74e0113b6a":["fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"a3776dccca01c11e7046323cfad46a3b4a471233":["7e1cbd7e289dc1243c7a59e1a83d078163a147fe","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["06584e6e98d592b34e1329b384182f368d2025e8","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"7e1cbd7e289dc1243c7a59e1a83d078163a147fe":["53a31399f2471493d67b19a95c028a74e0113b6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"06584e6e98d592b34e1329b384182f368d2025e8":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85a883878c0af761245ab048babc63d099f835f3":["9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"53a31399f2471493d67b19a95c028a74e0113b6a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["06584e6e98d592b34e1329b384182f368d2025e8","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["85a883878c0af761245ab048babc63d099f835f3","53a31399f2471493d67b19a95c028a74e0113b6a"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7e1cbd7e289dc1243c7a59e1a83d078163a147fe":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}