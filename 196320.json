{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailAnalyzer#testNoSchemeURLs().mjava","commits":[{"id":"642482b1894f655a5d50337c3b96950676d054da","date":1389338004,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailAnalyzer#testNoSchemeURLs().mjava","pathOld":"/dev/null","sourceNew":"  public void testNoSchemeURLs() throws Exception {\n    // \".ph\" is a Top Level Domain\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"<index.ph>\", new String[]{\"index.ph\"}, new String[]{\"<URL>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.ph\", new String[]{\"index.ph\"}, new String[]{\"<URL>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.php\", new String[]{\"index.php\"}, new String[]{\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.phα\", new String[]{\"index.phα\"}, new String[]{\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index-h.php\", new String[] { \"index\",     \"h.php\" },\n                           new String[] { \"<ALPHANUM>\",\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index2.php\", new String[] { \"index2\",     \"php\" },\n                          new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index2.ph９,\", new String[] { \"index2\",     \"ph９\" },\n                            new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com,example.ph,index.php,index2.php,example2.ph\",\n            new String[] { \"example.com\", \"example.ph\", \"index.php\",  \"index2\",     \"php\",        \"example2.ph\" },\n            new String[] { \"<URL>\",       \"<URL>\",      \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080 example.com/path/here example.com?query=something example.com#fragment\",\n            new String[] { \"example.com:8080\", \"example.com/path/here\", \"example.com?query=something\", \"example.com#fragment\" },\n            new String[] { \"<URL>\",            \"<URL>\",                 \"<URL>\",                       \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here?query=something#fragment\", \n            new String[] { \"example.com:8080/path/here?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here?query=something\",\n            new String[] { \"example.com:8080/path/here?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here#fragment\",\n            new String[] { \"example.com:8080/path/here#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here\",\n            new String[] { \"example.com:8080/path/here\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080?query=something#fragment\",\n            new String[] { \"example.com:8080?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080?query=something\",\n            new String[] { \"example.com:8080?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080#fragment\",\n            new String[] { \"example.com:8080#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here?query=something#fragment\",\n            new String[] { \"example.com/path/here?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here?query=something\",\n            new String[] { \"example.com/path/here?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here#fragment\",\n            new String[] { \"example.com/path/here#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com?query=something#fragment\",\n            new String[] { \"example.com?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91a5e37a1dee5ad8d3fe6d55228839d5d0412999","date":1412798723,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailAnalyzer#testNoSchemeURLs().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailAnalyzer#testNoSchemeURLs().mjava","sourceNew":"  public void testNoSchemeURLs() throws Exception {\n    // \".ph\" is a Top Level Domain\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"<index.ph>\", new String[]{\"index.ph\"}, new String[]{\"<URL>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.ph\", new String[]{\"index.ph\"}, new String[]{\"<URL>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.php\", new String[]{\"index.php\"}, new String[]{\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.phα\", new String[]{\"index.phα\"}, new String[]{\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index-h.php\", new String[] { \"index\",     \"h.php\" },\n                           new String[] { \"<ALPHANUM>\",\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index2.php\", new String[] { \"index2\",     \"php\" },\n                          new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index2.ph９,\", new String[] { \"index2\",     \"ph９\" },\n                            new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com,example.ph,index.php,index2.php,example2.ph\",\n            new String[] { \"example.com\", \"example.ph\", \"index.php\",  \"index2\",     \"php\",        \"example2.ph\" },\n            new String[] { \"<URL>\",       \"<URL>\",      \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080 example.com/path/here example.com?query=something example.com#fragment\",\n            new String[] { \"example.com:8080\", \"example.com/path/here\", \"example.com?query=something\", \"example.com#fragment\" },\n            new String[] { \"<URL>\",            \"<URL>\",                 \"<URL>\",                       \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here?query=something#fragment\", \n            new String[] { \"example.com:8080/path/here?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here?query=something\",\n            new String[] { \"example.com:8080/path/here?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here#fragment\",\n            new String[] { \"example.com:8080/path/here#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here\",\n            new String[] { \"example.com:8080/path/here\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080?query=something#fragment\",\n            new String[] { \"example.com:8080?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080?query=something\",\n            new String[] { \"example.com:8080?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080#fragment\",\n            new String[] { \"example.com:8080#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here?query=something#fragment\",\n            new String[] { \"example.com/path/here?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here?query=something\",\n            new String[] { \"example.com/path/here?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here#fragment\",\n            new String[] { \"example.com/path/here#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com?query=something#fragment\",\n            new String[] { \"example.com?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n  }\n\n","sourceOld":"  public void testNoSchemeURLs() throws Exception {\n    // \".ph\" is a Top Level Domain\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"<index.ph>\", new String[]{\"index.ph\"}, new String[]{\"<URL>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.ph\", new String[]{\"index.ph\"}, new String[]{\"<URL>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.php\", new String[]{\"index.php\"}, new String[]{\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.phα\", new String[]{\"index.phα\"}, new String[]{\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index-h.php\", new String[] { \"index\",     \"h.php\" },\n                           new String[] { \"<ALPHANUM>\",\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index2.php\", new String[] { \"index2\",     \"php\" },\n                          new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index2.ph９,\", new String[] { \"index2\",     \"ph９\" },\n                            new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com,example.ph,index.php,index2.php,example2.ph\",\n            new String[] { \"example.com\", \"example.ph\", \"index.php\",  \"index2\",     \"php\",        \"example2.ph\" },\n            new String[] { \"<URL>\",       \"<URL>\",      \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080 example.com/path/here example.com?query=something example.com#fragment\",\n            new String[] { \"example.com:8080\", \"example.com/path/here\", \"example.com?query=something\", \"example.com#fragment\" },\n            new String[] { \"<URL>\",            \"<URL>\",                 \"<URL>\",                       \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here?query=something#fragment\", \n            new String[] { \"example.com:8080/path/here?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here?query=something\",\n            new String[] { \"example.com:8080/path/here?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here#fragment\",\n            new String[] { \"example.com:8080/path/here#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here\",\n            new String[] { \"example.com:8080/path/here\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080?query=something#fragment\",\n            new String[] { \"example.com:8080?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080?query=something\",\n            new String[] { \"example.com:8080?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080#fragment\",\n            new String[] { \"example.com:8080#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here?query=something#fragment\",\n            new String[] { \"example.com/path/here?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here?query=something\",\n            new String[] { \"example.com/path/here?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here#fragment\",\n            new String[] { \"example.com/path/here#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com?query=something#fragment\",\n            new String[] { \"example.com?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailAnalyzer#testNoSchemeURLs().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailAnalyzer#testNoSchemeURLs().mjava","sourceNew":"  public void testNoSchemeURLs() throws Exception {\n    // \".ph\" is a Top Level Domain\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"<index.ph>\", new String[]{\"index.ph\"}, new String[]{\"<URL>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.ph\", new String[]{\"index.ph\"}, new String[]{\"<URL>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.php\", new String[]{\"index.php\"}, new String[]{\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.phα\", new String[]{\"index.phα\"}, new String[]{\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index-h.php\", new String[] { \"index\",     \"h.php\" },\n                           new String[] { \"<ALPHANUM>\",\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index2.php\", new String[] { \"index2\",     \"php\" },\n                          new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index2.ph９,\", new String[] { \"index2\",     \"ph９\" },\n                            new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com,example.ph,index.php,index2.php,example2.ph\",\n            new String[] { \"example.com\", \"example.ph\", \"index.php\",  \"index2\",     \"php\",        \"example2.ph\" },\n            new String[] { \"<URL>\",       \"<URL>\",      \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080 example.com/path/here example.com?query=something example.com#fragment\",\n            new String[] { \"example.com:8080\", \"example.com/path/here\", \"example.com?query=something\", \"example.com#fragment\" },\n            new String[] { \"<URL>\",            \"<URL>\",                 \"<URL>\",                       \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here?query=something#fragment\", \n            new String[] { \"example.com:8080/path/here?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here?query=something\",\n            new String[] { \"example.com:8080/path/here?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here#fragment\",\n            new String[] { \"example.com:8080/path/here#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here\",\n            new String[] { \"example.com:8080/path/here\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080?query=something#fragment\",\n            new String[] { \"example.com:8080?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080?query=something\",\n            new String[] { \"example.com:8080?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080#fragment\",\n            new String[] { \"example.com:8080#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here?query=something#fragment\",\n            new String[] { \"example.com/path/here?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here?query=something\",\n            new String[] { \"example.com/path/here?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here#fragment\",\n            new String[] { \"example.com/path/here#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com?query=something#fragment\",\n            new String[] { \"example.com?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n  }\n\n","sourceOld":"  public void testNoSchemeURLs() throws Exception {\n    // \".ph\" is a Top Level Domain\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"<index.ph>\", new String[]{\"index.ph\"}, new String[]{\"<URL>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.ph\", new String[]{\"index.ph\"}, new String[]{\"<URL>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.php\", new String[]{\"index.php\"}, new String[]{\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index.phα\", new String[]{\"index.phα\"}, new String[]{\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index-h.php\", new String[] { \"index\",     \"h.php\" },\n                           new String[] { \"<ALPHANUM>\",\"<ALPHANUM>\"});\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index2.php\", new String[] { \"index2\",     \"php\" },\n                          new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"index2.ph９,\", new String[] { \"index2\",     \"ph９\" },\n                            new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com,example.ph,index.php,index2.php,example2.ph\",\n            new String[] { \"example.com\", \"example.ph\", \"index.php\",  \"index2\",     \"php\",        \"example2.ph\" },\n            new String[] { \"<URL>\",       \"<URL>\",      \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080 example.com/path/here example.com?query=something example.com#fragment\",\n            new String[] { \"example.com:8080\", \"example.com/path/here\", \"example.com?query=something\", \"example.com#fragment\" },\n            new String[] { \"<URL>\",            \"<URL>\",                 \"<URL>\",                       \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here?query=something#fragment\", \n            new String[] { \"example.com:8080/path/here?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here?query=something\",\n            new String[] { \"example.com:8080/path/here?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here#fragment\",\n            new String[] { \"example.com:8080/path/here#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080/path/here\",\n            new String[] { \"example.com:8080/path/here\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080?query=something#fragment\",\n            new String[] { \"example.com:8080?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080?query=something\",\n            new String[] { \"example.com:8080?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com:8080#fragment\",\n            new String[] { \"example.com:8080#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here?query=something#fragment\",\n            new String[] { \"example.com/path/here?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here?query=something\",\n            new String[] { \"example.com/path/here?query=something\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com/path/here#fragment\",\n            new String[] { \"example.com/path/here#fragment\" },\n            new String[] { \"<URL>\" });\n\n    BaseTokenStreamTestCase.assertAnalyzesTo\n        (a, \"example.com?query=something#fragment\",\n            new String[] { \"example.com?query=something#fragment\" },\n            new String[] { \"<URL>\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55980207f1977bd1463465de1659b821347e2fa8":["642482b1894f655a5d50337c3b96950676d054da","91a5e37a1dee5ad8d3fe6d55228839d5d0412999"],"91a5e37a1dee5ad8d3fe6d55228839d5d0412999":["642482b1894f655a5d50337c3b96950676d054da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"642482b1894f655a5d50337c3b96950676d054da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91a5e37a1dee5ad8d3fe6d55228839d5d0412999"]},"commit2Childs":{"55980207f1977bd1463465de1659b821347e2fa8":[],"91a5e37a1dee5ad8d3fe6d55228839d5d0412999":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["642482b1894f655a5d50337c3b96950676d054da"],"642482b1894f655a5d50337c3b96950676d054da":["55980207f1977bd1463465de1659b821347e2fa8","91a5e37a1dee5ad8d3fe6d55228839d5d0412999"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}