{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/ShufflingReplicaListTransformerTest#testTransformReplicas().mjava","commits":[{"id":"833432c363468a5df50f87446a68015404b1fbcf","date":1572302961,"type":1,"author":"Houston Putman","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/ShufflingReplicaListTransformerTest#testTransformReplicas().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/ShufflingReplicaListTransformerTest#testTransformReplicas().mjava","sourceNew":"  @Test\n  public void testTransformReplicas() throws Exception {\n    final List<Replica> replicas = new ArrayList<>();\n    for (final String url : createRandomUrls()) {\n      replicas.add(new Replica(url, new HashMap<String,Object>()));\n    }\n    implTestTransform(replicas);\n  }\n\n","sourceOld":"  @Test\n  public void testTransformReplicas() throws Exception {\n    final List<Replica> replicas = new ArrayList<>();\n    for (final String url : createRandomUrls()) {\n      replicas.add(new Replica(url, new HashMap<String,Object>()));\n    }\n    implTestTransform(replicas);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6681d02f2302c363be938426e68f8dfd090cc1bf","date":1575339019,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/ShufflingReplicaListTransformerTest#testTransformReplicas().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/ShufflingReplicaListTransformerTest#testTransformReplicas().mjava","sourceNew":"  @Test\n  public void testTransformReplicas() throws Exception {\n    final List<Replica> replicas = new ArrayList<>();\n    for (final String url : createRandomUrls()) {\n      replicas.add(new Replica(url, new HashMap<String,Object>(),\"c1\",\"s1\"));\n    }\n    implTestTransform(replicas);\n  }\n\n","sourceOld":"  @Test\n  public void testTransformReplicas() throws Exception {\n    final List<Replica> replicas = new ArrayList<>();\n    for (final String url : createRandomUrls()) {\n      replicas.add(new Replica(url, new HashMap<String,Object>()));\n    }\n    implTestTransform(replicas);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3aa683bba99315838c968fefedf3d74f44aa993","date":1575395112,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/ShufflingReplicaListTransformerTest#testTransformReplicas().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/ShufflingReplicaListTransformerTest#testTransformReplicas().mjava","sourceNew":"  @Test\n  public void testTransformReplicas() throws Exception {\n    final List<Replica> replicas = new ArrayList<>();\n    for (final String url : createRandomUrls()) {\n      replicas.add(new Replica(url, new HashMap<String,Object>(),\"c1\",\"s1\"));\n    }\n    implTestTransform(replicas);\n  }\n\n","sourceOld":"  @Test\n  public void testTransformReplicas() throws Exception {\n    final List<Replica> replicas = new ArrayList<>();\n    for (final String url : createRandomUrls()) {\n      replicas.add(new Replica(url, new HashMap<String,Object>()));\n    }\n    implTestTransform(replicas);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ea07d22cef2406e950de111f8aa7bc2edb91d56","date":1581094599,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/ShufflingReplicaListTransformerTest#testTransformReplicas().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/ShufflingReplicaListTransformerTest#testTransformReplicas().mjava","sourceNew":"  @Test\n  public void testTransformReplicas() throws Exception {\n    final List<Replica> replicas = new ArrayList<>();\n    int counter = 0;\n    for (final String url : createRandomUrls()) {\n      Map<String, Object> propMap = new HashMap<>();\n      propMap.put(\"core\", \"core\" + counter);\n      propMap.put(\"type\", \"NRT\");\n      propMap.put(\"node_name\", \"node\" + counter);\n      counter++;\n      replicas.add(new Replica(url, propMap, \"c1\", \"s1\"));\n    }\n    implTestTransform(replicas);\n  }\n\n","sourceOld":"  @Test\n  public void testTransformReplicas() throws Exception {\n    final List<Replica> replicas = new ArrayList<>();\n    for (final String url : createRandomUrls()) {\n      replicas.add(new Replica(url, new HashMap<String,Object>(),\"c1\",\"s1\"));\n    }\n    implTestTransform(replicas);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3aa683bba99315838c968fefedf3d74f44aa993":["833432c363468a5df50f87446a68015404b1fbcf","6681d02f2302c363be938426e68f8dfd090cc1bf"],"833432c363468a5df50f87446a68015404b1fbcf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3ea07d22cef2406e950de111f8aa7bc2edb91d56":["6681d02f2302c363be938426e68f8dfd090cc1bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3ea07d22cef2406e950de111f8aa7bc2edb91d56"],"6681d02f2302c363be938426e68f8dfd090cc1bf":["833432c363468a5df50f87446a68015404b1fbcf"]},"commit2Childs":{"d3aa683bba99315838c968fefedf3d74f44aa993":[],"833432c363468a5df50f87446a68015404b1fbcf":["d3aa683bba99315838c968fefedf3d74f44aa993","6681d02f2302c363be938426e68f8dfd090cc1bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["833432c363468a5df50f87446a68015404b1fbcf"],"3ea07d22cef2406e950de111f8aa7bc2edb91d56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6681d02f2302c363be938426e68f8dfd090cc1bf":["d3aa683bba99315838c968fefedf3d74f44aa993","3ea07d22cef2406e950de111f8aa7bc2edb91d56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3aa683bba99315838c968fefedf3d74f44aa993","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}