{"path":"src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","commits":[{"id":"61cd7bdf2e4fbdad8e97effdfc84f04a3656d596","date":1241435235,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e185d42e991c9953a59958500aa360a71e343278"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e185d42e991c9953a59958500aa360a71e343278","date":1250792616,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","pathOld":"src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","sourceNew":"  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","sourceOld":"  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","bugFix":["61cd7bdf2e4fbdad8e97effdfc84f04a3656d596"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","pathOld":"src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","sourceNew":"  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","sourceOld":"  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e185d42e991c9953a59958500aa360a71e343278":["61cd7bdf2e4fbdad8e97effdfc84f04a3656d596"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["e185d42e991c9953a59958500aa360a71e343278"],"61cd7bdf2e4fbdad8e97effdfc84f04a3656d596":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e185d42e991c9953a59958500aa360a71e343278":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["61cd7bdf2e4fbdad8e97effdfc84f04a3656d596"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"61cd7bdf2e4fbdad8e97effdfc84f04a3656d596":["e185d42e991c9953a59958500aa360a71e343278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}