{"path":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 199\n            // do, line 201\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // setlimit, line 202\n            v_2 = limit - cursor;\n            // tomark, line 202\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 202\n            // do, line 203\n            v_4 = limit - cursor;\n            lab1: do {\n                // (, line 203\n                // or, line 204\n                lab2: do {\n                    v_5 = limit - cursor;\n                    lab3: do {\n                        // call perfective_gerund, line 204\n                        if (!r_perfective_gerund())\n                        {\n                            break lab3;\n                        }\n                        break lab2;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // (, line 205\n                    // try, line 205\n                    v_6 = limit - cursor;\n                    lab4: do {\n                        // call reflexive, line 205\n                        if (!r_reflexive())\n                        {\n                            cursor = limit - v_6;\n                            break lab4;\n                        }\n                    } while (false);\n                    // or, line 206\n                    lab5: do {\n                        v_7 = limit - cursor;\n                        lab6: do {\n                            // call adjectival, line 206\n                            if (!r_adjectival())\n                            {\n                                break lab6;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        lab7: do {\n                            // call verb, line 206\n                            if (!r_verb())\n                            {\n                                break lab7;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        // call noun, line 206\n                        if (!r_noun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                } while (false);\n            } while (false);\n            cursor = limit - v_4;\n            // try, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // (, line 209\n                // [, line 209\n                ket = cursor;\n                // literal, line 209\n                if (!(eq_s_b(1, \"\\u0438\")))\n                {\n                    cursor = limit - v_8;\n                    break lab8;\n                }\n                // ], line 209\n                bra = cursor;\n                // delete, line 209\n                slice_del();\n            } while (false);\n            // do, line 212\n            v_9 = limit - cursor;\n            lab9: do {\n                // call derivational, line 212\n                if (!r_derivational())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 213\n            v_10 = limit - cursor;\n            lab10: do {\n                // call tidy_up, line 213\n                if (!r_tidy_up())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            limit_backward = v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 199\n            // do, line 201\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // setlimit, line 202\n            v_2 = limit - cursor;\n            // tomark, line 202\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 202\n            // do, line 203\n            v_4 = limit - cursor;\n            lab1: do {\n                // (, line 203\n                // or, line 204\n                lab2: do {\n                    v_5 = limit - cursor;\n                    lab3: do {\n                        // call perfective_gerund, line 204\n                        if (!r_perfective_gerund())\n                        {\n                            break lab3;\n                        }\n                        break lab2;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // (, line 205\n                    // try, line 205\n                    v_6 = limit - cursor;\n                    lab4: do {\n                        // call reflexive, line 205\n                        if (!r_reflexive())\n                        {\n                            cursor = limit - v_6;\n                            break lab4;\n                        }\n                    } while (false);\n                    // or, line 206\n                    lab5: do {\n                        v_7 = limit - cursor;\n                        lab6: do {\n                            // call adjectival, line 206\n                            if (!r_adjectival())\n                            {\n                                break lab6;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        lab7: do {\n                            // call verb, line 206\n                            if (!r_verb())\n                            {\n                                break lab7;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        // call noun, line 206\n                        if (!r_noun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                } while (false);\n            } while (false);\n            cursor = limit - v_4;\n            // try, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // (, line 209\n                // [, line 209\n                ket = cursor;\n                // literal, line 209\n                if (!(eq_s_b(1, \"\\u0438\")))\n                {\n                    cursor = limit - v_8;\n                    break lab8;\n                }\n                // ], line 209\n                bra = cursor;\n                // delete, line 209\n                slice_del();\n            } while (false);\n            // do, line 212\n            v_9 = limit - cursor;\n            lab9: do {\n                // call derivational, line 212\n                if (!r_derivational())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 213\n            v_10 = limit - cursor;\n            lab10: do {\n                // call tidy_up, line 213\n                if (!r_tidy_up())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            limit_backward = v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 199\n            // do, line 201\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // setlimit, line 202\n            v_2 = limit - cursor;\n            // tomark, line 202\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 202\n            // do, line 203\n            v_4 = limit - cursor;\n            lab1: do {\n                // (, line 203\n                // or, line 204\n                lab2: do {\n                    v_5 = limit - cursor;\n                    lab3: do {\n                        // call perfective_gerund, line 204\n                        if (!r_perfective_gerund())\n                        {\n                            break lab3;\n                        }\n                        break lab2;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // (, line 205\n                    // try, line 205\n                    v_6 = limit - cursor;\n                    lab4: do {\n                        // call reflexive, line 205\n                        if (!r_reflexive())\n                        {\n                            cursor = limit - v_6;\n                            break lab4;\n                        }\n                    } while (false);\n                    // or, line 206\n                    lab5: do {\n                        v_7 = limit - cursor;\n                        lab6: do {\n                            // call adjectival, line 206\n                            if (!r_adjectival())\n                            {\n                                break lab6;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        lab7: do {\n                            // call verb, line 206\n                            if (!r_verb())\n                            {\n                                break lab7;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        // call noun, line 206\n                        if (!r_noun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                } while (false);\n            } while (false);\n            cursor = limit - v_4;\n            // try, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // (, line 209\n                // [, line 209\n                ket = cursor;\n                // literal, line 209\n                if (!(eq_s_b(1, \"\\u0438\")))\n                {\n                    cursor = limit - v_8;\n                    break lab8;\n                }\n                // ], line 209\n                bra = cursor;\n                // delete, line 209\n                slice_del();\n            } while (false);\n            // do, line 212\n            v_9 = limit - cursor;\n            lab9: do {\n                // call derivational, line 212\n                if (!r_derivational())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 213\n            v_10 = limit - cursor;\n            lab10: do {\n                // call tidy_up, line 213\n                if (!r_tidy_up())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            limit_backward = v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 199\n            // do, line 201\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // setlimit, line 202\n            v_2 = limit - cursor;\n            // tomark, line 202\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 202\n            // do, line 203\n            v_4 = limit - cursor;\n            lab1: do {\n                // (, line 203\n                // or, line 204\n                lab2: do {\n                    v_5 = limit - cursor;\n                    lab3: do {\n                        // call perfective_gerund, line 204\n                        if (!r_perfective_gerund())\n                        {\n                            break lab3;\n                        }\n                        break lab2;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // (, line 205\n                    // try, line 205\n                    v_6 = limit - cursor;\n                    lab4: do {\n                        // call reflexive, line 205\n                        if (!r_reflexive())\n                        {\n                            cursor = limit - v_6;\n                            break lab4;\n                        }\n                    } while (false);\n                    // or, line 206\n                    lab5: do {\n                        v_7 = limit - cursor;\n                        lab6: do {\n                            // call adjectival, line 206\n                            if (!r_adjectival())\n                            {\n                                break lab6;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        lab7: do {\n                            // call verb, line 206\n                            if (!r_verb())\n                            {\n                                break lab7;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        // call noun, line 206\n                        if (!r_noun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                } while (false);\n            } while (false);\n            cursor = limit - v_4;\n            // try, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // (, line 209\n                // [, line 209\n                ket = cursor;\n                // literal, line 209\n                if (!(eq_s_b(1, \"\\u0438\")))\n                {\n                    cursor = limit - v_8;\n                    break lab8;\n                }\n                // ], line 209\n                bra = cursor;\n                // delete, line 209\n                slice_del();\n            } while (false);\n            // do, line 212\n            v_9 = limit - cursor;\n            lab9: do {\n                // call derivational, line 212\n                if (!r_derivational())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 213\n            v_10 = limit - cursor;\n            lab10: do {\n                // call tidy_up, line 213\n                if (!r_tidy_up())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            limit_backward = v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}