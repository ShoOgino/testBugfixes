{"path":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","sourceNew":"  private void tChainedFilters(final boolean useRandomAccess) throws Exception {\n    Query query = new TestFilteredQuery.FilteredQueryRA(new TestFilteredQuery.FilteredQueryRA(\n      new MatchAllDocsQuery(), new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"three\")))), useRandomAccess),\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"four\")))), useRandomAccess);\n    ScoreDoc[] hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random, query, searcher);    \n\n    // one more:\n    query = new TestFilteredQuery.FilteredQueryRA(query,\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"five\")))), useRandomAccess);\n    hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random, query, searcher);    \n  }\n\n","sourceOld":"  private void tChainedFilters(final boolean useRandomAccess) throws Exception {\n    Query query = new TestFilteredQuery.FilteredQueryRA(new TestFilteredQuery.FilteredQueryRA(\n      new MatchAllDocsQuery(), new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"three\")))), useRandomAccess),\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"four\")))), useRandomAccess);\n    ScoreDoc[] hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random, query, searcher);    \n\n    // one more:\n    query = new TestFilteredQuery.FilteredQueryRA(query,\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"five\")))), useRandomAccess);\n    hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random, query, searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","sourceNew":"  private void tChainedFilters(final boolean useRandomAccess) throws Exception {\n    Query query = new TestFilteredQuery.FilteredQueryRA(new TestFilteredQuery.FilteredQueryRA(\n      new MatchAllDocsQuery(), new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"three\")))), useRandomAccess),\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"four\")))), useRandomAccess);\n    ScoreDoc[] hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n\n    // one more:\n    query = new TestFilteredQuery.FilteredQueryRA(query,\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"five\")))), useRandomAccess);\n    hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n  }\n\n","sourceOld":"  private void tChainedFilters(final boolean useRandomAccess) throws Exception {\n    Query query = new TestFilteredQuery.FilteredQueryRA(new TestFilteredQuery.FilteredQueryRA(\n      new MatchAllDocsQuery(), new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"three\")))), useRandomAccess),\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"four\")))), useRandomAccess);\n    ScoreDoc[] hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random, query, searcher);    \n\n    // one more:\n    query = new TestFilteredQuery.FilteredQueryRA(query,\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"five\")))), useRandomAccess);\n    hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random, query, searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc7674a6feb46b954ebfb8ace9eb0383adb93de9","date":1348214796,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","sourceNew":"  private void tChainedFilters(final boolean useRandomAccess) throws Exception {\n    Query query = new FilteredQuery(new FilteredQuery(\n      new MatchAllDocsQuery(), new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"three\")))), randomFilterStrategy(random(), useRandomAccess)),\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"four\")))), randomFilterStrategy(random(), useRandomAccess));\n    ScoreDoc[] hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n\n    // one more:\n    query = new FilteredQuery(query,\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"five\")))), randomFilterStrategy(random(), useRandomAccess));\n    hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n  }\n\n","sourceOld":"  private void tChainedFilters(final boolean useRandomAccess) throws Exception {\n    Query query = new TestFilteredQuery.FilteredQueryRA(new TestFilteredQuery.FilteredQueryRA(\n      new MatchAllDocsQuery(), new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"three\")))), useRandomAccess),\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"four\")))), useRandomAccess);\n    ScoreDoc[] hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n\n    // one more:\n    query = new TestFilteredQuery.FilteredQueryRA(query,\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"five\")))), useRandomAccess);\n    hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","sourceNew":"  private void tChainedFilters(final boolean useRandomAccess) throws Exception {\n    Query query = new FilteredQuery(new FilteredQuery(\n      new MatchAllDocsQuery(), new FilterWrapper(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"three\")))), randomFilterStrategy(random(), useRandomAccess)),\n      new FilterWrapper(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"four\")))), randomFilterStrategy(random(), useRandomAccess));\n    ScoreDoc[] hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n\n    // one more:\n    query = new FilteredQuery(query,\n      new FilterWrapper(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"five\")))), randomFilterStrategy(random(), useRandomAccess));\n    hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n  }\n\n","sourceOld":"  private void tChainedFilters(final boolean useRandomAccess) throws Exception {\n    Query query = new FilteredQuery(new FilteredQuery(\n      new MatchAllDocsQuery(), new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"three\")))), randomFilterStrategy(random(), useRandomAccess)),\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"four\")))), randomFilterStrategy(random(), useRandomAccess));\n    ScoreDoc[] hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n\n    // one more:\n    query = new FilteredQuery(query,\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"five\")))), randomFilterStrategy(random(), useRandomAccess));\n    hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","sourceNew":"  private void tChainedFilters(final boolean useRandomAccess) throws Exception {\n    Query query = new FilteredQuery(new FilteredQuery(\n      new MatchAllDocsQuery(), new FilterWrapper(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"three\")))), randomFilterStrategy(random(), useRandomAccess)),\n      new FilterWrapper(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"four\")))), randomFilterStrategy(random(), useRandomAccess));\n    ScoreDoc[] hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n\n    // one more:\n    query = new FilteredQuery(query,\n      new FilterWrapper(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"five\")))), randomFilterStrategy(random(), useRandomAccess));\n    hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n  }\n\n","sourceOld":"  private void tChainedFilters(final boolean useRandomAccess) throws Exception {\n    Query query = new FilteredQuery(new FilteredQuery(\n      new MatchAllDocsQuery(), new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"three\")))), randomFilterStrategy(random(), useRandomAccess)),\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"four\")))), randomFilterStrategy(random(), useRandomAccess));\n    ScoreDoc[] hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n\n    // one more:\n    query = new FilteredQuery(query,\n      new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"five\")))), randomFilterStrategy(random(), useRandomAccess));\n    hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1db68e96dd908fcd79ef809095822736aa601d08","date":1434630596,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tChainedFilters(boolean).mjava","sourceNew":null,"sourceOld":"  private void tChainedFilters(final boolean useRandomAccess) throws Exception {\n    Query query = new FilteredQuery(new FilteredQuery(\n      new MatchAllDocsQuery(), new FilterWrapper(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"three\")))), randomFilterStrategy(random(), useRandomAccess)),\n      new FilterWrapper(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"four\")))), randomFilterStrategy(random(), useRandomAccess));\n    ScoreDoc[] hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n\n    // one more:\n    query = new FilteredQuery(query,\n      new FilterWrapper(new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"five\")))), randomFilterStrategy(random(), useRandomAccess));\n    hits = searcher.search(query, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), query, searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["cc7674a6feb46b954ebfb8ace9eb0383adb93de9","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"1db68e96dd908fcd79ef809095822736aa601d08":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["cc7674a6feb46b954ebfb8ace9eb0383adb93de9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cc7674a6feb46b954ebfb8ace9eb0383adb93de9":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1db68e96dd908fcd79ef809095822736aa601d08"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"1db68e96dd908fcd79ef809095822736aa601d08":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1db68e96dd908fcd79ef809095822736aa601d08"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["cc7674a6feb46b954ebfb8ace9eb0383adb93de9"],"cc7674a6feb46b954ebfb8ace9eb0383adb93de9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}