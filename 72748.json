{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#doSerialTasksWithRate().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#doSerialTasksWithRate().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#doSerialTasksWithRate().mjava","sourceNew":"  private int doSerialTasksWithRate() throws Exception {\n    initTasksArray();\n    long delayStep = (perMin ? 60000 : 1000) /rate;\n    long nextStartTime = System.currentTimeMillis();\n    int count = 0;\n    final long t0 = System.currentTimeMillis();\n    for (int k=0; (repetitions==REPEAT_EXHAUST && !exhausted) || k<repetitions; k++) {\n      if (stopNow) {\n        break;\n      }\n      for (int l=0;l<tasksArray.length;l++) {\n        final PerfTask task = tasksArray[l];\n        while(!stopNow) {\n          long waitMore = nextStartTime - System.currentTimeMillis();\n          if (waitMore > 0) {\n            // TODO: better to use condition to notify\n            Thread.sleep(1);\n          } else {\n            break;\n          }\n        }\n        if (stopNow) {\n          break;\n        }\n        nextStartTime += delayStep; // this aims at avarage rate. \n        try {\n          final int inc = task.runAndMaybeStats(letChildReport);\n          count += inc;\n          if (countsByTime != null) {\n            final int slot = (int) ((System.currentTimeMillis()-t0)/logByTimeMsec);\n            if (slot >= countsByTime.length) {\n              countsByTime = ArrayUtil.grow(countsByTime, 1+slot);\n            }\n            countsByTime[slot] += inc;\n          }\n\n          if (anyExhaustibleTasks)\n            updateExhausted(task);\n        } catch (NoMoreDataException e) {\n          exhausted = true;\n        }\n      }\n    }\n    stopNow = false;\n    return count;\n  }\n\n","sourceOld":"  private int doSerialTasksWithRate() throws Exception {\n    initTasksArray();\n    long delayStep = (perMin ? 60000 : 1000) /rate;\n    long nextStartTime = System.currentTimeMillis();\n    int count = 0;\n    final long t0 = System.currentTimeMillis();\n    for (int k=0; (repetitions==REPEAT_EXHAUST && !exhausted) || k<repetitions; k++) {\n      if (stopNow) {\n        break;\n      }\n      for (int l=0;l<tasksArray.length;l++) {\n        final PerfTask task = tasksArray[l];\n        while(!stopNow) {\n          long waitMore = nextStartTime - System.currentTimeMillis();\n          if (waitMore > 0) {\n            // TODO: better to use condition to notify\n            Thread.sleep(1);\n          } else {\n            break;\n          }\n        }\n        if (stopNow) {\n          break;\n        }\n        nextStartTime += delayStep; // this aims at avarage rate. \n        try {\n          final int inc = task.runAndMaybeStats(letChildReport);\n          count += inc;\n          if (countsByTime != null) {\n            final int slot = (int) ((System.currentTimeMillis()-t0)/logByTimeMsec);\n            if (slot >= countsByTime.length) {\n              countsByTime = ArrayUtil.grow(countsByTime, 1+slot);\n            }\n            countsByTime[slot] += inc;\n          }\n\n          if (anyExhaustibleTasks)\n            updateExhausted(task);\n        } catch (NoMoreDataException e) {\n          exhausted = true;\n        }\n      }\n    }\n    stopNow = false;\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}