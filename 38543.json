{"path":"src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#updateBottom(int).mjava","commits":[{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#updateBottom(int).mjava","pathOld":"/dev/null","sourceNew":"    private final void updateBottom(int doc) {\n      // bottom.score is already set to Float.NaN in add().\n      bottom.docID = docBase + doc;\n      pq.adjustTop();\n      bottom = (FieldValueHitQueue.Entry) pq.top();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1c8ed50c3dc8a2400a303593e8ce6616be9d8429"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc","date":1241865401,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#updateBottom(int).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#updateBottom(int).mjava","sourceNew":"    final void updateBottom(int doc) {\n      // bottom.score is already set to Float.NaN in add().\n      bottom.docID = docBase + doc;\n      bottom = (Entry) pq.updateTop();\n    }\n\n","sourceOld":"    private final void updateBottom(int doc) {\n      // bottom.score is already set to Float.NaN in add().\n      bottom.docID = docBase + doc;\n      pq.adjustTop();\n      bottom = (FieldValueHitQueue.Entry) pq.top();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce","date":1255993146,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#updateBottom(int).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#updateBottom(int).mjava","sourceNew":"    final void updateBottom(int doc) {\n      // bottom.score is already set to Float.NaN in add().\n      bottom.docID = docBase + doc;\n      bottom = pq.updateTop();\n    }\n\n","sourceOld":"    final void updateBottom(int doc) {\n      // bottom.score is already set to Float.NaN in add().\n      bottom.docID = docBase + doc;\n      bottom = (Entry) pq.updateTop();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c8ed50c3dc8a2400a303593e8ce6616be9d8429","date":1257976685,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#updateBottom(int).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#updateBottom(int).mjava","sourceNew":"    final void updateBottom(int doc) {\n      // bottom.score is already set to Float.NaN in add().\n      bottom.doc = docBase + doc;\n      bottom = pq.updateTop();\n    }\n\n","sourceOld":"    final void updateBottom(int doc) {\n      // bottom.score is already set to Float.NaN in add().\n      bottom.docID = docBase + doc;\n      bottom = pq.updateTop();\n    }\n\n","bugFix":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#updateBottom(int).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#updateBottom(int).mjava","sourceNew":"    final void updateBottom(int doc) {\n      // bottom.score is already set to Float.NaN in add().\n      bottom.doc = docBase + doc;\n      bottom = pq.updateTop();\n    }\n\n","sourceOld":"    final void updateBottom(int doc) {\n      // bottom.score is already set to Float.NaN in add().\n      bottom.doc = docBase + doc;\n      bottom = pq.updateTop();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1c8ed50c3dc8a2400a303593e8ce6616be9d8429":["20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1c8ed50c3dc8a2400a303593e8ce6616be9d8429"]},"commit2Childs":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"1c8ed50c3dc8a2400a303593e8ce6616be9d8429":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce":["1c8ed50c3dc8a2400a303593e8ce6616be9d8429"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}