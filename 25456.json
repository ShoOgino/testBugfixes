{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getExceptionWord(ArrayList[#]).mjava","commits":[{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getExceptionWord(ArrayList[#]).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getExceptionWord(ArrayList).mjava","sourceNew":"  protected String getExceptionWord(ArrayList<?> ex) {\n    StringBuilder res = new StringBuilder();\n    for (int i = 0; i < ex.size(); i++) {\n      Object item = ex.get(i);\n      if (item instanceof String) {\n        res.append((String) item);\n      } else {\n        if (((Hyphen) item).noBreak != null) {\n          res.append(((Hyphen) item).noBreak);\n        }\n      }\n    }\n    return res.toString();\n  }\n\n","sourceOld":"  protected String getExceptionWord(ArrayList ex) {\n    StringBuilder res = new StringBuilder();\n    for (int i = 0; i < ex.size(); i++) {\n      Object item = ex.get(i);\n      if (item instanceof String) {\n        res.append((String) item);\n      } else {\n        if (((Hyphen) item).noBreak != null) {\n          res.append(((Hyphen) item).noBreak);\n        }\n      }\n    }\n    return res.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getExceptionWord(ArrayList[#]).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getExceptionWord(ArrayList[#]).mjava","sourceNew":"  protected String getExceptionWord(ArrayList<?> ex) {\n    StringBuilder res = new StringBuilder();\n    for (int i = 0; i < ex.size(); i++) {\n      Object item = ex.get(i);\n      if (item instanceof String) {\n        res.append((String) item);\n      } else {\n        if (((Hyphen) item).noBreak != null) {\n          res.append(((Hyphen) item).noBreak);\n        }\n      }\n    }\n    return res.toString();\n  }\n\n","sourceOld":"  protected String getExceptionWord(ArrayList<?> ex) {\n    StringBuilder res = new StringBuilder();\n    for (int i = 0; i < ex.size(); i++) {\n      Object item = ex.get(i);\n      if (item instanceof String) {\n        res.append((String) item);\n      } else {\n        if (((Hyphen) item).noBreak != null) {\n          res.append(((Hyphen) item).noBreak);\n        }\n      }\n    }\n    return res.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}