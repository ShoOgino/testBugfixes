{"path":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","sourceNew":"  @Override\n  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrEncoder enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n  }\n\n","sourceOld":"  @Override\n  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrEncoder enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","sourceNew":"  @Override\n  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrEncoder enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n  }\n\n","sourceOld":"  @Override\n  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrEncoder enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","sourceNew":"  @Override\n  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrEncoder enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n  }\n\n","sourceOld":"  @Override\n  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrEncoder enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ebcbd0a745c480ddb4d98779055ca8ff71de79","date":1316007529,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","sourceNew":"  @Override\n  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrEncoder enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n    \n    SolrBoundaryScanner boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n  }\n\n","sourceOld":"  @Override\n  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrEncoder enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fc9f4a33c8fefeb1260aea04273a36b0d32378e","date":1421852764,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","sourceNew":null,"sourceOld":"  @Override\n  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrEncoder enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n    \n    SolrBoundaryScanner boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["93ebcbd0a745c480ddb4d98779055ca8ff71de79"],"93ebcbd0a745c480ddb4d98779055ca8ff71de79":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"]},"commit2Childs":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ebcbd0a745c480ddb4d98779055ca8ff71de79":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["93ebcbd0a745c480ddb4d98779055ca8ff71de79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}