{"path":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = localParams == null ? params : new DefaultSolrParams(localParams, params);\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = localParams == null ? params : new DefaultSolrParams(localParams, params);\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = localParams == null ? params : new DefaultSolrParams(localParams, params);\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = localParams == null ? params : new DefaultSolrParams(localParams, params);\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = localParams == null ? params : new DefaultSolrParams(localParams, params);\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = localParams == null ? params : new DefaultSolrParams(localParams, params);\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0dcbe407b62ce0c91dc171a4695a9f442c46ce14","date":1323729111,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = localParams == null ? params : new DefaultSolrParams(localParams, params);\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ceb6a6c707ada1df8bde804e25c98668e699a18","date":1323800602,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = localParams == null ? params : new DefaultSolrParams(localParams, params);\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7c87c58d71fb9a6f5bc4ae8247339ecbbf67edc","date":1332908462,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15cacbf46c73bd5b0e47b57128be8852cb236160","date":1332942979,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":["738199265d7244d0d494cdc76ad36c750d9a1bcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"738199265d7244d0d494cdc76ad36c750d9a1bcd","date":1333253180,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    addMainQuery(query, solrParams);\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":["15cacbf46c73bd5b0e47b57128be8852cb236160"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"220acde8206f5221383e3777429a4fb84bed289f","date":1339892825,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = SolrPluginUtils.parseFieldBoosts(solrParams.getParams(DisMaxParams.QF));\n    if (0 == queryFields.size()) {\n      queryFields.put(req.getSchema().getDefaultSearchFieldName(), 1.0f);\n    }\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aed6b9dbf4e4cfb1a522030abd1f47bc053b9821","date":1395136008,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n    query.setDisableCoord(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery query = new BooleanQuery(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n    query.setDisableCoord(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n    query.setDisableCoord(true);\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a4260b228cfff6ad78ac88d519f0f7746529c3c","date":1493136145,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    \n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    \n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39fdbc59d893f5a211736e861fe145798a40b9ff","date":1498161919,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    \n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return QueryUtils.build(query, this);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    \n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    \n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return QueryUtils.build(query, this);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    \n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    \n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return QueryUtils.build(query, this);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    \n    parsed = true;\n    SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);\n\n    queryFields = parseQueryFields(req.getSchema(), solrParams);\n    \n    /* the main query we will execute.  we disable the coord because\n     * this query is an artificial construct\n     */\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n\n    boolean notBlank = addMainQuery(query, solrParams);\n    if (!notBlank)\n      return null;\n    addBoostQuery(query, solrParams);\n    addBoostFunctions(query, solrParams);\n\n    return query.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aed6b9dbf4e4cfb1a522030abd1f47bc053b9821":["3cdb67100dc016748799a77218aa409478372d79"],"4ceb6a6c707ada1df8bde804e25c98668e699a18":["c26f00b574427b55127e869b935845554afde1fa","0dcbe407b62ce0c91dc171a4695a9f442c46ce14"],"3cdb67100dc016748799a77218aa409478372d79":["220acde8206f5221383e3777429a4fb84bed289f"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"d7c87c58d71fb9a6f5bc4ae8247339ecbbf67edc":["0dcbe407b62ce0c91dc171a4695a9f442c46ce14"],"39fdbc59d893f5a211736e861fe145798a40b9ff":["7a4260b228cfff6ad78ac88d519f0f7746529c3c"],"407687e67faf6e1f02a211ca078d8e3eed631027":["220acde8206f5221383e3777429a4fb84bed289f","3cdb67100dc016748799a77218aa409478372d79"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["e9017cf144952056066919f1ebc7897ff9bd71b1","39fdbc59d893f5a211736e861fe145798a40b9ff"],"28288370235ed02234a64753cdbf0c6ec096304a":["7a4260b228cfff6ad78ac88d519f0f7746529c3c","39fdbc59d893f5a211736e861fe145798a40b9ff"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","c8a0e442f7b61f811680273b25da95994a724466"],"7a4260b228cfff6ad78ac88d519f0f7746529c3c":["c8a0e442f7b61f811680273b25da95994a724466"],"738199265d7244d0d494cdc76ad36c750d9a1bcd":["15cacbf46c73bd5b0e47b57128be8852cb236160"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["aed6b9dbf4e4cfb1a522030abd1f47bc053b9821"],"220acde8206f5221383e3777429a4fb84bed289f":["738199265d7244d0d494cdc76ad36c750d9a1bcd"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["c8a0e442f7b61f811680273b25da95994a724466","7a4260b228cfff6ad78ac88d519f0f7746529c3c"],"15cacbf46c73bd5b0e47b57128be8852cb236160":["d7c87c58d71fb9a6f5bc4ae8247339ecbbf67edc"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0dcbe407b62ce0c91dc171a4695a9f442c46ce14":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8a0e442f7b61f811680273b25da95994a724466":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"aed6b9dbf4e4cfb1a522030abd1f47bc053b9821":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"4ceb6a6c707ada1df8bde804e25c98668e699a18":[],"3cdb67100dc016748799a77218aa409478372d79":["aed6b9dbf4e4cfb1a522030abd1f47bc053b9821","407687e67faf6e1f02a211ca078d8e3eed631027"],"c26f00b574427b55127e869b935845554afde1fa":["4ceb6a6c707ada1df8bde804e25c98668e699a18","0dcbe407b62ce0c91dc171a4695a9f442c46ce14"],"d7c87c58d71fb9a6f5bc4ae8247339ecbbf67edc":["15cacbf46c73bd5b0e47b57128be8852cb236160"],"39fdbc59d893f5a211736e861fe145798a40b9ff":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"7a4260b228cfff6ad78ac88d519f0f7746529c3c":["39fdbc59d893f5a211736e861fe145798a40b9ff","28288370235ed02234a64753cdbf0c6ec096304a","e9017cf144952056066919f1ebc7897ff9bd71b1"],"738199265d7244d0d494cdc76ad36c750d9a1bcd":["220acde8206f5221383e3777429a4fb84bed289f"],"220acde8206f5221383e3777429a4fb84bed289f":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","c8a0e442f7b61f811680273b25da95994a724466"],"15cacbf46c73bd5b0e47b57128be8852cb236160":["738199265d7244d0d494cdc76ad36c750d9a1bcd"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"0dcbe407b62ce0c91dc171a4695a9f442c46ce14":["4ceb6a6c707ada1df8bde804e25c98668e699a18","d7c87c58d71fb9a6f5bc4ae8247339ecbbf67edc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c8a0e442f7b61f811680273b25da95994a724466":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","7a4260b228cfff6ad78ac88d519f0f7746529c3c","e9017cf144952056066919f1ebc7897ff9bd71b1"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ceb6a6c707ada1df8bde804e25c98668e699a18","407687e67faf6e1f02a211ca078d8e3eed631027","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}