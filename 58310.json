{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#add(int,IndexableField).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#add(int,IndexableField).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#add(int,IndexableField).mjava","sourceNew":"    @Override\n    public void add(int docID, IndexableField docValue) throws IOException {\n      add(docID, docValue.numericValue().longValue());\n    }\n\n","sourceOld":"    @Override\n    public void add(int docID, IndexableField docValue) throws IOException {\n      add(docID, docValue.numericValue().longValue());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de5bbadeb3abac0f650298bff584bd4317bd75aa","date":1331116004,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#add(int,IndexableField).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#add(int,IndexableField).mjava","sourceNew":"    @Override\n    public void add(int docID, IndexableField value) throws IOException {\n      template.toBytes(value.numericValue().longValue(), bytesRef);\n      bytesSpareField.setBytesValue(bytesRef);\n      super.add(docID, bytesSpareField);\n    }\n\n","sourceOld":"    @Override\n    public void add(int docID, IndexableField docValue) throws IOException {\n      add(docID, docValue.numericValue().longValue());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#add(int,IndexableField).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#add(int,IndexableField).mjava","sourceNew":"    @Override\n    public void add(int docID, IndexableField value) throws IOException {\n      template.toBytes(value.numericValue().longValue(), bytesRef);\n      bytesSpareField.setBytesValue(bytesRef);\n      super.add(docID, bytesSpareField);\n    }\n\n","sourceOld":"    @Override\n    public void add(int docID, IndexableField docValue) throws IOException {\n      add(docID, docValue.numericValue().longValue());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a","date":1341524239,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#add(int,StorableField).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#add(int,IndexableField).mjava","sourceNew":"    @Override\n    public void add(int docID, StorableField value) throws IOException {\n      template.toBytes(value.numericValue().longValue(), bytesRef);\n      bytesSpareField.setBytesValue(bytesRef);\n      super.add(docID, bytesSpareField);\n    }\n\n","sourceOld":"    @Override\n    public void add(int docID, IndexableField value) throws IOException {\n      template.toBytes(value.numericValue().longValue(), bytesRef);\n      bytesSpareField.setBytesValue(bytesRef);\n      super.add(docID, bytesSpareField);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#add(int,StorableField).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#add(int,IndexableField).mjava","sourceNew":"    @Override\n    public void add(int docID, StorableField value) throws IOException {\n      template.toBytes(value.numericValue().longValue(), bytesRef);\n      bytesSpareField.setBytesValue(bytesRef);\n      super.add(docID, bytesSpareField);\n    }\n\n","sourceOld":"    @Override\n    public void add(int docID, IndexableField value) throws IOException {\n      template.toBytes(value.numericValue().longValue(), bytesRef);\n      bytesSpareField.setBytesValue(bytesRef);\n      super.add(docID, bytesSpareField);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"1d028314cced5858683a1bb4741423d0f934257b":["de5bbadeb3abac0f650298bff584bd4317bd75aa","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["de5bbadeb3abac0f650298bff584bd4317bd75aa"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d028314cced5858683a1bb4741423d0f934257b"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"1d028314cced5858683a1bb4741423d0f934257b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["1d028314cced5858683a1bb4741423d0f934257b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38e3b736c7ca086d61b7dbb841c905ee115490da","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["38e3b736c7ca086d61b7dbb841c905ee115490da","1d028314cced5858683a1bb4741423d0f934257b","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}