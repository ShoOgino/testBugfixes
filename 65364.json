{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter#close().mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    boolean success = false;\n    try {\n      final long dirStart = out.getFilePointer();\n      final int fieldCount = fields.size();\n      \n      int nonNullFieldCount = 0;\n      for(int i=0;i<fieldCount;i++) {\n        SimpleFieldWriter field = fields.get(i);\n        if (field.numIndexTerms > 0) {\n          nonNullFieldCount++;\n        }\n      }\n      \n      out.writeVInt(nonNullFieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        SimpleFieldWriter field = fields.get(i);\n        if (field.numIndexTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVInt(field.numIndexTerms);\n          out.writeVLong(field.termsStart);\n          out.writeVLong(field.indexStart);\n          out.writeVLong(field.packedIndexStart);\n          out.writeVLong(field.packedOffsetsStart);\n        }\n      }\n      writeTrailer(dirStart);\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(out);\n      } else {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    boolean success = false;\n    try {\n      final long dirStart = out.getFilePointer();\n      final int fieldCount = fields.size();\n      \n      int nonNullFieldCount = 0;\n      for(int i=0;i<fieldCount;i++) {\n        SimpleFieldWriter field = fields.get(i);\n        if (field.numIndexTerms > 0) {\n          nonNullFieldCount++;\n        }\n      }\n      \n      out.writeVInt(nonNullFieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        SimpleFieldWriter field = fields.get(i);\n        if (field.numIndexTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVInt(field.numIndexTerms);\n          out.writeVLong(field.termsStart);\n          out.writeVLong(field.indexStart);\n          out.writeVLong(field.packedIndexStart);\n          out.writeVLong(field.packedOffsetsStart);\n        }\n      }\n      writeTrailer(dirStart);\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(out);\n      } else {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"038e2a9b07e2f8ae58336613cea227bf8b973484","date":1346850972,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    boolean success = false;\n    try {\n      final long dirStart = out.getFilePointer();\n      final int fieldCount = fields.size();\n      \n      int nonNullFieldCount = 0;\n      for(int i=0;i<fieldCount;i++) {\n        SimpleFieldWriter field = fields.get(i);\n        if (field.numIndexTerms > 0) {\n          nonNullFieldCount++;\n        }\n      }\n      \n      out.writeVInt(nonNullFieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        SimpleFieldWriter field = fields.get(i);\n        if (field.numIndexTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVInt(field.numIndexTerms);\n          out.writeVLong(field.termsStart);\n          out.writeVLong(field.indexStart);\n          out.writeVLong(field.packedIndexStart);\n          out.writeVLong(field.packedOffsetsStart);\n        }\n      }\n      writeTrailer(dirStart);\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(out);\n      } else {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    boolean success = false;\n    try {\n      final long dirStart = out.getFilePointer();\n      final int fieldCount = fields.size();\n      \n      int nonNullFieldCount = 0;\n      for(int i=0;i<fieldCount;i++) {\n        SimpleFieldWriter field = fields.get(i);\n        if (field.numIndexTerms > 0) {\n          nonNullFieldCount++;\n        }\n      }\n      \n      out.writeVInt(nonNullFieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        SimpleFieldWriter field = fields.get(i);\n        if (field.numIndexTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVInt(field.numIndexTerms);\n          out.writeVLong(field.termsStart);\n          out.writeVLong(field.indexStart);\n          out.writeVLong(field.packedIndexStart);\n          out.writeVLong(field.packedOffsetsStart);\n        }\n      }\n      writeTrailer(dirStart);\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(out);\n      } else {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"038e2a9b07e2f8ae58336613cea227bf8b973484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}