{"path":"lucene/facet/src/java/org/apache/lucene/facet/util/FacetsPayloadMigrationReader.PayloadMigratingBinaryDocValues#getDPE().mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/util/FacetsPayloadMigrationReader.PayloadMigratingBinaryDocValues#getDPE().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/FacetsPayloadMigrationReader.PayloadMigratingBinaryDocValues#getDPE().mjava","sourceNew":"    private DocsAndPositionsEnum getDPE() {\n      try {\n        DocsAndPositionsEnum dpe = null;\n        if (fields != null) {\n          Terms terms = fields.terms(term.field());\n          if (terms != null) {\n            TermsEnum te = terms.iterator(null); // no use for reusing\n            if (te.seekExact(term.bytes(), true)) {\n              // we're not expected to be called for deleted documents\n              dpe = te.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n            }\n          }\n        }\n        return dpe;\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","sourceOld":"    private DocsAndPositionsEnum getDPE() {\n      try {\n        DocsAndPositionsEnum dpe = null;\n        if (fields != null) {\n          Terms terms = fields.terms(term.field());\n          if (terms != null) {\n            TermsEnum te = terms.iterator(null); // no use for reusing\n            if (te.seekExact(term.bytes(), true)) {\n              // we're not expected to be called for deleted documents\n              dpe = te.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n            }\n          }\n        }\n        return dpe;\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/util/FacetsPayloadMigrationReader.PayloadMigratingBinaryDocValues#getDPE().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/util/FacetsPayloadMigrationReader.PayloadMigratingBinaryDocValues#getDPE().mjava","sourceNew":"    private DocsAndPositionsEnum getDPE() {\n      try {\n        DocsAndPositionsEnum dpe = null;\n        if (fields != null) {\n          Terms terms = fields.terms(term.field());\n          if (terms != null) {\n            TermsEnum te = terms.iterator(null); // no use for reusing\n            if (te.seekExact(term.bytes())) {\n              // we're not expected to be called for deleted documents\n              dpe = te.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n            }\n          }\n        }\n        return dpe;\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","sourceOld":"    private DocsAndPositionsEnum getDPE() {\n      try {\n        DocsAndPositionsEnum dpe = null;\n        if (fields != null) {\n          Terms terms = fields.terms(term.field());\n          if (terms != null) {\n            TermsEnum te = terms.iterator(null); // no use for reusing\n            if (te.seekExact(term.bytes(), true)) {\n              // we're not expected to be called for deleted documents\n              dpe = te.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n            }\n          }\n        }\n        return dpe;\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/util/FacetsPayloadMigrationReader.PayloadMigratingBinaryDocValues#getDPE().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/util/FacetsPayloadMigrationReader.PayloadMigratingBinaryDocValues#getDPE().mjava","sourceNew":"    private DocsAndPositionsEnum getDPE() {\n      try {\n        DocsAndPositionsEnum dpe = null;\n        if (fields != null) {\n          Terms terms = fields.terms(term.field());\n          if (terms != null) {\n            TermsEnum te = terms.iterator(null); // no use for reusing\n            if (te.seekExact(term.bytes())) {\n              // we're not expected to be called for deleted documents\n              dpe = te.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n            }\n          }\n        }\n        return dpe;\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","sourceOld":"    private DocsAndPositionsEnum getDPE() {\n      try {\n        DocsAndPositionsEnum dpe = null;\n        if (fields != null) {\n          Terms terms = fields.terms(term.field());\n          if (terms != null) {\n            TermsEnum te = terms.iterator(null); // no use for reusing\n            if (te.seekExact(term.bytes(), true)) {\n              // we're not expected to be called for deleted documents\n              dpe = te.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n            }\n          }\n        }\n        return dpe;\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/util/FacetsPayloadMigrationReader.PayloadMigratingBinaryDocValues#getDPE().mjava","sourceNew":null,"sourceOld":"    private DocsAndPositionsEnum getDPE() {\n      try {\n        DocsAndPositionsEnum dpe = null;\n        if (fields != null) {\n          Terms terms = fields.terms(term.field());\n          if (terms != null) {\n            TermsEnum te = terms.iterator(null); // no use for reusing\n            if (te.seekExact(term.bytes())) {\n              // we're not expected to be called for deleted documents\n              dpe = te.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n            }\n          }\n        }\n        return dpe;\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/util/FacetsPayloadMigrationReader.PayloadMigratingBinaryDocValues#getDPE().mjava","sourceNew":null,"sourceOld":"    private DocsAndPositionsEnum getDPE() {\n      try {\n        DocsAndPositionsEnum dpe = null;\n        if (fields != null) {\n          Terms terms = fields.terms(term.field());\n          if (terms != null) {\n            TermsEnum te = terms.iterator(null); // no use for reusing\n            if (te.seekExact(term.bytes())) {\n              // we're not expected to be called for deleted documents\n              dpe = te.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n            }\n          }\n        }\n        return dpe;\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["607428da722dcb3e86bbd11c63de8986e6275c36"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","d33e19a97046248623a7591aeaa6547233fd15e2"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["607428da722dcb3e86bbd11c63de8986e6275c36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}