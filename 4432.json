{"path":"solr/core/src/java/org/apache/solr/core/RequestHandlers#getAll(Class).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#getAll(Class).mjava","pathOld":"solr/src/java/org/apache/solr/core/RequestHandlers#getAll(Class).mjava","sourceNew":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public Map<String,SolrRequestHandler> getAll(Class clazz) {\n    Map<String,SolrRequestHandler> result \n      = new HashMap<String,SolrRequestHandler>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), e.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public Map<String,SolrRequestHandler> getAll(Class clazz) {\n    Map<String,SolrRequestHandler> result \n      = new HashMap<String,SolrRequestHandler>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), e.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#getAll(Class).mjava","pathOld":"solr/src/java/org/apache/solr/core/RequestHandlers#getAll(Class).mjava","sourceNew":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public Map<String,SolrRequestHandler> getAll(Class clazz) {\n    Map<String,SolrRequestHandler> result \n      = new HashMap<String,SolrRequestHandler>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), e.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public Map<String,SolrRequestHandler> getAll(Class clazz) {\n    Map<String,SolrRequestHandler> result \n      = new HashMap<String,SolrRequestHandler>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), e.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#getAll(Class).mjava","pathOld":"solr/src/java/org/apache/solr/core/RequestHandlers#getAll(Class).mjava","sourceNew":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public Map<String,SolrRequestHandler> getAll(Class clazz) {\n    Map<String,SolrRequestHandler> result \n      = new HashMap<String,SolrRequestHandler>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), e.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public Map<String,SolrRequestHandler> getAll(Class clazz) {\n    Map<String,SolrRequestHandler> result \n      = new HashMap<String,SolrRequestHandler>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), e.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3b687d77563d946578f099495d70e55c92f3f1d","date":1373111282,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#[T-extends-SolrRequestHandler]_getAll(Class[T]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers#getAll(Class).mjava","sourceNew":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public <T extends SolrRequestHandler> Map<String,T> getAll(Class<T> clazz) {\n    Map<String,T> result = new HashMap<String,T>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), clazz.cast(e.getValue()));\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public Map<String,SolrRequestHandler> getAll(Class clazz) {\n    Map<String,SolrRequestHandler> result \n      = new HashMap<String,SolrRequestHandler>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), e.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers#getAll(Class).mjava","sourceNew":null,"sourceOld":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public Map<String,SolrRequestHandler> getAll(Class clazz) {\n    Map<String,SolrRequestHandler> result \n      = new HashMap<String,SolrRequestHandler>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), e.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a3b687d77563d946578f099495d70e55c92f3f1d":["c26f00b574427b55127e869b935845554afde1fa"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c26f00b574427b55127e869b935845554afde1fa","a3b687d77563d946578f099495d70e55c92f3f1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3b687d77563d946578f099495d70e55c92f3f1d"]},"commit2Childs":{"a3b687d77563d946578f099495d70e55c92f3f1d":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a3b687d77563d946578f099495d70e55c92f3f1d","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}