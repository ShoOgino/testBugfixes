{"path":"src/java/org/apache/lucene/analysis/ru/RussianStemmer#markPositions(String).mjava","commits":[{"id":"70aa49bffe8257a0135ed4eea2633937e92e99a6","date":1032144718,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/ru/RussianStemmer#markPositions(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Marks positions of RV, R1 and R2 in a given word.\n     * Creation date: (16/03/2002 3:40:11 PM)\n     * @return int\n     * @param word java.lang.String\n     */\n    private void markPositions(String word)\n    {\n        RV = 0;\n        R1 = 0;\n        R2 = 0;\n        int i = 0;\n        // find RV\n        while (word.length() > i && !isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // RV zone is empty\n        RV = i;\n        // find R1\n        while (word.length() > i && isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R1 zone is empty\n        R1 = i;\n        // find R2\n        while (word.length() > i && !isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R2 zone is empty\n        while (word.length() > i && isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R2 zone is empty\n        R2 = i;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0859992fd49ca637e9f00011fa4b0281196a9c58","date":1065658314,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/ru/RussianStemmer#markPositions(String).mjava","pathOld":"src/java/org/apache/lucene/analysis/ru/RussianStemmer#markPositions(String).mjava","sourceNew":"    /**\n     * Marks positions of RV, R1 and R2 in a given word.\n     * Creation date: (16/03/2002 3:40:11 PM)\n     */\n    private void markPositions(String word)\n    {\n        RV = 0;\n        R1 = 0;\n        R2 = 0;\n        int i = 0;\n        // find RV\n        while (word.length() > i && !isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // RV zone is empty\n        RV = i;\n        // find R1\n        while (word.length() > i && isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R1 zone is empty\n        R1 = i;\n        // find R2\n        while (word.length() > i && !isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R2 zone is empty\n        while (word.length() > i && isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R2 zone is empty\n        R2 = i;\n    }\n\n","sourceOld":"    /**\n     * Marks positions of RV, R1 and R2 in a given word.\n     * Creation date: (16/03/2002 3:40:11 PM)\n     * @return int\n     * @param word java.lang.String\n     */\n    private void markPositions(String word)\n    {\n        RV = 0;\n        R1 = 0;\n        R2 = 0;\n        int i = 0;\n        // find RV\n        while (word.length() > i && !isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // RV zone is empty\n        RV = i;\n        // find R1\n        while (word.length() > i && isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R1 zone is empty\n        R1 = i;\n        // find R2\n        while (word.length() > i && !isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R2 zone is empty\n        while (word.length() > i && isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R2 zone is empty\n        R2 = i;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2","date":1092688309,"type":4,"author":"Daniel Naber","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/ru/RussianStemmer#markPositions(String).mjava","sourceNew":null,"sourceOld":"    /**\n     * Marks positions of RV, R1 and R2 in a given word.\n     * Creation date: (16/03/2002 3:40:11 PM)\n     */\n    private void markPositions(String word)\n    {\n        RV = 0;\n        R1 = 0;\n        R2 = 0;\n        int i = 0;\n        // find RV\n        while (word.length() > i && !isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // RV zone is empty\n        RV = i;\n        // find R1\n        while (word.length() > i && isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R1 zone is empty\n        R1 = i;\n        // find R2\n        while (word.length() > i && !isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R2 zone is empty\n        while (word.length() > i && isVowel(word.charAt(i)))\n        {\n            i++;\n        }\n        if (word.length() - 1 < ++i)\n            return; // R2 zone is empty\n        R2 = i;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0859992fd49ca637e9f00011fa4b0281196a9c58":["70aa49bffe8257a0135ed4eea2633937e92e99a6"],"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2":["0859992fd49ca637e9f00011fa4b0281196a9c58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2"],"70aa49bffe8257a0135ed4eea2633937e92e99a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0859992fd49ca637e9f00011fa4b0281196a9c58":["eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2"],"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70aa49bffe8257a0135ed4eea2633937e92e99a6"],"70aa49bffe8257a0135ed4eea2633937e92e99a6":["0859992fd49ca637e9f00011fa4b0281196a9c58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}