{"path":"lucene/core/src/java/org/apache/lucene/util/MergedIterator#MergedIterator(boolean,Iterator[T]...).mjava","commits":[{"id":"050e6201c3a7d4c351ebc06cbe4822e26e028117","date":1382375603,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/MergedIterator#MergedIterator(boolean,Iterator[T]...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergedIterator#MergedIterator(Iterator[T]...).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  public MergedIterator(boolean removeDuplicates, Iterator<T>... iterators) {\n    this.removeDuplicates = removeDuplicates;\n    queue = new TermMergeQueue<T>(iterators.length);\n    top = new SubIterator[iterators.length];\n    int index = 0;\n    for (Iterator<T> iterator : iterators) {\n      if (iterator.hasNext()) {\n        SubIterator<T> sub = new SubIterator<T>();\n        sub.current = iterator.next();\n        sub.iterator = iterator;\n        sub.index = index++;\n        queue.add(sub);\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  public MergedIterator(Iterator<T>... iterators) {\n    queue = new TermMergeQueue<T>(iterators.length);\n    top = new SubIterator[iterators.length];\n    int index = 0;\n    for (Iterator<T> iterator : iterators) {\n      if (iterator.hasNext()) {\n        SubIterator<T> sub = new SubIterator<T>();\n        sub.current = iterator.next();\n        sub.iterator = iterator;\n        sub.index = index++;\n        queue.add(sub);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/MergedIterator#MergedIterator(boolean,Iterator[T]...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/MergedIterator#MergedIterator(boolean,Iterator[T]...).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  public MergedIterator(boolean removeDuplicates, Iterator<T>... iterators) {\n    this.removeDuplicates = removeDuplicates;\n    queue = new TermMergeQueue<>(iterators.length);\n    top = new SubIterator[iterators.length];\n    int index = 0;\n    for (Iterator<T> iterator : iterators) {\n      if (iterator.hasNext()) {\n        SubIterator<T> sub = new SubIterator<>();\n        sub.current = iterator.next();\n        sub.iterator = iterator;\n        sub.index = index++;\n        queue.add(sub);\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  public MergedIterator(boolean removeDuplicates, Iterator<T>... iterators) {\n    this.removeDuplicates = removeDuplicates;\n    queue = new TermMergeQueue<T>(iterators.length);\n    top = new SubIterator[iterators.length];\n    int index = 0;\n    for (Iterator<T> iterator : iterators) {\n      if (iterator.hasNext()) {\n        SubIterator<T> sub = new SubIterator<T>();\n        sub.current = iterator.next();\n        sub.iterator = iterator;\n        sub.index = index++;\n        queue.add(sub);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["050e6201c3a7d4c351ebc06cbe4822e26e028117"],"050e6201c3a7d4c351ebc06cbe4822e26e028117":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"050e6201c3a7d4c351ebc06cbe4822e26e028117":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["050e6201c3a7d4c351ebc06cbe4822e26e028117"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}