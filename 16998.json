{"path":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/shard\" + i + \"/data\");\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/shard\" + i + \"/data\");\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/shard\" + i + \"/data\");\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/shard\" + i + \"/data\");\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/shard\" + i + \"/data\");\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/shard\" + i + \"/data\");\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir,\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/shard\" + i + \"/data\");\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":["87e71a21d5a987fc33ae9a0f50353e220e64f2c7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir,\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/shard\" + i + \"/data\");\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir,\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/shard\" + i + \"/data\");\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33d0ed80b7b47e34ad3ff033a77544563aba3085","date":1341244632,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir,\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":["87e71a21d5a987fc33ae9a0f50353e220e64f2c7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir,\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f8b5ba78b252ff57082799d1b662ad3d677ecfc","date":1347893162,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"127.0.0.1:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"localhost:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"81ec897f0eb789ef9536a8130d1cdb9337ef108a","date":1392217884,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = \"127.0.0.1:\" + j.getLocalPort() + context;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createControlJetty();\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\", null, getSolrConfigFile(), getSchemaFile());\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createControlJetty();\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createControlJetty();\n\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path coresPath = testDir.toPath().resolve(shardname).resolve(\"cores\");\n      writeCoreProperties(coresPath, DEFAULT_TEST_CORENAME);\n      System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(shardname).toString());\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n    controlJetty = createControlJetty();\n\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":["87e71a21d5a987fc33ae9a0f50353e220e64f2c7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"87e71a21d5a987fc33ae9a0f50353e220e64f2c7","date":1425319675,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome);\n      System.setProperty(\"coreRootDirectory\", jettyHome.toString());\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n                                      \n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path coresPath = testDir.toPath().resolve(shardname).resolve(\"cores\");\n      writeCoreProperties(coresPath, DEFAULT_TEST_CORENAME);\n      System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(shardname).toString());\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":["33d0ed80b7b47e34ad3ff033a77544563aba3085","fd44bec977a26a118d9e809e2de6f7edb5ca0f39","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome);\n      System.setProperty(\"coreRootDirectory\", jettyHome.toString());\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n                                      \n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path coresPath = testDir.toPath().resolve(shardname).resolve(\"cores\");\n      writeCoreProperties(coresPath, DEFAULT_TEST_CORENAME);\n      System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(shardname).toString());\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome.resolve(\"cores\"));\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome);\n      System.setProperty(\"coreRootDirectory\", jettyHome.toString());\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n                                      \n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome.resolve(\"cores\"));\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      String shardname = \"shard\" + i;\n      Path coresPath = testDir.toPath().resolve(shardname).resolve(\"cores\");\n      writeCoreProperties(coresPath, DEFAULT_TEST_CORENAME);\n      System.setProperty(\"coreRootDirectory\", testDir.toPath().resolve(shardname).toString());\n      JettySolrRunner j = createJetty(new File(getSolrHome()),\n          testDir + \"/shard\" + i + \"/data\", null, getSolrConfigFile(),\n          getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome.resolve(\"cores\"));\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome.resolve(\"cores\"));\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#createServers(int).mjava","sourceNew":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome.resolve(\"cores\"));\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort());\n\n      if (shardStr.endsWith(\"/\")) shardStr += DEFAULT_TEST_CORENAME;\n      else shardStr += \"/\" + DEFAULT_TEST_CORENAME;\n\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  protected void createServers(int numShards) throws Exception {\n\n    System.setProperty(\"configSetBaseDir\", getSolrHome());\n\n    controlJetty = createControlJetty();\n    controlClient = createNewSolrClient(controlJetty.getLocalPort());\n\n    shardsArr = new String[numShards];\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      final String shardname = \"shard\" + i;\n      Path jettyHome = testDir.toPath().resolve(shardname);\n      File jettyHomeFile = jettyHome.toFile();\n      seedSolrHome(jettyHomeFile);\n      seedCoreRootDirWithDefaultTestCore(jettyHome.resolve(\"cores\"));\n      JettySolrRunner j = createJetty(jettyHomeFile, null, null, getSolrConfigFile(), getSchemaFile());\n      j.start();\n      jettys.add(j);\n      clients.add(createNewSolrClient(j.getLocalPort()));\n      String shardStr = buildUrl(j.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME;\n      shardsArr[i] = shardStr;\n      sb.append(shardStr);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"33d0ed80b7b47e34ad3ff033a77544563aba3085":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"8f8b5ba78b252ff57082799d1b662ad3d677ecfc":["33d0ed80b7b47e34ad3ff033a77544563aba3085"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["87e71a21d5a987fc33ae9a0f50353e220e64f2c7"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["bafca15d8e408346a67f4282ad1143b88023893b"],"81ec897f0eb789ef9536a8130d1cdb9337ef108a":["8f8b5ba78b252ff57082799d1b662ad3d677ecfc"],"bafca15d8e408346a67f4282ad1143b88023893b":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","9bc766d645fa848f86c381c7f6acf2c881c99399"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"87e71a21d5a987fc33ae9a0f50353e220e64f2c7":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b06445ae1731e049327712db0454e5643ca9b7fe":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","87e71a21d5a987fc33ae9a0f50353e220e64f2c7"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["81ec897f0eb789ef9536a8130d1cdb9337ef108a"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","33d0ed80b7b47e34ad3ff033a77544563aba3085"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"]},"commit2Childs":{"33d0ed80b7b47e34ad3ff033a77544563aba3085":["8f8b5ba78b252ff57082799d1b662ad3d677ecfc","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"c26f00b574427b55127e869b935845554afde1fa":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"8f8b5ba78b252ff57082799d1b662ad3d677ecfc":["81ec897f0eb789ef9536a8130d1cdb9337ef108a"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"9bc766d645fa848f86c381c7f6acf2c881c99399":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","87e71a21d5a987fc33ae9a0f50353e220e64f2c7","b06445ae1731e049327712db0454e5643ca9b7fe"],"81ec897f0eb789ef9536a8130d1cdb9337ef108a":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"bafca15d8e408346a67f4282ad1143b88023893b":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"87e71a21d5a987fc33ae9a0f50353e220e64f2c7":["9bc766d645fa848f86c381c7f6acf2c881c99399","b06445ae1731e049327712db0454e5643ca9b7fe"],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["bafca15d8e408346a67f4282ad1143b88023893b"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["33d0ed80b7b47e34ad3ff033a77544563aba3085","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0d22ac6a4146774c1bc8400160fc0b6150294e92","b06445ae1731e049327712db0454e5643ca9b7fe","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}