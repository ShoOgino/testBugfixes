{"path":"lucene/core/src/java/org/apache/lucene/geo/Point2D#relateTriangle(double,double,double,double,double,double,double,double,double,double).mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Point2D#relateTriangle(double,double,double,double,double,double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/geo/Point2D#relateTriangle(double,double,double,double,double,double,double,double,double,double).mjava","sourceNew":"  @Override\n  public PointValues.Relation relateTriangle(double minX, double maxX, double minY, double maxY,\n                                             double ax, double ay, double bx, double by, double cx, double cy) {\n    if (Component2D.containsPoint(x, y, minX, maxX, minY, maxY) == false) {\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    }\n    if (ax == bx && bx == cx && ay == by && by == cy) {\n      return  PointValues.Relation.CELL_INSIDE_QUERY;\n    } else if (ax == cx && ay == cy) {\n      // indexed \"triangle\" is a line:\n      if (orient(ax, ay, bx, by, x, y) == 0) {\n        return PointValues.Relation.CELL_INSIDE_QUERY;\n      }\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    } else if (ax == bx && ay == by) {\n      // indexed \"triangle\" is a line:\n      if (orient(bx, by, cx, cy, x, y) == 0) {\n        return PointValues.Relation.CELL_INSIDE_QUERY;\n      }\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    } else if (bx == cx && by == cy) {\n      // indexed \"triangle\" is a line:\n      if (orient(cx, cy, ax, ay, x, y) == 0) {\n        return PointValues.Relation.CELL_INSIDE_QUERY;\n      }\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    } else if (Component2D.pointInTriangle(minX, maxX, minY, maxY, x, y, ax, ay, bx, by, cx, cy) == true) {\n      // indexed \"triangle\" is a triangle:\n      return PointValues.Relation.CELL_INSIDE_QUERY;\n    }\n    return PointValues.Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","sourceOld":"  @Override\n  public PointValues.Relation relateTriangle(double minX, double maxX, double minY, double maxY,\n                                             double ax, double ay, double bx, double by, double cx, double cy) {\n    if (Component2D.containsPoint(x, y, minX, maxX, minY, maxY) == false) {\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    }\n    if (ax == bx && bx == cx && ay == by && by == cy) {\n      return  PointValues.Relation.CELL_INSIDE_QUERY;\n    } else if (ax == cx && ay == cy) {\n      // indexed \"triangle\" is a line:\n      if (orient(ax, ay, bx, by, x, y) == 0) {\n        return PointValues.Relation.CELL_INSIDE_QUERY;\n      }\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    } else if (ax == bx && ay == by) {\n      // indexed \"triangle\" is a line:\n      if (orient(bx, by, cx, cy, x, y) == 0) {\n        return PointValues.Relation.CELL_INSIDE_QUERY;\n      }\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    } else if (bx == cx && by == cy) {\n      // indexed \"triangle\" is a line:\n      if (orient(cx, cy, ax, ay, x, y) == 0) {\n        return PointValues.Relation.CELL_INSIDE_QUERY;\n      }\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    } else if (Component2D.pointInTriangle(minX, maxX, minY, maxY, x, y, ax, ay, bx, by, cx, cy) == true) {\n      // indexed \"triangle\" is a triangle:\n      return PointValues.Relation.CELL_INSIDE_QUERY;\n    }\n    return PointValues.Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"258015480e75238ff7a8d9ebab69c2be37dfa6dc","date":1580796608,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Point2D#relateTriangle(double,double,double,double,double,double,double,double,double,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Point2D#relateTriangle(double,double,double,double,double,double,double,double,double,double).mjava","sourceNew":"  @Override\n  public PointValues.Relation relateTriangle(double minX, double maxX, double minY, double maxY,\n                                             double ax, double ay, double bx, double by, double cx, double cy) {\n    if (ax == bx && bx == cx && ay == by && by == cy) {\n      return contains(ax, ay) ? PointValues.Relation.CELL_INSIDE_QUERY : PointValues.Relation.CELL_OUTSIDE_QUERY;\n    }\n    if (Component2D.pointInTriangle(minX, maxX, minY, maxY, x, y, ax, ay, bx, by, cx, cy)) {\n      return PointValues.Relation.CELL_INSIDE_QUERY;\n    }\n    return PointValues.Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","sourceOld":"  @Override\n  public PointValues.Relation relateTriangle(double minX, double maxX, double minY, double maxY,\n                                             double ax, double ay, double bx, double by, double cx, double cy) {\n    if (Component2D.containsPoint(x, y, minX, maxX, minY, maxY) == false) {\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    }\n    if (ax == bx && bx == cx && ay == by && by == cy) {\n      return  PointValues.Relation.CELL_INSIDE_QUERY;\n    } else if (ax == cx && ay == cy) {\n      // indexed \"triangle\" is a line:\n      if (orient(ax, ay, bx, by, x, y) == 0) {\n        return PointValues.Relation.CELL_INSIDE_QUERY;\n      }\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    } else if (ax == bx && ay == by) {\n      // indexed \"triangle\" is a line:\n      if (orient(bx, by, cx, cy, x, y) == 0) {\n        return PointValues.Relation.CELL_INSIDE_QUERY;\n      }\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    } else if (bx == cx && by == cy) {\n      // indexed \"triangle\" is a line:\n      if (orient(cx, cy, ax, ay, x, y) == 0) {\n        return PointValues.Relation.CELL_INSIDE_QUERY;\n      }\n      return PointValues.Relation.CELL_OUTSIDE_QUERY;\n    } else if (Component2D.pointInTriangle(minX, maxX, minY, maxY, x, y, ax, ay, bx, by, cx, cy) == true) {\n      // indexed \"triangle\" is a triangle:\n      return PointValues.Relation.CELL_INSIDE_QUERY;\n    }\n    return PointValues.Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc267aea799a242dd6aef41d0e73a6b73534f30d","date":1581696393,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Point2D#relateTriangle(double,double,double,double,double,double,double,double,double,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Point2D#relateTriangle(double,double,double,double,double,double,double,double,double,double).mjava","sourceNew":"  @Override\n  public PointValues.Relation relateTriangle(double minX, double maxX, double minY, double maxY,\n                                             double ax, double ay, double bx, double by, double cx, double cy) {\n    if (ax == bx && bx == cx && ay == by && by == cy) {\n      return contains(ax, ay) ? PointValues.Relation.CELL_INSIDE_QUERY : PointValues.Relation.CELL_OUTSIDE_QUERY;\n    }\n    if (Component2D.pointInTriangle(minX, maxX, minY, maxY, x, y, ax, ay, bx, by, cx, cy)) {\n      return PointValues.Relation.CELL_CROSSES_QUERY;\n    }\n    return PointValues.Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","sourceOld":"  @Override\n  public PointValues.Relation relateTriangle(double minX, double maxX, double minY, double maxY,\n                                             double ax, double ay, double bx, double by, double cx, double cy) {\n    if (ax == bx && bx == cx && ay == by && by == cy) {\n      return contains(ax, ay) ? PointValues.Relation.CELL_INSIDE_QUERY : PointValues.Relation.CELL_OUTSIDE_QUERY;\n    }\n    if (Component2D.pointInTriangle(minX, maxX, minY, maxY, x, y, ax, ay, bx, by, cx, cy)) {\n      return PointValues.Relation.CELL_INSIDE_QUERY;\n    }\n    return PointValues.Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c568a1e2a5125c2245150eebb030a81baa158b31","date":1587403489,"type":4,"author":"Ignacio Vera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Point2D#relateTriangle(double,double,double,double,double,double,double,double,double,double).mjava","sourceNew":null,"sourceOld":"  @Override\n  public PointValues.Relation relateTriangle(double minX, double maxX, double minY, double maxY,\n                                             double ax, double ay, double bx, double by, double cx, double cy) {\n    if (ax == bx && bx == cx && ay == by && by == cy) {\n      return contains(ax, ay) ? PointValues.Relation.CELL_INSIDE_QUERY : PointValues.Relation.CELL_OUTSIDE_QUERY;\n    }\n    if (Component2D.pointInTriangle(minX, maxX, minY, maxY, x, y, ax, ay, bx, by, cx, cy)) {\n      return PointValues.Relation.CELL_CROSSES_QUERY;\n    }\n    return PointValues.Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c568a1e2a5125c2245150eebb030a81baa158b31":["bc267aea799a242dd6aef41d0e73a6b73534f30d"],"bc267aea799a242dd6aef41d0e73a6b73534f30d":["258015480e75238ff7a8d9ebab69c2be37dfa6dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"258015480e75238ff7a8d9ebab69c2be37dfa6dc":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c568a1e2a5125c2245150eebb030a81baa158b31"]},"commit2Childs":{"c568a1e2a5125c2245150eebb030a81baa158b31":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bc267aea799a242dd6aef41d0e73a6b73534f30d":["c568a1e2a5125c2245150eebb030a81baa158b31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"258015480e75238ff7a8d9ebab69c2be37dfa6dc":["bc267aea799a242dd6aef41d0e73a6b73534f30d"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["258015480e75238ff7a8d9ebab69c2be37dfa6dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}