{"path":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","commits":[{"id":"dca593206e9e07eee9839b23d0c0b435915af416","date":1046539941,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","pathOld":"/dev/null","sourceNew":"    private RAMDirectory getIndexStore(String field, String[] contents)\n\tthrows IOException\n    {\n        RAMDirectory indexStore = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(), true);\n\tfor (int i = 0; i < contents.length; ++i) {\n\t    Document doc = new Document();\n\t    doc.add(Field.Text(field, contents[i]));\n\t    writer.addDocument(doc);\n\t}\n\twriter.optimize();\n\twriter.close();\n\n\treturn indexStore;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"773e104db917d6cc9acade5a8aeb91a886192b99","date":1094581596,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","sourceNew":"    private RAMDirectory getIndexStore(String field, String[] contents)\n\tthrows IOException\n    {\n        RAMDirectory indexStore = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(), true);\n\tfor (int i = 0; i < contents.length; ++i) {\n\t    Document doc = new Document();\n\t    doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.TOKENIZED));\n\t    writer.addDocument(doc);\n\t}\n\twriter.optimize();\n\twriter.close();\n\n\treturn indexStore;\n    }\n\n","sourceOld":"    private RAMDirectory getIndexStore(String field, String[] contents)\n\tthrows IOException\n    {\n        RAMDirectory indexStore = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(), true);\n\tfor (int i = 0; i < contents.length; ++i) {\n\t    Document doc = new Document();\n\t    doc.add(Field.Text(field, contents[i]));\n\t    writer.addDocument(doc);\n\t}\n\twriter.optimize();\n\twriter.close();\n\n\treturn indexStore;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fb70d5d797131bf722eac86615eae787b5af9ea","date":1112363464,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","sourceNew":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(), true);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","sourceOld":"    private RAMDirectory getIndexStore(String field, String[] contents)\n\tthrows IOException\n    {\n        RAMDirectory indexStore = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(), true);\n\tfor (int i = 0; i < contents.length; ++i) {\n\t    Document doc = new Document();\n\t    doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.TOKENIZED));\n\t    writer.addDocument(doc);\n\t}\n\twriter.optimize();\n\twriter.close();\n\n\treturn indexStore;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","sourceNew":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","sourceOld":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(), true);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","sourceNew":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","sourceOld":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","sourceNew":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","sourceOld":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","sourceNew":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","sourceOld":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","sourceNew":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","sourceOld":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","sourceNew":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","sourceOld":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","sourceNew":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","sourceOld":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestWildcard#getIndexStore(String,String[]).mjava","sourceNew":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","sourceOld":"  private RAMDirectory getIndexStore(String field, String[] contents)\n      throws IOException {\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    for (int i = 0; i < contents.length; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(field, contents[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    return indexStore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1fb70d5d797131bf722eac86615eae787b5af9ea":["773e104db917d6cc9acade5a8aeb91a886192b99"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["1fb70d5d797131bf722eac86615eae787b5af9ea"],"dca593206e9e07eee9839b23d0c0b435915af416":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"773e104db917d6cc9acade5a8aeb91a886192b99":["dca593206e9e07eee9839b23d0c0b435915af416"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"1fb70d5d797131bf722eac86615eae787b5af9ea":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"dca593206e9e07eee9839b23d0c0b435915af416":["773e104db917d6cc9acade5a8aeb91a886192b99"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dca593206e9e07eee9839b23d0c0b435915af416"],"773e104db917d6cc9acade5a8aeb91a886192b99":["1fb70d5d797131bf722eac86615eae787b5af9ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}