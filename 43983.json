{"path":"src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#setNextReader(IndexReader,int,int).mjava","commits":[{"id":"ac3e6437547a34cce2b5405ce0cf9e3af578401e","date":1243373693,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#setNextReader(IndexReader,int,int).mjava","pathOld":"/dev/null","sourceNew":"    public void setNextReader(IndexReader reader, int docBase,  int numSlotsFull) throws IOException {\n      FieldCache.StringIndex currentReaderValues = ExtendedFieldCache.EXT_DEFAULT.getStringIndex(reader, field);\n      currentReaderGen++;\n      order = currentReaderValues.order;\n      lookup = currentReaderValues.lookup;\n      assert lookup.length > 0;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e0945a9de8b2a395c812a3566756108b3e67b05","date":1243456962,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#setNextReader(IndexReader,int,int).mjava","pathOld":"src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#setNextReader(IndexReader,int,int).mjava","sourceNew":"    public void setNextReader(IndexReader reader, int docBase,  int numSlotsFull) throws IOException {\n      FieldCache.StringIndex currentReaderValues = FieldCache.DEFAULT.getStringIndex(reader, field);\n      currentReaderGen++;\n      order = currentReaderValues.order;\n      lookup = currentReaderValues.lookup;\n      assert lookup.length > 0;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","sourceOld":"    public void setNextReader(IndexReader reader, int docBase,  int numSlotsFull) throws IOException {\n      FieldCache.StringIndex currentReaderValues = ExtendedFieldCache.EXT_DEFAULT.getStringIndex(reader, field);\n      currentReaderGen++;\n      order = currentReaderValues.order;\n      lookup = currentReaderValues.lookup;\n      assert lookup.length > 0;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c20f931a6f10b153366015604398a5eb7a4d17fa","date":1249615266,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#setNextReader(IndexReader,int).mjava","pathOld":"src/java/org/apache/solr/search/MissingLastOrdComparator[MissingStringLastComparatorSource]#setNextReader(IndexReader,int,int).mjava","sourceNew":"    public void setNextReader(IndexReader reader, int docBase) throws IOException {\n      FieldCache.StringIndex currentReaderValues = FieldCache.DEFAULT.getStringIndex(reader, field);\n      currentReaderGen++;\n      order = currentReaderValues.order;\n      lookup = currentReaderValues.lookup;\n      assert lookup.length > 0;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","sourceOld":"    public void setNextReader(IndexReader reader, int docBase,  int numSlotsFull) throws IOException {\n      FieldCache.StringIndex currentReaderValues = FieldCache.DEFAULT.getStringIndex(reader, field);\n      currentReaderGen++;\n      order = currentReaderValues.order;\n      lookup = currentReaderValues.lookup;\n      assert lookup.length > 0;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c20f931a6f10b153366015604398a5eb7a4d17fa":["5e0945a9de8b2a395c812a3566756108b3e67b05"],"ac3e6437547a34cce2b5405ce0cf9e3af578401e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"5e0945a9de8b2a395c812a3566756108b3e67b05":["ac3e6437547a34cce2b5405ce0cf9e3af578401e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c20f931a6f10b153366015604398a5eb7a4d17fa":[],"ac3e6437547a34cce2b5405ce0cf9e3af578401e":["5e0945a9de8b2a395c812a3566756108b3e67b05"],"5e0945a9de8b2a395c812a3566756108b3e67b05":["c20f931a6f10b153366015604398a5eb7a4d17fa"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ac3e6437547a34cce2b5405ce0cf9e3af578401e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c20f931a6f10b153366015604398a5eb7a4d17fa","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}