{"path":"lucene/misc/src/test/org/apache/lucene/document/TestInetAddressPoint#testNextUp().mjava","commits":[{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/document/TestInetAddressPoint#testNextUp().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestInetAddressPoint#testNextUp().mjava","sourceNew":"  public void testNextUp() throws Exception {\n    assertEquals(InetAddress.getByName(\"::1\"),\n        InetAddressPoint.nextUp(InetAddress.getByName(\"::\")));\n\n    assertEquals(InetAddress.getByName(\"::1:0\"),\n        InetAddressPoint.nextUp(InetAddress.getByName(\"::ffff\")));\n\n    assertEquals(InetAddress.getByName(\"1.2.4.0\"),\n        InetAddressPoint.nextUp(InetAddress.getByName(\"1.2.3.255\")));\n\n    assertEquals(InetAddress.getByName(\"0.0.0.0\"),\n        InetAddressPoint.nextUp(InetAddress.getByName(\"::fffe:ffff:ffff\")));\n\n    assertEquals(InetAddress.getByName(\"::1:0:0:0\"),\n        InetAddressPoint.nextUp(InetAddress.getByName(\"255.255.255.255\")));\n\n    ArithmeticException e = expectThrows(ArithmeticException.class,\n        () -> InetAddressPoint.nextUp(InetAddress.getByName(\"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\")));\n    assertEquals(\"Overflow: there is no greater InetAddress than ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\", e.getMessage());\n  }\n\n","sourceOld":"  public void testNextUp() throws Exception {\n    assertEquals(InetAddress.getByName(\"::1\"),\n        InetAddressPoint.nextUp(InetAddress.getByName(\"::\")));\n\n    assertEquals(InetAddress.getByName(\"::1:0\"),\n        InetAddressPoint.nextUp(InetAddress.getByName(\"::ffff\")));\n\n    assertEquals(InetAddress.getByName(\"1.2.4.0\"),\n        InetAddressPoint.nextUp(InetAddress.getByName(\"1.2.3.255\")));\n\n    assertEquals(InetAddress.getByName(\"0.0.0.0\"),\n        InetAddressPoint.nextUp(InetAddress.getByName(\"::fffe:ffff:ffff\")));\n\n    assertEquals(InetAddress.getByName(\"::1:0:0:0\"),\n        InetAddressPoint.nextUp(InetAddress.getByName(\"255.255.255.255\")));\n\n    ArithmeticException e = expectThrows(ArithmeticException.class,\n        () -> InetAddressPoint.nextUp(InetAddress.getByName(\"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\")));\n    assertEquals(\"Overflow: there is no greater InetAddress than ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\", e.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a52b01a73cacbd2d360240e72d64c0ba353618f"]},"commit2Childs":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a52b01a73cacbd2d360240e72d64c0ba353618f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}