{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,GeoPointDistanceQuery,double,Rectangle).mjava","commits":[{"id":"be46ccf1a05985ba9fec84cb8674b607a23d5442","date":1465576866,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,GeoPointDistanceQuery,double,Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,Rectangle).mjava","sourceNew":"  GeoPointDistanceQueryImpl(final String field, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final Rectangle bbox) {\n    super(field, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n\n    // unless our box is crazy, we can use this bound\n    // to reject edge cases faster in postFilter()\n    if (bbox.maxLon - centerLon < 90 && centerLon - bbox.minLon < 90) {\n      maxPartialDistance = Math.max(SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, distanceQuery.centerLat, bbox.maxLon),\n                                    SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, bbox.maxLat, centerLon));\n    } else {\n      maxPartialDistance = Double.POSITIVE_INFINITY;\n    }\n    axisLat = Rectangle.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","sourceOld":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final Rectangle bbox) {\n    super(field, termEncoding, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n\n    // unless our box is crazy, we can use this bound\n    // to reject edge cases faster in postFilter()\n    if (bbox.maxLon - centerLon < 90 && centerLon - bbox.minLon < 90) {\n      maxPartialDistance = Math.max(SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, distanceQuery.centerLat, bbox.maxLon),\n                                    SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, bbox.maxLat, centerLon));\n    } else {\n      maxPartialDistance = Double.POSITIVE_INFINITY;\n    }\n    axisLat = Rectangle.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a62e86d7b9cc6dec3c09f771166aa2393fd95c99","date":1466437108,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,GeoPointDistanceQuery,double,Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,GeoPointDistanceQuery,double,Rectangle).mjava","sourceNew":"  GeoPointDistanceQueryImpl(final String field, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final Rectangle bbox) {\n    super(field, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n    axisLat = Rectangle.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","sourceOld":"  GeoPointDistanceQueryImpl(final String field, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final Rectangle bbox) {\n    super(field, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n\n    // unless our box is crazy, we can use this bound\n    // to reject edge cases faster in postFilter()\n    if (bbox.maxLon - centerLon < 90 && centerLon - bbox.minLon < 90) {\n      maxPartialDistance = Math.max(SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, distanceQuery.centerLat, bbox.maxLon),\n                                    SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, bbox.maxLat, centerLon));\n    } else {\n      maxPartialDistance = Double.POSITIVE_INFINITY;\n    }\n    axisLat = Rectangle.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6aaba221b22442bdf0ef28770c25fe259dfb3f55","date":1466496193,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,GeoPointDistanceQuery,double,Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,GeoPointDistanceQuery,double,Rectangle).mjava","sourceNew":"  GeoPointDistanceQueryImpl(final String field, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final Rectangle bbox) {\n    super(field, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n    axisLat = Rectangle.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","sourceOld":"  GeoPointDistanceQueryImpl(final String field, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final Rectangle bbox) {\n    super(field, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n\n    // unless our box is crazy, we can use this bound\n    // to reject edge cases faster in postFilter()\n    if (bbox.maxLon - centerLon < 90 && centerLon - bbox.minLon < 90) {\n      maxPartialDistance = Math.max(SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, distanceQuery.centerLat, bbox.maxLon),\n                                    SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, bbox.maxLat, centerLon));\n    } else {\n      maxPartialDistance = Double.POSITIVE_INFINITY;\n    }\n    axisLat = Rectangle.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,GeoPointDistanceQuery,double,Rectangle).mjava","pathOld":"/dev/null","sourceNew":"  GeoPointDistanceQueryImpl(final String field, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final Rectangle bbox) {\n    super(field, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n    axisLat = Rectangle.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc53adde67e2fa905526fcf1e14e3c9e1e64821","date":1486416055,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,GeoPointDistanceQuery,double,Rectangle).mjava","sourceNew":null,"sourceOld":"  GeoPointDistanceQueryImpl(final String field, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final Rectangle bbox) {\n    super(field, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n    axisLat = Rectangle.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7dc53adde67e2fa905526fcf1e14e3c9e1e64821":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"a62e86d7b9cc6dec3c09f771166aa2393fd95c99":["be46ccf1a05985ba9fec84cb8674b607a23d5442"],"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["be46ccf1a05985ba9fec84cb8674b607a23d5442","a62e86d7b9cc6dec3c09f771166aa2393fd95c99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be46ccf1a05985ba9fec84cb8674b607a23d5442":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc53adde67e2fa905526fcf1e14e3c9e1e64821"]},"commit2Childs":{"7dc53adde67e2fa905526fcf1e14e3c9e1e64821":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a62e86d7b9cc6dec3c09f771166aa2393fd95c99":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["7dc53adde67e2fa905526fcf1e14e3c9e1e64821","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be46ccf1a05985ba9fec84cb8674b607a23d5442","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"be46ccf1a05985ba9fec84cb8674b607a23d5442":["a62e86d7b9cc6dec3c09f771166aa2393fd95c99","6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}