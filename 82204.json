{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","commits":[{"id":"038e2a9b07e2f8ae58336613cea227bf8b973484","date":1346850972,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","sourceNew":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n    }\n\n","sourceOld":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","date":1377268487,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","sourceNew":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n    }\n\n","sourceOld":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":5,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","sourceNew":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n    }\n\n","sourceOld":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb77022ef17ff655c519a3f6ecd393747ac88bcf","date":1578579386,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int,int).mjava","sourceNew":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n    }\n\n","sourceOld":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06ab276a5660cb79daae8c5ede063531c700a03a","date":1578587874,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","sourceNew":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n    }\n\n","sourceOld":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08a5168e06e037794c0aba7f94f76ff3c09704d2","date":1579264785,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int,int).mjava","sourceNew":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n    }\n\n","sourceOld":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb77022ef17ff655c519a3f6ecd393747ac88bcf":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"08a5168e06e037794c0aba7f94f76ff3c09704d2":["06ab276a5660cb79daae8c5ede063531c700a03a"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["038e2a9b07e2f8ae58336613cea227bf8b973484","1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["08a5168e06e037794c0aba7f94f76ff3c09704d2"],"06ab276a5660cb79daae8c5ede063531c700a03a":["cb77022ef17ff655c519a3f6ecd393747ac88bcf"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"cb77022ef17ff655c519a3f6ecd393747ac88bcf":["06ab276a5660cb79daae8c5ede063531c700a03a"],"08a5168e06e037794c0aba7f94f76ff3c09704d2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["cb77022ef17ff655c519a3f6ecd393747ac88bcf"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","2f948dd442d23baa6cbb28daf77c8db78b351329"],"06ab276a5660cb79daae8c5ede063531c700a03a":["08a5168e06e037794c0aba7f94f76ff3c09704d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}