{"path":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"438e995b4e32916f631722aab36254146830fefb","date":1328903827,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getSegmentsFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fba839b7548159227edcb740033d0f814b323d8d","date":1424455904,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getSegmentsFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(true));\n      segmentCount = segmentInfos.size();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getSegmentsFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"618635065f043788c9e034f96ca5cd5cea1b4592","date":1433442044,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directoryOrig, SegmentInfos segmentInfos) throws IOException {\n      this.directoryOrig = directoryOrig;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getSegmentsFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(true));\n      segmentCount = segmentInfos.size();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getSegmentsFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(true));\n      segmentCount = segmentInfos.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"618635065f043788c9e034f96ca5cd5cea1b4592":["fba839b7548159227edcb740033d0f814b323d8d"],"fba839b7548159227edcb740033d0f814b323d8d":["438e995b4e32916f631722aab36254146830fefb"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"438e995b4e32916f631722aab36254146830fefb":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["618635065f043788c9e034f96ca5cd5cea1b4592"]},"commit2Childs":{"618635065f043788c9e034f96ca5cd5cea1b4592":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fba839b7548159227edcb740033d0f814b323d8d":["618635065f043788c9e034f96ca5cd5cea1b4592"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["438e995b4e32916f631722aab36254146830fefb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"438e995b4e32916f631722aab36254146830fefb":["fba839b7548159227edcb740033d0f814b323d8d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}