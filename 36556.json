{"path":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","commits":[{"id":"cc3d73ce4049cb1520abaaae57fe8267639bda1d","date":1470181330,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","pathOld":"/dev/null","sourceNew":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    solrClient.close();\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["21dce54fa5b372eb86d4e848173dad023c2c61d5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","pathOld":"/dev/null","sourceNew":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    solrClient.close();\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21dce54fa5b372eb86d4e848173dad023c2c61d5","date":1472927430,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","sourceNew":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    if (solrClient != null) {\n      solrClient.close();\n    }\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","sourceOld":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    solrClient.close();\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","bugFix":["cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc8f206328a706450934717bec7ccc22ad166fc0","date":1473142172,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","sourceNew":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    if (solrClient != null) {\n      solrClient.close();\n    }\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","sourceOld":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    solrClient.close();\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","sourceNew":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    if (solrClient != null) {\n      solrClient.close();\n    }\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","sourceOld":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    solrClient.close();\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","sourceNew":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    if (solrClient != null) {\n      solrClient.close();\n    }\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","sourceOld":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    solrClient.close();\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","pathOld":"/dev/null","sourceNew":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    if (solrClient != null) {\n      solrClient.close();\n    }\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29887daf839649150d96855b142b76f5c45d60d2","date":1482160504,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","sourceNew":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    if (solrClient != null) {\n      solrClient.close();\n    }\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    System.clearProperty(\"collectionsHandler\");\n\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","sourceOld":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    if (solrClient != null) {\n      solrClient.close();\n    }\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","sourceNew":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    if (solrClient != null) {\n      solrClient.close();\n    }\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    System.clearProperty(\"collectionsHandler\");\n\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","sourceOld":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    if (solrClient != null) {\n      solrClient.close();\n    }\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e614eceb81b081076e753ed62268c93c8a2a28e","date":1576119727,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","sourceNew":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (solrClient != null) {\n      IOUtils.closeQuietly(solrClient);\n      solrClient = null;\n    }\n    try {\n      if (miniCluster != null) {\n        miniCluster.shutdown();\n      }\n    } finally {\n      miniCluster = null;\n      System.clearProperty(\"authenticationPlugin\");\n      System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n      System.clearProperty(\"solr.kerberos.cookie.domain\");\n      Map<String, String> impSettings = getImpersonatorSettings();\n      for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n        System.clearProperty(entry.getKey());\n      }\n      System.clearProperty(\"solr.test.sys.prop1\");\n      System.clearProperty(\"solr.test.sys.prop2\");\n      System.clearProperty(\"collectionsHandler\");\n\n      SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n    }\n  }\n\n","sourceOld":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    if (solrClient != null) {\n      solrClient.close();\n    }\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    System.clearProperty(\"collectionsHandler\");\n\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#shutdown().mjava","sourceNew":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (solrClient != null) {\n      IOUtils.closeQuietly(solrClient);\n      solrClient = null;\n    }\n    try {\n      if (miniCluster != null) {\n        miniCluster.shutdown();\n      }\n    } finally {\n      miniCluster = null;\n      System.clearProperty(\"authenticationPlugin\");\n      System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n      System.clearProperty(\"solr.kerberos.cookie.domain\");\n      Map<String, String> impSettings = getImpersonatorSettings();\n      for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n        System.clearProperty(entry.getKey());\n      }\n      System.clearProperty(\"solr.test.sys.prop1\");\n      System.clearProperty(\"solr.test.sys.prop2\");\n      System.clearProperty(\"collectionsHandler\");\n\n      SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n    }\n  }\n\n","sourceOld":"  @AfterClass\n  public static void shutdown() throws Exception {\n    if (miniCluster != null) {\n      miniCluster.shutdown();\n    }\n    miniCluster = null;\n    if (solrClient != null) {\n      solrClient.close();\n    }\n    solrClient = null;\n    System.clearProperty(\"authenticationPlugin\");\n    System.clearProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED);\n    System.clearProperty(\"solr.kerberos.cookie.domain\");\n    Map<String, String> impSettings = getImpersonatorSettings();\n    for (Map.Entry<String, String> entry : impSettings.entrySet()) {\n      System.clearProperty(entry.getKey());\n    }\n    System.clearProperty(\"solr.test.sys.prop1\");\n    System.clearProperty(\"solr.test.sys.prop2\");\n    System.clearProperty(\"collectionsHandler\");\n\n    SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e614eceb81b081076e753ed62268c93c8a2a28e":["29887daf839649150d96855b142b76f5c45d60d2"],"29887daf839649150d96855b142b76f5c45d60d2":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"21dce54fa5b372eb86d4e848173dad023c2c61d5":["cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"bc8f206328a706450934717bec7ccc22ad166fc0":["cc3d73ce4049cb1520abaaae57fe8267639bda1d","21dce54fa5b372eb86d4e848173dad023c2c61d5"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"89424def13674ea17829b41c5883c54ecc31a132":["cc3d73ce4049cb1520abaaae57fe8267639bda1d","bc8f206328a706450934717bec7ccc22ad166fc0"],"df724d84dab24a0cc54bec95a8680867adc7f171":["29887daf839649150d96855b142b76f5c45d60d2","7e614eceb81b081076e753ed62268c93c8a2a28e"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","29887daf839649150d96855b142b76f5c45d60d2"],"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["cc3d73ce4049cb1520abaaae57fe8267639bda1d","89424def13674ea17829b41c5883c54ecc31a132"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e614eceb81b081076e753ed62268c93c8a2a28e"]},"commit2Childs":{"7e614eceb81b081076e753ed62268c93c8a2a28e":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29887daf839649150d96855b142b76f5c45d60d2":["7e614eceb81b081076e753ed62268c93c8a2a28e","df724d84dab24a0cc54bec95a8680867adc7f171","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"21dce54fa5b372eb86d4e848173dad023c2c61d5":["bc8f206328a706450934717bec7ccc22ad166fc0"],"bc8f206328a706450934717bec7ccc22ad166fc0":["89424def13674ea17829b41c5883c54ecc31a132"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"df724d84dab24a0cc54bec95a8680867adc7f171":[],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["21dce54fa5b372eb86d4e848173dad023c2c61d5","bc8f206328a706450934717bec7ccc22ad166fc0","89424def13674ea17829b41c5883c54ecc31a132","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["29887daf839649150d96855b142b76f5c45d60d2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cc3d73ce4049cb1520abaaae57fe8267639bda1d","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}