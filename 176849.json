{"path":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals#testTermDocs(Directory,InstantiatedIndex).mjava","commits":[{"id":"e7a005111928c661ab5d236ed6a3a079b438d2cf","date":1205411670,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals#testTermDocs(Directory,InstantiatedIndex).mjava","pathOld":"/dev/null","sourceNew":"  private void testTermDocs(Directory aprioriIndex, InstantiatedIndex testIndex) throws Exception {\n\n    IndexReader aprioriReader = IndexReader.open(aprioriIndex);\n    IndexReader testReader = testIndex.indexReaderFactory();\n\n    TermEnum aprioriTermEnum = aprioriReader.terms(new Term(\"c\", \"danny\"));\n\n    TermDocs aprioriTermDocs = aprioriReader.termDocs(aprioriTermEnum.term());\n    TermDocs testTermDocs = testReader.termDocs(aprioriTermEnum.term());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(100), testTermDocs.skipTo(100));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(110), testTermDocs.skipTo(110));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(10), testTermDocs.skipTo(10));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(210), testTermDocs.skipTo(210));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    aprioriTermDocs.close();\n    aprioriReader.close();\n\n    testTermDocs.close();\n    testReader.close();\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals#testTermDocs(Directory,InstantiatedIndex).mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals#testTermDocs(Directory,InstantiatedIndex).mjava","sourceNew":"  private void testTermDocs(Directory aprioriIndex, InstantiatedIndex testIndex) throws Exception {\n\n    IndexReader aprioriReader = IndexReader.open(aprioriIndex, false);\n    IndexReader testReader = testIndex.indexReaderFactory();\n\n    TermEnum aprioriTermEnum = aprioriReader.terms(new Term(\"c\", \"danny\"));\n\n    TermDocs aprioriTermDocs = aprioriReader.termDocs(aprioriTermEnum.term());\n    TermDocs testTermDocs = testReader.termDocs(aprioriTermEnum.term());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(100), testTermDocs.skipTo(100));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(110), testTermDocs.skipTo(110));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(10), testTermDocs.skipTo(10));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(210), testTermDocs.skipTo(210));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    aprioriTermDocs.close();\n    aprioriReader.close();\n\n    testTermDocs.close();\n    testReader.close();\n\n  }\n\n","sourceOld":"  private void testTermDocs(Directory aprioriIndex, InstantiatedIndex testIndex) throws Exception {\n\n    IndexReader aprioriReader = IndexReader.open(aprioriIndex);\n    IndexReader testReader = testIndex.indexReaderFactory();\n\n    TermEnum aprioriTermEnum = aprioriReader.terms(new Term(\"c\", \"danny\"));\n\n    TermDocs aprioriTermDocs = aprioriReader.termDocs(aprioriTermEnum.term());\n    TermDocs testTermDocs = testReader.termDocs(aprioriTermEnum.term());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(100), testTermDocs.skipTo(100));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(110), testTermDocs.skipTo(110));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(10), testTermDocs.skipTo(10));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(210), testTermDocs.skipTo(210));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    aprioriTermDocs.close();\n    aprioriReader.close();\n\n    testTermDocs.close();\n    testReader.close();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c41356c8a19fd7493940c7a1d798ede2fe03ddf8","date":1260481087,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals#testTermDocs(Directory,InstantiatedIndex).mjava","sourceNew":null,"sourceOld":"  private void testTermDocs(Directory aprioriIndex, InstantiatedIndex testIndex) throws Exception {\n\n    IndexReader aprioriReader = IndexReader.open(aprioriIndex, false);\n    IndexReader testReader = testIndex.indexReaderFactory();\n\n    TermEnum aprioriTermEnum = aprioriReader.terms(new Term(\"c\", \"danny\"));\n\n    TermDocs aprioriTermDocs = aprioriReader.termDocs(aprioriTermEnum.term());\n    TermDocs testTermDocs = testReader.termDocs(aprioriTermEnum.term());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(100), testTermDocs.skipTo(100));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.next(), testTermDocs.next());\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(110), testTermDocs.skipTo(110));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(10), testTermDocs.skipTo(10));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    assertEquals(aprioriTermDocs.skipTo(210), testTermDocs.skipTo(210));\n    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());\n\n    aprioriTermDocs.close();\n    aprioriReader.close();\n\n    testTermDocs.close();\n    testReader.close();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c41356c8a19fd7493940c7a1d798ede2fe03ddf8":["4256bc1b3c94786287ccdfc751230374521843cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e7a005111928c661ab5d236ed6a3a079b438d2cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4256bc1b3c94786287ccdfc751230374521843cf":["e7a005111928c661ab5d236ed6a3a079b438d2cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c41356c8a19fd7493940c7a1d798ede2fe03ddf8"]},"commit2Childs":{"c41356c8a19fd7493940c7a1d798ede2fe03ddf8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e7a005111928c661ab5d236ed6a3a079b438d2cf"],"e7a005111928c661ab5d236ed6a3a079b438d2cf":["4256bc1b3c94786287ccdfc751230374521843cf"],"4256bc1b3c94786287ccdfc751230374521843cf":["c41356c8a19fd7493940c7a1d798ede2fe03ddf8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}