{"path":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/Segmenter#tokenize(String).mjava","commits":[{"id":"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","date":1326399048,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/Segmenter#tokenize(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Tokenize input text\n   * @param text\n   * @return list of Token\n   */\n  public List<Token> tokenize(String text) {\n    \n    if (!split) {\n      return doTokenize(0, text);\t\t\t\n    }\n    \n    List<Integer> splitPositions = getSplitPositions(text);\n    \n    if(splitPositions.size() == 0) {\n      return doTokenize(0, text);\n    }\n    \n    ArrayList<Token> result = new ArrayList<Token>();\n    int offset = 0;\n    for(int position : splitPositions) {\n      result.addAll(doTokenize(offset, text.substring(offset, position + 1)));\n      offset = position + 1;\n    }\n    \n    if(offset < text.length()) {\n      result.addAll(doTokenize(offset, text.substring(offset)));\n    }\n    \n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0984ad47974c2d5d354519ddb2aa8358973a6271","date":1330868053,"type":4,"author":"Christian Moen","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/Segmenter#tokenize(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Tokenize input text\n   * @param text\n   * @return list of Token\n   */\n  public List<Token> tokenize(String text) {\n    \n    if (!split) {\n      return doTokenize(0, text);\t\t\t\n    }\n    \n    List<Integer> splitPositions = getSplitPositions(text);\n    \n    if(splitPositions.size() == 0) {\n      return doTokenize(0, text);\n    }\n    \n    ArrayList<Token> result = new ArrayList<Token>();\n    int offset = 0;\n    for(int position : splitPositions) {\n      result.addAll(doTokenize(offset, text.substring(offset, position + 1)));\n      offset = position + 1;\n    }\n    \n    if(offset < text.length()) {\n      result.addAll(doTokenize(offset, text.substring(offset)));\n    }\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/Segmenter#tokenize(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Tokenize input text\n   * @param text\n   * @return list of Token\n   */\n  public List<Token> tokenize(String text) {\n    \n    if (!split) {\n      return doTokenize(0, text);\t\t\t\n    }\n    \n    List<Integer> splitPositions = getSplitPositions(text);\n    \n    if(splitPositions.size() == 0) {\n      return doTokenize(0, text);\n    }\n    \n    ArrayList<Token> result = new ArrayList<Token>();\n    int offset = 0;\n    for(int position : splitPositions) {\n      result.addAll(doTokenize(offset, text.substring(offset, position + 1)));\n      offset = position + 1;\n    }\n    \n    if(offset < text.length()) {\n      result.addAll(doTokenize(offset, text.substring(offset)));\n    }\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","0984ad47974c2d5d354519ddb2aa8358973a6271"],"0984ad47974c2d5d354519ddb2aa8358973a6271":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0984ad47974c2d5d354519ddb2aa8358973a6271"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"0984ad47974c2d5d354519ddb2aa8358973a6271":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","0984ad47974c2d5d354519ddb2aa8358973a6271"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}