{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#close().mjava","commits":[{"id":"5ad80176d91a6f70fe93880e43dfd697dc4e63ed","date":1400176913,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(in, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(in, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(in, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(in, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6d238816bcdf9bbe4ec886226d89bd93834eb7e","date":1413925889,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(termsIn, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(in, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(termsIn, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(in, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcc12263939c1d6c4b4a2015f67d1b6d97f375a4","date":1550598742,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(indexIn, termsIn, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(termsIn, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6071cfb20c18ef694430df7330bc1aaa5e08667","date":1575293424,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(indexIn, termsIn, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fieldMap.clear();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(indexIn, termsIn, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c6d238816bcdf9bbe4ec886226d89bd93834eb7e":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a6071cfb20c18ef694430df7330bc1aaa5e08667":["dcc12263939c1d6c4b4a2015f67d1b6d97f375a4"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["4d637064d608752565d4f9f41b2497dfdfdde50e","c6d238816bcdf9bbe4ec886226d89bd93834eb7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a6071cfb20c18ef694430df7330bc1aaa5e08667"],"dcc12263939c1d6c4b4a2015f67d1b6d97f375a4":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"]},"commit2Childs":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["c6d238816bcdf9bbe4ec886226d89bd93834eb7e","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"c6d238816bcdf9bbe4ec886226d89bd93834eb7e":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d637064d608752565d4f9f41b2497dfdfdde50e","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"a6071cfb20c18ef694430df7330bc1aaa5e08667":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["dcc12263939c1d6c4b4a2015f67d1b6d97f375a4"],"dcc12263939c1d6c4b4a2015f67d1b6d97f375a4":["a6071cfb20c18ef694430df7330bc1aaa5e08667"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}