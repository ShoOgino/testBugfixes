{"path":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity.ConfigSetsAPIThread#run().mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity.ConfigSetsAPIThread#run().mjava","pathOld":"/dev/null","sourceNew":"    public void run() {\n      final SolrClient solrClient =\n          new HttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n      ConfigSetAdminRequest request = createRequest();\n\n      for (int i = 0; i < trials; ++i) {\n        try {\n          request.process(solrClient);\n        } catch (Exception e) {\n          verifyException(e);\n        }\n      }\n      try {\n        solrClient.close();\n      } catch (Exception e) {\n        log.error(\"Error closing client\", e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity.ConfigSetsAPIThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity.ConfigSetsAPIThread#run().mjava","sourceNew":"    public void run() {\n      final String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n      final SolrClient solrClient = getHttpSolrClient(baseUrl);\n      ConfigSetAdminRequest request = createRequest();\n\n      for (int i = 0; i < trials; ++i) {\n        try {\n          request.process(solrClient);\n        } catch (Exception e) {\n          verifyException(e);\n        }\n      }\n      try {\n        solrClient.close();\n      } catch (Exception e) {\n        log.error(\"Error closing client\", e);\n      }\n    }\n\n","sourceOld":"    public void run() {\n      final SolrClient solrClient =\n          new HttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n      ConfigSetAdminRequest request = createRequest();\n\n      for (int i = 0; i < trials; ++i) {\n        try {\n          request.process(solrClient);\n        } catch (Exception e) {\n          verifyException(e);\n        }\n      }\n      try {\n        solrClient.close();\n      } catch (Exception e) {\n        log.error(\"Error closing client\", e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity.ConfigSetsAPIThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity.ConfigSetsAPIThread#run().mjava","sourceNew":"    public void run() {\n      final String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n      final SolrClient solrClient = getHttpSolrClient(baseUrl);\n      ConfigSetAdminRequest request = createRequest();\n\n      for (int i = 0; i < trials; ++i) {\n        try {\n          request.process(solrClient);\n        } catch (Exception e) {\n          verifyException(e);\n        }\n      }\n      try {\n        solrClient.close();\n      } catch (Exception e) {\n        log.error(\"Error closing client\", e);\n      }\n    }\n\n","sourceOld":"    public void run() {\n      final SolrClient solrClient =\n          new HttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n      ConfigSetAdminRequest request = createRequest();\n\n      for (int i = 0; i < trials; ++i) {\n        try {\n          request.process(solrClient);\n        } catch (Exception e) {\n          verifyException(e);\n        }\n      }\n      try {\n        solrClient.close();\n      } catch (Exception e) {\n        log.error(\"Error closing client\", e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity.ConfigSetsAPIThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity.ConfigSetsAPIThread#run().mjava","sourceNew":"    public void run() {\n      final String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n      final SolrClient solrClient = getHttpSolrClient(baseUrl);\n      @SuppressWarnings({\"rawtypes\"})\n      ConfigSetAdminRequest request = createRequest();\n\n      for (int i = 0; i < trials; ++i) {\n        try {\n          request.process(solrClient);\n        } catch (Exception e) {\n          verifyException(e);\n        }\n      }\n      try {\n        solrClient.close();\n      } catch (Exception e) {\n        log.error(\"Error closing client\", e);\n      }\n    }\n\n","sourceOld":"    public void run() {\n      final String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n      final SolrClient solrClient = getHttpSolrClient(baseUrl);\n      ConfigSetAdminRequest request = createRequest();\n\n      for (int i = 0; i < trials; ++i) {\n        try {\n          request.process(solrClient);\n        } catch (Exception e) {\n          verifyException(e);\n        }\n      }\n      try {\n        solrClient.close();\n      } catch (Exception e) {\n        log.error(\"Error closing client\", e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["2209af2c265d2258ec4b29c8cc78622d36994a15","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}