{"path":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","commits":[{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","sourceNew":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, org.apache.lucene.index.IndexReader, String, boolean, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, false, accuracy);\n  }\n\n","sourceOld":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, org.apache.lucene.index.IndexReader, String, boolean, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, false, accuracy);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","sourceNew":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, org.apache.lucene.index.IndexReader, String, boolean, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, false, accuracy);\n  }\n\n","sourceOld":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, org.apache.lucene.index.IndexReader, String, boolean, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, false, accuracy);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","sourceNew":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, org.apache.lucene.index.IndexReader, String, boolean, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, false, accuracy);\n  }\n\n","sourceOld":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, org.apache.lucene.index.IndexReader, String, boolean, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, false, accuracy);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0f2476332da483dc2ea1fdd80b5968380653166","date":1316180489,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","sourceNew":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, org.apache.lucene.index.IndexReader, String, boolean, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX, accuracy);\n  }\n\n","sourceOld":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, org.apache.lucene.index.IndexReader, String, boolean, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, false, accuracy);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66c26763d21cb6a60acfa6b3511a16ec34e7c345","date":1316182593,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","sourceNew":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, IndexReader, String, SuggestMode, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX, accuracy);\n  }\n\n","sourceOld":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, org.apache.lucene.index.IndexReader, String, boolean, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX, accuracy);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#suggestSimilar(String,int,float).mjava","sourceNew":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, IndexReader, String, SuggestMode, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX, accuracy);\n  }\n\n","sourceOld":"  /**\n   * Suggest similar words.\n   *\n   * <p>As the Lucene similarity that is used to fetch the most relevant n-grammed terms\n   * is not the same as the edit distance strategy used to calculate the best\n   * matching spell-checked word from the hits that Lucene found, one usually has\n   * to retrieve a couple of numSug's in order to get the true best match.\n   *\n   * <p>I.e. if numSug == 1, don't count on that suggestion being the best one.\n   * Thus, you should set this value to <b>at least</b> 5 for a good suggestion.\n   *\n   * @param word the word you want a spell check done on\n   * @param numSug the number of suggested words\n   * @param accuracy The minimum score a suggestion must have in order to qualify for inclusion in the results\n   * @throws IOException if the underlying index throws an {@link IOException}\n   * @throws AlreadyClosedException if the Spellchecker is already closed\n   * @return String[]\n   *\n   * @see #suggestSimilar(String, int, IndexReader, String, SuggestMode, float)\n   */\n  public String[] suggestSimilar(String word, int numSug, float accuracy) throws IOException {\n    return this.suggestSimilar(word, numSug, null, null, SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX, accuracy);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["66c26763d21cb6a60acfa6b3511a16ec34e7c345"],"b0f2476332da483dc2ea1fdd80b5968380653166":["e230a61047bc041516c811baa08a7174d6f8322a"],"66c26763d21cb6a60acfa6b3511a16ec34e7c345":["b0f2476332da483dc2ea1fdd80b5968380653166"],"e230a61047bc041516c811baa08a7174d6f8322a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b0f2476332da483dc2ea1fdd80b5968380653166":["66c26763d21cb6a60acfa6b3511a16ec34e7c345"],"66c26763d21cb6a60acfa6b3511a16ec34e7c345":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"e230a61047bc041516c811baa08a7174d6f8322a":["b0f2476332da483dc2ea1fdd80b5968380653166","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}