{"path":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","pathOld":"src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","sourceNew":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd","date":1291738757,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","sourceNew":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    StandardTokenizerFactory factory = new StandardTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8c4bb144102e537495ae5b321f77a9898f7b0b8","date":1291834816,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","sourceNew":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    StandardTokenizerFactory factory = new StandardTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","sourceNew":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    StandardTokenizerFactory factory = new StandardTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    ArabicLetterTokenizerFactory factory = new ArabicLetterTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","sourceNew":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    StandardTokenizerFactory factory = new StandardTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    StandardTokenizerFactory factory = new StandardTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","sourceNew":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    StandardTokenizerFactory factory = new StandardTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    StandardTokenizerFactory factory = new StandardTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestArabicFilters#testStemmer().mjava","sourceNew":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    StandardTokenizerFactory factory = new StandardTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","sourceOld":"  /**\n   * Test ArabicStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"الذين مَلكت أيمانكم\");\n    StandardTokenizerFactory factory = new StandardTokenizerFactory();\n    ArabicNormalizationFilterFactory normFactory = new ArabicNormalizationFilterFactory();\n    ArabicStemFilterFactory stemFactory = new ArabicStemFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    normFactory.init(DEFAULT_VERSION_PARAM);\n    Tokenizer tokenizer = factory.create(reader);\n    TokenStream stream = normFactory.create(tokenizer);\n    stream = stemFactory.create(stream);\n    assertTokenStreamContents(stream, new String[] {\"ذين\", \"ملكت\", \"ايمانكم\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"d8c4bb144102e537495ae5b321f77a9898f7b0b8":["1da8d55113b689b06716246649de6f62430f15c0","f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd":["1da8d55113b689b06716246649de6f62430f15c0"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d8c4bb144102e537495ae5b321f77a9898f7b0b8","f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"d8c4bb144102e537495ae5b321f77a9898f7b0b8":[],"f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd":["c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee","d8c4bb144102e537495ae5b321f77a9898f7b0b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","d8c4bb144102e537495ae5b321f77a9898f7b0b8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}