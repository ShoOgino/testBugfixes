{"path":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","commits":[{"id":"70cbbf09b1986180fc73b08b8ded592b3465806b","date":1355001417,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"QTime\", SKIPVAL);\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["072f211dfa8387028bb978d128c35bf9a450bbbf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"QTime\", SKIPVAL);\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33aa37f7cb15bff94880004576bd9347e871dbc","date":1355453481,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"QTime\", SKIPVAL);\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n      doTestNumRequests();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"QTime\", SKIPVAL);\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e0920dbf6195ede2c071dfb0b0c939297dc1a0c8","date":1356657569,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"QTime\", SKIPVAL);\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n      doTestNumRequests();\n      // doAtomicUpdate();  TODO: this currently fails!\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"QTime\", SKIPVAL);\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n      doTestNumRequests();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["87f599a2859f134da31a0566d51ae9171110b849"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"87f599a2859f134da31a0566d51ae9171110b849","date":1356707023,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"QTime\", SKIPVAL);\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n      doTestNumRequests();\n      doAtomicUpdate();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"QTime\", SKIPVAL);\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n      doTestNumRequests();\n      // doAtomicUpdate();  TODO: this currently fails!\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","bugFix":["e0920dbf6195ede2c071dfb0b0c939297dc1a0c8"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"QTime\", SKIPVAL);\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n      doTestNumRequests();\n      doAtomicUpdate();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"QTime\", SKIPVAL);\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"072f211dfa8387028bb978d128c35bf9a450bbbf","date":1406041363,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n      doTestNumRequests();\n      doAtomicUpdate();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"QTime\", SKIPVAL);\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n      doTestNumRequests();\n      doAtomicUpdate();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","bugFix":["70cbbf09b1986180fc73b08b8ded592b3465806b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest#doTest().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 8)\n  public void test() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n      doTestNumRequests();\n      doAtomicUpdate();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    boolean testFinished = false;\n    try {\n      handle.clear();\n      handle.put(\"timestamp\", SKIPVAL);\n\n      // todo: do I have to do this here?\n      waitForRecoveriesToFinish(false);\n\n      doHashingTest();\n      doTestNumRequests();\n      doAtomicUpdate();\n\n      testFinished = true;\n    } finally {\n      if (!testFinished) {\n        printLayoutOnTearDown = true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","87f599a2859f134da31a0566d51ae9171110b849"],"072f211dfa8387028bb978d128c35bf9a450bbbf":["87f599a2859f134da31a0566d51ae9171110b849"],"abb23fcc2461782ab204e61213240feb77d355aa":["072f211dfa8387028bb978d128c35bf9a450bbbf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70cbbf09b1986180fc73b08b8ded592b3465806b"],"87f599a2859f134da31a0566d51ae9171110b849":["e0920dbf6195ede2c071dfb0b0c939297dc1a0c8"],"70cbbf09b1986180fc73b08b8ded592b3465806b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e0920dbf6195ede2c071dfb0b0c939297dc1a0c8":["c33aa37f7cb15bff94880004576bd9347e871dbc"],"c33aa37f7cb15bff94880004576bd9347e871dbc":["70cbbf09b1986180fc73b08b8ded592b3465806b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["abb23fcc2461782ab204e61213240feb77d355aa"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"072f211dfa8387028bb978d128c35bf9a450bbbf":["abb23fcc2461782ab204e61213240feb77d355aa"],"abb23fcc2461782ab204e61213240feb77d355aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","70cbbf09b1986180fc73b08b8ded592b3465806b"],"87f599a2859f134da31a0566d51ae9171110b849":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","072f211dfa8387028bb978d128c35bf9a450bbbf"],"70cbbf09b1986180fc73b08b8ded592b3465806b":["407687e67faf6e1f02a211ca078d8e3eed631027","c33aa37f7cb15bff94880004576bd9347e871dbc"],"e0920dbf6195ede2c071dfb0b0c939297dc1a0c8":["87f599a2859f134da31a0566d51ae9171110b849"],"c33aa37f7cb15bff94880004576bd9347e871dbc":["e0920dbf6195ede2c071dfb0b0c939297dc1a0c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}