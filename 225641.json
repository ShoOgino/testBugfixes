{"path":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toNamedList(SuggesterResult).mjava","commits":[{"id":"7f2e96099703c24c0c63d27806ba7020626b649b","date":1385214372,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toNamedList(SuggesterResult).mjava","pathOld":"/dev/null","sourceNew":"  /** Convert {@link SuggesterResult} to NamedList for constructing responses */\n  private NamedList<NamedList> toNamedList(SuggesterResult suggesterResult) {\n    NamedList<NamedList> results = new NamedList<NamedList>();\n    for (String token : suggesterResult.getTokens()) {\n      SimpleOrderedMap suggestionBody = new SimpleOrderedMap();\n      List<LookupResult> lookupResults = suggesterResult.getLookupResult(token);\n      suggestionBody.add(SuggesterResultLabels.SUGGESTION_NUM_FOUND, lookupResults.size());\n      \n      for (LookupResult lookupResult : lookupResults) {\n        String suggestionString = lookupResult.key.toString();\n        long weight = lookupResult.value;\n        String payload = (lookupResult.payload != null) ? \n            lookupResult.payload.utf8ToString()\n            : \"\";\n            \n        SimpleOrderedMap suggestEntryNamedList = new SimpleOrderedMap();\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_TERM, suggestionString);\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_WEIGHT, weight);\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_PAYLOAD, payload);\n        \n        suggestionBody.add(SuggesterResultLabels.SUGGESTION, suggestEntryNamedList);\n      }\n      results.add(token, suggestionBody);\n    }\n    return results;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf2ccf302186b563c9549824a4d45db1e8cf8a0d","date":1387322051,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toNamedList(SuggesterResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toNamedList(SuggesterResult).mjava","sourceNew":"  /** Convert {@link SuggesterResult} to NamedList for constructing responses */\n  private NamedList<NamedList<Object>> toNamedList(SuggesterResult suggesterResult) {\n    NamedList<NamedList<Object>> results = new SimpleOrderedMap<NamedList<Object>>();\n    for (String token : suggesterResult.getTokens()) {\n      SimpleOrderedMap<Object> suggestionBody = new SimpleOrderedMap<Object>();\n      List<LookupResult> lookupResults = suggesterResult.getLookupResult(token);\n      suggestionBody.add(SuggesterResultLabels.SUGGESTION_NUM_FOUND, lookupResults.size());\n      List<SimpleOrderedMap<Object>> suggestEntriesNamedList = new ArrayList<SimpleOrderedMap<Object>>();\n      for (LookupResult lookupResult : lookupResults) {\n        String suggestionString = lookupResult.key.toString();\n        long weight = lookupResult.value;\n        String payload = (lookupResult.payload != null) ? \n            lookupResult.payload.utf8ToString()\n            : \"\";\n        \n        SimpleOrderedMap<Object> suggestEntryNamedList = new SimpleOrderedMap<Object>();\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_TERM, suggestionString);\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_WEIGHT, weight);\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_PAYLOAD, payload);\n        suggestEntriesNamedList.add(suggestEntryNamedList);\n        \n      }\n      suggestionBody.add(SuggesterResultLabels.SUGGESTIONS, suggestEntriesNamedList);\n      results.add(token, suggestionBody);\n    }\n    return results;\n  }\n\n","sourceOld":"  /** Convert {@link SuggesterResult} to NamedList for constructing responses */\n  private NamedList<NamedList> toNamedList(SuggesterResult suggesterResult) {\n    NamedList<NamedList> results = new NamedList<NamedList>();\n    for (String token : suggesterResult.getTokens()) {\n      SimpleOrderedMap suggestionBody = new SimpleOrderedMap();\n      List<LookupResult> lookupResults = suggesterResult.getLookupResult(token);\n      suggestionBody.add(SuggesterResultLabels.SUGGESTION_NUM_FOUND, lookupResults.size());\n      \n      for (LookupResult lookupResult : lookupResults) {\n        String suggestionString = lookupResult.key.toString();\n        long weight = lookupResult.value;\n        String payload = (lookupResult.payload != null) ? \n            lookupResult.payload.utf8ToString()\n            : \"\";\n            \n        SimpleOrderedMap suggestEntryNamedList = new SimpleOrderedMap();\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_TERM, suggestionString);\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_WEIGHT, weight);\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_PAYLOAD, payload);\n        \n        suggestionBody.add(SuggesterResultLabels.SUGGESTION, suggestEntryNamedList);\n      }\n      results.add(token, suggestionBody);\n    }\n    return results;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toNamedList(SuggesterResult).mjava","pathOld":"/dev/null","sourceNew":"  /** Convert {@link SuggesterResult} to NamedList for constructing responses */\n  private NamedList<NamedList<Object>> toNamedList(SuggesterResult suggesterResult) {\n    NamedList<NamedList<Object>> results = new SimpleOrderedMap<NamedList<Object>>();\n    for (String token : suggesterResult.getTokens()) {\n      SimpleOrderedMap<Object> suggestionBody = new SimpleOrderedMap<Object>();\n      List<LookupResult> lookupResults = suggesterResult.getLookupResult(token);\n      suggestionBody.add(SuggesterResultLabels.SUGGESTION_NUM_FOUND, lookupResults.size());\n      List<SimpleOrderedMap<Object>> suggestEntriesNamedList = new ArrayList<SimpleOrderedMap<Object>>();\n      for (LookupResult lookupResult : lookupResults) {\n        String suggestionString = lookupResult.key.toString();\n        long weight = lookupResult.value;\n        String payload = (lookupResult.payload != null) ? \n            lookupResult.payload.utf8ToString()\n            : \"\";\n        \n        SimpleOrderedMap<Object> suggestEntryNamedList = new SimpleOrderedMap<Object>();\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_TERM, suggestionString);\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_WEIGHT, weight);\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_PAYLOAD, payload);\n        suggestEntriesNamedList.add(suggestEntryNamedList);\n        \n      }\n      suggestionBody.add(SuggesterResultLabels.SUGGESTIONS, suggestEntriesNamedList);\n      results.add(token, suggestionBody);\n    }\n    return results;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"214b8610690edbe7e294594a7bc58a978ef1863c","date":1389376762,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toNamedList(SuggesterResult).mjava","sourceNew":null,"sourceOld":"  /** Convert {@link SuggesterResult} to NamedList for constructing responses */\n  private NamedList<NamedList<Object>> toNamedList(SuggesterResult suggesterResult) {\n    NamedList<NamedList<Object>> results = new SimpleOrderedMap<NamedList<Object>>();\n    for (String token : suggesterResult.getTokens()) {\n      SimpleOrderedMap<Object> suggestionBody = new SimpleOrderedMap<Object>();\n      List<LookupResult> lookupResults = suggesterResult.getLookupResult(token);\n      suggestionBody.add(SuggesterResultLabels.SUGGESTION_NUM_FOUND, lookupResults.size());\n      List<SimpleOrderedMap<Object>> suggestEntriesNamedList = new ArrayList<SimpleOrderedMap<Object>>();\n      for (LookupResult lookupResult : lookupResults) {\n        String suggestionString = lookupResult.key.toString();\n        long weight = lookupResult.value;\n        String payload = (lookupResult.payload != null) ? \n            lookupResult.payload.utf8ToString()\n            : \"\";\n        \n        SimpleOrderedMap<Object> suggestEntryNamedList = new SimpleOrderedMap<Object>();\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_TERM, suggestionString);\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_WEIGHT, weight);\n        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_PAYLOAD, payload);\n        suggestEntriesNamedList.add(suggestEntryNamedList);\n        \n      }\n      suggestionBody.add(SuggesterResultLabels.SUGGESTIONS, suggestEntriesNamedList);\n      results.add(token, suggestionBody);\n    }\n    return results;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f2e96099703c24c0c63d27806ba7020626b649b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"214b8610690edbe7e294594a7bc58a978ef1863c":["bf2ccf302186b563c9549824a4d45db1e8cf8a0d"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bf2ccf302186b563c9549824a4d45db1e8cf8a0d"],"bf2ccf302186b563c9549824a4d45db1e8cf8a0d":["7f2e96099703c24c0c63d27806ba7020626b649b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["214b8610690edbe7e294594a7bc58a978ef1863c"]},"commit2Childs":{"7f2e96099703c24c0c63d27806ba7020626b649b":["bf2ccf302186b563c9549824a4d45db1e8cf8a0d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f2e96099703c24c0c63d27806ba7020626b649b","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"214b8610690edbe7e294594a7bc58a978ef1863c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"bf2ccf302186b563c9549824a4d45db1e8cf8a0d":["214b8610690edbe7e294594a7bc58a978ef1863c","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}