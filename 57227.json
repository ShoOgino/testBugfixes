{"path":"lucene/expressions/src/test/org/apache/lucene/expressions/TestExpressionValueSource#testDoubleValuesSourceTypes().mjava","commits":[{"id":"7ae1ad302fc92a61505409a38838f2b1a4a2b092","date":1483787106,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/TestExpressionValueSource#testDoubleValuesSourceTypes().mjava","pathOld":"/dev/null","sourceNew":"  public void testDoubleValuesSourceTypes() throws Exception {\n    Expression expr = JavascriptCompiler.compile(\"2*popularity + count\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"popularity\", SortField.Type.LONG));\n    bindings.add(new SortField(\"count\", SortField.Type.LONG));\n    DoubleValuesSource vs = expr.getDoubleValuesSource(bindings);\n\n    assertEquals(1, reader.leaves().size());\n    LeafReaderContext leaf = reader.leaves().get(0);\n    DoubleValues values = vs.getValues(leaf, null);\n\n    assertTrue(values.advanceExact(0));\n    assertEquals(10, values.doubleValue(), 0);\n    assertTrue(values.advanceExact(1));\n    assertEquals(41, values.doubleValue(), 0);\n    assertTrue(values.advanceExact(2));\n    assertEquals(4, values.doubleValue(), 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/TestExpressionValueSource#testDoubleValuesSourceTypes().mjava","pathOld":"/dev/null","sourceNew":"  public void testDoubleValuesSourceTypes() throws Exception {\n    Expression expr = JavascriptCompiler.compile(\"2*popularity + count\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"popularity\", SortField.Type.LONG));\n    bindings.add(new SortField(\"count\", SortField.Type.LONG));\n    DoubleValuesSource vs = expr.getDoubleValuesSource(bindings);\n\n    assertEquals(1, reader.leaves().size());\n    LeafReaderContext leaf = reader.leaves().get(0);\n    DoubleValues values = vs.getValues(leaf, null);\n\n    assertTrue(values.advanceExact(0));\n    assertEquals(10, values.doubleValue(), 0);\n    assertTrue(values.advanceExact(1));\n    assertEquals(41, values.doubleValue(), 0);\n    assertTrue(values.advanceExact(2));\n    assertEquals(4, values.doubleValue(), 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27d4663d3f6f21a687874d174b49d55645ce99db","date":1587726496,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/TestExpressionValueSource#testDoubleValuesSourceTypes().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/TestExpressionValueSource#testDoubleValuesSourceTypes().mjava","sourceNew":"  public void testDoubleValuesSourceTypes() throws Exception {\n    Expression expr = JavascriptCompiler.compile(\"2*popularity + count\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(\"popularity\", DoubleValuesSource.fromLongField(\"popularity\"));\n    bindings.add(\"count\", DoubleValuesSource.fromLongField(\"count\"));\n    DoubleValuesSource vs = expr.getDoubleValuesSource(bindings);\n\n    assertEquals(1, reader.leaves().size());\n    LeafReaderContext leaf = reader.leaves().get(0);\n    DoubleValues values = vs.getValues(leaf, null);\n\n    assertTrue(values.advanceExact(0));\n    assertEquals(10, values.doubleValue(), 0);\n    assertTrue(values.advanceExact(1));\n    assertEquals(41, values.doubleValue(), 0);\n    assertTrue(values.advanceExact(2));\n    assertEquals(4, values.doubleValue(), 0);\n  }\n\n","sourceOld":"  public void testDoubleValuesSourceTypes() throws Exception {\n    Expression expr = JavascriptCompiler.compile(\"2*popularity + count\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"popularity\", SortField.Type.LONG));\n    bindings.add(new SortField(\"count\", SortField.Type.LONG));\n    DoubleValuesSource vs = expr.getDoubleValuesSource(bindings);\n\n    assertEquals(1, reader.leaves().size());\n    LeafReaderContext leaf = reader.leaves().get(0);\n    DoubleValues values = vs.getValues(leaf, null);\n\n    assertTrue(values.advanceExact(0));\n    assertEquals(10, values.doubleValue(), 0);\n    assertTrue(values.advanceExact(1));\n    assertEquals(41, values.doubleValue(), 0);\n    assertTrue(values.advanceExact(2));\n    assertEquals(4, values.doubleValue(), 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"27d4663d3f6f21a687874d174b49d55645ce99db":["7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["27d4663d3f6f21a687874d174b49d55645ce99db"]},"commit2Childs":{"27d4663d3f6f21a687874d174b49d55645ce99db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7ae1ad302fc92a61505409a38838f2b1a4a2b092","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["27d4663d3f6f21a687874d174b49d55645ce99db","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}