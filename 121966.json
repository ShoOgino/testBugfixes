{"path":"solr/core/src/java/org/apache/solr/cluster/placement/impl/SimpleClusterAbstractionsImpl.NodeImpl#equals(Object).mjava","commits":[{"id":"f5d9700b23e8e9b11b845fcecef89dbdf21373d9","date":1600294231,"type":0,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cluster/placement/impl/SimpleClusterAbstractionsImpl.NodeImpl#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * This class ends up as a key in Maps in {@link org.apache.solr.cluster.placement.AttributeValues}.\n     * It is important to implement this method comparing node names given that new instances of {@link Node} are created\n     * with names equal to existing instances (See {@link ReplicaImpl} constructor).\n     */\n    public boolean equals(Object obj) {\n      if (obj == null) { return false; }\n      if (obj == this) { return true; }\n      if (obj.getClass() != getClass()) { return false; }\n      NodeImpl other = (NodeImpl) obj;\n      return Objects.equals(this.nodeName, other.nodeName);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65352f844eb9e9a677ec4eb2abced4404f08181d","date":1600297608,"type":0,"author":"noblepaul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cluster/placement/impl/SimpleClusterAbstractionsImpl.NodeImpl#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * This class ends up as a key in Maps in {@link org.apache.solr.cluster.placement.AttributeValues}.\n     * It is important to implement this method comparing node names given that new instances of {@link Node} are created\n     * with names equal to existing instances (See {@link ReplicaImpl} constructor).\n     */\n    public boolean equals(Object obj) {\n      if (obj == null) { return false; }\n      if (obj == this) { return true; }\n      if (obj.getClass() != getClass()) { return false; }\n      NodeImpl other = (NodeImpl) obj;\n      return Objects.equals(this.nodeName, other.nodeName);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f5d9700b23e8e9b11b845fcecef89dbdf21373d9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"65352f844eb9e9a677ec4eb2abced4404f08181d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f5d9700b23e8e9b11b845fcecef89dbdf21373d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65352f844eb9e9a677ec4eb2abced4404f08181d"]},"commit2Childs":{"f5d9700b23e8e9b11b845fcecef89dbdf21373d9":["65352f844eb9e9a677ec4eb2abced4404f08181d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f5d9700b23e8e9b11b845fcecef89dbdf21373d9","65352f844eb9e9a677ec4eb2abced4404f08181d"],"65352f844eb9e9a677ec4eb2abced4404f08181d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}