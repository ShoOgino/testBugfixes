{"path":"solr/core/src/java/org/apache/solr/response/JSONWriter#writeMap(String,Map,boolean,boolean).mjava","commits":[{"id":"6de1208964ea5a0edc0b215f9707ceb7750740ae","date":1528551353,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter#writeMap(String,Map,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal=true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26dad91f15019714a045b4d8c5f40162b2058b54","date":1528551655,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter#writeMap(String,Map,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter#writeMap(String,Map,boolean,boolean).mjava","sourceNew":"  default void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal = true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>) val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e == null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal = false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k, true);\n      writeVal(k, v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal=true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"26dad91f15019714a045b4d8c5f40162b2058b54":["6de1208964ea5a0edc0b215f9707ceb7750740ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6de1208964ea5a0edc0b215f9707ceb7750740ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["26dad91f15019714a045b4d8c5f40162b2058b54"]},"commit2Childs":{"26dad91f15019714a045b4d8c5f40162b2058b54":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6de1208964ea5a0edc0b215f9707ceb7750740ae"],"6de1208964ea5a0edc0b215f9707ceb7750740ae":["26dad91f15019714a045b4d8c5f40162b2058b54"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}