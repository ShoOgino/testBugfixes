{"path":"src/java/org/apache/lucene/store/InputStream#refill().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/InputStream#refill().mjava","pathOld":"/dev/null","sourceNew":"  protected final void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length)\t\t\t\t  // don't read past EOF\n      end = length;\n    bufferLength = (int)(end - start);\n    if (bufferLength == 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null)\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2e40e7e910b7a5d8fe0bc0b9d557777a31eb0b20"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"823c992e3b766654f2a25f9b125dc5e849b4775e","date":1028137634,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/InputStream#refill().mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#refill().mjava","sourceNew":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length)\t\t\t\t  // don't read past EOF\n      end = length;\n    bufferLength = (int)(end - start);\n    if (bufferLength == 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null)\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","sourceOld":"  protected final void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length)\t\t\t\t  // don't read past EOF\n      end = length;\n    bufferLength = (int)(end - start);\n    if (bufferLength == 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null)\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/BufferedIndexInput#refill().mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#refill().mjava","sourceNew":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length())\t\t\t\t  // don't read past EOF\n      end = length();\n    bufferLength = (int)(end - start);\n    if (bufferLength == 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null)\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","sourceOld":"  private void refill() throws IOException {\n    long start = bufferStart + bufferPosition;\n    long end = start + BUFFER_SIZE;\n    if (end > length)\t\t\t\t  // don't read past EOF\n      end = length;\n    bufferLength = (int)(end - start);\n    if (bufferLength == 0)\n      throw new IOException(\"read past EOF\");\n\n    if (buffer == null)\n      buffer = new byte[BUFFER_SIZE];\t\t  // allocate buffer lazily\n    readInternal(buffer, 0, bufferLength);\n\n    bufferStart = start;\n    bufferPosition = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"823c992e3b766654f2a25f9b125dc5e849b4775e":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"e971ba25509e21a130fef61f0687be0446ca27a0":["823c992e3b766654f2a25f9b125dc5e849b4775e"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e971ba25509e21a130fef61f0687be0446ca27a0"]},"commit2Childs":{"823c992e3b766654f2a25f9b125dc5e849b4775e":["e971ba25509e21a130fef61f0687be0446ca27a0"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["823c992e3b766654f2a25f9b125dc5e849b4775e"],"e971ba25509e21a130fef61f0687be0446ca27a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}