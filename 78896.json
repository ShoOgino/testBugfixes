{"path":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","commits":[{"id":"630b72110afca0a13a755e07ef8a4d764afb52aa","date":1361202100,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    dataDir3 = new File(dataDir + File.separator + \"data3\");\n    dataDir3.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    CoreContainer.Initializer init1 = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = init1.initialize();\n\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    init2 = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = init2.initialize();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n    log.info(\"####SETUP_END \" + getTestName());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    dataDir3 = new File(dataDir + File.separator + \"data3\");\n    dataDir3.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n    container1.load();\n    container2.load();\n\n    log.info(\"####SETUP_END \" + getTestName());\n\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    dataDir3 = new File(dataDir + File.separator + \"data3\");\n    dataDir3.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    CoreContainer.Initializer init1 = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = init1.initialize();\n\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    init2 = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = init2.initialize();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n    log.info(\"####SETUP_END \" + getTestName());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    dataDir3 = new File(dataDir + File.separator + \"data3\");\n    dataDir3.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    CoreContainer.Initializer init1 = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = init1.initialize();\n\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    init2 = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = init2.initialize();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n    log.info(\"####SETUP_END \" + getTestName());\n\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    dataDir3 = new File(dataDir + File.separator + \"data3\");\n    dataDir3.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n    container1.load();\n    container2.load();\n\n    log.info(\"####SETUP_END \" + getTestName());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    dataDir3 = new File(dataDir + File.separator + \"data3\");\n    dataDir3.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n    container1.load();\n    container2.load();\n\n    log.info(\"####SETUP_END \" + getTestName());\n\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    dataDir3 = new File(dataDir + File.separator + \"data3\");\n    dataDir3.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    CoreContainer.Initializer init1 = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = init1.initialize();\n\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    init2 = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = init2.initialize();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n    log.info(\"####SETUP_END \" + getTestName());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    dataDir3 = new File(dataDir + File.separator + \"data3\");\n    dataDir3.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n    container1.load();\n    container2.load();\n\n    log.info(\"####SETUP_END \" + getTestName());\n\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    dataDir3 = new File(dataDir + File.separator + \"data3\");\n    dataDir3.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    CoreContainer.Initializer init1 = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = init1.initialize();\n\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    init2 = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = init2.initialize();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n    log.info(\"####SETUP_END \" + getTestName());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5c24895cc40015d3ec6e42b234fe0953de6ebc3","date":1385000683,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    dataDir3 = new File(dataDir + File.separator + \"data3\");\n    dataDir3.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n    container1.load();\n    container2.load();\n\n    log.info(\"####SETUP_END \" + getTestName());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    dataDir3 = new File(dataDir + File.separator + \"data3\");\n    dataDir3.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n    container1.load();\n    container2.load();\n\n    log.info(\"####SETUP_END \" + getTestName());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<String, Object>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(createTempDir() + File.separator + \"data1\");\n\n    dataDir2 = new File(createTempDir() + File.separator + \"data2\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = createTempDir(\"data1\");\n\n    dataDir2 = createTempDir(\"data2\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(createTempDir() + File.separator + \"data1\");\n\n    dataDir2 = new File(createTempDir() + File.separator + \"data2\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","630b72110afca0a13a755e07ef8a4d764afb52aa"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = createTempDir(\"data1\");\n\n    dataDir2 = createTempDir(\"data2\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = new File(dataDir + File.separator + \"data1\");\n    dataDir1.mkdirs();\n\n    dataDir2 = new File(dataDir + File.separator + \"data2\");\n    dataDir2.mkdirs();\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17045e3d73e7d9231725a5db1f8a7416681c746c","date":1403936574,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/SliceStateUpdateTest#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    System.setProperty(\"zkClientTimeout\", \"3000\");\n\n    zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer\n        .getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    log.info(\"####SETUP_START \" + getTestName());\n    Map<String, Object> props2 = new HashMap<>();\n    props2.put(\"configName\", \"conf1\");\n\n    ZkNodeProps zkProps2 = new ZkNodeProps(props2);\n\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore\",\n        ZkStateReader.toJSON(zkProps2), CreateMode.PERSISTENT, true);\n    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + \"/testcore/shards\",\n        CreateMode.PERSISTENT, true);\n    zkClient.close();\n\n    dataDir1 = createTempDir(\"data1\");\n\n    dataDir2 = createTempDir(\"data2\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    System.setProperty(\"hostPort\", \"1661\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir1.getAbsolutePath());\n    container1 = new CoreContainer();\n    container1.load();\n    System.clearProperty(\"hostPort\");\n\n    System.setProperty(\"hostPort\", \"1662\");\n    System.setProperty(\"solr.data.dir\", SliceStateUpdateTest.this.dataDir2.getAbsolutePath());\n    container2 = new CoreContainer();\n    container2.load();\n    System.clearProperty(\"hostPort\");\n\n    System.clearProperty(\"solr.solr.home\");\n\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d5c24895cc40015d3ec6e42b234fe0953de6ebc3"],"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["630b72110afca0a13a755e07ef8a4d764afb52aa","7116474e2e390259937401cf928323e0cbc75e60"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"17045e3d73e7d9231725a5db1f8a7416681c746c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d264f386d864b5751209060e8886ca9845f70469":["630b72110afca0a13a755e07ef8a4d764afb52aa"],"630b72110afca0a13a755e07ef8a4d764afb52aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d5c24895cc40015d3ec6e42b234fe0953de6ebc3":["7116474e2e390259937401cf928323e0cbc75e60"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["7116474e2e390259937401cf928323e0cbc75e60","d5c24895cc40015d3ec6e42b234fe0953de6ebc3"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17045e3d73e7d9231725a5db1f8a7416681c746c"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","1416f9d09d016a6894cd17e1caac137dad2bba59"],"7116474e2e390259937401cf928323e0cbc75e60":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d5c24895cc40015d3ec6e42b234fe0953de6ebc3","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["17045e3d73e7d9231725a5db1f8a7416681c746c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"17045e3d73e7d9231725a5db1f8a7416681c746c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"630b72110afca0a13a755e07ef8a4d764afb52aa":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["630b72110afca0a13a755e07ef8a4d764afb52aa"],"d5c24895cc40015d3ec6e42b234fe0953de6ebc3":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}