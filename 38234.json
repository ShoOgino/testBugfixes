{"path":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","sourceNew":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random, true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n    crash(writer);\n    IndexReader reader = IndexReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random, true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n    crash(writer);\n    IndexReader reader = IndexReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","sourceNew":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random(), true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n    crash(writer);\n    IndexReader reader = IndexReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random, true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n    crash(writer);\n    IndexReader reader = IndexReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","sourceNew":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random(), true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n    crash(writer);\n    IndexReader reader = DirectoryReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random(), true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n    crash(writer);\n    IndexReader reader = IndexReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eae2a56dc810a17cf807d831f720dec931a03de","date":1349262073,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","sourceNew":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random(), true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    // We create leftover files because merging could be\n    // running when we crash:\n    dir.setAssertNoUnrefencedFilesOnClose(false);\n\n    crash(writer);\n\n    IndexReader reader = DirectoryReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n\n    // Make a new dir, copying from the crashed dir, and\n    // open IW on it, to confirm IW \"recovers\" after a\n    // crash:\n    Directory dir2 = newDirectory(dir);\n    dir.close();\n\n    new RandomIndexWriter(random(), dir2).close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random(), true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n    crash(writer);\n    IndexReader reader = DirectoryReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","sourceNew":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random(), true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    // We create leftover files because merging could be\n    // running when we crash:\n    dir.setAssertNoUnrefencedFilesOnClose(false);\n\n    crash(writer);\n\n    IndexReader reader = DirectoryReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n\n    // Make a new dir, copying from the crashed dir, and\n    // open IW on it, to confirm IW \"recovers\" after a\n    // crash:\n    Directory dir2 = newDirectory(dir);\n    dir.close();\n\n    new RandomIndexWriter(random(), dir2).shutdown();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random(), true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    // We create leftover files because merging could be\n    // running when we crash:\n    dir.setAssertNoUnrefencedFilesOnClose(false);\n\n    crash(writer);\n\n    IndexReader reader = DirectoryReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n\n    // Make a new dir, copying from the crashed dir, and\n    // open IW on it, to confirm IW \"recovers\" after a\n    // crash:\n    Directory dir2 = newDirectory(dir);\n    dir.close();\n\n    new RandomIndexWriter(random(), dir2).close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrash#testCrashWhileIndexing().mjava","sourceNew":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random(), true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    // We create leftover files because merging could be\n    // running when we crash:\n    dir.setAssertNoUnrefencedFilesOnClose(false);\n\n    crash(writer);\n\n    IndexReader reader = DirectoryReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n\n    // Make a new dir, copying from the crashed dir, and\n    // open IW on it, to confirm IW \"recovers\" after a\n    // crash:\n    Directory dir2 = newDirectory(dir);\n    dir.close();\n\n    new RandomIndexWriter(random(), dir2).close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testCrashWhileIndexing() throws IOException {\n    // This test relies on being able to open a reader before any commit\n    // happened, so we must create an initial commit just to allow that, but\n    // before any documents were added.\n    IndexWriter writer = initIndex(random(), true);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    // We create leftover files because merging could be\n    // running when we crash:\n    dir.setAssertNoUnrefencedFilesOnClose(false);\n\n    crash(writer);\n\n    IndexReader reader = DirectoryReader.open(dir);\n    assertTrue(reader.numDocs() < 157);\n    reader.close();\n\n    // Make a new dir, copying from the crashed dir, and\n    // open IW on it, to confirm IW \"recovers\" after a\n    // crash:\n    Directory dir2 = newDirectory(dir);\n    dir.close();\n\n    new RandomIndexWriter(random(), dir2).shutdown();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9eae2a56dc810a17cf807d831f720dec931a03de":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["9eae2a56dc810a17cf807d831f720dec931a03de"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"9eae2a56dc810a17cf807d831f720dec931a03de":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["9eae2a56dc810a17cf807d831f720dec931a03de"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}