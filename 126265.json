{"path":"solr/contrib/jaegertracer-configurator/src/test/org/apache/solr/jaeger/TestJaegerConfigurator#testIncorrectFormat().mjava","commits":[{"id":"cbaf96cfda5422c42955ce34344f0e01839894ea","date":1559675051,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/contrib/jaegertracer-configurator/src/test/org/apache/solr/jaeger/TestJaegerConfigurator#testIncorrectFormat().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testIncorrectFormat() {\n    JaegerTracerConfigurator configurator = new JaegerTracerConfigurator();\n    NamedList initArgs = new NamedList();\n    initArgs.add(AGENT_HOST, 100);\n    initArgs.add(AGENT_PORT, 5775);\n\n    IllegalArgumentException exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(AGENT_HOST));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, \"5775\");\n    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(AGENT_PORT));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, 5775);\n    initArgs.add(LOG_SPANS, 10);\n    SolrException solrExc = expectThrows(SolrException.class, () -> configurator.init(initArgs));\n    assertTrue(solrExc.getMessage().contains(LOG_SPANS));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, 5775);\n    initArgs.add(FLUSH_INTERVAL, \"10\");\n    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(FLUSH_INTERVAL));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, 5775);\n    initArgs.add(MAX_QUEUE_SIZE, \"10\");\n    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(MAX_QUEUE_SIZE));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/jaegertracer-configurator/src/test/org/apache/solr/jaeger/TestJaegerConfigurator#testIncorrectFormat().mjava","pathOld":"solr/contrib/jaegertracer-configurator/src/test/org/apache/solr/jaeger/TestJaegerConfigurator#testIncorrectFormat().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void testIncorrectFormat() {\n    JaegerTracerConfigurator configurator = new JaegerTracerConfigurator();\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList initArgs = new NamedList();\n    initArgs.add(AGENT_HOST, 100);\n    initArgs.add(AGENT_PORT, 5775);\n\n    IllegalArgumentException exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(AGENT_HOST));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, \"5775\");\n    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(AGENT_PORT));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, 5775);\n    initArgs.add(LOG_SPANS, 10);\n    SolrException solrExc = expectThrows(SolrException.class, () -> configurator.init(initArgs));\n    assertTrue(solrExc.getMessage().contains(LOG_SPANS));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, 5775);\n    initArgs.add(FLUSH_INTERVAL, \"10\");\n    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(FLUSH_INTERVAL));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, 5775);\n    initArgs.add(MAX_QUEUE_SIZE, \"10\");\n    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(MAX_QUEUE_SIZE));\n\n  }\n\n","sourceOld":"  @Test\n  public void testIncorrectFormat() {\n    JaegerTracerConfigurator configurator = new JaegerTracerConfigurator();\n    NamedList initArgs = new NamedList();\n    initArgs.add(AGENT_HOST, 100);\n    initArgs.add(AGENT_PORT, 5775);\n\n    IllegalArgumentException exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(AGENT_HOST));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, \"5775\");\n    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(AGENT_PORT));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, 5775);\n    initArgs.add(LOG_SPANS, 10);\n    SolrException solrExc = expectThrows(SolrException.class, () -> configurator.init(initArgs));\n    assertTrue(solrExc.getMessage().contains(LOG_SPANS));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, 5775);\n    initArgs.add(FLUSH_INTERVAL, \"10\");\n    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(FLUSH_INTERVAL));\n\n    initArgs.clear();\n    initArgs.add(AGENT_HOST, \"localhost\");\n    initArgs.add(AGENT_PORT, 5775);\n    initArgs.add(MAX_QUEUE_SIZE, \"10\");\n    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));\n    assertTrue(exc.getMessage().contains(MAX_QUEUE_SIZE));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cbaf96cfda5422c42955ce34344f0e01839894ea"],"cbaf96cfda5422c42955ce34344f0e01839894ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cbaf96cfda5422c42955ce34344f0e01839894ea":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cbaf96cfda5422c42955ce34344f0e01839894ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}