{"path":"lucene/backwards/src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","sourceNew":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.termBuffer(), 0, termAtt.termLength())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.termBuffer(), 0, termAtt.termLength())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.termBuffer(), 0, termAtt.termLength())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}