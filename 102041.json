{"path":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","commits":[{"id":"824ab25acd22f2eca198755bafab3cb8b7878493","date":1341276186,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    // TODO: implement a new PostingsWriterBase to improve skip-settings\n    PostingsWriterBase postingsWriter = new SepPostingsWriter(state, new PForFactory()); \n    boolean success = false;\n    try {\n      FieldsConsumer ret = new BlockTreeTermsWriter(state, \n                                                    postingsWriter,\n                                                    minBlockSize, \n                                                    maxBlockSize);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postingsWriter.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf30078be400a94921bf0d9b9d76f7c0987d34d9","date":1342016240,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    // TODO: implement a new PostingsWriterBase to improve skip-settings\n    PostingsWriterBase postingsWriter = new SepPostingsWriter(state, new PForFactory()); \n    boolean success = false;\n    try {\n      FieldsConsumer ret = new BlockTreeTermsWriter(state, \n                                                    postingsWriter,\n                                                    minBlockSize, \n                                                    maxBlockSize);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsWriter);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    // TODO: implement a new PostingsWriterBase to improve skip-settings\n    PostingsWriterBase postingsWriter = new SepPostingsWriter(state, new PForFactory()); \n    boolean success = false;\n    try {\n      FieldsConsumer ret = new BlockTreeTermsWriter(state, \n                                                    postingsWriter,\n                                                    minBlockSize, \n                                                    maxBlockSize);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        postingsWriter.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    // TODO: implement a new PostingsWriterBase to improve skip-settings\n    PostingsWriterBase postingsWriter = new SepPostingsWriter(state, new PForFactory()); \n    boolean success = false;\n    try {\n      FieldsConsumer ret = new BlockTreeTermsWriter(state, \n                                                    postingsWriter,\n                                                    minBlockSize, \n                                                    maxBlockSize);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsWriter);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cf30078be400a94921bf0d9b9d76f7c0987d34d9":["824ab25acd22f2eca198755bafab3cb8b7878493"],"824ab25acd22f2eca198755bafab3cb8b7878493":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["cf30078be400a94921bf0d9b9d76f7c0987d34d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"cf30078be400a94921bf0d9b9d76f7c0987d34d9":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"824ab25acd22f2eca198755bafab3cb8b7878493":["cf30078be400a94921bf0d9b9d76f7c0987d34d9"],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["824ab25acd22f2eca198755bafab3cb8b7878493","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}