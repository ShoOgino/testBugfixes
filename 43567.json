{"path":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n\n    RAMDirectory directory = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT))\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n\n    RAMDirectory directory = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT))\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n\n    RAMDirectory directory = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n\n    RAMDirectory directory = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT))\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n\n    RAMDirectory directory = new MockRAMDirectory();\n    Random random = newRandom();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n\n    RAMDirectory directory = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n\n    MockRAMDirectory directory = new MockRAMDirectory();\n    Random random = newRandom();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n\n    RAMDirectory directory = new MockRAMDirectory();\n    Random random = newRandom();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    Random random = newRandom();\n    MockRAMDirectory directory = newDirectory(random);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n\n    MockRAMDirectory directory = new MockRAMDirectory();\n    Random random = newRandom();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    Random random = newRandom();\n    MockDirectoryWrapper directory = newDirectory(random);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    Random random = newRandom();\n    MockRAMDirectory directory = newDirectory(random);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    Random random = newRandom();\n    MockDirectoryWrapper directory = newDirectory(random);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":["d19974432be9aed28ee7dca73bdf01d139e763a9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"355542ffa5812b7a09147c6a46a0948b36c5966f","date":1292760986,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n\n    RAMDirectory directory = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", TextField.TYPE_UNSTORED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", TextField.TYPE_UNSTORED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", TextField.TYPE_UNSTORED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n      writer.setInfoStream(VERBOSE ? System.out : null);\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoExtraFiles().mjava","sourceNew":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", TextField.TYPE_UNSTORED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testNoExtraFiles() throws IOException {\n    MockDirectoryWrapper directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n\n    for(int iter=0;iter<7;iter++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter=\" + iter);\n      }\n\n      for(int j=0;j<21;j++) {\n        Document doc = new Document();\n        doc.add(newField(\"content\", \"a b c\", TextField.TYPE_UNSTORED));\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      TestIndexWriter.assertNoUnreferencedFiles(directory, \"testNoExtraFiles\");\n\n      // Reopen\n      writer = new IndexWriter(directory, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2));\n    }\n\n    writer.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["06584e6e98d592b34e1329b384182f368d2025e8"],"06584e6e98d592b34e1329b384182f368d2025e8":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["132903c28af3aa6f67284b78de91c0f0a99488c2","355542ffa5812b7a09147c6a46a0948b36c5966f"],"355542ffa5812b7a09147c6a46a0948b36c5966f":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","355542ffa5812b7a09147c6a46a0948b36c5966f"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["355542ffa5812b7a09147c6a46a0948b36c5966f"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"a3776dccca01c11e7046323cfad46a3b4a471233":["355542ffa5812b7a09147c6a46a0948b36c5966f","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["355542ffa5812b7a09147c6a46a0948b36c5966f"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"355542ffa5812b7a09147c6a46a0948b36c5966f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["06584e6e98d592b34e1329b384182f368d2025e8"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}