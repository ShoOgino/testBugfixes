{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testExponentialMovingAverage().mjava","commits":[{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testExponentialMovingAverage().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testExponentialMovingAverage().mjava","sourceNew":"  @Test\n  public void testExponentialMovingAverage() throws Exception {\n    String cexpr = \"expMovingAvg(array(22.27, 22.19, 22.08, 22.17, 22.18, 22.13, 22.23, 22.43, 22.24, 22.29, \" +\n                   \"22.15, 22.39, 22.38, 22.61, 23.36, 24.05, 23.75, 23.83, 23.95, 23.63, 23.82, 23.87, 23.65, 23.19,\"+\n                   \"23.10, 23.33, 22.68, 23.10, 22.40, 22.17), 10)\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 21);\n    assertEquals((double) out.get(0), 22.22, 0.009);\n    assertEquals((double) out.get(1), 22.21, 0.009);\n    assertEquals((double)out.get(2), 22.24, 0.009);\n    assertEquals((double)out.get(3), 22.27, 0.009);\n    assertEquals((double)out.get(4), 22.33, 0.009);\n    assertEquals((double)out.get(5), 22.52, 0.009);\n    assertEquals((double)out.get(6), 22.80, 0.009);\n    assertEquals((double)out.get(7), 22.97, 0.009);\n    assertEquals((double)out.get(8), 23.13, 0.009);\n    assertEquals((double)out.get(9), 23.28, 0.009);\n    assertEquals((double)out.get(10), 23.34, 0.009);\n    assertEquals((double)out.get(11), 23.43, 0.009);\n    assertEquals((double)out.get(12), 23.51, 0.009);\n    assertEquals((double)out.get(13), 23.54, 0.009);\n    assertEquals((double)out.get(14), 23.47, 0.009);\n    assertEquals((double)out.get(15), 23.40, 0.009);\n    assertEquals((double)out.get(16), 23.39, 0.009);\n    assertEquals((double)out.get(17), 23.26, 0.009);\n    assertEquals((double)out.get(18), 23.23, 0.009);\n    assertEquals((double)out.get(19), 23.08, 0.009);\n    assertEquals((double)out.get(20), 22.92, 0.009);\n  }\n\n","sourceOld":"  @Test\n  public void testExponentialMovingAverage() throws Exception {\n    String cexpr = \"expMovingAvg(array(22.27, 22.19, 22.08, 22.17, 22.18, 22.13, 22.23, 22.43, 22.24, 22.29, \" +\n                   \"22.15, 22.39, 22.38, 22.61, 23.36, 24.05, 23.75, 23.83, 23.95, 23.63, 23.82, 23.87, 23.65, 23.19,\"+\n                   \"23.10, 23.33, 22.68, 23.10, 22.40, 22.17), 10)\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 21);\n    assertEquals((double)out.get(0), 22.22, 0.009);\n    assertEquals((double)out.get(1), 22.21, 0.009);\n    assertEquals((double)out.get(2), 22.24, 0.009);\n    assertEquals((double)out.get(3), 22.27, 0.009);\n    assertEquals((double)out.get(4), 22.33, 0.009);\n    assertEquals((double)out.get(5), 22.52, 0.009);\n    assertEquals((double)out.get(6), 22.80, 0.009);\n    assertEquals((double)out.get(7), 22.97, 0.009);\n    assertEquals((double)out.get(8), 23.13, 0.009);\n    assertEquals((double)out.get(9), 23.28, 0.009);\n    assertEquals((double)out.get(10), 23.34, 0.009);\n    assertEquals((double)out.get(11), 23.43, 0.009);\n    assertEquals((double)out.get(12), 23.51, 0.009);\n    assertEquals((double)out.get(13), 23.54, 0.009);\n    assertEquals((double)out.get(14), 23.47, 0.009);\n    assertEquals((double)out.get(15), 23.40, 0.009);\n    assertEquals((double)out.get(16), 23.39, 0.009);\n    assertEquals((double)out.get(17), 23.26, 0.009);\n    assertEquals((double)out.get(18), 23.23, 0.009);\n    assertEquals((double)out.get(19), 23.08, 0.009);\n    assertEquals((double)out.get(20), 22.92, 0.009);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testExponentialMovingAverage().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testExponentialMovingAverage().mjava","sourceNew":"  @Test\n  public void testExponentialMovingAverage() throws Exception {\n    String cexpr = \"expMovingAvg(array(22.27, 22.19, 22.08, 22.17, 22.18, 22.13, 22.23, 22.43, 22.24, 22.29, \" +\n                   \"22.15, 22.39, 22.38, 22.61, 23.36, 24.05, 23.75, 23.83, 23.95, 23.63, 23.82, 23.87, 23.65, 23.19,\"+\n                   \"23.10, 23.33, 22.68, 23.10, 22.40, 22.17), 10)\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 21);\n    assertEquals((double) out.get(0), 22.22, 0.009);\n    assertEquals((double) out.get(1), 22.21, 0.009);\n    assertEquals((double)out.get(2), 22.24, 0.009);\n    assertEquals((double)out.get(3), 22.27, 0.009);\n    assertEquals((double)out.get(4), 22.33, 0.009);\n    assertEquals((double)out.get(5), 22.52, 0.009);\n    assertEquals((double)out.get(6), 22.80, 0.009);\n    assertEquals((double)out.get(7), 22.97, 0.009);\n    assertEquals((double)out.get(8), 23.13, 0.009);\n    assertEquals((double)out.get(9), 23.28, 0.009);\n    assertEquals((double)out.get(10), 23.34, 0.009);\n    assertEquals((double)out.get(11), 23.43, 0.009);\n    assertEquals((double)out.get(12), 23.51, 0.009);\n    assertEquals((double)out.get(13), 23.54, 0.009);\n    assertEquals((double)out.get(14), 23.47, 0.009);\n    assertEquals((double)out.get(15), 23.40, 0.009);\n    assertEquals((double)out.get(16), 23.39, 0.009);\n    assertEquals((double)out.get(17), 23.26, 0.009);\n    assertEquals((double)out.get(18), 23.23, 0.009);\n    assertEquals((double)out.get(19), 23.08, 0.009);\n    assertEquals((double)out.get(20), 22.92, 0.009);\n  }\n\n","sourceOld":"  @Test\n  public void testExponentialMovingAverage() throws Exception {\n    String cexpr = \"expMovingAvg(array(22.27, 22.19, 22.08, 22.17, 22.18, 22.13, 22.23, 22.43, 22.24, 22.29, \" +\n                   \"22.15, 22.39, 22.38, 22.61, 23.36, 24.05, 23.75, 23.83, 23.95, 23.63, 23.82, 23.87, 23.65, 23.19,\"+\n                   \"23.10, 23.33, 22.68, 23.10, 22.40, 22.17), 10)\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 21);\n    assertEquals((double) out.get(0), 22.22, 0.009);\n    assertEquals((double) out.get(1), 22.21, 0.009);\n    assertEquals((double)out.get(2), 22.24, 0.009);\n    assertEquals((double)out.get(3), 22.27, 0.009);\n    assertEquals((double)out.get(4), 22.33, 0.009);\n    assertEquals((double)out.get(5), 22.52, 0.009);\n    assertEquals((double)out.get(6), 22.80, 0.009);\n    assertEquals((double)out.get(7), 22.97, 0.009);\n    assertEquals((double)out.get(8), 23.13, 0.009);\n    assertEquals((double)out.get(9), 23.28, 0.009);\n    assertEquals((double)out.get(10), 23.34, 0.009);\n    assertEquals((double)out.get(11), 23.43, 0.009);\n    assertEquals((double)out.get(12), 23.51, 0.009);\n    assertEquals((double)out.get(13), 23.54, 0.009);\n    assertEquals((double)out.get(14), 23.47, 0.009);\n    assertEquals((double)out.get(15), 23.40, 0.009);\n    assertEquals((double)out.get(16), 23.39, 0.009);\n    assertEquals((double)out.get(17), 23.26, 0.009);\n    assertEquals((double)out.get(18), 23.23, 0.009);\n    assertEquals((double)out.get(19), 23.08, 0.009);\n    assertEquals((double)out.get(20), 22.92, 0.009);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["9ba1b632c041956c93c41aa1143d16a567014891"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}