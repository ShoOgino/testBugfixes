{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#getMaxShardsPerNode().mjava","commits":[{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#getMaxShardsPerNode().mjava","pathOld":"/dev/null","sourceNew":"  public int getMaxShardsPerNode() {\n    if (maxShardsPerNode == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, ZkStateReader.MAX_SHARDS_PER_NODE + \" is not in the cluster state.\");\n    }\n    return maxShardsPerNode;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8","date":1431966199,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#getMaxShardsPerNode().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#getMaxShardsPerNode().mjava","sourceNew":"  public int getMaxShardsPerNode() {\n    if (maxShardsPerNode == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, MAX_SHARDS_PER_NODE + \" is not in the cluster state.\");\n    }\n    return maxShardsPerNode;\n  }\n\n","sourceOld":"  public int getMaxShardsPerNode() {\n    if (maxShardsPerNode == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, ZkStateReader.MAX_SHARDS_PER_NODE + \" is not in the cluster state.\");\n    }\n    return maxShardsPerNode;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0806aac02ecbbdc6b5d9705ae15da193219c7af4","date":1499930856,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#getMaxShardsPerNode().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#getMaxShardsPerNode().mjava","sourceNew":"  public int getMaxShardsPerNode() {\n    if (maxShardsPerNode == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, MAX_SHARDS_PER_NODE + \" is not in the cluster state.\");\n    }\n    //maxShardsPerNode=0 when policy is used. This variable is not important then\n    return maxShardsPerNode == 0 ? Integer.MAX_VALUE : maxShardsPerNode;\n  }\n\n","sourceOld":"  public int getMaxShardsPerNode() {\n    if (maxShardsPerNode == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, MAX_SHARDS_PER_NODE + \" is not in the cluster state.\");\n    }\n    return maxShardsPerNode;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#getMaxShardsPerNode().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#getMaxShardsPerNode().mjava","sourceNew":"  public int getMaxShardsPerNode() {\n    if (maxShardsPerNode == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, MAX_SHARDS_PER_NODE + \" is not in the cluster state.\");\n    }\n    //maxShardsPerNode=0 when policy is used. This variable is not important then\n    return maxShardsPerNode == 0 ? Integer.MAX_VALUE : maxShardsPerNode;\n  }\n\n","sourceOld":"  public int getMaxShardsPerNode() {\n    if (maxShardsPerNode == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, MAX_SHARDS_PER_NODE + \" is not in the cluster state.\");\n    }\n    return maxShardsPerNode;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#getMaxShardsPerNode().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#getMaxShardsPerNode().mjava","sourceNew":"  public int getMaxShardsPerNode() {\n    if (maxShardsPerNode == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, MAX_SHARDS_PER_NODE + \" is not in the cluster state.\");\n    }\n    //maxShardsPerNode=0 when policy is used. This variable is not important then\n    return maxShardsPerNode == 0 ? Integer.MAX_VALUE : maxShardsPerNode;\n  }\n\n","sourceOld":"  public int getMaxShardsPerNode() {\n    if (maxShardsPerNode == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, MAX_SHARDS_PER_NODE + \" is not in the cluster state.\");\n    }\n    return maxShardsPerNode;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#getMaxShardsPerNode().mjava","sourceNew":null,"sourceOld":"  public int getMaxShardsPerNode() {\n    if (maxShardsPerNode == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, MAX_SHARDS_PER_NODE + \" is not in the cluster state.\");\n    }\n    //maxShardsPerNode=0 when policy is used. This variable is not important then\n    return maxShardsPerNode == 0 ? Integer.MAX_VALUE : maxShardsPerNode;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8","0806aac02ecbbdc6b5d9705ae15da193219c7af4"],"07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"560c18d71dad43d675158783c3840f8c80d6d39c":["07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"0806aac02ecbbdc6b5d9705ae15da193219c7af4":["07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["560c18d71dad43d675158783c3840f8c80d6d39c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c","0806aac02ecbbdc6b5d9705ae15da193219c7af4"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"560c18d71dad43d675158783c3840f8c80d6d39c":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"0806aac02ecbbdc6b5d9705ae15da193219c7af4":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}