{"path":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testDeleteSyntax().mjava","commits":[{"id":"baa723a66f51909657c89c07a455b3c15da9f761","date":1338908663,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testDeleteSyntax().mjava","pathOld":"/dev/null","sourceNew":"  // The delete syntax was both extended for simplification in 4.0\n  @Test\n  public void testDeleteSyntax() throws Exception {\n    String str = \"{'delete':10\"\n        +\"\\n ,'delete':'20'\"\n        +\"\\n ,'delete':['30','40']\"\n        + \"\\n}\\n\";\n    str = str.replace('\\'', '\"');\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(str), p);\n\n    // DELETE COMMANDS\n    assertEquals( 4, p.deleteCommands.size() );\n    DeleteUpdateCommand delete = p.deleteCommands.get( 0 );\n    assertEquals( delete.id, \"10\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 1 );\n    assertEquals( delete.id, \"20\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 2 );\n    assertEquals( delete.id, \"30\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 3 );\n    assertEquals( delete.id, \"40\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    req.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5dc2dbc2e49f222b72cdfc503db799a3738fb4f2","date":1338919199,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testDeleteSyntax().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testDeleteSyntax().mjava","sourceNew":"  // The delete syntax was both extended for simplification in 4.0\n  @Test\n  public void testDeleteSyntax() throws Exception {\n    String str = \"{'delete':10\"\n        +\"\\n ,'delete':'20'\"\n        +\"\\n ,'delete':['30','40']\"\n        +\"\\n ,'delete':{'id':50, '_version_':12345}\"\n        +\"\\n ,'delete':[{'id':60, '_version_':67890}, {'id':70, '_version_':77777}, {'query':'id:80', '_version_':88888}]\"\n        + \"\\n}\\n\";\n    str = str.replace('\\'', '\"');\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(str), p);\n\n    // DELETE COMMANDS\n    assertEquals( 8, p.deleteCommands.size() );\n    DeleteUpdateCommand delete = p.deleteCommands.get( 0 );\n    assertEquals( delete.id, \"10\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 1 );\n    assertEquals( delete.id, \"20\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 2 );\n    assertEquals( delete.id, \"30\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 3 );\n    assertEquals( delete.id, \"40\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 4 );\n    assertEquals( delete.id, \"50\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.getVersion(), 12345L);\n\n    delete = p.deleteCommands.get( 5 );\n    assertEquals( delete.id, \"60\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.getVersion(), 67890L);\n\n    delete = p.deleteCommands.get( 6 );\n    assertEquals( delete.id, \"70\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.getVersion(), 77777L);\n\n    delete = p.deleteCommands.get( 7 );\n    assertEquals( delete.id, null );\n    assertEquals( delete.query, \"id:80\" );\n    assertEquals( delete.getVersion(), 88888L);\n\n    req.close();\n  }\n\n","sourceOld":"  // The delete syntax was both extended for simplification in 4.0\n  @Test\n  public void testDeleteSyntax() throws Exception {\n    String str = \"{'delete':10\"\n        +\"\\n ,'delete':'20'\"\n        +\"\\n ,'delete':['30','40']\"\n        + \"\\n}\\n\";\n    str = str.replace('\\'', '\"');\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(str), p);\n\n    // DELETE COMMANDS\n    assertEquals( 4, p.deleteCommands.size() );\n    DeleteUpdateCommand delete = p.deleteCommands.get( 0 );\n    assertEquals( delete.id, \"10\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 1 );\n    assertEquals( delete.id, \"20\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 2 );\n    assertEquals( delete.id, \"30\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 3 );\n    assertEquals( delete.id, \"40\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":["747dd71fefcbc7142661c25334b74c518fef4d81"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"747dd71fefcbc7142661c25334b74c518fef4d81","date":1423504825,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testDeleteSyntax().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testDeleteSyntax().mjava","sourceNew":"  // The delete syntax was both extended for simplification in 4.0\n  @Test\n  public void testDeleteSyntax() throws Exception {\n    String str = \"{'delete':10\"\n        +\"\\n ,'delete':'20'\"\n        +\"\\n ,'delete':['30','40']\"\n        +\"\\n ,'delete':{'id':50, '_version_':12345}\"\n        +\"\\n ,'delete':[{'id':60, '_version_':67890}, {'id':70, '_version_':77777}, {'query':'id:80', '_version_':88888}]\"\n        +\"\\n ,'delete':{'id':90, '_route_':'shard1', '_version_':88888}\"\n        + \"\\n}\\n\";\n    str = str.replace('\\'', '\"');\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(str), p);\n\n    // DELETE COMMANDS\n    assertEquals( 9, p.deleteCommands.size() );\n    DeleteUpdateCommand delete = p.deleteCommands.get( 0 );\n    assertEquals( delete.id, \"10\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 1 );\n    assertEquals( delete.id, \"20\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 2 );\n    assertEquals( delete.id, \"30\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 3 );\n    assertEquals( delete.id, \"40\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 4 );\n    assertEquals( delete.id, \"50\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.getVersion(), 12345L);\n\n    delete = p.deleteCommands.get( 5 );\n    assertEquals( delete.id, \"60\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.getVersion(), 67890L);\n\n    delete = p.deleteCommands.get( 6 );\n    assertEquals( delete.id, \"70\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.getVersion(), 77777L);\n\n    delete = p.deleteCommands.get( 7 );\n    assertEquals( delete.id, null );\n    assertEquals( delete.query, \"id:80\" );\n    assertEquals(delete.getVersion(), 88888L);\n\n    delete = p.deleteCommands.get(8);\n    assertEquals(delete.id, \"90\");\n    assertEquals(delete.query, null);\n    assertEquals(delete.getRoute(), \"shard1\");\n    assertEquals(delete.getVersion(), 88888L);\n\n    req.close();\n  }\n\n","sourceOld":"  // The delete syntax was both extended for simplification in 4.0\n  @Test\n  public void testDeleteSyntax() throws Exception {\n    String str = \"{'delete':10\"\n        +\"\\n ,'delete':'20'\"\n        +\"\\n ,'delete':['30','40']\"\n        +\"\\n ,'delete':{'id':50, '_version_':12345}\"\n        +\"\\n ,'delete':[{'id':60, '_version_':67890}, {'id':70, '_version_':77777}, {'query':'id:80', '_version_':88888}]\"\n        + \"\\n}\\n\";\n    str = str.replace('\\'', '\"');\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(str), p);\n\n    // DELETE COMMANDS\n    assertEquals( 8, p.deleteCommands.size() );\n    DeleteUpdateCommand delete = p.deleteCommands.get( 0 );\n    assertEquals( delete.id, \"10\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 1 );\n    assertEquals( delete.id, \"20\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 2 );\n    assertEquals( delete.id, \"30\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 3 );\n    assertEquals( delete.id, \"40\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.commitWithin, -1);\n\n    delete = p.deleteCommands.get( 4 );\n    assertEquals( delete.id, \"50\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.getVersion(), 12345L);\n\n    delete = p.deleteCommands.get( 5 );\n    assertEquals( delete.id, \"60\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.getVersion(), 67890L);\n\n    delete = p.deleteCommands.get( 6 );\n    assertEquals( delete.id, \"70\" );\n    assertEquals( delete.query, null );\n    assertEquals( delete.getVersion(), 77777L);\n\n    delete = p.deleteCommands.get( 7 );\n    assertEquals( delete.id, null );\n    assertEquals( delete.query, \"id:80\" );\n    assertEquals( delete.getVersion(), 88888L);\n\n    req.close();\n  }\n\n","bugFix":["5dc2dbc2e49f222b72cdfc503db799a3738fb4f2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5dc2dbc2e49f222b72cdfc503db799a3738fb4f2":["baa723a66f51909657c89c07a455b3c15da9f761"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"baa723a66f51909657c89c07a455b3c15da9f761":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"747dd71fefcbc7142661c25334b74c518fef4d81":["5dc2dbc2e49f222b72cdfc503db799a3738fb4f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["747dd71fefcbc7142661c25334b74c518fef4d81"]},"commit2Childs":{"5dc2dbc2e49f222b72cdfc503db799a3738fb4f2":["747dd71fefcbc7142661c25334b74c518fef4d81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["baa723a66f51909657c89c07a455b3c15da9f761"],"baa723a66f51909657c89c07a455b3c15da9f761":["5dc2dbc2e49f222b72cdfc503db799a3738fb4f2"],"747dd71fefcbc7142661c25334b74c518fef4d81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}