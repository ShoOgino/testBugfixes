{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","commits":[{"id":"2c374fcdaaef447f786e6c8a1841c44b24ec178c","date":1171220362,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#makeDocument().mjava","sourceNew":"  protected DocData getNextDocData() throws Exception {\r\n    File f = null;\r\n    String name = null;\r\n    synchronized (this) {\r\n      f = (File) inputFiles.get(nextFile++);\r\n      name = f.getCanonicalPath()+\"_\"+iteration;\r\n      if (nextFile >= inputFiles.size()) { \r\n        // exhausted files, start a new round\r\n        nextFile = 0;\r\n        iteration++;\r\n      }\r\n    }\r\n    \r\n    BufferedReader reader = new BufferedReader(new FileReader(f));\r\n    String line = null;\r\n    //First line is the date, 3rd is the title, rest is body\r\n    String dateStr = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    String title = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    StringBuffer bodyBuf = new StringBuffer(1024);\r\n    while ((line = reader.readLine()) != null) {\r\n      bodyBuf.append(line).append(' ');\r\n    }\r\n    \r\n    addBytes(f.length());\r\n\r\n    DocData dd = new DocData();\r\n    \r\n    dd.date = dateFormat.parse(dateStr.trim());\r\n    dd.name = name;\r\n    dd.title = title;\r\n    dd.body = bodyBuf.toString();\r\n    return dd;\r\n  }\r\n\n","sourceOld":"  /* (non-Javadoc)\r\n   * @see SimpleDocMaker#makeDocument()\r\n   */\r\n  public Document makeDocument() throws Exception {\r\n    File f = null;\r\n    String name = null;\r\n    synchronized (this) {\r\n      f = (File) txtFiles.get(nextFile++);\r\n      name = f.getCanonicalPath()+\"_\"+round;\r\n      if (nextFile >= txtFiles.size()) { \r\n        // exhausted files, start a new round\r\n        nextFile = 0;\r\n        round++;\r\n      }\r\n    }\r\n    \r\n    Document doc = new Document();\r\n    doc.add(new Field(\"name\",name,storeVal,indexVal,termVecVal));\r\n    BufferedReader reader = new BufferedReader(new FileReader(f));\r\n    String line = null;\r\n    //First line is the date, 3rd is the title, rest is body\r\n    String dateStr = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    String title = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    StringBuffer body = new StringBuffer(1024);\r\n    while ((line = reader.readLine()) != null) {\r\n      body.append(line).append(' ');\r\n    }\r\n    Date date = dateFormat.parse(dateStr.trim());\r\n    doc.add(new Field(\"date\", DateTools.dateToString(date, DateTools.Resolution.SECOND), \r\n        Field.Store.YES, Field.Index.UN_TOKENIZED));\r\n\r\n    if (title != null) {\r\n      doc.add(new Field(\"title\", title, storeVal,indexVal,termVecVal));\r\n    }\r\n    if (body.length() > 0) {\r\n        doc.add(new Field(\"body\", body.toString(), storeVal,indexVal,termVecVal));\r\n    }\r\n\r\n    count++;\r\n    addBytes(f.length());\r\n\r\n    return doc;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c55a660bceaf72068ba1fbf6856388430c0a7334","date":1174007816,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","sourceNew":"  protected DocData getNextDocData() throws Exception {\r\n    File f = null;\r\n    String name = null;\r\n    synchronized (this) {\r\n      f = (File) inputFiles.get(nextFile++);\r\n      name = f.getCanonicalPath()+\"_\"+iteration;\r\n      if (nextFile >= inputFiles.size()) { \r\n        // exhausted files, start a new round\r\n        nextFile = 0;\r\n        iteration++;\r\n      }\r\n    }\r\n    \r\n    BufferedReader reader = new BufferedReader(new FileReader(f));\r\n    String line = null;\r\n    //First line is the date, 3rd is the title, rest is body\r\n    String dateStr = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    String title = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    StringBuffer bodyBuf = new StringBuffer(1024);\r\n    while ((line = reader.readLine()) != null) {\r\n      bodyBuf.append(line).append(' ');\r\n    }\r\n    reader.close();\r\n    \r\n    addBytes(f.length());\r\n\r\n    DocData dd = new DocData();\r\n    \r\n    dd.date = dateFormat.parse(dateStr.trim());\r\n    dd.name = name;\r\n    dd.title = title;\r\n    dd.body = bodyBuf.toString();\r\n    return dd;\r\n  }\r\n\n","sourceOld":"  protected DocData getNextDocData() throws Exception {\r\n    File f = null;\r\n    String name = null;\r\n    synchronized (this) {\r\n      f = (File) inputFiles.get(nextFile++);\r\n      name = f.getCanonicalPath()+\"_\"+iteration;\r\n      if (nextFile >= inputFiles.size()) { \r\n        // exhausted files, start a new round\r\n        nextFile = 0;\r\n        iteration++;\r\n      }\r\n    }\r\n    \r\n    BufferedReader reader = new BufferedReader(new FileReader(f));\r\n    String line = null;\r\n    //First line is the date, 3rd is the title, rest is body\r\n    String dateStr = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    String title = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    StringBuffer bodyBuf = new StringBuffer(1024);\r\n    while ((line = reader.readLine()) != null) {\r\n      bodyBuf.append(line).append(' ');\r\n    }\r\n    \r\n    addBytes(f.length());\r\n\r\n    DocData dd = new DocData();\r\n    \r\n    dd.date = dateFormat.parse(dateStr.trim());\r\n    dd.name = name;\r\n    dd.title = title;\r\n    dd.body = bodyBuf.toString();\r\n    return dd;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd4e80edfd616a2da1bb91fd01d54d8d0b9e10b1","date":1174621692,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","sourceNew":"  protected DocData getNextDocData() throws Exception {\r\n    File f = null;\r\n    String name = null;\r\n    synchronized (this) {\r\n      f = (File) inputFiles.get(nextFile++);\r\n      name = f.getCanonicalPath()+\"_\"+iteration;\r\n      if (nextFile >= inputFiles.size()) { \r\n        // exhausted files, start a new round\r\n        nextFile = 0;\r\n        iteration++;\r\n      }\r\n    }\r\n    \r\n    BufferedReader reader = new BufferedReader(new FileReader(f));\r\n    String line = null;\r\n    //First line is the date, 3rd is the title, rest is body\r\n    String dateStr = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    String title = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    StringBuffer bodyBuf = new StringBuffer(1024);\r\n    while ((line = reader.readLine()) != null) {\r\n      bodyBuf.append(line).append(' ');\r\n    }\r\n    reader.close();\r\n    \r\n    addBytes(f.length());\r\n\r\n    DocData dd = new DocData();\r\n    \r\n    dd.date = dateFormat.parse(dateStr.trim());\r\n    dd.name = name;\r\n    dd.title = title;\r\n    dd.body = bodyBuf.toString();\r\n    if (storeBytes == true)\r\n    {\r\n      dd.bytes = dd.body.getBytes(\"UTF-8\");\r\n    }\r\n    return dd;\r\n  }\r\n\n","sourceOld":"  protected DocData getNextDocData() throws Exception {\r\n    File f = null;\r\n    String name = null;\r\n    synchronized (this) {\r\n      f = (File) inputFiles.get(nextFile++);\r\n      name = f.getCanonicalPath()+\"_\"+iteration;\r\n      if (nextFile >= inputFiles.size()) { \r\n        // exhausted files, start a new round\r\n        nextFile = 0;\r\n        iteration++;\r\n      }\r\n    }\r\n    \r\n    BufferedReader reader = new BufferedReader(new FileReader(f));\r\n    String line = null;\r\n    //First line is the date, 3rd is the title, rest is body\r\n    String dateStr = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    String title = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    StringBuffer bodyBuf = new StringBuffer(1024);\r\n    while ((line = reader.readLine()) != null) {\r\n      bodyBuf.append(line).append(' ');\r\n    }\r\n    reader.close();\r\n    \r\n    addBytes(f.length());\r\n\r\n    DocData dd = new DocData();\r\n    \r\n    dd.date = dateFormat.parse(dateStr.trim());\r\n    dd.name = name;\r\n    dd.title = title;\r\n    dd.body = bodyBuf.toString();\r\n    return dd;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0f4b47efbf80cb689c6a58715ad0b93b088658e","date":1174655626,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","sourceNew":"  protected DocData getNextDocData() throws Exception {\r\n    File f = null;\r\n    String name = null;\r\n    synchronized (this) {\r\n      f = (File) inputFiles.get(nextFile++);\r\n      name = f.getCanonicalPath()+\"_\"+iteration;\r\n      if (nextFile >= inputFiles.size()) { \r\n        // exhausted files, start a new round\r\n        nextFile = 0;\r\n        iteration++;\r\n      }\r\n    }\r\n    \r\n    BufferedReader reader = new BufferedReader(new FileReader(f));\r\n    String line = null;\r\n    //First line is the date, 3rd is the title, rest is body\r\n    String dateStr = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    String title = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    StringBuffer bodyBuf = new StringBuffer(1024);\r\n    while ((line = reader.readLine()) != null) {\r\n      bodyBuf.append(line).append(' ');\r\n    }\r\n    reader.close();\r\n    \r\n    addBytes(f.length());\r\n\r\n    DocData dd = new DocData();\r\n    \r\n    dd.date = dateFormat.parse(dateStr.trim());\r\n    dd.name = name;\r\n    dd.title = title;\r\n    dd.body = bodyBuf.toString();\r\n    return dd;\r\n  }\r\n\n","sourceOld":"  protected DocData getNextDocData() throws Exception {\r\n    File f = null;\r\n    String name = null;\r\n    synchronized (this) {\r\n      f = (File) inputFiles.get(nextFile++);\r\n      name = f.getCanonicalPath()+\"_\"+iteration;\r\n      if (nextFile >= inputFiles.size()) { \r\n        // exhausted files, start a new round\r\n        nextFile = 0;\r\n        iteration++;\r\n      }\r\n    }\r\n    \r\n    BufferedReader reader = new BufferedReader(new FileReader(f));\r\n    String line = null;\r\n    //First line is the date, 3rd is the title, rest is body\r\n    String dateStr = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    String title = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    StringBuffer bodyBuf = new StringBuffer(1024);\r\n    while ((line = reader.readLine()) != null) {\r\n      bodyBuf.append(line).append(' ');\r\n    }\r\n    reader.close();\r\n    \r\n    addBytes(f.length());\r\n\r\n    DocData dd = new DocData();\r\n    \r\n    dd.date = dateFormat.parse(dateStr.trim());\r\n    dd.name = name;\r\n    dd.title = title;\r\n    dd.body = bodyBuf.toString();\r\n    if (storeBytes == true)\r\n    {\r\n      dd.bytes = dd.body.getBytes(\"UTF-8\");\r\n    }\r\n    return dd;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81573e29e6e5db648330b225c60d44b1c3eb388e","date":1174927593,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","sourceNew":"  protected DocData getNextDocData() throws Exception {\r\n    File f = null;\r\n    String name = null;\r\n    synchronized (this) {\r\n      if (nextFile >= inputFiles.size()) { \r\n        // exhausted files, start a new round, unless forever set to false.\r\n        if (!forever) {\r\n          throw new NoMoreDataException();\r\n        }\r\n        nextFile = 0;\r\n        iteration++;\r\n      }\r\n      f = (File) inputFiles.get(nextFile++);\r\n      name = f.getCanonicalPath()+\"_\"+iteration;\r\n    }\r\n    \r\n    BufferedReader reader = new BufferedReader(new FileReader(f));\r\n    String line = null;\r\n    //First line is the date, 3rd is the title, rest is body\r\n    String dateStr = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    String title = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    StringBuffer bodyBuf = new StringBuffer(1024);\r\n    while ((line = reader.readLine()) != null) {\r\n      bodyBuf.append(line).append(' ');\r\n    }\r\n    reader.close();\r\n    \r\n    addBytes(f.length());\r\n\r\n    \r\n    Date date = dateFormat.parse(dateStr.trim()); \r\n    return new DocData(name, bodyBuf.toString(), title, null, date);\r\n  }\r\n\n","sourceOld":"  protected DocData getNextDocData() throws Exception {\r\n    File f = null;\r\n    String name = null;\r\n    synchronized (this) {\r\n      f = (File) inputFiles.get(nextFile++);\r\n      name = f.getCanonicalPath()+\"_\"+iteration;\r\n      if (nextFile >= inputFiles.size()) { \r\n        // exhausted files, start a new round\r\n        nextFile = 0;\r\n        iteration++;\r\n      }\r\n    }\r\n    \r\n    BufferedReader reader = new BufferedReader(new FileReader(f));\r\n    String line = null;\r\n    //First line is the date, 3rd is the title, rest is body\r\n    String dateStr = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    String title = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    StringBuffer bodyBuf = new StringBuffer(1024);\r\n    while ((line = reader.readLine()) != null) {\r\n      bodyBuf.append(line).append(' ');\r\n    }\r\n    reader.close();\r\n    \r\n    addBytes(f.length());\r\n\r\n    DocData dd = new DocData();\r\n    \r\n    dd.date = dateFormat.parse(dateStr.trim());\r\n    dd.name = name;\r\n    dd.title = title;\r\n    dd.body = bodyBuf.toString();\r\n    return dd;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3738fa43eaa87dc7b393fe98b04cde1019e20bac","date":1175557034,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","sourceNew":"  protected DocData getNextDocData() throws Exception {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) { \n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = (File) inputFiles.get(nextFile++);\n      name = f.getCanonicalPath()+\"_\"+iteration;\n    }\n    \n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    String line = null;\n    //First line is the date, 3rd is the title, rest is body\n    String dateStr = reader.readLine();\n    reader.readLine();//skip an empty line\n    String title = reader.readLine();\n    reader.readLine();//skip an empty line\n    StringBuffer bodyBuf = new StringBuffer(1024);\n    while ((line = reader.readLine()) != null) {\n      bodyBuf.append(line).append(' ');\n    }\n    reader.close();\n    \n    addBytes(f.length());\n\n    \n    Date date = dateFormat.parse(dateStr.trim()); \n    return new DocData(name, bodyBuf.toString(), title, null, date);\n  }\n\n","sourceOld":"  protected DocData getNextDocData() throws Exception {\r\n    File f = null;\r\n    String name = null;\r\n    synchronized (this) {\r\n      if (nextFile >= inputFiles.size()) { \r\n        // exhausted files, start a new round, unless forever set to false.\r\n        if (!forever) {\r\n          throw new NoMoreDataException();\r\n        }\r\n        nextFile = 0;\r\n        iteration++;\r\n      }\r\n      f = (File) inputFiles.get(nextFile++);\r\n      name = f.getCanonicalPath()+\"_\"+iteration;\r\n    }\r\n    \r\n    BufferedReader reader = new BufferedReader(new FileReader(f));\r\n    String line = null;\r\n    //First line is the date, 3rd is the title, rest is body\r\n    String dateStr = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    String title = reader.readLine();\r\n    reader.readLine();//skip an empty line\r\n    StringBuffer bodyBuf = new StringBuffer(1024);\r\n    while ((line = reader.readLine()) != null) {\r\n      bodyBuf.append(line).append(' ');\r\n    }\r\n    reader.close();\r\n    \r\n    addBytes(f.length());\r\n\r\n    \r\n    Date date = dateFormat.parse(dateStr.trim()); \r\n    return new DocData(name, bodyBuf.toString(), title, null, date);\r\n  }\r\n\n","bugFix":null,"bugIntro":["87c64a12419171222386231ce507096ac851b3cd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"87c64a12419171222386231ce507096ac851b3cd","date":1182882441,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","sourceNew":"  protected DocData getNextDocData() throws Exception {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) { \n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = (File) inputFiles.get(nextFile++);\n      name = f.getCanonicalPath()+\"_\"+iteration;\n    }\n    \n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    String line = null;\n    //First line is the date, 3rd is the title, rest is body\n    String dateStr = reader.readLine();\n    reader.readLine();//skip an empty line\n    String title = reader.readLine();\n    reader.readLine();//skip an empty line\n    StringBuffer bodyBuf = new StringBuffer(1024);\n    while ((line = reader.readLine()) != null) {\n      bodyBuf.append(line).append(' ');\n    }\n    reader.close();\n    \n    addBytes(f.length());\n\n    \n    Date date = getDateFormat().parse(dateStr.trim()); \n    return new DocData(name, bodyBuf.toString(), title, null, date);\n  }\n\n","sourceOld":"  protected DocData getNextDocData() throws Exception {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) { \n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = (File) inputFiles.get(nextFile++);\n      name = f.getCanonicalPath()+\"_\"+iteration;\n    }\n    \n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    String line = null;\n    //First line is the date, 3rd is the title, rest is body\n    String dateStr = reader.readLine();\n    reader.readLine();//skip an empty line\n    String title = reader.readLine();\n    reader.readLine();//skip an empty line\n    StringBuffer bodyBuf = new StringBuffer(1024);\n    while ((line = reader.readLine()) != null) {\n      bodyBuf.append(line).append(' ');\n    }\n    reader.close();\n    \n    addBytes(f.length());\n\n    \n    Date date = dateFormat.parse(dateStr.trim()); \n    return new DocData(name, bodyBuf.toString(), title, null, date);\n  }\n\n","bugFix":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","sourceNew":"  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = (File) inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuffer bodyBuf = new StringBuffer(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  protected DocData getNextDocData() throws Exception {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) { \n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = (File) inputFiles.get(nextFile++);\n      name = f.getCanonicalPath()+\"_\"+iteration;\n    }\n    \n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    String line = null;\n    //First line is the date, 3rd is the title, rest is body\n    String dateStr = reader.readLine();\n    reader.readLine();//skip an empty line\n    String title = reader.readLine();\n    reader.readLine();//skip an empty line\n    StringBuffer bodyBuf = new StringBuffer(1024);\n    while ((line = reader.readLine()) != null) {\n      bodyBuf.append(line).append(' ');\n    }\n    reader.close();\n    \n    addBytes(f.length());\n\n    \n    Date date = getDateFormat().parse(dateStr.trim()); \n    return new DocData(name, bodyBuf.toString(), title, null, date);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"87c64a12419171222386231ce507096ac851b3cd":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["87c64a12419171222386231ce507096ac851b3cd"],"bd4e80edfd616a2da1bb91fd01d54d8d0b9e10b1":["c55a660bceaf72068ba1fbf6856388430c0a7334"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0f4b47efbf80cb689c6a58715ad0b93b088658e":["bd4e80edfd616a2da1bb91fd01d54d8d0b9e10b1"],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["81573e29e6e5db648330b225c60d44b1c3eb388e"],"2c374fcdaaef447f786e6c8a1841c44b24ec178c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c55a660bceaf72068ba1fbf6856388430c0a7334":["2c374fcdaaef447f786e6c8a1841c44b24ec178c"],"81573e29e6e5db648330b225c60d44b1c3eb388e":["a0f4b47efbf80cb689c6a58715ad0b93b088658e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"]},"commit2Childs":{"87c64a12419171222386231ce507096ac851b3cd":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bd4e80edfd616a2da1bb91fd01d54d8d0b9e10b1":["a0f4b47efbf80cb689c6a58715ad0b93b088658e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2c374fcdaaef447f786e6c8a1841c44b24ec178c"],"a0f4b47efbf80cb689c6a58715ad0b93b088658e":["81573e29e6e5db648330b225c60d44b1c3eb388e"],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["87c64a12419171222386231ce507096ac851b3cd"],"2c374fcdaaef447f786e6c8a1841c44b24ec178c":["c55a660bceaf72068ba1fbf6856388430c0a7334"],"c55a660bceaf72068ba1fbf6856388430c0a7334":["bd4e80edfd616a2da1bb91fd01d54d8d0b9e10b1"],"81573e29e6e5db648330b225c60d44b1c3eb388e":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}