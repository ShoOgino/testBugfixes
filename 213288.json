{"path":"lucene/core/src/test/org/apache/lucene/util/TestStringHelper#testBytesDifference().mjava","commits":[{"id":"52c5280f6286c7546ab75b72c663f7bb1dc10e96","date":1427372570,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestStringHelper#testBytesDifference().mjava","pathOld":"/dev/null","sourceNew":"  public void testBytesDifference() {\n    BytesRef left = new BytesRef(\"foobar\");\n    BytesRef right = new BytesRef(\"foozo\");\n    assertEquals(3, StringHelper.bytesDifference(left, right));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestStringHelper#testBytesDifference().mjava","pathOld":"/dev/null","sourceNew":"  public void testBytesDifference() {\n    BytesRef left = new BytesRef(\"foobar\");\n    BytesRef right = new BytesRef(\"foozo\");\n    assertEquals(3, StringHelper.bytesDifference(left, right));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"456d7e7092cb043c740b4674301660ee8abc26fe","date":1517645879,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestStringHelper#testBytesDifference().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestStringHelper#testBytesDifference().mjava","sourceNew":"  public void testBytesDifference() {\n    BytesRef left = new BytesRef(\"foobar\");\n    BytesRef right = new BytesRef(\"foozo\");\n    assertEquals(3, StringHelper.bytesDifference(left, right));\n    assertEquals(2, StringHelper.bytesDifference(new BytesRef(\"foo\"), new BytesRef(\"for\")));\n    assertEquals(2, StringHelper.bytesDifference(new BytesRef(\"foo1234\"), new BytesRef(\"for1234\")));\n    assertEquals(1, StringHelper.bytesDifference(new BytesRef(\"foo\"), new BytesRef(\"fz\")));\n    assertEquals(0, StringHelper.bytesDifference(new BytesRef(\"foo\"), new BytesRef(\"g\")));\n    assertEquals(3, StringHelper.bytesDifference(new BytesRef(\"foo\"), new BytesRef(\"food\")));\n    // we can detect terms are out of order if we see a duplicate\n    expectThrows(IllegalArgumentException.class, () -> {\n      StringHelper.bytesDifference(new BytesRef(\"ab\"), new BytesRef(\"ab\"));\n    });\n  }\n\n","sourceOld":"  public void testBytesDifference() {\n    BytesRef left = new BytesRef(\"foobar\");\n    BytesRef right = new BytesRef(\"foozo\");\n    assertEquals(3, StringHelper.bytesDifference(left, right));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","52c5280f6286c7546ab75b72c663f7bb1dc10e96"],"456d7e7092cb043c740b4674301660ee8abc26fe":["52c5280f6286c7546ab75b72c663f7bb1dc10e96"],"52c5280f6286c7546ab75b72c663f7bb1dc10e96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["456d7e7092cb043c740b4674301660ee8abc26fe"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"456d7e7092cb043c740b4674301660ee8abc26fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"52c5280f6286c7546ab75b72c663f7bb1dc10e96":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","456d7e7092cb043c740b4674301660ee8abc26fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","52c5280f6286c7546ab75b72c663f7bb1dc10e96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}