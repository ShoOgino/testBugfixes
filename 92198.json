{"path":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7cf464adc9721589a2872247d15442e59766e791","date":1327607202,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78a55f24d9b493c2a1cecf79f1d78279062b545b","date":1327688152,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84250b785753dee996ec3f88a1ea2e941ebe7cfb","date":1328840665,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    if(numShards != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShards);\n    } \n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33d0ed80b7b47e34ad3ff033a77544563aba3085","date":1341244632,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    if(numShards != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShards);\n    } \n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    if(numShards != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShards);\n    } \n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    if(numShards != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShards);\n    } \n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    controlJetty = createJetty(testDir, testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    if(numShards != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShards);\n    } \n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    if(numShards != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShards);\n    } \n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    if(numShards != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShards);\n    } \n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    if(numShards != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShards);\n    } \n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    if(numShards != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShards);\n    } \n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    if(numShards != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShards);\n    } \n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numServers) throws Exception {\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    String numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);\n    controlJetty = createJetty(new File(getSolrHome()), testDir + \"/control/data\",\n        \"control_shard\");\n    System.clearProperty(\"collection\");\n    if(numShards != null) {\n      System.setProperty(ZkStateReader.NUM_SHARDS_PROP, numShards);\n    } \n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n    \n    createJettys(numServers, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"78a55f24d9b493c2a1cecf79f1d78279062b545b":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","7cf464adc9721589a2872247d15442e59766e791"],"33d0ed80b7b47e34ad3ff033a77544563aba3085":["84250b785753dee996ec3f88a1ea2e941ebe7cfb"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["0d22ac6a4146774c1bc8400160fc0b6150294e92","7cf464adc9721589a2872247d15442e59766e791"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2c30e4c1cee08b3b229a77991882594fe7250b66"],"84250b785753dee996ec3f88a1ea2e941ebe7cfb":["7cf464adc9721589a2872247d15442e59766e791"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["84250b785753dee996ec3f88a1ea2e941ebe7cfb","33d0ed80b7b47e34ad3ff033a77544563aba3085"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["33d0ed80b7b47e34ad3ff033a77544563aba3085","2c30e4c1cee08b3b229a77991882594fe7250b66"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7cf464adc9721589a2872247d15442e59766e791":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["33d0ed80b7b47e34ad3ff033a77544563aba3085"]},"commit2Childs":{"78a55f24d9b493c2a1cecf79f1d78279062b545b":[],"33d0ed80b7b47e34ad3ff033a77544563aba3085":["fe33227f6805edab2036cbb80645cc4e2d1fa424","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["78a55f24d9b493c2a1cecf79f1d78279062b545b"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["fd92b8bcc88e969302510acf77bd6970da3994c4"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"84250b785753dee996ec3f88a1ea2e941ebe7cfb":["33d0ed80b7b47e34ad3ff033a77544563aba3085","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","7cf464adc9721589a2872247d15442e59766e791"],"7cf464adc9721589a2872247d15442e59766e791":["78a55f24d9b493c2a1cecf79f1d78279062b545b","fd92b8bcc88e969302510acf77bd6970da3994c4","84250b785753dee996ec3f88a1ea2e941ebe7cfb"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["78a55f24d9b493c2a1cecf79f1d78279062b545b","fd92b8bcc88e969302510acf77bd6970da3994c4","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}