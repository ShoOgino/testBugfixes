{"path":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","commits":[{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","pathOld":"/dev/null","sourceNew":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) throws IOException {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    // Writes stored fields:\n    storedFieldsWriter = docWriter.codec.storedFieldsFormat().fieldsWriter(docWriter.directory, docWriter.getSegmentInfo(), IOContext.DEFAULT);\n\n    TermsHash termVectorsWriter = new TermVectorsConsumer(docWriter);\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","pathOld":"/dev/null","sourceNew":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) throws IOException {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    // Writes stored fields:\n    storedFieldsWriter = docWriter.codec.storedFieldsFormat().fieldsWriter(docWriter.directory, docWriter.getSegmentInfo(), IOContext.DEFAULT);\n\n    TermsHash termVectorsWriter = new TermVectorsConsumer(docWriter);\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","pathOld":"/dev/null","sourceNew":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) throws IOException {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    // Writes stored fields:\n    storedFieldsWriter = docWriter.codec.storedFieldsFormat().fieldsWriter(docWriter.directory, docWriter.getSegmentInfo(), IOContext.DEFAULT);\n\n    TermsHash termVectorsWriter = new TermVectorsConsumer(docWriter);\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06555ac714e8cc3a237853c80f762cfabc07a509","date":1398998920,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","sourceNew":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) throws IOException {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    TermsHash termVectorsWriter = new TermVectorsConsumer(docWriter);\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","sourceOld":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) throws IOException {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    // Writes stored fields:\n    storedFieldsWriter = docWriter.codec.storedFieldsFormat().fieldsWriter(docWriter.directory, docWriter.getSegmentInfo(), IOContext.DEFAULT);\n\n    TermsHash termVectorsWriter = new TermVectorsConsumer(docWriter);\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"86a0a50d2d14aaee1e635bbec914468551f7f9a2","date":1482234306,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","sourceNew":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) throws IOException {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    final TermsHash termVectorsWriter;\n    if (docWriter.getSegmentInfo().getIndexSort() == null) {\n      storedFieldsConsumer = new StoredFieldsConsumer(docWriter);\n      termVectorsWriter = new TermVectorsConsumer(docWriter);\n    } else {\n      storedFieldsConsumer = new SortingStoredFieldsConsumer(docWriter);\n      termVectorsWriter = new SortingTermVectorsConsumer(docWriter);\n    }\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","sourceOld":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) throws IOException {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    TermsHash termVectorsWriter = new TermVectorsConsumer(docWriter);\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","bugFix":["52c7e49be259508735752fba88085255014a6ecf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","sourceNew":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) throws IOException {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    final TermsHash termVectorsWriter;\n    if (docWriter.getSegmentInfo().getIndexSort() == null) {\n      storedFieldsConsumer = new StoredFieldsConsumer(docWriter);\n      termVectorsWriter = new TermVectorsConsumer(docWriter);\n    } else {\n      storedFieldsConsumer = new SortingStoredFieldsConsumer(docWriter);\n      termVectorsWriter = new SortingTermVectorsConsumer(docWriter);\n    }\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","sourceOld":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) throws IOException {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    TermsHash termVectorsWriter = new TermVectorsConsumer(docWriter);\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc1841e9449be30dd7bcb15d6247b4eb5c83a07b","date":1584454718,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","sourceNew":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    final TermsHash termVectorsWriter;\n    if (docWriter.getSegmentInfo().getIndexSort() == null) {\n      storedFieldsConsumer = new StoredFieldsConsumer(docWriter);\n      termVectorsWriter = new TermVectorsConsumer(docWriter);\n    } else {\n      storedFieldsConsumer = new SortingStoredFieldsConsumer(docWriter);\n      termVectorsWriter = new SortingTermVectorsConsumer(docWriter);\n    }\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","sourceOld":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) throws IOException {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    final TermsHash termVectorsWriter;\n    if (docWriter.getSegmentInfo().getIndexSort() == null) {\n      storedFieldsConsumer = new StoredFieldsConsumer(docWriter);\n      termVectorsWriter = new TermVectorsConsumer(docWriter);\n    } else {\n      storedFieldsConsumer = new SortingStoredFieldsConsumer(docWriter);\n      termVectorsWriter = new SortingTermVectorsConsumer(docWriter);\n    }\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f97270426d92300e08ac1bd1a4ef499ae02e88b7","date":1592503330,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","sourceNew":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.bytesUsed = docWriter.bytesUsed;\n    this.infoStream = docWriter.getIndexWriterConfig().getInfoStream();\n\n    final TermsHash termVectorsWriter;\n    if (docWriter.getSegmentInfo().getIndexSort() == null) {\n      storedFieldsConsumer = new StoredFieldsConsumer(docWriter);\n      termVectorsWriter = new TermVectorsConsumer(docWriter);\n    } else {\n      storedFieldsConsumer = new SortingStoredFieldsConsumer(docWriter);\n      termVectorsWriter = new SortingTermVectorsConsumer(docWriter);\n    }\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","sourceOld":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.docState = docWriter.docState;\n    this.bytesUsed = docWriter.bytesUsed;\n\n    final TermsHash termVectorsWriter;\n    if (docWriter.getSegmentInfo().getIndexSort() == null) {\n      storedFieldsConsumer = new StoredFieldsConsumer(docWriter);\n      termVectorsWriter = new TermVectorsConsumer(docWriter);\n    } else {\n      storedFieldsConsumer = new SortingStoredFieldsConsumer(docWriter);\n      termVectorsWriter = new SortingTermVectorsConsumer(docWriter);\n    }\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4","date":1599581893,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","sourceNew":"  DefaultIndexingChain(DocumentsWriterPerThread docWriter) {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.infoStream = docWriter.getIndexWriterConfig().getInfoStream();\n\n    final TermsHash termVectorsWriter;\n    if (docWriter.getSegmentInfo().getIndexSort() == null) {\n      storedFieldsConsumer = new StoredFieldsConsumer(docWriter.codec, docWriter.directory, docWriter.getSegmentInfo());\n      termVectorsWriter = new TermVectorsConsumer(docWriter);\n    } else {\n      storedFieldsConsumer = new SortingStoredFieldsConsumer(docWriter.codec, docWriter.directory, docWriter.getSegmentInfo());\n      termVectorsWriter = new SortingTermVectorsConsumer(docWriter);\n    }\n    termsHash = new FreqProxTermsWriter(docWriter, bytesUsed, termVectorsWriter);\n  }\n\n","sourceOld":"  public DefaultIndexingChain(DocumentsWriterPerThread docWriter) {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.bytesUsed = docWriter.bytesUsed;\n    this.infoStream = docWriter.getIndexWriterConfig().getInfoStream();\n\n    final TermsHash termVectorsWriter;\n    if (docWriter.getSegmentInfo().getIndexSort() == null) {\n      storedFieldsConsumer = new StoredFieldsConsumer(docWriter);\n      termVectorsWriter = new TermVectorsConsumer(docWriter);\n    } else {\n      storedFieldsConsumer = new SortingStoredFieldsConsumer(docWriter);\n      termVectorsWriter = new SortingTermVectorsConsumer(docWriter);\n    }\n    termsHash = new FreqProxTermsWriter(docWriter, termVectorsWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"49f1924bd448393fbdfef8b5ebed799f938169d3","date":1600069616,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","sourceNew":null,"sourceOld":"  DefaultIndexingChain(DocumentsWriterPerThread docWriter) {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.infoStream = docWriter.getIndexWriterConfig().getInfoStream();\n\n    final TermsHash termVectorsWriter;\n    if (docWriter.getSegmentInfo().getIndexSort() == null) {\n      storedFieldsConsumer = new StoredFieldsConsumer(docWriter.codec, docWriter.directory, docWriter.getSegmentInfo());\n      termVectorsWriter = new TermVectorsConsumer(docWriter);\n    } else {\n      storedFieldsConsumer = new SortingStoredFieldsConsumer(docWriter.codec, docWriter.directory, docWriter.getSegmentInfo());\n      termVectorsWriter = new SortingTermVectorsConsumer(docWriter);\n    }\n    termsHash = new FreqProxTermsWriter(docWriter, bytesUsed, termVectorsWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0dcf8f79417865e5028d753e669fae06457e8369","date":1600073240,"type":4,"author":"noblepaul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#DefaultIndexingChain(DocumentsWriterPerThread).mjava","sourceNew":null,"sourceOld":"  DefaultIndexingChain(DocumentsWriterPerThread docWriter) {\n    this.docWriter = docWriter;\n    this.fieldInfos = docWriter.getFieldInfosBuilder();\n    this.infoStream = docWriter.getIndexWriterConfig().getInfoStream();\n\n    final TermsHash termVectorsWriter;\n    if (docWriter.getSegmentInfo().getIndexSort() == null) {\n      storedFieldsConsumer = new StoredFieldsConsumer(docWriter.codec, docWriter.directory, docWriter.getSegmentInfo());\n      termVectorsWriter = new TermVectorsConsumer(docWriter);\n    } else {\n      storedFieldsConsumer = new SortingStoredFieldsConsumer(docWriter.codec, docWriter.directory, docWriter.getSegmentInfo());\n      termVectorsWriter = new SortingTermVectorsConsumer(docWriter);\n    }\n    termsHash = new FreqProxTermsWriter(docWriter, bytesUsed, termVectorsWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4":["f97270426d92300e08ac1bd1a4ef499ae02e88b7"],"49f1924bd448393fbdfef8b5ebed799f938169d3":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3394716f52b34ab259ad5247e7595d9f9db6e935"],"0dcf8f79417865e5028d753e669fae06457e8369":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4","49f1924bd448393fbdfef8b5ebed799f938169d3"],"06555ac714e8cc3a237853c80f762cfabc07a509":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","52c7e49be259508735752fba88085255014a6ecf"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["06555ac714e8cc3a237853c80f762cfabc07a509","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bc1841e9449be30dd7bcb15d6247b4eb5c83a07b":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"f97270426d92300e08ac1bd1a4ef499ae02e88b7":["bc1841e9449be30dd7bcb15d6247b4eb5c83a07b"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["06555ac714e8cc3a237853c80f762cfabc07a509"],"52c7e49be259508735752fba88085255014a6ecf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0dcf8f79417865e5028d753e669fae06457e8369"]},"commit2Childs":{"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4":["49f1924bd448393fbdfef8b5ebed799f938169d3","0dcf8f79417865e5028d753e669fae06457e8369"],"49f1924bd448393fbdfef8b5ebed799f938169d3":["0dcf8f79417865e5028d753e669fae06457e8369"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"0dcf8f79417865e5028d753e669fae06457e8369":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06555ac714e8cc3a237853c80f762cfabc07a509":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","06555ac714e8cc3a237853c80f762cfabc07a509"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3394716f52b34ab259ad5247e7595d9f9db6e935","52c7e49be259508735752fba88085255014a6ecf"],"bc1841e9449be30dd7bcb15d6247b4eb5c83a07b":["f97270426d92300e08ac1bd1a4ef499ae02e88b7"],"f97270426d92300e08ac1bd1a4ef499ae02e88b7":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","bc1841e9449be30dd7bcb15d6247b4eb5c83a07b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}