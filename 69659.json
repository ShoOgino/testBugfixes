{"path":"solr/core/src/test/org/apache/solr/update/processor/NestedAtomicUpdateTest#testBlockAtomicInplaceUpdates().mjava","commits":[{"id":"07749612bed4eb54dd05255c1434c301133310c1","date":1554879779,"type":0,"author":"Moshe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/NestedAtomicUpdateTest#testBlockAtomicInplaceUpdates().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBlockAtomicInplaceUpdates() throws Exception {\n    SolrInputDocument doc = sdoc(\"id\", \"1\", \"string_s\", \"root\");\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"id:1\", \"fl\", \"*\"),\n        \"//*[@numFound='1']\",\n        \"//doc[1]/str[@name='id']=1\"\n    );\n\n    List<SolrInputDocument> docs = IntStream.range(10, 20).mapToObj(x -> sdoc(\"id\", String.valueOf(x), \"string_s\",\n        \"child\", \"inplace_updatable_int\", \"0\")).collect(Collectors.toList());\n    doc = sdoc(\"id\", \"1\", \"children\", Collections.singletonMap(\"add\", docs));\n    addAndGetVersion(doc, params(\"wt\", \"json\", \"_route_\", \"1\"));\n\n    assertU(commit());\n\n\n    assertQ(req(\"q\", \"_root_:1\", \"fl\", \"*\", \"rows\", \"11\"),\n        \"//*[@numFound='11']\"\n    );\n\n    assertQ(req(\"q\", \"string_s:child\", \"fl\", \"*\"),\n        \"//*[@numFound='10']\",\n        \"*[count(//str[@name='string_s'][.='child'])=10]\"\n    );\n\n    for(int i = 10; i < 20; ++i) {\n      doc = sdoc(\"id\", String.valueOf(i), \"inplace_updatable_int\", Collections.singletonMap(\"inc\", \"1\"));\n      addAndGetVersion(doc, params(\"wt\", \"json\", \"_route_\", \"1\"));\n      assertU(commit());\n    }\n\n    for(int i = 10; i < 20; ++i) {\n      doc = sdoc(\"id\", String.valueOf(i), \"inplace_updatable_int\", Collections.singletonMap(\"inc\", \"1\"));\n      addAndGetVersion(doc, params(\"wt\", \"json\", \"_route_\", \"1\"));\n      assertU(commit());\n    }\n\n    // ensure updates work when block has more than 10 children\n    for(int i = 10; i < 20; ++i) {\n      docs = IntStream.range(i * 10, (i * 10) + 5).mapToObj(x -> sdoc(\"id\", String.valueOf(x), \"string_s\", \"grandChild\")).collect(Collectors.toList());\n      doc = sdoc(\"id\", String.valueOf(i), \"grandChildren\", Collections.singletonMap(\"add\", docs));\n      addAndGetVersion(doc, params(\"wt\", \"json\", \"_route_\", \"1\"));\n      assertU(commit());\n    }\n\n    for(int i =10; i < 20; ++i) {\n      doc = sdoc(\"id\", String.valueOf(i), \"inplace_updatable_int\", Collections.singletonMap(\"inc\", \"1\"));\n      addAndGetVersion(doc, params(\"wt\", \"json\", \"_route_\", \"1\"));\n      assertU(commit());\n    }\n\n    assertQ(req(\"q\", \"-_root_:*\", \"fl\", \"*\"),\n        \"//*[@numFound='0']\"\n    );\n\n    assertQ(req(\"q\", \"string_s:grandChild\", \"fl\", \"*\", \"rows\", \"50\"),\n        \"//*[@numFound='50']\"\n    );\n\n    assertQ(req(\"q\", \"string_s:child\", \"fl\", \"*\"),\n        \"//*[@numFound='10']\",\n        \"*[count(//str[@name='string_s'][.='child'])=10]\");\n\n    assertJQ(req(\"q\", \"id:1\", \"fl\", \"*,[child limit=-1]\"),\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/children/[0]/id=='10'\",\n        \"/response/docs/[0]/children/[0]/inplace_updatable_int==3\",\n        \"/response/docs/[0]/children/[0]/grandChildren/[0]/id=='100'\",\n        \"/response/docs/[0]/children/[0]/grandChildren/[4]/id=='104'\",\n        \"/response/docs/[0]/children/[9]/id=='19'\"\n    );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"07749612bed4eb54dd05255c1434c301133310c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["07749612bed4eb54dd05255c1434c301133310c1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["07749612bed4eb54dd05255c1434c301133310c1"],"07749612bed4eb54dd05255c1434c301133310c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}