{"path":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","commits":[{"id":"e92a321a2612261e1010a4038c8586e30b081552","date":1328456689,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\",\n        (isIndex ? Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION\n            : Lucene3xPostingsFormat.TERMS_EXTENSION)), IOContext.DEFAULT);\n    boolean success = false;\n    try {\n      output.writeInt(FORMAT_CURRENT);              // write format\n      output.writeLong(0);                          // leave space for size\n      output.writeInt(indexInterval);               // write indexInterval\n      output.writeInt(skipInterval);                // write skipInterval\n      output.writeInt(maxSkipLevels);               // write maxSkipLevels\n      assert initUTF16Results();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(output);\n\n        try {\n          directory.deleteFile(IndexFileNames.segmentFileName(segment, \"\",\n              (isIndex ? Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION\n                  : Lucene3xPostingsFormat.TERMS_EXTENSION)));\n        } catch (IOException ignored) {\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\",\n        (isIndex ? Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION\n            : Lucene3xPostingsFormat.TERMS_EXTENSION)), IOContext.DEFAULT);\n    boolean success = false;\n    try {\n      output.writeInt(FORMAT_CURRENT);              // write format\n      output.writeLong(0);                          // leave space for size\n      output.writeInt(indexInterval);               // write indexInterval\n      output.writeInt(skipInterval);                // write skipInterval\n      output.writeInt(maxSkipLevels);               // write maxSkipLevels\n      assert initUTF16Results();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(output);\n\n        try {\n          directory.deleteFile(IndexFileNames.segmentFileName(segment, \"\",\n              (isIndex ? Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION\n                  : Lucene3xPostingsFormat.TERMS_EXTENSION)));\n        } catch (IOException ignored) {\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\",\n        (isIndex ? Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION\n            : Lucene3xPostingsFormat.TERMS_EXTENSION)), IOContext.DEFAULT);\n    boolean success = false;\n    try {\n      output.writeInt(FORMAT_CURRENT);              // write format\n      output.writeLong(0);                          // leave space for size\n      output.writeInt(indexInterval);               // write indexInterval\n      output.writeInt(skipInterval);                // write skipInterval\n      output.writeInt(maxSkipLevels);               // write maxSkipLevels\n      assert initUTF16Results();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(output);\n\n        try {\n          directory.deleteFile(IndexFileNames.segmentFileName(segment, \"\",\n              (isIndex ? Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION\n                  : Lucene3xPostingsFormat.TERMS_EXTENSION)));\n        } catch (IOException ignored) {\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(IndexFileNames.segmentFileName(segment, \"\",\n        (isIndex ? Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION\n            : Lucene3xPostingsFormat.TERMS_EXTENSION)), IOContext.DEFAULT);\n    boolean success = false;\n    try {\n      output.writeInt(FORMAT_CURRENT);              // write format\n      output.writeLong(0);                          // leave space for size\n      output.writeInt(indexInterval);               // write indexInterval\n      output.writeInt(skipInterval);                // write skipInterval\n      output.writeInt(maxSkipLevels);               // write maxSkipLevels\n      assert initUTF16Results();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(output);\n\n        try {\n          directory.deleteFile(IndexFileNames.segmentFileName(segment, \"\",\n              (isIndex ? Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION\n                  : Lucene3xPostingsFormat.TERMS_EXTENSION)));\n        } catch (IOException ignored) {\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e92a321a2612261e1010a4038c8586e30b081552"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e92a321a2612261e1010a4038c8586e30b081552":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e92a321a2612261e1010a4038c8586e30b081552"],"e92a321a2612261e1010a4038c8586e30b081552":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}