{"path":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"036fc5e4ac5c9867717aaec352e2b39fe73daedb","date":1291043261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file = fileMap.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"036fc5e4ac5c9867717aaec352e2b39fe73daedb":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["036fc5e4ac5c9867717aaec352e2b39fe73daedb"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["036fc5e4ac5c9867717aaec352e2b39fe73daedb","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["036fc5e4ac5c9867717aaec352e2b39fe73daedb","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","036fc5e4ac5c9867717aaec352e2b39fe73daedb"],"3bb13258feba31ab676502787ab2e1779f129b7a":["9454a6510e2db155fb01faa5c049b06ece95fab9","036fc5e4ac5c9867717aaec352e2b39fe73daedb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"036fc5e4ac5c9867717aaec352e2b39fe73daedb":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["036fc5e4ac5c9867717aaec352e2b39fe73daedb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}