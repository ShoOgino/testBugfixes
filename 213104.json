{"path":"solr/src/java/org/apache/solr/handler/XMLLoader#processDelete(SolrQueryRequest,UpdateRequestProcessor,XMLStreamReader).mjava","commits":[{"id":"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa","date":1293733647,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/XMLLoader#processDelete(SolrQueryRequest,UpdateRequestProcessor,XMLStreamReader).mjava","pathOld":"solr/src/java/org/apache/solr/handler/XMLLoader#processDelete(UpdateRequestProcessor,XMLStreamReader).mjava","sourceNew":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(SolrQueryRequest req, UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand(req);\n\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        // deprecated\n      } else if (\"fromCommitted\".equals(attrName)) {\n        // deprecated\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          deleteCmd.id = null;\n          deleteCmd.query = null;\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand();\n\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        // deprecated\n      } else if (\"fromCommitted\".equals(attrName)) {\n        // deprecated\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          deleteCmd.id = null;\n          deleteCmd.query = null;\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/XMLLoader#processDelete(SolrQueryRequest,UpdateRequestProcessor,XMLStreamReader).mjava","pathOld":"solr/src/java/org/apache/solr/handler/XMLLoader#processDelete(UpdateRequestProcessor,XMLStreamReader).mjava","sourceNew":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(SolrQueryRequest req, UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand(req);\n\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        // deprecated\n      } else if (\"fromCommitted\".equals(attrName)) {\n        // deprecated\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          deleteCmd.id = null;\n          deleteCmd.query = null;\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand();\n    deleteCmd.fromPending = true;\n    deleteCmd.fromCommitted = true;\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        deleteCmd.fromPending = StrUtils.parseBoolean(attrVal);\n      } else if (\"fromCommitted\".equals(attrName)) {\n        deleteCmd.fromCommitted = StrUtils.parseBoolean(attrVal);\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          deleteCmd.id = null;\n          deleteCmd.query = null;\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/XMLLoader#processDelete(SolrQueryRequest,UpdateRequestProcessor,XMLStreamReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(SolrQueryRequest req, UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand(req);\n\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        // deprecated\n      } else if (\"fromCommitted\".equals(attrName)) {\n        // deprecated\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          deleteCmd.id = null;\n          deleteCmd.query = null;\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/XMLLoader#processDelete(SolrQueryRequest,UpdateRequestProcessor,XMLStreamReader).mjava","pathOld":"solr/src/java/org/apache/solr/handler/XMLLoader#processDelete(SolrQueryRequest,UpdateRequestProcessor,XMLStreamReader).mjava","sourceNew":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(SolrQueryRequest req, UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand(req);\n\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        // deprecated\n      } else if (\"fromCommitted\".equals(attrName)) {\n        // deprecated\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          deleteCmd.id = null;\n          deleteCmd.query = null;\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(SolrQueryRequest req, UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand(req);\n\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        // deprecated\n      } else if (\"fromCommitted\".equals(attrName)) {\n        // deprecated\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          deleteCmd.id = null;\n          deleteCmd.query = null;\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/XMLLoader#processDelete(SolrQueryRequest,UpdateRequestProcessor,XMLStreamReader).mjava","pathOld":"solr/src/java/org/apache/solr/handler/XMLLoader#processDelete(SolrQueryRequest,UpdateRequestProcessor,XMLStreamReader).mjava","sourceNew":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(SolrQueryRequest req, UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand(req);\n\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        // deprecated\n      } else if (\"fromCommitted\".equals(attrName)) {\n        // deprecated\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          deleteCmd.id = null;\n          deleteCmd.query = null;\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(SolrQueryRequest req, UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand(req);\n\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        // deprecated\n      } else if (\"fromCommitted\".equals(attrName)) {\n        // deprecated\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          deleteCmd.id = null;\n          deleteCmd.query = null;\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/XMLLoader#processDelete(SolrQueryRequest,UpdateRequestProcessor,XMLStreamReader).mjava","pathOld":"solr/src/java/org/apache/solr/handler/XMLLoader#processDelete(SolrQueryRequest,UpdateRequestProcessor,XMLStreamReader).mjava","sourceNew":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(SolrQueryRequest req, UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand(req);\n\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        // deprecated\n      } else if (\"fromCommitted\".equals(attrName)) {\n        // deprecated\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          deleteCmd.id = null;\n          deleteCmd.query = null;\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(SolrQueryRequest req, UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand(req);\n\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        // deprecated\n      } else if (\"fromCommitted\".equals(attrName)) {\n        // deprecated\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          deleteCmd.id = null;\n          deleteCmd.query = null;\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"c26f00b574427b55127e869b935845554afde1fa":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}