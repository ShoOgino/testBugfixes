{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#testCursorQuery().mjava","commits":[{"id":"d631465f88a03f4c835b8afad23d09615067b978","date":1483120253,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#testCursorQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testCursorQuery() {\n    SolrEntityProcessor processor = new NoNextMockProcessor() ;\n    \n    HashMap<String,String> entityAttrs = new HashMap<String,String>(){{\n      put(SolrEntityProcessor.SOLR_SERVER,\"http://route:66/no\");\n      put(CursorMarkParams.CURSOR_MARK_PARAM,\"true\");\n      }};\n    processor.init(getContext(null, null, null, null, Collections.emptyList(), \n        entityAttrs));\n    try {\n    processor.buildIterator();\n    SolrQuery query = new SolrQuery();\n    ((SolrDocumentListIterator) processor.rowIterator).passNextPage(query);\n    assertNull(query.get(CommonParams.START));\n    assertEquals(CursorMarkParams.CURSOR_MARK_START, query.get(CursorMarkParams.CURSOR_MARK_PARAM));\n    assertNull( query.get(CommonParams.TIME_ALLOWED));\n    }finally {\n      processor.destroy();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#testCursorQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testCursorQuery() {\n    SolrEntityProcessor processor = new NoNextMockProcessor() ;\n    \n    HashMap<String,String> entityAttrs = new HashMap<String,String>(){{\n      put(SolrEntityProcessor.SOLR_SERVER,\"http://route:66/no\");\n      put(CursorMarkParams.CURSOR_MARK_PARAM,\"true\");\n      }};\n    processor.init(getContext(null, null, null, null, Collections.emptyList(), \n        entityAttrs));\n    try {\n    processor.buildIterator();\n    SolrQuery query = new SolrQuery();\n    ((SolrDocumentListIterator) processor.rowIterator).passNextPage(query);\n    assertNull(query.get(CommonParams.START));\n    assertEquals(CursorMarkParams.CURSOR_MARK_START, query.get(CursorMarkParams.CURSOR_MARK_PARAM));\n    assertNull( query.get(CommonParams.TIME_ALLOWED));\n    }finally {\n      processor.destroy();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#testCursorQuery().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#testCursorQuery().mjava","sourceNew":"  @SuppressWarnings(\"serial\")\n  public void testCursorQuery() {\n    SolrEntityProcessor processor = new NoNextMockProcessor() ;\n    \n    HashMap<String,String> entityAttrs = new HashMap<String,String>(){{\n      put(SolrEntityProcessor.SOLR_SERVER,\"http://route:66/no\");\n      put(CursorMarkParams.CURSOR_MARK_PARAM,\"true\");\n      }};\n    processor.init(getContext(null, null, null, null, Collections.emptyList(), \n        entityAttrs));\n    try {\n    processor.buildIterator();\n    SolrQuery query = new SolrQuery();\n    ((SolrDocumentListIterator) processor.rowIterator).passNextPage(query);\n    assertNull(query.get(CommonParams.START));\n    assertEquals(CursorMarkParams.CURSOR_MARK_START, query.get(CursorMarkParams.CURSOR_MARK_PARAM));\n    assertNull( query.get(CommonParams.TIME_ALLOWED));\n    }finally {\n      processor.destroy();\n    }\n  }\n\n","sourceOld":"  public void testCursorQuery() {\n    SolrEntityProcessor processor = new NoNextMockProcessor() ;\n    \n    HashMap<String,String> entityAttrs = new HashMap<String,String>(){{\n      put(SolrEntityProcessor.SOLR_SERVER,\"http://route:66/no\");\n      put(CursorMarkParams.CURSOR_MARK_PARAM,\"true\");\n      }};\n    processor.init(getContext(null, null, null, null, Collections.emptyList(), \n        entityAttrs));\n    try {\n    processor.buildIterator();\n    SolrQuery query = new SolrQuery();\n    ((SolrDocumentListIterator) processor.rowIterator).passNextPage(query);\n    assertNull(query.get(CommonParams.START));\n    assertEquals(CursorMarkParams.CURSOR_MARK_START, query.get(CursorMarkParams.CURSOR_MARK_PARAM));\n    assertNull( query.get(CommonParams.TIME_ALLOWED));\n    }finally {\n      processor.destroy();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#testCursorQuery().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#testCursorQuery().mjava","sourceNew":"  public void testCursorQuery() {\n    SolrEntityProcessor processor = new NoNextMockProcessor() ;\n    \n    HashMap<String,String> entityAttrs = new HashMap<String,String>(){{\n      put(SolrEntityProcessor.SOLR_SERVER,\"http://route:66/no\");\n      put(CursorMarkParams.CURSOR_MARK_PARAM,\"true\");\n      }};\n    processor.init(getContext(null, null, null, null, Collections.emptyList(), \n        entityAttrs));\n    try {\n    processor.buildIterator();\n    SolrQuery query = new SolrQuery();\n    ((SolrDocumentListIterator) processor.rowIterator).passNextPage(query);\n    assertNull(query.get(CommonParams.START));\n    assertEquals(CursorMarkParams.CURSOR_MARK_START, query.get(CursorMarkParams.CURSOR_MARK_PARAM));\n    assertNull( query.get(CommonParams.TIME_ALLOWED));\n    }finally {\n      processor.destroy();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"serial\")\n  public void testCursorQuery() {\n    SolrEntityProcessor processor = new NoNextMockProcessor() ;\n    \n    HashMap<String,String> entityAttrs = new HashMap<String,String>(){{\n      put(SolrEntityProcessor.SOLR_SERVER,\"http://route:66/no\");\n      put(CursorMarkParams.CURSOR_MARK_PARAM,\"true\");\n      }};\n    processor.init(getContext(null, null, null, null, Collections.emptyList(), \n        entityAttrs));\n    try {\n    processor.buildIterator();\n    SolrQuery query = new SolrQuery();\n    ((SolrDocumentListIterator) processor.rowIterator).passNextPage(query);\n    assertNull(query.get(CommonParams.START));\n    assertEquals(CursorMarkParams.CURSOR_MARK_START, query.get(CursorMarkParams.CURSOR_MARK_PARAM));\n    assertNull( query.get(CommonParams.TIME_ALLOWED));\n    }finally {\n      processor.destroy();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#testCursorQuery().mjava","sourceNew":null,"sourceOld":"  public void testCursorQuery() {\n    SolrEntityProcessor processor = new NoNextMockProcessor() ;\n    \n    HashMap<String,String> entityAttrs = new HashMap<String,String>(){{\n      put(SolrEntityProcessor.SOLR_SERVER,\"http://route:66/no\");\n      put(CursorMarkParams.CURSOR_MARK_PARAM,\"true\");\n      }};\n    processor.init(getContext(null, null, null, null, Collections.emptyList(), \n        entityAttrs));\n    try {\n    processor.buildIterator();\n    SolrQuery query = new SolrQuery();\n    ((SolrDocumentListIterator) processor.rowIterator).passNextPage(query);\n    assertNull(query.get(CommonParams.START));\n    assertEquals(CursorMarkParams.CURSOR_MARK_START, query.get(CursorMarkParams.CURSOR_MARK_PARAM));\n    assertNull( query.get(CommonParams.TIME_ALLOWED));\n    }finally {\n      processor.destroy();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["d631465f88a03f4c835b8afad23d09615067b978"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"d631465f88a03f4c835b8afad23d09615067b978":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d631465f88a03f4c835b8afad23d09615067b978"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d631465f88a03f4c835b8afad23d09615067b978","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"d631465f88a03f4c835b8afad23d09615067b978":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}