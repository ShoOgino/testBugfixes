{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","sourceNew":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getInstance(Version.LUCENE_30);\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    try {\n      java4.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n    CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    try {\n      java5.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getInstance(Version.LUCENE_30);\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    try {\n      java4.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n    CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    try {\n      java5.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","sourceNew":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    try {\n      java4.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n    CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    try {\n      java5.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getInstance(Version.LUCENE_30);\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    try {\n      java4.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n    CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    try {\n      java5.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","sourceNew":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    try {\n      java4.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    try {\n      java5.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    try {\n      java4.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n    CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    try {\n      java5.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","sourceNew":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    try {\n      java4.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n    CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    try {\n      java5.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    try {\n      java4.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    try {\n      java5.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","sourceNew":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    try {\n      java4.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    try {\n      java5.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    try {\n      java4.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n    CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    try {\n      java5.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","sourceNew":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      java4.codePointAt(highSurrogateAt3, 4);\n    });\n\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      java5.codePointAt(highSurrogateAt3, 4);\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    try {\n      java4.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    try {\n      java5.codePointAt(highSurrogateAt3, 4);\n      fail(\"string index out of bounds\");\n    } catch (IndexOutOfBoundsException e) {\n    }\n\n  }\n\n","bugFix":["966b079690131e434b39530d82cc413f5aff4cd5","9fd679e99960936393860f58faf0357f8e585999"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc","date":1465824262,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      java4.codePointAt(highSurrogateAt3, 4);\n    });\n\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      java5.codePointAt(highSurrogateAt3, 4);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79","date":1465913303,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      java4.codePointAt(highSurrogateAt3, 4);\n    });\n\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      java5.codePointAt(highSurrogateAt3, 4);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharacterUtils#testCodePointAtCharSequenceInt().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testCodePointAtCharSequenceInt() {\n    CharacterUtils java4 = CharacterUtils.getJava4Instance();\n    String cpAt3 = \"Abc\\ud801\\udc1c\";\n    String highSurrogateAt3 = \"Abc\\ud801\";\n    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));\n    assertEquals((int) '\\ud801', java4.codePointAt(cpAt3, 3));\n    assertEquals((int) '\\ud801', java4.codePointAt(highSurrogateAt3, 3));\n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      java4.codePointAt(highSurrogateAt3, 4);\n    });\n\n    CharacterUtils java5 = CharacterUtils.getInstance();\n    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));\n    assertEquals(Character.toCodePoint('\\ud801', '\\udc1c'), java5.codePointAt(\n        cpAt3, 3));\n    assertEquals((int) '\\ud801', java5.codePointAt(highSurrogateAt3, 3));\n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      java5.codePointAt(highSurrogateAt3, 4);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc":["05fe562aa248790944d43cdd478f512572835ba0"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79":["05fe562aa248790944d43cdd478f512572835ba0","fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["05fe562aa248790944d43cdd478f512572835ba0","57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc":["57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["05fe562aa248790944d43cdd478f512572835ba0"],"05fe562aa248790944d43cdd478f512572835ba0":["fba4cd6a5aae0bc17cc1cbf1e84b0ae32ee039dc","57dc82c7b33cd580e7ab5179019bc78f3d7f8e79","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}