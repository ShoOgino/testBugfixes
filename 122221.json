{"path":"solr/contrib/velocity/src/test/org/apache/solr/velocity/VelocityResponseWriterTest#testTemplateTrust().mjava","commits":[{"id":"d94deac68514af4c985eabd56d9bb95ce27467b9","date":1576085774,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/velocity/src/test/org/apache/solr/velocity/VelocityResponseWriterTest#testTemplateTrust().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTemplateTrust() throws Exception {\n    // Try on trusted configset....\n    assertEquals(\"0\", h.query(req(\"q\",\"*:*\", \"wt\",\"velocity\",VelocityResponseWriter.TEMPLATE,\"numFound\")));\n\n    // Turn off trusted configset, which disables the Solr resource loader\n    h.getCoreContainer().getCoreDescriptor(h.coreName).setConfigSetTrusted(false);\n    assertFalse(h.getCoreContainer().getCoreDescriptor(coreName).isConfigSetTrusted());\n\n    try {\n      assertEquals(\"0\", h.query(req(\"q\",\"*:*\", \"wt\",\"velocity\",VelocityResponseWriter.TEMPLATE,\"numFound\")));\n      fail(\"template rendering should have failed, from an untrusted configset\");\n    } catch (IOException e) {\n      // expected exception\n      assertEquals(IOException.class, e.getClass());\n    }\n\n    // set the harness back to the default of trusted\n    h.getCoreContainer().getCoreDescriptor(h.coreName).setConfigSetTrusted(true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/velocity/src/test/org/apache/solr/velocity/VelocityResponseWriterTest#testTemplateTrust().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTemplateTrust() throws Exception {\n    // Try on trusted configset....\n    assertEquals(\"0\", h.query(req(\"q\",\"*:*\", \"wt\",\"velocity\",VelocityResponseWriter.TEMPLATE,\"numFound\")));\n\n    // Turn off trusted configset, which disables the Solr resource loader\n    h.getCoreContainer().getCoreDescriptor(h.coreName).setConfigSetTrusted(false);\n    assertFalse(h.getCoreContainer().getCoreDescriptor(coreName).isConfigSetTrusted());\n\n    try {\n      assertEquals(\"0\", h.query(req(\"q\",\"*:*\", \"wt\",\"velocity\",VelocityResponseWriter.TEMPLATE,\"numFound\")));\n      fail(\"template rendering should have failed, from an untrusted configset\");\n    } catch (IOException e) {\n      // expected exception\n      assertEquals(IOException.class, e.getClass());\n    }\n\n    // set the harness back to the default of trusted\n    h.getCoreContainer().getCoreDescriptor(h.coreName).setConfigSetTrusted(true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b659435fdb2401d91fa87bb3df798ae41a8046cd","date":1600346713,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/velocity/src/test/org/apache/solr/velocity/VelocityResponseWriterTest#testTemplateTrust().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testTemplateTrust() throws Exception {\n    // Try on trusted configset....\n    assertEquals(\"0\", h.query(req(\"q\",\"*:*\", \"wt\",\"velocity\",VelocityResponseWriter.TEMPLATE,\"numFound\")));\n\n    // Turn off trusted configset, which disables the Solr resource loader\n    h.getCoreContainer().getCoreDescriptor(h.coreName).setConfigSetTrusted(false);\n    assertFalse(h.getCoreContainer().getCoreDescriptor(coreName).isConfigSetTrusted());\n\n    try {\n      assertEquals(\"0\", h.query(req(\"q\",\"*:*\", \"wt\",\"velocity\",VelocityResponseWriter.TEMPLATE,\"numFound\")));\n      fail(\"template rendering should have failed, from an untrusted configset\");\n    } catch (IOException e) {\n      // expected exception\n      assertEquals(IOException.class, e.getClass());\n    }\n\n    // set the harness back to the default of trusted\n    h.getCoreContainer().getCoreDescriptor(h.coreName).setConfigSetTrusted(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d94deac68514af4c985eabd56d9bb95ce27467b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b659435fdb2401d91fa87bb3df798ae41a8046cd":["d94deac68514af4c985eabd56d9bb95ce27467b9"],"d94deac68514af4c985eabd56d9bb95ce27467b9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b659435fdb2401d91fa87bb3df798ae41a8046cd"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df724d84dab24a0cc54bec95a8680867adc7f171","d94deac68514af4c985eabd56d9bb95ce27467b9"],"d94deac68514af4c985eabd56d9bb95ce27467b9":["df724d84dab24a0cc54bec95a8680867adc7f171","b659435fdb2401d91fa87bb3df798ae41a8046cd"],"b659435fdb2401d91fa87bb3df798ae41a8046cd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}