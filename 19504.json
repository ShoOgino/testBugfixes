{"path":"lucene/core/src/java/org/apache/lucene/document/BinaryPoint#getType(byte[][]).mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/BinaryPoint#getType(byte[][]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DimensionalBinaryField#getType(byte[][]).mjava","sourceNew":"  private static FieldType getType(byte[][] point) {\n    if (point == null) {\n      throw new IllegalArgumentException(\"point cannot be null\");\n    }\n    if (point.length == 0) {\n      throw new IllegalArgumentException(\"point cannot be 0 dimensions\");\n    }\n    int bytesPerDim = -1;\n    for(int i=0;i<point.length;i++) {\n      byte[] oneDim = point[i];\n      if (oneDim == null) {\n        throw new IllegalArgumentException(\"point cannot have null values\");\n      }\n      if (oneDim.length == 0) {\n        throw new IllegalArgumentException(\"point cannot have 0-length values\");\n      }\n      if (bytesPerDim == -1) {\n        bytesPerDim = oneDim.length;\n      } else if (bytesPerDim != oneDim.length) {\n        throw new IllegalArgumentException(\"all dimensions must have same bytes length; got \" + bytesPerDim + \" and \" + oneDim.length);\n      }\n    }\n    return getType(point.length, bytesPerDim);\n  }\n\n","sourceOld":"  private static FieldType getType(byte[][] point) {\n    if (point == null) {\n      throw new IllegalArgumentException(\"point cannot be null\");\n    }\n    if (point.length == 0) {\n      throw new IllegalArgumentException(\"point cannot be 0 dimensions\");\n    }\n    int bytesPerDim = -1;\n    for(int i=0;i<point.length;i++) {\n      byte[] oneDim = point[i];\n      if (oneDim == null) {\n        throw new IllegalArgumentException(\"point cannot have null values\");\n      }\n      if (oneDim.length == 0) {\n        throw new IllegalArgumentException(\"point cannot have 0-length values\");\n      }\n      if (bytesPerDim == -1) {\n        bytesPerDim = oneDim.length;\n      } else if (bytesPerDim != oneDim.length) {\n        throw new IllegalArgumentException(\"all dimensions must have same bytes length; got \" + bytesPerDim + \" and \" + oneDim.length);\n      }\n    }\n    return getType(point.length, bytesPerDim);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad0d09e969f4763b0df4230f8e3f74357872a4e4","date":1459188769,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/BinaryPoint#getType(byte[][]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/BinaryPoint#getType(byte[][]).mjava","sourceNew":"  private static FieldType getType(byte[][] point) {\n    if (point == null) {\n      throw new IllegalArgumentException(\"point must not be null\");\n    }\n    if (point.length == 0) {\n      throw new IllegalArgumentException(\"point must not be 0 dimensions\");\n    }\n    int bytesPerDim = -1;\n    for(int i=0;i<point.length;i++) {\n      byte[] oneDim = point[i];\n      if (oneDim == null) {\n        throw new IllegalArgumentException(\"point must not have null values\");\n      }\n      if (oneDim.length == 0) {\n        throw new IllegalArgumentException(\"point must not have 0-length values\");\n      }\n      if (bytesPerDim == -1) {\n        bytesPerDim = oneDim.length;\n      } else if (bytesPerDim != oneDim.length) {\n        throw new IllegalArgumentException(\"all dimensions must have same bytes length; got \" + bytesPerDim + \" and \" + oneDim.length);\n      }\n    }\n    return getType(point.length, bytesPerDim);\n  }\n\n","sourceOld":"  private static FieldType getType(byte[][] point) {\n    if (point == null) {\n      throw new IllegalArgumentException(\"point cannot be null\");\n    }\n    if (point.length == 0) {\n      throw new IllegalArgumentException(\"point cannot be 0 dimensions\");\n    }\n    int bytesPerDim = -1;\n    for(int i=0;i<point.length;i++) {\n      byte[] oneDim = point[i];\n      if (oneDim == null) {\n        throw new IllegalArgumentException(\"point cannot have null values\");\n      }\n      if (oneDim.length == 0) {\n        throw new IllegalArgumentException(\"point cannot have 0-length values\");\n      }\n      if (bytesPerDim == -1) {\n        bytesPerDim = oneDim.length;\n      } else if (bytesPerDim != oneDim.length) {\n        throw new IllegalArgumentException(\"all dimensions must have same bytes length; got \" + bytesPerDim + \" and \" + oneDim.length);\n      }\n    }\n    return getType(point.length, bytesPerDim);\n  }\n\n","bugFix":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"]},"commit2Childs":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}