{"path":"src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,int).mjava","commits":[{"id":"f6dba7919de4ff4ed6ff17f90619203772722f08","date":1180451647,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,int).mjava","pathOld":"/dev/null","sourceNew":"    public synchronized IndexInput openInput(String id, int readBufferSize)\n    throws IOException\n    {\n        if (stream == null)\n            throw new IOException(\"Stream closed\");\n\n        FileEntry entry = (FileEntry) entries.get(id);\n        if (entry == null)\n            throw new IOException(\"No sub-file with id \" + id + \" found\");\n\n        return new CSIndexInput(stream, entry.offset, entry.length, readBufferSize);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,int).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,int).mjava","sourceNew":"    public synchronized IndexInput openInput(String id, int readBufferSize)\n    throws IOException\n    {\n        if (stream == null)\n            throw new IOException(\"Stream closed\");\n\n        FileEntry entry = entries.get(id);\n        if (entry == null)\n            throw new IOException(\"No sub-file with id \" + id + \" found\");\n\n        return new CSIndexInput(stream, entry.offset, entry.length, readBufferSize);\n    }\n\n","sourceOld":"    public synchronized IndexInput openInput(String id, int readBufferSize)\n    throws IOException\n    {\n        if (stream == null)\n            throw new IOException(\"Stream closed\");\n\n        FileEntry entry = (FileEntry) entries.get(id);\n        if (entry == null)\n            throw new IOException(\"No sub-file with id \" + id + \" found\");\n\n        return new CSIndexInput(stream, entry.offset, entry.length, readBufferSize);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,int).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,int).mjava","sourceNew":"    @Override\n    public synchronized IndexInput openInput(String id, int readBufferSize)\n    throws IOException\n    {\n        if (stream == null)\n            throw new IOException(\"Stream closed\");\n\n        FileEntry entry = entries.get(id);\n        if (entry == null)\n            throw new IOException(\"No sub-file with id \" + id + \" found\");\n\n        return new CSIndexInput(stream, entry.offset, entry.length, readBufferSize);\n    }\n\n","sourceOld":"    public synchronized IndexInput openInput(String id, int readBufferSize)\n    throws IOException\n    {\n        if (stream == null)\n            throw new IOException(\"Stream closed\");\n\n        FileEntry entry = entries.get(id);\n        if (entry == null)\n            throw new IOException(\"No sub-file with id \" + id + \" found\");\n\n        return new CSIndexInput(stream, entry.offset, entry.length, readBufferSize);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,int).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader#openInput(String,int).mjava","sourceNew":"    @Override\n    public synchronized IndexInput openInput(String id, int readBufferSize)\n    throws IOException\n    {\n        if (stream == null)\n            throw new IOException(\"Stream closed\");\n\n        FileEntry entry = entries.get(id);\n        if (entry == null)\n            throw new IOException(\"No sub-file with id \" + id + \" found\");\n\n        return new CSIndexInput(stream, entry.offset, entry.length, readBufferSize);\n    }\n\n","sourceOld":"    @Override\n    public synchronized IndexInput openInput(String id, int readBufferSize)\n    throws IOException\n    {\n        if (stream == null)\n            throw new IOException(\"Stream closed\");\n\n        FileEntry entry = entries.get(id);\n        if (entry == null)\n            throw new IOException(\"No sub-file with id \" + id + \" found\");\n\n        return new CSIndexInput(stream, entry.offset, entry.length, readBufferSize);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["f6dba7919de4ff4ed6ff17f90619203772722f08"],"8a9e385641d717e641408d8fbbc62be8fc766357":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"f6dba7919de4ff4ed6ff17f90619203772722f08":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["8a9e385641d717e641408d8fbbc62be8fc766357"],"f6dba7919de4ff4ed6ff17f90619203772722f08":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6dba7919de4ff4ed6ff17f90619203772722f08"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}