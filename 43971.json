{"path":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","commits":[{"id":"284c1d3c8b19931bf6f312fae7470487f5d9e580","date":1163805527,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"/dev/null","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n        Directory dir = FSDirectory.getDirectory(indexDir, true);\n\n        // add one document & close writer\n        IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        addDoc(writer);\n        writer.close();\n\n        // now open reader:\n        IndexReader reader = IndexReader.open(dir);\n        assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n        // now open index for create:\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        assertEquals(\"should be zero documents\", writer.docCount(), 0);\n        addDoc(writer);\n        writer.close();\n\n        assertEquals(\"should be one document\", reader.numDocs(), 1);\n        IndexReader reader2 = IndexReader.open(dir);\n        assertEquals(\"should be one document\", reader2.numDocs(), 1);\n        reader.close();\n        reader2.close();\n        rmDir(indexDir);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5a664b1395d4341b88e32d36297d7670f1a665ac","5a664b1395d4341b88e32d36297d7670f1a665ac"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a664b1395d4341b88e32d36297d7670f1a665ac","date":1166527887,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.getDirectory(indexDir, true);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n        Directory dir = FSDirectory.getDirectory(indexDir, true);\n\n        // add one document & close writer\n        IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        addDoc(writer);\n        writer.close();\n\n        // now open reader:\n        IndexReader reader = IndexReader.open(dir);\n        assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n        // now open index for create:\n        writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        assertEquals(\"should be zero documents\", writer.docCount(), 0);\n        addDoc(writer);\n        writer.close();\n\n        assertEquals(\"should be one document\", reader.numDocs(), 1);\n        IndexReader reader2 = IndexReader.open(dir);\n        assertEquals(\"should be one document\", reader2.numDocs(), 1);\n        reader.close();\n        reader2.close();\n        rmDir(indexDir);\n    }\n\n","bugFix":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66b12ba4967665216eeb706b58d424c51fb3641a","date":1169160423,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.getDirectory(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.getDirectory(indexDir, true);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9aba6db0f2adde620bb61f591ed18dcfee36ac","date":1201778618,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.getDirectory(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.getDirectory(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void xxxtestCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.getDirectory(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.getDirectory(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.getDirectory(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void xxxtestCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.getDirectory(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","date":1243677645,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.getDirectory(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e","date":1244664919,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        if (tempDir == null)\n            throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n        File indexDir = new File(tempDir, \"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7","date":1255555265,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.docCount(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"0a046c0c310bc77931fc8441bd920053b607dd14":["9f1405cedaef6ce1e1b563d7b35ee26c6518c81e","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["fd9aba6db0f2adde620bb61f591ed18dcfee36ac"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["0a046c0c310bc77931fc8441bd920053b607dd14"],"5a664b1395d4341b88e32d36297d7670f1a665ac":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"fd9aba6db0f2adde620bb61f591ed18dcfee36ac":["66b12ba4967665216eeb706b58d424c51fb3641a"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"66b12ba4967665216eeb706b58d424c51fb3641a":["5a664b1395d4341b88e32d36297d7670f1a665ac"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["9f1405cedaef6ce1e1b563d7b35ee26c6518c81e"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["09c482d1e63332617181729a225b215c452d8a79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0a046c0c310bc77931fc8441bd920053b607dd14":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"5a664b1395d4341b88e32d36297d7670f1a665ac":["66b12ba4967665216eeb706b58d424c51fb3641a"],"fd9aba6db0f2adde620bb61f591ed18dcfee36ac":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"66b12ba4967665216eeb706b58d424c51fb3641a":["fd9aba6db0f2adde620bb61f591ed18dcfee36ac"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["5a664b1395d4341b88e32d36297d7670f1a665ac"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["9f1405cedaef6ce1e1b563d7b35ee26c6518c81e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"09c482d1e63332617181729a225b215c452d8a79":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}