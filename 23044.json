{"path":"solr/core/src/test/org/apache/solr/handler/admin/InfoHandlerTest#testOverriddenHandlers().mjava","commits":[{"id":"7015190fd5b92e0a3e2846c6201e7e8f511b5a12","date":1391658997,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/InfoHandlerTest#testOverriddenHandlers().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testOverriddenHandlers() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final InfoHandler infoHandler = new InfoHandler(cores);\n    infoHandler.init(null);\n\n    CountPropertiesRequestHandler propHandler = new CountPropertiesRequestHandler();\n    CountThreadDumpHandler threadHandler = new CountThreadDumpHandler();\n    CountLoggingHandler loggingHandler = new CountLoggingHandler(cores);\n    CountSystemInfoHandler systemInfoHandler = new CountSystemInfoHandler(cores);\n\n    // set the request handlers\n    infoHandler.setPropertiesHandler(propHandler);\n    infoHandler.setThreadDumpHandler(threadHandler);\n    infoHandler.setLoggingHandler(loggingHandler);\n    infoHandler.setSystemInfoHandler(systemInfoHandler);\n\n    // verify that the sets are reflected in the gets\n    assertEquals(propHandler, infoHandler.getPropertiesHandler());\n    assertEquals(threadHandler, infoHandler.getThreadDumpHandler());\n    assertEquals(loggingHandler, infoHandler.getLoggingHandler());\n    assertEquals(systemInfoHandler, infoHandler.getSystemInfoHandler());\n\n    // call each handler and verify it was actually called\n    handleRequest(infoHandler, \"properties\");\n    handleRequest(infoHandler, \"threads\");\n    handleRequest(infoHandler, \"logging\");\n    handleRequest(infoHandler, \"system\");\n\n    assertEquals(1, propHandler.getRequestCount());\n    assertEquals(1, threadHandler.getRequestCount());\n    assertEquals(1, loggingHandler.getRequestCount());\n    assertEquals(1, systemInfoHandler.getRequestCount());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7015190fd5b92e0a3e2846c6201e7e8f511b5a12":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7015190fd5b92e0a3e2846c6201e7e8f511b5a12"]},"commit2Childs":{"7015190fd5b92e0a3e2846c6201e7e8f511b5a12":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7015190fd5b92e0a3e2846c6201e7e8f511b5a12"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}