{"path":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#assertPOSToken(TokenStream,String,String...).mjava","commits":[{"id":"84ab9fb766b354a9a9f16580a1162aac7ebbfc51","date":1340868936,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#assertPOSToken(TokenStream,String,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertPOSToken(TokenStream ts, String term, String... tags) throws IOException {\n    ts.incrementToken();\n    assertEquals(term, ts.getAttribute(CharTermAttribute.class).toString());\n    \n    TreeSet<String> actual = new TreeSet<String>();\n    TreeSet<String> expected = new TreeSet<String>();\n    for (StringBuilder b : ts.getAttribute(MorphosyntacticTagsAttribute.class).getTags()) {\n      actual.add(b.toString());\n    }\n    for (String s : tags) {\n      expected.add(s);\n    }\n    \n    if (!expected.equals(actual)) {\n      System.out.println(\"Expected:\\n\" + expected);\n      System.out.println(\"Actual:\\n\" + actual);\n      assertEquals(expected, actual);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#assertPOSToken(TokenStream,String,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertPOSToken(TokenStream ts, String term, String... tags) throws IOException {\n    ts.incrementToken();\n    assertEquals(term, ts.getAttribute(CharTermAttribute.class).toString());\n    \n    TreeSet<String> actual = new TreeSet<String>();\n    TreeSet<String> expected = new TreeSet<String>();\n    for (StringBuilder b : ts.getAttribute(MorphosyntacticTagsAttribute.class).getTags()) {\n      actual.add(b.toString());\n    }\n    for (String s : tags) {\n      expected.add(s);\n    }\n    \n    if (!expected.equals(actual)) {\n      System.out.println(\"Expected:\\n\" + expected);\n      System.out.println(\"Actual:\\n\" + actual);\n      assertEquals(expected, actual);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#assertPOSToken(TokenStream,String,String...).mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#assertPOSToken(TokenStream,String,String...).mjava","sourceNew":"  private void assertPOSToken(TokenStream ts, String term, String... tags) throws IOException {\n    ts.incrementToken();\n    assertEquals(term, ts.getAttribute(CharTermAttribute.class).toString());\n    \n    TreeSet<String> actual = new TreeSet<>();\n    TreeSet<String> expected = new TreeSet<>();\n    for (StringBuilder b : ts.getAttribute(MorphosyntacticTagsAttribute.class).getTags()) {\n      actual.add(b.toString());\n    }\n    for (String s : tags) {\n      expected.add(s);\n    }\n    \n    if (!expected.equals(actual)) {\n      System.out.println(\"Expected:\\n\" + expected);\n      System.out.println(\"Actual:\\n\" + actual);\n      assertEquals(expected, actual);\n    }\n  }\n\n","sourceOld":"  private void assertPOSToken(TokenStream ts, String term, String... tags) throws IOException {\n    ts.incrementToken();\n    assertEquals(term, ts.getAttribute(CharTermAttribute.class).toString());\n    \n    TreeSet<String> actual = new TreeSet<String>();\n    TreeSet<String> expected = new TreeSet<String>();\n    for (StringBuilder b : ts.getAttribute(MorphosyntacticTagsAttribute.class).getTags()) {\n      actual.add(b.toString());\n    }\n    for (String s : tags) {\n      expected.add(s);\n    }\n    \n    if (!expected.equals(actual)) {\n      System.out.println(\"Expected:\\n\" + expected);\n      System.out.println(\"Actual:\\n\" + actual);\n      assertEquals(expected, actual);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84ab9fb766b354a9a9f16580a1162aac7ebbfc51":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe33227f6805edab2036cbb80645cc4e2d1fa424","84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"84ab9fb766b354a9a9f16580a1162aac7ebbfc51":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}