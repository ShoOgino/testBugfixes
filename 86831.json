{"path":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64BulkOperation60#decode(LongBuffer,LongBuffer,int).mjava","commits":[{"id":"035130b0c342f404c027af8c8870587c3741cb1e","date":1342898805,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64BulkOperation60#decode(LongBuffer,LongBuffer,int).mjava","pathOld":"/dev/null","sourceNew":"    public void decode(LongBuffer blocks, LongBuffer values, int iterations) {\n      assert blocks.position() + iterations * blocks() <= blocks.limit();\n      assert values.position() + iterations * values() <= values.limit();\n      for (int i = 0; i < iterations; ++i) {\n        final long block0 = blocks.get();\n        values.put(block0 >>> 4);\n        final long block1 = blocks.get();\n        values.put(((block0 & 15L) << 56) | (block1 >>> 8));\n        final long block2 = blocks.get();\n        values.put(((block1 & 255L) << 52) | (block2 >>> 12));\n        final long block3 = blocks.get();\n        values.put(((block2 & 4095L) << 48) | (block3 >>> 16));\n        final long block4 = blocks.get();\n        values.put(((block3 & 65535L) << 44) | (block4 >>> 20));\n        final long block5 = blocks.get();\n        values.put(((block4 & 1048575L) << 40) | (block5 >>> 24));\n        final long block6 = blocks.get();\n        values.put(((block5 & 16777215L) << 36) | (block6 >>> 28));\n        final long block7 = blocks.get();\n        values.put(((block6 & 268435455L) << 32) | (block7 >>> 32));\n        final long block8 = blocks.get();\n        values.put(((block7 & 4294967295L) << 28) | (block8 >>> 36));\n        final long block9 = blocks.get();\n        values.put(((block8 & 68719476735L) << 24) | (block9 >>> 40));\n        final long block10 = blocks.get();\n        values.put(((block9 & 1099511627775L) << 20) | (block10 >>> 44));\n        final long block11 = blocks.get();\n        values.put(((block10 & 17592186044415L) << 16) | (block11 >>> 48));\n        final long block12 = blocks.get();\n        values.put(((block11 & 281474976710655L) << 12) | (block12 >>> 52));\n        final long block13 = blocks.get();\n        values.put(((block12 & 4503599627370495L) << 8) | (block13 >>> 56));\n        final long block14 = blocks.get();\n        values.put(((block13 & 72057594037927935L) << 4) | (block14 >>> 60));\n        values.put(block14 & 1152921504606846975L);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e3359210474c12c0b79e6400450313e3d7ef2bb","date":1344347790,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64BulkOperation60#decode(LongBuffer,LongBuffer,int).mjava","sourceNew":null,"sourceOld":"    public void decode(LongBuffer blocks, LongBuffer values, int iterations) {\n      assert blocks.position() + iterations * blocks() <= blocks.limit();\n      assert values.position() + iterations * values() <= values.limit();\n      for (int i = 0; i < iterations; ++i) {\n        final long block0 = blocks.get();\n        values.put(block0 >>> 4);\n        final long block1 = blocks.get();\n        values.put(((block0 & 15L) << 56) | (block1 >>> 8));\n        final long block2 = blocks.get();\n        values.put(((block1 & 255L) << 52) | (block2 >>> 12));\n        final long block3 = blocks.get();\n        values.put(((block2 & 4095L) << 48) | (block3 >>> 16));\n        final long block4 = blocks.get();\n        values.put(((block3 & 65535L) << 44) | (block4 >>> 20));\n        final long block5 = blocks.get();\n        values.put(((block4 & 1048575L) << 40) | (block5 >>> 24));\n        final long block6 = blocks.get();\n        values.put(((block5 & 16777215L) << 36) | (block6 >>> 28));\n        final long block7 = blocks.get();\n        values.put(((block6 & 268435455L) << 32) | (block7 >>> 32));\n        final long block8 = blocks.get();\n        values.put(((block7 & 4294967295L) << 28) | (block8 >>> 36));\n        final long block9 = blocks.get();\n        values.put(((block8 & 68719476735L) << 24) | (block9 >>> 40));\n        final long block10 = blocks.get();\n        values.put(((block9 & 1099511627775L) << 20) | (block10 >>> 44));\n        final long block11 = blocks.get();\n        values.put(((block10 & 17592186044415L) << 16) | (block11 >>> 48));\n        final long block12 = blocks.get();\n        values.put(((block11 & 281474976710655L) << 12) | (block12 >>> 52));\n        final long block13 = blocks.get();\n        values.put(((block12 & 4503599627370495L) << 8) | (block13 >>> 56));\n        final long block14 = blocks.get();\n        values.put(((block13 & 72057594037927935L) << 4) | (block14 >>> 60));\n        values.put(block14 & 1152921504606846975L);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e3359210474c12c0b79e6400450313e3d7ef2bb":["035130b0c342f404c027af8c8870587c3741cb1e"],"035130b0c342f404c027af8c8870587c3741cb1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["035130b0c342f404c027af8c8870587c3741cb1e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e3359210474c12c0b79e6400450313e3d7ef2bb":[],"035130b0c342f404c027af8c8870587c3741cb1e":["0e3359210474c12c0b79e6400450313e3d7ef2bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0e3359210474c12c0b79e6400450313e3d7ef2bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}