{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","commits":[{"id":"db6dfac30d1553e9356900c2b76b768139483a62","date":1230619368,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver(DataImporter).mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT\n              .format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", EvaluatorBag.getFunctionsNamespace(resolver,\n            dataImporter.getConfig().functions, this));\n    if (dataImporter.getConfig().script != null) {\n      indexerNamespace\n              .put(DataConfig.SCRIPT, dataImporter.getConfig().script.script);\n      indexerNamespace.put(DataConfig.SCRIPT_LANG,\n              dataImporter.getConfig().script.language);\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver(DataImporter context) {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (context.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT\n              .format(context.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, context.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"defaults\", defaultVariables);\n    indexerNamespace.put(\"functions\", EvaluatorBag.getFunctionsNamespace(resolver,\n            dataImporter.getConfig().functions, this));\n    if (context.getConfig().script != null) {\n      indexerNamespace\n              .put(DataConfig.SCRIPT, context.getConfig().script.script);\n      indexerNamespace.put(DataConfig.SCRIPT_LANG,\n              context.getConfig().script.language);\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f89819f2d2ba23f608c6d0ea155524f95a29aa4","date":1234350104,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME,\n              DataImporter.DATE_TIME_FORMAT.get().format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", EvaluatorBag.getFunctionsNamespace(resolver,\n            dataImporter.getConfig().functions, this));\n    if (dataImporter.getConfig().script != null) {\n      indexerNamespace\n              .put(DataConfig.SCRIPT, dataImporter.getConfig().script.script);\n      indexerNamespace.put(DataConfig.SCRIPT_LANG,\n              dataImporter.getConfig().script.language);\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT\n              .format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", EvaluatorBag.getFunctionsNamespace(resolver,\n            dataImporter.getConfig().functions, this));\n    if (dataImporter.getConfig().script != null) {\n      indexerNamespace\n              .put(DataConfig.SCRIPT, dataImporter.getConfig().script.script);\n      indexerNamespace.put(DataConfig.SCRIPT_LANG,\n              dataImporter.getConfig().script.language);\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","bugFix":["db6dfac30d1553e9356900c2b76b768139483a62"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dfc8d8c033e2239995c45b976c90c18559da31e","date":1235021328,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME,\n              DataImporter.DATE_TIME_FORMAT.get().format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", functionsNamespace);\n    if (dataImporter.getConfig().script != null) {\n      indexerNamespace.put(DataConfig.SCRIPT, dataImporter.getConfig().script.script);\n      indexerNamespace.put(DataConfig.SCRIPT_LANG, dataImporter.getConfig().script.language);\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME,\n              DataImporter.DATE_TIME_FORMAT.get().format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", EvaluatorBag.getFunctionsNamespace(resolver,\n            dataImporter.getConfig().functions, this));\n    if (dataImporter.getConfig().script != null) {\n      indexerNamespace\n              .put(DataConfig.SCRIPT, dataImporter.getConfig().script.script);\n      indexerNamespace.put(DataConfig.SCRIPT_LANG,\n              dataImporter.getConfig().script.language);\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5850c9b195a2c8b5a2ef6d4775d905dfcd1eca1d","date":1235123016,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME,\n              DataImporter.DATE_TIME_FORMAT.get().format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", functionsNamespace);\n    for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n      String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n      String lastIndex = persistedProperties.getProperty(key);\n      if (lastIndex != null) {\n        indexerNamespace.put(key, lastIndex);\n      }\n    }\n    if (dataImporter.getConfig().script != null) {\n      indexerNamespace.put(DataConfig.SCRIPT, dataImporter.getConfig().script.script);\n      indexerNamespace.put(DataConfig.SCRIPT_LANG, dataImporter.getConfig().script.language);\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME,\n              DataImporter.DATE_TIME_FORMAT.get().format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", functionsNamespace);\n    if (dataImporter.getConfig().script != null) {\n      indexerNamespace.put(DataConfig.SCRIPT, dataImporter.getConfig().script.script);\n      indexerNamespace.put(DataConfig.SCRIPT_LANG, dataImporter.getConfig().script.language);\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cda565f1dbc96f12de5c399b6d48418f0e79be5","date":1236799070,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME,\n              DataImporter.DATE_TIME_FORMAT.get().format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", functionsNamespace);\n    for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n      String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n      String lastIndex = persistedProperties.getProperty(key);\n      if (lastIndex != null) {\n        indexerNamespace.put(key, lastIndex);\n      }\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME,\n              DataImporter.DATE_TIME_FORMAT.get().format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", functionsNamespace);\n    for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n      String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n      String lastIndex = persistedProperties.getProperty(key);\n      if (lastIndex != null) {\n        indexerNamespace.put(key, lastIndex);\n      }\n    }\n    if (dataImporter.getConfig().script != null) {\n      indexerNamespace.put(DataConfig.SCRIPT, dataImporter.getConfig().script.script);\n      indexerNamespace.put(DataConfig.SCRIPT_LANG, dataImporter.getConfig().script.language);\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5228f1dd4e60f94d80cc47de3902cbff7e5a9cc2","date":1237884883,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME,\n              DataImporter.DATE_TIME_FORMAT.get().format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", functionsNamespace);\n    for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n      String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n      String lastIndex = persistedProperties.getProperty(key);\n      if (lastIndex != null) {\n        indexerNamespace.put(key, lastIndex);\n      }\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME,\n              DataImporter.DATE_TIME_FORMAT.get().format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", functionsNamespace);\n    for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n      String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n      String lastIndex = persistedProperties.getProperty(key);\n      if (lastIndex != null) {\n        indexerNamespace.put(key, lastIndex);\n      }\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee2d03087a1d5477a3ee9ce02e08967f4a979766","date":1254306923,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME,\n                DataImporter.DATE_TIME_FORMAT.get().parse(persistedProperties.getProperty(LAST_INDEX_TIME)));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, EPOCH);\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (ParseException e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n    if (dataImporter.getLastIndexTime() != null)\n      indexerNamespace.put(LAST_INDEX_TIME,\n              DataImporter.DATE_TIME_FORMAT.get().format(dataImporter.getLastIndexTime()));\n    indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n    indexerNamespace.put(\"request\", requestParameters.requestParams);\n    indexerNamespace.put(\"functions\", functionsNamespace);\n    for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n      String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n      String lastIndex = persistedProperties.getProperty(key);\n      if (lastIndex != null) {\n        indexerNamespace.put(key, lastIndex);\n      }\n    }\n    resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n    resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n    return resolver;\n  }\n\n","bugFix":null,"bugIntro":["e28c473b1fded16de59a8fb37a0652fe2d27f702","e28c473b1fded16de59a8fb37a0652fe2d27f702","1b386506d1e4c40d6253ef64a146f443136b7d4d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b386506d1e4c40d6253ef64a146f443136b7d4d","date":1254948634,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME,\n                DataImporter.DATE_TIME_FORMAT.get().parse(persistedProperties.getProperty(LAST_INDEX_TIME)));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, EPOCH);\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (ParseException e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":["ee2d03087a1d5477a3ee9ce02e08967f4a979766"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"01f99c7ade0570316e3f00d92f01a830c675e1f3","date":1258543337,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null) resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"65f4e997b946a4eadce22b758749046a63ba2eff","date":1263282580,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null) resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":["17a92a6c6955645d64747d96f75583d591643464","17a92a6c6955645d64747d96f75583d591643464"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"5850c9b195a2c8b5a2ef6d4775d905dfcd1eca1d":["7dfc8d8c033e2239995c45b976c90c18559da31e"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7dfc8d8c033e2239995c45b976c90c18559da31e":["3f89819f2d2ba23f608c6d0ea155524f95a29aa4"],"ee2d03087a1d5477a3ee9ce02e08967f4a979766":["5228f1dd4e60f94d80cc47de3902cbff7e5a9cc2"],"1cda565f1dbc96f12de5c399b6d48418f0e79be5":["5850c9b195a2c8b5a2ef6d4775d905dfcd1eca1d"],"01f99c7ade0570316e3f00d92f01a830c675e1f3":["1b386506d1e4c40d6253ef64a146f443136b7d4d"],"65f4e997b946a4eadce22b758749046a63ba2eff":["01f99c7ade0570316e3f00d92f01a830c675e1f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1b386506d1e4c40d6253ef64a146f443136b7d4d":["ee2d03087a1d5477a3ee9ce02e08967f4a979766"],"3f89819f2d2ba23f608c6d0ea155524f95a29aa4":["db6dfac30d1553e9356900c2b76b768139483a62"],"ad94625fb8d088209f46650c8097196fec67f00c":["65f4e997b946a4eadce22b758749046a63ba2eff"],"5228f1dd4e60f94d80cc47de3902cbff7e5a9cc2":["1cda565f1dbc96f12de5c399b6d48418f0e79be5"],"db6dfac30d1553e9356900c2b76b768139483a62":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5850c9b195a2c8b5a2ef6d4775d905dfcd1eca1d":["1cda565f1dbc96f12de5c399b6d48418f0e79be5"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["db6dfac30d1553e9356900c2b76b768139483a62"],"7dfc8d8c033e2239995c45b976c90c18559da31e":["5850c9b195a2c8b5a2ef6d4775d905dfcd1eca1d"],"ee2d03087a1d5477a3ee9ce02e08967f4a979766":["1b386506d1e4c40d6253ef64a146f443136b7d4d"],"1cda565f1dbc96f12de5c399b6d48418f0e79be5":["5228f1dd4e60f94d80cc47de3902cbff7e5a9cc2"],"01f99c7ade0570316e3f00d92f01a830c675e1f3":["65f4e997b946a4eadce22b758749046a63ba2eff"],"65f4e997b946a4eadce22b758749046a63ba2eff":["ad94625fb8d088209f46650c8097196fec67f00c"],"3f89819f2d2ba23f608c6d0ea155524f95a29aa4":["7dfc8d8c033e2239995c45b976c90c18559da31e"],"1b386506d1e4c40d6253ef64a146f443136b7d4d":["01f99c7ade0570316e3f00d92f01a830c675e1f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"5228f1dd4e60f94d80cc47de3902cbff7e5a9cc2":["ee2d03087a1d5477a3ee9ce02e08967f4a979766"],"db6dfac30d1553e9356900c2b76b768139483a62":["3f89819f2d2ba23f608c6d0ea155524f95a29aa4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}