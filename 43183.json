{"path":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#checkVersion(int).mjava","commits":[{"id":"e099715aa0cb8da9a56320dd21c24f1ad6728b03","date":1345471998,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#checkVersion(int).mjava","pathOld":"/dev/null","sourceNew":"  private static void checkVersion(int version) {\n    if (version < VERSION_START) {\n      throw new IllegalArgumentException(\"Version is too old, should be at least \" + VERSION_START + \" (got \" + version + \")\");\n    } else if (version > VERSION_CURRENT) {\n      throw new IllegalArgumentException(\"Version is too new, should be at most \" + VERSION_CURRENT + \" (got \" + version + \")\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#checkVersion(int).mjava","pathOld":"/dev/null","sourceNew":"  private static void checkVersion(int version) {\n    if (version < VERSION_START) {\n      throw new IllegalArgumentException(\"Version is too old, should be at least \" + VERSION_START + \" (got \" + version + \")\");\n    } else if (version > VERSION_CURRENT) {\n      throw new IllegalArgumentException(\"Version is too new, should be at most \" + VERSION_CURRENT + \" (got \" + version + \")\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#checkVersion(int).mjava","pathOld":"/dev/null","sourceNew":"  private static void checkVersion(int version) {\n    if (version < VERSION_START) {\n      throw new IllegalArgumentException(\"Version is too old, should be at least \" + VERSION_START + \" (got \" + version + \")\");\n    } else if (version > VERSION_CURRENT) {\n      throw new IllegalArgumentException(\"Version is too new, should be at most \" + VERSION_CURRENT + \" (got \" + version + \")\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c661dcad9680b8a6ce5bf2cc583a69ec965328bc","date":1352297862,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#checkVersion(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#checkVersion(int).mjava","sourceNew":"  /**\n   * Check the validity of a version number.\n   */\n  public static void checkVersion(int version) {\n    if (version < VERSION_START) {\n      throw new IllegalArgumentException(\"Version is too old, should be at least \" + VERSION_START + \" (got \" + version + \")\");\n    } else if (version > VERSION_CURRENT) {\n      throw new IllegalArgumentException(\"Version is too new, should be at most \" + VERSION_CURRENT + \" (got \" + version + \")\");\n    }\n  }\n\n","sourceOld":"  private static void checkVersion(int version) {\n    if (version < VERSION_START) {\n      throw new IllegalArgumentException(\"Version is too old, should be at least \" + VERSION_START + \" (got \" + version + \")\");\n    } else if (version > VERSION_CURRENT) {\n      throw new IllegalArgumentException(\"Version is too new, should be at most \" + VERSION_CURRENT + \" (got \" + version + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c661dcad9680b8a6ce5bf2cc583a69ec965328bc":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e099715aa0cb8da9a56320dd21c24f1ad6728b03"],"e099715aa0cb8da9a56320dd21c24f1ad6728b03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c661dcad9680b8a6ce5bf2cc583a69ec965328bc"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","f8615860cb50aefb8eebca1d1b3893dbe21cf126","e099715aa0cb8da9a56320dd21c24f1ad6728b03"],"c661dcad9680b8a6ce5bf2cc583a69ec965328bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","c661dcad9680b8a6ce5bf2cc583a69ec965328bc"],"e099715aa0cb8da9a56320dd21c24f1ad6728b03":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}