{"path":"src/test/org/apache/lucene/index/TestPayloads#generateTerms(String,int).mjava","commits":[{"id":"8522ae207a56c6db28ca06fe6cc33e70911c3600","date":1173935743,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestPayloads#generateTerms(String,int).mjava","pathOld":"/dev/null","sourceNew":"    private Term[] generateTerms(String fieldName, int n) {\r\n        int maxDigits = (int) (Math.log(n) / Math.log(10));\r\n        Term[] terms = new Term[n];\r\n        StringBuffer sb = new StringBuffer();\r\n        for (int i = 0; i < n; i++) {\r\n            sb.setLength(0);\r\n            sb.append(\"t\");\r\n            int zeros = maxDigits - (int) (Math.log(i) / Math.log(10));\r\n            for (int j = 0; j < zeros; j++) {\r\n                sb.append(\"0\");\r\n            }\r\n            sb.append(i);\r\n            terms[i] = new Term(fieldName, sb.toString());\r\n        }\r\n        return terms;\r\n    }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2123bddbd65dea198cac380540636ce43a880403","date":1211269254,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestPayloads#generateTerms(String,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestPayloads#generateTerms(String,int).mjava","sourceNew":"    private Term[] generateTerms(String fieldName, int n) {\n        int maxDigits = (int) (Math.log(n) / Math.log(10));\n        Term[] terms = new Term[n];\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < n; i++) {\n            sb.setLength(0);\n            sb.append(\"t\");\n            int zeros = maxDigits - (int) (Math.log(i) / Math.log(10));\n            for (int j = 0; j < zeros; j++) {\n                sb.append(\"0\");\n            }\n            sb.append(i);\n            terms[i] = new Term(fieldName, sb.toString());\n        }\n        return terms;\n    }\n\n","sourceOld":"    private Term[] generateTerms(String fieldName, int n) {\r\n        int maxDigits = (int) (Math.log(n) / Math.log(10));\r\n        Term[] terms = new Term[n];\r\n        StringBuffer sb = new StringBuffer();\r\n        for (int i = 0; i < n; i++) {\r\n            sb.setLength(0);\r\n            sb.append(\"t\");\r\n            int zeros = maxDigits - (int) (Math.log(i) / Math.log(10));\r\n            for (int j = 0; j < zeros; j++) {\r\n                sb.append(\"0\");\r\n            }\r\n            sb.append(i);\r\n            terms[i] = new Term(fieldName, sb.toString());\r\n        }\r\n        return terms;\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestPayloads#generateTerms(String,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestPayloads#generateTerms(String,int).mjava","sourceNew":"    private Term[] generateTerms(String fieldName, int n) {\n        int maxDigits = (int) (Math.log(n) / Math.log(10));\n        Term[] terms = new Term[n];\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < n; i++) {\n            sb.setLength(0);\n            sb.append(\"t\");\n            int zeros = maxDigits - (int) (Math.log(i) / Math.log(10));\n            for (int j = 0; j < zeros; j++) {\n                sb.append(\"0\");\n            }\n            sb.append(i);\n            terms[i] = new Term(fieldName, sb.toString());\n        }\n        return terms;\n    }\n\n","sourceOld":"    private Term[] generateTerms(String fieldName, int n) {\n        int maxDigits = (int) (Math.log(n) / Math.log(10));\n        Term[] terms = new Term[n];\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < n; i++) {\n            sb.setLength(0);\n            sb.append(\"t\");\n            int zeros = maxDigits - (int) (Math.log(i) / Math.log(10));\n            for (int j = 0; j < zeros; j++) {\n                sb.append(\"0\");\n            }\n            sb.append(i);\n            terms[i] = new Term(fieldName, sb.toString());\n        }\n        return terms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#generateTerms(String,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestPayloads#generateTerms(String,int).mjava","sourceNew":"    private Term[] generateTerms(String fieldName, int n) {\n        int maxDigits = (int) (Math.log(n) / Math.log(10));\n        Term[] terms = new Term[n];\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < n; i++) {\n            sb.setLength(0);\n            sb.append(\"t\");\n            int zeros = maxDigits - (int) (Math.log(i) / Math.log(10));\n            for (int j = 0; j < zeros; j++) {\n                sb.append(\"0\");\n            }\n            sb.append(i);\n            terms[i] = new Term(fieldName, sb.toString());\n        }\n        return terms;\n    }\n\n","sourceOld":"    private Term[] generateTerms(String fieldName, int n) {\n        int maxDigits = (int) (Math.log(n) / Math.log(10));\n        Term[] terms = new Term[n];\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < n; i++) {\n            sb.setLength(0);\n            sb.append(\"t\");\n            int zeros = maxDigits - (int) (Math.log(i) / Math.log(10));\n            for (int j = 0; j < zeros; j++) {\n                sb.append(\"0\");\n            }\n            sb.append(i);\n            terms[i] = new Term(fieldName, sb.toString());\n        }\n        return terms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8522ae207a56c6db28ca06fe6cc33e70911c3600":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2123bddbd65dea198cac380540636ce43a880403":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["2123bddbd65dea198cac380540636ce43a880403"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"]},"commit2Childs":{"8522ae207a56c6db28ca06fe6cc33e70911c3600":["2123bddbd65dea198cac380540636ce43a880403"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"2123bddbd65dea198cac380540636ce43a880403":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}