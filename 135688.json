{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DateEvaluator#DateEvaluator(StreamExpression,StreamFactory).mjava","commits":[{"id":"431fcaec9cce0a765cb0d341b8e4e51f133e6519","date":1492023302,"type":0,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DateEvaluator#DateEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public DateEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n\n    String functionName = expression.getFunctionName();\n\n    try {\n      this.function = FUNCTION.valueOf(functionName);\n    } catch (IllegalArgumentException e) {\n      throw new IOException(String.format(Locale.ROOT,\"Invalid date expression %s - expecting one of %s\",functionName, Arrays.toString(FUNCTION.values())));\n    }\n\n    fieldName = factory.getValueOperand(expression, 0);\n\n    //Taken from Field evaluator\n    if(fieldName != null && fieldName.startsWith(\"'\") && fieldName.endsWith(\"'\") && fieldName.length() > 1){\n      fieldName = fieldName.substring(1, fieldName.length() - 1);\n    }\n\n    if(1 != subEvaluators.size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting one value but found %d\",expression,subEvaluators.size()));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40b789607c421011dabf36a935528a74fb8b2032","date":1492023606,"type":5,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DatePartEvaluator#DatePartEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DateEvaluator#DateEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public DatePartEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n\n    String functionName = expression.getFunctionName();\n\n    try {\n      this.function = FUNCTION.valueOf(functionName);\n    } catch (IllegalArgumentException e) {\n      throw new IOException(String.format(Locale.ROOT,\"Invalid date expression %s - expecting one of %s\",functionName, Arrays.toString(FUNCTION.values())));\n    }\n\n    fieldName = factory.getValueOperand(expression, 0);\n\n    //Taken from Field evaluator\n    if(fieldName != null && fieldName.startsWith(\"'\") && fieldName.endsWith(\"'\") && fieldName.length() > 1){\n      fieldName = fieldName.substring(1, fieldName.length() - 1);\n    }\n\n    if(1 != subEvaluators.size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting one value but found %d\",expression,subEvaluators.size()));\n    }\n  }\n\n","sourceOld":"  public DateEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n\n    String functionName = expression.getFunctionName();\n\n    try {\n      this.function = FUNCTION.valueOf(functionName);\n    } catch (IllegalArgumentException e) {\n      throw new IOException(String.format(Locale.ROOT,\"Invalid date expression %s - expecting one of %s\",functionName, Arrays.toString(FUNCTION.values())));\n    }\n\n    fieldName = factory.getValueOperand(expression, 0);\n\n    //Taken from Field evaluator\n    if(fieldName != null && fieldName.startsWith(\"'\") && fieldName.endsWith(\"'\") && fieldName.length() > 1){\n      fieldName = fieldName.substring(1, fieldName.length() - 1);\n    }\n\n    if(1 != subEvaluators.size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting one value but found %d\",expression,subEvaluators.size()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d60fd4bf1b42425aefd75d8a133d8d7ea41722e9","date":1564497726,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DateEvaluator#DateEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public DateEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{\n    super(expression, factory);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":0,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DateEvaluator#DateEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public DateEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{\n    super(expression, factory);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"431fcaec9cce0a765cb0d341b8e4e51f133e6519":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d60fd4bf1b42425aefd75d8a133d8d7ea41722e9":["40b789607c421011dabf36a935528a74fb8b2032"],"40b789607c421011dabf36a935528a74fb8b2032":["431fcaec9cce0a765cb0d341b8e4e51f133e6519"],"f8061ddd97f3352007d927dae445884a6f3d857b":["40b789607c421011dabf36a935528a74fb8b2032","d60fd4bf1b42425aefd75d8a133d8d7ea41722e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d60fd4bf1b42425aefd75d8a133d8d7ea41722e9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["431fcaec9cce0a765cb0d341b8e4e51f133e6519"],"431fcaec9cce0a765cb0d341b8e4e51f133e6519":["40b789607c421011dabf36a935528a74fb8b2032"],"d60fd4bf1b42425aefd75d8a133d8d7ea41722e9":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"40b789607c421011dabf36a935528a74fb8b2032":["d60fd4bf1b42425aefd75d8a133d8d7ea41722e9","f8061ddd97f3352007d927dae445884a6f3d857b"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}