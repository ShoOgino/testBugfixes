{"path":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,int,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,int,int).mjava","pathOld":"src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,int,int).mjava","sourceNew":"    public SimpleFSIndexInput(File path, int bufferSize, int chunkSize) throws IOException {\n      super(bufferSize);\n      file = new Descriptor(path, \"r\");\n      this.chunkSize = chunkSize;\n    }\n\n","sourceOld":"    public SimpleFSIndexInput(File path, int bufferSize, int chunkSize) throws IOException {\n      super(bufferSize);\n      file = new Descriptor(path, \"r\");\n      this.chunkSize = chunkSize;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,int,int).mjava","sourceNew":null,"sourceOld":"    public SimpleFSIndexInput(File path, int bufferSize, int chunkSize) throws IOException {\n      super(bufferSize);\n      file = new Descriptor(path, \"r\");\n      this.chunkSize = chunkSize;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,int,int).mjava","sourceNew":"    public SimpleFSIndexInput(File path, int bufferSize, int chunkSize) throws IOException {\n      super(bufferSize);\n      this.file = new Descriptor(path, \"r\"); \n      this.chunkSize = chunkSize;\n      this.off = 0L;\n      this.end = file.length;\n    }\n\n","sourceOld":"    public SimpleFSIndexInput(File path, int bufferSize, int chunkSize) throws IOException {\n      super(bufferSize);\n      file = new Descriptor(path, \"r\");\n      this.chunkSize = chunkSize;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,int,int).mjava","sourceNew":"    public SimpleFSIndexInput(File path, int bufferSize, int chunkSize) throws IOException {\n      super(bufferSize);\n      this.file = new Descriptor(path, \"r\"); \n      this.chunkSize = chunkSize;\n      this.off = 0L;\n      this.end = file.length;\n    }\n\n","sourceOld":"    public SimpleFSIndexInput(File path, int bufferSize, int chunkSize) throws IOException {\n      super(bufferSize);\n      file = new Descriptor(path, \"r\");\n      this.chunkSize = chunkSize;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,IOContext,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,int,int).mjava","sourceNew":"    public SimpleFSIndexInput(File path, IOContext context, int chunkSize) throws IOException {\n      super(context);\n      this.file = new Descriptor(path, \"r\"); \n      this.chunkSize = chunkSize;\n      this.off = 0L;\n      this.end = file.length;\n    }\n\n","sourceOld":"    public SimpleFSIndexInput(File path, int bufferSize, int chunkSize) throws IOException {\n      super(bufferSize);\n      this.file = new Descriptor(path, \"r\"); \n      this.chunkSize = chunkSize;\n      this.off = 0L;\n      this.end = file.length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,IOContext,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexInput#SimpleFSIndexInput(File,int,int).mjava","sourceNew":"    public SimpleFSIndexInput(File path, IOContext context, int chunkSize) throws IOException {\n      super(context);\n      this.file = new Descriptor(path, \"r\"); \n      this.chunkSize = chunkSize;\n      this.off = 0L;\n      this.end = file.length;\n    }\n\n","sourceOld":"    public SimpleFSIndexInput(File path, int bufferSize, int chunkSize) throws IOException {\n      super(bufferSize);\n      this.file = new Descriptor(path, \"r\"); \n      this.chunkSize = chunkSize;\n      this.off = 0L;\n      this.end = file.length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["2553b00f699380c64959ccb27991289aae87be2e","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["0aab6e810b4b0d3743d6a048be0602801f4b3920","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"2553b00f699380c64959ccb27991289aae87be2e":["9454a6510e2db155fb01faa5c049b06ece95fab9","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["ddc4c914be86e34b54f70023f45a60fa7f04e929","2553b00f699380c64959ccb27991289aae87be2e"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2553b00f699380c64959ccb27991289aae87be2e":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0aab6e810b4b0d3743d6a048be0602801f4b3920","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","2553b00f699380c64959ccb27991289aae87be2e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}