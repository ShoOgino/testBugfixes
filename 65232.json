{"path":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenToParentBlockJoinQuery().mjava","commits":[{"id":"39c933d951bb06151b693f3f6dbace1cd7f5cd41","date":1468483844,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenToParentBlockJoinQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testFlattenToParentBlockJoinQuery() throws Exception {\n    initBoost();\n    Query childQuery = tq(boost, \"a\");\n    Query query = new ToParentBlockJoinQuery(childQuery, new QueryBitSetProducer(new MatchAllDocsQuery()), ScoreMode.None);\n    query = new BoostQuery(query, boost );\n    FieldQuery fq = new FieldQuery(query, true, true );\n    Set<Query> flatQueries = new HashSet<>();\n    fq.flatten(query, reader, flatQueries, 1f );\n    assertCollectionQueries(flatQueries, tq(boost, \"a\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fb049315fd021ff3b525e80efa35d7b44df9c3f","date":1468593124,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenToParentBlockJoinQuery().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenToParentBlockJoinQuery().mjava","sourceNew":"  public void testFlattenToParentBlockJoinQuery() throws Exception {\n    initBoost();\n    Query childQuery = tq(boost, \"a\");\n    Query query = new ToParentBlockJoinQuery(childQuery, new QueryBitSetProducer(new MatchAllDocsQuery()), ScoreMode.None);\n    FieldQuery fq = new FieldQuery(query, true, true );\n    Set<Query> flatQueries = new HashSet<>();\n    fq.flatten(query, reader, flatQueries, 1f);\n    assertCollectionQueries(flatQueries, tq(boost, \"a\"));\n  }\n\n","sourceOld":"  public void testFlattenToParentBlockJoinQuery() throws Exception {\n    initBoost();\n    Query childQuery = tq(boost, \"a\");\n    Query query = new ToParentBlockJoinQuery(childQuery, new QueryBitSetProducer(new MatchAllDocsQuery()), ScoreMode.None);\n    query = new BoostQuery(query, boost );\n    FieldQuery fq = new FieldQuery(query, true, true );\n    Set<Query> flatQueries = new HashSet<>();\n    fq.flatten(query, reader, flatQueries, 1f );\n    assertCollectionQueries(flatQueries, tq(boost, \"a\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenToParentBlockJoinQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testFlattenToParentBlockJoinQuery() throws Exception {\n    initBoost();\n    Query childQuery = tq(boost, \"a\");\n    Query query = new ToParentBlockJoinQuery(childQuery, new QueryBitSetProducer(new MatchAllDocsQuery()), ScoreMode.None);\n    FieldQuery fq = new FieldQuery(query, true, true );\n    Set<Query> flatQueries = new HashSet<>();\n    fq.flatten(query, reader, flatQueries, 1f);\n    assertCollectionQueries(flatQueries, tq(boost, \"a\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"944feda4f2ab2e2de62f308b3cbb6ba6953902ef","date":1539867181,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testFlattenToParentBlockJoinQuery().mjava","sourceNew":null,"sourceOld":"  public void testFlattenToParentBlockJoinQuery() throws Exception {\n    initBoost();\n    Query childQuery = tq(boost, \"a\");\n    Query query = new ToParentBlockJoinQuery(childQuery, new QueryBitSetProducer(new MatchAllDocsQuery()), ScoreMode.None);\n    FieldQuery fq = new FieldQuery(query, true, true );\n    Set<Query> flatQueries = new HashSet<>();\n    fq.flatten(query, reader, flatQueries, 1f);\n    assertCollectionQueries(flatQueries, tq(boost, \"a\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"944feda4f2ab2e2de62f308b3cbb6ba6953902ef":["9fb049315fd021ff3b525e80efa35d7b44df9c3f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fb049315fd021ff3b525e80efa35d7b44df9c3f":["39c933d951bb06151b693f3f6dbace1cd7f5cd41"],"39c933d951bb06151b693f3f6dbace1cd7f5cd41":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fb049315fd021ff3b525e80efa35d7b44df9c3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["944feda4f2ab2e2de62f308b3cbb6ba6953902ef"]},"commit2Childs":{"944feda4f2ab2e2de62f308b3cbb6ba6953902ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["39c933d951bb06151b693f3f6dbace1cd7f5cd41","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"9fb049315fd021ff3b525e80efa35d7b44df9c3f":["944feda4f2ab2e2de62f308b3cbb6ba6953902ef","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"39c933d951bb06151b693f3f6dbace1cd7f5cd41":["9fb049315fd021ff3b525e80efa35d7b44df9c3f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}