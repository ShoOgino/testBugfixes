{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetMerger.Context#getSubsWithRefinement(FacetRequest).mjava","commits":[{"id":"1931d98b40b01d5075753b197c2461a5c2652689","date":1471971289,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetMerger.Context#getSubsWithRefinement(FacetRequest).mjava","pathOld":"/dev/null","sourceNew":"    public Collection<String> getSubsWithRefinement(FacetRequest freq) {\n      if (freq.getSubFacets().isEmpty()) return Collections.emptyList();\n      Collection<String> subs = refineSubMap.get(freq);\n      if (subs != null) return subs;\n\n      for (Map.Entry<String,FacetRequest> entry : freq.subFacets.entrySet()) {\n        Collection<String> childSubs = getSubsWithRefinement(entry.getValue());\n        if (childSubs.size() > 0 || entry.getValue().getRefineMethod() == SIMPLE) {\n          if (subs == null) {\n            subs = new ArrayList<>(freq.getSubFacets().size());\n          }\n          subs.add(entry.getKey());\n        }\n      }\n\n      if (subs == null) {\n        subs = Collections.emptyList();\n      }\n      refineSubMap.put(freq, subs);\n      return subs;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","date":1472163016,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetMerger.Context#getSubsWithRefinement(FacetRequest).mjava","pathOld":"/dev/null","sourceNew":"    public Collection<String> getSubsWithRefinement(FacetRequest freq) {\n      if (freq.getSubFacets().isEmpty()) return Collections.emptyList();\n      Collection<String> subs = refineSubMap.get(freq);\n      if (subs != null) return subs;\n\n      for (Map.Entry<String,FacetRequest> entry : freq.subFacets.entrySet()) {\n        Collection<String> childSubs = getSubsWithRefinement(entry.getValue());\n        if (childSubs.size() > 0 || entry.getValue().getRefineMethod() == SIMPLE) {\n          if (subs == null) {\n            subs = new ArrayList<>(freq.getSubFacets().size());\n          }\n          subs.add(entry.getKey());\n        }\n      }\n\n      if (subs == null) {\n        subs = Collections.emptyList();\n      }\n      refineSubMap.put(freq, subs);\n      return subs;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetMerger.Context#getSubsWithRefinement(FacetRequest).mjava","pathOld":"/dev/null","sourceNew":"    public Collection<String> getSubsWithRefinement(FacetRequest freq) {\n      if (freq.getSubFacets().isEmpty()) return Collections.emptyList();\n      Collection<String> subs = refineSubMap.get(freq);\n      if (subs != null) return subs;\n\n      for (Map.Entry<String,FacetRequest> entry : freq.subFacets.entrySet()) {\n        Collection<String> childSubs = getSubsWithRefinement(entry.getValue());\n        if (childSubs.size() > 0 || entry.getValue().getRefineMethod() == SIMPLE) {\n          if (subs == null) {\n            subs = new ArrayList<>(freq.getSubFacets().size());\n          }\n          subs.add(entry.getKey());\n        }\n      }\n\n      if (subs == null) {\n        subs = Collections.emptyList();\n      }\n      refineSubMap.put(freq, subs);\n      return subs;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1931d98b40b01d5075753b197c2461a5c2652689":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1931d98b40b01d5075753b197c2461a5c2652689"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1931d98b40b01d5075753b197c2461a5c2652689","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1931d98b40b01d5075753b197c2461a5c2652689":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}