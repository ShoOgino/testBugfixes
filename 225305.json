{"path":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest#testReloadDuringBuild().mjava","commits":[{"id":"eca6c16577c72bb12bfca3a7717d968c85ea729c","date":1486164338,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest#testReloadDuringBuild().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"AnalyzingInfixSuggesterTest\");\n    try {\n      // Build the suggester in the background with a long dictionary\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      // Stop the dictionary's input iterator\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3def6097490d483908343e95c16631f2580e2489","date":1533005389,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest#testReloadDuringBuild().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest#testReloadDuringBuild().mjava","sourceNew":"  @Test\n  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      // Build the suggester in the background with a long dictionary\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      // Stop the dictionary's input iterator\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"AnalyzingInfixSuggesterTest\");\n    try {\n      // Build the suggester in the background with a long dictionary\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      // Stop the dictionary's input iterator\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest#testReloadDuringBuild().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest#testReloadDuringBuild().mjava","sourceNew":"  @Test\n  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      // Build the suggester in the background with a long dictionary\n      @SuppressWarnings({\"rawtypes\"})\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      // Stop the dictionary's input iterator\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      // Build the suggester in the background with a long dictionary\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      // Stop the dictionary's input iterator\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eca6c16577c72bb12bfca3a7717d968c85ea729c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["3def6097490d483908343e95c16631f2580e2489"],"3def6097490d483908343e95c16631f2580e2489":["eca6c16577c72bb12bfca3a7717d968c85ea729c"]},"commit2Childs":{"eca6c16577c72bb12bfca3a7717d968c85ea729c":["3def6097490d483908343e95c16631f2580e2489"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eca6c16577c72bb12bfca3a7717d968c85ea729c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3def6097490d483908343e95c16631f2580e2489":["e98520789adb1d5ad05afb4956eca0944a929688"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}