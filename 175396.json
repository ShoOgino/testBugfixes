{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdSortSpecStrategy#collapse(int,int,int).mjava","commits":[{"id":"0325de99180d346d61d36938843a5c8451fe26ae","date":1447368726,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdSortSpecStrategy#collapse(int,int,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n      \n      if(boosted && mergeBoost.boost(globalDoc)) {\n        this.boostOrds.add(ord);\n        this.boostDocs.add(globalDoc);\n      }\n\n      if (needsScores) {\n        this.score = scorer.score();\n      }\n\n      if (ord > -1) { // real collapseKey\n        if (-1 == ords[ord]) {\n          // we've never seen this ord (aka: collapseKey) before, treat it as group head for now\n          compareState.setGroupValues(ord, contextDoc);\n          ords[ord] = globalDoc;\n          if (needsScores) {\n            scores[ord] = score;\n          }\n        } else {\n          // test this ord to see if it's a new group leader\n          if (compareState.testAndSetGroupValues(ord, contextDoc)) {\n            ords[ord] = globalDoc;\n            if (needsScores) {\n              scores[ord] = score;\n            }\n          }\n        }\n      } else if (this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n        if (-1 == nullDoc) {\n          // we've never seen a doc with null collapse key yet, treat it as the null group head for now\n          compareState.setNullGroupValues(contextDoc);\n          nullDoc = globalDoc;\n          if (needsScores) {\n            nullScore = score;\n          }\n        } else {\n          // test this doc to see if it's the new null leader\n          if (compareState.testAndSetNullGroupValues(contextDoc)) {\n            nullDoc = globalDoc;\n            if (needsScores) {\n              nullScore = score;\n            }\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        this.collapsedSet.set(globalDoc);\n        if (needsScores) {\n          nullScores.add(score);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"446ec69a32a7e8cb8bf6eb8be693e96ab5f5a0d3","date":1556831715,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdSortSpecStrategy#collapse(int,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdSortSpecStrategy#collapse(int,int,int).mjava","sourceNew":"    @Override\n    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n      \n      if(boosted && mergeBoost.boost(globalDoc)) {\n        this.boostOrds.add(ord);\n        this.boostDocs.add(globalDoc);\n      }\n\n      if (needsScores4Collapsing) {\n        this.score = scorer.score();\n      }\n\n      if (ord > -1) { // real collapseKey\n        if (-1 == ords[ord]) {\n          // we've never seen this ord (aka: collapseKey) before, treat it as group head for now\n          compareState.setGroupValues(ord, contextDoc);\n          ords[ord] = globalDoc;\n          if (needsScores) {\n            if (!needsScores4Collapsing) {\n              this.score = scorer.score();\n            }\n            scores[ord] = score;\n          }\n        } else {\n          // test this ord to see if it's a new group leader\n          if (compareState.testAndSetGroupValues(ord, contextDoc)) {//TODO X\n            ords[ord] = globalDoc;\n            if (needsScores) {\n              if (!needsScores4Collapsing) {\n                this.score = scorer.score();\n              }\n              scores[ord] = score;\n            }\n          }\n        }\n      } else if (this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n        if (-1 == nullDoc) {\n          // we've never seen a doc with null collapse key yet, treat it as the null group head for now\n          compareState.setNullGroupValues(contextDoc);\n          nullDoc = globalDoc;\n          if (needsScores) {\n            if (!needsScores4Collapsing) {\n              this.score = scorer.score();\n            }\n            nullScore = score;\n          }\n        } else {\n          // test this doc to see if it's the new null leader\n          if (compareState.testAndSetNullGroupValues(contextDoc)) {\n            nullDoc = globalDoc;\n            if (needsScores) {\n              if (!needsScores4Collapsing) {\n                this.score = scorer.score();\n              }\n              nullScore = score;\n            }\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        this.collapsedSet.set(globalDoc);\n        if (needsScores) {\n          if (!needsScores4Collapsing) {\n            this.score = scorer.score();\n          }\n          nullScores.add(score);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n      \n      if(boosted && mergeBoost.boost(globalDoc)) {\n        this.boostOrds.add(ord);\n        this.boostDocs.add(globalDoc);\n      }\n\n      if (needsScores) {\n        this.score = scorer.score();\n      }\n\n      if (ord > -1) { // real collapseKey\n        if (-1 == ords[ord]) {\n          // we've never seen this ord (aka: collapseKey) before, treat it as group head for now\n          compareState.setGroupValues(ord, contextDoc);\n          ords[ord] = globalDoc;\n          if (needsScores) {\n            scores[ord] = score;\n          }\n        } else {\n          // test this ord to see if it's a new group leader\n          if (compareState.testAndSetGroupValues(ord, contextDoc)) {\n            ords[ord] = globalDoc;\n            if (needsScores) {\n              scores[ord] = score;\n            }\n          }\n        }\n      } else if (this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n        if (-1 == nullDoc) {\n          // we've never seen a doc with null collapse key yet, treat it as the null group head for now\n          compareState.setNullGroupValues(contextDoc);\n          nullDoc = globalDoc;\n          if (needsScores) {\n            nullScore = score;\n          }\n        } else {\n          // test this doc to see if it's the new null leader\n          if (compareState.testAndSetNullGroupValues(contextDoc)) {\n            nullDoc = globalDoc;\n            if (needsScores) {\n              nullScore = score;\n            }\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        this.collapsedSet.set(globalDoc);\n        if (needsScores) {\n          nullScores.add(score);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3575e61fd7df2bbcce8b977a23d3d67aa423ce62","date":1586507050,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdSortSpecStrategy#collapse(int,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdSortSpecStrategy#collapse(int,int,int).mjava","sourceNew":"    @Override\n    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n\n      if(boosted && mergeBoost.boost(globalDoc)) {\n        this.boostOrds.add(ord);\n        this.boostDocs.add(globalDoc);\n      }\n\n      if (needsScores4Collapsing) {\n        this.score = scorer.score();\n      }\n\n      if (ord > -1) { // real collapseKey\n        if (-1 == ords.get(ord)) {\n          // we've never seen this ord (aka: collapseKey) before, treat it as group head for now\n          compareState.setGroupValues(ord, contextDoc);\n          ords.put(ord, globalDoc);\n          if (needsScores) {\n            if (!needsScores4Collapsing) {\n              this.score = scorer.score();\n            }\n            scores.put(ord, score);\n          }\n        } else {\n          // test this ord to see if it's a new group leader\n          if (compareState.testAndSetGroupValues(ord, contextDoc)) {//TODO X\n            ords.put(ord, globalDoc);\n            if (needsScores) {\n              if (!needsScores4Collapsing) {\n                this.score = scorer.score();\n              }\n              scores.put(ord, score);\n            }\n          }\n        }\n      } else if (this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n        if (-1 == nullDoc) {\n          // we've never seen a doc with null collapse key yet, treat it as the null group head for now\n          compareState.setNullGroupValues(contextDoc);\n          nullDoc = globalDoc;\n          if (needsScores) {\n            if (!needsScores4Collapsing) {\n              this.score = scorer.score();\n            }\n            nullScore = score;\n          }\n        } else {\n          // test this doc to see if it's the new null leader\n          if (compareState.testAndSetNullGroupValues(contextDoc)) {\n            nullDoc = globalDoc;\n            if (needsScores) {\n              if (!needsScores4Collapsing) {\n                this.score = scorer.score();\n              }\n              nullScore = score;\n            }\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        this.collapsedSet.set(globalDoc);\n        if (needsScores) {\n          if (!needsScores4Collapsing) {\n            this.score = scorer.score();\n          }\n          nullScores.add(score);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n      \n      if(boosted && mergeBoost.boost(globalDoc)) {\n        this.boostOrds.add(ord);\n        this.boostDocs.add(globalDoc);\n      }\n\n      if (needsScores4Collapsing) {\n        this.score = scorer.score();\n      }\n\n      if (ord > -1) { // real collapseKey\n        if (-1 == ords[ord]) {\n          // we've never seen this ord (aka: collapseKey) before, treat it as group head for now\n          compareState.setGroupValues(ord, contextDoc);\n          ords[ord] = globalDoc;\n          if (needsScores) {\n            if (!needsScores4Collapsing) {\n              this.score = scorer.score();\n            }\n            scores[ord] = score;\n          }\n        } else {\n          // test this ord to see if it's a new group leader\n          if (compareState.testAndSetGroupValues(ord, contextDoc)) {//TODO X\n            ords[ord] = globalDoc;\n            if (needsScores) {\n              if (!needsScores4Collapsing) {\n                this.score = scorer.score();\n              }\n              scores[ord] = score;\n            }\n          }\n        }\n      } else if (this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n        if (-1 == nullDoc) {\n          // we've never seen a doc with null collapse key yet, treat it as the null group head for now\n          compareState.setNullGroupValues(contextDoc);\n          nullDoc = globalDoc;\n          if (needsScores) {\n            if (!needsScores4Collapsing) {\n              this.score = scorer.score();\n            }\n            nullScore = score;\n          }\n        } else {\n          // test this doc to see if it's the new null leader\n          if (compareState.testAndSetNullGroupValues(contextDoc)) {\n            nullDoc = globalDoc;\n            if (needsScores) {\n              if (!needsScores4Collapsing) {\n                this.score = scorer.score();\n              }\n              nullScore = score;\n            }\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        this.collapsedSet.set(globalDoc);\n        if (needsScores) {\n          if (!needsScores4Collapsing) {\n            this.score = scorer.score();\n          }\n          nullScores.add(score);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a813b523bf76aa0a68013d636b6eb53cedb142a4","date":1601387389,"type":3,"author":"Guna Sekhar Dora Kovvuru","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdSortSpecStrategy#collapse(int,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdSortSpecStrategy#collapse(int,int,int).mjava","sourceNew":"    @Override\n    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n\n      if(boosted && mergeBoost.boost(globalDoc)) {\n        this.boostOrds.add(ord);\n        this.boostDocs.add(globalDoc);\n      }\n\n      if (needsScores4Collapsing) {\n        this.score = scorer.score();\n      }\n\n      if (ord > -1) { // real collapseKey\n        if (-1 == ords.get(ord)) {\n          // we've never seen this ord (aka: collapseKey) before, treat it as group head for now\n          compareState.setGroupValues(ord, contextDoc);\n          ords.put(ord, globalDoc);\n          if (needsScores) {\n            if (!needsScores4Collapsing) {\n              this.score = scorer.score();\n            }\n            scores.put(ord, score);\n          }\n        } else {\n          // test this ord to see if it's a new group leader\n          if (compareState.testAndSetGroupValues(ord, contextDoc)) {//TODO X\n            ords.put(ord, globalDoc);\n            if (needsScores) {\n              if (!needsScores4Collapsing) {\n                this.score = scorer.score();\n              }\n              scores.put(ord, score);\n            }\n          }\n        }\n      } else if (this.nullPolicy == NullPolicy.COLLAPSE.getCode()) {\n        if (-1 == nullDoc) {\n          // we've never seen a doc with null collapse key yet, treat it as the null group head for now\n          compareState.setNullGroupValues(contextDoc);\n          nullDoc = globalDoc;\n          if (needsScores) {\n            if (!needsScores4Collapsing) {\n              this.score = scorer.score();\n            }\n            nullScore = score;\n          }\n        } else {\n          // test this doc to see if it's the new null leader\n          if (compareState.testAndSetNullGroupValues(contextDoc)) {\n            nullDoc = globalDoc;\n            if (needsScores) {\n              if (!needsScores4Collapsing) {\n                this.score = scorer.score();\n              }\n              nullScore = score;\n            }\n          }\n        }\n      } else if(this.nullPolicy == NullPolicy.EXPAND.getCode()) {\n        this.collapsedSet.set(globalDoc);\n        if (needsScores) {\n          if (!needsScores4Collapsing) {\n            this.score = scorer.score();\n          }\n          nullScores.add(score);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n\n      if(boosted && mergeBoost.boost(globalDoc)) {\n        this.boostOrds.add(ord);\n        this.boostDocs.add(globalDoc);\n      }\n\n      if (needsScores4Collapsing) {\n        this.score = scorer.score();\n      }\n\n      if (ord > -1) { // real collapseKey\n        if (-1 == ords.get(ord)) {\n          // we've never seen this ord (aka: collapseKey) before, treat it as group head for now\n          compareState.setGroupValues(ord, contextDoc);\n          ords.put(ord, globalDoc);\n          if (needsScores) {\n            if (!needsScores4Collapsing) {\n              this.score = scorer.score();\n            }\n            scores.put(ord, score);\n          }\n        } else {\n          // test this ord to see if it's a new group leader\n          if (compareState.testAndSetGroupValues(ord, contextDoc)) {//TODO X\n            ords.put(ord, globalDoc);\n            if (needsScores) {\n              if (!needsScores4Collapsing) {\n                this.score = scorer.score();\n              }\n              scores.put(ord, score);\n            }\n          }\n        }\n      } else if (this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n        if (-1 == nullDoc) {\n          // we've never seen a doc with null collapse key yet, treat it as the null group head for now\n          compareState.setNullGroupValues(contextDoc);\n          nullDoc = globalDoc;\n          if (needsScores) {\n            if (!needsScores4Collapsing) {\n              this.score = scorer.score();\n            }\n            nullScore = score;\n          }\n        } else {\n          // test this doc to see if it's the new null leader\n          if (compareState.testAndSetNullGroupValues(contextDoc)) {\n            nullDoc = globalDoc;\n            if (needsScores) {\n              if (!needsScores4Collapsing) {\n                this.score = scorer.score();\n              }\n              nullScore = score;\n            }\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        this.collapsedSet.set(globalDoc);\n        if (needsScores) {\n          if (!needsScores4Collapsing) {\n            this.score = scorer.score();\n          }\n          nullScores.add(score);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a813b523bf76aa0a68013d636b6eb53cedb142a4":["3575e61fd7df2bbcce8b977a23d3d67aa423ce62"],"3575e61fd7df2bbcce8b977a23d3d67aa423ce62":["446ec69a32a7e8cb8bf6eb8be693e96ab5f5a0d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"446ec69a32a7e8cb8bf6eb8be693e96ab5f5a0d3":["0325de99180d346d61d36938843a5c8451fe26ae"],"0325de99180d346d61d36938843a5c8451fe26ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a813b523bf76aa0a68013d636b6eb53cedb142a4"]},"commit2Childs":{"a813b523bf76aa0a68013d636b6eb53cedb142a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3575e61fd7df2bbcce8b977a23d3d67aa423ce62":["a813b523bf76aa0a68013d636b6eb53cedb142a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0325de99180d346d61d36938843a5c8451fe26ae"],"446ec69a32a7e8cb8bf6eb8be693e96ab5f5a0d3":["3575e61fd7df2bbcce8b977a23d3d67aa423ce62"],"0325de99180d346d61d36938843a5c8451fe26ae":["446ec69a32a7e8cb8bf6eb8be693e96ab5f5a0d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}