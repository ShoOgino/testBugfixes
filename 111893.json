{"path":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene40\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene40\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf8086c7e11dc41303ef1b8050bd355ddfaee76d","date":1350007219,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene41\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene40\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene41\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene40\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene41\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene40\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e","date":1358793943,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene42\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene41\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633","date":1359743129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene42\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene41\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11a746437bc5c0a0b3df0337ed249c387c812871","date":1376687959,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene45\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene42\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene45\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene42\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene45\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene42\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8435160e9702b19398118ddf76b61c846612b6a4","date":1380349140,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene46\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene45\"));\n  }\n\n","bugFix":null,"bugIntro":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8106bc60c7452250f84c65cdb43ab6b1d8eb1534","date":1401906364,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene49\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene46\"));\n  }\n\n","bugFix":["8435160e9702b19398118ddf76b61c846612b6a4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793","date":1408030244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene410\"));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene49\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"941b7027a51547b0a38d711bc08ec354f9e2e4a7","date":1411394279,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNamedSPILoader#testAvailableServices().mjava","sourceNew":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(TestUtil.getDefaultCodec().getName()));\n  }\n\n","sourceOld":"  public void testAvailableServices() {\n    Set<String> codecs = Codec.availableCodecs();\n    assertTrue(codecs.contains(\"Lucene410\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"8435160e9702b19398118ddf76b61c846612b6a4":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633","11a746437bc5c0a0b3df0337ed249c387c812871"],"d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"11a746437bc5c0a0b3df0337ed249c387c812871":["d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["8435160e9702b19398118ddf76b61c846612b6a4"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["941b7027a51547b0a38d711bc08ec354f9e2e4a7"],"941b7027a51547b0a38d711bc08ec354f9e2e4a7":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","c7492bcb52be51e55d596134b95b2e53cc4ffb91","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"8435160e9702b19398118ddf76b61c846612b6a4":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","8435160e9702b19398118ddf76b61c846612b6a4"],"d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","11a746437bc5c0a0b3df0337ed249c387c812871"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633","3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e"],"11a746437bc5c0a0b3df0337ed249c387c812871":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["941b7027a51547b0a38d711bc08ec354f9e2e4a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"941b7027a51547b0a38d711bc08ec354f9e2e4a7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","db4fdbf3d262768eabc027cd8321edca0cd11fa8","3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}