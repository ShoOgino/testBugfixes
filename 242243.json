{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","pathOld":"/dev/null","sourceNew":"  static DataSource wrapDs(final DataSource ds) {\n    final SolrWriter writer = DocBuilder.INSTANCE.get().writer;\n    return new DataSource() {\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      public void close() {\n        ds.close();\n      }\n\n      public Object getData(String query) {\n        writer.log(SolrWriter.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          DocBuilder.INSTANCE.get().writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          DocBuilder.INSTANCE.get().writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          writer.log(SolrWriter.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"758fdd153bb361b47f22db79ace6af6f6b7b9330","date":1240213015,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","sourceNew":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      public void close() {\n        ds.close();\n      }\n\n      public Object getData(String query) {\n        writer.log(SolrWriter.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          writer.log(SolrWriter.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","sourceOld":"  static DataSource wrapDs(final DataSource ds) {\n    final SolrWriter writer = DocBuilder.INSTANCE.get().writer;\n    return new DataSource() {\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      public void close() {\n        ds.close();\n      }\n\n      public Object getData(String query) {\n        writer.log(SolrWriter.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          DocBuilder.INSTANCE.get().writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          DocBuilder.INSTANCE.get().writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          writer.log(SolrWriter.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger#wrapDs(DataSource).mjava","sourceNew":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      public void close() {\n        ds.close();\n      }\n\n      public Object getData(String query) {\n        writer.log(SolrWriter.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          writer.log(SolrWriter.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","sourceOld":"  DataSource wrapDs(final DataSource ds) {\n    return new DataSource() {\n      public void init(Context context, Properties initProps) {\n        ds.init(context, initProps);\n      }\n\n      public void close() {\n        ds.close();\n      }\n\n      public Object getData(String query) {\n        writer.log(SolrWriter.ENTITY_META, \"query\", query);\n        long start = System.currentTimeMillis();\n        try {\n          return ds.getData(query);\n        } catch (DataImportHandlerException de) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, de);\n          throw de;\n        } catch (Exception e) {\n          writer.log(SolrWriter.ENTITY_EXCEPTION,\n                  null, e);\n          DataImportHandlerException de = new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, \"\", e);\n          de.debugged = true;\n          throw de;\n        } finally {\n          writer.log(SolrWriter.ENTITY_META, \"time-taken\", DocBuilder\n                  .getTimeElapsedSince(start));\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"ad94625fb8d088209f46650c8097196fec67f00c":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}