{"path":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingTermState#copyFrom(TermState).mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingTermState#copyFrom(TermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#copyFrom(TermState).mjava","sourceNew":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      PulsingTermState other = (PulsingTermState) _other;\n      postingsSize = other.postingsSize;\n      if (other.postingsSize != -1) {\n        if (postings == null || postings.length < other.postingsSize) {\n          postings = new byte[ArrayUtil.oversize(other.postingsSize, 1)];\n        }\n        System.arraycopy(other.postings, 0, postings, 0, other.postingsSize);\n      } else {\n        wrappedTermState.copyFrom(other.wrappedTermState);\n      }\n\n      // NOTE: we do not copy the\n      // inlinedBytes/inlinedBytesReader; these are only\n      // stored on the \"primary\" TermState.  They are\n      // \"transient\" to cloned term states.\n    }\n\n","sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      PulsingTermState other = (PulsingTermState) _other;\n      postingsSize = other.postingsSize;\n      if (other.postingsSize != -1) {\n        if (postings == null || postings.length < other.postingsSize) {\n          postings = new byte[ArrayUtil.oversize(other.postingsSize, 1)];\n        }\n        System.arraycopy(other.postings, 0, postings, 0, other.postingsSize);\n      } else if (wrappedTermState != null) {\n        wrappedTermState.copyFrom(other.wrappedTermState);\n      } else {\n        wrappedTermState = (BlockTermState) other.wrappedTermState.clone();\n      }\n\n      // NOTE: we do not copy the\n      // inlinedBytes/inlinedBytesReader; these are only\n      // stored on the \"primary\" TermState.  They are\n      // \"transient\" to cloned term states.\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingTermState#copyFrom(TermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingTermState#copyFrom(TermState).mjava","sourceNew":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      PulsingTermState other = (PulsingTermState) _other;\n      postingsSize = other.postingsSize;\n      if (other.postingsSize != -1) {\n        if (postings == null || postings.length < other.postingsSize) {\n          postings = new byte[ArrayUtil.oversize(other.postingsSize, 1)];\n        }\n        System.arraycopy(other.postings, 0, postings, 0, other.postingsSize);\n      } else {\n        wrappedTermState.copyFrom(other.wrappedTermState);\n      }\n\n      // NOTE: we do not copy the\n      // inlinedBytes/inlinedBytesReader; these are only\n      // stored on the \"primary\" TermState.  They are\n      // \"transient\" to cloned term states.\n    }\n\n","sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      PulsingTermState other = (PulsingTermState) _other;\n      postingsSize = other.postingsSize;\n      if (other.postingsSize != -1) {\n        if (postings == null || postings.length < other.postingsSize) {\n          postings = new byte[ArrayUtil.oversize(other.postingsSize, 1)];\n        }\n        System.arraycopy(other.postings, 0, postings, 0, other.postingsSize);\n      } else {\n        wrappedTermState.copyFrom(other.wrappedTermState);\n      }\n\n      // NOTE: we do not copy the\n      // inlinedBytes/inlinedBytesReader; these are only\n      // stored on the \"primary\" TermState.  They are\n      // \"transient\" to cloned term states.\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}