{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","commits":[{"id":"4c458333dd8c8b935c4a00af68cdb5371e68532a","date":1525693273,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","pathOld":"/dev/null","sourceNew":"    private void ensureArgumentIsValidBooleanIfPresent(CommandLine cli, String argName) {\n      if (cli.hasOption(argName)) {\n        final String value = cli.getOptionValue(argName);\n        final Boolean parsedBoolean = BooleanUtils.toBooleanObject(value);\n        if (parsedBoolean == null) {\n          echo(\"Argument [\" + argName + \"] must be either true or false, but was [\" + value + \"]\");\n          exit(1);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","sourceNew":"    private void ensureArgumentIsValidBooleanIfPresent(CommandLine cli, String argName) {\n      if (cli.hasOption(argName)) {\n        final String value = cli.getOptionValue(argName);\n        final Boolean parsedBoolean = BooleanUtils.toBooleanObject(value);\n        if (parsedBoolean == null) {\n          echo(\"Argument [\" + argName + \"] must be either true or false, but was [\" + value + \"]\");\n          exit(1);\n        }\n      }\n    }\n\n","sourceOld":"    private void ensureArgumentIsValidBooleanIfPresent(CommandLine cli, String argName) {\n      if (cli.hasOption(argName)) {\n        final String value = cli.getOptionValue(argName);\n        final Boolean parsedBoolean = BooleanUtils.toBooleanObject(value);\n        if (parsedBoolean == null) {\n          echo(\"Argument [\" + argName + \"] must be either true or false, but was [\" + value + \"]\");\n          exit(1);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","sourceNew":"    private void ensureArgumentIsValidBooleanIfPresent(CommandLine cli, String argName) {\n      if (cli.hasOption(argName)) {\n        final String value = cli.getOptionValue(argName);\n        final Boolean parsedBoolean = BooleanUtils.toBooleanObject(value);\n        if (parsedBoolean == null) {\n          echo(\"Argument [\" + argName + \"] must be either true or false, but was [\" + value + \"]\");\n          exit(1);\n        }\n      }\n    }\n\n","sourceOld":"    private void ensureArgumentIsValidBooleanIfPresent(CommandLine cli, String argName) {\n      if (cli.hasOption(argName)) {\n        final String value = cli.getOptionValue(argName);\n        final Boolean parsedBoolean = BooleanUtils.toBooleanObject(value);\n        if (parsedBoolean == null) {\n          echo(\"Argument [\" + argName + \"] must be either true or false, but was [\" + value + \"]\");\n          exit(1);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","sourceNew":"    private void ensureArgumentIsValidBooleanIfPresent(CommandLine cli, String argName) {\n      if (cli.hasOption(argName)) {\n        final String value = cli.getOptionValue(argName);\n        final Boolean parsedBoolean = BooleanUtils.toBooleanObject(value);\n        if (parsedBoolean == null) {\n          echo(\"Argument [\" + argName + \"] must be either true or false, but was [\" + value + \"]\");\n          exit(1);\n        }\n      }\n    }\n\n","sourceOld":"    private void ensureArgumentIsValidBooleanIfPresent(CommandLine cli, String argName) {\n      if (cli.hasOption(argName)) {\n        final String value = cli.getOptionValue(argName);\n        final Boolean parsedBoolean = BooleanUtils.toBooleanObject(value);\n        if (parsedBoolean == null) {\n          echo(\"Argument [\" + argName + \"] must be either true or false, but was [\" + value + \"]\");\n          exit(1);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ac6494315d04f68950d2f00f5436b4861bcd467","date":1553125039,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","sourceNew":"    private void ensureArgumentIsValidBooleanIfPresent(CommandLine cli, String argName) {\n      if (cli.hasOption(argName)) {\n        final String value = cli.getOptionValue(argName);\n        if (Boolean.parseBoolean(value)) {\n          echo(\"Argument [\" + argName + \"] must be either true or false, but was [\" + value + \"]\");\n          exit(1);\n        }\n      }\n    }\n\n","sourceOld":"    private void ensureArgumentIsValidBooleanIfPresent(CommandLine cli, String argName) {\n      if (cli.hasOption(argName)) {\n        final String value = cli.getOptionValue(argName);\n        final Boolean parsedBoolean = BooleanUtils.toBooleanObject(value);\n        if (parsedBoolean == null) {\n          echo(\"Argument [\" + argName + \"] must be either true or false, but was [\" + value + \"]\");\n          exit(1);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ebce9a0e254ebf222e75f41c0d83610428b3ac","date":1553796487,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#ensureArgumentIsValidBooleanIfPresent(CommandLine,String).mjava","sourceNew":"    private void ensureArgumentIsValidBooleanIfPresent(CommandLine cli, String argName) {\n      if (cli.hasOption(argName)) {\n        final String value = cli.getOptionValue(argName);\n        final Boolean parsedBoolean = BooleanUtils.toBooleanObject(value);\n        if (parsedBoolean == null) {\n          echo(\"Argument [\" + argName + \"] must be either true or false, but was [\" + value + \"]\");\n          exit(1);\n        }\n      }\n    }\n\n","sourceOld":"    private void ensureArgumentIsValidBooleanIfPresent(CommandLine cli, String argName) {\n      if (cli.hasOption(argName)) {\n        final String value = cli.getOptionValue(argName);\n        if (Boolean.parseBoolean(value)) {\n          echo(\"Argument [\" + argName + \"] must be either true or false, but was [\" + value + \"]\");\n          exit(1);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["4c458333dd8c8b935c4a00af68cdb5371e68532a","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"0ac6494315d04f68950d2f00f5436b4861bcd467":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"70ebce9a0e254ebf222e75f41c0d83610428b3ac":["0ac6494315d04f68950d2f00f5436b4861bcd467"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4c458333dd8c8b935c4a00af68cdb5371e68532a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["70ebce9a0e254ebf222e75f41c0d83610428b3ac"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["4c458333dd8c8b935c4a00af68cdb5371e68532a"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["4c458333dd8c8b935c4a00af68cdb5371e68532a","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"0ac6494315d04f68950d2f00f5436b4861bcd467":["70ebce9a0e254ebf222e75f41c0d83610428b3ac"],"70ebce9a0e254ebf222e75f41c0d83610428b3ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c458333dd8c8b935c4a00af68cdb5371e68532a"],"4c458333dd8c8b935c4a00af68cdb5371e68532a":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","0ac6494315d04f68950d2f00f5436b4861bcd467","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}