{"path":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#readSchemaLocally().mjava","commits":[{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#readSchemaLocally().mjava","pathOld":"/dev/null","sourceNew":"  private InputStream readSchemaLocally() {\n    InputStream schemaInputStream = null;\n    try {\n      // Attempt to load the managed schema\n      schemaInputStream = loader.openSchema(managedSchemaResourceName);\n      loadedResource = managedSchemaResourceName;\n      warnIfNonManagedSchemaExists();\n    } catch (IOException e) {\n      log.info(\"The schema is configured as managed, but managed schema resource \" + managedSchemaResourceName\n              + \" not found - loading non-managed schema \" + resourceName + \" instead\");\n    }\n    if (null == schemaInputStream) {\n      // The managed schema file could not be found - load the non-managed schema\n      try {\n        schemaInputStream = loader.openSchema(resourceName);\n        loadedResource = resourceName;\n        shouldUpgrade = true;\n      } catch (Exception e) {\n        final String msg = \"Error loading both non-managed schema '\" + resourceName + \"' and managed schema '\"\n                         + managedSchemaResourceName + \"'\";\n        log.error(msg, e);\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n      }\n    }\n    return schemaInputStream; \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#readSchemaLocally().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#readSchemaLocally().mjava","sourceNew":"  private InputStream readSchemaLocally() {\n    InputStream schemaInputStream = null;\n    try {\n      // Attempt to load the managed schema\n      schemaInputStream = loader.openResource(managedSchemaResourceName);\n      loadedResource = managedSchemaResourceName;\n      warnIfNonManagedSchemaExists();\n    } catch (IOException e) {\n      log.info(\"The schema is configured as managed, but managed schema resource \" + managedSchemaResourceName\n              + \" not found - loading non-managed schema \" + resourceName + \" instead\");\n    }\n    if (null == schemaInputStream) {\n      // The managed schema file could not be found - load the non-managed schema\n      try {\n        schemaInputStream = loader.openResource(resourceName);\n        loadedResource = resourceName;\n        shouldUpgrade = true;\n      } catch (Exception e) {\n        final String msg = \"Error loading both non-managed schema '\" + resourceName + \"' and managed schema '\"\n                         + managedSchemaResourceName + \"'\";\n        log.error(msg, e);\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n      }\n    }\n    return schemaInputStream; \n  }\n\n","sourceOld":"  private InputStream readSchemaLocally() {\n    InputStream schemaInputStream = null;\n    try {\n      // Attempt to load the managed schema\n      schemaInputStream = loader.openSchema(managedSchemaResourceName);\n      loadedResource = managedSchemaResourceName;\n      warnIfNonManagedSchemaExists();\n    } catch (IOException e) {\n      log.info(\"The schema is configured as managed, but managed schema resource \" + managedSchemaResourceName\n              + \" not found - loading non-managed schema \" + resourceName + \" instead\");\n    }\n    if (null == schemaInputStream) {\n      // The managed schema file could not be found - load the non-managed schema\n      try {\n        schemaInputStream = loader.openSchema(resourceName);\n        loadedResource = resourceName;\n        shouldUpgrade = true;\n      } catch (Exception e) {\n        final String msg = \"Error loading both non-managed schema '\" + resourceName + \"' and managed schema '\"\n                         + managedSchemaResourceName + \"'\";\n        log.error(msg, e);\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n      }\n    }\n    return schemaInputStream; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9df8125ba9193a2e2e285ed92157810b1952a244","date":1587326330,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#readSchemaLocally().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/ManagedIndexSchemaFactory#readSchemaLocally().mjava","sourceNew":"  private InputStream readSchemaLocally() {\n    InputStream schemaInputStream = null;\n    try {\n      // Attempt to load the managed schema\n      schemaInputStream = loader.openResource(managedSchemaResourceName);\n      loadedResource = managedSchemaResourceName;\n      warnIfNonManagedSchemaExists();\n    } catch (IOException e) {\n      log.info(\"The schema is configured as managed, but managed schema resource {}  not found - loading non-managed schema {} instead\"\n          , managedSchemaResourceName, resourceName);\n    }\n    if (null == schemaInputStream) {\n      // The managed schema file could not be found - load the non-managed schema\n      try {\n        schemaInputStream = loader.openResource(resourceName);\n        loadedResource = resourceName;\n        shouldUpgrade = true;\n      } catch (Exception e) {\n        final String msg = \"Error loading both non-managed schema '\" + resourceName + \"' and managed schema '\"\n                         + managedSchemaResourceName + \"'\";\n        log.error(msg, e);\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n      }\n    }\n    return schemaInputStream; \n  }\n\n","sourceOld":"  private InputStream readSchemaLocally() {\n    InputStream schemaInputStream = null;\n    try {\n      // Attempt to load the managed schema\n      schemaInputStream = loader.openResource(managedSchemaResourceName);\n      loadedResource = managedSchemaResourceName;\n      warnIfNonManagedSchemaExists();\n    } catch (IOException e) {\n      log.info(\"The schema is configured as managed, but managed schema resource \" + managedSchemaResourceName\n              + \" not found - loading non-managed schema \" + resourceName + \" instead\");\n    }\n    if (null == schemaInputStream) {\n      // The managed schema file could not be found - load the non-managed schema\n      try {\n        schemaInputStream = loader.openResource(resourceName);\n        loadedResource = resourceName;\n        shouldUpgrade = true;\n      } catch (Exception e) {\n        final String msg = \"Error loading both non-managed schema '\" + resourceName + \"' and managed schema '\"\n                         + managedSchemaResourceName + \"'\";\n        log.error(msg, e);\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n      }\n    }\n    return schemaInputStream; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["08970e5b8411182a29412c177eff67ec1110095b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9df8125ba9193a2e2e285ed92157810b1952a244"],"9df8125ba9193a2e2e285ed92157810b1952a244":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"08970e5b8411182a29412c177eff67ec1110095b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["9df8125ba9193a2e2e285ed92157810b1952a244"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08970e5b8411182a29412c177eff67ec1110095b"],"08970e5b8411182a29412c177eff67ec1110095b":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9df8125ba9193a2e2e285ed92157810b1952a244":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}