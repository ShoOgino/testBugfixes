{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","commits":[{"id":"8106bc60c7452250f84c65cdb43ab6b1d8eb1534","date":1401906364,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        binary.get(ord, result);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        binary.get(ord, result);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}