{"path":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect#createBox(LatLng,double,double).mjava","commits":[{"id":"04a4a94db1eb59c8583adb166acfe686a031bedc","date":1230622637,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect#createBox(LatLng,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Approximates a box centered at the given point with the given width and height in miles.\n   * @param center\n   * @param widthMi\n   * @param heightMi\n   * @return\n   */\n  public static LLRect createBox(LatLng center, double widthMi, double heightMi) {\n    double miplatdeg=DistanceApproximation.getMilesPerLngDeg(center.getLat());\n    double miplngdeg=DistanceApproximation.getMilesPerLatDeg();\n    \n    double lngDelta=(widthMi/2)/miplngdeg;\n    double latDelta=(heightMi/2)/miplatdeg;\n    \n    // TODO: Prob only works in northern hemisphere?\n    LatLng ll=new FloatLatLng(center.getLat()-latDelta, center.getLng()-lngDelta);\n    LatLng ur=new FloatLatLng(center.getLat()+latDelta, center.getLng()+lngDelta);\n    \n    return new LLRect(ll, ur);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3b6f51785c57651e9e1864b7b883037f24541c76"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d41c10b9c61bc826acd344f499e062fb46bc42ae","date":1249408917,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect#createBox(LatLng,double,double).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect#createBox(LatLng,double,double).mjava","sourceNew":"  /**\n   * Approximates a box centered at the given point with the given width and height in miles.\n   * @param center\n   * @param widthMi\n   * @param heightMi\n   */\n  public static LLRect createBox(LatLng center, double widthMi, double heightMi) {\n    double miplatdeg=DistanceApproximation.getMilesPerLngDeg(center.getLat());\n    double miplngdeg=DistanceApproximation.getMilesPerLatDeg();\n    \n    double lngDelta=(widthMi/2)/miplngdeg;\n    double latDelta=(heightMi/2)/miplatdeg;\n    \n    // TODO: Prob only works in northern hemisphere?\n    LatLng ll=new FloatLatLng(center.getLat()-latDelta, center.getLng()-lngDelta);\n    LatLng ur=new FloatLatLng(center.getLat()+latDelta, center.getLng()+lngDelta);\n    \n    return new LLRect(ll, ur);\n  }\n\n","sourceOld":"  /**\n   * Approximates a box centered at the given point with the given width and height in miles.\n   * @param center\n   * @param widthMi\n   * @param heightMi\n   * @return\n   */\n  public static LLRect createBox(LatLng center, double widthMi, double heightMi) {\n    double miplatdeg=DistanceApproximation.getMilesPerLngDeg(center.getLat());\n    double miplngdeg=DistanceApproximation.getMilesPerLatDeg();\n    \n    double lngDelta=(widthMi/2)/miplngdeg;\n    double latDelta=(heightMi/2)/miplatdeg;\n    \n    // TODO: Prob only works in northern hemisphere?\n    LatLng ll=new FloatLatLng(center.getLat()-latDelta, center.getLng()-lngDelta);\n    LatLng ur=new FloatLatLng(center.getLat()+latDelta, center.getLng()+lngDelta);\n    \n    return new LLRect(ll, ur);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a04035855bf53c50aaef580f2ec794acf73029e","date":1253578101,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect#createBox(LatLng,double,double).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect#createBox(LatLng,double,double).mjava","sourceNew":"  /**\n   * Approximates a box centered at the given point with the given width and height in miles.\n   * @param center\n   * @param widthMi\n   * @param heightMi\n   */\n  public static LLRect createBox(LatLng center, double widthMi, double heightMi) {\n    double d = widthMi;\n    LatLng ur = boxCorners(center, d, 45.0); // assume right angles\n    LatLng ll = boxCorners(center, d, 225.0);\n\n    //System.err.println(\"boxCorners: ur \" + ur.getLat() + ',' + ur.getLng());\n    //System.err.println(\"boxCorners: cnt \" + center.getLat() + ',' + center.getLng());\n    //System.err.println(\"boxCorners: ll \" + ll.getLat() + ',' + ll.getLng());\n    return new LLRect(ll, ur);\n  }\n\n","sourceOld":"  /**\n   * Approximates a box centered at the given point with the given width and height in miles.\n   * @param center\n   * @param widthMi\n   * @param heightMi\n   */\n  public static LLRect createBox(LatLng center, double widthMi, double heightMi) {\n    double miplatdeg=DistanceApproximation.getMilesPerLngDeg(center.getLat());\n    double miplngdeg=DistanceApproximation.getMilesPerLatDeg();\n    \n    double lngDelta=(widthMi/2)/miplngdeg;\n    double latDelta=(heightMi/2)/miplatdeg;\n    \n    // TODO: Prob only works in northern hemisphere?\n    LatLng ll=new FloatLatLng(center.getLat()-latDelta, center.getLng()-lngDelta);\n    LatLng ur=new FloatLatLng(center.getLat()+latDelta, center.getLng()+lngDelta);\n    \n    return new LLRect(ll, ur);\n  }\n\n","bugFix":null,"bugIntro":["3b6f51785c57651e9e1864b7b883037f24541c76"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect#createBox(LatLng,double,double).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect#createBox(LatLng,double,double).mjava","sourceNew":"  /**\n   * Approximates a box centered at the given point with the given width and height in miles.\n   * @param center\n   * @param widthMi\n   * @param heightMi\n   */\n  public static LLRect createBox(LatLng center, double widthMi, double heightMi) {\n    double d = widthMi;\n    LatLng ur = boxCorners(center, d, 45.0); // assume right angles\n    LatLng ll = boxCorners(center, d, 225.0);\n\n    //System.err.println(\"boxCorners: ur \" + ur.getLat() + ',' + ur.getLng());\n    //System.err.println(\"boxCorners: cnt \" + center.getLat() + ',' + center.getLng());\n    //System.err.println(\"boxCorners: ll \" + ll.getLat() + ',' + ll.getLng());\n    return new LLRect(ll, ur);\n  }\n\n","sourceOld":"  /**\n   * Approximates a box centered at the given point with the given width and height in miles.\n   * @param center\n   * @param widthMi\n   * @param heightMi\n   */\n  public static LLRect createBox(LatLng center, double widthMi, double heightMi) {\n    double d = widthMi;\n    LatLng ur = boxCorners(center, d, 45.0); // assume right angles\n    LatLng ll = boxCorners(center, d, 225.0);\n\n    //System.err.println(\"boxCorners: ur \" + ur.getLat() + ',' + ur.getLng());\n    //System.err.println(\"boxCorners: cnt \" + center.getLat() + ',' + center.getLng());\n    //System.err.println(\"boxCorners: ll \" + ll.getLat() + ',' + ll.getLng());\n    return new LLRect(ll, ur);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0a04035855bf53c50aaef580f2ec794acf73029e":["d41c10b9c61bc826acd344f499e062fb46bc42ae"],"04a4a94db1eb59c8583adb166acfe686a031bedc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d41c10b9c61bc826acd344f499e062fb46bc42ae":["04a4a94db1eb59c8583adb166acfe686a031bedc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0a04035855bf53c50aaef580f2ec794acf73029e"]},"commit2Childs":{"0a04035855bf53c50aaef580f2ec794acf73029e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"04a4a94db1eb59c8583adb166acfe686a031bedc":["d41c10b9c61bc826acd344f499e062fb46bc42ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04a4a94db1eb59c8583adb166acfe686a031bedc"],"d41c10b9c61bc826acd344f499e062fb46bc42ae":["0a04035855bf53c50aaef580f2ec794acf73029e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}