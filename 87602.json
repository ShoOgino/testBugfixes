{"path":"solr/core/src/test/org/apache/solr/cloud/SplitShardTest#doTest().mjava","commits":[{"id":"beea534dfd393d03270d1508d61d6b5edc2df27f","date":1540245684,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SplitShardTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void doTest() throws IOException, SolrServerException {\n    CollectionAdminRequest\n        .createCollection(COLLECTION_NAME, \"conf\", 2, 1)\n        .setMaxShardsPerNode(100)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.SplitShard splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME)\n        .setNumSubShards(5)\n        .setShardName(\"shard1\");\n    splitShard.process(cluster.getSolrClient());\n    waitForState(\"Timed out waiting for sub shards to be active. Number of active shards=\" +\n            cluster.getSolrClient().getZkStateReader().getClusterState().getCollection(COLLECTION_NAME).getActiveSlices().size(),\n        COLLECTION_NAME, activeClusterShape(6, 1));\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(10);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards > 8\");\n    } catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request.\"));\n    }\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(1);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards < 2\");\n    } catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request. Provided numSubShards=1\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SplitShardTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SplitShardTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws IOException, SolrServerException {\n    CollectionAdminRequest\n        .createCollection(COLLECTION_NAME, \"conf\", 2, 1)\n        .setMaxShardsPerNode(100)\n        .process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION_NAME, 2, 2);\n    \n    CollectionAdminRequest.SplitShard splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME)\n        .setNumSubShards(5)\n        .setShardName(\"shard1\");\n    splitShard.process(cluster.getSolrClient());\n    waitForState(\"Timed out waiting for sub shards to be active. Number of active shards=\" +\n            cluster.getSolrClient().getZkStateReader().getClusterState().getCollection(COLLECTION_NAME).getActiveSlices().size(),\n        COLLECTION_NAME, activeClusterShape(6, 7));\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(10);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards > 8\");\n    } catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request.\"));\n    }\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(1);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards < 2\");\n    } catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request. Provided numSubShards=1\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws IOException, SolrServerException {\n    CollectionAdminRequest\n        .createCollection(COLLECTION_NAME, \"conf\", 2, 1)\n        .setMaxShardsPerNode(100)\n        .process(cluster.getSolrClient());\n    CollectionAdminRequest.SplitShard splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME)\n        .setNumSubShards(5)\n        .setShardName(\"shard1\");\n    splitShard.process(cluster.getSolrClient());\n    waitForState(\"Timed out waiting for sub shards to be active. Number of active shards=\" +\n            cluster.getSolrClient().getZkStateReader().getClusterState().getCollection(COLLECTION_NAME).getActiveSlices().size(),\n        COLLECTION_NAME, activeClusterShape(6, 1));\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(10);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards > 8\");\n    } catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request.\"));\n    }\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(1);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards < 2\");\n    } catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request. Provided numSubShards=1\"));\n    }\n  }\n\n","bugFix":["beea534dfd393d03270d1508d61d6b5edc2df27f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db96734b79e26d948b59f68bd4564c4836a71acf","date":1585375566,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SplitShardTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SplitShardTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws IOException, SolrServerException {\n    CollectionAdminRequest\n        .createCollection(COLLECTION_NAME, \"conf\", 2, 1)\n        .setMaxShardsPerNode(100)\n        .process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION_NAME, 2, 2);\n    \n    CollectionAdminRequest.SplitShard splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME)\n        .setNumSubShards(5)\n        .setShardName(\"shard1\");\n    splitShard.process(cluster.getSolrClient());\n    waitForState(\"Timed out waiting for sub shards to be active. Number of active shards=\" +\n            cluster.getSolrClient().getZkStateReader().getClusterState().getCollection(COLLECTION_NAME).getActiveSlices().size(),\n        COLLECTION_NAME, activeClusterShape(6, 7));\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(10);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards > 8\");\n    } catch (BaseHttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request.\"));\n    }\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(1);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards < 2\");\n    } catch (BaseHttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request. Provided numSubShards=1\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws IOException, SolrServerException {\n    CollectionAdminRequest\n        .createCollection(COLLECTION_NAME, \"conf\", 2, 1)\n        .setMaxShardsPerNode(100)\n        .process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION_NAME, 2, 2);\n    \n    CollectionAdminRequest.SplitShard splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME)\n        .setNumSubShards(5)\n        .setShardName(\"shard1\");\n    splitShard.process(cluster.getSolrClient());\n    waitForState(\"Timed out waiting for sub shards to be active. Number of active shards=\" +\n            cluster.getSolrClient().getZkStateReader().getClusterState().getCollection(COLLECTION_NAME).getActiveSlices().size(),\n        COLLECTION_NAME, activeClusterShape(6, 7));\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(10);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards > 8\");\n    } catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request.\"));\n    }\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(1);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards < 2\");\n    } catch (HttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request. Provided numSubShards=1\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SplitShardTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SplitShardTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws IOException, SolrServerException {\n    CollectionAdminRequest\n        .createCollection(COLLECTION_NAME, \"conf\", 2, 1)\n        .process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION_NAME, 2, 2);\n    \n    CollectionAdminRequest.SplitShard splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME)\n        .setNumSubShards(5)\n        .setShardName(\"shard1\");\n    splitShard.process(cluster.getSolrClient());\n    waitForState(\"Timed out waiting for sub shards to be active. Number of active shards=\" +\n            cluster.getSolrClient().getZkStateReader().getClusterState().getCollection(COLLECTION_NAME).getActiveSlices().size(),\n        COLLECTION_NAME, activeClusterShape(6, 7));\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(10);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards > 8\");\n    } catch (BaseHttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request.\"));\n    }\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(1);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards < 2\");\n    } catch (BaseHttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request. Provided numSubShards=1\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws IOException, SolrServerException {\n    CollectionAdminRequest\n        .createCollection(COLLECTION_NAME, \"conf\", 2, 1)\n        .setMaxShardsPerNode(100)\n        .process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION_NAME, 2, 2);\n    \n    CollectionAdminRequest.SplitShard splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME)\n        .setNumSubShards(5)\n        .setShardName(\"shard1\");\n    splitShard.process(cluster.getSolrClient());\n    waitForState(\"Timed out waiting for sub shards to be active. Number of active shards=\" +\n            cluster.getSolrClient().getZkStateReader().getClusterState().getCollection(COLLECTION_NAME).getActiveSlices().size(),\n        COLLECTION_NAME, activeClusterShape(6, 7));\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(10);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards > 8\");\n    } catch (BaseHttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request.\"));\n    }\n\n    try {\n      splitShard = CollectionAdminRequest.splitShard(COLLECTION_NAME).setShardName(\"shard2\").setNumSubShards(1);\n      splitShard.process(cluster.getSolrClient());\n      fail(\"SplitShard should throw an exception when numSubShards < 2\");\n    } catch (BaseHttpSolrClient.RemoteSolrException ex) {\n      assertTrue(ex.getMessage().contains(\"A shard can only be split into 2 to 8 subshards in one split request. Provided numSubShards=1\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"beea534dfd393d03270d1508d61d6b5edc2df27f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["beea534dfd393d03270d1508d61d6b5edc2df27f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db96734b79e26d948b59f68bd4564c4836a71acf":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["db96734b79e26d948b59f68bd4564c4836a71acf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"]},"commit2Childs":{"beea534dfd393d03270d1508d61d6b5edc2df27f":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["db96734b79e26d948b59f68bd4564c4836a71acf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["beea534dfd393d03270d1508d61d6b5edc2df27f"],"db96734b79e26d948b59f68bd4564c4836a71acf":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}