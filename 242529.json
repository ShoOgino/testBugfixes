{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#addBinaryFieldValues(FieldInfo,Iterable[BytesRef]).mjava","commits":[{"id":"e9eb6464bb91cd54f3151e5a0c18dde9311a60f1","date":1383143016,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#addBinaryFieldValues(FieldInfo,Iterable[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  private void addBinaryFieldValues(FieldInfo field, final Iterable<BytesRef> values) throws IOException {\n    // write the byte[] data\n    final long startFP = data.getFilePointer();\n    boolean missing = false;\n    long totalBytes = 0;\n    int count = 0;\n    for(BytesRef v : values) {\n      if (v != null) {\n        data.writeBytes(v.bytes, v.offset, v.length);\n        totalBytes += v.length;\n        if (totalBytes > DirectDocValuesFormat.MAX_TOTAL_BYTES_LENGTH) {\n          throw new IllegalArgumentException(\"DocValuesField \\\"\" + field.name + \"\\\" is too large, cannot have more than DirectDocValuesFormat.MAX_TOTAL_BYTES_LENGTH (\" + DirectDocValuesFormat.MAX_TOTAL_BYTES_LENGTH + \") bytes\");\n        }\n      } else {\n        missing = true;\n      }\n      count++;\n    }\n\n    meta.writeLong(startFP);\n    meta.writeInt((int) totalBytes);\n    meta.writeInt(count);\n    if (missing) {\n      long start = data.getFilePointer();\n      writeMissingBitset(values);\n      meta.writeLong(start);\n      meta.writeLong(data.getFilePointer() - start);\n    } else {\n      meta.writeLong(-1L);\n    }\n    \n    int addr = 0;\n    for (BytesRef v : values) {\n      data.writeInt(addr);\n      if (v != null) {\n        addr += v.length;\n      }\n    }\n    data.writeInt(addr);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f18fb78980c55a781fd9fdc505634171059b1d","date":1567674462,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#addBinaryFieldValues(FieldInfo,Iterable[BytesRef]).mjava","sourceNew":null,"sourceOld":"  private void addBinaryFieldValues(FieldInfo field, final Iterable<BytesRef> values) throws IOException {\n    // write the byte[] data\n    final long startFP = data.getFilePointer();\n    boolean missing = false;\n    long totalBytes = 0;\n    int count = 0;\n    for(BytesRef v : values) {\n      if (v != null) {\n        data.writeBytes(v.bytes, v.offset, v.length);\n        totalBytes += v.length;\n        if (totalBytes > DirectDocValuesFormat.MAX_TOTAL_BYTES_LENGTH) {\n          throw new IllegalArgumentException(\"DocValuesField \\\"\" + field.name + \"\\\" is too large, cannot have more than DirectDocValuesFormat.MAX_TOTAL_BYTES_LENGTH (\" + DirectDocValuesFormat.MAX_TOTAL_BYTES_LENGTH + \") bytes\");\n        }\n      } else {\n        missing = true;\n      }\n      count++;\n    }\n\n    meta.writeLong(startFP);\n    meta.writeInt((int) totalBytes);\n    meta.writeInt(count);\n    if (missing) {\n      long start = data.getFilePointer();\n      writeMissingBitset(values);\n      meta.writeLong(start);\n      meta.writeLong(data.getFilePointer() - start);\n    } else {\n      meta.writeLong(-1L);\n    }\n    \n    int addr = 0;\n    for (BytesRef v : values) {\n      data.writeInt(addr);\n      if (v != null) {\n        addr += v.length;\n      }\n    }\n    data.writeInt(addr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9eb6464bb91cd54f3151e5a0c18dde9311a60f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"74f18fb78980c55a781fd9fdc505634171059b1d":["e9eb6464bb91cd54f3151e5a0c18dde9311a60f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74f18fb78980c55a781fd9fdc505634171059b1d"]},"commit2Childs":{"e9eb6464bb91cd54f3151e5a0c18dde9311a60f1":["74f18fb78980c55a781fd9fdc505634171059b1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9eb6464bb91cd54f3151e5a0c18dde9311a60f1"],"74f18fb78980c55a781fd9fdc505634171059b1d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}