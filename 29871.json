{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer#terms(String).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer#terms(String).mjava","sourceNew":"    public Terms terms(String field) throws IOException {\n      FuzzySet filter = bloomsByFieldName.get(field);\n      if (filter == null) {\n        return delegateFieldsProducer.terms(field);\n      } else {\n        Terms result = delegateFieldsProducer.terms(field);\n        if (result == null) {\n          return null;\n        }\n        return new BloomFilteredTerms(result, filter);\n      }\n    }\n\n","sourceOld":"    public Terms terms(String field) throws IOException {\n      FuzzySet filter = bloomsByFieldName.get(field);\n      if (filter == null) {\n        return delegateFieldsProducer.terms(field);\n      } else {\n        Terms result = delegateFieldsProducer.terms(field);\n        if (result == null) {\n          return null;\n        }\n        return new BloomFilteredTerms(result, filter);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer#terms(String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer#terms(String).mjava","sourceNew":"    @Override\n    public Terms terms(String field) throws IOException {\n      FuzzySet filter = bloomsByFieldName.get(field);\n      if (filter == null) {\n        return delegateFieldsProducer.terms(field);\n      } else {\n        Terms result = delegateFieldsProducer.terms(field);\n        if (result == null) {\n          return null;\n        }\n        return new BloomFilteredTerms(result, filter);\n      }\n    }\n\n","sourceOld":"    public Terms terms(String field) throws IOException {\n      FuzzySet filter = bloomsByFieldName.get(field);\n      if (filter == null) {\n        return delegateFieldsProducer.terms(field);\n      } else {\n        Terms result = delegateFieldsProducer.terms(field);\n        if (result == null) {\n          return null;\n        }\n        return new BloomFilteredTerms(result, filter);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer#terms(String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer#terms(String).mjava","sourceNew":"    @Override\n    public Terms terms(String field) throws IOException {\n      FuzzySet filter = bloomsByFieldName.get(field);\n      if (filter == null) {\n        return delegateFieldsProducer.terms(field);\n      } else {\n        Terms result = delegateFieldsProducer.terms(field);\n        if (result == null) {\n          return null;\n        }\n        return new BloomFilteredTerms(result, filter);\n      }\n    }\n\n","sourceOld":"    public Terms terms(String field) throws IOException {\n      FuzzySet filter = bloomsByFieldName.get(field);\n      if (filter == null) {\n        return delegateFieldsProducer.terms(field);\n      } else {\n        Terms result = delegateFieldsProducer.terms(field);\n        if (result == null) {\n          return null;\n        }\n        return new BloomFilteredTerms(result, filter);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","7530de27b87b961b51f01bd1299b7004d46e8823"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7530de27b87b961b51f01bd1299b7004d46e8823"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}