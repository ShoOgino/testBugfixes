{"path":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectory.CachedIndexInput#readIntoCacheAndResult(long,int,byte[],int,int).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectory.CachedIndexInput#readIntoCacheAndResult(long,int,byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    private void readIntoCacheAndResult(long blockId, int blockOffset,\n        byte[] b, int off, int lengthToReadInBlock) throws IOException {\n      long position = getRealPosition(blockId, 0);\n      int length = (int) Math.min(_blockSize, _fileLength - position);\n      _source.seek(position);\n      \n      byte[] buf = BufferStore.takeBuffer(_blockSize);\n      _source.readBytes(buf, 0, length);\n      System.arraycopy(buf, blockOffset, b, off, lengthToReadInBlock);\n      _cache.update(_cacheName, blockId, 0, buf, 0, _blockSize);\n      BufferStore.putBuffer(buf);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bba91e4be653c9cabbdd70dd59c7e7379c43f0e8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectory.CachedIndexInput#readIntoCacheAndResult(long,int,byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    private void readIntoCacheAndResult(long blockId, int blockOffset,\n        byte[] b, int off, int lengthToReadInBlock) throws IOException {\n      long position = getRealPosition(blockId, 0);\n      int length = (int) Math.min(_blockSize, _fileLength - position);\n      _source.seek(position);\n      \n      byte[] buf = BufferStore.takeBuffer(_blockSize);\n      _source.readBytes(buf, 0, length);\n      System.arraycopy(buf, blockOffset, b, off, lengthToReadInBlock);\n      _cache.update(_cacheName, blockId, 0, buf, 0, _blockSize);\n      BufferStore.putBuffer(buf);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bba91e4be653c9cabbdd70dd59c7e7379c43f0e8","date":1390842189,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectory.CachedIndexInput#readIntoCacheAndResult(long,int,byte[],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockDirectory.CachedIndexInput#readIntoCacheAndResult(long,int,byte[],int,int).mjava","sourceNew":"    private void readIntoCacheAndResult(long blockId, int blockOffset,\n        byte[] b, int off, int lengthToReadInBlock) throws IOException {\n      long position = getRealPosition(blockId, 0);\n      int length = (int) Math.min(blockSize, fileLength - position);\n      source.seek(position);\n      \n      byte[] buf = store.takeBuffer(blockSize);\n      source.readBytes(buf, 0, length);\n      System.arraycopy(buf, blockOffset, b, off, lengthToReadInBlock);\n      cache.update(cacheName, blockId, 0, buf, 0, blockSize);\n      store.putBuffer(buf);\n    }\n\n","sourceOld":"    private void readIntoCacheAndResult(long blockId, int blockOffset,\n        byte[] b, int off, int lengthToReadInBlock) throws IOException {\n      long position = getRealPosition(blockId, 0);\n      int length = (int) Math.min(_blockSize, _fileLength - position);\n      _source.seek(position);\n      \n      byte[] buf = BufferStore.takeBuffer(_blockSize);\n      _source.readBytes(buf, 0, length);\n      System.arraycopy(buf, blockOffset, b, off, lengthToReadInBlock);\n      _cache.update(_cacheName, blockId, 0, buf, 0, _blockSize);\n      BufferStore.putBuffer(buf);\n    }\n\n","bugFix":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"bba91e4be653c9cabbdd70dd59c7e7379c43f0e8":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bba91e4be653c9cabbdd70dd59c7e7379c43f0e8"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","bba91e4be653c9cabbdd70dd59c7e7379c43f0e8"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"bba91e4be653c9cabbdd70dd59c7e7379c43f0e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}