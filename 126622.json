{"path":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#getCanonicalUrl(URL).mjava","commits":[{"id":"373584a697678349e0fc6099f033230aa1c44e5a","date":1331641391,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#getCanonicalUrl(URL).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Gets a canonical form of the URL for use as main URL\n   * @param url The input url\n   * @return The URL object representing the canonical URL\n   */\n  public URL getCanonicalUrl(URL url) {\n    // NOTE: Do we want to make sure this URL is normalized? (Christian thinks we should)\n    String urlString = url.toString();\n    try {\n      String lps = landingPageSuffix(url);\n      return new URL(urlString.replaceFirst(\"/\"+lps+\"$\", \"/\"));\n    } catch (MalformedURLException e) {\n      e.printStackTrace();\n    }\n    return url;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#getCanonicalUrl(URL).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Gets a canonical form of the URL for use as main URL\n   * @param url The input url\n   * @return The URL object representing the canonical URL\n   */\n  public URL getCanonicalUrl(URL url) {\n    // NOTE: Do we want to make sure this URL is normalized? (Christian thinks we should)\n    String urlString = url.toString();\n    try {\n      String lps = landingPageSuffix(url);\n      return new URL(urlString.replaceFirst(\"/\"+lps+\"$\", \"/\"));\n    } catch (MalformedURLException e) {\n      e.printStackTrace();\n    }\n    return url;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90fa3e2e693e0547066d778d5c3699a6ff957459","date":1553468846,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#getCanonicalUrl(URL).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/URLClassifyProcessor#getCanonicalUrl(URL).mjava","sourceNew":"  /**\n   * Gets a canonical form of the URL for use as main URL\n   * @param url The input url\n   * @return The URL object representing the canonical URL\n   */\n  public URL getCanonicalUrl(URL url) throws MalformedURLException {\n    // NOTE: Do we want to make sure this URL is normalized? (Christian thinks we should)\n    String urlString = url.toString();\n    String lps = landingPageSuffix(url);\n    return new URL(urlString.replaceFirst(\"/\" + lps + \"$\", \"/\"));\n  }\n\n","sourceOld":"  /**\n   * Gets a canonical form of the URL for use as main URL\n   * @param url The input url\n   * @return The URL object representing the canonical URL\n   */\n  public URL getCanonicalUrl(URL url) {\n    // NOTE: Do we want to make sure this URL is normalized? (Christian thinks we should)\n    String urlString = url.toString();\n    try {\n      String lps = landingPageSuffix(url);\n      return new URL(urlString.replaceFirst(\"/\"+lps+\"$\", \"/\"));\n    } catch (MalformedURLException e) {\n      e.printStackTrace();\n    }\n    return url;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","373584a697678349e0fc6099f033230aa1c44e5a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"373584a697678349e0fc6099f033230aa1c44e5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90fa3e2e693e0547066d778d5c3699a6ff957459"],"90fa3e2e693e0547066d778d5c3699a6ff957459":["373584a697678349e0fc6099f033230aa1c44e5a"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","373584a697678349e0fc6099f033230aa1c44e5a"],"373584a697678349e0fc6099f033230aa1c44e5a":["38e3b736c7ca086d61b7dbb841c905ee115490da","90fa3e2e693e0547066d778d5c3699a6ff957459"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"90fa3e2e693e0547066d778d5c3699a6ff957459":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}