{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.SectorLinearCrossingEdgeIterator#edgeCrossesEnvelope(Plane,GeoPoint,Plane).mjava","commits":[{"id":"4417cae689ce0fc964a3546ded2b0ab6e374f1b0","date":1523635542,"type":1,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.SectorLinearCrossingEdgeIterator#edgeCrossesEnvelope(Plane,GeoPoint,Plane).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.SectorLinearCrossingEdgeIterator#edgeCrossesEnvelope(Plane,GeoPoint).mjava","sourceNew":"    private boolean edgeCrossesEnvelope(final Plane edgePlane, final GeoPoint intersectionPoint, final Plane envelopePlane) {\n      final GeoPoint[] adjoiningPoints = findAdjoiningPoints(edgePlane, intersectionPoint, envelopePlane);\n      if (adjoiningPoints == null) {\n        return true;\n      }\n      int withinCount = 0;\n      for (final GeoPoint adjoining : adjoiningPoints) {\n        if (plane.evaluateIsZero(adjoining) && bound1.isWithin(adjoining) && bound2.isWithin(adjoining)) {\n          withinCount++;\n        }\n      }\n      return (withinCount & 1) != 0;\n    }\n\n","sourceOld":"    private boolean edgeCrossesEnvelope(final Plane edgePlane, final GeoPoint intersectionPoint) {\n      final GeoPoint[] adjoiningPoints = findAdjoiningPoints(edgePlane, intersectionPoint);\n      int withinCount = 0;\n      for (final GeoPoint adjoining : adjoiningPoints) {\n        if (plane.evaluateIsZero(adjoining) && bound1.isWithin(adjoining) && bound2.isWithin(adjoining)) {\n          withinCount++;\n        }\n      }\n      return (withinCount & 1) != 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cd25c083a7199445f2db6f32d322eeac1afc99e","date":1527642183,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.SectorLinearCrossingEdgeIterator#edgeCrossesEnvelope(Plane,GeoPoint,Plane).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.SectorLinearCrossingEdgeIterator#edgeCrossesEnvelope(Plane,GeoPoint,Plane).mjava","sourceNew":"    private boolean edgeCrossesEnvelope(final Plane edgePlane, final GeoPoint intersectionPoint, final Plane envelopePlane) {\n      final GeoPoint[] adjoiningPoints = findAdjoiningPoints(edgePlane, intersectionPoint, envelopePlane);\n      if (adjoiningPoints == null) {\n        //System.out.println(\"    No adjoining points\");\n        return true;\n      }\n      int withinCount = 0;\n      for (final GeoPoint adjoining : adjoiningPoints) {\n        //System.out.println(\"    Adjoining point \"+adjoining);\n        if (plane.evaluateIsZero(adjoining) && bound1.isWithin(adjoining) && bound2.isWithin(adjoining)) {\n          //System.out.println(\"     within!!\");\n          withinCount++;\n        } else {\n          //System.out.println(\"     evaluateIsZero? \"+plane.evaluateIsZero(adjoining)+\" bound1.isWithin? \"+bound1.isWithin(adjoining)+\" bound2.isWithin? \"+bound2.isWithin(adjoining));\n        }\n      }\n      return (withinCount & 1) != 0;\n    }\n\n","sourceOld":"    private boolean edgeCrossesEnvelope(final Plane edgePlane, final GeoPoint intersectionPoint, final Plane envelopePlane) {\n      final GeoPoint[] adjoiningPoints = findAdjoiningPoints(edgePlane, intersectionPoint, envelopePlane);\n      if (adjoiningPoints == null) {\n        return true;\n      }\n      int withinCount = 0;\n      for (final GeoPoint adjoining : adjoiningPoints) {\n        if (plane.evaluateIsZero(adjoining) && bound1.isWithin(adjoining) && bound2.isWithin(adjoining)) {\n          withinCount++;\n        }\n      }\n      return (withinCount & 1) != 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cd25c083a7199445f2db6f32d322eeac1afc99e":["4417cae689ce0fc964a3546ded2b0ab6e374f1b0"],"4417cae689ce0fc964a3546ded2b0ab6e374f1b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cd25c083a7199445f2db6f32d322eeac1afc99e"]},"commit2Childs":{"3cd25c083a7199445f2db6f32d322eeac1afc99e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4417cae689ce0fc964a3546ded2b0ab6e374f1b0":["3cd25c083a7199445f2db6f32d322eeac1afc99e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4417cae689ce0fc964a3546ded2b0ab6e374f1b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}