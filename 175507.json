{"path":"contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(Searcher).mjava","commits":[{"id":"d3c3c2404d1200c39220fa15054fae854db4e1ee","date":1140827958,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(Searcher).mjava","pathOld":"/dev/null","sourceNew":"          public Similarity getSimilarity(Searcher searcher)\r\n          {            \r\n              Similarity result = super.getSimilarity(searcher);\r\n              result = new SimilarityDelegator(result) {\r\n                  \r\n                  public float tf(float freq)\r\n                  {\r\n                \t  if(ignoreTF)\r\n                \t  {\r\n                          return 1; //ignore tf\r\n                \t  }\r\n            \t\t  return super.tf(freq);\r\n                  }\r\n                  public float idf(int docFreq, int numDocs)\r\n                  {\r\n                      //IDF is already factored into individual term boosts\r\n                      return 1;\r\n                  }               \r\n              };\r\n              return result;\r\n          }        \r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(Searcher).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(Searcher).mjava","sourceNew":"          public Similarity getSimilarity(Searcher searcher)\n          {            \n              Similarity result = super.getSimilarity(searcher);\n              result = new SimilarityDelegator(result) {\n                  \n                  public float tf(float freq)\n                  {\n                \t  if(ignoreTF)\n                \t  {\n                          return 1; //ignore tf\n                \t  }\n            \t\t  return super.tf(freq);\n                  }\n                  public float idf(int docFreq, int numDocs)\n                  {\n                      //IDF is already factored into individual term boosts\n                      return 1;\n                  }               \n              };\n              return result;\n          }        \n\n","sourceOld":"          public Similarity getSimilarity(Searcher searcher)\r\n          {            \r\n              Similarity result = super.getSimilarity(searcher);\r\n              result = new SimilarityDelegator(result) {\r\n                  \r\n                  public float tf(float freq)\r\n                  {\r\n                \t  if(ignoreTF)\r\n                \t  {\r\n                          return 1; //ignore tf\r\n                \t  }\r\n            \t\t  return super.tf(freq);\r\n                  }\r\n                  public float idf(int docFreq, int numDocs)\r\n                  {\r\n                      //IDF is already factored into individual term boosts\r\n                      return 1;\r\n                  }               \r\n              };\r\n              return result;\r\n          }        \r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(Searcher).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(Searcher).mjava","sourceNew":"          @Override\n          public Similarity getSimilarity(Searcher searcher)\n          {            \n              Similarity result = super.getSimilarity(searcher);\n              result = new SimilarityDelegator(result) {\n                  \n                  @Override\n                  public float tf(float freq)\n                  {\n                \t  if(ignoreTF)\n                \t  {\n                          return 1; //ignore tf\n                \t  }\n            \t\t  return super.tf(freq);\n                  }\n                  @Override\n                  public float idf(int docFreq, int numDocs)\n                  {\n                      //IDF is already factored into individual term boosts\n                      return 1;\n                  }               \n              };\n              return result;\n          }        \n\n","sourceOld":"          public Similarity getSimilarity(Searcher searcher)\n          {            \n              Similarity result = super.getSimilarity(searcher);\n              result = new SimilarityDelegator(result) {\n                  \n                  public float tf(float freq)\n                  {\n                \t  if(ignoreTF)\n                \t  {\n                          return 1; //ignore tf\n                \t  }\n            \t\t  return super.tf(freq);\n                  }\n                  public float idf(int docFreq, int numDocs)\n                  {\n                      //IDF is already factored into individual term boosts\n                      return 1;\n                  }               \n              };\n              return result;\n          }        \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(Searcher).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(Searcher).mjava","sourceNew":"          @Override\n          public Similarity getSimilarity(Searcher searcher)\n          {            \n              Similarity result = super.getSimilarity(searcher);\n              result = new SimilarityDelegator(result) {\n                  \n                  @Override\n                  public float tf(float freq)\n                  {\n                \t  if(ignoreTF)\n                \t  {\n                          return 1; //ignore tf\n                \t  }\n            \t\t  return super.tf(freq);\n                  }\n                  @Override\n                  public float idf(int docFreq, int numDocs)\n                  {\n                      //IDF is already factored into individual term boosts\n                      return 1;\n                  }               \n              };\n              return result;\n          }        \n\n","sourceOld":"          @Override\n          public Similarity getSimilarity(Searcher searcher)\n          {            \n              Similarity result = super.getSimilarity(searcher);\n              result = new SimilarityDelegator(result) {\n                  \n                  @Override\n                  public float tf(float freq)\n                  {\n                \t  if(ignoreTF)\n                \t  {\n                          return 1; //ignore tf\n                \t  }\n            \t\t  return super.tf(freq);\n                  }\n                  @Override\n                  public float idf(int docFreq, int numDocs)\n                  {\n                      //IDF is already factored into individual term boosts\n                      return 1;\n                  }               \n              };\n              return result;\n          }        \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}