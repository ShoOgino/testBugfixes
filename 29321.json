{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","sourceNew":"  public void close() throws IOException {\n    IOUtils.close(indexWriter, indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<Closeable>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    IOUtils.close(indexWriter, indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<Closeable>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e76e769a8863037082ce292c260151d588e6724e","date":1337253730,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(indexWriter, indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource, contentSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<Closeable>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    IOUtils.close(indexWriter, indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<Closeable>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(indexWriter, indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource, contentSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<Closeable>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    IOUtils.close(indexWriter, indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<Closeable>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(indexWriter, indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource, contentSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(indexWriter, indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource, contentSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<Closeable>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (indexWriter != null) {\n      indexWriter.shutdown();\n    }\n    IOUtils.close(indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource, contentSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(indexWriter, indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource, contentSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (indexWriter != null) {\n      indexWriter.close();\n    }\n    IOUtils.close(indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource, contentSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (indexWriter != null) {\n      indexWriter.shutdown();\n    }\n    IOUtils.close(indexReader, directory, \n                  taxonomyWriter, taxonomyReader, taxonomyDir, \n                  docMaker, facetSource, contentSource);\n    \n    // close all perf objects that are closeable.\n    ArrayList<Closeable> perfObjectsToClose = new ArrayList<>();\n    for (Object obj : perfObjects.values()) {\n      if (obj instanceof Closeable) {\n        perfObjectsToClose.add((Closeable) obj);\n      }\n    }\n    IOUtils.close(perfObjectsToClose);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e76e769a8863037082ce292c260151d588e6724e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e76e769a8863037082ce292c260151d588e6724e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"ef0d8a69209261514c5739c770bba706c2308450":["b89678825b68eccaf09e6ab71675fc0b0af1e099","e76e769a8863037082ce292c260151d588e6724e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e76e769a8863037082ce292c260151d588e6724e","ef0d8a69209261514c5739c770bba706c2308450"],"e76e769a8863037082ce292c260151d588e6724e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","ef0d8a69209261514c5739c770bba706c2308450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}