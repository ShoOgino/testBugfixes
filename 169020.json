{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewAnalyzerTask#doLogic().mjava","commits":[{"id":"aea38ba53692c093d2ffe56950ac79ac68ad468b","date":1187439861,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewAnalyzerTask#doLogic().mjava","pathOld":"/dev/null","sourceNew":"  public int doLogic() throws IOException {\n    String className = null;\n    try {\n      if (current >= analyzerClassNames.size())\n      {\n        current = 0;\n      }\n      className = (String) analyzerClassNames.get(current++);\n      if (className == null || className.equals(\"\"))\n      {\n        className = \"org.apache.lucene.analysis.standard.StandardAnalyzer\"; \n      }\n      if (className.indexOf(\".\") == -1  || className.startsWith(\"standard.\"))//there is no package name, assume o.a.l.analysis\n      {\n        className = \"org.apache.lucene.analysis.\" + className;\n      }\n      getRunData().setAnalyzer((Analyzer) Class.forName(className).newInstance());\n      System.out.println(\"Changed Analyzer to: \" + className);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error creating Analyzer: \" + className, e);\n    }\n    return 1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewAnalyzerTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewAnalyzerTask#doLogic().mjava","sourceNew":"  public int doLogic() throws IOException {\n    String className = null;\n    try {\n      if (current >= analyzerClassNames.size())\n      {\n        current = 0;\n      }\n      className = (String) analyzerClassNames.get(current++);\n      if (className == null || className.equals(\"\"))\n      {\n        className = \"org.apache.lucene.analysis.standard.StandardAnalyzer\"; \n      }\n      if (className.indexOf(\".\") == -1  || className.startsWith(\"standard.\"))//there is no package name, assume o.a.l.analysis\n      {\n        className = \"org.apache.lucene.analysis.\" + className;\n      }\n      getRunData().setAnalyzer(createAnalyzer(className));\n      System.out.println(\"Changed Analyzer to: \" + className);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error creating Analyzer: \" + className, e);\n    }\n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws IOException {\n    String className = null;\n    try {\n      if (current >= analyzerClassNames.size())\n      {\n        current = 0;\n      }\n      className = (String) analyzerClassNames.get(current++);\n      if (className == null || className.equals(\"\"))\n      {\n        className = \"org.apache.lucene.analysis.standard.StandardAnalyzer\"; \n      }\n      if (className.indexOf(\".\") == -1  || className.startsWith(\"standard.\"))//there is no package name, assume o.a.l.analysis\n      {\n        className = \"org.apache.lucene.analysis.\" + className;\n      }\n      getRunData().setAnalyzer((Analyzer) Class.forName(className).newInstance());\n      System.out.println(\"Changed Analyzer to: \" + className);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error creating Analyzer: \" + className, e);\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewAnalyzerTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewAnalyzerTask#doLogic().mjava","sourceNew":"  public int doLogic() throws IOException {\n    String className = null;\n    try {\n      if (current >= analyzerClassNames.size())\n      {\n        current = 0;\n      }\n      className = analyzerClassNames.get(current++);\n      if (className == null || className.equals(\"\"))\n      {\n        className = \"org.apache.lucene.analysis.standard.StandardAnalyzer\"; \n      }\n      if (className.indexOf(\".\") == -1  || className.startsWith(\"standard.\"))//there is no package name, assume o.a.l.analysis\n      {\n        className = \"org.apache.lucene.analysis.\" + className;\n      }\n      getRunData().setAnalyzer(createAnalyzer(className));\n      System.out.println(\"Changed Analyzer to: \" + className);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error creating Analyzer: \" + className, e);\n    }\n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws IOException {\n    String className = null;\n    try {\n      if (current >= analyzerClassNames.size())\n      {\n        current = 0;\n      }\n      className = (String) analyzerClassNames.get(current++);\n      if (className == null || className.equals(\"\"))\n      {\n        className = \"org.apache.lucene.analysis.standard.StandardAnalyzer\"; \n      }\n      if (className.indexOf(\".\") == -1  || className.startsWith(\"standard.\"))//there is no package name, assume o.a.l.analysis\n      {\n        className = \"org.apache.lucene.analysis.\" + className;\n      }\n      getRunData().setAnalyzer(createAnalyzer(className));\n      System.out.println(\"Changed Analyzer to: \" + className);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error creating Analyzer: \" + className, e);\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewAnalyzerTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewAnalyzerTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    String className = null;\n    try {\n      if (current >= analyzerClassNames.size())\n      {\n        current = 0;\n      }\n      className = analyzerClassNames.get(current++);\n      if (className == null || className.equals(\"\"))\n      {\n        className = \"org.apache.lucene.analysis.standard.StandardAnalyzer\"; \n      }\n      if (className.indexOf(\".\") == -1  || className.startsWith(\"standard.\"))//there is no package name, assume o.a.l.analysis\n      {\n        className = \"org.apache.lucene.analysis.\" + className;\n      }\n      getRunData().setAnalyzer(createAnalyzer(className));\n      System.out.println(\"Changed Analyzer to: \" + className);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error creating Analyzer: \" + className, e);\n    }\n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws IOException {\n    String className = null;\n    try {\n      if (current >= analyzerClassNames.size())\n      {\n        current = 0;\n      }\n      className = analyzerClassNames.get(current++);\n      if (className == null || className.equals(\"\"))\n      {\n        className = \"org.apache.lucene.analysis.standard.StandardAnalyzer\"; \n      }\n      if (className.indexOf(\".\") == -1  || className.startsWith(\"standard.\"))//there is no package name, assume o.a.l.analysis\n      {\n        className = \"org.apache.lucene.analysis.\" + className;\n      }\n      getRunData().setAnalyzer(createAnalyzer(className));\n      System.out.println(\"Changed Analyzer to: \" + className);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error creating Analyzer: \" + className, e);\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewAnalyzerTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewAnalyzerTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    String className = null;\n    try {\n      if (current >= analyzerClassNames.size())\n      {\n        current = 0;\n      }\n      className = analyzerClassNames.get(current++);\n      if (className == null || className.equals(\"\"))\n      {\n        className = \"org.apache.lucene.analysis.standard.StandardAnalyzer\"; \n      }\n      if (className.indexOf(\".\") == -1  || className.startsWith(\"standard.\"))//there is no package name, assume o.a.l.analysis\n      {\n        className = \"org.apache.lucene.analysis.\" + className;\n      }\n      getRunData().setAnalyzer(createAnalyzer(className));\n      System.out.println(\"Changed Analyzer to: \" + className);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error creating Analyzer: \" + className, e);\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    String className = null;\n    try {\n      if (current >= analyzerClassNames.size())\n      {\n        current = 0;\n      }\n      className = analyzerClassNames.get(current++);\n      if (className == null || className.equals(\"\"))\n      {\n        className = \"org.apache.lucene.analysis.standard.StandardAnalyzer\"; \n      }\n      if (className.indexOf(\".\") == -1  || className.startsWith(\"standard.\"))//there is no package name, assume o.a.l.analysis\n      {\n        className = \"org.apache.lucene.analysis.\" + className;\n      }\n      getRunData().setAnalyzer(createAnalyzer(className));\n      System.out.println(\"Changed Analyzer to: \" + className);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error creating Analyzer: \" + className, e);\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"aea38ba53692c093d2ffe56950ac79ac68ad468b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["aea38ba53692c093d2ffe56950ac79ac68ad468b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"aea38ba53692c093d2ffe56950ac79ac68ad468b":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aea38ba53692c093d2ffe56950ac79ac68ad468b"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}