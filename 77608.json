{"path":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","commits":[{"id":"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd","date":1364185773,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestFieldTypeResource#testJsonGetFieldType().mjava","sourceNew":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    assertJQ(\"/schema/fieldtypes/float?indent=on&showDefaults=on\",  // assertJQ will add \"&wt=json\"\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='solr.TrieFloatField'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==false\",\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==true\",\n             \"/fieldType/fields==['weight']\",\n             \"/fieldType/dynamicFields==['*_f']\");\n  }\n\n","sourceOld":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    assertJQ(\"/schema/fieldtypes/float?indent=on&showDefaults=on\",  // assertJQ will add \"&wt=json\"\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='solr.TrieFloatField'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==false\",\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==true\",\n             \"/fieldType/fields==['weight']\",\n             \"/fieldType/dynamicFields==['*_f']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99c9d8533c954f661481ae44273622957dbf572f","date":1380991288,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","sourceNew":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    assertJQ(\"/schema/fieldtypes/float?indent=on&showDefaults=on\",  // assertJQ will add \"&wt=json\"\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='solr.TrieFloatField'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==false\",\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\",\n             \"/fieldType/fields==['weight']\",\n             \"/fieldType/dynamicFields==['*_f']\");\n  }\n\n","sourceOld":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    assertJQ(\"/schema/fieldtypes/float?indent=on&showDefaults=on\",  // assertJQ will add \"&wt=json\"\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='solr.TrieFloatField'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==false\",\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==true\",\n             \"/fieldType/fields==['weight']\",\n             \"/fieldType/dynamicFields==['*_f']\");\n  }\n\n","bugFix":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f494bc636a1302995e4930fdccd371eeda452f87","date":1457370876,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","sourceNew":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    assertJQ(\"/schema/fieldtypes/float?indent=on&showDefaults=on\",  // assertJQ will add \"&wt=json\"\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='solr.TrieFloatField'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==false\",\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\");\n  }\n\n","sourceOld":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    assertJQ(\"/schema/fieldtypes/float?indent=on&showDefaults=on\",  // assertJQ will add \"&wt=json\"\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='solr.TrieFloatField'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==false\",\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\",\n             \"/fieldType/fields==['weight']\",\n             \"/fieldType/dynamicFields==['*_f']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"916d12fb9e9ce37001f3f330a247d552279db234","date":1500400223,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","sourceNew":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertJQ(\"/schema/fieldtypes/float?indent=on&showDefaults=on\",  // assertJQ will add \"&wt=json\"\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='\"+expectedFloatClass+\"'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==\"+expectedDocValues,\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\");\n  }\n\n","sourceOld":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    assertJQ(\"/schema/fieldtypes/float?indent=on&showDefaults=on\",  // assertJQ will add \"&wt=json\"\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='solr.TrieFloatField'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==false\",\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac1e7fa558287a811ea07634d815ee7b1c541284","date":1500910922,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","sourceNew":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertJQ(\"/schema/fieldtypes/float?showDefaults=on\",\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='\"+expectedFloatClass+\"'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==\"+expectedDocValues,\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\");\n  }\n\n","sourceOld":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertJQ(\"/schema/fieldtypes/float?indent=on&showDefaults=on\",  // assertJQ will add \"&wt=json\"\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='\"+expectedFloatClass+\"'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==\"+expectedDocValues,\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","sourceNew":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertJQ(\"/schema/fieldtypes/float?showDefaults=on\",\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='\"+expectedFloatClass+\"'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==\"+expectedDocValues,\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\");\n  }\n\n","sourceOld":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    assertJQ(\"/schema/fieldtypes/float?indent=on&showDefaults=on\",  // assertJQ will add \"&wt=json\"\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='solr.TrieFloatField'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==false\",\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","sourceNew":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertJQ(\"/schema/fieldtypes/float?showDefaults=on\",\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='\"+expectedFloatClass+\"'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==\"+expectedDocValues,\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\");\n  }\n\n","sourceOld":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertJQ(\"/schema/fieldtypes/float?indent=on&showDefaults=on\",  // assertJQ will add \"&wt=json\"\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='\"+expectedFloatClass+\"'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==\"+expectedDocValues,\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e","date":1541777404,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testJsonGetFieldType().mjava","sourceNew":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertJQ(\"/schema/fieldtypes/float?showDefaults=on\",\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='\"+expectedFloatClass+\"'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/uninvertible==true\",\n             \"/fieldType/docValues==\"+expectedDocValues,\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\");\n  }\n\n","sourceOld":"  @Test\n  public void testJsonGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertJQ(\"/schema/fieldtypes/float?showDefaults=on\",\n             \"/fieldType/name=='float'\",\n             \"/fieldType/class=='\"+expectedFloatClass+\"'\",\n             \"/fieldType/precisionStep=='0'\",\n             \"/fieldType/indexed==true\",\n             \"/fieldType/stored==true\",\n             \"/fieldType/docValues==\"+expectedDocValues,\n             \"/fieldType/termVectors==false\",\n             \"/fieldType/termPositions==false\",\n             \"/fieldType/termOffsets==false\",\n             \"/fieldType/omitNorms==true\",\n             \"/fieldType/omitTermFreqAndPositions==true\",\n             \"/fieldType/omitPositions==false\",\n             \"/fieldType/storeOffsetsWithPositions==false\",\n             \"/fieldType/multiValued==false\",\n             \"/fieldType/tokenized==false\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99c9d8533c954f661481ae44273622957dbf572f":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"a52341299179de5479672f7cf518bf4b173f34b3":["916d12fb9e9ce37001f3f330a247d552279db234","ac1e7fa558287a811ea07634d815ee7b1c541284"],"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f494bc636a1302995e4930fdccd371eeda452f87":["99c9d8533c954f661481ae44273622957dbf572f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["f494bc636a1302995e4930fdccd371eeda452f87","ac1e7fa558287a811ea07634d815ee7b1c541284"],"0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e":["a52341299179de5479672f7cf518bf4b173f34b3"],"916d12fb9e9ce37001f3f330a247d552279db234":["f494bc636a1302995e4930fdccd371eeda452f87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["916d12fb9e9ce37001f3f330a247d552279db234"]},"commit2Childs":{"99c9d8533c954f661481ae44273622957dbf572f":["f494bc636a1302995e4930fdccd371eeda452f87"],"a52341299179de5479672f7cf518bf4b173f34b3":["0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e"],"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["99c9d8533c954f661481ae44273622957dbf572f"],"f494bc636a1302995e4930fdccd371eeda452f87":["936cdd5882761db3b844afd6f84ab81cbb011a75","916d12fb9e9ce37001f3f330a247d552279db234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"916d12fb9e9ce37001f3f330a247d552279db234":["a52341299179de5479672f7cf518bf4b173f34b3","ac1e7fa558287a811ea07634d815ee7b1c541284"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}