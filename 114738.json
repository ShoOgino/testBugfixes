{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrEntityProcessor#getHttpClient().mjava","commits":[{"id":"54f30d837eed968a2b64ca9e82f710a6e5511a02","date":1331061399,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrEntityProcessor#getHttpClient().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Factory method that returns a {@link HttpClient} instance used for interfacing with a source Solr service.\n   * One can override this method to return a differently configured {@link HttpClient} instance.\n   * For example configure https and http authentication.\n   *\n   * @return a {@link HttpClient} instance used for interfacing with a source Solr service\n   */\n  protected HttpClient getHttpClient() {\n    return new HttpClient(new MultiThreadedHttpConnectionManager());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrEntityProcessor#getHttpClient().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Factory method that returns a {@link HttpClient} instance used for interfacing with a source Solr service.\n   * One can override this method to return a differently configured {@link HttpClient} instance.\n   * For example configure https and http authentication.\n   *\n   * @return a {@link HttpClient} instance used for interfacing with a source Solr service\n   */\n  protected HttpClient getHttpClient() {\n    return new HttpClient(new MultiThreadedHttpConnectionManager());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrEntityProcessor#getHttpClient().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrEntityProcessor#getHttpClient().mjava","sourceNew":"  /**\n   * Factory method that returns a {@link HttpClient} instance used for interfacing with a source Solr service.\n   * One can override this method to return a differently configured {@link HttpClient} instance.\n   * For example configure https and http authentication.\n   *\n   * @return a {@link HttpClient} instance used for interfacing with a source Solr service\n   */\n  protected HttpClient getHttpClient() {\n    return new DefaultHttpClient(new ThreadSafeClientConnManager());\n  }\n\n","sourceOld":"  /**\n   * Factory method that returns a {@link HttpClient} instance used for interfacing with a source Solr service.\n   * One can override this method to return a differently configured {@link HttpClient} instance.\n   * For example configure https and http authentication.\n   *\n   * @return a {@link HttpClient} instance used for interfacing with a source Solr service\n   */\n  protected HttpClient getHttpClient() {\n    return new HttpClient(new MultiThreadedHttpConnectionManager());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb99886ff640d94edb43e0d36112a2b7023379ba","date":1338292884,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrEntityProcessor#getHttpClient().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrEntityProcessor#getHttpClient().mjava","sourceNew":"  /**\n   * Factory method that returns a {@link HttpClient} instance used for interfacing with a source Solr service.\n   * One can override this method to return a differently configured {@link HttpClient} instance.\n   * For example configure https and http authentication.\n   *\n   * @return a {@link HttpClient} instance used for interfacing with a source Solr service\n   */\n  protected HttpClient getHttpClient() {\n    return HttpClientUtil.createClient(null);\n  }\n\n","sourceOld":"  /**\n   * Factory method that returns a {@link HttpClient} instance used for interfacing with a source Solr service.\n   * One can override this method to return a differently configured {@link HttpClient} instance.\n   * For example configure https and http authentication.\n   *\n   * @return a {@link HttpClient} instance used for interfacing with a source Solr service\n   */\n  protected HttpClient getHttpClient() {\n    return new DefaultHttpClient(new ThreadSafeClientConnManager());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SolrEntityProcessor#getHttpClient().mjava","sourceNew":null,"sourceOld":"  /**\n   * Factory method that returns a {@link HttpClient} instance used for interfacing with a source Solr service.\n   * One can override this method to return a differently configured {@link HttpClient} instance.\n   * For example configure https and http authentication.\n   *\n   * @return a {@link HttpClient} instance used for interfacing with a source Solr service\n   */\n  protected HttpClient getHttpClient() {\n    return HttpClientUtil.createClient(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","54f30d837eed968a2b64ca9e82f710a6e5511a02"],"54f30d837eed968a2b64ca9e82f710a6e5511a02":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["54f30d837eed968a2b64ca9e82f710a6e5511a02"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"54f30d837eed968a2b64ca9e82f710a6e5511a02":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","54f30d837eed968a2b64ca9e82f710a6e5511a02"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}