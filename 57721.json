{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#getFieldsToHighlight(StoredDocument).mjava","commits":[{"id":"a7e4907084808af8fdb14b9809e6dceaccf6867b","date":1343473006,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#getFieldsToHighlight(StoredDocument).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#getFieldsToHighlight(Document).mjava","sourceNew":"  /**\n   * Define the fields to highlight.  Base implementation returns all fields\n   * @param document The Document\n   * @return A Collection of Field names (Strings)\n   */\n  protected Collection<String> getFieldsToHighlight(StoredDocument document) {\n    List<StorableField> fields = document.getFields();\n    Set<String> result = new HashSet<String>(fields.size());\n    for (final StorableField f : fields) {\n      result.add(f.name());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Define the fields to highlight.  Base implementation returns all fields\n   * @param document The Document\n   * @return A Collection of Field names (Strings)\n   */\n  protected Collection<String> getFieldsToHighlight(Document document) {\n    List<IndexableField> fields = document.getFields();\n    Set<String> result = new HashSet<String>(fields.size());\n    for (final IndexableField f : fields) {\n      result.add(f.name());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#getFieldsToHighlight(StoredDocument).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#getFieldsToHighlight(Document).mjava","sourceNew":"  /**\n   * Define the fields to highlight.  Base implementation returns all fields\n   * @param document The Document\n   * @return A Collection of Field names (Strings)\n   */\n  protected Collection<String> getFieldsToHighlight(StoredDocument document) {\n    List<StorableField> fields = document.getFields();\n    Set<String> result = new HashSet<String>(fields.size());\n    for (final StorableField f : fields) {\n      result.add(f.name());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Define the fields to highlight.  Base implementation returns all fields\n   * @param document The Document\n   * @return A Collection of Field names (Strings)\n   */\n  protected Collection<String> getFieldsToHighlight(Document document) {\n    List<IndexableField> fields = document.getFields();\n    Set<String> result = new HashSet<String>(fields.size());\n    for (final IndexableField f : fields) {\n      result.add(f.name());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#getFieldsToHighlight(StoredDocument).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#getFieldsToHighlight(StoredDocument).mjava","sourceNew":"  /**\n   * Define the fields to highlight.  Base implementation returns all fields\n   * @param document The Document\n   * @return A Collection of Field names (Strings)\n   */\n  protected Collection<String> getFieldsToHighlight(StoredDocument document) {\n    List<StorableField> fields = document.getFields();\n    Set<String> result = new HashSet<>(fields.size());\n    for (final StorableField f : fields) {\n      result.add(f.name());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Define the fields to highlight.  Base implementation returns all fields\n   * @param document The Document\n   * @return A Collection of Field names (Strings)\n   */\n  protected Collection<String> getFieldsToHighlight(StoredDocument document) {\n    List<StorableField> fields = document.getFields();\n    Set<String> result = new HashSet<String>(fields.size());\n    for (final StorableField f : fields) {\n      result.add(f.name());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#getFieldsToHighlight(Document).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#getFieldsToHighlight(StoredDocument).mjava","sourceNew":"  /**\n   * Define the fields to highlight.  Base implementation returns all fields\n   * @param document The Document\n   * @return A Collection of Field names (Strings)\n   */\n  protected Collection<String> getFieldsToHighlight(Document document) {\n    List<IndexableField> fields = document.getFields();\n    Set<String> result = new HashSet<>(fields.size());\n    for (final IndexableField f : fields) {\n      result.add(f.name());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Define the fields to highlight.  Base implementation returns all fields\n   * @param document The Document\n   * @return A Collection of Field names (Strings)\n   */\n  protected Collection<String> getFieldsToHighlight(StoredDocument document) {\n    List<StorableField> fields = document.getFields();\n    Set<String> result = new HashSet<>(fields.size());\n    for (final StorableField f : fields) {\n      result.add(f.name());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"1d028314cced5858683a1bb4741423d0f934257b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d028314cced5858683a1bb4741423d0f934257b","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["1d028314cced5858683a1bb4741423d0f934257b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}