{"path":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","commits":[{"id":"322360ac5185a8446d3e0b530b2068bef67cd3d5","date":1343669494,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field & term.  This may return null if the term does\n   *  not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, DocsAndPositionsEnum.FLAG_OFFSETS | DocsAndPositionsEnum.FLAG_PAYLOADS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["02331260bb246364779cb6f04919ca47900d01bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field & term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, DocsAndPositionsEnum.FLAG_OFFSETS | DocsAndPositionsEnum.FLAG_PAYLOADS);\n  }\n\n","sourceOld":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field & term.  This may return null if the term does\n   *  not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, DocsAndPositionsEnum.FLAG_OFFSETS | DocsAndPositionsEnum.FLAG_PAYLOADS);\n  }\n\n","bugFix":["322360ac5185a8446d3e0b530b2068bef67cd3d5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field & term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, DocsAndPositionsEnum.FLAG_OFFSETS | DocsAndPositionsEnum.FLAG_PAYLOADS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field & term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, DocsAndPositionsEnum.FLAG_OFFSETS | DocsAndPositionsEnum.FLAG_PAYLOADS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field and term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, DocsAndPositionsEnum.FLAG_OFFSETS | DocsAndPositionsEnum.FLAG_PAYLOADS);\n  }\n\n","sourceOld":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field & term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, DocsAndPositionsEnum.FLAG_OFFSETS | DocsAndPositionsEnum.FLAG_PAYLOADS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link PostingsEnum} for the specified\n   *  field and term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static PostingsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, PostingsEnum.FLAG_OFFSETS | PostingsEnum.FLAG_PAYLOADS);\n  }\n\n","sourceOld":"  /** Returns {@link DocsAndPositionsEnum} for the specified\n   *  field and term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static DocsAndPositionsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, DocsAndPositionsEnum.FLAG_OFFSETS | DocsAndPositionsEnum.FLAG_PAYLOADS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73063b92d958076ef4ae8beb5f493e8ccdcecb4","date":1424177215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link PostingsEnum} for the specified\n   *  field and term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static PostingsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, PostingsEnum.OFFSETS | PostingsEnum.PAYLOADS);\n  }\n\n","sourceOld":"  /** Returns {@link PostingsEnum} for the specified\n   *  field and term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static PostingsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, PostingsEnum.FLAG_OFFSETS | PostingsEnum.FLAG_PAYLOADS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9023c2bf8056230665bace786651c0716d78d31","date":1424736578,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link PostingsEnum} for the specified\n   *  field and term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static PostingsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, PostingsEnum.ALL);\n  }\n\n","sourceOld":"  /** Returns {@link PostingsEnum} for the specified\n   *  field and term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static PostingsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, PostingsEnum.OFFSETS | PostingsEnum.PAYLOADS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermPositionsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link PostingsEnum} for the specified\n   *  field and term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, String, BytesRef, int) */\n  public static PostingsEnum getTermPositionsEnum(IndexReader r, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, field, term, PostingsEnum.ALL);\n  }\n\n","sourceOld":"  /** Returns {@link PostingsEnum} for the specified\n   *  field and term.  This will return null if the field or\n   *  term does not exist or positions were not indexed. \n   *  @see #getTermPositionsEnum(IndexReader, Bits, String, BytesRef, int) */\n  public static PostingsEnum getTermPositionsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermPositionsEnum(r, liveDocs, field, term, PostingsEnum.ALL);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["02331260bb246364779cb6f04919ca47900d01bb"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["a9023c2bf8056230665bace786651c0716d78d31"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02331260bb246364779cb6f04919ca47900d01bb"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02331260bb246364779cb6f04919ca47900d01bb"],"a9023c2bf8056230665bace786651c0716d78d31":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"51f5280f31484820499077f41fcdfe92d527d9dc":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"322360ac5185a8446d3e0b530b2068bef67cd3d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"02331260bb246364779cb6f04919ca47900d01bb":["322360ac5185a8446d3e0b530b2068bef67cd3d5"]},"commit2Childs":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["51f5280f31484820499077f41fcdfe92d527d9dc"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["a9023c2bf8056230665bace786651c0716d78d31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"a9023c2bf8056230665bace786651c0716d78d31":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"51f5280f31484820499077f41fcdfe92d527d9dc":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"322360ac5185a8446d3e0b530b2068bef67cd3d5":["02331260bb246364779cb6f04919ca47900d01bb"],"02331260bb246364779cb6f04919ca47900d01bb":["b1eb427f2c6beed80d1724555fc1db003ccf3030","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}