{"path":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyMetadataCAR().mjava","commits":[{"id":"b10ab715806383f3d7f9eece13c26772a9116022","date":1517176579,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyMetadataCAR().mjava","pathOld":"/dev/null","sourceNew":"  public void testModifyMetadataCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.ModifyAlias modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"foo\",\"baz\");\n    modifyAlias.addMetadata(\"bar\",\"bam\");\n    modifyAlias.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"foo\",\"\");\n    modifyAlias.process(cluster.getSolrClient());\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"bar\",null);\n    modifyAlias.process(cluster.getSolrClient());\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n\n    // whitespace value\n    modifyAlias.addMetadata(\"foo\",\" \");\n    modifyAlias.process(cluster.getSolrClient());\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e16ac84f9e5d560008fe1554462ff8b853b3d3c","date":1520142134,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyMetadataCAR().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyMetadataCAR().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testModifyMetadataCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.ModifyAlias modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"foo\",\"baz\");\n    modifyAlias.addMetadata(\"bar\",\"bam\");\n    modifyAlias.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"foo\",\"\");\n    modifyAlias.process(cluster.getSolrClient());\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"bar\",null);\n    modifyAlias.process(cluster.getSolrClient());\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n\n    // whitespace value\n    modifyAlias.addMetadata(\"foo\",\" \");\n    modifyAlias.process(cluster.getSolrClient());\n\n\n  }\n\n","sourceOld":"  public void testModifyMetadataCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.ModifyAlias modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"foo\",\"baz\");\n    modifyAlias.addMetadata(\"bar\",\"bam\");\n    modifyAlias.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"foo\",\"\");\n    modifyAlias.process(cluster.getSolrClient());\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"bar\",null);\n    modifyAlias.process(cluster.getSolrClient());\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n\n    // whitespace value\n    modifyAlias.addMetadata(\"foo\",\" \");\n    modifyAlias.process(cluster.getSolrClient());\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767","date":1520865397,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyPropertiesCAR().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#testModifyMetadataCAR().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testModifyPropertiesCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.SetAliasProperty setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"baz\");\n    setAliasProperty.addProperty(\"bar\",\"bam\");\n    setAliasProperty.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"foo\",\"\");\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n    setAliasProperty.addProperty(\"bar\",null);\n    setAliasProperty.process(cluster.getSolrClient());\n    setAliasProperty = CollectionAdminRequest.setAliasProperty(aliasName);\n\n    // whitespace value\n    setAliasProperty.addProperty(\"foo\",\" \");\n    setAliasProperty.process(cluster.getSolrClient());\n\n\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testModifyMetadataCAR() throws Exception {\n    // note we don't use TZ in this test, thus it's UTC\n    final String aliasName = getTestName();\n    ZkStateReader zkStateReader = createColectionsAndAlias(aliasName);\n    CollectionAdminRequest.ModifyAlias modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"foo\",\"baz\");\n    modifyAlias.addMetadata(\"bar\",\"bam\");\n    modifyAlias.process(cluster.getSolrClient());\n    checkFooAndBarMeta(aliasName, zkStateReader);\n\n    // now verify we can delete\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"foo\",\"\");\n    modifyAlias.process(cluster.getSolrClient());\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n    modifyAlias.addMetadata(\"bar\",null);\n    modifyAlias.process(cluster.getSolrClient());\n    modifyAlias = CollectionAdminRequest.modifyAlias(aliasName);\n\n    // whitespace value\n    modifyAlias.addMetadata(\"foo\",\" \");\n    modifyAlias.process(cluster.getSolrClient());\n\n\n  }\n\n","bugFix":null,"bugIntro":["a980795a56f2fcbc94caeb3233071312d5684d59","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7e16ac84f9e5d560008fe1554462ff8b853b3d3c":["b10ab715806383f3d7f9eece13c26772a9116022"],"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["7e16ac84f9e5d560008fe1554462ff8b853b3d3c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b10ab715806383f3d7f9eece13c26772a9116022":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"]},"commit2Childs":{"7e16ac84f9e5d560008fe1554462ff8b853b3d3c":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"],"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b10ab715806383f3d7f9eece13c26772a9116022"],"b10ab715806383f3d7f9eece13c26772a9116022":["7e16ac84f9e5d560008fe1554462ff8b853b3d3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}