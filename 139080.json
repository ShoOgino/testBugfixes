{"path":"src/java/org/apache/lucene/analysis/Token#Token(String,int,int,String).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#Token(String,int,int,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Constructs a Token with the given text, start and end offsets, & type. */\n  public Token(String text, int start, int end, String typ) {\n    termText = text;\n    startOffset = start;\n    endOffset = end;\n    type = typ;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6864413dbc0c12104c978c05456f3da1d45adb03","date":1186770873,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#Token(String,int,int,String).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#Token(String,int,int,String).mjava","sourceNew":"  /** Constructs a Token with the given text, start and end\n   *  offsets, & type.  <b>NOTE:</b> for better indexing\n   *  speed you should instead use the char[] termBuffer\n   *  methods to set the term text.\n   *  @param text term text\n   *  @param start start offset\n   *  @param end end offset\n   *  @param typ token type */\n  public Token(String text, int start, int end, String typ) {\n    termText = text;\n    startOffset = start;\n    endOffset = end;\n    type = typ;\n  }\n\n","sourceOld":"  /** Constructs a Token with the given text, start and end offsets, & type. */\n  public Token(String text, int start, int end, String typ) {\n    termText = text;\n    startOffset = start;\n    endOffset = end;\n    type = typ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#Token(String,int,int,String).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#Token(String,int,int,String).mjava","sourceNew":"  /** Constructs a Token with the given text, start and end\n   *  offsets, & type.  <b>NOTE:</b> for better indexing\n   *  speed you should instead use the char[] termBuffer\n   *  methods to set the term text.\n   *  @param text term text\n   *  @param start start offset\n   *  @param end end offset\n   *  @param typ token type\n   *  @deprecated\n   */\n  public Token(String text, int start, int end, String typ) {\n    termText = text;\n    startOffset = start;\n    endOffset = end;\n    type = typ;\n  }\n\n","sourceOld":"  /** Constructs a Token with the given text, start and end\n   *  offsets, & type.  <b>NOTE:</b> for better indexing\n   *  speed you should instead use the char[] termBuffer\n   *  methods to set the term text.\n   *  @param text term text\n   *  @param start start offset\n   *  @param end end offset\n   *  @param typ token type */\n  public Token(String text, int start, int end, String typ) {\n    termText = text;\n    startOffset = start;\n    endOffset = end;\n    type = typ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4fc6a9b6fd6d44ad4975ec275ae8fe1a47078415","date":1248493299,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#Token(String,int,int,String).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#Token(String,int,int,String).mjava","sourceNew":"  /** Constructs a Token with the given text, start and end\n   *  offsets, & type.  <b>NOTE:</b> for better indexing\n   *  speed you should instead use the char[] termBuffer\n   *  methods to set the term text.\n   *  @param text term text\n   *  @param start start offset\n   *  @param end end offset\n   *  @param typ token type\n   *  @deprecated Use {@link #Token(char[], int, int, int, int)} and {@link #setType(String)} instead.\n   */\n  public Token(String text, int start, int end, String typ) {\n    termText = text;\n    startOffset = start;\n    endOffset = end;\n    type = typ;\n  }\n\n","sourceOld":"  /** Constructs a Token with the given text, start and end\n   *  offsets, & type.  <b>NOTE:</b> for better indexing\n   *  speed you should instead use the char[] termBuffer\n   *  methods to set the term text.\n   *  @param text term text\n   *  @param start start offset\n   *  @param end end offset\n   *  @param typ token type\n   *  @deprecated\n   */\n  public Token(String text, int start, int end, String typ) {\n    termText = text;\n    startOffset = start;\n    endOffset = end;\n    type = typ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64af8690a948c97feaa9e2844a0c7051034f153d","date":1255862276,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#Token(String,int,int,String).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#Token(String,int,int,String).mjava","sourceNew":"  /** Constructs a Token with the given text, start and end\n   *  offsets, & type.  <b>NOTE:</b> for better indexing\n   *  speed you should instead use the char[] termBuffer\n   *  methods to set the term text.\n   *  @param text term text\n   *  @param start start offset\n   *  @param end end offset\n   *  @param typ token type\n   */\n  public Token(String text, int start, int end, String typ) {\n    setTermBuffer(text);\n    startOffset = start;\n    endOffset = end;\n    type = typ;\n  }\n\n","sourceOld":"  /** Constructs a Token with the given text, start and end\n   *  offsets, & type.  <b>NOTE:</b> for better indexing\n   *  speed you should instead use the char[] termBuffer\n   *  methods to set the term text.\n   *  @param text term text\n   *  @param start start offset\n   *  @param end end offset\n   *  @param typ token type\n   *  @deprecated Use {@link #Token(char[], int, int, int, int)} and {@link #setType(String)} instead.\n   */\n  public Token(String text, int start, int end, String typ) {\n    termText = text;\n    startOffset = start;\n    endOffset = end;\n    type = typ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/Token#Token(String,int,int,String).mjava","sourceNew":null,"sourceOld":"  /** Constructs a Token with the given text, start and end\n   *  offsets, & type.  <b>NOTE:</b> for better indexing\n   *  speed you should instead use the char[] termBuffer\n   *  methods to set the term text.\n   *  @param text term text\n   *  @param start start offset\n   *  @param end end offset\n   *  @param typ token type\n   */\n  public Token(String text, int start, int end, String typ) {\n    setTermBuffer(text);\n    startOffset = start;\n    endOffset = end;\n    type = typ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["6864413dbc0c12104c978c05456f3da1d45adb03"],"6864413dbc0c12104c978c05456f3da1d45adb03":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64af8690a948c97feaa9e2844a0c7051034f153d":["4fc6a9b6fd6d44ad4975ec275ae8fe1a47078415"],"4fc6a9b6fd6d44ad4975ec275ae8fe1a47078415":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["64af8690a948c97feaa9e2844a0c7051034f153d"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["4fc6a9b6fd6d44ad4975ec275ae8fe1a47078415"],"6864413dbc0c12104c978c05456f3da1d45adb03":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["6864413dbc0c12104c978c05456f3da1d45adb03"],"64af8690a948c97feaa9e2844a0c7051034f153d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4fc6a9b6fd6d44ad4975ec275ae8fe1a47078415":["64af8690a948c97feaa9e2844a0c7051034f153d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}