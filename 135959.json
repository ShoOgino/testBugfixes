{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarIntsField(IndexOutput,Iterable[Number]).mjava","commits":[{"id":"db5a3aeba34624ea274f34df5691d40ca25f2b67","date":1358965297,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarIntsField(IndexOutput,Iterable[Number]).mjava","pathOld":"/dev/null","sourceNew":"  private void addVarIntsField(IndexOutput output, Iterable<Number> values) throws IOException {\n    long minValue = Long.MAX_VALUE;\n    long maxValue = Long.MIN_VALUE;\n    for (Number n : values) {\n      long v = n.longValue();\n      minValue = Math.min(minValue, v);\n      maxValue = Math.max(maxValue, v);\n    }\n    \n    CodecUtil.writeHeader(output, \n                          Lucene40DocValuesFormat.VAR_INTS_CODEC_NAME, \n                          Lucene40DocValuesFormat.VAR_INTS_VERSION_CURRENT);\n    \n    final long delta = maxValue - minValue;\n    \n    if (delta < 0) {\n      // writes longs\n      output.writeByte(Lucene40DocValuesFormat.VAR_INTS_FIXED_64);\n      for (Number n : values) {\n        output.writeLong(n.longValue());\n      }\n    } else {\n      // writes packed ints\n      output.writeByte(Lucene40DocValuesFormat.VAR_INTS_PACKED);\n      output.writeLong(minValue);\n      output.writeLong(0 - minValue); // default value (representation of 0)\n      PackedInts.Writer writer = PackedInts.getWriter(output, \n                                                      state.segmentInfo.getDocCount(),\n                                                      PackedInts.bitsRequired(delta), \n                                                      PackedInts.DEFAULT);\n      for (Number n : values) {\n        writer.add(n.longValue() - minValue);\n      }\n      writer.finish();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e67c2e7a5990eb850e9cebdfed78f88fd888b02a","date":1358968317,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarIntsField(FieldInfo,IndexOutput,Iterable[Number]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarIntsField(IndexOutput,Iterable[Number]).mjava","sourceNew":"  private void addVarIntsField(FieldInfo field, IndexOutput output, Iterable<Number> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.VAR_INTS.name());\n    long minValue = Long.MAX_VALUE;\n    long maxValue = Long.MIN_VALUE;\n    for (Number n : values) {\n      long v = n.longValue();\n      minValue = Math.min(minValue, v);\n      maxValue = Math.max(maxValue, v);\n    }\n    \n    CodecUtil.writeHeader(output, \n                          Lucene40DocValuesFormat.VAR_INTS_CODEC_NAME, \n                          Lucene40DocValuesFormat.VAR_INTS_VERSION_CURRENT);\n    \n    final long delta = maxValue - minValue;\n    \n    if (delta < 0) {\n      // writes longs\n      output.writeByte(Lucene40DocValuesFormat.VAR_INTS_FIXED_64);\n      for (Number n : values) {\n        output.writeLong(n.longValue());\n      }\n    } else {\n      // writes packed ints\n      output.writeByte(Lucene40DocValuesFormat.VAR_INTS_PACKED);\n      output.writeLong(minValue);\n      output.writeLong(0 - minValue); // default value (representation of 0)\n      PackedInts.Writer writer = PackedInts.getWriter(output, \n                                                      state.segmentInfo.getDocCount(),\n                                                      PackedInts.bitsRequired(delta), \n                                                      PackedInts.DEFAULT);\n      for (Number n : values) {\n        writer.add(n.longValue() - minValue);\n      }\n      writer.finish();\n    }\n  }\n\n","sourceOld":"  private void addVarIntsField(IndexOutput output, Iterable<Number> values) throws IOException {\n    long minValue = Long.MAX_VALUE;\n    long maxValue = Long.MIN_VALUE;\n    for (Number n : values) {\n      long v = n.longValue();\n      minValue = Math.min(minValue, v);\n      maxValue = Math.max(maxValue, v);\n    }\n    \n    CodecUtil.writeHeader(output, \n                          Lucene40DocValuesFormat.VAR_INTS_CODEC_NAME, \n                          Lucene40DocValuesFormat.VAR_INTS_VERSION_CURRENT);\n    \n    final long delta = maxValue - minValue;\n    \n    if (delta < 0) {\n      // writes longs\n      output.writeByte(Lucene40DocValuesFormat.VAR_INTS_FIXED_64);\n      for (Number n : values) {\n        output.writeLong(n.longValue());\n      }\n    } else {\n      // writes packed ints\n      output.writeByte(Lucene40DocValuesFormat.VAR_INTS_PACKED);\n      output.writeLong(minValue);\n      output.writeLong(0 - minValue); // default value (representation of 0)\n      PackedInts.Writer writer = PackedInts.getWriter(output, \n                                                      state.segmentInfo.getDocCount(),\n                                                      PackedInts.bitsRequired(delta), \n                                                      PackedInts.DEFAULT);\n      for (Number n : values) {\n        writer.add(n.longValue() - minValue);\n      }\n      writer.finish();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"db5a3aeba34624ea274f34df5691d40ca25f2b67":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e67c2e7a5990eb850e9cebdfed78f88fd888b02a":["db5a3aeba34624ea274f34df5691d40ca25f2b67"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"db5a3aeba34624ea274f34df5691d40ca25f2b67":["e67c2e7a5990eb850e9cebdfed78f88fd888b02a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db5a3aeba34624ea274f34df5691d40ca25f2b67","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e67c2e7a5990eb850e9cebdfed78f88fd888b02a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e67c2e7a5990eb850e9cebdfed78f88fd888b02a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}