{"path":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","commits":[{"id":"34960be55e437a6c96fe66046bf22d33346059f6","date":1363980156,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the score of the current document matching the query.\n   * Initially invalid, until {@link #nextDoc()} is called the first time.\n   */\n  @Override\n  public float score() throws IOException { \n    return (float) score; \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"681329f0d8aa847be84b952db62031b9c15f96c5","date":1364143277,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","sourceNew":"  /**\n   * Returns the score of the current document matching the query. Initially\n   * invalid, until {@link #nextDoc()} is called the first time.\n   */\n  @Override\n  public float score() throws IOException {\n    return (float) score;\n  }\n\n","sourceOld":"  /** Returns the score of the current document matching the query.\n   * Initially invalid, until {@link #nextDoc()} is called the first time.\n   */\n  @Override\n  public float score() throws IOException { \n    return (float) score; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240","date":1400613895,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","sourceNew":"  /**\n   * Returns the score of the current document matching the query. Initially\n   * invalid, until {@link #nextDoc()} is called the first time.\n   */\n  @Override\n  public float score() throws IOException {\n    return coord[nrMatchers] * (float) score;\n  }\n\n","sourceOld":"  /**\n   * Returns the score of the current document matching the query. Initially\n   * invalid, until {@link #nextDoc()} is called the first time.\n   */\n  @Override\n  public float score() throws IOException {\n    return (float) score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38fa8e2c4105a7dd15d7e9260afa3b41a560d51d","date":1400696679,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","sourceNew":"  /**\n   * Returns the score of the current document matching the query. Initially\n   * invalid, until {@link #nextDoc()} is called the first time.\n   */\n  @Override\n  public float score() throws IOException {\n    return coord[nrMatchers] * (float) score;\n  }\n\n","sourceOld":"  /**\n   * Returns the score of the current document matching the query. Initially\n   * invalid, until {@link #nextDoc()} is called the first time.\n   */\n  @Override\n  public float score() throws IOException {\n    return (float) score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","sourceNew":"  /**\n   * Returns the score of the current document matching the query. Initially\n   * invalid, until {@link #nextDoc()} is called the first time.\n   */\n  @Override\n  public float score() throws IOException {\n    return coord[nrMatchers] * (float) score;\n  }\n\n","sourceOld":"  /**\n   * Returns the score of the current document matching the query. Initially\n   * invalid, until {@link #nextDoc()} is called the first time.\n   */\n  @Override\n  public float score() throws IOException {\n    return (float) score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"251e6911800e3a02e1da3bfd4dc49a914aef9778","date":1423063783,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    updateFreq();\n    double score = 0;\n    for (ScorerWrapper s = lead; s != null; s = s.next) {\n      score += s.scorer.score();\n    }\n    return coord[freq] * (float) score;\n  }\n\n","sourceOld":"  /**\n   * Returns the score of the current document matching the query. Initially\n   * invalid, until {@link #nextDoc()} is called the first time.\n   */\n  @Override\n  public float score() throws IOException {\n    return coord[nrMatchers] * (float) score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7","date":1429852340,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    updateFreq();\n    double score = 0;\n    for (DisiWrapper<Scorer> s = lead; s != null; s = s.next) {\n      score += s.iterator.score();\n    }\n    return coord[freq] * (float) score;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    updateFreq();\n    double score = 0;\n    for (ScorerWrapper s = lead; s != null; s = s.next) {\n      score += s.scorer.score();\n    }\n    return coord[freq] * (float) score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    updateFreq();\n    double score = 0;\n    for (DisiWrapper s = lead; s != null; s = s.next) {\n      score += s.scorer.score();\n    }\n    return coord[freq] * (float) score;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    updateFreq();\n    double score = 0;\n    for (DisiWrapper<Scorer> s = lead; s != null; s = s.next) {\n      score += s.iterator.score();\n    }\n    return coord[freq] * (float) score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    updateFreq();\n    double score = 0;\n    for (DisiWrapper s = lead; s != null; s = s.next) {\n      score += s.scorer.score();\n    }\n    return (float) score;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    updateFreq();\n    double score = 0;\n    for (DisiWrapper s = lead; s != null; s = s.next) {\n      score += s.scorer.score();\n    }\n    return coord[freq] * (float) score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    updateFreq();\n    double score = 0;\n    for (DisiWrapper s = lead; s != null; s = s.next) {\n      score += s.scorer.score();\n    }\n    return (float) score;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    updateFreq();\n    double score = 0;\n    for (DisiWrapper s = lead; s != null; s = s.next) {\n      score += s.scorer.score();\n    }\n    return coord[freq] * (float) score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["251e6911800e3a02e1da3bfd4dc49a914aef9778"],"251e6911800e3a02e1da3bfd4dc49a914aef9778":["38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240":["681329f0d8aa847be84b952db62031b9c15f96c5"],"34960be55e437a6c96fe66046bf22d33346059f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8a0e442f7b61f811680273b25da95994a724466":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"681329f0d8aa847be84b952db62031b9c15f96c5":["34960be55e437a6c96fe66046bf22d33346059f6"],"b7605579001505896d48b07160075a5c8b8e128e":["681329f0d8aa847be84b952db62031b9c15f96c5","38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7dd748bb245633a8195281556bb0e68a6ea97d18","c8a0e442f7b61f811680273b25da95994a724466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8a0e442f7b61f811680273b25da95994a724466"],"38fa8e2c4105a7dd15d7e9260afa3b41a560d51d":["681329f0d8aa847be84b952db62031b9c15f96c5","d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240"]},"commit2Childs":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"251e6911800e3a02e1da3bfd4dc49a914aef9778":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"],"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240":["38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"34960be55e437a6c96fe66046bf22d33346059f6":["681329f0d8aa847be84b952db62031b9c15f96c5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["34960be55e437a6c96fe66046bf22d33346059f6"],"c8a0e442f7b61f811680273b25da95994a724466":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"681329f0d8aa847be84b952db62031b9c15f96c5":["d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240","b7605579001505896d48b07160075a5c8b8e128e","38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"b7605579001505896d48b07160075a5c8b8e128e":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["c8a0e442f7b61f811680273b25da95994a724466","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"38fa8e2c4105a7dd15d7e9260afa3b41a560d51d":["251e6911800e3a02e1da3bfd4dc49a914aef9778","b7605579001505896d48b07160075a5c8b8e128e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}