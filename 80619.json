{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50LiveDocsFormat#writeLiveDocs(Bits,Directory,SegmentCommitInfo,int,IOContext).mjava","commits":[{"id":"fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d","date":1525873214,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50LiveDocsFormat#writeLiveDocs(Bits,Directory,SegmentCommitInfo,int,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentCommitInfo,int,IOContext).mjava","sourceNew":"  @Override\n  public void writeLiveDocs(Bits bits, Directory dir, SegmentCommitInfo info, int newDelCount, IOContext context) throws IOException {\n    long gen = info.getNextDelGen();\n    String name = IndexFileNames.fileNameFromGeneration(info.info.name, EXTENSION, gen);\n    int delCount = 0;\n    try (IndexOutput output = dir.createOutput(name, context)) {\n      CodecUtil.writeIndexHeader(output, CODEC_NAME, VERSION_CURRENT, info.info.getId(), Long.toString(gen, Character.MAX_RADIX));\n      final int longCount = FixedBitSet.bits2words(bits.length());\n      for (int i = 0; i < longCount; ++i) {\n        long currentBits = 0;\n        for (int j = i << 6, end = Math.min(j + 63, bits.length() - 1); j <= end; ++j) {\n          if (bits.get(j)) {\n            currentBits |= 1L << j; // mod 64\n          } else {\n            delCount += 1;\n          }\n        }\n        output.writeLong(currentBits);\n      }\n      CodecUtil.writeFooter(output);\n    }\n    if (delCount != info.getDelCount() + newDelCount) {\n      throw new CorruptIndexException(\"bits.deleted=\" + delCount + \n          \" info.delcount=\" + info.getDelCount() + \" newdelcount=\" + newDelCount, name);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentCommitInfo info, int newDelCount, IOContext context) throws IOException {\n    long gen = info.getNextDelGen();\n    String name = IndexFileNames.fileNameFromGeneration(info.info.name, EXTENSION, gen);\n    FixedBitSet fbs = (FixedBitSet) bits;\n    if (fbs.length() - fbs.cardinality() != info.getDelCount() + newDelCount) {\n      throw new CorruptIndexException(\"bits.deleted=\" + (fbs.length() - fbs.cardinality()) + \n                                      \" info.delcount=\" + info.getDelCount() + \" newdelcount=\" + newDelCount, name);\n    }\n    long data[] = fbs.getBits();\n    try (IndexOutput output = dir.createOutput(name, context)) {\n      CodecUtil.writeIndexHeader(output, CODEC_NAME, VERSION_CURRENT, info.info.getId(), Long.toString(gen, Character.MAX_RADIX));\n      for (int i = 0; i < data.length; i++) {\n        output.writeLong(data[i]);\n      }\n      CodecUtil.writeFooter(output);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d"]},"commit2Childs":{"fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}