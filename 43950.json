{"path":"src/java/org/apache/lucene/index/CompoundFileReader.CSInputStream#clone().mjava","commits":[{"id":"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1","date":1064527311,"type":0,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader.CSInputStream#clone().mjava","pathOld":"/dev/null","sourceNew":"        /** Returns a clone of this stream.\n         *\n         * <p>Clones of a stream access the same data, and are positioned at the same\n         * point as the stream they were cloned from.\n         *\n         * <p>Expert: Subclasses must ensure that clones may be positioned at\n         * different points in the input from each other and from the stream they\n         * were cloned from.\n         */\n        public Object clone() {\n            CSInputStream other = (CSInputStream) super.clone();\n            other.base = (InputStream) base.clone();\n            return other;\n        }       \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a67f534c1db9eb255bc5a5137c7bf362ff90c276","date":1066054684,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader.CSInputStream#clone().mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader.CSInputStream#clone().mjava","sourceNew":"        /** Returns a clone of this stream.\n         *\n         * <p>Clones of a stream access the same data, and are positioned at the same\n         * point as the stream they were cloned from.\n         *\n         * <p>Expert: Subclasses must ensure that clones may be positioned at\n         * different points in the input from each other and from the stream they\n         * were cloned from.\n         */\n        public Object clone() {\n            CSInputStream other = (CSInputStream) super.clone();\n            other.base = (InputStream) base.clone();\n            return other;\n        }\n\n","sourceOld":"        /** Returns a clone of this stream.\n         *\n         * <p>Clones of a stream access the same data, and are positioned at the same\n         * point as the stream they were cloned from.\n         *\n         * <p>Expert: Subclasses must ensure that clones may be positioned at\n         * different points in the input from each other and from the stream they\n         * were cloned from.\n         */\n        public Object clone() {\n            CSInputStream other = (CSInputStream) super.clone();\n            other.base = (InputStream) base.clone();\n            return other;\n        }       \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e03c5e981c4cba6eeb493ff5749260a2204cd2f5","date":1069354904,"type":4,"author":"Christoph Goller","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader.CSInputStream#clone().mjava","sourceNew":null,"sourceOld":"        /** Returns a clone of this stream.\n         *\n         * <p>Clones of a stream access the same data, and are positioned at the same\n         * point as the stream they were cloned from.\n         *\n         * <p>Expert: Subclasses must ensure that clones may be positioned at\n         * different points in the input from each other and from the stream they\n         * were cloned from.\n         */\n        public Object clone() {\n            CSInputStream other = (CSInputStream) super.clone();\n            other.base = (InputStream) base.clone();\n            return other;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e03c5e981c4cba6eeb493ff5749260a2204cd2f5":["a67f534c1db9eb255bc5a5137c7bf362ff90c276"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e03c5e981c4cba6eeb493ff5749260a2204cd2f5"],"a67f534c1db9eb255bc5a5137c7bf362ff90c276":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"e03c5e981c4cba6eeb493ff5749260a2204cd2f5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["a67f534c1db9eb255bc5a5137c7bf362ff90c276"],"a67f534c1db9eb255bc5a5137c7bf362ff90c276":["e03c5e981c4cba6eeb493ff5749260a2204cd2f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}