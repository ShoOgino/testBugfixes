{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrServer(int).mjava","sourceNew":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    try {\n      // setup the server...\n      String baseUrl = buildUrl(port);\n      String url = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + DEFAULT_COLLECTION;\n      HttpSolrClient client = new HttpSolrClient(url);\n      client.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      client.setSoTimeout(60000);\n      client.setDefaultMaxConnectionsPerHost(100);\n      client.setMaxTotalConnections(100);\n      return client;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected SolrServer createNewSolrServer(int port) {\n    try {\n      // setup the server...\n      String baseUrl = buildUrl(port);\n      String url = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + DEFAULT_COLLECTION;\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setSoTimeout(60000);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","sourceNew":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    try {\n      // setup the server...\n      String baseUrl = buildUrl(port);\n      String url = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + DEFAULT_COLLECTION;\n      HttpSolrClient client = new HttpSolrClient(url);\n      client.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      client.setSoTimeout(60000);\n      return client;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    try {\n      // setup the server...\n      String baseUrl = buildUrl(port);\n      String url = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + DEFAULT_COLLECTION;\n      HttpSolrClient client = new HttpSolrClient(url);\n      client.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      client.setSoTimeout(60000);\n      client.setDefaultMaxConnectionsPerHost(100);\n      client.setMaxTotalConnections(100);\n      return client;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","sourceNew":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    try {\n      // setup the server...\n      String baseUrl = buildUrl(port);\n      String url = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + DEFAULT_COLLECTION;\n      HttpSolrClient client = getHttpSolrClient(url);\n      client.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      client.setSoTimeout(60000);\n      return client;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    try {\n      // setup the server...\n      String baseUrl = buildUrl(port);\n      String url = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + DEFAULT_COLLECTION;\n      HttpSolrClient client = new HttpSolrClient(url);\n      client.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      client.setSoTimeout(60000);\n      return client;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","sourceNew":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    try {\n      // setup the server...\n      String baseUrl = buildUrl(port);\n      String url = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + DEFAULT_COLLECTION;\n      HttpSolrClient client = getHttpSolrClient(url);\n      client.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      client.setSoTimeout(60000);\n      return client;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    try {\n      // setup the server...\n      String baseUrl = buildUrl(port);\n      String url = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + DEFAULT_COLLECTION;\n      HttpSolrClient client = new HttpSolrClient(url);\n      client.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      client.setSoTimeout(60000);\n      return client;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5","date":1498283633,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","sourceNew":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    return createNewSolrClient(DEFAULT_COLLECTION, port);\n  }\n\n","sourceOld":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    try {\n      // setup the server...\n      String baseUrl = buildUrl(port);\n      String url = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + DEFAULT_COLLECTION;\n      HttpSolrClient client = getHttpSolrClient(url);\n      client.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      client.setSoTimeout(60000);\n      return client;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","sourceNew":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    return createNewSolrClient(DEFAULT_COLLECTION, port);\n  }\n\n","sourceOld":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    try {\n      // setup the server...\n      String baseUrl = buildUrl(port);\n      String url = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + DEFAULT_COLLECTION;\n      HttpSolrClient client = getHttpSolrClient(url);\n      client.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      client.setSoTimeout(60000);\n      return client;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createNewSolrClient(int).mjava","sourceNew":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    return createNewSolrClient(DEFAULT_COLLECTION, port);\n  }\n\n","sourceOld":"  @Override\n  protected SolrClient createNewSolrClient(int port) {\n    try {\n      // setup the server...\n      String baseUrl = buildUrl(port);\n      String url = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + DEFAULT_COLLECTION;\n      HttpSolrClient client = getHttpSolrClient(url);\n      client.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      client.setSoTimeout(60000);\n      return client;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"859081acf00749f5dd462772c571d611d4a4d2db":["bafca15d8e408346a67f4282ad1143b88023893b"],"c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["859081acf00749f5dd462772c571d611d4a4d2db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["859081acf00749f5dd462772c571d611d4a4d2db","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5"],"28288370235ed02234a64753cdbf0c6ec096304a":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"859081acf00749f5dd462772c571d611d4a4d2db":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"bafca15d8e408346a67f4282ad1143b88023893b":["859081acf00749f5dd462772c571d611d4a4d2db"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}