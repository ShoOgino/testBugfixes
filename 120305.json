{"path":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","commits":[{"id":"8f3189d15ef66702bbb45771403a68793d5cd137","date":1433872507,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_5_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap());\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_5_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6392c263ac1e0e2a22a7f2d50f499e76971801d","date":1456927541,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap());\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_5_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap());\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_5_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap());\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_5_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap());\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_5_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap());\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap());\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap());\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap());\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap());\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d97ba94eef1fc33c5451259a7aa2ac682646c1af","date":1488285427,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos();\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_7_0_0, Version.LUCENE_7_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_7_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_7_0_0, Version.LUCENE_7_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_7_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_6_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_6_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fb98e487030cfb0192224997e59495c63cddebe","date":1498845545,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_8_0_0, Version.LUCENE_8_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_8_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_7_0_0, Version.LUCENE_7_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_7_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc018b79379c67835b40b1259cd3dc931df60944","date":1499109112,"type":3,"author":"Anshum Gupta","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_8_0_0, Version.LUCENE_8_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_8_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_7_0_0, Version.LUCENE_7_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_7_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_8_0_0, Version.LUCENE_8_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_8_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_7_0_0, Version.LUCENE_7_0_0, \"_0\", 1, false, Codec.getDefault(), \n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_7_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f2203cb8ae87188877cfbf6ad170c5738a0aad5","date":1528117512,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_8_0_0, Version.LUCENE_8_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_8_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_8_0_0, Version.LUCENE_8_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_8_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_8_0_0, Version.LUCENE_8_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_8_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_8_0_0, Version.LUCENE_8_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_8_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_8_0_0, Version.LUCENE_8_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_8_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_8_0_0, Version.LUCENE_8_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_8_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d722b735bc69d2234e957cb69cf96ad28ea7e1c3","date":1546867201,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_9_0_0, Version.LUCENE_9_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_9_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_8_0_0, Version.LUCENE_8_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_8_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14654be3f7a82c9a3c52169e365baa55bfe64f66","date":1587212697,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testVersionsOneSegment().mjava","sourceNew":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_9_0_0, Version.LUCENE_9_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, 0, -1, -1, -1, StringHelper.randomId());\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_9_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5954\n  public void testVersionsOneSegment() throws IOException {\n    BaseDirectoryWrapper dir = newDirectory();\n    dir.setCheckIndexOnClose(false);\n    byte id[] = StringHelper.randomId();\n    Codec codec = Codec.getDefault();\n\n    SegmentInfos sis = new SegmentInfos(Version.LATEST.major);\n    SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_9_0_0, Version.LUCENE_9_0_0, \"_0\", 1, false, Codec.getDefault(),\n                                       Collections.<String,String>emptyMap(), id, Collections.<String,String>emptyMap(), null);\n    info.setFiles(Collections.<String>emptySet());\n    codec.segmentInfoFormat().write(dir, info, IOContext.DEFAULT);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, 0, -1, -1, -1);\n\n    sis.add(commitInfo);\n    sis.commit(dir);\n    sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(Version.LUCENE_9_0_0, sis.getMinSegmentLuceneVersion());\n    assertEquals(Version.LATEST, sis.getCommitLuceneVersion());\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30c8e5574b55d57947e989443dfde611646530ee":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","cc018b79379c67835b40b1259cd3dc931df60944"],"0ad30c6a479e764150a3316e57263319775f1df2":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","3d33e731a93d4b57e662ff094f64f94a745422d4"],"8f3189d15ef66702bbb45771403a68793d5cd137":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","d470c8182e92b264680e34081b75e70a9f2b3c89"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","0ad30c6a479e764150a3316e57263319775f1df2"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"14654be3f7a82c9a3c52169e365baa55bfe64f66":["d722b735bc69d2234e957cb69cf96ad28ea7e1c3"],"d6392c263ac1e0e2a22a7f2d50f499e76971801d":["8f3189d15ef66702bbb45771403a68793d5cd137"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["cc018b79379c67835b40b1259cd3dc931df60944","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cc018b79379c67835b40b1259cd3dc931df60944":["31741cf1390044e38a2ec3127cf302ba841bfd75","8fb98e487030cfb0192224997e59495c63cddebe"],"d97ba94eef1fc33c5451259a7aa2ac682646c1af":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["8f3189d15ef66702bbb45771403a68793d5cd137","d6392c263ac1e0e2a22a7f2d50f499e76971801d"],"8fb98e487030cfb0192224997e59495c63cddebe":["31741cf1390044e38a2ec3127cf302ba841bfd75"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["cc018b79379c67835b40b1259cd3dc931df60944"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"f592209545c71895260367152601e9200399776d":["cc018b79379c67835b40b1259cd3dc931df60944","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["14654be3f7a82c9a3c52169e365baa55bfe64f66"],"d722b735bc69d2234e957cb69cf96ad28ea7e1c3":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"]},"commit2Childs":{"30c8e5574b55d57947e989443dfde611646530ee":[],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"8f3189d15ef66702bbb45771403a68793d5cd137":["d6392c263ac1e0e2a22a7f2d50f499e76971801d","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["cc018b79379c67835b40b1259cd3dc931df60944","8fb98e487030cfb0192224997e59495c63cddebe"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"14654be3f7a82c9a3c52169e365baa55bfe64f66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d6392c263ac1e0e2a22a7f2d50f499e76971801d":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8f3189d15ef66702bbb45771403a68793d5cd137"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"cc018b79379c67835b40b1259cd3dc931df60944":["30c8e5574b55d57947e989443dfde611646530ee","b70042a8a492f7054d480ccdd2be9796510d4327","8f2203cb8ae87188877cfbf6ad170c5738a0aad5","f592209545c71895260367152601e9200399776d"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["30c8e5574b55d57947e989443dfde611646530ee"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","ceaef6cfc68c8ab22a684192e469a8280f9e6e70","3d33e731a93d4b57e662ff094f64f94a745422d4"],"d97ba94eef1fc33c5451259a7aa2ac682646c1af":["31741cf1390044e38a2ec3127cf302ba841bfd75","92212fd254551a0b1156aafc3a1a6ed1a43932ad"],"8fb98e487030cfb0192224997e59495c63cddebe":["cc018b79379c67835b40b1259cd3dc931df60944"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","d722b735bc69d2234e957cb69cf96ad28ea7e1c3"],"f592209545c71895260367152601e9200399776d":[],"d722b735bc69d2234e957cb69cf96ad28ea7e1c3":["14654be3f7a82c9a3c52169e365baa55bfe64f66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}