{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","sourceNew":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(TermFreqIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","sourceOld":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(TermFreqIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","sourceNew":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(TermFreqPayloadIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","sourceOld":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(TermFreqIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41aee74b5f91a096e3fd950f4a336bc763f0e7a7","date":1381772070,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","sourceNew":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(InputIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","sourceOld":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(TermFreqPayloadIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(Directory,String,int,boolean).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","sourceNew":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(InputIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(Directory tempDir, String tempFileNamePrefix, int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n    this.tempDir = tempDir;\n    this.tempFileNamePrefix = tempFileNamePrefix;\n  }\n\n","sourceOld":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(InputIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}