{"path":"solr/core/src/java/org/apache/solr/security/AuditLoggerPlugin#doAudit(AuditEvent).mjava","commits":[{"id":"12ddd922ea96c1d0ea68a68506b6984a246cfb22","date":1554385731,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/AuditLoggerPlugin#doAudit(AuditEvent).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called by the framework, and takes care of metrics tracking and to dispatch\n   * to either synchronous or async logging.\n   */\n  public final void doAudit(AuditEvent event) {\n    if (shouldMute(event)) {\n      log.debug(\"Event muted due to mute rule(s)\");\n      return;\n    }\n    if (async) {\n      auditAsync(event);\n    } else {\n      Timer.Context timer = requestTimes.time();\n      numLogged.mark();\n      try {\n        audit(event);\n      } catch(Exception e) {\n        numErrors.mark();\n        throw e;\n      } finally {\n        totalTime.inc(timer.stop());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"144f2f24da0b8fe43f748fcb4c0c59cf52f9c2d8","date":1554812752,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/AuditLoggerPlugin#doAudit(AuditEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/AuditLoggerPlugin#doAudit(AuditEvent).mjava","sourceNew":"  /**\n   * Called by the framework, and takes care of metrics tracking and to dispatch\n   * to either synchronous or async logging.\n   */\n  public final void doAudit(AuditEvent event) {\n    if (shouldMute(event)) {\n      log.debug(\"Event muted due to mute rule(s)\");\n      return;\n    }\n    if (async) {\n      auditAsync(event);\n    } else {\n      Timer.Context timer = requestTimes.time();\n      numLogged.mark();\n      try {\n        audit(event);\n      } catch(Exception e) {\n        numErrors.mark();\n        log.error(\"Exception when attempting to audit log\", e);\n      } finally {\n        totalTime.inc(timer.stop());\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Called by the framework, and takes care of metrics tracking and to dispatch\n   * to either synchronous or async logging.\n   */\n  public final void doAudit(AuditEvent event) {\n    if (shouldMute(event)) {\n      log.debug(\"Event muted due to mute rule(s)\");\n      return;\n    }\n    if (async) {\n      auditAsync(event);\n    } else {\n      Timer.Context timer = requestTimes.time();\n      numLogged.mark();\n      try {\n        audit(event);\n      } catch(Exception e) {\n        numErrors.mark();\n        throw e;\n      } finally {\n        totalTime.inc(timer.stop());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["144f2f24da0b8fe43f748fcb4c0c59cf52f9c2d8"],"144f2f24da0b8fe43f748fcb4c0c59cf52f9c2d8":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"]},"commit2Childs":{"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["144f2f24da0b8fe43f748fcb4c0c59cf52f9c2d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"144f2f24da0b8fe43f748fcb4c0c59cf52f9c2d8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}