{"path":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","commits":[{"id":"3f74570911bfdb9f7b01948745dcd67c69676c0e","date":1181060975,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","pathOld":"/dev/null","sourceNew":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private HashMap topDocsToMap(TopDocs td) {\n    HashMap h = new HashMap(); \n    for (int i=0; i<td.totalHits; i++) {\n      h.put(new Integer(td.scoreDocs[i].doc), new Float(td.scoreDocs[i].score));\n    }\n    return h;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bcde5e3f23911110baa101ed062b544162825b5","date":1254521804,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","sourceNew":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private HashMap topDocsToMap(TopDocs td) {\n    HashMap h = new HashMap(); \n    for (int i=0; i<td.totalHits; i++) {\n      h.put(Integer.valueOf(td.scoreDocs[i].doc), Float.valueOf(td.scoreDocs[i].score));\n    }\n    return h;\n  }\n\n","sourceOld":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private HashMap topDocsToMap(TopDocs td) {\n    HashMap h = new HashMap(); \n    for (int i=0; i<td.totalHits; i++) {\n      h.put(new Integer(td.scoreDocs[i].doc), new Float(td.scoreDocs[i].score));\n    }\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e450c7d50c2fc84c963d0d7ade9d3217d868064d","date":1259932067,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","sourceNew":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private HashMap<Integer,Float> topDocsToMap(TopDocs td) {\n    HashMap<Integer,Float> h = new HashMap<Integer,Float>(); \n    for (int i=0; i<td.totalHits; i++) {\n      h.put(Integer.valueOf(td.scoreDocs[i].doc), Float.valueOf(td.scoreDocs[i].score));\n    }\n    return h;\n  }\n\n","sourceOld":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private HashMap topDocsToMap(TopDocs td) {\n    HashMap h = new HashMap(); \n    for (int i=0; i<td.totalHits; i++) {\n      h.put(Integer.valueOf(td.scoreDocs[i].doc), Float.valueOf(td.scoreDocs[i].score));\n    }\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"777b7ef341decfee8757f492d8a154637cd7a384","date":1260037647,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","sourceNew":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<Integer,Float>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","sourceOld":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private HashMap<Integer,Float> topDocsToMap(TopDocs td) {\n    HashMap<Integer,Float> h = new HashMap<Integer,Float>(); \n    for (int i=0; i<td.totalHits; i++) {\n      h.put(Integer.valueOf(td.scoreDocs[i].doc), Float.valueOf(td.scoreDocs[i].score));\n    }\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","sourceNew":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<Integer,Float>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","sourceOld":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<Integer,Float>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bcde5e3f23911110baa101ed062b544162825b5":["3f74570911bfdb9f7b01948745dcd67c69676c0e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3f74570911bfdb9f7b01948745dcd67c69676c0e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"777b7ef341decfee8757f492d8a154637cd7a384":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["6bcde5e3f23911110baa101ed062b544162825b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["777b7ef341decfee8757f492d8a154637cd7a384"]},"commit2Childs":{"6bcde5e3f23911110baa101ed062b544162825b5":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f74570911bfdb9f7b01948745dcd67c69676c0e"],"3f74570911bfdb9f7b01948745dcd67c69676c0e":["6bcde5e3f23911110baa101ed062b544162825b5"],"777b7ef341decfee8757f492d8a154637cd7a384":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["777b7ef341decfee8757f492d8a154637cd7a384"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}