{"path":"lucene/core/src/java/org/apache/lucene/util/IndexableBinaryStringTools#getDecodedLength(char[],int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IndexableBinaryStringTools#getDecodedLength(char[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools#getDecodedLength(char[],int,int).mjava","sourceNew":"  /**\n   * Returns the number of bytes required to decode the given char sequence.\n   * \n   * @param encoded char sequence to be decoded\n   * @param offset initial offset\n   * @param length number of characters\n   * @return The number of bytes required to decode the given char sequence\n   */\n  public static int getDecodedLength(char[] encoded, int offset, int length) {\n    final int numChars = length - 1;\n    if (numChars <= 0) {\n      return 0;\n    } else {\n      // Use long for intermediaries to protect against overflow\n      final long numFullBytesInFinalChar = encoded[offset + length - 1];\n      final long numEncodedChars = numChars - 1;\n      return (int)((numEncodedChars * 15L + 7L) / 8L + numFullBytesInFinalChar);\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the number of bytes required to decode the given char sequence.\n   * \n   * @param encoded char sequence to be decoded\n   * @param offset initial offset\n   * @param length number of characters\n   * @return The number of bytes required to decode the given char sequence\n   */\n  public static int getDecodedLength(char[] encoded, int offset, int length) {\n    final int numChars = length - 1;\n    if (numChars <= 0) {\n      return 0;\n    } else {\n      // Use long for intermediaries to protect against overflow\n      final long numFullBytesInFinalChar = encoded[offset + length - 1];\n      final long numEncodedChars = numChars - 1;\n      return (int)((numEncodedChars * 15L + 7L) / 8L + numFullBytesInFinalChar);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/IndexableBinaryStringTools#getDecodedLength(char[],int,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the number of bytes required to decode the given char sequence.\n   * \n   * @param encoded char sequence to be decoded\n   * @param offset initial offset\n   * @param length number of characters\n   * @return The number of bytes required to decode the given char sequence\n   */\n  public static int getDecodedLength(char[] encoded, int offset, int length) {\n    final int numChars = length - 1;\n    if (numChars <= 0) {\n      return 0;\n    } else {\n      // Use long for intermediaries to protect against overflow\n      final long numFullBytesInFinalChar = encoded[offset + length - 1];\n      final long numEncodedChars = numChars - 1;\n      return (int)((numEncodedChars * 15L + 7L) / 8L + numFullBytesInFinalChar);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"]},"commit2Childs":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}