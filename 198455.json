{"path":"lucene/monitor/src/java/org/apache/lucene/monitor/ParallelMatcher#ParallelMatcher(IndexSearcher,ExecutorService,MatcherFactory[T],int).mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/ParallelMatcher#ParallelMatcher(IndexSearcher,ExecutorService,MatcherFactory[T],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new ParallelMatcher\n   *\n   * @param searcher       the IndexSearcher to match against\n   * @param executor       an ExecutorService to use for parallel execution\n   * @param matcherFactory MatcherFactory to use to create CandidateMatchers\n   * @param threads        the number of threads to execute on\n   */\n  private ParallelMatcher(IndexSearcher searcher, ExecutorService executor,\n                          MatcherFactory<T> matcherFactory, int threads) {\n    super(searcher);\n    for (int i = 0; i < threads; i++) {\n      MatcherWorker mw = new MatcherWorker(matcherFactory);\n      futures.add(executor.submit(mw));\n    }\n    collectorMatcher = matcherFactory.createMatcher(searcher);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}