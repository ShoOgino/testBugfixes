{"path":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","commits":[{"id":"90405b089d8d601f0287297302de0d91df1a0e28","date":1376503905,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","date":1377475564,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = TestUtil.createTempDir(TestSolrCoreProperties.class.getSimpleName());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = new File(TEMP_DIR,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = TestUtil.createTempDir(TestSolrCoreProperties.class.getSimpleName());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), IOUtils.CHARSET_UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = new File(dataDir,\n                            \"solrtest-TestSolrCoreProperties-\" + System.currentTimeMillis());\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), \"/solr\", 0, null, null, true, null, sslConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    //createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c66158bb16e902a21272772f1b911f04b1a55abb","date":1424959524,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), buildJettyConfig(\"/solr\"));\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    //createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), \"/solr\", 0, null, null, true, null, sslConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    //createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), buildJettyConfig(\"/solr\"));\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    //createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), \"/solr\", 0, null, null, true, null, sslConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    //createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"733eaf468f18297b1bcc51031353bdfdd1913bdf","date":1456928540,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n\n    Properties nodeProperties = new Properties();\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      nodeProperties.setProperty(\"solr.data.dir\", createTempDir().toFile().getCanonicalPath());\n    }\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), nodeProperties, buildJettyConfig(\"/solr\"));\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    //createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), buildJettyConfig(\"/solr\"));\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    //createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestSolrCoreProperties#beforeTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n\n    Properties nodeProperties = new Properties();\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      nodeProperties.setProperty(\"solr.data.dir\", createTempDir().toFile().getCanonicalPath());\n    }\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), nodeProperties, buildJettyConfig(\"/solr\"));\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    //createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    File homeDir = createTempDir().toFile();\n\n    File collDir = new File(homeDir, \"collection1\");\n    File dataDir = new File(collDir, \"data\");\n    File confDir = new File(collDir, \"conf\");\n\n    homeDir.mkdirs();\n    collDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(homeDir, \"solr.xml\"));\n    String src_dir = TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(src_dir, \"schema-tiny.xml\"), \n                       new File(confDir, \"schema.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig-solcoreproperties.xml\"), \n                       new File(confDir, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(src_dir, \"solrconfig.snippet.randomindexconfig.xml\"), \n                       new File(confDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n\n    Properties p = new Properties();\n    p.setProperty(\"foo.foo1\", \"f1\");\n    p.setProperty(\"foo.foo2\", \"f2\");\n    Writer fos = new OutputStreamWriter(new FileOutputStream(new File(confDir, \"solrcore.properties\")), StandardCharsets.UTF_8);\n    p.store(fos, null);\n    IOUtils.close(fos);\n\n    Files.createFile(collDir.toPath().resolve(\"core.properties\"));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), buildJettyConfig(\"/solr\"));\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    //createJetty(homeDir.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","7d89d7e4e5101347833eea558851bf4209218619"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["7d89d7e4e5101347833eea558851bf4209218619","5eb2511ababf862ea11e10761c70ee560cd84510"],"90405b089d8d601f0287297302de0d91df1a0e28":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"7d89d7e4e5101347833eea558851bf4209218619":["1416f9d09d016a6894cd17e1caac137dad2bba59"],"d0d579490a72f2e6297eaa648940611234c57cf1":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","c66158bb16e902a21272772f1b911f04b1a55abb"],"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["90405b089d8d601f0287297302de0d91df1a0e28"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["c66158bb16e902a21272772f1b911f04b1a55abb","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["c66158bb16e902a21272772f1b911f04b1a55abb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"c66158bb16e902a21272772f1b911f04b1a55abb":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["5eb2511ababf862ea11e10761c70ee560cd84510"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"90405b089d8d601f0287297302de0d91df1a0e28":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c66158bb16e902a21272772f1b911f04b1a55abb"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"f4abec28b874149a7223e32cc7a01704c27790de":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","d0d579490a72f2e6297eaa648940611234c57cf1","1416f9d09d016a6894cd17e1caac137dad2bba59"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["90405b089d8d601f0287297302de0d91df1a0e28","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"c66158bb16e902a21272772f1b911f04b1a55abb":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cf1a614098b46c9c22afebd7b898ae4d1d2fc273","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}