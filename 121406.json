{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFactories#initialize(Class[#-extends-AbstractAnalysisFactory]).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFactories#initialize(Class[#-extends-AbstractAnalysisFactory]).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFactories#initialize(AbstractAnalysisFactory).mjava","sourceNew":"  /** tries to initialize a factory with no arguments */\n  private AbstractAnalysisFactory initialize(Class<? extends AbstractAnalysisFactory> factoryClazz) throws IOException {\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"luceneMatchVersion\", TEST_VERSION_CURRENT.toString());\n    Constructor<? extends AbstractAnalysisFactory> ctor;\n    try {\n      ctor = factoryClazz.getConstructor(Map.class);\n    } catch (Exception e) {\n      throw new RuntimeException(\"factory '\" + factoryClazz + \"' does not have a proper ctor!\");\n    }\n    \n    AbstractAnalysisFactory factory = null;\n    try {\n      factory = ctor.newInstance(args);\n    } catch (InstantiationException e) {\n      throw new RuntimeException(e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(e);\n    } catch (InvocationTargetException e) {\n      if (e.getCause() instanceof IllegalArgumentException) {\n        // its ok if we dont provide the right parameters to throw this\n        return null;\n      }\n    }\n    \n    if (factory instanceof ResourceLoaderAware) {\n      try {\n        ((ResourceLoaderAware) factory).inform(new StringMockResourceLoader(\"\"));\n      } catch (IOException ignored) {\n        // its ok if the right files arent available or whatever to throw this\n      } catch (IllegalArgumentException ignored) {\n        // is this ok? I guess so\n      }\n    }\n    return factory;\n  }\n\n","sourceOld":"  /** tries to initialize a factory with no arguments */\n  private boolean initialize(AbstractAnalysisFactory factory) throws IOException {\n    boolean success = false;\n    try {\n      factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      factory.init(Collections.<String,String>emptyMap());\n      if (factory instanceof ResourceLoaderAware) {\n        ResourceLoaderAware resourceLoaderAware = (ResourceLoaderAware) factory;\n          resourceLoaderAware.inform(new ClasspathResourceLoader(factory.getClass()));\n      }\n      success = true;\n    } catch (IllegalArgumentException ignored) {\n      // its ok if we dont provide the right parameters to throw this\n    }\n    \n    if (factory instanceof ResourceLoaderAware) {\n      success = false;\n      try {\n        ((ResourceLoaderAware) factory).inform(new StringMockResourceLoader(\"\"));\n        success = true;\n      } catch (IOException ignored) {\n        // its ok if the right files arent available or whatever to throw this\n      } catch (IllegalArgumentException ignored) {\n        // is this ok? I guess so\n      }\n    }\n    return success;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFactories#initialize(Class[#-extends-AbstractAnalysisFactory]).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFactories#initialize(Class[#-extends-AbstractAnalysisFactory]).mjava","sourceNew":"  /** tries to initialize a factory with no arguments */\n  private AbstractAnalysisFactory initialize(Class<? extends AbstractAnalysisFactory> factoryClazz) throws IOException {\n    Map<String,String> args = new HashMap<>();\n    args.put(\"luceneMatchVersion\", TEST_VERSION_CURRENT.toString());\n    Constructor<? extends AbstractAnalysisFactory> ctor;\n    try {\n      ctor = factoryClazz.getConstructor(Map.class);\n    } catch (Exception e) {\n      throw new RuntimeException(\"factory '\" + factoryClazz + \"' does not have a proper ctor!\");\n    }\n    \n    AbstractAnalysisFactory factory = null;\n    try {\n      factory = ctor.newInstance(args);\n    } catch (InstantiationException e) {\n      throw new RuntimeException(e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(e);\n    } catch (InvocationTargetException e) {\n      if (e.getCause() instanceof IllegalArgumentException) {\n        // its ok if we dont provide the right parameters to throw this\n        return null;\n      }\n    }\n    \n    if (factory instanceof ResourceLoaderAware) {\n      try {\n        ((ResourceLoaderAware) factory).inform(new StringMockResourceLoader(\"\"));\n      } catch (IOException ignored) {\n        // its ok if the right files arent available or whatever to throw this\n      } catch (IllegalArgumentException ignored) {\n        // is this ok? I guess so\n      }\n    }\n    return factory;\n  }\n\n","sourceOld":"  /** tries to initialize a factory with no arguments */\n  private AbstractAnalysisFactory initialize(Class<? extends AbstractAnalysisFactory> factoryClazz) throws IOException {\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"luceneMatchVersion\", TEST_VERSION_CURRENT.toString());\n    Constructor<? extends AbstractAnalysisFactory> ctor;\n    try {\n      ctor = factoryClazz.getConstructor(Map.class);\n    } catch (Exception e) {\n      throw new RuntimeException(\"factory '\" + factoryClazz + \"' does not have a proper ctor!\");\n    }\n    \n    AbstractAnalysisFactory factory = null;\n    try {\n      factory = ctor.newInstance(args);\n    } catch (InstantiationException e) {\n      throw new RuntimeException(e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(e);\n    } catch (InvocationTargetException e) {\n      if (e.getCause() instanceof IllegalArgumentException) {\n        // its ok if we dont provide the right parameters to throw this\n        return null;\n      }\n    }\n    \n    if (factory instanceof ResourceLoaderAware) {\n      try {\n        ((ResourceLoaderAware) factory).inform(new StringMockResourceLoader(\"\"));\n      } catch (IOException ignored) {\n        // its ok if the right files arent available or whatever to throw this\n      } catch (IllegalArgumentException ignored) {\n        // is this ok? I guess so\n      }\n    }\n    return factory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19e497fe4da591a79332da97681b8017d9c61165","date":1409030374,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFactories#initialize(Class[#-extends-AbstractAnalysisFactory]).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFactories#initialize(Class[#-extends-AbstractAnalysisFactory]).mjava","sourceNew":"  /** tries to initialize a factory with no arguments */\n  private AbstractAnalysisFactory initialize(Class<? extends AbstractAnalysisFactory> factoryClazz) throws IOException {\n    Map<String,String> args = new HashMap<>();\n    args.put(\"luceneMatchVersion\", Version.LATEST.toString());\n    Constructor<? extends AbstractAnalysisFactory> ctor;\n    try {\n      ctor = factoryClazz.getConstructor(Map.class);\n    } catch (Exception e) {\n      throw new RuntimeException(\"factory '\" + factoryClazz + \"' does not have a proper ctor!\");\n    }\n    \n    AbstractAnalysisFactory factory = null;\n    try {\n      factory = ctor.newInstance(args);\n    } catch (InstantiationException e) {\n      throw new RuntimeException(e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(e);\n    } catch (InvocationTargetException e) {\n      if (e.getCause() instanceof IllegalArgumentException) {\n        // its ok if we dont provide the right parameters to throw this\n        return null;\n      }\n    }\n    \n    if (factory instanceof ResourceLoaderAware) {\n      try {\n        ((ResourceLoaderAware) factory).inform(new StringMockResourceLoader(\"\"));\n      } catch (IOException ignored) {\n        // its ok if the right files arent available or whatever to throw this\n      } catch (IllegalArgumentException ignored) {\n        // is this ok? I guess so\n      }\n    }\n    return factory;\n  }\n\n","sourceOld":"  /** tries to initialize a factory with no arguments */\n  private AbstractAnalysisFactory initialize(Class<? extends AbstractAnalysisFactory> factoryClazz) throws IOException {\n    Map<String,String> args = new HashMap<>();\n    args.put(\"luceneMatchVersion\", TEST_VERSION_CURRENT.toString());\n    Constructor<? extends AbstractAnalysisFactory> ctor;\n    try {\n      ctor = factoryClazz.getConstructor(Map.class);\n    } catch (Exception e) {\n      throw new RuntimeException(\"factory '\" + factoryClazz + \"' does not have a proper ctor!\");\n    }\n    \n    AbstractAnalysisFactory factory = null;\n    try {\n      factory = ctor.newInstance(args);\n    } catch (InstantiationException e) {\n      throw new RuntimeException(e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(e);\n    } catch (InvocationTargetException e) {\n      if (e.getCause() instanceof IllegalArgumentException) {\n        // its ok if we dont provide the right parameters to throw this\n        return null;\n      }\n    }\n    \n    if (factory instanceof ResourceLoaderAware) {\n      try {\n        ((ResourceLoaderAware) factory).inform(new StringMockResourceLoader(\"\"));\n      } catch (IOException ignored) {\n        // its ok if the right files arent available or whatever to throw this\n      } catch (IllegalArgumentException ignored) {\n        // is this ok? I guess so\n      }\n    }\n    return factory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFactories#initialize(Class[#-extends-AbstractAnalysisFactory]).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFactories#initialize(Class[#-extends-AbstractAnalysisFactory]).mjava","sourceNew":"  /** tries to initialize a factory with no arguments */\n  private AbstractAnalysisFactory initialize(Class<? extends AbstractAnalysisFactory> factoryClazz) throws IOException {\n    Map<String,String> args = new HashMap<>();\n    args.put(\"luceneMatchVersion\", Version.LATEST.toString());\n    Constructor<? extends AbstractAnalysisFactory> ctor;\n    try {\n      ctor = factoryClazz.getConstructor(Map.class);\n    } catch (Exception e) {\n      throw new RuntimeException(\"factory '\" + factoryClazz + \"' does not have a proper ctor!\");\n    }\n    \n    AbstractAnalysisFactory factory = null;\n    try {\n      factory = ctor.newInstance(args);\n    } catch (InstantiationException e) {\n      throw new RuntimeException(e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(e);\n    } catch (InvocationTargetException e) {\n      if (e.getCause() instanceof IllegalArgumentException) {\n        // it's ok if we dont provide the right parameters to throw this\n        return null;\n      }\n    }\n    \n    if (factory instanceof ResourceLoaderAware) {\n      try {\n        ((ResourceLoaderAware) factory).inform(new StringMockResourceLoader(\"\"));\n      } catch (IOException ignored) {\n        // it's ok if the right files arent available or whatever to throw this\n      } catch (IllegalArgumentException ignored) {\n        // is this ok? I guess so\n      }\n    }\n    return factory;\n  }\n\n","sourceOld":"  /** tries to initialize a factory with no arguments */\n  private AbstractAnalysisFactory initialize(Class<? extends AbstractAnalysisFactory> factoryClazz) throws IOException {\n    Map<String,String> args = new HashMap<>();\n    args.put(\"luceneMatchVersion\", Version.LATEST.toString());\n    Constructor<? extends AbstractAnalysisFactory> ctor;\n    try {\n      ctor = factoryClazz.getConstructor(Map.class);\n    } catch (Exception e) {\n      throw new RuntimeException(\"factory '\" + factoryClazz + \"' does not have a proper ctor!\");\n    }\n    \n    AbstractAnalysisFactory factory = null;\n    try {\n      factory = ctor.newInstance(args);\n    } catch (InstantiationException e) {\n      throw new RuntimeException(e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(e);\n    } catch (InvocationTargetException e) {\n      if (e.getCause() instanceof IllegalArgumentException) {\n        // its ok if we dont provide the right parameters to throw this\n        return null;\n      }\n    }\n    \n    if (factory instanceof ResourceLoaderAware) {\n      try {\n        ((ResourceLoaderAware) factory).inform(new StringMockResourceLoader(\"\"));\n      } catch (IOException ignored) {\n        // its ok if the right files arent available or whatever to throw this\n      } catch (IllegalArgumentException ignored) {\n        // is this ok? I guess so\n      }\n    }\n    return factory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6","date":1421884114,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFactories#initialize(Class[#-extends-AbstractAnalysisFactory]).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFactories#initialize(Class[#-extends-AbstractAnalysisFactory]).mjava","sourceNew":"  /** tries to initialize a factory with no arguments */\n  private AbstractAnalysisFactory initialize(Class<? extends AbstractAnalysisFactory> factoryClazz) throws IOException {\n    Map<String,String> args = new HashMap<>();\n    args.put(\"luceneMatchVersion\", Version.LATEST.toString());\n    Constructor<? extends AbstractAnalysisFactory> ctor;\n    try {\n      ctor = factoryClazz.getConstructor(Map.class);\n    } catch (Exception e) {\n      throw new RuntimeException(\"factory '\" + factoryClazz + \"' does not have a proper ctor!\");\n    }\n    \n    AbstractAnalysisFactory factory = null;\n    try {\n      factory = ctor.newInstance(args);\n    } catch (InstantiationException | IllegalAccessException e) {\n      throw new RuntimeException(e);\n    } catch (InvocationTargetException e) {\n      if (e.getCause() instanceof IllegalArgumentException) {\n        // it's ok if we dont provide the right parameters to throw this\n        return null;\n      }\n    }\n    \n    if (factory instanceof ResourceLoaderAware) {\n      try {\n        ((ResourceLoaderAware) factory).inform(new StringMockResourceLoader(\"\"));\n      } catch (IOException ignored) {\n        // it's ok if the right files arent available or whatever to throw this\n      } catch (IllegalArgumentException ignored) {\n        // is this ok? I guess so\n      }\n    }\n    return factory;\n  }\n\n","sourceOld":"  /** tries to initialize a factory with no arguments */\n  private AbstractAnalysisFactory initialize(Class<? extends AbstractAnalysisFactory> factoryClazz) throws IOException {\n    Map<String,String> args = new HashMap<>();\n    args.put(\"luceneMatchVersion\", Version.LATEST.toString());\n    Constructor<? extends AbstractAnalysisFactory> ctor;\n    try {\n      ctor = factoryClazz.getConstructor(Map.class);\n    } catch (Exception e) {\n      throw new RuntimeException(\"factory '\" + factoryClazz + \"' does not have a proper ctor!\");\n    }\n    \n    AbstractAnalysisFactory factory = null;\n    try {\n      factory = ctor.newInstance(args);\n    } catch (InstantiationException e) {\n      throw new RuntimeException(e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(e);\n    } catch (InvocationTargetException e) {\n      if (e.getCause() instanceof IllegalArgumentException) {\n        // it's ok if we dont provide the right parameters to throw this\n        return null;\n      }\n    }\n    \n    if (factory instanceof ResourceLoaderAware) {\n      try {\n        ((ResourceLoaderAware) factory).inform(new StringMockResourceLoader(\"\"));\n      } catch (IOException ignored) {\n        // it's ok if the right files arent available or whatever to throw this\n      } catch (IllegalArgumentException ignored) {\n        // is this ok? I guess so\n      }\n    }\n    return factory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["19e497fe4da591a79332da97681b8017d9c61165"],"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5891bd634d5ddbf7c48cff0f4818c682ca42a4a6"],"19e497fe4da591a79332da97681b8017d9c61165":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["19e497fe4da591a79332da97681b8017d9c61165"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["5891bd634d5ddbf7c48cff0f4818c682ca42a4a6"],"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"19e497fe4da591a79332da97681b8017d9c61165":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}