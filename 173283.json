{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#perDocValues().mjava","commits":[{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#perDocValues().mjava","pathOld":"/dev/null","sourceNew":"  // nocommit javadoc\n  public abstract PerDocValues perDocValues() throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a178822e66424e8b9d52a1f0a3d8f2f8d641b99","date":1305619757,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#perDocValues().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#perDocValues().mjava","sourceNew":"  /**\n   * Flex API: returns {@link PerDocValues} for this reader.\n   *  This method may return null if the reader has no per-document\n   *  values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link PerDocValues} for such a reader,\n   * use {@link MultiPerDocValues#getPerDocs(IndexReader)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract PerDocValues perDocValues() throws IOException;\n\n","sourceOld":"  // nocommit javadoc\n  public abstract PerDocValues perDocValues() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0150c6e116b24d66f02d63fcb0758f336e8791e2","date":1307283797,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#perDocValues().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#perDocValues().mjava","sourceNew":"  /**\n   * Returns {@link PerDocValues} for this reader.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link PerDocValues} for such a reader,\n   * use {@link MultiPerDocValues#getPerDocs(IndexReader)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract PerDocValues perDocValues() throws IOException;\n\n","sourceOld":"  /**\n   * Flex API: returns {@link PerDocValues} for this reader.\n   *  This method may return null if the reader has no per-document\n   *  values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link PerDocValues} for such a reader,\n   * use {@link MultiPerDocValues#getPerDocs(IndexReader)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract PerDocValues perDocValues() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#perDocValues().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns {@link PerDocValues} for this reader.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link PerDocValues} for such a reader,\n   * use {@link MultiPerDocValues#getPerDocs(IndexReader)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract PerDocValues perDocValues() throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#perDocValues().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns {@link PerDocValues} for this reader.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link PerDocValues} for such a reader,\n   * use {@link MultiPerDocValues#getPerDocs(IndexReader)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract PerDocValues perDocValues() throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cac4d5fa6c305b94f6232a70bda07f096ad0348c","date":1323538980,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#perDocValues().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns {@link PerDocValues} for this reader.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link PerDocValues} for such a reader,\n   * use {@link MultiPerDocValues#getPerDocs(IndexReader)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract PerDocValues perDocValues() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#perDocValues().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns {@link PerDocValues} for this reader.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link PerDocValues} for such a reader,\n   * use {@link MultiPerDocValues#getPerDocs(IndexReader)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract PerDocValues perDocValues() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0150c6e116b24d66f02d63fcb0758f336e8791e2"],"cac4d5fa6c305b94f6232a70bda07f096ad0348c":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"0150c6e116b24d66f02d63fcb0758f336e8791e2":["8a178822e66424e8b9d52a1f0a3d8f2f8d641b99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a178822e66424e8b9d52a1f0a3d8f2f8d641b99":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["2e8d7ba2175f47e280231533f7d3016249cea88b","cac4d5fa6c305b94f6232a70bda07f096ad0348c"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cac4d5fa6c305b94f6232a70bda07f096ad0348c","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cac4d5fa6c305b94f6232a70bda07f096ad0348c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"0150c6e116b24d66f02d63fcb0758f336e8791e2":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["8a178822e66424e8b9d52a1f0a3d8f2f8d641b99"],"8a178822e66424e8b9d52a1f0a3d8f2f8d641b99":["0150c6e116b24d66f02d63fcb0758f336e8791e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}