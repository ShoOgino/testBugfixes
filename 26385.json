{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mSTRING().mjava","commits":[{"id":"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c","date":1404947938,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mSTRING().mjava","pathOld":"/dev/null","sourceNew":"  // $ANTLR start \"STRING\"\n  public final void mSTRING() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:356:5: ( '\\\\'' ( SINGLE_STRING_CHAR )* '\\\\'' | '\\\"' ( DOUBLE_STRING_CHAR )* '\\\"' )\n      int alt7=2;\n      int LA7_0 = input.LA(1);\n      if ( (LA7_0=='\\'') ) {\n        alt7=1;\n      }\n      else if ( (LA7_0=='\\\"') ) {\n        alt7=2;\n      }\n\n      else {\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 7, 0, input);\n        throw nvae;\n      }\n\n      switch (alt7) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:356:7: '\\\\'' ( SINGLE_STRING_CHAR )* '\\\\''\n          {\n          match('\\''); \n          // src/java/org/apache/lucene/expressions/js/Javascript.g:356:12: ( SINGLE_STRING_CHAR )*\n          loop5:\n          while (true) {\n            int alt5=2;\n            int LA5_0 = input.LA(1);\n            if ( ((LA5_0 >= '\\u0000' && LA5_0 <= '&')||(LA5_0 >= '(' && LA5_0 <= '\\uFFFF')) ) {\n              alt5=1;\n            }\n\n            switch (alt5) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:356:12: SINGLE_STRING_CHAR\n              {\n              mSINGLE_STRING_CHAR(); \n\n              }\n              break;\n\n            default :\n              break loop5;\n            }\n          }\n\n          match('\\''); \n           \n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:357:7: '\\\"' ( DOUBLE_STRING_CHAR )* '\\\"'\n          {\n          match('\\\"'); \n          // src/java/org/apache/lucene/expressions/js/Javascript.g:357:11: ( DOUBLE_STRING_CHAR )*\n          loop6:\n          while (true) {\n            int alt6=2;\n            int LA6_0 = input.LA(1);\n            if ( ((LA6_0 >= '\\u0000' && LA6_0 <= '!')||(LA6_0 >= '#' && LA6_0 <= '\\uFFFF')) ) {\n              alt6=1;\n            }\n\n            switch (alt6) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:357:11: DOUBLE_STRING_CHAR\n              {\n              mDOUBLE_STRING_CHAR(); \n\n              }\n              break;\n\n            default :\n              break loop6;\n            }\n          }\n\n          match('\\\"'); \n          }\n          break;\n\n      }\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"STRING\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d23d4828afa583ebf35b4a541763af6206133458","date":1438931440,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mSTRING().mjava","sourceNew":null,"sourceOld":"  // $ANTLR start \"STRING\"\n  public final void mSTRING() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:356:5: ( '\\\\'' ( SINGLE_STRING_CHAR )* '\\\\'' | '\\\"' ( DOUBLE_STRING_CHAR )* '\\\"' )\n      int alt7=2;\n      int LA7_0 = input.LA(1);\n      if ( (LA7_0=='\\'') ) {\n        alt7=1;\n      }\n      else if ( (LA7_0=='\\\"') ) {\n        alt7=2;\n      }\n\n      else {\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 7, 0, input);\n        throw nvae;\n      }\n\n      switch (alt7) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:356:7: '\\\\'' ( SINGLE_STRING_CHAR )* '\\\\''\n          {\n          match('\\''); \n          // src/java/org/apache/lucene/expressions/js/Javascript.g:356:12: ( SINGLE_STRING_CHAR )*\n          loop5:\n          while (true) {\n            int alt5=2;\n            int LA5_0 = input.LA(1);\n            if ( ((LA5_0 >= '\\u0000' && LA5_0 <= '&')||(LA5_0 >= '(' && LA5_0 <= '\\uFFFF')) ) {\n              alt5=1;\n            }\n\n            switch (alt5) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:356:12: SINGLE_STRING_CHAR\n              {\n              mSINGLE_STRING_CHAR(); \n\n              }\n              break;\n\n            default :\n              break loop5;\n            }\n          }\n\n          match('\\''); \n           \n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:357:7: '\\\"' ( DOUBLE_STRING_CHAR )* '\\\"'\n          {\n          match('\\\"'); \n          // src/java/org/apache/lucene/expressions/js/Javascript.g:357:11: ( DOUBLE_STRING_CHAR )*\n          loop6:\n          while (true) {\n            int alt6=2;\n            int LA6_0 = input.LA(1);\n            if ( ((LA6_0 >= '\\u0000' && LA6_0 <= '!')||(LA6_0 >= '#' && LA6_0 <= '\\uFFFF')) ) {\n              alt6=1;\n            }\n\n            switch (alt6) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:357:11: DOUBLE_STRING_CHAR\n              {\n              mDOUBLE_STRING_CHAR(); \n\n              }\n              break;\n\n            default :\n              break loop6;\n            }\n          }\n\n          match('\\\"'); \n          }\n          break;\n\n      }\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"STRING\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d23d4828afa583ebf35b4a541763af6206133458":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d23d4828afa583ebf35b4a541763af6206133458"]},"commit2Childs":{"d23d4828afa583ebf35b4a541763af6206133458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["d23d4828afa583ebf35b4a541763af6206133458"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}