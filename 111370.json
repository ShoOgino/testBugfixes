{"path":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#readFile(Directory,String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#readFile(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#readFile(Directory,String).mjava","sourceNew":"  private void readFile(Directory dir, String name) throws Exception {\n    IndexInput input = dir.openInput(name, newIOContext(random));\n    try {\n      long size = dir.fileLength(name);\n      long bytesLeft = size;\n      while (bytesLeft > 0) {\n        final int numToRead;\n        if (bytesLeft < buffer.length)\n          numToRead = (int) bytesLeft;\n        else\n          numToRead = buffer.length;\n        input.readBytes(buffer, 0, numToRead, false);\n        bytesLeft -= numToRead;\n      }\n      // Don't do this in your real backups!  This is just\n      // to force a backup to take a somewhat long time, to\n      // make sure we are exercising the fact that the\n      // IndexWriter should not delete this file even when I\n      // take my time reading it.\n      Thread.sleep(1);\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  private void readFile(Directory dir, String name) throws Exception {\n    IndexInput input = dir.openInput(name, newIOContext(random));\n    try {\n      long size = dir.fileLength(name);\n      long bytesLeft = size;\n      while (bytesLeft > 0) {\n        final int numToRead;\n        if (bytesLeft < buffer.length)\n          numToRead = (int) bytesLeft;\n        else\n          numToRead = buffer.length;\n        input.readBytes(buffer, 0, numToRead, false);\n        bytesLeft -= numToRead;\n      }\n      // Don't do this in your real backups!  This is just\n      // to force a backup to take a somewhat long time, to\n      // make sure we are exercising the fact that the\n      // IndexWriter should not delete this file even when I\n      // take my time reading it.\n      Thread.sleep(1);\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#readFile(Directory,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#readFile(Directory,String).mjava","sourceNew":"  private void readFile(Directory dir, String name) throws Exception {\n    IndexInput input = dir.openInput(name, newIOContext(random()));\n    try {\n      long size = dir.fileLength(name);\n      long bytesLeft = size;\n      while (bytesLeft > 0) {\n        final int numToRead;\n        if (bytesLeft < buffer.length)\n          numToRead = (int) bytesLeft;\n        else\n          numToRead = buffer.length;\n        input.readBytes(buffer, 0, numToRead, false);\n        bytesLeft -= numToRead;\n      }\n      // Don't do this in your real backups!  This is just\n      // to force a backup to take a somewhat long time, to\n      // make sure we are exercising the fact that the\n      // IndexWriter should not delete this file even when I\n      // take my time reading it.\n      Thread.sleep(1);\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  private void readFile(Directory dir, String name) throws Exception {\n    IndexInput input = dir.openInput(name, newIOContext(random));\n    try {\n      long size = dir.fileLength(name);\n      long bytesLeft = size;\n      while (bytesLeft > 0) {\n        final int numToRead;\n        if (bytesLeft < buffer.length)\n          numToRead = (int) bytesLeft;\n        else\n          numToRead = buffer.length;\n        input.readBytes(buffer, 0, numToRead, false);\n        bytesLeft -= numToRead;\n      }\n      // Don't do this in your real backups!  This is just\n      // to force a backup to take a somewhat long time, to\n      // make sure we are exercising the fact that the\n      // IndexWriter should not delete this file even when I\n      // take my time reading it.\n      Thread.sleep(1);\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}