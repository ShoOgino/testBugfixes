{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","sourceNew":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901e951cec2e6af4e503209a6721c8834db23279","date":1420556599,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","sourceNew":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789","date":1439672757,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","sourceNew":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03e38c6374c23083c93e212a9498ff0a9c255476","date":1484767039,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","sourceNew":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public GroupComparator(Sort groupSort) {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SearchGroup.GroupComparator#GroupComparator(Sort).mjava","sourceNew":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public GroupComparator(Sort groupSort) {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public GroupComparator(Sort groupSort) throws IOException {\n      final SortField[] sortFields = groupSort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      reversed = new int[sortFields.length];\n      for (int compIDX = 0; compIDX < sortFields.length; compIDX++) {\n        final SortField sortField = sortFields[compIDX];\n        comparators[compIDX] = sortField.getComparator(1, compIDX);\n        reversed[compIDX] = sortField.getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"03e38c6374c23083c93e212a9498ff0a9c255476":["4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789":["901e951cec2e6af4e503209a6721c8834db23279"],"901e951cec2e6af4e503209a6721c8834db23279":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789","03e38c6374c23083c93e212a9498ff0a9c255476"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03e38c6374c23083c93e212a9498ff0a9c255476"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["901e951cec2e6af4e503209a6721c8834db23279"],"03e38c6374c23083c93e212a9498ff0a9c255476":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789":["03e38c6374c23083c93e212a9498ff0a9c255476","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"901e951cec2e6af4e503209a6721c8834db23279":["4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}