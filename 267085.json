{"path":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, false);\n      if (dpEnum != null) {\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, false);\n      if (dpEnum != null) {\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3128e6d07d9fef0d1aa24f58b07133c9293131b2","date":1342190719,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, false);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, false);\n      if (dpEnum != null) {\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":["5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, false);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, false);\n      if (dpEnum != null) {\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, false);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, false);\n      if (dpEnum != null) {\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"322360ac5185a8446d3e0b530b2068bef67cd3d5","date":1343669494,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, false);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":["5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, false);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, false);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc","date":1344608180,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":"  private static boolean hasPositions(Terms vector) throws IOException {\n    return vector.hasPositions();\n  }\n\n","sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":["322360ac5185a8446d3e0b530b2068bef67cd3d5","3128e6d07d9fef0d1aa24f58b07133c9293131b2","3cc749c053615f5871f3b95715fe292f34e70a53"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":"  private static boolean hasPositions(Terms vector) throws IOException {\n    return vector.hasPositions();\n  }\n\n","sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":"  private static boolean hasPositions(Terms vector) throws IOException {\n    return vector.hasPositions();\n  }\n\n","sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    final TermsEnum termsEnum = vector.iterator(null);\n    if (termsEnum.next() != null) {\n      DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, DocsAndPositionsEnum.FLAG_PAYLOADS);\n      if (dpEnum != null) {\n        int doc = dpEnum.nextDoc();\n        assert doc >= 0 && doc != DocIdSetIterator.NO_MORE_DOCS;\n        int pos = dpEnum.nextPosition();\n        if (pos >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"815287248ca7a77db68038baad5698c5767f36a7","date":1350761762,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":null,"sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    return vector.hasPositions();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e52115b56781006682fd92c6938efaf174304d","date":1351014780,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources#hasPositions(Terms).mjava","sourceNew":null,"sourceOld":"  private static boolean hasPositions(Terms vector) throws IOException {\n    return vector.hasPositions();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc":["322360ac5185a8446d3e0b530b2068bef67cd3d5"],"815287248ca7a77db68038baad5698c5767f36a7":["5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc"],"3128e6d07d9fef0d1aa24f58b07133c9293131b2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","3128e6d07d9fef0d1aa24f58b07133c9293131b2"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc"],"62e52115b56781006682fd92c6938efaf174304d":["5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc","815287248ca7a77db68038baad5698c5767f36a7"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","3128e6d07d9fef0d1aa24f58b07133c9293131b2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["fe33227f6805edab2036cbb80645cc4e2d1fa424","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["aba371508186796cc6151d8223a5b4e16d02e26e","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"322360ac5185a8446d3e0b530b2068bef67cd3d5":["3128e6d07d9fef0d1aa24f58b07133c9293131b2"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["d6f074e73200c07d54f242d3880a8da5a35ff97b","5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["815287248ca7a77db68038baad5698c5767f36a7"]},"commit2Childs":{"5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc":["815287248ca7a77db68038baad5698c5767f36a7","c7869f64c874ebf7f317d22c00baf2b6857797a6","62e52115b56781006682fd92c6938efaf174304d","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"815287248ca7a77db68038baad5698c5767f36a7":["62e52115b56781006682fd92c6938efaf174304d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3128e6d07d9fef0d1aa24f58b07133c9293131b2":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3128e6d07d9fef0d1aa24f58b07133c9293131b2","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"aba371508186796cc6151d8223a5b4e16d02e26e":["d6f074e73200c07d54f242d3880a8da5a35ff97b"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"62e52115b56781006682fd92c6938efaf174304d":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"322360ac5185a8446d3e0b530b2068bef67cd3d5":["5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","62e52115b56781006682fd92c6938efaf174304d","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}