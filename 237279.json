{"path":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","commits":[{"id":"12d40284fd9481f79444bc63bc5d13847caddd3d","date":1149902602,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#document(int).mjava","sourceNew":"  public synchronized Document document(int n, FieldSelector fieldSelector) throws IOException {\n    if (isDeleted(n))\n      throw new IllegalArgumentException\n              (\"attempt to access a deleted document\");\n    return fieldsReader.doc(n, fieldSelector);\n  }\n\n","sourceOld":"  public synchronized Document document(int n) throws IOException {\n    if (isDeleted(n))\n      throw new IllegalArgumentException\n              (\"attempt to access a deleted document\");\n    return fieldsReader.doc(n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b54a9bc667895a2095a886184bf69a3179e63df","date":1172088096,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","sourceNew":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public synchronized Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException {\n    if (isDeleted(n))\n      throw new IllegalArgumentException\n              (\"attempt to access a deleted document\");\n    return fieldsReader.doc(n, fieldSelector);\n  }\n\n","sourceOld":"  public synchronized Document document(int n, FieldSelector fieldSelector) throws IOException {\n    if (isDeleted(n))\n      throw new IllegalArgumentException\n              (\"attempt to access a deleted document\");\n    return fieldsReader.doc(n, fieldSelector);\n  }\n\n","bugFix":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"328c1568e471f0c6eaa49ec00334ca59e573710f","date":1173897963,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","sourceNew":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public synchronized Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (isDeleted(n))\n      throw new IllegalArgumentException\n              (\"attempt to access a deleted document\");\n    return fieldsReader.doc(n, fieldSelector);\n  }\n\n","sourceOld":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public synchronized Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException {\n    if (isDeleted(n))\n      throw new IllegalArgumentException\n              (\"attempt to access a deleted document\");\n    return fieldsReader.doc(n, fieldSelector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de9999a287e59e079489cd445c376fa0dab501ba","date":1229510190,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","sourceNew":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (isDeleted(n))\n      throw new IllegalArgumentException\n              (\"attempt to access a deleted document\");\n    return getFieldsReader().doc(n, fieldSelector);\n  }\n\n","sourceOld":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public synchronized Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (isDeleted(n))\n      throw new IllegalArgumentException\n              (\"attempt to access a deleted document\");\n    return fieldsReader.doc(n, fieldSelector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d736930237c54e1516a9e3bae803c92ff19ec4e5","date":1245789156,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","sourceNew":"  public Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException {\n    ensureOpen();\n    return getFieldsReader().doc(n, fieldSelector);\n  }\n\n","sourceOld":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (isDeleted(n))\n      throw new IllegalArgumentException\n              (\"attempt to access a deleted document\");\n    return getFieldsReader().doc(n, fieldSelector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","sourceNew":"  @Override\n  public Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException {\n    ensureOpen();\n    return getFieldsReader().doc(n, fieldSelector);\n  }\n\n","sourceOld":"  public Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException {\n    ensureOpen();\n    return getFieldsReader().doc(n, fieldSelector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#document(int,FieldSelector).mjava","sourceNew":"  @Override\n  public Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException {\n    ensureOpen();\n    return getFieldsReader().doc(n, fieldSelector);\n  }\n\n","sourceOld":"  @Override\n  public Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException {\n    ensureOpen();\n    return getFieldsReader().doc(n, fieldSelector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"328c1568e471f0c6eaa49ec00334ca59e573710f":["1b54a9bc667895a2095a886184bf69a3179e63df"],"1b54a9bc667895a2095a886184bf69a3179e63df":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"8a9e385641d717e641408d8fbbc62be8fc766357":["d736930237c54e1516a9e3bae803c92ff19ec4e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d736930237c54e1516a9e3bae803c92ff19ec4e5":["de9999a287e59e079489cd445c376fa0dab501ba"],"de9999a287e59e079489cd445c376fa0dab501ba":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"328c1568e471f0c6eaa49ec00334ca59e573710f":["de9999a287e59e079489cd445c376fa0dab501ba"],"1b54a9bc667895a2095a886184bf69a3179e63df":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"d736930237c54e1516a9e3bae803c92ff19ec4e5":["8a9e385641d717e641408d8fbbc62be8fc766357"],"de9999a287e59e079489cd445c376fa0dab501ba":["d736930237c54e1516a9e3bae803c92ff19ec4e5"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["1b54a9bc667895a2095a886184bf69a3179e63df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}