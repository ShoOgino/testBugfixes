{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testNeighbors().mjava","commits":[{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testNeighbors().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/TestGeoUtils#testNeighbors().mjava","sourceNew":"  public void testNeighbors() {\n    String geohash = \"gcpv\";\n    List<String> expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"gcpw\");\n    expectedNeighbors.add(\"gcpy\");\n    expectedNeighbors.add(\"u10n\");\n    expectedNeighbors.add(\"gcpt\");\n    expectedNeighbors.add(\"u10j\");\n    expectedNeighbors.add(\"gcps\");\n    expectedNeighbors.add(\"gcpu\");\n    expectedNeighbors.add(\"u10h\");\n    Collection<? super String> neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border odd geohash\n    geohash = \"u09x\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"u0c2\");\n    expectedNeighbors.add(\"u0c8\");\n    expectedNeighbors.add(\"u0cb\");\n    expectedNeighbors.add(\"u09r\");\n    expectedNeighbors.add(\"u09z\");\n    expectedNeighbors.add(\"u09q\");\n    expectedNeighbors.add(\"u09w\");\n    expectedNeighbors.add(\"u09y\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors);\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border even geohash\n    geohash = \"u09tv\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"u09wh\");\n    expectedNeighbors.add(\"u09wj\");\n    expectedNeighbors.add(\"u09wn\");\n    expectedNeighbors.add(\"u09tu\");\n    expectedNeighbors.add(\"u09ty\");\n    expectedNeighbors.add(\"u09ts\");\n    expectedNeighbors.add(\"u09tt\");\n    expectedNeighbors.add(\"u09tw\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border even and odd geohash\n    geohash = \"ezzzz\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"gbpbn\");\n    expectedNeighbors.add(\"gbpbp\");\n    expectedNeighbors.add(\"u0000\");\n    expectedNeighbors.add(\"ezzzy\");\n    expectedNeighbors.add(\"spbpb\");\n    expectedNeighbors.add(\"ezzzw\");\n    expectedNeighbors.add(\"ezzzx\");\n    expectedNeighbors.add(\"spbp8\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n  }\n\n","sourceOld":"  public void testNeighbors() {\n    String geohash = \"gcpv\";\n    List<String> expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"gcpw\");\n    expectedNeighbors.add(\"gcpy\");\n    expectedNeighbors.add(\"u10n\");\n    expectedNeighbors.add(\"gcpt\");\n    expectedNeighbors.add(\"u10j\");\n    expectedNeighbors.add(\"gcps\");\n    expectedNeighbors.add(\"gcpu\");\n    expectedNeighbors.add(\"u10h\");\n    Collection<? super String> neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border odd geohash\n    geohash = \"u09x\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"u0c2\");\n    expectedNeighbors.add(\"u0c8\");\n    expectedNeighbors.add(\"u0cb\");\n    expectedNeighbors.add(\"u09r\");\n    expectedNeighbors.add(\"u09z\");\n    expectedNeighbors.add(\"u09q\");\n    expectedNeighbors.add(\"u09w\");\n    expectedNeighbors.add(\"u09y\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors);\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border even geohash\n    geohash = \"u09tv\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"u09wh\");\n    expectedNeighbors.add(\"u09wj\");\n    expectedNeighbors.add(\"u09wn\");\n    expectedNeighbors.add(\"u09tu\");\n    expectedNeighbors.add(\"u09ty\");\n    expectedNeighbors.add(\"u09ts\");\n    expectedNeighbors.add(\"u09tt\");\n    expectedNeighbors.add(\"u09tw\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border even and odd geohash\n    geohash = \"ezzzz\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"gbpbn\");\n    expectedNeighbors.add(\"gbpbp\");\n    expectedNeighbors.add(\"u0000\");\n    expectedNeighbors.add(\"ezzzy\");\n    expectedNeighbors.add(\"spbpb\");\n    expectedNeighbors.add(\"ezzzw\");\n    expectedNeighbors.add(\"ezzzx\");\n    expectedNeighbors.add(\"spbp8\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testNeighbors().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/TestGeoUtils#testNeighbors().mjava","sourceNew":"  public void testNeighbors() {\n    String geohash = \"gcpv\";\n    List<String> expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"gcpw\");\n    expectedNeighbors.add(\"gcpy\");\n    expectedNeighbors.add(\"u10n\");\n    expectedNeighbors.add(\"gcpt\");\n    expectedNeighbors.add(\"u10j\");\n    expectedNeighbors.add(\"gcps\");\n    expectedNeighbors.add(\"gcpu\");\n    expectedNeighbors.add(\"u10h\");\n    Collection<? super String> neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border odd geohash\n    geohash = \"u09x\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"u0c2\");\n    expectedNeighbors.add(\"u0c8\");\n    expectedNeighbors.add(\"u0cb\");\n    expectedNeighbors.add(\"u09r\");\n    expectedNeighbors.add(\"u09z\");\n    expectedNeighbors.add(\"u09q\");\n    expectedNeighbors.add(\"u09w\");\n    expectedNeighbors.add(\"u09y\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors);\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border even geohash\n    geohash = \"u09tv\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"u09wh\");\n    expectedNeighbors.add(\"u09wj\");\n    expectedNeighbors.add(\"u09wn\");\n    expectedNeighbors.add(\"u09tu\");\n    expectedNeighbors.add(\"u09ty\");\n    expectedNeighbors.add(\"u09ts\");\n    expectedNeighbors.add(\"u09tt\");\n    expectedNeighbors.add(\"u09tw\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border even and odd geohash\n    geohash = \"ezzzz\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"gbpbn\");\n    expectedNeighbors.add(\"gbpbp\");\n    expectedNeighbors.add(\"u0000\");\n    expectedNeighbors.add(\"ezzzy\");\n    expectedNeighbors.add(\"spbpb\");\n    expectedNeighbors.add(\"ezzzw\");\n    expectedNeighbors.add(\"ezzzx\");\n    expectedNeighbors.add(\"spbp8\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n  }\n\n","sourceOld":"  public void testNeighbors() {\n    String geohash = \"gcpv\";\n    List<String> expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"gcpw\");\n    expectedNeighbors.add(\"gcpy\");\n    expectedNeighbors.add(\"u10n\");\n    expectedNeighbors.add(\"gcpt\");\n    expectedNeighbors.add(\"u10j\");\n    expectedNeighbors.add(\"gcps\");\n    expectedNeighbors.add(\"gcpu\");\n    expectedNeighbors.add(\"u10h\");\n    Collection<? super String> neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border odd geohash\n    geohash = \"u09x\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"u0c2\");\n    expectedNeighbors.add(\"u0c8\");\n    expectedNeighbors.add(\"u0cb\");\n    expectedNeighbors.add(\"u09r\");\n    expectedNeighbors.add(\"u09z\");\n    expectedNeighbors.add(\"u09q\");\n    expectedNeighbors.add(\"u09w\");\n    expectedNeighbors.add(\"u09y\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors);\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border even geohash\n    geohash = \"u09tv\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"u09wh\");\n    expectedNeighbors.add(\"u09wj\");\n    expectedNeighbors.add(\"u09wn\");\n    expectedNeighbors.add(\"u09tu\");\n    expectedNeighbors.add(\"u09ty\");\n    expectedNeighbors.add(\"u09ts\");\n    expectedNeighbors.add(\"u09tt\");\n    expectedNeighbors.add(\"u09tw\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border even and odd geohash\n    geohash = \"ezzzz\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"gbpbn\");\n    expectedNeighbors.add(\"gbpbp\");\n    expectedNeighbors.add(\"u0000\");\n    expectedNeighbors.add(\"ezzzy\");\n    expectedNeighbors.add(\"spbpb\");\n    expectedNeighbors.add(\"ezzzw\");\n    expectedNeighbors.add(\"ezzzx\");\n    expectedNeighbors.add(\"spbp8\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testNeighbors().mjava","sourceNew":null,"sourceOld":"  public void testNeighbors() {\n    String geohash = \"gcpv\";\n    List<String> expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"gcpw\");\n    expectedNeighbors.add(\"gcpy\");\n    expectedNeighbors.add(\"u10n\");\n    expectedNeighbors.add(\"gcpt\");\n    expectedNeighbors.add(\"u10j\");\n    expectedNeighbors.add(\"gcps\");\n    expectedNeighbors.add(\"gcpu\");\n    expectedNeighbors.add(\"u10h\");\n    Collection<? super String> neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border odd geohash\n    geohash = \"u09x\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"u0c2\");\n    expectedNeighbors.add(\"u0c8\");\n    expectedNeighbors.add(\"u0cb\");\n    expectedNeighbors.add(\"u09r\");\n    expectedNeighbors.add(\"u09z\");\n    expectedNeighbors.add(\"u09q\");\n    expectedNeighbors.add(\"u09w\");\n    expectedNeighbors.add(\"u09y\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors);\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border even geohash\n    geohash = \"u09tv\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"u09wh\");\n    expectedNeighbors.add(\"u09wj\");\n    expectedNeighbors.add(\"u09wn\");\n    expectedNeighbors.add(\"u09tu\");\n    expectedNeighbors.add(\"u09ty\");\n    expectedNeighbors.add(\"u09ts\");\n    expectedNeighbors.add(\"u09tt\");\n    expectedNeighbors.add(\"u09tw\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n\n    // Border even and odd geohash\n    geohash = \"ezzzz\";\n    expectedNeighbors = new ArrayList<>();\n    expectedNeighbors.add(\"gbpbn\");\n    expectedNeighbors.add(\"gbpbp\");\n    expectedNeighbors.add(\"u0000\");\n    expectedNeighbors.add(\"ezzzy\");\n    expectedNeighbors.add(\"spbpb\");\n    expectedNeighbors.add(\"ezzzw\");\n    expectedNeighbors.add(\"ezzzx\");\n    expectedNeighbors.add(\"spbp8\");\n    neighbors = new ArrayList<>();\n    GeoHashUtils.addNeighbors(geohash, neighbors );\n    assertEquals(expectedNeighbors, neighbors);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec996bf2daff09d61a876319e8fae4aebbea58e3":["937923083e4d137932336fc80f3d78758ff698a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec996bf2daff09d61a876319e8fae4aebbea58e3"]},"commit2Childs":{"ec996bf2daff09d61a876319e8fae4aebbea58e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"937923083e4d137932336fc80f3d78758ff698a6":["ec996bf2daff09d61a876319e8fae4aebbea58e3","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}