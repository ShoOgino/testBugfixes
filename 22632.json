{"path":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupedBasedFaceting().mjava","commits":[{"id":"3738f7d06920ae25ab2884f4efd80c42e95d6271","date":1312707753,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupedBasedFaceting().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGroupingGroupedBasedFaceting() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"value1_s1\", \"1\", \"value2_i\", \"1\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"value1_s1\", \"1\", \"value2_i\", \"2\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(commit());\n    assertU(add(doc(\"id\", \"3\", \"value1_s1\", \"2\", \"value2_i\", \"3\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"value1_s1\", \"1\", \"value2_i\", \"4\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"5\", \"value1_s1\", \"2\", \"value2_i\", \"5\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(commit());\n\n    // Facet counts based on documents\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"false\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups and with group.func. This should trigger FunctionAllGroupHeadsCollector\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.func\",\n        \"strdist(1,value1_s1,edit)\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'strdist(1,value1_s1,edit)':{'matches':5,'groups':[{'groupValue':1.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups without sort on an int field.\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':5,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8af6befbf8d7be9538fb4fb8a9d64a1aff18e772","date":1316691408,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupedBasedFaceting().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupedBasedFaceting().mjava","sourceNew":"  @Test\n  public void testGroupingGroupedBasedFaceting() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"value1_s1\", \"1\", \"value2_i\", \"1\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"value1_s1\", \"1\", \"value2_i\", \"2\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(commit());\n    assertU(add(doc(\"id\", \"3\", \"value1_s1\", \"2\", \"value2_i\", \"3\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"value1_s1\", \"1\", \"value2_i\", \"4\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"5\", \"value1_s1\", \"2\", \"value2_i\", \"5\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(commit());\n\n    // Facet counts based on documents\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"false\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups and with group.func. This should trigger FunctionAllGroupHeadsCollector\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.func\",\n        \"strdist(1,value1_s1,edit)\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'strdist(1,value1_s1,edit)':{'matches':5,'groups':[{'groupValue':1.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups without sort on an int field.\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':5,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=false\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"false\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.func\", \"sub(value4_i,1)\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'sub(value4_i,1)':{'matches':2,'groups':[{'groupValue':1.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingGroupedBasedFaceting() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"value1_s1\", \"1\", \"value2_i\", \"1\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"value1_s1\", \"1\", \"value2_i\", \"2\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(commit());\n    assertU(add(doc(\"id\", \"3\", \"value1_s1\", \"2\", \"value2_i\", \"3\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"value1_s1\", \"1\", \"value2_i\", \"4\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"5\", \"value1_s1\", \"2\", \"value2_i\", \"5\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(commit());\n\n    // Facet counts based on documents\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"false\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups and with group.func. This should trigger FunctionAllGroupHeadsCollector\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.func\",\n        \"strdist(1,value1_s1,edit)\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'strdist(1,value1_s1,edit)':{'matches':5,'groups':[{'groupValue':1.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups without sort on an int field.\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':5,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd","date":1406137403,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupedBasedFaceting().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupedBasedFaceting().mjava","sourceNew":"  @Test\n  public void testGroupingGroupedBasedFaceting() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"value1_s1\", \"1\", \"value2_i\", \"1\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"value1_s1\", \"1\", \"value2_i\", \"2\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(commit());\n    assertU(add(doc(\"id\", \"3\", \"value1_s1\", \"2\", \"value2_i\", \"3\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"value1_s1\", \"1\", \"value2_i\", \"4\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"5\", \"value1_s1\", \"2\", \"value2_i\", \"5\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(commit());\n\n    // Facet counts based on documents\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"false\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Facet counts based on groups\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Facet counts based on groups and with group.func. This should trigger FunctionAllGroupHeadsCollector\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.func\",\n        \"strdist(1,value1_s1,edit)\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'strdist(1,value1_s1,edit)':{'matches':5,'groups':[{'groupValue':1.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Facet counts based on groups without sort on an int field.\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':5,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=false\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"false\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.func\", \"sub(value4_i,1)\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'sub(value4_i,1)':{'matches':2,'groups':[{'groupValue':1.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingGroupedBasedFaceting() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"value1_s1\", \"1\", \"value2_i\", \"1\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"value1_s1\", \"1\", \"value2_i\", \"2\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(commit());\n    assertU(add(doc(\"id\", \"3\", \"value1_s1\", \"2\", \"value2_i\", \"3\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"value1_s1\", \"1\", \"value2_i\", \"4\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"5\", \"value1_s1\", \"2\", \"value2_i\", \"5\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(commit());\n\n    // Facet counts based on documents\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"false\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups and with group.func. This should trigger FunctionAllGroupHeadsCollector\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.func\",\n        \"strdist(1,value1_s1,edit)\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'strdist(1,value1_s1,edit)':{'matches':5,'groups':[{'groupValue':1.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Facet counts based on groups without sort on an int field.\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':5,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=false\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"false\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.func\", \"sub(value4_i,1)\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'sub(value4_i,1)':{'matches':2,'groups':[{'groupValue':1.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59d82b0be40ecfcc2c94c776b324e0903a62b844","date":1423535462,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupedBasedFaceting().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupedBasedFaceting().mjava","sourceNew":"  @Test\n  public void testGroupingGroupedBasedFaceting() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"value1_s1\", \"1\", \"value2_i\", \"1\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"value1_s1\", \"1\", \"value2_i\", \"2\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(commit());\n    assertU(add(doc(\"id\", \"3\", \"value1_s1\", \"2\", \"value2_i\", \"3\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"value1_s1\", \"1\", \"value2_i\", \"4\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"5\", \"value1_s1\", \"2\", \"value2_i\", \"5\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(commit());\n\n    // Facet counts based on documents\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"false\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Facet counts based on groups\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Facet counts based on groups and with group.func. This should trigger FunctionAllGroupHeadsCollector\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.func\",\n        \"strdist(1,value1_s1,edit)\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'strdist(1,value1_s1,edit)':{'matches':5,'groups':[{'groupValue':1.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Facet counts based on groups without sort on an int field.\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':5,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Multi select facets AND group.truncate=false\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"false\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.func\", \"sub(value4_i,1)\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'sub(value4_i,1)':{'matches':2,'groups':[{'groupValue':1.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingGroupedBasedFaceting() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"value1_s1\", \"1\", \"value2_i\", \"1\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"value1_s1\", \"1\", \"value2_i\", \"2\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(commit());\n    assertU(add(doc(\"id\", \"3\", \"value1_s1\", \"2\", \"value2_i\", \"3\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"value1_s1\", \"1\", \"value2_i\", \"4\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"5\", \"value1_s1\", \"2\", \"value2_i\", \"5\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(commit());\n\n    // Facet counts based on documents\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"false\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Facet counts based on groups\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Facet counts based on groups and with group.func. This should trigger FunctionAllGroupHeadsCollector\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.func\",\n        \"strdist(1,value1_s1,edit)\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'strdist(1,value1_s1,edit)':{'matches':5,'groups':[{'groupValue':1.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Facet counts based on groups without sort on an int field.\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':5,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=false\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"false\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.func\", \"sub(value4_i,1)\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'sub(value4_i,1)':{'matches':2,'groups':[{'groupValue':1.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},'facet_dates':{},'facet_ranges':{},'facet_intervals':{}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"640ded7811e1b7d29236a5e2934ec3cd266a8199","date":1588973147,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupedBasedFaceting().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingGroupedBasedFaceting().mjava","sourceNew":"  @Test\n  public void testGroupingGroupedBasedFaceting() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"value1_s1\", \"1\", \"value2_i\", \"1\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"value1_s1\", \"1\", \"value2_i\", \"2\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(commit());\n    assertU(add(doc(\"id\", \"3\", \"value1_s1\", \"2\", \"value2_i\", \"3\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"value1_s1\", \"1\", \"value2_i\", \"4\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"5\", \"value1_s1\", \"2\", \"value2_i\", \"5\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(commit());\n\n    // Facet counts based on documents\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"false\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Facet counts based on groups\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Facet counts based on groups and with group.func. This should trigger FunctionAllGroupHeadsCollector\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.func\",\n        \"strdist(1,value1_s1,edit)\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'strdist(1,value1_s1,edit)':{'matches':5,'groups':[{'groupValue':1.0,'doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Facet counts based on groups without sort on an int field.\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':5,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,numFoundExact:true,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Multi select facets AND group.truncate=false\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"false\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,numFoundExact:true,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.func\", \"sub(value4_i,1)\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'sub(value4_i,1)':{'matches':2,'groups':[{'groupValue':1.0,'doclist':{'numFound':2,'start':0,numFoundExact:true,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingGroupedBasedFaceting() throws Exception {\n    assertU(add(doc(\"id\", \"1\", \"value1_s1\", \"1\", \"value2_i\", \"1\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"2\", \"value1_s1\", \"1\", \"value2_i\", \"2\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(commit());\n    assertU(add(doc(\"id\", \"3\", \"value1_s1\", \"2\", \"value2_i\", \"3\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(add(doc(\"id\", \"4\", \"value1_s1\", \"1\", \"value2_i\", \"4\", \"value3_s1\", \"a\", \"value4_i\", \"1\")));\n    assertU(add(doc(\"id\", \"5\", \"value1_s1\", \"2\", \"value2_i\", \"5\", \"value3_s1\", \"b\", \"value4_i\", \"2\")));\n    assertU(commit());\n\n    // Facet counts based on documents\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"false\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Facet counts based on groups\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.field\",\n        \"value1_s1\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value1_s1':{'matches':5,'groups':[{'groupValue':'1','doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Facet counts based on groups and with group.func. This should trigger FunctionAllGroupHeadsCollector\n    req = req(\"q\", \"*:*\", \"sort\", \"value2_i asc\", \"rows\", \"1\", \"group\", \"true\", \"group.func\",\n        \"strdist(1,value1_s1,edit)\", \"fl\", \"id\", \"facet\", \"true\", \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'strdist(1,value1_s1,edit)':{'matches':5,'groups':[{'groupValue':1.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Facet counts based on groups without sort on an int field.\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"value3_s1\", \"group.truncate\", \"true\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':5,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'1'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Multi select facets AND group.truncate=false\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.field\", \"value4_i\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"false\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'value4_i':{'matches':2,'groups':[{'groupValue':2,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',3,'b',2]},\" + EMPTY_FACETS + \"}\"\n    );\n\n    // Multi select facets AND group.truncate=true\n    req = req(\"q\", \"*:*\", \"rows\", \"1\", \"group\", \"true\", \"group.func\", \"sub(value4_i,1)\", \"fl\", \"id\", \"facet\", \"true\",\n        \"facet.field\", \"{!ex=v}value3_s1\", \"group.truncate\", \"true\", \"fq\", \"{!tag=v}value3_s1:b\");\n    assertJQ(\n        req,\n        \"/grouped=={'sub(value4_i,1)':{'matches':2,'groups':[{'groupValue':1.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}]}}\",\n        \"/facet_counts=={'facet_queries':{},'facet_fields':{'value3_s1':['a',1,'b',1]},\" + EMPTY_FACETS + \"}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59d82b0be40ecfcc2c94c776b324e0903a62b844":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"3738f7d06920ae25ab2884f4efd80c42e95d6271":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"640ded7811e1b7d29236a5e2934ec3cd266a8199":["59d82b0be40ecfcc2c94c776b324e0903a62b844"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["8af6befbf8d7be9538fb4fb8a9d64a1aff18e772"],"8af6befbf8d7be9538fb4fb8a9d64a1aff18e772":["3738f7d06920ae25ab2884f4efd80c42e95d6271"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["640ded7811e1b7d29236a5e2934ec3cd266a8199"]},"commit2Childs":{"59d82b0be40ecfcc2c94c776b324e0903a62b844":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"3738f7d06920ae25ab2884f4efd80c42e95d6271":["8af6befbf8d7be9538fb4fb8a9d64a1aff18e772"],"640ded7811e1b7d29236a5e2934ec3cd266a8199":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3738f7d06920ae25ab2884f4efd80c42e95d6271"],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["59d82b0be40ecfcc2c94c776b324e0903a62b844"],"8af6befbf8d7be9538fb4fb8a9d64a1aff18e772":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}