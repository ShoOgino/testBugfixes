{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(FacetsConfig,Query).mjava","commits":[{"id":"9fdb15e93058f718a65d564872aadbed5ca78296","date":1384720267,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(FacetsConfig,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(Query).mjava","sourceNew":"  /**\n   * Creates a new {@code SimpleDrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public SimpleDrillDownQuery(FacetsConfig config, Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@code SimpleDrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public SimpleDrillDownQuery(Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(FacetsConfig,Query).mjava","sourceNew":"  /**\n   * Creates a new {@code DrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public DrillDownQuery(FacetsConfig config, Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@code SimpleDrillDownQuery} over the given base query. Can be\n   * {@code null}, in which case the result {@link Query} from\n   * {@link #rewrite(IndexReader)} will be a pure browsing query, filtering on\n   * the added categories only.\n   */\n  public SimpleDrillDownQuery(FacetsConfig config, Query baseQuery) {\n    query = new BooleanQuery(true); // disable coord\n    if (baseQuery != null) {\n      query.add(baseQuery, Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fdb15e93058f718a65d564872aadbed5ca78296":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["9fdb15e93058f718a65d564872aadbed5ca78296"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9fdb15e93058f718a65d564872aadbed5ca78296":["21d36d0db865f7b84026b447bec653469a6e66df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fdb15e93058f718a65d564872aadbed5ca78296","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}