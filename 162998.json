{"path":"lucene/core/src/java/org/apache/lucene/search/Query#extractTerms(Set[Term]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Query#extractTerms(Set[Term]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Query#extractTerms(Set[Term]).mjava","sourceNew":"  /**\n   * Expert: adds all terms occurring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set<Term> terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":"  /**\n   * Expert: adds all terms occurring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set<Term> terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2713584a660051cd646423be682771e3bbd99985","date":1425046322,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Query#extractTerms(Set[Term]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Query#extractTerms(Set[Term]).mjava","sourceNew":"  /**\n   * Expert: adds all terms occurring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set<Term> terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException(getClass().getName());\n  }\n\n","sourceOld":"  /**\n   * Expert: adds all terms occurring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set<Term> terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Query#extractTerms(Set[Term]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Query#extractTerms(Set[Term]).mjava","sourceNew":"  /**\n   * Expert: adds all terms occurring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set<Term> terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException(getClass().getName());\n  }\n\n","sourceOld":"  /**\n   * Expert: adds all terms occurring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set<Term> terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05c52ac194342b760b830342ee8423fcf00e54d0","date":1429197275,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/Query#extractTerms(Set[Term]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Expert: adds all terms occurring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set<Term> terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException(getClass().getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2713584a660051cd646423be682771e3bbd99985"],"2713584a660051cd646423be682771e3bbd99985":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05c52ac194342b760b830342ee8423fcf00e54d0":["2713584a660051cd646423be682771e3bbd99985"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05c52ac194342b760b830342ee8423fcf00e54d0"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2713584a660051cd646423be682771e3bbd99985":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","05c52ac194342b760b830342ee8423fcf00e54d0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2713584a660051cd646423be682771e3bbd99985"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05c52ac194342b760b830342ee8423fcf00e54d0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}