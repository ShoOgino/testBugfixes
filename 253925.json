{"path":"lucene/test-framework/src/java/org/apache/lucene/store/TestHelper#isSimpleFSIndexInputClone(IndexInput).mjava","commits":[{"id":"e92d5794f857688c529ea7d229b3d1605411101c","date":1392773920,"type":1,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/TestHelper#isSimpleFSIndexInputClone(IndexInput).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/_TestHelper#isSimpleFSIndexInputClone(IndexInput).mjava","sourceNew":"    /** Returns true if the provided input stream is an SimpleFSIndexInput and\n     *  is a clone, that is it does not own its underlying file descriptor.\n     */\n    public static boolean isSimpleFSIndexInputClone(IndexInput is) {\n        if (isSimpleFSIndexInput(is)) {\n            return ((SimpleFSIndexInput) is).isClone;\n        } else {\n            return false;\n        }\n    }\n\n","sourceOld":"    /** Returns true if the provided input stream is an SimpleFSIndexInput and\n     *  is a clone, that is it does not own its underlying file descriptor.\n     */\n    public static boolean isSimpleFSIndexInputClone(IndexInput is) {\n        if (isSimpleFSIndexInput(is)) {\n            return ((SimpleFSIndexInput) is).isClone;\n        } else {\n            return false;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22c378dfd7d922a48b48093933404133eb253fe7","date":1410711399,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/TestHelper#isSimpleFSIndexInputClone(IndexInput).mjava","sourceNew":null,"sourceOld":"    /** Returns true if the provided input stream is an SimpleFSIndexInput and\n     *  is a clone, that is it does not own its underlying file descriptor.\n     */\n    public static boolean isSimpleFSIndexInputClone(IndexInput is) {\n        if (isSimpleFSIndexInput(is)) {\n            return ((SimpleFSIndexInput) is).isClone;\n        } else {\n            return false;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22c378dfd7d922a48b48093933404133eb253fe7":["e92d5794f857688c529ea7d229b3d1605411101c"],"e92d5794f857688c529ea7d229b3d1605411101c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22c378dfd7d922a48b48093933404133eb253fe7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e92d5794f857688c529ea7d229b3d1605411101c"],"22c378dfd7d922a48b48093933404133eb253fe7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e92d5794f857688c529ea7d229b3d1605411101c":["22c378dfd7d922a48b48093933404133eb253fe7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}