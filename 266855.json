{"path":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoinScorer#testScoreNone().mjava","commits":[{"id":"f625a75e1debd4c2bf7b827c6f8734582741d668","date":1554470649,"type":0,"author":"jimczi","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoinScorer#testScoreNone().mjava","pathOld":"/dev/null","sourceNew":"  public void testScoreNone() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig().setMergePolicy(\n          // retain doc id order\n          newLogMergePolicy(random().nextBoolean())\n        )\n    );\n    List<Document> docs = new ArrayList<>();\n    for (int i = 0; i < 10; i++) {\n      docs.clear();\n      for (int j = 0; j < i; j++) {\n        Document child = new Document();\n        child.add(newStringField(\"value\", Integer.toString(j), Field.Store.YES));\n        docs.add(child);\n      }\n      Document parent = new Document();\n      parent.add(newStringField(\"docType\", \"parent\", Field.Store.NO));\n      parent.add(newStringField(\"value\", Integer.toString(i), Field.Store.NO));\n      docs.add(parent);\n      w.addDocuments(docs);\n    }\n    w.forceMerge(1);\n\n    IndexReader reader = w.getReader();\n    w.close();\n    IndexSearcher searcher = newSearcher(reader);\n\n    // Create a filter that defines \"parent\" documents in the index - in this case resumes\n    BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"docType\", \"parent\")));\n    CheckJoinIndex.check(reader, parentsFilter);\n\n    Query childQuery = new MatchAllDocsQuery();\n    ToParentBlockJoinQuery query = new ToParentBlockJoinQuery(childQuery, parentsFilter,\n        org.apache.lucene.search.join.ScoreMode.None);\n\n    Weight weight = searcher.createWeight(searcher.rewrite(query), ScoreMode.TOP_SCORES, 1);\n    LeafReaderContext context = searcher.getIndexReader().leaves().get(0);\n\n    Scorer scorer = weight.scorer(context);\n    BitSet bits = parentsFilter.getBitSet(reader.leaves().get(0));\n    int parent = 0;\n    for (int i = 0; i < 9; i++) {\n      parent = bits.nextSetBit(parent + 1);\n      assertEquals(parent, scorer.iterator().nextDoc());\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, scorer.iterator().nextDoc());\n\n    scorer = weight.scorer(context);\n    scorer.setMinCompetitiveScore(0f);\n    parent = 0;\n    for (int i = 0; i < 9; i++) {\n      parent = bits.nextSetBit(parent + 1);\n      assertEquals(parent, scorer.iterator().nextDoc());\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, scorer.iterator().nextDoc());\n\n    scorer = weight.scorer(context);\n    scorer.setMinCompetitiveScore(Math.nextUp(0f));\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, scorer.iterator().nextDoc());\n\n    scorer = weight.scorer(context);\n    assertEquals(2, scorer.iterator().nextDoc());\n    scorer.setMinCompetitiveScore(Math.nextUp(0f));\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, scorer.iterator().nextDoc());\n\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f625a75e1debd4c2bf7b827c6f8734582741d668":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f625a75e1debd4c2bf7b827c6f8734582741d668"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f625a75e1debd4c2bf7b827c6f8734582741d668"],"f625a75e1debd4c2bf7b827c6f8734582741d668":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}