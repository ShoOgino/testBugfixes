{"path":"solr/core/src/java/org/apache/solr/rest/schema/BaseSchemaResource#handleException(Logger).mjava","commits":[{"id":"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd","date":1364185773,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/BaseSchemaResource#handleException(Logger).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/BaseSchemaResource#handleException(Logger).mjava","sourceNew":"  /**\n   * If there is an exception on the SolrResponse:\n   * <ul>\n   *   <li>error info is added to the SolrResponse;</li>\n   *   <li>the response status code is set to the error code from the exception; and</li>\n   *   <li>the exception message is added to the list of things to be logged.</li>\n   * </ul>\n   */\n  protected void handleException(Logger log) {\n    Exception exception = getSolrResponse().getException();\n    if (null != exception) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(exception, info, log);\n      setStatus(Status.valueOf(code));\n      getSolrResponse().add(\"error\", info);\n      String message = (String)info.get(\"msg\");\n      if (null != message && ! message.trim().isEmpty()) {\n        getSolrResponse().getToLog().add(\"msg\", \"{\" + message.trim() + \"}\");\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * If there is an exception on the SolrResponse:\n   * <ul>\n   *   <li>error info is added to the SolrResponse;</li>\n   *   <li>the response status code is set to the error code from the exception; and</li>\n   *   <li>the exception message is added to the list of things to be logged.</li>\n   * </ul>\n   */\n  protected void handleException(Logger log) {\n    Exception exception = getSolrResponse().getException();\n    if (null != exception) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(exception, info, log);\n      setStatus(Status.valueOf(code));\n      getSolrResponse().add(\"error\", info);\n      String message = (String)info.get(\"msg\");\n      if (null != message && ! message.trim().isEmpty()) {\n        getSolrResponse().getToLog().add(\"msg\", \"{\" + message.trim() + \"}\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/BaseSolrResource#handleException(Logger).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/BaseSchemaResource#handleException(Logger).mjava","sourceNew":"  /**\n   * If there is an exception on the SolrResponse:\n   * <ul>\n   *   <li>error info is added to the SolrResponse;</li>\n   *   <li>the response status code is set to the error code from the exception; and</li>\n   *   <li>the exception message is added to the list of things to be logged.</li>\n   * </ul>\n   */\n  protected void handleException(Logger log) {\n    Exception exception = getSolrResponse().getException();\n    if (null != exception) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(exception, info, log);\n      setStatus(Status.valueOf(code));\n      getSolrResponse().add(\"error\", info);\n      String message = (String)info.get(\"msg\");\n      if (null != message && ! message.trim().isEmpty()) {\n        getSolrResponse().getToLog().add(\"msg\", \"{\" + message.trim() + \"}\");\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * If there is an exception on the SolrResponse:\n   * <ul>\n   *   <li>error info is added to the SolrResponse;</li>\n   *   <li>the response status code is set to the error code from the exception; and</li>\n   *   <li>the exception message is added to the list of things to be logged.</li>\n   * </ul>\n   */\n  protected void handleException(Logger log) {\n    Exception exception = getSolrResponse().getException();\n    if (null != exception) {\n      NamedList info = new SimpleOrderedMap();\n      int code = ResponseUtils.getErrorInfo(exception, info, log);\n      setStatus(Status.valueOf(code));\n      getSolrResponse().add(\"error\", info);\n      String message = (String)info.get(\"msg\");\n      if (null != message && ! message.trim().isEmpty()) {\n        getSolrResponse().getToLog().add(\"msg\", \"{\" + message.trim() + \"}\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"]},"commit2Childs":{"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}