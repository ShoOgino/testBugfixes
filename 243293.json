{"path":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setQuery(ResponseBuilder,Elevation).mjava","commits":[{"id":"2ad458affd82a1d762eb506003907d9363a333cb","date":1528558344,"type":0,"author":"broustant","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setQuery(ResponseBuilder,Elevation).mjava","pathOld":"/dev/null","sourceNew":"  private void setQuery(ResponseBuilder rb, Elevation elevation) {\n    rb.req.getContext().put(BOOSTED, elevation.elevatedIds);\n\n    // Change the query to insert forced documents\n    SolrParams params = rb.req.getParams();\n    if (params.getBool(QueryElevationParams.EXCLUSIVE, false)) {\n      // We only want these elevated results\n      rb.setQuery(new BoostQuery(elevation.includeQuery, 0f));\n    } else {\n      BooleanQuery.Builder queryBuilder = new BooleanQuery.Builder();\n      queryBuilder.add(rb.getQuery(), BooleanClause.Occur.SHOULD);\n      queryBuilder.add(new BoostQuery(elevation.includeQuery, 0f), BooleanClause.Occur.SHOULD);\n      if (elevation.excludeQueries != null) {\n        if (params.getBool(QueryElevationParams.MARK_EXCLUDES, false)) {\n          // We are only going to mark items as excluded, not actually exclude them.\n          // This works with the EditorialMarkerFactory.\n          rb.req.getContext().put(EXCLUDED, elevation.excludedIds);\n        } else {\n          for (TermQuery tq : elevation.excludeQueries) {\n            queryBuilder.add(tq, BooleanClause.Occur.MUST_NOT);\n          }\n        }\n      }\n      rb.setQuery(queryBuilder.build());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setQuery(ResponseBuilder,Elevation).mjava","pathOld":"/dev/null","sourceNew":"  private void setQuery(ResponseBuilder rb, Elevation elevation) {\n    rb.req.getContext().put(BOOSTED, elevation.elevatedIds);\n\n    // Change the query to insert forced documents\n    SolrParams params = rb.req.getParams();\n    if (params.getBool(QueryElevationParams.EXCLUSIVE, false)) {\n      // We only want these elevated results\n      rb.setQuery(new BoostQuery(elevation.includeQuery, 0f));\n    } else {\n      BooleanQuery.Builder queryBuilder = new BooleanQuery.Builder();\n      queryBuilder.add(rb.getQuery(), BooleanClause.Occur.SHOULD);\n      queryBuilder.add(new BoostQuery(elevation.includeQuery, 0f), BooleanClause.Occur.SHOULD);\n      if (elevation.excludeQueries != null) {\n        if (params.getBool(QueryElevationParams.MARK_EXCLUDES, false)) {\n          // We are only going to mark items as excluded, not actually exclude them.\n          // This works with the EditorialMarkerFactory.\n          rb.req.getContext().put(EXCLUDED, elevation.excludedIds);\n        } else {\n          for (TermQuery tq : elevation.excludeQueries) {\n            queryBuilder.add(tq, BooleanClause.Occur.MUST_NOT);\n          }\n        }\n      }\n      rb.setQuery(queryBuilder.build());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setQuery(ResponseBuilder,Elevation).mjava","pathOld":"/dev/null","sourceNew":"  private void setQuery(ResponseBuilder rb, Elevation elevation) {\n    rb.req.getContext().put(BOOSTED, elevation.elevatedIds);\n\n    // Change the query to insert forced documents\n    SolrParams params = rb.req.getParams();\n    if (params.getBool(QueryElevationParams.EXCLUSIVE, false)) {\n      // We only want these elevated results\n      rb.setQuery(new BoostQuery(elevation.includeQuery, 0f));\n    } else {\n      BooleanQuery.Builder queryBuilder = new BooleanQuery.Builder();\n      queryBuilder.add(rb.getQuery(), BooleanClause.Occur.SHOULD);\n      queryBuilder.add(new BoostQuery(elevation.includeQuery, 0f), BooleanClause.Occur.SHOULD);\n      if (elevation.excludeQueries != null) {\n        if (params.getBool(QueryElevationParams.MARK_EXCLUDES, false)) {\n          // We are only going to mark items as excluded, not actually exclude them.\n          // This works with the EditorialMarkerFactory.\n          rb.req.getContext().put(EXCLUDED, elevation.excludedIds);\n        } else {\n          for (TermQuery tq : elevation.excludeQueries) {\n            queryBuilder.add(tq, BooleanClause.Occur.MUST_NOT);\n          }\n        }\n      }\n      rb.setQuery(queryBuilder.build());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2ad458affd82a1d762eb506003907d9363a333cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ad458affd82a1d762eb506003907d9363a333cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ad458affd82a1d762eb506003907d9363a333cb"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2ad458affd82a1d762eb506003907d9363a333cb"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","2ad458affd82a1d762eb506003907d9363a333cb","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"2ad458affd82a1d762eb506003907d9363a333cb":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}