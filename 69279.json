{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestDictionary#testInvalidFlags().mjava","commits":[{"id":"e73bbafcc4dd7ca034a0e425c986783b30785076","date":1394553158,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestDictionary#testInvalidFlags().mjava","pathOld":"/dev/null","sourceNew":"  // malformed flags causes ParseException\n  public void testInvalidFlags() throws Exception {\n    InputStream affixStream = getClass().getResourceAsStream(\"broken-flags.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"simple.dic\");\n    \n    try {\n      new Dictionary(affixStream, dictStream);\n      fail(\"didn't get expected exception\");\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().startsWith(\"expected only one flag\"));\n    }\n    \n    affixStream.close();\n    dictStream.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestDictionary#testInvalidFlags().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestDictionary#testInvalidFlags().mjava","sourceNew":"  // malformed flags causes ParseException\n  public void testInvalidFlags() throws Exception {\n    InputStream affixStream = getClass().getResourceAsStream(\"broken-flags.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"simple.dic\");\n    Directory tempDir = getDirectory();\n    \n    try {\n      new Dictionary(tempDir, \"dictionary\", affixStream, dictStream);\n      fail(\"didn't get expected exception\");\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().startsWith(\"expected only one flag\"));\n    }\n    \n    affixStream.close();\n    dictStream.close();\n    tempDir.close();\n  }\n\n","sourceOld":"  // malformed flags causes ParseException\n  public void testInvalidFlags() throws Exception {\n    InputStream affixStream = getClass().getResourceAsStream(\"broken-flags.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"simple.dic\");\n    \n    try {\n      new Dictionary(affixStream, dictStream);\n      fail(\"didn't get expected exception\");\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().startsWith(\"expected only one flag\"));\n    }\n    \n    affixStream.close();\n    dictStream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestDictionary#testInvalidFlags().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestDictionary#testInvalidFlags().mjava","sourceNew":"  // malformed flags causes ParseException\n  public void testInvalidFlags() throws Exception {\n    InputStream affixStream = getClass().getResourceAsStream(\"broken-flags.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"simple.dic\");\n    Directory tempDir = getDirectory();\n    \n    Exception expected = expectThrows(Exception.class, () -> {\n      new Dictionary(tempDir, \"dictionary\", affixStream, dictStream);\n    });\n    assertTrue(expected.getMessage().startsWith(\"expected only one flag\"));\n    \n    affixStream.close();\n    dictStream.close();\n    tempDir.close();\n  }\n\n","sourceOld":"  // malformed flags causes ParseException\n  public void testInvalidFlags() throws Exception {\n    InputStream affixStream = getClass().getResourceAsStream(\"broken-flags.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"simple.dic\");\n    Directory tempDir = getDirectory();\n    \n    try {\n      new Dictionary(tempDir, \"dictionary\", affixStream, dictStream);\n      fail(\"didn't get expected exception\");\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().startsWith(\"expected only one flag\"));\n    }\n    \n    affixStream.close();\n    dictStream.close();\n    tempDir.close();\n  }\n\n","bugFix":["e73bbafcc4dd7ca034a0e425c986783b30785076"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e73bbafcc4dd7ca034a0e425c986783b30785076":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["e73bbafcc4dd7ca034a0e425c986783b30785076"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"e73bbafcc4dd7ca034a0e425c986783b30785076":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e73bbafcc4dd7ca034a0e425c986783b30785076"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}