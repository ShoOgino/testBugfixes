{"path":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","commits":[{"id":"19de316fa1c8ef27502785c72cf83f060af72a1e","date":1119559427,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(), true);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(), true);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1);\n    s[1] = new IndexSearcher(d2);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(), true);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"290c401c31db375e771805c3ba7ac5f64c7370dc","date":1192034795,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(), true);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(), true);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1);\n    s[1] = new IndexSearcher(d2);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(), true);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d);\n  }\n\n","sourceOld":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(), true);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(), true);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1);\n    s[1] = new IndexSearcher(d2);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(), true);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"235efcba838a273934c5dd0ef66bb07c7fb0d718","date":1201256475,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1);\n    s[1] = new IndexSearcher(d2);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d);\n  }\n\n","sourceOld":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(), true);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(), true);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1);\n    s[1] = new IndexSearcher(d2);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(), true);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","sourceOld":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1);\n    s[1] = new IndexSearcher(d2);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","sourceOld":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1);\n    s[1] = new IndexSearcher(d2);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","sourceOld":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","sourceOld":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","sourceOld":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","sourceOld":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","sourceOld":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","sourceOld":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                      IndexWriter.MaxFieldLength.LIMITED);\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n                                     IndexWriter.MaxFieldLength.LIMITED);\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcherRanking#setUp().mjava","sourceNew":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","sourceOld":"  /**\n   * initializes multiSearcher and singleSearcher with the same document set\n   */\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    // create MultiSearcher from two seperate searchers\n    Directory d1 = new RAMDirectory();\n    IndexWriter iw1 = new IndexWriter(d1, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection1(iw1);\n    iw1.close();\n    Directory d2 = new RAMDirectory();\n    IndexWriter iw2 = new IndexWriter(d2, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection2(iw2);\n    iw2.close();\n\n    Searchable[] s = new Searchable[2];\n    s[0] = new IndexSearcher(d1, true);\n    s[1] = new IndexSearcher(d2, true);\n    multiSearcher = new MultiSearcher(s);\n\n    // create IndexSearcher which contains all documents\n    Directory d = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    addCollection1(iw);\n    addCollection2(iw);\n    iw.close();\n    singleSearcher = new IndexSearcher(d, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"235efcba838a273934c5dd0ef66bb07c7fb0d718":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"0a046c0c310bc77931fc8441bd920053b607dd14":["235efcba838a273934c5dd0ef66bb07c7fb0d718","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"19de316fa1c8ef27502785c72cf83f060af72a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"290c401c31db375e771805c3ba7ac5f64c7370dc":["19de316fa1c8ef27502785c72cf83f060af72a1e"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"235efcba838a273934c5dd0ef66bb07c7fb0d718":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0a046c0c310bc77931fc8441bd920053b607dd14":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"19de316fa1c8ef27502785c72cf83f060af72a1e":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["19de316fa1c8ef27502785c72cf83f060af72a1e"],"290c401c31db375e771805c3ba7ac5f64c7370dc":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}