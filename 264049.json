{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(newField(\"body\", \"blah the footest blah\", TextField.TYPE_UNSTORED));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = IndexReader.open(ramDir);\n    IndexSearcher is = new IndexSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(newField(\"body\", \"blah the footest blah\", TextField.TYPE_UNSTORED));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = IndexReader.open(ramDir);\n    IndexSearcher is = new IndexSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(newField(\"body\", \"blah the footest blah\", TextField.TYPE_UNSTORED));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = new IndexSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(newField(\"body\", \"blah the footest blah\", TextField.TYPE_UNSTORED));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = IndexReader.open(ramDir);\n    IndexSearcher is = new IndexSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(newTextField(\"body\", \"blah the footest blah\", Field.Store.NO));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = new IndexSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(newField(\"body\", \"blah the footest blah\", TextField.TYPE_UNSTORED));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = new IndexSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","date":1366056945,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(newTextField(\"body\", \"blah the footest blah\", Field.Store.NO));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(newTextField(\"body\", \"blah the footest blah\", Field.Store.NO));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = new IndexSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(newTextField(\"body\", \"blah the footest blah\", Field.Store.NO));\n    iw.addDocument(doc);\n    iw.shutdown();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(newTextField(\"body\", \"blah the footest blah\", Field.Store.NO));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n    Document doc = new Document();\n    doc.add(newTextField(\"body\", \"blah the footest blah\", Field.Store.NO));\n    iw.addDocument(doc);\n    iw.shutdown();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(newTextField(\"body\", \"blah the footest blah\", Field.Store.NO));\n    iw.addDocument(doc);\n    iw.shutdown();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n    Document doc = new Document();\n    doc.add(newTextField(\"body\", \"blah the footest blah\", Field.Store.NO));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n    Document doc = new Document();\n    doc.add(newTextField(\"body\", \"blah the footest blah\", Field.Store.NO));\n    iw.addDocument(doc);\n    iw.shutdown();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestMultiFieldQPHelper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n    Document doc = new Document();\n    doc.add(newTextField(\"body\", \"blah the footest blah\", Field.Store.NO));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits = is.search(q, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory ramDir = newDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, newIndexWriterConfig(analyzer));\n    Document doc = new Document();\n    doc.add(newTextField(\"body\", \"blah the footest blah\", Field.Store.NO));\n    iw.addDocument(doc);\n    iw.close();\n\n    StandardQueryParser mfqp = new StandardQueryParser();\n\n    mfqp.setMultiFields(new String[] { \"body\" });\n    mfqp.setAnalyzer(analyzer);\n    mfqp.setDefaultOperator(StandardQueryConfigHandler.Operator.AND);\n    Query q = mfqp.parse(\"the footest\", null);\n    IndexReader ir = DirectoryReader.open(ramDir);\n    IndexSearcher is = newSearcher(ir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    ir.close();\n    ramDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}