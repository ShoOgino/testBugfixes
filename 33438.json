{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","commits":[{"id":"62dce719f7b1e83e0b4020f146a516e5cf618884","date":1286643323,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"/dev/null","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer\n      = new ShingleAnalyzerWrapper(new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    analyzer.setOutputUnigrams(false);\n    analyzer.setOutputUnigramsIfNoShingles(true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"/dev/null","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer\n      = new ShingleAnalyzerWrapper(new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    analyzer.setOutputUnigrams(false);\n    analyzer.setOutputUnigramsIfNoShingles(true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcbc12aa8147f5203ca283e7252ba4280d6ffd16","date":1305663400,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer\n      = new ShingleAnalyzerWrapper(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n    analyzer.setOutputUnigrams(false);\n    analyzer.setOutputUnigramsIfNoShingles(true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","sourceOld":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer\n      = new ShingleAnalyzerWrapper(new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    analyzer.setOutputUnigrams(false);\n    analyzer.setOutputUnigramsIfNoShingles(true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","bugFix":["62dce719f7b1e83e0b4020f146a516e5cf618884"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer\n      = new ShingleAnalyzerWrapper(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n    analyzer.setOutputUnigrams(false);\n    analyzer.setOutputUnigramsIfNoShingles(true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","sourceOld":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer\n      = new ShingleAnalyzerWrapper(new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    analyzer.setOutputUnigrams(false);\n    analyzer.setOutputUnigramsIfNoShingles(true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer\n      = new ShingleAnalyzerWrapper(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n    analyzer.setOutputUnigrams(false);\n    analyzer.setOutputUnigramsIfNoShingles(true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","sourceOld":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer\n      = new ShingleAnalyzerWrapper(new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    analyzer.setOutputUnigrams(false);\n    analyzer.setOutputUnigramsIfNoShingles(true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"871f13bf1a6255d5315451355f9fd2ebdd84e740","date":1316056877,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random, MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","sourceOld":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer\n      = new ShingleAnalyzerWrapper(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n    analyzer.setOutputUnigrams(false);\n    analyzer.setOutputUnigramsIfNoShingles(true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","sourceOld":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random, MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","sourceOld":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["62dce719f7b1e83e0b4020f146a516e5cf618884"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"62dce719f7b1e83e0b4020f146a516e5cf618884":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["62dce719f7b1e83e0b4020f146a516e5cf618884","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"a3776dccca01c11e7046323cfad46a3b4a471233":["62dce719f7b1e83e0b4020f146a516e5cf618884","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["871f13bf1a6255d5315451355f9fd2ebdd84e740"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","62dce719f7b1e83e0b4020f146a516e5cf618884"],"871f13bf1a6255d5315451355f9fd2ebdd84e740":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","871f13bf1a6255d5315451355f9fd2ebdd84e740"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"62dce719f7b1e83e0b4020f146a516e5cf618884":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["62dce719f7b1e83e0b4020f146a516e5cf618884","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"871f13bf1a6255d5315451355f9fd2ebdd84e740":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}