{"path":"src/java/org/apache/lucene/index/LogMergePolicy#isOptimized(SegmentInfos,int,Set[SegmentInfo]).mjava","commits":[{"id":"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d","date":1255859449,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/LogMergePolicy#isOptimized(SegmentInfos,int,Set[SegmentInfo]).mjava","pathOld":"src/java/org/apache/lucene/index/LogMergePolicy#isOptimized(SegmentInfos,int,Set).mjava","sourceNew":"  private boolean isOptimized(SegmentInfos infos, int maxNumSegments, Set<SegmentInfo> segmentsToOptimize) throws IOException {\n    final int numSegments = infos.size();\n    int numToOptimize = 0;\n    SegmentInfo optimizeInfo = null;\n    for(int i=0;i<numSegments && numToOptimize <= maxNumSegments;i++) {\n      final SegmentInfo info = infos.info(i);\n      if (segmentsToOptimize.contains(info)) {\n        numToOptimize++;\n        optimizeInfo = info;\n      }\n    }\n\n    return numToOptimize <= maxNumSegments &&\n      (numToOptimize != 1 || isOptimized(optimizeInfo));\n  }\n\n","sourceOld":"  private boolean isOptimized(SegmentInfos infos, int maxNumSegments, Set segmentsToOptimize) throws IOException {\n    final int numSegments = infos.size();\n    int numToOptimize = 0;\n    SegmentInfo optimizeInfo = null;\n    for(int i=0;i<numSegments && numToOptimize <= maxNumSegments;i++) {\n      final SegmentInfo info = infos.info(i);\n      if (segmentsToOptimize.contains(info)) {\n        numToOptimize++;\n        optimizeInfo = info;\n      }\n    }\n\n    return numToOptimize <= maxNumSegments &&\n      (numToOptimize != 1 || isOptimized(optimizeInfo));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#isOptimized(SegmentInfos,int,Set[SegmentInfo]).mjava","pathOld":"src/java/org/apache/lucene/index/LogMergePolicy#isOptimized(SegmentInfos,int,Set[SegmentInfo]).mjava","sourceNew":"  private boolean isOptimized(SegmentInfos infos, int maxNumSegments, Set<SegmentInfo> segmentsToOptimize) throws IOException {\n    final int numSegments = infos.size();\n    int numToOptimize = 0;\n    SegmentInfo optimizeInfo = null;\n    for(int i=0;i<numSegments && numToOptimize <= maxNumSegments;i++) {\n      final SegmentInfo info = infos.info(i);\n      if (segmentsToOptimize.contains(info)) {\n        numToOptimize++;\n        optimizeInfo = info;\n      }\n    }\n\n    return numToOptimize <= maxNumSegments &&\n      (numToOptimize != 1 || isOptimized(optimizeInfo));\n  }\n\n","sourceOld":"  private boolean isOptimized(SegmentInfos infos, int maxNumSegments, Set<SegmentInfo> segmentsToOptimize) throws IOException {\n    final int numSegments = infos.size();\n    int numToOptimize = 0;\n    SegmentInfo optimizeInfo = null;\n    for(int i=0;i<numSegments && numToOptimize <= maxNumSegments;i++) {\n      final SegmentInfo info = infos.info(i);\n      if (segmentsToOptimize.contains(info)) {\n        numToOptimize++;\n        optimizeInfo = info;\n      }\n    }\n\n    return numToOptimize <= maxNumSegments &&\n      (numToOptimize != 1 || isOptimized(optimizeInfo));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"]},"commit2Childs":{"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}