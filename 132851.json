{"path":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","commits":[{"id":"7d3e011ea56c513db42a835815963831340a78ea","date":1381092452,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","pathOld":"/dev/null","sourceNew":"  public void testDistanceSort() throws Exception {\n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n    Sort sort = new Sort(distance.getSortField(bindings, false));\n    TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), null, 3, sort);\n    \n    FieldDoc d = (FieldDoc) td.scoreDocs[0];\n    assertEquals(0.4621D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[1];\n    assertEquals(1.0550D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[2];\n    assertEquals(5.2859D, (Double)d.fields[0], 1E-4);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b25cb7f94b5bbdc8f8ed0551a2ce24a40b94a4f","date":1389748847,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","sourceNew":"  public void testDistanceSort() throws Exception {\n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n    Sort sort = new Sort(distance.getSortField(bindings, false));\n    TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), null, 3, sort);\n    \n    FieldDoc d = (FieldDoc) td.scoreDocs[0];\n    assertEquals(0.4619D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[1];\n    assertEquals(1.0546D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[2];\n    assertEquals(5.2842D, (Double)d.fields[0], 1E-4);\n  }\n\n","sourceOld":"  public void testDistanceSort() throws Exception {\n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n    Sort sort = new Sort(distance.getSortField(bindings, false));\n    TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), null, 3, sort);\n    \n    FieldDoc d = (FieldDoc) td.scoreDocs[0];\n    assertEquals(0.4621D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[1];\n    assertEquals(1.0550D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[2];\n    assertEquals(5.2859D, (Double)d.fields[0], 1E-4);\n  }\n\n","bugFix":null,"bugIntro":["ec60431d008a694828dacb4bc3cda775b6c44a9f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","sourceNew":"  public void testDistanceSort() throws Exception {\n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n    Sort sort = new Sort(distance.getSortField(bindings, false));\n    TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), 3, sort);\n    \n    FieldDoc d = (FieldDoc) td.scoreDocs[0];\n    assertEquals(0.4619D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[1];\n    assertEquals(1.0546D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[2];\n    assertEquals(5.2842D, (Double)d.fields[0], 1E-4);\n  }\n\n","sourceOld":"  public void testDistanceSort() throws Exception {\n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n    Sort sort = new Sort(distance.getSortField(bindings, false));\n    TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), null, 3, sort);\n    \n    FieldDoc d = (FieldDoc) td.scoreDocs[0];\n    assertEquals(0.4619D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[1];\n    assertEquals(1.0546D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[2];\n    assertEquals(5.2842D, (Double)d.fields[0], 1E-4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ec60431d008a694828dacb4bc3cda775b6c44a9f","date":1458570843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","sourceNew":"  public void testDistanceSort() throws Exception {\n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n    Sort sort = new Sort(distance.getSortField(bindings, false));\n    TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), 3, sort);\n    \n    FieldDoc d = (FieldDoc) td.scoreDocs[0];\n    assertEquals(0.4626D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[1];\n    assertEquals(1.0562D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[2];\n    assertEquals(5.2918D, (Double)d.fields[0], 1E-4);\n  }\n\n","sourceOld":"  public void testDistanceSort() throws Exception {\n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n    Sort sort = new Sort(distance.getSortField(bindings, false));\n    TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), 3, sort);\n    \n    FieldDoc d = (FieldDoc) td.scoreDocs[0];\n    assertEquals(0.4619D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[1];\n    assertEquals(1.0546D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[2];\n    assertEquals(5.2842D, (Double)d.fields[0], 1E-4);\n  }\n\n","bugFix":["8b25cb7f94b5bbdc8f8ed0551a2ce24a40b94a4f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bd00e9af390947b2751706503ba0d2f0b28da6d","date":1459503650,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","sourceNew":"  public void testDistanceSort() throws Exception {\n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n    Sort sort = new Sort(distance.getSortField(bindings, false));\n    TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), 3, sort);\n    \n    FieldDoc d = (FieldDoc) td.scoreDocs[0];\n    assertEquals(0.4621D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[1];\n    assertEquals(1.055D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[2];\n    assertEquals(5.2859D, (Double)d.fields[0], 1E-4);\n  }\n\n","sourceOld":"  public void testDistanceSort() throws Exception {\n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n    Sort sort = new Sort(distance.getSortField(bindings, false));\n    TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), 3, sort);\n    \n    FieldDoc d = (FieldDoc) td.scoreDocs[0];\n    assertEquals(0.4626D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[1];\n    assertEquals(1.0562D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[2];\n    assertEquals(5.2918D, (Double)d.fields[0], 1E-4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27d4663d3f6f21a687874d174b49d55645ce99db","date":1587726496,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/TestDemoExpressions#testDistanceSort().mjava","sourceNew":"  public void testDistanceSort() throws Exception {\n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(\"latitude\", DoubleValuesSource.fromDoubleField(\"latitude\"));\n    bindings.add(\"longitude\", DoubleValuesSource.fromDoubleField(\"longitude\"));\n    Sort sort = new Sort(distance.getSortField(bindings, false));\n    TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), 3, sort);\n    \n    FieldDoc d = (FieldDoc) td.scoreDocs[0];\n    assertEquals(0.4621D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[1];\n    assertEquals(1.055D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[2];\n    assertEquals(5.2859D, (Double)d.fields[0], 1E-4);\n  }\n\n","sourceOld":"  public void testDistanceSort() throws Exception {\n    Expression distance = JavascriptCompiler.compile(\"haversin(40.7143528,-74.0059731,latitude,longitude)\");\n    SimpleBindings bindings = new SimpleBindings();\n    bindings.add(new SortField(\"latitude\", SortField.Type.DOUBLE));\n    bindings.add(new SortField(\"longitude\", SortField.Type.DOUBLE));\n    Sort sort = new Sort(distance.getSortField(bindings, false));\n    TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), 3, sort);\n    \n    FieldDoc d = (FieldDoc) td.scoreDocs[0];\n    assertEquals(0.4621D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[1];\n    assertEquals(1.055D, (Double)d.fields[0], 1E-4);\n    \n    d = (FieldDoc) td.scoreDocs[2];\n    assertEquals(5.2859D, (Double)d.fields[0], 1E-4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7d3e011ea56c513db42a835815963831340a78ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8b25cb7f94b5bbdc8f8ed0551a2ce24a40b94a4f":["7d3e011ea56c513db42a835815963831340a78ea"],"ec60431d008a694828dacb4bc3cda775b6c44a9f":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"27d4663d3f6f21a687874d174b49d55645ce99db":["9bd00e9af390947b2751706503ba0d2f0b28da6d"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["8b25cb7f94b5bbdc8f8ed0551a2ce24a40b94a4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9bd00e9af390947b2751706503ba0d2f0b28da6d":["ec60431d008a694828dacb4bc3cda775b6c44a9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["27d4663d3f6f21a687874d174b49d55645ce99db"]},"commit2Childs":{"7d3e011ea56c513db42a835815963831340a78ea":["8b25cb7f94b5bbdc8f8ed0551a2ce24a40b94a4f"],"8b25cb7f94b5bbdc8f8ed0551a2ce24a40b94a4f":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"ec60431d008a694828dacb4bc3cda775b6c44a9f":["9bd00e9af390947b2751706503ba0d2f0b28da6d"],"27d4663d3f6f21a687874d174b49d55645ce99db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d3e011ea56c513db42a835815963831340a78ea"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["ec60431d008a694828dacb4bc3cda775b6c44a9f"],"9bd00e9af390947b2751706503ba0d2f0b28da6d":["27d4663d3f6f21a687874d174b49d55645ce99db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}