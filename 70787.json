{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testHugeDocument().mjava","commits":[{"id":"0d8c222875ac4ef7e08f3e25d40508b821d711ff","date":1257374221,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testHugeDocument().mjava","pathOld":"contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest#testHugeDocument().mjava","sourceNew":"  /**\n   * Test PatternAnalyzer against a large document.\n   */\n  public void testHugeDocument() throws IOException {\n    StringBuilder document = new StringBuilder();\n    // 5000 a's\n    char largeWord[] = new char[5000];\n    Arrays.fill(largeWord, 'a');\n    document.append(largeWord);\n\n    // a space\n    document.append(' ');\n\n    // 2000 b's\n    char largeWord2[] = new char[2000];\n    Arrays.fill(largeWord2, 'b');\n    document.append(largeWord2);\n\n    // Split on whitespace patterns, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(Version.LUCENE_CURRENT, PatternAnalyzer.WHITESPACE_PATTERN,\n        false, null);\n    check(a, document.toString(), new String[] { new String(largeWord),\n        new String(largeWord2) });\n  }\n\n","sourceOld":"  /**\n   * Test PatternAnalyzer against a large document.\n   */\n  public void testHugeDocument() throws IOException {\n    StringBuilder document = new StringBuilder();\n    // 5000 a's\n    char largeWord[] = new char[5000];\n    Arrays.fill(largeWord, 'a');\n    document.append(largeWord);\n\n    // a space\n    document.append(' ');\n\n    // 2000 b's\n    char largeWord2[] = new char[2000];\n    Arrays.fill(largeWord2, 'b');\n    document.append(largeWord2);\n\n    // Split on whitespace patterns, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(Version.LUCENE_CURRENT, PatternAnalyzer.WHITESPACE_PATTERN,\n        false, null);\n    check(a, document.toString(), new String[] { new String(largeWord),\n        new String(largeWord2) });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testHugeDocument().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testHugeDocument().mjava","sourceNew":"  /**\n   * Test PatternAnalyzer against a large document.\n   */\n  public void testHugeDocument() throws IOException {\n    StringBuilder document = new StringBuilder();\n    // 5000 a's\n    char largeWord[] = new char[5000];\n    Arrays.fill(largeWord, 'a');\n    document.append(largeWord);\n\n    // a space\n    document.append(' ');\n\n    // 2000 b's\n    char largeWord2[] = new char[2000];\n    Arrays.fill(largeWord2, 'b');\n    document.append(largeWord2);\n\n    // Split on whitespace patterns, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, PatternAnalyzer.WHITESPACE_PATTERN,\n        false, null);\n    check(a, document.toString(), new String[] { new String(largeWord),\n        new String(largeWord2) });\n  }\n\n","sourceOld":"  /**\n   * Test PatternAnalyzer against a large document.\n   */\n  public void testHugeDocument() throws IOException {\n    StringBuilder document = new StringBuilder();\n    // 5000 a's\n    char largeWord[] = new char[5000];\n    Arrays.fill(largeWord, 'a');\n    document.append(largeWord);\n\n    // a space\n    document.append(' ');\n\n    // 2000 b's\n    char largeWord2[] = new char[2000];\n    Arrays.fill(largeWord2, 'b');\n    document.append(largeWord2);\n\n    // Split on whitespace patterns, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(Version.LUCENE_CURRENT, PatternAnalyzer.WHITESPACE_PATTERN,\n        false, null);\n    check(a, document.toString(), new String[] { new String(largeWord),\n        new String(largeWord2) });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testHugeDocument().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testHugeDocument().mjava","sourceNew":"  /**\n   * Test PatternAnalyzer against a large document.\n   */\n  public void testHugeDocument() throws IOException {\n    StringBuilder document = new StringBuilder();\n    // 5000 a's\n    char largeWord[] = new char[5000];\n    Arrays.fill(largeWord, 'a');\n    document.append(largeWord);\n\n    // a space\n    document.append(' ');\n\n    // 2000 b's\n    char largeWord2[] = new char[2000];\n    Arrays.fill(largeWord2, 'b');\n    document.append(largeWord2);\n\n    // Split on whitespace patterns, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, PatternAnalyzer.WHITESPACE_PATTERN,\n        false, null);\n    check(a, document.toString(), new String[] { new String(largeWord),\n        new String(largeWord2) });\n  }\n\n","sourceOld":"  /**\n   * Test PatternAnalyzer against a large document.\n   */\n  public void testHugeDocument() throws IOException {\n    StringBuilder document = new StringBuilder();\n    // 5000 a's\n    char largeWord[] = new char[5000];\n    Arrays.fill(largeWord, 'a');\n    document.append(largeWord);\n\n    // a space\n    document.append(' ');\n\n    // 2000 b's\n    char largeWord2[] = new char[2000];\n    Arrays.fill(largeWord2, 'b');\n    document.append(largeWord2);\n\n    // Split on whitespace patterns, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, PatternAnalyzer.WHITESPACE_PATTERN,\n        false, null);\n    check(a, document.toString(), new String[] { new String(largeWord),\n        new String(largeWord2) });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d8c222875ac4ef7e08f3e25d40508b821d711ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["0d8c222875ac4ef7e08f3e25d40508b821d711ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"0d8c222875ac4ef7e08f3e25d40508b821d711ff":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d8c222875ac4ef7e08f3e25d40508b821d711ff"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}