{"path":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","pathOld":"src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","sourceNew":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      w.deleteDocuments(idTerm.createTerm(idString));\n      docs.remove(idString);\n    }\n\n","sourceOld":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      w.deleteDocuments(idTerm.createTerm(idString));\n      docs.remove(idString);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","sourceNew":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": del id:\" + idString);\n      }\n      w.deleteDocuments(idTerm.createTerm(idString));\n      docs.remove(idString);\n    }\n\n","sourceOld":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      w.deleteDocuments(idTerm.createTerm(idString));\n      docs.remove(idString);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","sourceNew":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": del id:\" + idString);\n      }\n      w.deleteDocuments(idTerm.createTerm(idString));\n      docs.remove(idString);\n    }\n\n","sourceOld":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      w.deleteDocuments(idTerm.createTerm(idString));\n      docs.remove(idString);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","sourceNew":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": del id:\" + idString);\n      }\n      w.deleteDocuments(idTerm.createTerm(idString));\n      docs.remove(idString);\n    }\n\n","sourceOld":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      w.deleteDocuments(idTerm.createTerm(idString));\n      docs.remove(idString);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","date":1308670974,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","sourceNew":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": del id:\" + idString);\n      }\n      w.deleteDocuments(new Term(\"id\", idString));\n      docs.remove(idString);\n    }\n\n","sourceOld":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": del id:\" + idString);\n      }\n      w.deleteDocuments(idTerm.createTerm(idString));\n      docs.remove(idString);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","sourceNew":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": del id:\" + idString);\n      }\n      w.deleteDocuments(new Term(\"id\", idString));\n      docs.remove(idString);\n    }\n\n","sourceOld":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": del id:\" + idString);\n      }\n      w.deleteDocuments(idTerm.createTerm(idString));\n      docs.remove(idString);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","sourceNew":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": del id:\" + idString);\n      }\n      w.deleteDocuments(new Term(\"id\", idString));\n      docs.remove(idString);\n    }\n\n","sourceOld":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": del id:\" + idString);\n      }\n      w.deleteDocuments(idTerm.createTerm(idString));\n      docs.remove(idString);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#deleteDoc().mjava","sourceNew":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": del id:\" + idString);\n      }\n      w.deleteDocuments(new Term(\"id\", idString));\n      docs.remove(idString);\n    }\n\n","sourceOld":"    public void deleteDoc() throws IOException {\n      String idString = getIdString();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": del id:\" + idString);\n      }\n      w.deleteDocuments(new Term(\"id\", idString));\n      docs.remove(idString);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"2553b00f699380c64959ccb27991289aae87be2e":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","ab5cb6a74aefb78aa0569857970b9151dfe2e787","2553b00f699380c64959ccb27991289aae87be2e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"2553b00f699380c64959ccb27991289aae87be2e":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","2553b00f699380c64959ccb27991289aae87be2e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}