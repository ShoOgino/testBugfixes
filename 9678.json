{"path":"solr/core/src/java/org/apache/solr/core/CoreSorter#init(CoreContainer,Collection[CoreDescriptor]).mjava","commits":[{"id":"919b9b89b8d44ea491f18a92e6d52efcf5f7a065","date":1585280660,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreSorter#init(CoreContainer,Collection[CoreDescriptor]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreSorter#init(CoreContainer).mjava","sourceNew":"  CoreSorter init(CoreContainer cc, Collection<CoreDescriptor> coreDescriptors) {\n    String myNodeName = cc.getNodeConfig().getNodeName();\n    ClusterState state = cc.getZkController().getClusterState();\n    for (CoreDescriptor coreDescriptor : coreDescriptors) {\n      CloudDescriptor cloudDescriptor = coreDescriptor.getCloudDescriptor();\n      String coll = cloudDescriptor.getCollectionName();\n      String sliceName = getShardName(cloudDescriptor);\n      if (shardsVsReplicaCounts.containsKey(sliceName)) continue;\n      CountsForEachShard c = new CountsForEachShard(0, 0, 0);\n      for (Replica replica : getReplicas(state, coll, cloudDescriptor.getShardId())) {\n        if (replica.getNodeName().equals(myNodeName)) {\n          c.myReplicas++;\n        } else {\n          Set<String> liveNodes = state.getLiveNodes();\n          if (liveNodes.contains(replica.getNodeName())) {\n            c.totalReplicasInLiveNodes++;\n          } else {\n            c.totalReplicasInDownNodes++;\n          }\n        }\n      }\n      shardsVsReplicaCounts.put(sliceName, c);\n    }\n\n    return this;\n\n  }\n\n","sourceOld":"  public CoreSorter init(CoreContainer cc) {\n    this.cc = cc;\n    if (cc == null || !cc.isZooKeeperAware()) {\n      return this;\n    }\n    String myNodeName = getNodeName();\n    ClusterState state = cc.getZkController().getClusterState();\n    for (CloudDescriptor cloudDescriptor : getCloudDescriptors()) {\n      String coll = cloudDescriptor.getCollectionName();\n      String sliceName = getShardName(cloudDescriptor);\n      if (shardsVsReplicaCounts.containsKey(sliceName)) continue;\n      CountsForEachShard c = new CountsForEachShard(0, 0, 0);\n      for (Replica replica : getReplicas(state, coll, cloudDescriptor.getShardId())) {\n        if (replica.getNodeName().equals(myNodeName)) {\n          c.myReplicas++;\n        } else {\n          Set<String> liveNodes = state.getLiveNodes();\n          if (liveNodes.contains(replica.getNodeName())) {\n            c.totalReplicasInLiveNodes++;\n          } else {\n            c.totalReplicasInDownNodes++;\n          }\n        }\n      }\n      shardsVsReplicaCounts.put(sliceName, c);\n    }\n\n    return this;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"919b9b89b8d44ea491f18a92e6d52efcf5f7a065":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["919b9b89b8d44ea491f18a92e6d52efcf5f7a065"]},"commit2Childs":{"919b9b89b8d44ea491f18a92e6d52efcf5f7a065":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["919b9b89b8d44ea491f18a92e6d52efcf5f7a065"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}