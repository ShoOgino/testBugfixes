{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"7528ec8c6e88061e2e6af98c4ae1f72a30f180b2","date":1327854270,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    final DocValues dv = readerContext.reader().docValues(groupField);\n    final DocValues.Source dvSource;\n    if (dv != null) {\n      dvSource = diskResident ? dv.getDirectSource() : dv.getSource();\n    } else {\n      dvSource = getDefaultSource(readerContext);\n    }\n    setDocValuesSources(dvSource, readerContext);\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(IndexReader.AtomicReaderContext readerContext) throws IOException {\n    final DocValues dv = readerContext.reader.docValues(groupField);\n    final DocValues.Source dvSource;\n    if (dv != null) {\n      dvSource = diskResident ? dv.getDirectSource() : dv.getSource();\n    } else {\n      dvSource = getDefaultSource(readerContext);\n    }\n    setDocValuesSources(dvSource, readerContext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    final DocValues dv = readerContext.reader().docValues(groupField);\n    final DocValues.Source dvSource;\n    if (dv != null) {\n      dvSource = diskResident ? dv.getDirectSource() : dv.getSource();\n    } else {\n      dvSource = getDefaultSource(readerContext);\n    }\n    setDocValuesSources(dvSource, readerContext);\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(IndexReader.AtomicReaderContext readerContext) throws IOException {\n    final DocValues dv = readerContext.reader.docValues(groupField);\n    final DocValues.Source dvSource;\n    if (dv != null) {\n      dvSource = diskResident ? dv.getDirectSource() : dv.getSource();\n    } else {\n      dvSource = getDefaultSource(readerContext);\n    }\n    setDocValuesSources(dvSource, readerContext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupsCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    final DocValues dv = readerContext.reader().docValues(groupField);\n    final DocValues.Source dvSource;\n    if (dv != null) {\n      dvSource = diskResident ? dv.getDirectSource() : dv.getSource();\n    } else {\n      dvSource = getDefaultSource(readerContext);\n    }\n    setDocValuesSources(dvSource, readerContext);\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    final DocValues dv = readerContext.reader().docValues(groupField);\n    final DocValues.Source dvSource;\n    if (dv != null) {\n      dvSource = diskResident ? dv.getDirectSource() : dv.getSource();\n    } else {\n      dvSource = getDefaultSource(readerContext);\n    }\n    setDocValuesSources(dvSource, readerContext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"7528ec8c6e88061e2e6af98c4ae1f72a30f180b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7528ec8c6e88061e2e6af98c4ae1f72a30f180b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7528ec8c6e88061e2e6af98c4ae1f72a30f180b2":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7528ec8c6e88061e2e6af98c4ae1f72a30f180b2","5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}