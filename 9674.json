{"path":"modules/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,Query...).mjava","commits":[{"id":"c8fda790e002fff32e201cbd0f7bed4c2b333a64","date":1309401082,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,Query...).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery#CustomScoreQuery(Query,ValueSourceQuery...).mjava","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQueries value source queries whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, Query... scoringQueries) {\n    this.subQuery = subQuery;\n    this.scoringQueries = scoringQueries !=null?\n        scoringQueries : new Query[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","sourceOld":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link ValueSourceQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param valSrcQueries value source queries whose scores are used in the custom score\n   * computation. For most simple/convenient use case these would be \n   * {@link org.apache.lucene.search.function.FieldScoreQuery FieldScoreQueries}.\n   * This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, ValueSourceQuery... valSrcQueries) {\n    this.subQuery = subQuery;\n    this.valSrcQueries = valSrcQueries!=null?\n        valSrcQueries : new ValueSourceQuery[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,Query...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQueries value source queries whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, Query... scoringQueries) {\n    this.subQuery = subQuery;\n    this.scoringQueries = scoringQueries !=null?\n        scoringQueries : new Query[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,Query...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQueries value source queries whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, Query... scoringQueries) {\n    this.subQuery = subQuery;\n    this.scoringQueries = scoringQueries !=null?\n        scoringQueries : new Query[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,Query...).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,Query...).mjava","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQueries value source queries whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, Query... scoringQueries) {\n    this.subQuery = subQuery;\n    this.scoringQueries = scoringQueries !=null?\n        scoringQueries : new Query[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","sourceOld":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQueries value source queries whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null or even an empty array.\n   */\n  public CustomScoreQuery(Query subQuery, Query... scoringQueries) {\n    this.subQuery = subQuery;\n    this.scoringQueries = scoringQueries !=null?\n        scoringQueries : new Query[0];\n    if (subQuery == null) throw new IllegalArgumentException(\"<subquery> must not be null!\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c8fda790e002fff32e201cbd0f7bed4c2b333a64","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}