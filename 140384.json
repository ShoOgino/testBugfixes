{"path":"solr/core/src/test/org/apache/solr/schema/TestPointFields#[T-extends-Comparable[T]]_getPosValComparator(boolean,boolean).mjava","commits":[{"id":"b89c0b1a887eabf9facdf2c5d2df5e284c6d6daa","date":1496877670,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#[T-extends-Comparable[T]]_getPosValComparator(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Primary sort by value, with nulls either first or last as specified, and then secondary sort by position. */\n  private <T extends Comparable<T>> \n  Comparator<PosVal<T>> getPosValComparator(final boolean ascending, final boolean nullsFirst) {\n    return (o1, o2) -> {\n      if (o1.val == null) {\n        if (o2.val == null) {\n          return ascending ? Integer.compare(o1.pos, o2.pos) : Integer.compare(o2.pos, o1.pos);\n        } else {\n          return nullsFirst ? -1 : 1;\n        }\n      } else if (o2.val == null) {\n        return nullsFirst ? 1 : -1;\n      } else {\n        return ascending ? o1.val.compareTo(o2.val) : o2.val.compareTo(o1.val);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f344bb33ca91f48e99c061980115b46fa84fc8f5","date":1496903283,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#[T-extends-Comparable[T]]_getPosValComparator(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Primary sort by value, with nulls either first or last as specified, and then secondary sort by position. */\n  private <T extends Comparable<T>> \n  Comparator<PosVal<T>> getPosValComparator(final boolean ascending, final boolean nullsFirst) {\n    return (o1, o2) -> {\n      if (o1.val == null) {\n        if (o2.val == null) {\n          return ascending ? Integer.compare(o1.pos, o2.pos) : Integer.compare(o2.pos, o1.pos);\n        } else {\n          return nullsFirst ? -1 : 1;\n        }\n      } else if (o2.val == null) {\n        return nullsFirst ? 1 : -1;\n      } else {\n        return ascending ? o1.val.compareTo(o2.val) : o2.val.compareTo(o1.val);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#[T-extends-Comparable[T]]_getPosValComparator(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Primary sort by value, with nulls either first or last as specified, and then secondary sort by position. */\n  private <T extends Comparable<T>> \n  Comparator<PosVal<T>> getPosValComparator(final boolean ascending, final boolean nullsFirst) {\n    return (o1, o2) -> {\n      if (o1.val == null) {\n        if (o2.val == null) {\n          return ascending ? Integer.compare(o1.pos, o2.pos) : Integer.compare(o2.pos, o1.pos);\n        } else {\n          return nullsFirst ? -1 : 1;\n        }\n      } else if (o2.val == null) {\n        return nullsFirst ? 1 : -1;\n      } else {\n        return ascending ? o1.val.compareTo(o2.val) : o2.val.compareTo(o1.val);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#[T-extends-Comparable[T]]_getPosValComparator(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Primary sort by value, with nulls either first or last as specified, and then secondary sort by position. */\n  private <T extends Comparable<T>> \n  Comparator<PosVal<T>> getPosValComparator(final boolean ascending, final boolean nullsFirst) {\n    return (o1, o2) -> {\n      if (o1.val == null) {\n        if (o2.val == null) {\n          return ascending ? Integer.compare(o1.pos, o2.pos) : Integer.compare(o2.pos, o1.pos);\n        } else {\n          return nullsFirst ? -1 : 1;\n        }\n      } else if (o2.val == null) {\n        return nullsFirst ? 1 : -1;\n      } else {\n        return ascending ? o1.val.compareTo(o2.val) : o2.val.compareTo(o1.val);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89c0b1a887eabf9facdf2c5d2df5e284c6d6daa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b89c0b1a887eabf9facdf2c5d2df5e284c6d6daa"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"b89c0b1a887eabf9facdf2c5d2df5e284c6d6daa":["f344bb33ca91f48e99c061980115b46fa84fc8f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89c0b1a887eabf9facdf2c5d2df5e284c6d6daa","f344bb33ca91f48e99c061980115b46fa84fc8f5","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}