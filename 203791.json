{"path":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#checkIndexHeaderSuffix(DataInput,String).mjava","commits":[{"id":"3384e6013a93e4d11b7d75388693f8d0388602bf","date":1413951663,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#checkIndexHeaderSuffix(DataInput,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: just reads and verifies the suffix of an index header */\n  public static String checkIndexHeaderSuffix(DataInput in, String expectedSuffix) throws IOException {\n    int suffixLength = in.readByte() & 0xFF;\n    byte suffixBytes[] = new byte[suffixLength];\n    in.readBytes(suffixBytes, 0, suffixBytes.length);\n    String suffix = new String(suffixBytes, 0, suffixBytes.length, StandardCharsets.UTF_8);\n    if (!suffix.equals(expectedSuffix)) {\n      throw new CorruptIndexException(\"file mismatch, expected suffix=\" + expectedSuffix\n                                                             + \", got=\" + suffix, in);\n    }\n    return suffix;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#checkIndexHeaderSuffix(DataInput,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: just reads and verifies the suffix of an index header */\n  public static String checkIndexHeaderSuffix(DataInput in, String expectedSuffix) throws IOException {\n    int suffixLength = in.readByte() & 0xFF;\n    byte suffixBytes[] = new byte[suffixLength];\n    in.readBytes(suffixBytes, 0, suffixBytes.length);\n    String suffix = new String(suffixBytes, 0, suffixBytes.length, StandardCharsets.UTF_8);\n    if (!suffix.equals(expectedSuffix)) {\n      throw new CorruptIndexException(\"file mismatch, expected suffix=\" + expectedSuffix\n                                                             + \", got=\" + suffix, in);\n    }\n    return suffix;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3384e6013a93e4d11b7d75388693f8d0388602bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3384e6013a93e4d11b7d75388693f8d0388602bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3384e6013a93e4d11b7d75388693f8d0388602bf","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"3384e6013a93e4d11b7d75388693f8d0388602bf":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}