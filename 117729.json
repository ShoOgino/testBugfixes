{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testFullyDeletedSegmentsReleaseFiles().mjava","commits":[{"id":"09c01278fcf71c4b50f2729bade4b16ed7d48f2f","date":1526927557,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testFullyDeletedSegmentsReleaseFiles().mjava","pathOld":"/dev/null","sourceNew":"  public void testFullyDeletedSegmentsReleaseFiles() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig();\n    config.setRAMBufferSizeMB(Integer.MAX_VALUE);\n    config.setMaxBufferedDocs(2); // no auto flush\n    IndexWriter writer = new IndexWriter(dir, config);\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"doc-0\", Field.Store.YES));\n    writer.addDocument(d);\n    writer.flush();\n    d = new Document();\n    d.add(new StringField(\"id\", \"doc-1\", Field.Store.YES));\n    writer.addDocument(d);\n    writer.deleteDocuments(new Term(\"id\", \"doc-1\"));\n    assertEquals(1, writer.segmentInfos.asList().size());\n    writer.flush();\n    assertEquals(1, writer.segmentInfos.asList().size());\n    writer.commit();\n    assertFiles(writer);\n    assertEquals(1, writer.segmentInfos.asList().size());\n    IOUtils.close(writer, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["631ea3d1607299c59f33edef140ffc19a81f07a0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"631ea3d1607299c59f33edef140ffc19a81f07a0","date":1532450367,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testFullyDeletedSegmentsReleaseFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testFullyDeletedSegmentsReleaseFiles().mjava","sourceNew":"  public void testFullyDeletedSegmentsReleaseFiles() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig();\n    config.setRAMBufferSizeMB(Integer.MAX_VALUE);\n    config.setMaxBufferedDocs(2); // no auto flush\n    IndexWriter writer = new IndexWriter(dir, config);\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"doc-0\", Field.Store.YES));\n    writer.addDocument(d);\n    writer.flush();\n    d = new Document();\n    d.add(new StringField(\"id\", \"doc-1\", Field.Store.YES));\n    writer.addDocument(d);\n    writer.deleteDocuments(new Term(\"id\", \"doc-1\"));\n    assertEquals(1, writer.listOfSegmentCommitInfos().size());\n    writer.flush();\n    assertEquals(1, writer.listOfSegmentCommitInfos().size());\n    writer.commit();\n    assertFiles(writer);\n    assertEquals(1, writer.listOfSegmentCommitInfos().size());\n    IOUtils.close(writer, dir);\n  }\n\n","sourceOld":"  public void testFullyDeletedSegmentsReleaseFiles() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig();\n    config.setRAMBufferSizeMB(Integer.MAX_VALUE);\n    config.setMaxBufferedDocs(2); // no auto flush\n    IndexWriter writer = new IndexWriter(dir, config);\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"doc-0\", Field.Store.YES));\n    writer.addDocument(d);\n    writer.flush();\n    d = new Document();\n    d.add(new StringField(\"id\", \"doc-1\", Field.Store.YES));\n    writer.addDocument(d);\n    writer.deleteDocuments(new Term(\"id\", \"doc-1\"));\n    assertEquals(1, writer.segmentInfos.asList().size());\n    writer.flush();\n    assertEquals(1, writer.segmentInfos.asList().size());\n    writer.commit();\n    assertFiles(writer);\n    assertEquals(1, writer.segmentInfos.asList().size());\n    IOUtils.close(writer, dir);\n  }\n\n","bugFix":["09c01278fcf71c4b50f2729bade4b16ed7d48f2f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2","date":1588002560,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testFullyDeletedSegmentsReleaseFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testFullyDeletedSegmentsReleaseFiles().mjava","sourceNew":"  public void testFullyDeletedSegmentsReleaseFiles() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig();\n    config.setRAMBufferSizeMB(Integer.MAX_VALUE);\n    config.setMaxBufferedDocs(2); // no auto flush\n    IndexWriter writer = new IndexWriter(dir, config);\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"doc-0\", Field.Store.YES));\n    writer.addDocument(d);\n    writer.flush();\n    d = new Document();\n    d.add(new StringField(\"id\", \"doc-1\", Field.Store.YES));\n    writer.addDocument(d);\n    writer.deleteDocuments(new Term(\"id\", \"doc-1\"));\n    assertEquals(1, writer.cloneSegmentInfos().size());\n    writer.flush();\n    assertEquals(1, writer.cloneSegmentInfos().size());\n    writer.commit();\n    assertFiles(writer);\n    assertEquals(1, writer.cloneSegmentInfos().size());\n    IOUtils.close(writer, dir);\n  }\n\n","sourceOld":"  public void testFullyDeletedSegmentsReleaseFiles() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig();\n    config.setRAMBufferSizeMB(Integer.MAX_VALUE);\n    config.setMaxBufferedDocs(2); // no auto flush\n    IndexWriter writer = new IndexWriter(dir, config);\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"doc-0\", Field.Store.YES));\n    writer.addDocument(d);\n    writer.flush();\n    d = new Document();\n    d.add(new StringField(\"id\", \"doc-1\", Field.Store.YES));\n    writer.addDocument(d);\n    writer.deleteDocuments(new Term(\"id\", \"doc-1\"));\n    assertEquals(1, writer.listOfSegmentCommitInfos().size());\n    writer.flush();\n    assertEquals(1, writer.listOfSegmentCommitInfos().size());\n    writer.commit();\n    assertFiles(writer);\n    assertEquals(1, writer.listOfSegmentCommitInfos().size());\n    IOUtils.close(writer, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"631ea3d1607299c59f33edef140ffc19a81f07a0":["09c01278fcf71c4b50f2729bade4b16ed7d48f2f"],"09c01278fcf71c4b50f2729bade4b16ed7d48f2f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["631ea3d1607299c59f33edef140ffc19a81f07a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"]},"commit2Childs":{"631ea3d1607299c59f33edef140ffc19a81f07a0":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"],"09c01278fcf71c4b50f2729bade4b16ed7d48f2f":["631ea3d1607299c59f33edef140ffc19a81f07a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c01278fcf71c4b50f2729bade4b16ed7d48f2f"],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}