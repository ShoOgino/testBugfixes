{"path":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#getLogStringAndClearRspToLog().mjava","commits":[{"id":"eb55f6c347c48c2f7a9fb29b2e6dfe819b1a56f9","date":1414167719,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#getLogStringAndClearRspToLog().mjava","pathOld":"/dev/null","sourceNew":"  private String getLogStringAndClearRspToLog() {\n    StringBuilder sb = new StringBuilder(rsp.getToLogAsString(req.getCore().getLogId()));\n\n    rsp.getToLog().clear();   // make it so SolrCore.exec won't log this again\n\n    // if id lists were truncated, show how many more there were\n    if (adds != null && numAdds > maxNumToLog) {\n      adds.add(\"... (\" + numAdds + \" adds)\");\n    }\n    if (deletes != null && numDeletes > maxNumToLog) {\n      deletes.add(\"... (\" + numDeletes + \" deletes)\");\n    }\n    long elapsed = rsp.getEndTime() - req.getStartTime();\n\n    sb.append(toLog).append(\" 0 \").append(elapsed);\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da41004e1997059b4d0549fbeb56bf0858d14689","date":1425425090,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#getLogStringAndClearRspToLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#getLogStringAndClearRspToLog().mjava","sourceNew":"  private String getLogStringAndClearRspToLog() {\n    StringBuilder sb = new StringBuilder(rsp.getToLogAsString(req.getCore().getLogId()));\n\n    rsp.getToLog().clear();   // make it so SolrCore.exec won't log this again\n\n    // if id lists were truncated, show how many more there were\n    if (adds != null && numAdds > maxNumToLog) {\n      adds.add(\"... (\" + numAdds + \" adds)\");\n    }\n    if (deletes != null && numDeletes > maxNumToLog) {\n      deletes.add(\"... (\" + numDeletes + \" deletes)\");\n    }\n    final long elapsed = (long) req.getRequestTimer().getTime();\n\n    sb.append(toLog).append(\" 0 \").append(elapsed);\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getLogStringAndClearRspToLog() {\n    StringBuilder sb = new StringBuilder(rsp.getToLogAsString(req.getCore().getLogId()));\n\n    rsp.getToLog().clear();   // make it so SolrCore.exec won't log this again\n\n    // if id lists were truncated, show how many more there were\n    if (adds != null && numAdds > maxNumToLog) {\n      adds.add(\"... (\" + numAdds + \" adds)\");\n    }\n    if (deletes != null && numDeletes > maxNumToLog) {\n      deletes.add(\"... (\" + numDeletes + \" deletes)\");\n    }\n    long elapsed = rsp.getEndTime() - req.getStartTime();\n\n    sb.append(toLog).append(\" 0 \").append(elapsed);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#getLogStringAndClearRspToLog().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#getLogStringAndClearRspToLog().mjava","sourceNew":"  private String getLogStringAndClearRspToLog() {\n    StringBuilder sb = new StringBuilder(rsp.getToLogAsString(req.getCore().getLogId()));\n\n    rsp.getToLog().clear();   // make it so SolrCore.exec won't log this again\n\n    // if id lists were truncated, show how many more there were\n    if (adds != null && numAdds > maxNumToLog) {\n      adds.add(\"... (\" + numAdds + \" adds)\");\n    }\n    if (deletes != null && numDeletes > maxNumToLog) {\n      deletes.add(\"... (\" + numDeletes + \" deletes)\");\n    }\n    final long elapsed = (long) req.getRequestTimer().getTime();\n\n    sb.append(toLog).append(\" 0 \").append(elapsed);\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getLogStringAndClearRspToLog() {\n    StringBuilder sb = new StringBuilder(rsp.getToLogAsString(req.getCore().getLogId()));\n\n    rsp.getToLog().clear();   // make it so SolrCore.exec won't log this again\n\n    // if id lists were truncated, show how many more there were\n    if (adds != null && numAdds > maxNumToLog) {\n      adds.add(\"... (\" + numAdds + \" adds)\");\n    }\n    if (deletes != null && numDeletes > maxNumToLog) {\n      deletes.add(\"... (\" + numDeletes + \" deletes)\");\n    }\n    long elapsed = rsp.getEndTime() - req.getStartTime();\n\n    sb.append(toLog).append(\" 0 \").append(elapsed);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9367dbf5b00d7764583d991c1888f4acc9c9991a","date":1449048142,"type":4,"author":"Anshum Gupta","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessor[LogUpdateProcessorFactory]#getLogStringAndClearRspToLog().mjava","sourceNew":null,"sourceOld":"  private String getLogStringAndClearRspToLog() {\n    StringBuilder sb = new StringBuilder(rsp.getToLogAsString(req.getCore().getLogId()));\n\n    rsp.getToLog().clear();   // make it so SolrCore.exec won't log this again\n\n    // if id lists were truncated, show how many more there were\n    if (adds != null && numAdds > maxNumToLog) {\n      adds.add(\"... (\" + numAdds + \" adds)\");\n    }\n    if (deletes != null && numDeletes > maxNumToLog) {\n      deletes.add(\"... (\" + numDeletes + \" deletes)\");\n    }\n    final long elapsed = (long) req.getRequestTimer().getTime();\n\n    sb.append(toLog).append(\" 0 \").append(elapsed);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["eb55f6c347c48c2f7a9fb29b2e6dfe819b1a56f9","da41004e1997059b4d0549fbeb56bf0858d14689"],"eb55f6c347c48c2f7a9fb29b2e6dfe819b1a56f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"da41004e1997059b4d0549fbeb56bf0858d14689":["eb55f6c347c48c2f7a9fb29b2e6dfe819b1a56f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["da41004e1997059b4d0549fbeb56bf0858d14689"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9367dbf5b00d7764583d991c1888f4acc9c9991a"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"eb55f6c347c48c2f7a9fb29b2e6dfe819b1a56f9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","da41004e1997059b4d0549fbeb56bf0858d14689"],"da41004e1997059b4d0549fbeb56bf0858d14689":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9367dbf5b00d7764583d991c1888f4acc9c9991a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eb55f6c347c48c2f7a9fb29b2e6dfe819b1a56f9"],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}