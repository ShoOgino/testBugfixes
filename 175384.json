{"path":"lucene/test-framework/src/java/org/apache/lucene/search/spans/AssertingSpanQuery#getSpans(LeafReaderContext,Bits,Map[Term,TermContext]).mjava","commits":[{"id":"28b61f1c9cf357a13efbb645d116d056feb80cf6","date":1428863054,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/spans/AssertingSpanQuery#getSpans(LeafReaderContext,Bits,Map[Term,TermContext]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Spans getSpans(LeafReaderContext context, Bits acceptDocs, Map<Term,TermContext> termContexts) throws IOException {\n    Spans spans = in.getSpans(context, acceptDocs, termContexts);\n    if (spans == null) {\n      return null;\n    } else {\n      return new AssertingSpans(spans);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d530e71ed32ab23b34ca3fc72b080a554a40404","date":1432026158,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/spans/AssertingSpanQuery#getSpans(LeafReaderContext,Bits,Map[Term,TermContext],SpanCollector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/spans/AssertingSpanQuery#getSpans(LeafReaderContext,Bits,Map[Term,TermContext]).mjava","sourceNew":"  @Override\n  public Spans getSpans(LeafReaderContext context, Bits acceptDocs, Map<Term,TermContext> termContexts, SpanCollector collector) throws IOException {\n    Spans spans = in.getSpans(context, acceptDocs, termContexts, collector);\n    if (spans == null) {\n      return null;\n    } else {\n      return new AssertingSpans(spans);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Spans getSpans(LeafReaderContext context, Bits acceptDocs, Map<Term,TermContext> termContexts) throws IOException {\n    Spans spans = in.getSpans(context, acceptDocs, termContexts);\n    if (spans == null) {\n      return null;\n    } else {\n      return new AssertingSpans(spans);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["28b61f1c9cf357a13efbb645d116d056feb80cf6"],"28b61f1c9cf357a13efbb645d116d056feb80cf6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d530e71ed32ab23b34ca3fc72b080a554a40404"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28b61f1c9cf357a13efbb645d116d056feb80cf6"],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28b61f1c9cf357a13efbb645d116d056feb80cf6":["2d530e71ed32ab23b34ca3fc72b080a554a40404"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}