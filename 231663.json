{"path":"lucene/core/src/java/org/apache/lucene/codecs/TempPostingsWriterBase#startTerm().mjava","commits":[{"id":"0a570bec4aec8585a4eea44849bfb2bc264208c4","date":1371308653,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/TempPostingsWriterBase#startTerm().mjava","pathOld":"/dev/null","sourceNew":"  /** Start a new term.  Note that a matching call to {@link\n   *  #finishTerm(TermStats)} is done, only if the term has at least one\n   *  document. */\n  public abstract void startTerm() throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f371bdc428cf724280da946932ec9b39c700963","date":1371394903,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/TempPostingsWriterBase#startTerm().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/TempPostingsWriterBase#startTerm().mjava","sourceNew":"  /** Start a new term.  Note that a matching call to {@link\n   *  #finishTerm(long[], DataOutput, TermStats)} is done, only if the term has at least one\n   *  document. */\n  public abstract void startTerm() throws IOException;\n\n","sourceOld":"  /** Start a new term.  Note that a matching call to {@link\n   *  #finishTerm(TermStats)} is done, only if the term has at least one\n   *  document. */\n  public abstract void startTerm() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/TempPostingsWriterBase#startTerm().mjava","sourceNew":null,"sourceOld":"  /** Start a new term.  Note that a matching call to {@link\n   *  #finishTerm(long[], DataOutput, TermStats)} is done, only if the term has at least one\n   *  document. */\n  public abstract void startTerm() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1f371bdc428cf724280da946932ec9b39c700963":["0a570bec4aec8585a4eea44849bfb2bc264208c4"],"0a570bec4aec8585a4eea44849bfb2bc264208c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["1f371bdc428cf724280da946932ec9b39c700963"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1f371bdc428cf724280da946932ec9b39c700963":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"0a570bec4aec8585a4eea44849bfb2bc264208c4":["1f371bdc428cf724280da946932ec9b39c700963"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a570bec4aec8585a4eea44849bfb2bc264208c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}