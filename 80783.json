{"path":"lucene/src/demo/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/demo/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","pathOld":"src/demo/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase();\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase();\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","pathOld":"lucene/src/demo/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase();\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase();\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}