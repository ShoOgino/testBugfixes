{"path":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWFieldsWriter#addField(FieldInfo).mjava","commits":[{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWFieldsWriter#addField(FieldInfo).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexFieldsWriter#addField(FieldInfo).mjava","sourceNew":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {\n      throw new IllegalArgumentException(\"this codec cannot index offsets\");\n    }\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","sourceOld":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {\n      throw new UnsupportedOperationException(\"this codec cannot index offsets\");\n    }\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9298ea3196013252eb14df879f12622e5bba17db","date":1326739501,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWFieldsWriter#addField(FieldInfo).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWFieldsWriter#addField(FieldInfo).mjava","sourceNew":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {\n      throw new UnsupportedOperationException(\"this codec cannot index offsets\");\n    }\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","sourceOld":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {\n      throw new IllegalArgumentException(\"this codec cannot index offsets\");\n    }\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e92a321a2612261e1010a4038c8586e30b081552","date":1328456689,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#addField(FieldInfo).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWFieldsWriter#addField(FieldInfo).mjava","sourceNew":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {\n      throw new UnsupportedOperationException(\"this codec cannot index offsets\");\n    }\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","sourceOld":"  @Override\n  public TermsConsumer addField(FieldInfo field) throws IOException {\n    assert field.number != -1;\n    if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) {\n      throw new UnsupportedOperationException(\"this codec cannot index offsets\");\n    }\n    //System.out.println(\"w field=\" + field.name + \" storePayload=\" + field.storePayloads + \" number=\" + field.number);\n    return new PreFlexTermsWriter(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9298ea3196013252eb14df879f12622e5bba17db":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"e92a321a2612261e1010a4038c8586e30b081552":["9298ea3196013252eb14df879f12622e5bba17db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e92a321a2612261e1010a4038c8586e30b081552"]},"commit2Childs":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["9298ea3196013252eb14df879f12622e5bba17db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"9298ea3196013252eb14df879f12622e5bba17db":["e92a321a2612261e1010a4038c8586e30b081552"],"e92a321a2612261e1010a4038c8586e30b081552":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}