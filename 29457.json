{"path":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","sourceNew":"  // test a variety of sorts using a remote searcher\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = getRemote();\n    MultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","sourceOld":"  // test a variety of sorts using a remote searcher\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = getRemote();\n    MultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"084b18e2b1c84d66746d1a94b6668766d357c2d4","date":1270935846,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","pathOld":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","sourceNew":"  // test a variety of sorts using a remote searcher\n  @Test\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = lookupRemote();\n    MultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","sourceOld":"  // test a variety of sorts using a remote searcher\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = getRemote();\n    MultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","bugFix":["63bc3238545c6012bd44f5d294077997f236bc4e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","pathOld":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","sourceNew":"  // test a variety of sorts using a remote searcher\n  @Test\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = lookupRemote();\n    MultiSearcher multi = new MultiSearcher (searcher);\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","sourceOld":"  // test a variety of sorts using a remote searcher\n  @Test\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = lookupRemote();\n    MultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","pathOld":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","sourceNew":"  // test a variety of sorts using a remote searcher\n  @Test\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = lookupRemote();\n    MultiSearcher multi = new MultiSearcher (searcher);\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","sourceOld":"  // test a variety of sorts using a remote searcher\n  @Test\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = lookupRemote();\n    MultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","pathOld":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","sourceNew":"  // test a variety of sorts using a remote searcher\n  @Test\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = lookupRemote();\n    MultiSearcher multi = new MultiSearcher (searcher);\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","sourceOld":"  // test a variety of sorts using a remote searcher\n  @Test\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = lookupRemote();\n    MultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","sourceNew":null,"sourceOld":"  // test a variety of sorts using a remote searcher\n  @Test\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = lookupRemote();\n    MultiSearcher multi = new MultiSearcher (searcher);\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","sourceNew":null,"sourceOld":"  // test a variety of sorts using a remote searcher\n  @Test\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = lookupRemote();\n    MultiSearcher multi = new MultiSearcher (searcher);\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteSort().mjava","sourceNew":null,"sourceOld":"  // test a variety of sorts using a remote searcher\n  @Test\n  public void testRemoteSort() throws Exception {\n    Searchable searcher = lookupRemote();\n    MultiSearcher multi = new MultiSearcher (searcher);\n    runMultiSorts(multi, true); // this runs on the full index\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["3bb13258feba31ab676502787ab2e1779f129b7a","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["084b18e2b1c84d66746d1a94b6668766d357c2d4","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"084b18e2b1c84d66746d1a94b6668766d357c2d4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"3bb13258feba31ab676502787ab2e1779f129b7a":["084b18e2b1c84d66746d1a94b6668766d357c2d4","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["084b18e2b1c84d66746d1a94b6668766d357c2d4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"084b18e2b1c84d66746d1a94b6668766d357c2d4":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["70ad682703b8585f5d0a637efec044d57ec05efb"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["084b18e2b1c84d66746d1a94b6668766d357c2d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}