{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"1fa60a501961bce2ff07ee1cde7c78699025547e","date":1307054117,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/SecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader, groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    //System.out.println(\"SP.setNextReader\");\n    for (SearchGroupDocs group : groupMap.values()) {\n      group.collector.setNextReader(readerContext);\n    }\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader, groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      //System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c715a0f99152be7566591f323c6c5a25725a1bcb","date":1307118449,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader, groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e7c99bd45fa88a3d93a03fdd773053bef72268e","date":1307218088,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/SecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader, groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    //System.out.println(\"SP.setNextReader\");\n    for (SearchGroupDocs group : groupMap.values()) {\n      group.collector.setNextReader(readerContext);\n    }\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader, groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs group : groupMap.values()) {\n      //System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00","date":1317931776,"type":5,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader, groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader, groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c715a0f99152be7566591f323c6c5a25725a1bcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1fa60a501961bce2ff07ee1cde7c78699025547e"],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["1fa60a501961bce2ff07ee1cde7c78699025547e"],"1fa60a501961bce2ff07ee1cde7c78699025547e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e7c99bd45fa88a3d93a03fdd773053bef72268e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1fa60a501961bce2ff07ee1cde7c78699025547e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c715a0f99152be7566591f323c6c5a25725a1bcb","1fa60a501961bce2ff07ee1cde7c78699025547e","1e7c99bd45fa88a3d93a03fdd773053bef72268e"],"c715a0f99152be7566591f323c6c5a25725a1bcb":[],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1fa60a501961bce2ff07ee1cde7c78699025547e":["c715a0f99152be7566591f323c6c5a25725a1bcb","8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00","1e7c99bd45fa88a3d93a03fdd773053bef72268e"],"1e7c99bd45fa88a3d93a03fdd773053bef72268e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c715a0f99152be7566591f323c6c5a25725a1bcb","1e7c99bd45fa88a3d93a03fdd773053bef72268e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}