{"path":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","commits":[{"id":"a20bc20e2128dd8cb4c365f7eda4a3e4f7fa91d7","date":1402429691,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDefaultConfigSetBasePathResolution() throws IOException {\n    try (SolrResourceLoader loader = new SolrResourceLoader(\"/path/to/solr/home\")) {\n      ConfigSetService.Default relativeCSS = new ConfigSetService.Default(loader, \"configsets\");\n      assertThat(relativeCSS.getConfigSetBase().getAbsolutePath(), is(\"/path/to/solr/home/configsets\"));\n      ConfigSetService.Default absoluteCSS = new ConfigSetService.Default(loader, \"/path/to/configsets\");\n      assertThat(absoluteCSS.getConfigSetBase().getAbsolutePath(), is(\"/path/to/configsets\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f1f80ac2d77bc7b362eae2ad04fd39c469648ca","date":1402493888,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","sourceNew":"  @Test\n  public void testDefaultConfigSetBasePathResolution() throws IOException {\n    try (SolrResourceLoader loader = new SolrResourceLoader(new File(\"/path/to/solr/home\").getAbsolutePath())) {\n\n      ConfigSetService.Default relativeCSS = new ConfigSetService.Default(loader, \"configsets\");\n      assertThat(relativeCSS.getConfigSetBase().getAbsoluteFile(),\n                is(new File(\"/path/to/solr/home/configsets\").getAbsoluteFile()));\n\n      ConfigSetService.Default absoluteCSS = new ConfigSetService.Default(loader, new File(\"/path/to/configsets\").getAbsolutePath());\n      assertThat(absoluteCSS.getConfigSetBase().getAbsoluteFile(),\n                is(new File(\"/path/to/configsets\").getAbsoluteFile()));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultConfigSetBasePathResolution() throws IOException {\n    try (SolrResourceLoader loader = new SolrResourceLoader(\"/path/to/solr/home\")) {\n      ConfigSetService.Default relativeCSS = new ConfigSetService.Default(loader, \"configsets\");\n      assertThat(relativeCSS.getConfigSetBase().getAbsolutePath(), is(\"/path/to/solr/home/configsets\"));\n      ConfigSetService.Default absoluteCSS = new ConfigSetService.Default(loader, \"/path/to/configsets\");\n      assertThat(absoluteCSS.getConfigSetBase().getAbsolutePath(), is(\"/path/to/configsets\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9dc6df6d3cec2cda16c96f408123470a6c069a29","date":1447321406,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","sourceNew":"  @Test\n  public void testDefaultConfigSetBasePathResolution() throws IOException {\n    try (SolrResourceLoader loader = new SolrResourceLoader(new File(\"/path/to/solr/home\").getAbsolutePath())) {\n\n      NodeConfig config\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">configsets</str></solr>\");\n      assertThat(config.getConfigSetBaseDirectory(), is(Paths.get(\"/path/to/solr/home/configsets\")));\n\n      NodeConfig absConfig\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">/path/to/configsets</str></solr>\");\n      assertThat(absConfig.getConfigSetBaseDirectory(), is(Paths.get(\"/path/to/configsets\")));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultConfigSetBasePathResolution() throws IOException {\n    try (SolrResourceLoader loader = new SolrResourceLoader(new File(\"/path/to/solr/home\").getAbsolutePath())) {\n\n      ConfigSetService.Default relativeCSS = new ConfigSetService.Default(loader, \"configsets\");\n      assertThat(relativeCSS.getConfigSetBase().getAbsoluteFile(),\n                is(new File(\"/path/to/solr/home/configsets\").getAbsoluteFile()));\n\n      ConfigSetService.Default absoluteCSS = new ConfigSetService.Default(loader, new File(\"/path/to/configsets\").getAbsolutePath());\n      assertThat(absoluteCSS.getConfigSetBase().getAbsoluteFile(),\n                is(new File(\"/path/to/configsets\").getAbsoluteFile()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740789b0998e900b1f93180f549f88ecc6e24fd7","date":1447334780,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","sourceNew":"  @Test\n  public void testDefaultConfigSetBasePathResolution() throws IOException {\n    try (SolrResourceLoader loader = new SolrResourceLoader(new File(\"/path/to/solr/home\").getAbsolutePath())) {\n\n      NodeConfig config\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">configsets</str></solr>\");\n      assertThat(config.getConfigSetBaseDirectory().toAbsolutePath(),\n                  is(Paths.get(\"/path/to/solr/home/configsets\").toAbsolutePath()));\n\n      NodeConfig absConfig\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">/path/to/configsets</str></solr>\");\n      assertThat(absConfig.getConfigSetBaseDirectory().toAbsolutePath(), is(Paths.get(\"/path/to/configsets\").toAbsolutePath()));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultConfigSetBasePathResolution() throws IOException {\n    try (SolrResourceLoader loader = new SolrResourceLoader(new File(\"/path/to/solr/home\").getAbsolutePath())) {\n\n      NodeConfig config\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">configsets</str></solr>\");\n      assertThat(config.getConfigSetBaseDirectory(), is(Paths.get(\"/path/to/solr/home/configsets\")));\n\n      NodeConfig absConfig\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">/path/to/configsets</str></solr>\");\n      assertThat(absConfig.getConfigSetBaseDirectory(), is(Paths.get(\"/path/to/configsets\")));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","sourceNew":"  @Test\n  public void testDefaultConfigSetBasePathResolution() throws IOException {\n    try (SolrResourceLoader loader = new SolrResourceLoader(Paths.get(\"/path/to/solr/home\"))) {\n\n      NodeConfig config\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">configsets</str></solr>\");\n      assertThat(config.getConfigSetBaseDirectory().toAbsolutePath(),\n                  is(Paths.get(\"/path/to/solr/home/configsets\").toAbsolutePath()));\n\n      NodeConfig absConfig\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">/path/to/configsets</str></solr>\");\n      assertThat(absConfig.getConfigSetBaseDirectory().toAbsolutePath(), is(Paths.get(\"/path/to/configsets\").toAbsolutePath()));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultConfigSetBasePathResolution() throws IOException {\n    try (SolrResourceLoader loader = new SolrResourceLoader(new File(\"/path/to/solr/home\").getAbsolutePath())) {\n\n      NodeConfig config\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">configsets</str></solr>\");\n      assertThat(config.getConfigSetBaseDirectory().toAbsolutePath(),\n                  is(Paths.get(\"/path/to/solr/home/configsets\").toAbsolutePath()));\n\n      NodeConfig absConfig\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">/path/to/configsets</str></solr>\");\n      assertThat(absConfig.getConfigSetBaseDirectory().toAbsolutePath(), is(Paths.get(\"/path/to/configsets\").toAbsolutePath()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testDefaultConfigSetBasePathResolution().mjava","sourceNew":"  @Test\n  public void testDefaultConfigSetBasePathResolution() throws IOException {\n    Path solrHome = Paths.get(\"/path/to/solr/home\");\n\n    NodeConfig config\n        = SolrXmlConfig.fromString(solrHome, \"<solr><str name=\\\"configSetBaseDir\\\">configsets</str></solr>\");\n    assertThat(config.getConfigSetBaseDirectory().toAbsolutePath(),\n                is(Paths.get(\"/path/to/solr/home/configsets\").toAbsolutePath()));\n\n    NodeConfig absConfig\n        = SolrXmlConfig.fromString(solrHome, \"<solr><str name=\\\"configSetBaseDir\\\">/path/to/configsets</str></solr>\");\n    assertThat(absConfig.getConfigSetBaseDirectory().toAbsolutePath(), is(Paths.get(\"/path/to/configsets\").toAbsolutePath()));\n\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultConfigSetBasePathResolution() throws IOException {\n    try (SolrResourceLoader loader = new SolrResourceLoader(Paths.get(\"/path/to/solr/home\"))) {\n\n      NodeConfig config\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">configsets</str></solr>\");\n      assertThat(config.getConfigSetBaseDirectory().toAbsolutePath(),\n                  is(Paths.get(\"/path/to/solr/home/configsets\").toAbsolutePath()));\n\n      NodeConfig absConfig\n          = SolrXmlConfig.fromString(loader, \"<solr><str name=\\\"configSetBaseDir\\\">/path/to/configsets</str></solr>\");\n      assertThat(absConfig.getConfigSetBaseDirectory().toAbsolutePath(), is(Paths.get(\"/path/to/configsets\").toAbsolutePath()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"740789b0998e900b1f93180f549f88ecc6e24fd7":["9dc6df6d3cec2cda16c96f408123470a6c069a29"],"a20bc20e2128dd8cb4c365f7eda4a3e4f7fa91d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["740789b0998e900b1f93180f549f88ecc6e24fd7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f1f80ac2d77bc7b362eae2ad04fd39c469648ca":["a20bc20e2128dd8cb4c365f7eda4a3e4f7fa91d7"],"9dc6df6d3cec2cda16c96f408123470a6c069a29":["2f1f80ac2d77bc7b362eae2ad04fd39c469648ca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"740789b0998e900b1f93180f549f88ecc6e24fd7":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"a20bc20e2128dd8cb4c365f7eda4a3e4f7fa91d7":["2f1f80ac2d77bc7b362eae2ad04fd39c469648ca"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a20bc20e2128dd8cb4c365f7eda4a3e4f7fa91d7"],"2f1f80ac2d77bc7b362eae2ad04fd39c469648ca":["9dc6df6d3cec2cda16c96f408123470a6c069a29"],"9dc6df6d3cec2cda16c96f408123470a6c069a29":["740789b0998e900b1f93180f549f88ecc6e24fd7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}