{"path":"solr/core/src/test/org/apache/solr/update/processor/UUIDUpdateProcessorFallbackTest#testProcessorPrefixReqParam().mjava","commits":[{"id":"701a87b43e511b5f16b96d82d67bfa1409240b27","date":1501141027,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UUIDUpdateProcessorFallbackTest#testProcessorPrefixReqParam().mjava","pathOld":"/dev/null","sourceNew":"  public void testProcessorPrefixReqParam() throws Exception {\n    List<UpdateRequestProcessorFactory> processors = UpdateRequestProcessorChain.getReqProcessors(\"uuid\", h.getCore());\n    UpdateRequestProcessorFactory processorFactory = processors.get(0);\n    assertTrue(processorFactory instanceof UUIDUpdateProcessorFactory);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(h.getCore(), new ModifiableSolrParams());\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"random_s\", \"random_val\");\n\n    processorFactory.getInstance(req, rsp, null).processAdd(cmd);\n    assertNotNull(cmd.solrDoc);\n    assertNotNull(cmd.solrDoc.get(\"id\"));\n    assertNotNull(cmd.solrDoc.get(\"id\").getValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UUIDUpdateProcessorFallbackTest#testProcessorPrefixReqParam().mjava","pathOld":"/dev/null","sourceNew":"  public void testProcessorPrefixReqParam() throws Exception {\n    List<UpdateRequestProcessorFactory> processors = UpdateRequestProcessorChain.getReqProcessors(\"uuid\", h.getCore());\n    UpdateRequestProcessorFactory processorFactory = processors.get(0);\n    assertTrue(processorFactory instanceof UUIDUpdateProcessorFactory);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(h.getCore(), new ModifiableSolrParams());\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"random_s\", \"random_val\");\n\n    processorFactory.getInstance(req, rsp, null).processAdd(cmd);\n    assertNotNull(cmd.solrDoc);\n    assertNotNull(cmd.solrDoc.get(\"id\"));\n    assertNotNull(cmd.solrDoc.get(\"id\").getValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","701a87b43e511b5f16b96d82d67bfa1409240b27"],"701a87b43e511b5f16b96d82d67bfa1409240b27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["701a87b43e511b5f16b96d82d67bfa1409240b27"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"701a87b43e511b5f16b96d82d67bfa1409240b27":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","701a87b43e511b5f16b96d82d67bfa1409240b27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}