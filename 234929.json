{"path":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","sourceNew":"  private SortField.Type getDVStringSortType() {\n    if (dvStringSorted) {\n      // If you index as sorted source you can still sort by\n      // value instead:\n      return random.nextBoolean() ? SortField.Type.STRING : SortField.Type.STRING_VAL;\n    } else {\n      return SortField.Type.STRING_VAL;\n    }\n  }\n\n","sourceOld":"  private SortField.Type getDVStringSortType() {\n    if (dvStringSorted) {\n      // If you index as sorted source you can still sort by\n      // value instead:\n      return random.nextBoolean() ? SortField.Type.STRING : SortField.Type.STRING_VAL;\n    } else {\n      return SortField.Type.STRING_VAL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","sourceNew":"  private SortField.Type getDVStringSortType() {\n    if (dvStringSorted) {\n      // If you index as sorted source you can still sort by\n      // value instead:\n      return random().nextBoolean() ? SortField.Type.STRING : SortField.Type.STRING_VAL;\n    } else {\n      return SortField.Type.STRING_VAL;\n    }\n  }\n\n","sourceOld":"  private SortField.Type getDVStringSortType() {\n    if (dvStringSorted) {\n      // If you index as sorted source you can still sort by\n      // value instead:\n      return random.nextBoolean() ? SortField.Type.STRING : SortField.Type.STRING_VAL;\n    } else {\n      return SortField.Type.STRING_VAL;\n    }\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3e29774db46ad98ca4a8d7fcbfab633ebc01f358","date":1355170812,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","sourceNew":"  private SortField.Type getDVStringSortType() {\n    if (dvStringSorted) {\n      // If you index as sorted source you can still sort by\n      // value instead:\n      // nocommit re-enable?  we need to fix FC.getTerms to\n      // \"fallback\" to getTermsIndex if the sorted DV is\n      // available\n      //return random().nextBoolean() ? SortField.Type.STRING : SortField.Type.STRING_VAL;\n      return SortField.Type.STRING;\n    } else {\n      return SortField.Type.STRING_VAL;\n    }\n  }\n\n","sourceOld":"  private SortField.Type getDVStringSortType() {\n    if (dvStringSorted) {\n      // If you index as sorted source you can still sort by\n      // value instead:\n      return random().nextBoolean() ? SortField.Type.STRING : SortField.Type.STRING_VAL;\n    } else {\n      return SortField.Type.STRING_VAL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"81b3eb905adc154edd219aa1d24cd6976ac1f06c","date":1358806957,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","sourceNew":"  private SortField.Type getDVStringSortType() {\n    if (dvStringSorted) {\n      // If you index as sorted source you can still sort by\n      // value instead:\n      return random().nextBoolean() ? SortField.Type.STRING : SortField.Type.STRING_VAL;\n    } else {\n      return SortField.Type.STRING_VAL;\n    }\n  }\n\n","sourceOld":"  private SortField.Type getDVStringSortType() {\n    if (dvStringSorted) {\n      // If you index as sorted source you can still sort by\n      // value instead:\n      // nocommit re-enable?  we need to fix FC.getTerms to\n      // \"fallback\" to getTermsIndex if the sorted DV is\n      // available\n      //return random().nextBoolean() ? SortField.Type.STRING : SortField.Type.STRING_VAL;\n      return SortField.Type.STRING;\n    } else {\n      return SortField.Type.STRING_VAL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"355622f052f4bec346a66a7433d813b0c5fb753a","date":1359122015,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","sourceNew":"  private SortField.Type getDVStringSortType() {\n    return getDVStringSortType(true);\n  }\n\n","sourceOld":"  private SortField.Type getDVStringSortType() {\n    if (dvStringSorted) {\n      // If you index as sorted source you can still sort by\n      // value instead:\n      return random().nextBoolean() ? SortField.Type.STRING : SortField.Type.STRING_VAL;\n    } else {\n      return SortField.Type.STRING_VAL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","sourceNew":"  private SortField.Type getDVStringSortType() {\n    return getDVStringSortType(true);\n  }\n\n","sourceOld":"  private SortField.Type getDVStringSortType() {\n    if (dvStringSorted) {\n      // If you index as sorted source you can still sort by\n      // value instead:\n      return random().nextBoolean() ? SortField.Type.STRING : SortField.Type.STRING_VAL;\n    } else {\n      return SortField.Type.STRING_VAL;\n    }\n  }\n\n","bugFix":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f183729ece15402db94402d482f29ebac4f7f54","date":1360963151,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","sourceNew":null,"sourceOld":"  private SortField.Type getDVStringSortType() {\n    return getDVStringSortType(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#getDVStringSortType().mjava","sourceNew":null,"sourceOld":"  private SortField.Type getDVStringSortType() {\n    return getDVStringSortType(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5f183729ece15402db94402d482f29ebac4f7f54":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"81b3eb905adc154edd219aa1d24cd6976ac1f06c":["3e29774db46ad98ca4a8d7fcbfab633ebc01f358"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","355622f052f4bec346a66a7433d813b0c5fb753a"],"355622f052f4bec346a66a7433d813b0c5fb753a":["81b3eb905adc154edd219aa1d24cd6976ac1f06c"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["d4d69c535930b5cce125cff868d40f6373dc27d4","5f183729ece15402db94402d482f29ebac4f7f54"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f183729ece15402db94402d482f29ebac4f7f54"]},"commit2Childs":{"5f183729ece15402db94402d482f29ebac4f7f54":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"81b3eb905adc154edd219aa1d24cd6976ac1f06c":["355622f052f4bec346a66a7433d813b0c5fb753a"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["5f183729ece15402db94402d482f29ebac4f7f54","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"355622f052f4bec346a66a7433d813b0c5fb753a":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["d4d69c535930b5cce125cff868d40f6373dc27d4","3e29774db46ad98ca4a8d7fcbfab633ebc01f358"],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["81b3eb905adc154edd219aa1d24cd6976ac1f06c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}