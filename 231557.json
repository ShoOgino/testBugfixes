{"path":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#assertCount(QueryResponse,int).mjava","commits":[{"id":"4a0429d772811db4118d0e6578bfd5d18f0e27db","date":1402412928,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#assertCount(QueryResponse,int).mjava","pathOld":"/dev/null","sourceNew":"  private void assertCount(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f1a94d9ddbf4f757ca9cb318d1ec8736b8f651f","date":1402515319,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#assertCount(QueryResponse,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#assertCount(QueryResponse,int).mjava","sourceNew":"  private void assertCount(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n\n    long numFound = rsp.getResults().getNumFound();\n    if(c.intValue() != numFound) {\n      throw new Exception(\"Count does not equal numFound:\"+c.intValue()+\":\"+numFound);\n    }\n  }\n\n","sourceOld":"  private void assertCount(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#assertCount(QueryResponse,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#assertCount(QueryResponse,int).mjava","sourceNew":"  private void assertCount(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n\n    long numFound = rsp.getResults().getNumFound();\n    if(c.intValue() != numFound) {\n      throw new Exception(\"Count does not equal numFound:\"+c.intValue()+\":\"+numFound);\n    }\n  }\n\n","sourceOld":"  private void assertCount(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#assertCount(QueryResponse,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#assertCount(QueryResponse,int).mjava","sourceNew":"  private void assertCount(QueryResponse rsp, int count) throws Exception {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList response = rsp.getResponse();\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n\n    long numFound = rsp.getResults().getNumFound();\n    if(c.intValue() != numFound) {\n      throw new Exception(\"Count does not equal numFound:\"+c.intValue()+\":\"+numFound);\n    }\n  }\n\n","sourceOld":"  private void assertCount(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n\n    long numFound = rsp.getResults().getNumFound();\n    if(c.intValue() != numFound) {\n      throw new Exception(\"Count does not equal numFound:\"+c.intValue()+\":\"+numFound);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a0429d772811db4118d0e6578bfd5d18f0e27db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6f1a94d9ddbf4f757ca9cb318d1ec8736b8f651f":["4a0429d772811db4118d0e6578bfd5d18f0e27db"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["4a0429d772811db4118d0e6578bfd5d18f0e27db","6f1a94d9ddbf4f757ca9cb318d1ec8736b8f651f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["6f1a94d9ddbf4f757ca9cb318d1ec8736b8f651f"]},"commit2Childs":{"4a0429d772811db4118d0e6578bfd5d18f0e27db":["6f1a94d9ddbf4f757ca9cb318d1ec8736b8f651f","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a0429d772811db4118d0e6578bfd5d18f0e27db"],"6f1a94d9ddbf4f757ca9cb318d1ec8736b8f651f":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","e98520789adb1d5ad05afb4956eca0944a929688"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}