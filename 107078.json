{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","sourceNew":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setUseCompoundFile(r.nextBoolean());\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 10, 50));\n    }\n    return logmp;\n  }\n\n","sourceOld":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setUseCompoundFile(r.nextBoolean());\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 10, 50));\n    }\n    return logmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7211b1fba79597955a78855e9f646de9248ca57","date":1345763711,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","sourceNew":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setUseCompoundFile(r.nextBoolean());\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 10, 50));\n    }\n    logmp.setUseCompoundFile(r.nextBoolean());\n    logmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    if (rarely()) {\n      logmp.setMaxCFSSegmentSizeMB(0.2 + r.nextDouble() * 2.0);\n    }\n    return logmp;\n  }\n\n","sourceOld":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setUseCompoundFile(r.nextBoolean());\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 10, 50));\n    }\n    return logmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","sourceNew":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setUseCompoundFile(r.nextBoolean());\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 10, 50));\n    }\n    logmp.setUseCompoundFile(r.nextBoolean());\n    logmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    if (rarely()) {\n      logmp.setMaxCFSSegmentSizeMB(0.2 + r.nextDouble() * 2.0);\n    }\n    return logmp;\n  }\n\n","sourceOld":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setUseCompoundFile(r.nextBoolean());\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 10, 50));\n    }\n    return logmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","sourceNew":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 10, 50));\n    }\n    configureRandom(r, logmp);\n    return logmp;\n  }\n\n","sourceOld":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setUseCompoundFile(r.nextBoolean());\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 10, 50));\n    }\n    logmp.setUseCompoundFile(r.nextBoolean());\n    logmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    if (rarely()) {\n      logmp.setMaxCFSSegmentSizeMB(0.2 + r.nextDouble() * 2.0);\n    }\n    return logmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","sourceNew":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(TestUtil.nextInt(r, 10, 50));\n    }\n    configureRandom(r, logmp);\n    return logmp;\n  }\n\n","sourceOld":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(_TestUtil.nextInt(r, 10, 50));\n    }\n    configureRandom(r, logmp);\n    return logmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f","date":1579652839,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","sourceNew":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(TestUtil.nextInt(r, 100, 500));\n    }\n    configureRandom(r, logmp);\n    return logmp;\n  }\n\n","sourceOld":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(TestUtil.nextInt(r, 10, 50));\n    }\n    configureRandom(r, logmp);\n    return logmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"661cbb70a109fd382a2c85c6250500a8fc9ab480","date":1579873610,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newLogMergePolicy(Random).mjava","sourceNew":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(TestUtil.nextInt(r, 10, 50));\n    }\n    configureRandom(r, logmp);\n    return logmp;\n  }\n\n","sourceOld":"  public static LogMergePolicy newLogMergePolicy(Random r) {\n    LogMergePolicy logmp = r.nextBoolean() ? new LogDocMergePolicy() : new LogByteSizeMergePolicy();\n    logmp.setCalibrateSizeByDeletes(r.nextBoolean());\n    if (rarely(r)) {\n      logmp.setMergeFactor(TestUtil.nextInt(r, 2, 9));\n    } else {\n      logmp.setMergeFactor(TestUtil.nextInt(r, 100, 500));\n    }\n    configureRandom(r, logmp);\n    return logmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","c7211b1fba79597955a78855e9f646de9248ca57"],"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["6613659748fe4411a7dcf85266e55db1f95f7315"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["c7211b1fba79597955a78855e9f646de9248ca57"],"661cbb70a109fd382a2c85c6250500a8fc9ab480":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f"],"6613659748fe4411a7dcf85266e55db1f95f7315":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7211b1fba79597955a78855e9f646de9248ca57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["661cbb70a109fd382a2c85c6250500a8fc9ab480"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["661cbb70a109fd382a2c85c6250500a8fc9ab480"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["6613659748fe4411a7dcf85266e55db1f95f7315"],"661cbb70a109fd382a2c85c6250500a8fc9ab480":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["001b25b42373b22a52f399dbf072f1224632e8e6","c7211b1fba79597955a78855e9f646de9248ca57"],"6613659748fe4411a7dcf85266e55db1f95f7315":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f"],"c7211b1fba79597955a78855e9f646de9248ca57":["001b25b42373b22a52f399dbf072f1224632e8e6","088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}