{"path":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","commits":[{"id":"4ef80fac452dc9fe7ee68e418183ebbeb8d4001c","date":1370731787,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","pathOld":"/dev/null","sourceNew":"  public void testFuzzinessLong2() throws Exception {\n     //Lucene-5033\n     Directory directory = newDirectory();\n     RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n     addDoc(\"abcdef\", writer);\n     addDoc(\"segment\", writer);\n\n     IndexReader reader = writer.getReader();\n     IndexSearcher searcher = newSearcher(reader);\n     writer.close();\n\n     SlowFuzzyQuery query;\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 3f, 0);   \n     ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(0, hits.length);\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 4f, 0);   \n     hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(1, hits.length);\n     reader.close();\n     directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","sourceNew":"  public void testFuzzinessLong2() throws Exception {\n     //Lucene-5033\n     Directory directory = newDirectory();\n     RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n     addDoc(\"abcdef\", writer);\n     addDoc(\"segment\", writer);\n\n     IndexReader reader = writer.getReader();\n     IndexSearcher searcher = newSearcher(reader);\n     writer.shutdown();\n\n     SlowFuzzyQuery query;\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 3f, 0);   \n     ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(0, hits.length);\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 4f, 0);   \n     hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(1, hits.length);\n     reader.close();\n     directory.close();\n  }\n\n","sourceOld":"  public void testFuzzinessLong2() throws Exception {\n     //Lucene-5033\n     Directory directory = newDirectory();\n     RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n     addDoc(\"abcdef\", writer);\n     addDoc(\"segment\", writer);\n\n     IndexReader reader = writer.getReader();\n     IndexSearcher searcher = newSearcher(reader);\n     writer.close();\n\n     SlowFuzzyQuery query;\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 3f, 0);   \n     ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(0, hits.length);\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 4f, 0);   \n     hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(1, hits.length);\n     reader.close();\n     directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","sourceNew":"  public void testFuzzinessLong2() throws Exception {\n     //Lucene-5033\n     Directory directory = newDirectory();\n     RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n     addDoc(\"abcdef\", writer);\n     addDoc(\"segment\", writer);\n\n     IndexReader reader = writer.getReader();\n     IndexSearcher searcher = newSearcher(reader);\n     writer.close();\n\n     SlowFuzzyQuery query;\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 3f, 0);   \n     ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(0, hits.length);\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 4f, 0);   \n     hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(1, hits.length);\n     reader.close();\n     directory.close();\n  }\n\n","sourceOld":"  public void testFuzzinessLong2() throws Exception {\n     //Lucene-5033\n     Directory directory = newDirectory();\n     RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n     addDoc(\"abcdef\", writer);\n     addDoc(\"segment\", writer);\n\n     IndexReader reader = writer.getReader();\n     IndexSearcher searcher = newSearcher(reader);\n     writer.shutdown();\n\n     SlowFuzzyQuery query;\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 3f, 0);   \n     ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(0, hits.length);\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 4f, 0);   \n     hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(1, hits.length);\n     reader.close();\n     directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","sourceNew":"  public void testFuzzinessLong2() throws Exception {\n     //Lucene-5033\n     Directory directory = newDirectory();\n     RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n     addDoc(\"abcdef\", writer);\n     addDoc(\"segment\", writer);\n\n     IndexReader reader = writer.getReader();\n     IndexSearcher searcher = newSearcher(reader);\n     writer.close();\n\n     SlowFuzzyQuery query;\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 3f, 0);   \n     ScoreDoc[] hits = searcher.search(query, 1000).scoreDocs;\n     assertEquals(0, hits.length);\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 4f, 0);   \n     hits = searcher.search(query, 1000).scoreDocs;\n     assertEquals(1, hits.length);\n     reader.close();\n     directory.close();\n  }\n\n","sourceOld":"  public void testFuzzinessLong2() throws Exception {\n     //Lucene-5033\n     Directory directory = newDirectory();\n     RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n     addDoc(\"abcdef\", writer);\n     addDoc(\"segment\", writer);\n\n     IndexReader reader = writer.getReader();\n     IndexSearcher searcher = newSearcher(reader);\n     writer.close();\n\n     SlowFuzzyQuery query;\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 3f, 0);   \n     ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(0, hits.length);\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 4f, 0);   \n     hits = searcher.search(query, null, 1000).scoreDocs;\n     assertEquals(1, hits.length);\n     reader.close();\n     directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9c5c0e8e826d8fd169840564bcf8606cf81d15b","date":1473715404,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","sourceNew":null,"sourceOld":"  public void testFuzzinessLong2() throws Exception {\n     //Lucene-5033\n     Directory directory = newDirectory();\n     RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n     addDoc(\"abcdef\", writer);\n     addDoc(\"segment\", writer);\n\n     IndexReader reader = writer.getReader();\n     IndexSearcher searcher = newSearcher(reader);\n     writer.close();\n\n     SlowFuzzyQuery query;\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 3f, 0);   \n     ScoreDoc[] hits = searcher.search(query, 1000).scoreDocs;\n     assertEquals(0, hits.length);\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 4f, 0);   \n     hits = searcher.search(query, 1000).scoreDocs;\n     assertEquals(1, hits.length);\n     reader.close();\n     directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","sourceNew":null,"sourceOld":"  public void testFuzzinessLong2() throws Exception {\n     //Lucene-5033\n     Directory directory = newDirectory();\n     RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n     addDoc(\"abcdef\", writer);\n     addDoc(\"segment\", writer);\n\n     IndexReader reader = writer.getReader();\n     IndexSearcher searcher = newSearcher(reader);\n     writer.close();\n\n     SlowFuzzyQuery query;\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 3f, 0);   \n     ScoreDoc[] hits = searcher.search(query, 1000).scoreDocs;\n     assertEquals(0, hits.length);\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 4f, 0);   \n     hits = searcher.search(query, 1000).scoreDocs;\n     assertEquals(1, hits.length);\n     reader.close();\n     directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","sourceNew":null,"sourceOld":"  public void testFuzzinessLong2() throws Exception {\n     //Lucene-5033\n     Directory directory = newDirectory();\n     RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n     addDoc(\"abcdef\", writer);\n     addDoc(\"segment\", writer);\n\n     IndexReader reader = writer.getReader();\n     IndexSearcher searcher = newSearcher(reader);\n     writer.close();\n\n     SlowFuzzyQuery query;\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 3f, 0);   \n     ScoreDoc[] hits = searcher.search(query, 1000).scoreDocs;\n     assertEquals(0, hits.length);\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 4f, 0);   \n     hits = searcher.search(query, 1000).scoreDocs;\n     assertEquals(1, hits.length);\n     reader.close();\n     directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testFuzzinessLong2().mjava","sourceNew":null,"sourceOld":"  public void testFuzzinessLong2() throws Exception {\n     //Lucene-5033\n     Directory directory = newDirectory();\n     RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n     addDoc(\"abcdef\", writer);\n     addDoc(\"segment\", writer);\n\n     IndexReader reader = writer.getReader();\n     IndexSearcher searcher = newSearcher(reader);\n     writer.close();\n\n     SlowFuzzyQuery query;\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 3f, 0);   \n     ScoreDoc[] hits = searcher.search(query, 1000).scoreDocs;\n     assertEquals(0, hits.length);\n     \n     query = new SlowFuzzyQuery(new Term(\"field\", \"abcxxxx\"), 4f, 0);   \n     hits = searcher.search(query, 1000).scoreDocs;\n     assertEquals(1, hits.length);\n     reader.close();\n     directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ef80fac452dc9fe7ee68e418183ebbeb8d4001c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","89424def13674ea17829b41c5883c54ecc31a132"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["4ef80fac452dc9fe7ee68e418183ebbeb8d4001c"],"b9c5c0e8e826d8fd169840564bcf8606cf81d15b":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"89424def13674ea17829b41c5883c54ecc31a132":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","b9c5c0e8e826d8fd169840564bcf8606cf81d15b"]},"commit2Childs":{"4ef80fac452dc9fe7ee68e418183ebbeb8d4001c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ef80fac452dc9fe7ee68e418183ebbeb8d4001c"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","b9c5c0e8e826d8fd169840564bcf8606cf81d15b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","89424def13674ea17829b41c5883c54ecc31a132"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"b9c5c0e8e826d8fd169840564bcf8606cf81d15b":["89424def13674ea17829b41c5883c54ecc31a132"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}