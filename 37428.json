{"path":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","pathOld":"/dev/null","sourceNew":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      for (final TermData term : terms)\n        term.write(termsConsumer);\n      termsConsumer.finish();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ecd298fdc085e7eba27afa7fae58df1ba1a2808","date":1295102557,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","sourceNew":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      long sumTotalTermCount = 0;\n      for (final TermData term : terms) {\n        sumTotalTermCount += term.write(termsConsumer);\n      }\n      termsConsumer.finish(sumTotalTermCount);\n    }\n\n","sourceOld":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      for (final TermData term : terms)\n        term.write(termsConsumer);\n      termsConsumer.finish();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16843358872ed92ba92888ab99df297550b9a36a","date":1295144724,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","sourceNew":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      long sumTotalTermCount = 0;\n      for (final TermData term : terms) {\n        sumTotalTermCount += term.write(termsConsumer);\n      }\n      termsConsumer.finish(sumTotalTermCount);\n    }\n\n","sourceOld":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      for (final TermData term : terms)\n        term.write(termsConsumer);\n      termsConsumer.finish();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","sourceNew":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      long sumTotalTermCount = 0;\n      for (final TermData term : terms) {\n        sumTotalTermCount += term.write(termsConsumer);\n      }\n      termsConsumer.finish(sumTotalTermCount);\n    }\n\n","sourceOld":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      for (final TermData term : terms)\n        term.write(termsConsumer);\n      termsConsumer.finish();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94","date":1310159023,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","sourceNew":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      long sumTotalTermCount = 0;\n      long sumDF = 0;\n      for (final TermData term : terms) {\n        sumDF += term.docs.length;\n        sumTotalTermCount += term.write(termsConsumer);\n      }\n      termsConsumer.finish(sumTotalTermCount, sumDF);\n    }\n\n","sourceOld":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      long sumTotalTermCount = 0;\n      for (final TermData term : terms) {\n        sumTotalTermCount += term.write(termsConsumer);\n      }\n      termsConsumer.finish(sumTotalTermCount);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63639dd66fd5bd9b90bc24dd596ae01575f27cc4","date":1310237454,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","sourceNew":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      long sumTotalTermCount = 0;\n      long sumDF = 0;\n      for (final TermData term : terms) {\n        sumDF += term.docs.length;\n        sumTotalTermCount += term.write(termsConsumer);\n      }\n      termsConsumer.finish(sumTotalTermCount, sumDF);\n    }\n\n","sourceOld":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      long sumTotalTermCount = 0;\n      for (final TermData term : terms) {\n        sumTotalTermCount += term.write(termsConsumer);\n      }\n      termsConsumer.finish(sumTotalTermCount);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25433c5cacacb7a2055d62d4d36b0daf210e0a10","date":1315747522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","sourceNew":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      long sumTotalTermCount = 0;\n      long sumDF = 0;\n      OpenBitSet visitedDocs = new OpenBitSet();\n      for (final TermData term : terms) {\n        for (int i = 0; i < term.docs.length; i++) {\n          visitedDocs.set(term.docs[i]);\n        }\n        sumDF += term.docs.length;\n        sumTotalTermCount += term.write(termsConsumer);\n      }\n      termsConsumer.finish(sumTotalTermCount, sumDF, (int) visitedDocs.cardinality());\n    }\n\n","sourceOld":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      long sumTotalTermCount = 0;\n      long sumDF = 0;\n      for (final TermData term : terms) {\n        sumDF += term.docs.length;\n        sumTotalTermCount += term.write(termsConsumer);\n      }\n      termsConsumer.finish(sumTotalTermCount, sumDF);\n    }\n\n","bugFix":null,"bugIntro":["29e23e367cc757f42cdfce2bcbf21e68cd209cda","29e23e367cc757f42cdfce2bcbf21e68cd209cda"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#write(FieldsConsumer).mjava","sourceNew":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      long sumTotalTermCount = 0;\n      long sumDF = 0;\n      OpenBitSet visitedDocs = new OpenBitSet();\n      for (final TermData term : terms) {\n        for (int i = 0; i < term.docs.length; i++) {\n          visitedDocs.set(term.docs[i]);\n        }\n        sumDF += term.docs.length;\n        sumTotalTermCount += term.write(termsConsumer);\n      }\n      termsConsumer.finish(sumTotalTermCount, sumDF, (int) visitedDocs.cardinality());\n    }\n\n","sourceOld":"    public void write(final FieldsConsumer consumer) throws Throwable {\n      Arrays.sort(terms);\n      final TermsConsumer termsConsumer = consumer.addField(fieldInfo);\n      long sumTotalTermCount = 0;\n      long sumDF = 0;\n      OpenBitSet visitedDocs = new OpenBitSet();\n      for (final TermData term : terms) {\n        for (int i = 0; i < term.docs.length; i++) {\n          visitedDocs.set(term.docs[i]);\n        }\n        sumDF += term.docs.length;\n        sumTotalTermCount += term.write(termsConsumer);\n      }\n      termsConsumer.finish(sumTotalTermCount, sumDF, (int) visitedDocs.cardinality());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"25433c5cacacb7a2055d62d4d36b0daf210e0a10":["f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["25433c5cacacb7a2055d62d4d36b0daf210e0a10"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16843358872ed92ba92888ab99df297550b9a36a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94":["6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":["6ecd298fdc085e7eba27afa7fae58df1ba1a2808","f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"25433c5cacacb7a2055d62d4d36b0daf210e0a10":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"16843358872ed92ba92888ab99df297550b9a36a":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94":["25433c5cacacb7a2055d62d4d36b0daf210e0a10","63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":[],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94","63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","63639dd66fd5bd9b90bc24dd596ae01575f27cc4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}