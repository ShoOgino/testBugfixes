{"path":"lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost)) {\n        return false;\n      }\n      \n      if (context == null) {\n        if (other.context != null) {\n          return false;\n        }\n      } else if (!context.equals(other.context)) {\n        return false;\n      }\n      \n      if (match == null) {\n        if (other.match != null) {\n          return false;\n        }\n      } else if (!match.equals(other.match)) {\n        return false;\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost)) {\n        return false;\n      }\n      \n      if (context == null) {\n        if (other.context != null) {\n          return false;\n        }\n      } else if (!context.equals(other.context)) {\n        return false;\n      }\n      \n      if (match == null) {\n        if (other.match != null) {\n          return false;\n        }\n      } else if (!match.equals(other.match)) {\n        return false;\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a22ad352a73aa6ab982b6377e1714950edaf62f0","date":1366051636,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n      \n      if (!super.equals(obj)) {\n        return false;\n      }\n\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost)) {\n        return false;\n      }\n      \n      if (context == null) {\n        if (other.context != null) {\n          return false;\n        }\n      } else if (!context.equals(other.context)) {\n        return false;\n      }\n      \n      if (match == null) {\n        if (other.match != null) {\n          return false;\n        }\n      } else if (!match.equals(other.match)) {\n        return false;\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost)) {\n        return false;\n      }\n      \n      if (context == null) {\n        if (other.context != null) {\n          return false;\n        }\n      } else if (!context.equals(other.context)) {\n        return false;\n      }\n      \n      if (match == null) {\n        if (other.match != null) {\n          return false;\n        }\n      } else if (!match.equals(other.match)) {\n        return false;\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (super.equals(obj) == false) {\n        return false;\n      }\n      BoostingQuery that = (BoostingQuery) obj;\n      return match.equals(that.match)\n          && context.equals(that.context)\n          && Float.floatToIntBits(boost) == Float.floatToIntBits(that.boost);\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n      \n      if (!super.equals(obj)) {\n        return false;\n      }\n\n      BoostingQuery other = (BoostingQuery) obj;\n      if (Float.floatToIntBits(boost) != Float.floatToIntBits(other.boost)) {\n        return false;\n      }\n      \n      if (context == null) {\n        if (other.context != null) {\n          return false;\n        }\n      } else if (!context.equals(other.context)) {\n        return false;\n      }\n      \n      if (match == null) {\n        if (other.match != null) {\n          return false;\n        }\n      } else if (!match.equals(other.match)) {\n        return false;\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object other) {\n      return sameClassAs(other) &&\n             equalsTo(getClass().cast(other));\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (super.equals(obj) == false) {\n        return false;\n      }\n      BoostingQuery that = (BoostingQuery) obj;\n      return match.equals(that.match)\n          && context.equals(that.context)\n          && Float.floatToIntBits(boost) == Float.floatToIntBits(that.boost);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object other) {\n      return sameClassAs(other) &&\n             equalsTo(getClass().cast(other));\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (super.equals(obj) == false) {\n        return false;\n      }\n      BoostingQuery that = (BoostingQuery) obj;\n      return match.equals(that.match)\n          && context.equals(that.context)\n          && Float.floatToIntBits(boost) == Float.floatToIntBits(that.boost);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery#equals(Object).mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean equals(Object other) {\n      return sameClassAs(other) &&\n             equalsTo(getClass().cast(other));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["a22ad352a73aa6ab982b6377e1714950edaf62f0"],"a22ad352a73aa6ab982b6377e1714950edaf62f0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a82662cae660e76ded4de1e9b451633e523d83e1":["0e7bc21595222ae4f75509300fbb7726691f387f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a22ad352a73aa6ab982b6377e1714950edaf62f0":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a22ad352a73aa6ab982b6377e1714950edaf62f0"],"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0e7bc21595222ae4f75509300fbb7726691f387f":["a82662cae660e76ded4de1e9b451633e523d83e1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}