{"path":"lucene/core/src/java/org/apache/lucene/index/UpgradeIndexMergePolicy#shouldUpgradeSegment(SegmentCommitInfo).mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/UpgradeIndexMergePolicy#shouldUpgradeSegment(SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/UpgradeIndexMergePolicy#shouldUpgradeSegment(SegmentInfoPerCommit).mjava","sourceNew":"  /** Returns if the given segment should be upgraded. The default implementation\n   * will return {@code !Constants.LUCENE_MAIN_VERSION.equals(si.getVersion())},\n   * so all segments created with a different version number than this Lucene version will\n   * get upgraded.\n   */\n  protected boolean shouldUpgradeSegment(SegmentCommitInfo si) {\n    return !Constants.LUCENE_MAIN_VERSION.equals(si.info.getVersion());\n  }\n\n","sourceOld":"  /** Returns if the given segment should be upgraded. The default implementation\n   * will return {@code !Constants.LUCENE_MAIN_VERSION.equals(si.getVersion())},\n   * so all segments created with a different version number than this Lucene version will\n   * get upgraded.\n   */\n  protected boolean shouldUpgradeSegment(SegmentInfoPerCommit si) {\n    return !Constants.LUCENE_MAIN_VERSION.equals(si.info.getVersion());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"057a1793765d068ea9302f1a29e21734ee58d41e","date":1408130117,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/UpgradeIndexMergePolicy#shouldUpgradeSegment(SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/UpgradeIndexMergePolicy#shouldUpgradeSegment(SegmentCommitInfo).mjava","sourceNew":"  /** Returns if the given segment should be upgraded. The default implementation\n   * will return {@code !Version.LATEST.equals(si.getVersion())},\n   * so all segments created with a different version number than this Lucene version will\n   * get upgraded.\n   */\n  protected boolean shouldUpgradeSegment(SegmentCommitInfo si) {\n    return !Version.LATEST.equals(si.info.getVersion());\n  }\n\n","sourceOld":"  /** Returns if the given segment should be upgraded. The default implementation\n   * will return {@code !Constants.LUCENE_MAIN_VERSION.equals(si.getVersion())},\n   * so all segments created with a different version number than this Lucene version will\n   * get upgraded.\n   */\n  protected boolean shouldUpgradeSegment(SegmentCommitInfo si) {\n    return !Constants.LUCENE_MAIN_VERSION.equals(si.info.getVersion());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"057a1793765d068ea9302f1a29e21734ee58d41e":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["057a1793765d068ea9302f1a29e21734ee58d41e"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["057a1793765d068ea9302f1a29e21734ee58d41e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"057a1793765d068ea9302f1a29e21734ee58d41e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}