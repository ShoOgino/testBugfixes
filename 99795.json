{"path":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","commits":[{"id":"2fcfd8b392582391d5804daa94c05f917c7fbdc7","date":1370873427,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(FastInputStream).mjava","sourceNew":"  public SolrDocument readSolrDocument(DataInputInputStream dis) throws IOException {\n    NamedList nl = (NamedList) readVal(dis);\n    SolrDocument doc = new SolrDocument();\n    for (int i = 0; i < nl.size(); i++) {\n      String name = nl.getName(i);\n      Object val = nl.getVal(i);\n      doc.setField(name, val);\n    }\n    return doc;\n  }\n\n","sourceOld":"  public SolrDocument readSolrDocument(FastInputStream dis) throws IOException {\n    NamedList nl = (NamedList) readVal(dis);\n    SolrDocument doc = new SolrDocument();\n    for (int i = 0; i < nl.size(); i++) {\n      String name = nl.getName(i);\n      Object val = nl.getVal(i);\n      doc.setField(name, val);\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","sourceNew":"  public SolrDocument readSolrDocument(DataInputInputStream dis) throws IOException {\n    NamedList nl = (NamedList) readVal(dis);\n    SolrDocument doc = new SolrDocument();\n    for (int i = 0; i < nl.size(); i++) {\n      String name = nl.getName(i);\n      Object val = nl.getVal(i);\n      doc.setField(name, val);\n    }\n    return doc;\n  }\n\n","sourceOld":"  public SolrDocument readSolrDocument(DataInputInputStream dis) throws IOException {\n    NamedList nl = (NamedList) readVal(dis);\n    SolrDocument doc = new SolrDocument();\n    for (int i = 0; i < nl.size(); i++) {\n      String name = nl.getName(i);\n      Object val = nl.getVal(i);\n      doc.setField(name, val);\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","sourceNew":"  public SolrDocument readSolrDocument(DataInputInputStream dis) throws IOException {\n    NamedList nl = (NamedList) readVal(dis);\n    SolrDocument doc = new SolrDocument();\n    for (int i = 0; i < nl.size(); i++) {\n      String name = nl.getName(i);\n      Object val = nl.getVal(i);\n      doc.setField(name, val);\n    }\n    return doc;\n  }\n\n","sourceOld":"  public SolrDocument readSolrDocument(DataInputInputStream dis) throws IOException {\n    NamedList nl = (NamedList) readVal(dis);\n    SolrDocument doc = new SolrDocument();\n    for (int i = 0; i < nl.size(); i++) {\n      String name = nl.getName(i);\n      Object val = nl.getVal(i);\n      doc.setField(name, val);\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1","date":1402094642,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","sourceNew":"  public SolrDocument readSolrDocument(DataInputInputStream dis) throws IOException {\n    tagByte = dis.readByte();\n    int size = readSize(dis);\n    SolrDocument doc = new SolrDocument();\n    for (int i = 0; i < size; i++) {\n      String fieldName;\n      Object obj = readVal(dis); // could be a field name, or a child document\n      if (obj instanceof SolrDocument) {\n        doc.addChildDocument((SolrDocument)obj);\n        continue;\n      } else {\n        fieldName = (String)obj;\n      }\n      Object fieldVal = readVal(dis);\n      doc.setField(fieldName, fieldVal);\n    }\n    return doc;\n  }\n\n","sourceOld":"  public SolrDocument readSolrDocument(DataInputInputStream dis) throws IOException {\n    NamedList nl = (NamedList) readVal(dis);\n    SolrDocument doc = new SolrDocument();\n    for (int i = 0; i < nl.size(); i++) {\n      String name = nl.getName(i);\n      Object val = nl.getVal(i);\n      doc.setField(name, val);\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2d2a6decc333e7ee3168a5f80a5b910ae34843c","date":1485290305,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","sourceNew":"  public SolrDocument readSolrDocument(DataInputInputStream dis) throws IOException {\n    tagByte = dis.readByte();\n    int size = readSize(dis);\n    SolrDocument doc = new SolrDocument(new LinkedHashMap<>(size));\n    for (int i = 0; i < size; i++) {\n      String fieldName;\n      Object obj = readVal(dis); // could be a field name, or a child document\n      if (obj instanceof SolrDocument) {\n        doc.addChildDocument((SolrDocument)obj);\n        continue;\n      } else {\n        fieldName = (String)obj;\n      }\n      Object fieldVal = readVal(dis);\n      doc.setField(fieldName, fieldVal);\n    }\n    return doc;\n  }\n\n","sourceOld":"  public SolrDocument readSolrDocument(DataInputInputStream dis) throws IOException {\n    tagByte = dis.readByte();\n    int size = readSize(dis);\n    SolrDocument doc = new SolrDocument();\n    for (int i = 0; i < size; i++) {\n      String fieldName;\n      Object obj = readVal(dis); // could be a field name, or a child document\n      if (obj instanceof SolrDocument) {\n        doc.addChildDocument((SolrDocument)obj);\n        continue;\n      } else {\n        fieldName = (String)obj;\n      }\n      Object fieldVal = readVal(dis);\n      doc.setField(fieldName, fieldVal);\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readSolrDocument(DataInputInputStream).mjava","sourceNew":"  public SolrDocument readSolrDocument(DataInputInputStream dis) throws IOException {\n    tagByte = dis.readByte();\n    int size = readSize(dis);\n    SolrDocument doc = new SolrDocument(new LinkedHashMap<>(size));\n    for (int i = 0; i < size; i++) {\n      String fieldName;\n      Object obj = readVal(dis); // could be a field name, or a child document\n      if (obj instanceof SolrDocument) {\n        doc.addChildDocument((SolrDocument)obj);\n        continue;\n      } else {\n        fieldName = (String)obj;\n      }\n      Object fieldVal = readVal(dis);\n      doc.setField(fieldName, fieldVal);\n    }\n    return doc;\n  }\n\n","sourceOld":"  public SolrDocument readSolrDocument(DataInputInputStream dis) throws IOException {\n    tagByte = dis.readByte();\n    int size = readSize(dis);\n    SolrDocument doc = new SolrDocument();\n    for (int i = 0; i < size; i++) {\n      String fieldName;\n      Object obj = readVal(dis); // could be a field name, or a child document\n      if (obj instanceof SolrDocument) {\n        doc.addChildDocument((SolrDocument)obj);\n        continue;\n      } else {\n        fieldName = (String)obj;\n      }\n      Object fieldVal = readVal(dis);\n      doc.setField(fieldName, fieldVal);\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"598b5d23aa7c9732bf473c21a9cd309c44599394":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1","b2d2a6decc333e7ee3168a5f80a5b910ae34843c"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["2fcfd8b392582391d5804daa94c05f917c7fbdc7","19275ba31e621f6da1b83bf13af75233876fd3d4"],"b2d2a6decc333e7ee3168a5f80a5b910ae34843c":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["2fcfd8b392582391d5804daa94c05f917c7fbdc7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b2d2a6decc333e7ee3168a5f80a5b910ae34843c"],"2fcfd8b392582391d5804daa94c05f917c7fbdc7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"b2d2a6decc333e7ee3168a5f80a5b910ae34843c":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2fcfd8b392582391d5804daa94c05f917c7fbdc7"],"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1":["598b5d23aa7c9732bf473c21a9cd309c44599394","b2d2a6decc333e7ee3168a5f80a5b910ae34843c"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","9a862f08ffeb00b03b4c641de86b167b1d6f7cd1"],"2fcfd8b392582391d5804daa94c05f917c7fbdc7":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["598b5d23aa7c9732bf473c21a9cd309c44599394","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}