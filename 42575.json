{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCircleFactory#makeExactGeoCircle(PlanetModel,double,double,double,double).mjava","commits":[{"id":"13591e4b4b5e1616a7627989025ec3b20432357f","date":1506320416,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCircleFactory#makeExactGeoCircle(PlanetModel,double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /** Create an exact GeoCircle given specified bounds and desired accuracy.\n   * @param planetModel is the planet model.\n   * @param latitude is the center latitude.\n   * @param longitude is the center longitude.\n   * @param radius is the radius angle.\n   * @param accuracy is the maximum difference between the circle approximation and the real circle, as computed using\n   *  the Vincenty formula.\n   * @return a GeoCircle corresponding to what was specified.\n   */\n  public static GeoCircle makeExactGeoCircle(final PlanetModel planetModel, final double latitude, final double longitude, final double radius, final double accuracy) {\n    if (radius < Vector.MINIMUM_ANGULAR_RESOLUTION) {\n      return new GeoDegeneratePoint(planetModel, latitude, longitude);\n    }\n    return new GeoExactCircle(planetModel, latitude, longitude, radius, accuracy);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2252ea609db951d15af4430bee806a8d09fd8d6d","date":1506501078,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCircleFactory#makeExactGeoCircle(PlanetModel,double,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCircleFactory#makeExactGeoCircle(PlanetModel,double,double,double,double).mjava","sourceNew":"  /** Create an exact GeoCircle given specified bounds and desired accuracy.\n   * @param planetModel is the planet model.\n   * @param latitude is the center latitude.\n   * @param longitude is the center longitude.\n   * @param radius is the radius surface distance.\n   * @param accuracy is the maximum linear distance between the circle approximation and the real circle, as computed using\n   *  the Vincenty formula.\n   * @return a GeoCircle corresponding to what was specified.\n   */\n  public static GeoCircle makeExactGeoCircle(final PlanetModel planetModel, final double latitude, final double longitude, final double radius, final double accuracy) {\n    if (radius < Vector.MINIMUM_ANGULAR_RESOLUTION) {\n      return new GeoDegeneratePoint(planetModel, latitude, longitude);\n    }\n    return new GeoExactCircle(planetModel, latitude, longitude, radius, accuracy);\n  }\n\n","sourceOld":"  /** Create an exact GeoCircle given specified bounds and desired accuracy.\n   * @param planetModel is the planet model.\n   * @param latitude is the center latitude.\n   * @param longitude is the center longitude.\n   * @param radius is the radius angle.\n   * @param accuracy is the maximum difference between the circle approximation and the real circle, as computed using\n   *  the Vincenty formula.\n   * @return a GeoCircle corresponding to what was specified.\n   */\n  public static GeoCircle makeExactGeoCircle(final PlanetModel planetModel, final double latitude, final double longitude, final double radius, final double accuracy) {\n    if (radius < Vector.MINIMUM_ANGULAR_RESOLUTION) {\n      return new GeoDegeneratePoint(planetModel, latitude, longitude);\n    }\n    return new GeoExactCircle(planetModel, latitude, longitude, radius, accuracy);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCircleFactory#makeExactGeoCircle(PlanetModel,double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /** Create an exact GeoCircle given specified bounds and desired accuracy.\n   * @param planetModel is the planet model.\n   * @param latitude is the center latitude.\n   * @param longitude is the center longitude.\n   * @param radius is the radius surface distance.\n   * @param accuracy is the maximum linear distance between the circle approximation and the real circle, as computed using\n   *  the Vincenty formula.\n   * @return a GeoCircle corresponding to what was specified.\n   */\n  public static GeoCircle makeExactGeoCircle(final PlanetModel planetModel, final double latitude, final double longitude, final double radius, final double accuracy) {\n    if (radius < Vector.MINIMUM_ANGULAR_RESOLUTION) {\n      return new GeoDegeneratePoint(planetModel, latitude, longitude);\n    }\n    return new GeoExactCircle(planetModel, latitude, longitude, radius, accuracy);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4eeea55acc3d6772f83fea40b1187f8ce6c20d04","date":1513166986,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCircleFactory#makeExactGeoCircle(PlanetModel,double,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCircleFactory#makeExactGeoCircle(PlanetModel,double,double,double,double).mjava","sourceNew":"  /**\n   * Create an GeoCircle from a center, a radius and a desired accuracy. It is the most accurate shape to represent\n   * a circle in non-spherical planets.\n   * <p>\n   * The accuracy of the circle is defined as the maximum linear distance between any point on the\n   * surface circle and planes that describe the circle. Therefore, with planet model WSG84, since the\n   * radius of earth is 6,371,000 meters, an accuracy of 1e-6 corresponds to 6.3 meters.\n   * For an accuracy of 1.0 meters, the accuracy value would be 1.6e-7. The maximum accuracy possible is 1e-12.\n   * <p>\n   * Note that this method may thrown an IllegalArgumentException if the circle being specified cannot be\n   * represented by plane approximation given the planet model provided.\n   *\n   * @param planetModel is the planet model.\n   * @param latitude is the center latitude.\n   * @param longitude is the center longitude.\n   * @param radius is the radius surface distance.\n   * @param accuracy is the maximum linear distance between the circle approximation and the real circle,\n   *                 as computed using the Vincenty formula.\n   * @return a GeoCircle corresponding to what was specified.\n   */\n  public static GeoCircle makeExactGeoCircle(final PlanetModel planetModel, final double latitude, final double longitude, final double radius, final double accuracy) {\n    if (radius < Vector.MINIMUM_ANGULAR_RESOLUTION) {\n      return new GeoDegeneratePoint(planetModel, latitude, longitude);\n    }\n    return new GeoExactCircle(planetModel, latitude, longitude, radius, accuracy);\n  }\n\n","sourceOld":"  /** Create an exact GeoCircle given specified bounds and desired accuracy.\n   * @param planetModel is the planet model.\n   * @param latitude is the center latitude.\n   * @param longitude is the center longitude.\n   * @param radius is the radius surface distance.\n   * @param accuracy is the maximum linear distance between the circle approximation and the real circle, as computed using\n   *  the Vincenty formula.\n   * @return a GeoCircle corresponding to what was specified.\n   */\n  public static GeoCircle makeExactGeoCircle(final PlanetModel planetModel, final double latitude, final double longitude, final double radius, final double accuracy) {\n    if (radius < Vector.MINIMUM_ANGULAR_RESOLUTION) {\n      return new GeoDegeneratePoint(planetModel, latitude, longitude);\n    }\n    return new GeoExactCircle(planetModel, latitude, longitude, radius, accuracy);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"13591e4b4b5e1616a7627989025ec3b20432357f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2252ea609db951d15af4430bee806a8d09fd8d6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2252ea609db951d15af4430bee806a8d09fd8d6d":["13591e4b4b5e1616a7627989025ec3b20432357f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4eeea55acc3d6772f83fea40b1187f8ce6c20d04"],"4eeea55acc3d6772f83fea40b1187f8ce6c20d04":["2252ea609db951d15af4430bee806a8d09fd8d6d"]},"commit2Childs":{"13591e4b4b5e1616a7627989025ec3b20432357f":["2252ea609db951d15af4430bee806a8d09fd8d6d"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["13591e4b4b5e1616a7627989025ec3b20432357f","6240b74b884c5587f2a4062dd27d6c32bf228889"],"2252ea609db951d15af4430bee806a8d09fd8d6d":["6240b74b884c5587f2a4062dd27d6c32bf228889","4eeea55acc3d6772f83fea40b1187f8ce6c20d04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"4eeea55acc3d6772f83fea40b1187f8ce6c20d04":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}