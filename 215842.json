{"path":"src/java/org/apache/lucene/analysis/TeeSinkTokenFilter#incrementToken().mjava","commits":[{"id":"ec8b5a20a12931b8d7e616c79c5248ae06cc5568","date":1248471948,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/TeeSinkTokenFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      // capture state lazily - maybe no SinkFilter accepts this state\n      AttributeSource.State state = null;\n      for (Iterator it = sinks.iterator(); it.hasNext(); ) {\n        final SinkTokenStream sink = (SinkTokenStream) ((WeakReference) it.next()).get();\n        if (sink != null) {\n          if (sink.accept(this)) {\n            if (state == null) {\n              state = this.captureState();\n            }\n            sink.addState(state);\n          }\n        }\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bc4668fce3cd5e972720deadebcdc3577d31550","date":1255940063,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/TeeSinkTokenFilter#incrementToken().mjava","pathOld":"src/java/org/apache/lucene/analysis/TeeSinkTokenFilter#incrementToken().mjava","sourceNew":"  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      // capture state lazily - maybe no SinkFilter accepts this state\n      AttributeSource.State state = null;\n      for (WeakReference<SinkTokenStream> ref : sinks) {\n        final SinkTokenStream sink = ref.get();\n        if (sink != null) {\n          if (sink.accept(this)) {\n            if (state == null) {\n              state = this.captureState();\n            }\n            sink.addState(state);\n          }\n        }\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","sourceOld":"  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      // capture state lazily - maybe no SinkFilter accepts this state\n      AttributeSource.State state = null;\n      for (Iterator it = sinks.iterator(); it.hasNext(); ) {\n        final SinkTokenStream sink = (SinkTokenStream) ((WeakReference) it.next()).get();\n        if (sink != null) {\n          if (sink.accept(this)) {\n            if (state == null) {\n              state = this.captureState();\n            }\n            sink.addState(state);\n          }\n        }\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/TeeSinkTokenFilter#incrementToken().mjava","pathOld":"src/java/org/apache/lucene/analysis/TeeSinkTokenFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      // capture state lazily - maybe no SinkFilter accepts this state\n      AttributeSource.State state = null;\n      for (WeakReference<SinkTokenStream> ref : sinks) {\n        final SinkTokenStream sink = ref.get();\n        if (sink != null) {\n          if (sink.accept(this)) {\n            if (state == null) {\n              state = this.captureState();\n            }\n            sink.addState(state);\n          }\n        }\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","sourceOld":"  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      // capture state lazily - maybe no SinkFilter accepts this state\n      AttributeSource.State state = null;\n      for (WeakReference<SinkTokenStream> ref : sinks) {\n        final SinkTokenStream sink = ref.get();\n        if (sink != null) {\n          if (sink.accept(this)) {\n            if (state == null) {\n              state = this.captureState();\n            }\n            sink.addState(state);\n          }\n        }\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/TeeSinkTokenFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      // capture state lazily - maybe no SinkFilter accepts this state\n      AttributeSource.State state = null;\n      for (WeakReference<SinkTokenStream> ref : sinks) {\n        final SinkTokenStream sink = ref.get();\n        if (sink != null) {\n          if (sink.accept(this)) {\n            if (state == null) {\n              state = this.captureState();\n            }\n            sink.addState(state);\n          }\n        }\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a9e385641d717e641408d8fbbc62be8fc766357":["3bc4668fce3cd5e972720deadebcdc3577d31550"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"],"3bc4668fce3cd5e972720deadebcdc3577d31550":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"3bc4668fce3cd5e972720deadebcdc3577d31550":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["3bc4668fce3cd5e972720deadebcdc3577d31550"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}