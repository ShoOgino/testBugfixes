{"path":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    assumeTrue(\"codec does not support offsets\", Codec.getDefault().getName().equals(\"SimpleText\") || Codec.getDefault().getName().equals(\"Lucene40\"));\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    \n    if (Codec.getDefault().getName().equals(\"Lucene40\")) {\n      // pulsing etc are not implemented\n      iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()));\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    assumeTrue(\"codec does not support offsets\", Codec.getDefault().getName().equals(\"SimpleText\") || Codec.getDefault().getName().equals(\"Lucene40\"));\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    \n    if (Codec.getDefault().getName().equals(\"Lucene40\")) {\n      // pulsing etc are not implemented\n      iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06e9e87a586e724774d060a39c60ed1178637952","date":1331555866,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    assumeTrue(\"codec does not support offsets\", Codec.getDefault().getName().equals(\"SimpleText\") || Codec.getDefault().getName().equals(\"Lucene40\"));\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    \n    if (Codec.getDefault().getName().equals(\"Lucene40\")) {\n      // pulsing etc are not implemented\n      if (random.nextBoolean()) {\n        iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()));\n      } else {\n        iwc.setCodec(_TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      }\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    assumeTrue(\"codec does not support offsets\", Codec.getDefault().getName().equals(\"SimpleText\") || Codec.getDefault().getName().equals(\"Lucene40\"));\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    \n    if (Codec.getDefault().getName().equals(\"Lucene40\")) {\n      // pulsing etc are not implemented\n      iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    assumeTrue(\"codec does not support offsets\", Codec.getDefault().getName().equals(\"SimpleText\") || Codec.getDefault().getName().equals(\"Lucene40\"));\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    \n    if (Codec.getDefault().getName().equals(\"Lucene40\")) {\n      // pulsing etc are not implemented\n      if (random.nextBoolean()) {\n        iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()));\n      } else {\n        iwc.setCodec(_TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      }\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    assumeTrue(\"codec does not support offsets\", Codec.getDefault().getName().equals(\"SimpleText\") || Codec.getDefault().getName().equals(\"Lucene40\"));\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    \n    if (Codec.getDefault().getName().equals(\"Lucene40\")) {\n      // pulsing etc are not implemented\n      iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    assumeTrue(\"codec does not support offsets\", Codec.getDefault().getName().equals(\"SimpleText\") || Codec.getDefault().getName().equals(\"Lucene40\"));\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    \n    if (Codec.getDefault().getName().equals(\"Lucene40\")) {\n      // pulsing etc are not implemented\n      if (random().nextBoolean()) {\n        iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()));\n      } else {\n        iwc.setCodec(_TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      }\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    assumeTrue(\"codec does not support offsets\", Codec.getDefault().getName().equals(\"SimpleText\") || Codec.getDefault().getName().equals(\"Lucene40\"));\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    \n    if (Codec.getDefault().getName().equals(\"Lucene40\")) {\n      // pulsing etc are not implemented\n      if (random.nextBoolean()) {\n        iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()));\n      } else {\n        iwc.setCodec(_TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7424161ac990ef8f959f09ee516148e4d12c48bc","date":1336236796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    assumeTrue(\"codec does not support offsets\", Codec.getDefault().getName().equals(\"SimpleText\") || Codec.getDefault().getName().equals(\"Lucene40\"));\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    \n    if (Codec.getDefault().getName().equals(\"Lucene40\")) {\n      // sep etc are not implemented\n      switch(random().nextInt(4)) {\n        case 0: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())); break;\n        case 1: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat())); break;\n        case 2: iwc.setCodec(_TestUtil.alwaysPostingsFormat(\n            new Pulsing40PostingsFormat(_TestUtil.nextInt(random(), 1, 3)))); break;\n        case 3: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new NestedPulsingPostingsFormat())); break;\n      }\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    assumeTrue(\"codec does not support offsets\", Codec.getDefault().getName().equals(\"SimpleText\") || Codec.getDefault().getName().equals(\"Lucene40\"));\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    \n    if (Codec.getDefault().getName().equals(\"Lucene40\")) {\n      // pulsing etc are not implemented\n      if (random().nextBoolean()) {\n        iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat()));\n      } else {\n        iwc.setCodec(_TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat()));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    String codecName = Codec.getDefault().getName();\n    assumeTrue(\"Codec does not support offsets: \" + codecName, \n        codecName.equals(\"SimpleText\") || \n        codecName.equals(\"Lucene40\"));\n\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    \n    if (codecName.equals(\"Lucene40\")) {\n      // Sep etc are not implemented\n      switch(random().nextInt(4)) {\n        case 0: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())); break;\n        case 1: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat())); break;\n        case 2: iwc.setCodec(_TestUtil.alwaysPostingsFormat(\n            new Pulsing40PostingsFormat(_TestUtil.nextInt(random(), 1, 3)))); break;\n        case 3: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new NestedPulsingPostingsFormat())); break;\n      }\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    assumeTrue(\"codec does not support offsets\", Codec.getDefault().getName().equals(\"SimpleText\") || Codec.getDefault().getName().equals(\"Lucene40\"));\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    \n    if (Codec.getDefault().getName().equals(\"Lucene40\")) {\n      // sep etc are not implemented\n      switch(random().nextInt(4)) {\n        case 0: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())); break;\n        case 1: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat())); break;\n        case 2: iwc.setCodec(_TestUtil.alwaysPostingsFormat(\n            new Pulsing40PostingsFormat(_TestUtil.nextInt(random(), 1, 3)))); break;\n        case 3: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new NestedPulsingPostingsFormat())); break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74d3eb76711bd95b2051ecfcf7a10ca9069577bc","date":1338324080,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n\n    // Currently only SimpleText and Lucene40 can index offsets into postings:\n    String codecName = Codec.getDefault().getName();\n    assumeTrue(\"Codec does not support offsets: \" + codecName, \n        codecName.equals(\"SimpleText\") || \n        codecName.equals(\"Lucene40\"));\n\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    \n    if (codecName.equals(\"Lucene40\")) {\n      // Sep etc are not implemented\n      switch(random().nextInt(4)) {\n        case 0: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())); break;\n        case 1: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new MemoryPostingsFormat())); break;\n        case 2: iwc.setCodec(_TestUtil.alwaysPostingsFormat(\n            new Pulsing40PostingsFormat(_TestUtil.nextInt(random(), 1, 3)))); break;\n        case 3: iwc.setCodec(_TestUtil.alwaysPostingsFormat(new NestedPulsingPostingsFormat())); break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["74d3eb76711bd95b2051ecfcf7a10ca9069577bc","7530de27b87b961b51f01bd1299b7004d46e8823"],"38e3b736c7ca086d61b7dbb841c905ee115490da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","06e9e87a586e724774d060a39c60ed1178637952"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["7530de27b87b961b51f01bd1299b7004d46e8823"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["7424161ac990ef8f959f09ee516148e4d12c48bc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7424161ac990ef8f959f09ee516148e4d12c48bc":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06e9e87a586e724774d060a39c60ed1178637952":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["06e9e87a586e724774d060a39c60ed1178637952"],"7530de27b87b961b51f01bd1299b7004d46e8823":["74d3eb76711bd95b2051ecfcf7a10ca9069577bc"],"74d3eb76711bd95b2051ecfcf7a10ca9069577bc":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["74d3eb76711bd95b2051ecfcf7a10ca9069577bc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38e3b736c7ca086d61b7dbb841c905ee115490da","06e9e87a586e724774d060a39c60ed1178637952"],"7424161ac990ef8f959f09ee516148e4d12c48bc":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"06e9e87a586e724774d060a39c60ed1178637952":["38e3b736c7ca086d61b7dbb841c905ee115490da","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["7424161ac990ef8f959f09ee516148e4d12c48bc"],"74d3eb76711bd95b2051ecfcf7a10ca9069577bc":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}