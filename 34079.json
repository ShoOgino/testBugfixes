{"path":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#splitShard(String,String,List[DocRouter.Range]).mjava","commits":[{"id":"2e73db80cda3387e197641256d964f8c1c3992c7","date":1380978036,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#splitShard(String,String,List[DocRouter.Range]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#splitShard(String,String).mjava","sourceNew":"  protected void splitShard(String collection, String shardId, List<DocRouter.Range> subRanges) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionParams.CollectionAction.SPLITSHARD.toString());\n    params.set(\"collection\", collection);\n    params.set(\"shard\", shardId);\n    if (subRanges != null)  {\n      StringBuilder ranges = new StringBuilder();\n      for (int i = 0; i < subRanges.size(); i++) {\n        DocRouter.Range subRange = subRanges.get(i);\n        ranges.append(subRange.toString());\n        if (i < subRanges.size() - 1)\n          ranges.append(\",\");\n      }\n      params.set(\"ranges\", ranges.toString());\n    }\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrServer) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrServer baseServer = new HttpSolrServer(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    baseServer.setSoTimeout((int) (CollectionsHandler.DEFAULT_ZK_TIMEOUT * 5));\n    baseServer.request(request);\n  }\n\n","sourceOld":"  protected void splitShard(String collection, String shardId) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionParams.CollectionAction.SPLITSHARD.toString());\n    params.set(\"collection\", collection);\n    params.set(\"shard\", shardId);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrServer) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrServer baseServer = new HttpSolrServer(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    baseServer.setSoTimeout((int) (CollectionsHandler.DEFAULT_ZK_TIMEOUT * 5));\n    baseServer.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9d5abf772262a05c74afddcadc95c4bdab07f1f","date":1381747682,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#splitShard(String,String,List[DocRouter.Range],String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#splitShard(String,String,List[DocRouter.Range]).mjava","sourceNew":"  protected void splitShard(String collection, String shardId, List<DocRouter.Range> subRanges, String splitKey) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionParams.CollectionAction.SPLITSHARD.toString());\n    params.set(\"collection\", collection);\n    if (shardId != null)  {\n      params.set(\"shard\", shardId);\n    }\n    if (subRanges != null)  {\n      StringBuilder ranges = new StringBuilder();\n      for (int i = 0; i < subRanges.size(); i++) {\n        DocRouter.Range subRange = subRanges.get(i);\n        ranges.append(subRange.toString());\n        if (i < subRanges.size() - 1)\n          ranges.append(\",\");\n      }\n      params.set(\"ranges\", ranges.toString());\n    }\n    if (splitKey != null) {\n      params.set(\"split.key\", splitKey);\n    }\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrServer) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrServer baseServer = new HttpSolrServer(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    baseServer.setSoTimeout((int) (CollectionsHandler.DEFAULT_ZK_TIMEOUT * 5));\n    baseServer.request(request);\n  }\n\n","sourceOld":"  protected void splitShard(String collection, String shardId, List<DocRouter.Range> subRanges) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionParams.CollectionAction.SPLITSHARD.toString());\n    params.set(\"collection\", collection);\n    params.set(\"shard\", shardId);\n    if (subRanges != null)  {\n      StringBuilder ranges = new StringBuilder();\n      for (int i = 0; i < subRanges.size(); i++) {\n        DocRouter.Range subRange = subRanges.get(i);\n        ranges.append(subRange.toString());\n        if (i < subRanges.size() - 1)\n          ranges.append(\",\");\n      }\n      params.set(\"ranges\", ranges.toString());\n    }\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrServer) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrServer baseServer = new HttpSolrServer(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    baseServer.setSoTimeout((int) (CollectionsHandler.DEFAULT_ZK_TIMEOUT * 5));\n    baseServer.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e73db80cda3387e197641256d964f8c1c3992c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9d5abf772262a05c74afddcadc95c4bdab07f1f":["2e73db80cda3387e197641256d964f8c1c3992c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d9d5abf772262a05c74afddcadc95c4bdab07f1f"]},"commit2Childs":{"2e73db80cda3387e197641256d964f8c1c3992c7":["d9d5abf772262a05c74afddcadc95c4bdab07f1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2e73db80cda3387e197641256d964f8c1c3992c7"],"d9d5abf772262a05c74afddcadc95c4bdab07f1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}