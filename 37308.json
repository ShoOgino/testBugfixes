{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","sourceNew":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          doWait();\n        }\n      } else\n        return false;\n    }\n  }\n\n","sourceOld":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          doWait();\n        }\n      } else\n        return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f241b963c5bcd6c2293a928059dd2d64988a6042","date":1340296137,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","sourceNew":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          doWait();\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n","sourceOld":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          doWait();\n        }\n      } else\n        return false;\n    }\n  }\n\n","bugFix":["c619aff1490fbcbfb8aee81049da5e5120a986d6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","sourceNew":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          doWait();\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n","sourceOld":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          doWait();\n        }\n      } else\n        return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9e22bdf0692bfa61e342b04a6ac7078670c1e16","date":1436866730,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#shouldClose(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","sourceNew":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else,\n  // waits until another thread finishes closing\n  synchronized private boolean shouldClose(boolean waitForClose) {\n    while (true) {\n      if (closed == false) {\n        if (closing == false) {\n          // We get to close\n          closing = true;\n          return true;\n        } else if (waitForClose == false) {\n          return false;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          doWait();\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n","sourceOld":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          doWait();\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d9e22bdf0692bfa61e342b04a6ac7078670c1e16":["f241b963c5bcd6c2293a928059dd2d64988a6042"],"f241b963c5bcd6c2293a928059dd2d64988a6042":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f241b963c5bcd6c2293a928059dd2d64988a6042"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d9e22bdf0692bfa61e342b04a6ac7078670c1e16"]},"commit2Childs":{"d9e22bdf0692bfa61e342b04a6ac7078670c1e16":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f241b963c5bcd6c2293a928059dd2d64988a6042":["d9e22bdf0692bfa61e342b04a6ac7078670c1e16","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f241b963c5bcd6c2293a928059dd2d64988a6042","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}