{"path":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","sourceNew":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random().nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random().nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return _TestUtil.randomUnicodeString(random());\n    }\n  }\n\n","sourceOld":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random().nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random().nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return _TestUtil.randomUnicodeString(random());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","sourceNew":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random().nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random().nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return TestUtil.randomUnicodeString(random());\n    }\n  }\n\n","sourceOld":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random().nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random().nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return _TestUtil.randomUnicodeString(random());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"761333d77c7f29123c00c93b107b743f32f012e6","date":1411986072,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstRAMDir#randomTerm().mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","sourceNew":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random().nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random().nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return TestUtil.randomUnicodeString(random());\n    }\n  }\n\n","sourceOld":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random().nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random().nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return TestUtil.randomUnicodeString(random());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstRAMDir#randomTerm().mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","sourceNew":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random().nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random().nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return TestUtil.randomUnicodeString(random());\n    }\n  }\n\n","sourceOld":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random().nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random().nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return TestUtil.randomUnicodeString(random());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6613659748fe4411a7dcf85266e55db1f95f7315":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["6613659748fe4411a7dcf85266e55db1f95f7315","761333d77c7f29123c00c93b107b743f32f012e6"],"761333d77c7f29123c00c93b107b743f32f012e6":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["761333d77c7f29123c00c93b107b743f32f012e6"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["6613659748fe4411a7dcf85266e55db1f95f7315"],"6613659748fe4411a7dcf85266e55db1f95f7315":["d9a47902d6207303f5ed3e7aaca62ca33433af66","761333d77c7f29123c00c93b107b743f32f012e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"761333d77c7f29123c00c93b107b743f32f012e6":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}