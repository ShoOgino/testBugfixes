{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","commits":[{"id":"68fa956cfdb1b0e625046dcfa99f545fc8f04997","date":1133475513,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n\t * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) \n\t{\n\t\tHashSet terms=new HashSet();\n\t\tif(fieldName!=null)\n\t\t{\n\t\t    fieldName=fieldName.intern();\n\t\t}\n\t\tgetTerms(query,terms,prohibited,fieldName);\n\t\treturn (WeightedTerm[]) terms.toArray(new WeightedTerm[0]);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf93f7a278746d4746fa3ebb3d53267b22fd040f","date":1249495506,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","sourceNew":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n\t * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) \n\t{\n\t\tHashSet terms=new HashSet();\n\t\tif(fieldName!=null)\n\t\t{\n\t\t    fieldName= StringHelper.intern(fieldName);\n\t\t}\n\t\tgetTerms(query,terms,prohibited,fieldName);\n\t\treturn (WeightedTerm[]) terms.toArray(new WeightedTerm[0]);\n\t}\n\n","sourceOld":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n\t * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) \n\t{\n\t\tHashSet terms=new HashSet();\n\t\tif(fieldName!=null)\n\t\t{\n\t\t    fieldName=fieldName.intern();\n\t\t}\n\t\tgetTerms(query,terms,prohibited,fieldName);\n\t\treturn (WeightedTerm[]) terms.toArray(new WeightedTerm[0]);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffdf794cee8d43eb612df752c592cef2dc3e75ae","date":1256465578,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","sourceNew":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n\t * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) \n\t{\n\t\tHashSet<WeightedTerm> terms=new HashSet<WeightedTerm>();\n\t\tif(fieldName!=null)\n\t\t{\n\t\t    fieldName= StringHelper.intern(fieldName);\n\t\t}\n\t\tgetTerms(query,terms,prohibited,fieldName);\n\t\treturn terms.toArray(new WeightedTerm[0]);\n\t}\n\n","sourceOld":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n\t * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) \n\t{\n\t\tHashSet terms=new HashSet();\n\t\tif(fieldName!=null)\n\t\t{\n\t\t    fieldName= StringHelper.intern(fieldName);\n\t\t}\n\t\tgetTerms(query,terms,prohibited,fieldName);\n\t\treturn (WeightedTerm[]) terms.toArray(new WeightedTerm[0]);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","sourceNew":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n\t * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) \n\t{\n\t\tHashSet<WeightedTerm> terms=new HashSet<WeightedTerm>();\n\t\tif(fieldName!=null)\n\t\t{\n\t\t    fieldName= StringHelper.intern(fieldName);\n\t\t}\n\t\tgetTerms(query,terms,prohibited,fieldName);\n\t\treturn terms.toArray(new WeightedTerm[0]);\n\t}\n\n","sourceOld":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n\t * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) \n\t{\n\t\tHashSet<WeightedTerm> terms=new HashSet<WeightedTerm>();\n\t\tif(fieldName!=null)\n\t\t{\n\t\t    fieldName= StringHelper.intern(fieldName);\n\t\t}\n\t\tgetTerms(query,terms,prohibited,fieldName);\n\t\treturn terms.toArray(new WeightedTerm[0]);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cf93f7a278746d4746fa3ebb3d53267b22fd040f":["68fa956cfdb1b0e625046dcfa99f545fc8f04997"],"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["cf93f7a278746d4746fa3ebb3d53267b22fd040f"],"68fa956cfdb1b0e625046dcfa99f545fc8f04997":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"]},"commit2Childs":{"cf93f7a278746d4746fa3ebb3d53267b22fd040f":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"],"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"68fa956cfdb1b0e625046dcfa99f545fc8f04997":["cf93f7a278746d4746fa3ebb3d53267b22fd040f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68fa956cfdb1b0e625046dcfa99f545fc8f04997"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}