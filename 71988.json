{"path":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testStringWithCopyFieldAndMaxChars().mjava","commits":[{"id":"4b377fd91b7578d0c02b259b5112d667e4d5f8e6","date":1499349411,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testStringWithCopyFieldAndMaxChars().mjava","pathOld":"/dev/null","sourceNew":"  public void testStringWithCopyFieldAndMaxChars() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    final String fieldName = \"stringField\";\n    final String strFieldName = fieldName+\"_str\";\n    assertNull(schema.getFieldOrNull(fieldName));\n    String content = \"This is a text that should be copied to a string field and cutoff at 10 characters\";\n    SolrInputDocument d = processAdd(\"add-fields-maxchars\", doc(f(\"id\", \"1\"), f(fieldName, content)));\n    assertNotNull(d);\n    System.out.println(\"Document is \"+d);\n    schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(fieldName));\n    assertNotNull(schema.getFieldOrNull(strFieldName));\n    assertEquals(\"text\", schema.getFieldType(fieldName).getTypeName());\n    // We have three copyFields, one with maxChars 10 and two with maxChars 20\n    assertEquals(3, schema.getCopyFieldProperties(true, Collections.singleton(fieldName), null).size());\n    assertEquals(\"The configured maxChars cutoff does not exist on the copyField\", 10, \n        schema.getCopyFieldProperties(true, Collections.singleton(fieldName), Collections.singleton(strFieldName))\n            .get(0).get(\"maxChars\"));\n    assertEquals(\"The configured maxChars cutoff does not exist on the copyField\", 20, \n        schema.getCopyFieldProperties(true, Collections.singleton(fieldName), Collections.singleton(fieldName+\"_t\"))\n            .get(0).get(\"maxChars\"));\n    assertEquals(\"The configured maxChars cutoff does not exist on the copyField\", 20, \n        schema.getCopyFieldProperties(true, Collections.singleton(fieldName), Collections.singleton(fieldName+\"2_t\"))\n            .get(0).get(\"maxChars\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73d8d559120669b47658108d818b637df5456ea","date":1499401413,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testStringWithCopyFieldAndMaxChars().mjava","pathOld":"/dev/null","sourceNew":"  public void testStringWithCopyFieldAndMaxChars() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    final String fieldName = \"stringField\";\n    final String strFieldName = fieldName+\"_str\";\n    assertNull(schema.getFieldOrNull(fieldName));\n    String content = \"This is a text that should be copied to a string field and cutoff at 10 characters\";\n    SolrInputDocument d = processAdd(\"add-fields-maxchars\", doc(f(\"id\", \"1\"), f(fieldName, content)));\n    assertNotNull(d);\n    System.out.println(\"Document is \"+d);\n    schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(fieldName));\n    assertNotNull(schema.getFieldOrNull(strFieldName));\n    assertEquals(\"text\", schema.getFieldType(fieldName).getTypeName());\n    // We have three copyFields, one with maxChars 10 and two with maxChars 20\n    assertEquals(3, schema.getCopyFieldProperties(true, Collections.singleton(fieldName), null).size());\n    assertEquals(\"The configured maxChars cutoff does not exist on the copyField\", 10, \n        schema.getCopyFieldProperties(true, Collections.singleton(fieldName), Collections.singleton(strFieldName))\n            .get(0).get(\"maxChars\"));\n    assertEquals(\"The configured maxChars cutoff does not exist on the copyField\", 20, \n        schema.getCopyFieldProperties(true, Collections.singleton(fieldName), Collections.singleton(fieldName+\"_t\"))\n            .get(0).get(\"maxChars\"));\n    assertEquals(\"The configured maxChars cutoff does not exist on the copyField\", 20, \n        schema.getCopyFieldProperties(true, Collections.singleton(fieldName), Collections.singleton(fieldName+\"2_t\"))\n            .get(0).get(\"maxChars\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b377fd91b7578d0c02b259b5112d667e4d5f8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e73d8d559120669b47658108d818b637df5456ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4b377fd91b7578d0c02b259b5112d667e4d5f8e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b377fd91b7578d0c02b259b5112d667e4d5f8e6"]},"commit2Childs":{"4b377fd91b7578d0c02b259b5112d667e4d5f8e6":["e73d8d559120669b47658108d818b637df5456ea","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b377fd91b7578d0c02b259b5112d667e4d5f8e6","e73d8d559120669b47658108d818b637df5456ea"],"e73d8d559120669b47658108d818b637df5456ea":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e73d8d559120669b47658108d818b637df5456ea","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}