{"path":"lucene/test-framework/src/java/org/apache/lucene/analysis/CollationTestBase#assertMatches(IndexSearcher,Query,Sort,String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CollationTestBase#assertMatches(IndexSearcher,Query,Sort,String).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/analysis/CollationTestBase#assertMatches(IndexSearcher,Query,Sort,String).mjava","sourceNew":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(IndexSearcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      Document doc = searcher.doc(result[i].doc);\n      IndexableField[] v = doc.getFields(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j].stringValue());\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","sourceOld":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(IndexSearcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      Document doc = searcher.doc(result[i].doc);\n      IndexableField[] v = doc.getFields(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j].stringValue());\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","date":1341839195,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CollationTestBase#assertMatches(IndexSearcher,Query,Sort,String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/CollationTestBase#assertMatches(IndexSearcher,Query,Sort,String).mjava","sourceNew":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(IndexSearcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      StoredDocument doc = searcher.doc(result[i].doc);\n      StorableField[] v = doc.getFields(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j].stringValue());\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","sourceOld":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(IndexSearcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      Document doc = searcher.doc(result[i].doc);\n      IndexableField[] v = doc.getFields(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j].stringValue());\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CollationTestBase#assertMatches(IndexSearcher,Query,Sort,String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/CollationTestBase#assertMatches(IndexSearcher,Query,Sort,String).mjava","sourceNew":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(IndexSearcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      StoredDocument doc = searcher.doc(result[i].doc);\n      StorableField[] v = doc.getFields(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j].stringValue());\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","sourceOld":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(IndexSearcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      Document doc = searcher.doc(result[i].doc);\n      IndexableField[] v = doc.getFields(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j].stringValue());\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CollationTestBase#assertMatches(IndexSearcher,Query,Sort,String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/CollationTestBase#assertMatches(IndexSearcher,Query,Sort,String).mjava","sourceNew":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(IndexSearcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      StoredDocument doc = searcher.doc(result[i].doc);\n      StorableField[] v = doc.getFields(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j].stringValue());\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","sourceOld":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(IndexSearcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      StoredDocument doc = searcher.doc(result[i].doc);\n      StorableField[] v = doc.getFields(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j].stringValue());\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CollationTestBase#assertMatches(IndexSearcher,Query,Sort,String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/CollationTestBase#assertMatches(IndexSearcher,Query,Sort,String).mjava","sourceNew":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(IndexSearcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      Document doc = searcher.doc(result[i].doc);\n      IndexableField[] v = doc.getFields(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j].stringValue());\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","sourceOld":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(IndexSearcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      StoredDocument doc = searcher.doc(result[i].doc);\n      StorableField[] v = doc.getFields(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j].stringValue());\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1d028314cced5858683a1bb4741423d0f934257b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["1d028314cced5858683a1bb4741423d0f934257b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"]},"commit2Childs":{"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","1d028314cced5858683a1bb4741423d0f934257b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}