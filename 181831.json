{"path":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","commits":[{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"class\",className);\n      result.put(\"autoCommmitMaxDocs\",autoCommmitMaxDocs);\n      result.put(\"indexWriterCloseWaitsForMerges\",indexWriterCloseWaitsForMerges);\n      result.put(\"openSearcher\",openSearcher);\n      result.put(\"commitIntervalLowerBound\",commitIntervalLowerBound);\n      result.put(\"commitWithinSoftCommit\",commitWithinSoftCommit);\n      result.put(\"autoCommit\", ZkNodeProps.makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\",autoCommmitMaxTime,\n          \"commitIntervalLowerBound\", commitIntervalLowerBound\n      ));\n      result.put(\"autoSoftCommit\" ,\n          ZkNodeProps.makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\",autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae2f5be890d26585d438eba0b9cc7d3c0a9775be","date":1427387954,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","sourceNew":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"class\", className);\n      result.put(\"autoCommmitMaxDocs\", autoCommmitMaxDocs);\n      result.put(\"indexWriterCloseWaitsForMerges\", indexWriterCloseWaitsForMerges);\n      result.put(\"openSearcher\", openSearcher);\n      result.put(\"commitIntervalLowerBound\", commitIntervalLowerBound);\n      result.put(\"commitWithinSoftCommit\", commitWithinSoftCommit);\n      result.put(\"autoCommit\", ZkNodeProps.makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime,\n          \"commitIntervalLowerBound\", commitIntervalLowerBound\n      ));\n      result.put(\"autoSoftCommit\",\n          ZkNodeProps.makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"class\",className);\n      result.put(\"autoCommmitMaxDocs\",autoCommmitMaxDocs);\n      result.put(\"indexWriterCloseWaitsForMerges\",indexWriterCloseWaitsForMerges);\n      result.put(\"openSearcher\",openSearcher);\n      result.put(\"commitIntervalLowerBound\",commitIntervalLowerBound);\n      result.put(\"commitWithinSoftCommit\",commitWithinSoftCommit);\n      result.put(\"autoCommit\", ZkNodeProps.makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\",autoCommmitMaxTime,\n          \"commitIntervalLowerBound\", commitIntervalLowerBound\n      ));\n      result.put(\"autoSoftCommit\" ,\n          ZkNodeProps.makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\",autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":["076150a508cf06cd592017afe8ee67a98ffdf948"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","sourceNew":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"class\", className);\n      result.put(\"autoCommmitMaxDocs\", autoCommmitMaxDocs);\n      result.put(\"indexWriterCloseWaitsForMerges\", indexWriterCloseWaitsForMerges);\n      result.put(\"openSearcher\", openSearcher);\n      result.put(\"commitIntervalLowerBound\", commitIntervalLowerBound);\n      result.put(\"commitWithinSoftCommit\", commitWithinSoftCommit);\n      result.put(\"autoCommit\", ZkNodeProps.makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime,\n          \"commitIntervalLowerBound\", commitIntervalLowerBound\n      ));\n      result.put(\"autoSoftCommit\",\n          ZkNodeProps.makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"class\",className);\n      result.put(\"autoCommmitMaxDocs\",autoCommmitMaxDocs);\n      result.put(\"indexWriterCloseWaitsForMerges\",indexWriterCloseWaitsForMerges);\n      result.put(\"openSearcher\",openSearcher);\n      result.put(\"commitIntervalLowerBound\",commitIntervalLowerBound);\n      result.put(\"commitWithinSoftCommit\",commitWithinSoftCommit);\n      result.put(\"autoCommit\", ZkNodeProps.makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\",autoCommmitMaxTime,\n          \"commitIntervalLowerBound\", commitIntervalLowerBound\n      ));\n      result.put(\"autoSoftCommit\" ,\n          ZkNodeProps.makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\",autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"668fe2906a81b0c8bddc1807e233c3e7dad4c0e9","date":1431528783,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","sourceNew":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"indexWriter\", makeMap(\"closeWaitsForMerges\", indexWriterCloseWaitsForMerges));\n      result.put(\"openSearcher\", openSearcher);\n      result.put(\"commitIntervalLowerBound\", commitIntervalLowerBound);\n      result.put(\"commitWithin\", makeMap(\"softCommit\", commitWithinSoftCommit));\n      result.put(\"autoCommit\", makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime,\n          \"commitIntervalLowerBound\", commitIntervalLowerBound\n      ));\n      result.put(\"autoSoftCommit\",\n          makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"class\", className);\n      result.put(\"autoCommmitMaxDocs\", autoCommmitMaxDocs);\n      result.put(\"indexWriterCloseWaitsForMerges\", indexWriterCloseWaitsForMerges);\n      result.put(\"openSearcher\", openSearcher);\n      result.put(\"commitIntervalLowerBound\", commitIntervalLowerBound);\n      result.put(\"commitWithinSoftCommit\", commitWithinSoftCommit);\n      result.put(\"autoCommit\", ZkNodeProps.makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime,\n          \"commitIntervalLowerBound\", commitIntervalLowerBound\n      ));\n      result.put(\"autoSoftCommit\",\n          ZkNodeProps.makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"66092664c6c20c849e7ba1a94b1b991bd1fc76cc","date":1431683924,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","sourceNew":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"indexWriter\", makeMap(\"closeWaitsForMerges\", indexWriterCloseWaitsForMerges));\n      result.put(\"openSearcher\", openSearcher);\n      result.put(\"commitWithin\", makeMap(\"softCommit\", commitWithinSoftCommit));\n      result.put(\"autoCommit\", makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime\n      ));\n      result.put(\"autoSoftCommit\",\n          makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"indexWriter\", makeMap(\"closeWaitsForMerges\", indexWriterCloseWaitsForMerges));\n      result.put(\"openSearcher\", openSearcher);\n      result.put(\"commitIntervalLowerBound\", commitIntervalLowerBound);\n      result.put(\"commitWithin\", makeMap(\"softCommit\", commitWithinSoftCommit));\n      result.put(\"autoCommit\", makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime,\n          \"commitIntervalLowerBound\", commitIntervalLowerBound\n      ));\n      result.put(\"autoSoftCommit\",\n          makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":["076150a508cf06cd592017afe8ee67a98ffdf948"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"076150a508cf06cd592017afe8ee67a98ffdf948","date":1432300356,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","sourceNew":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"indexWriter\", makeMap(\"closeWaitsForMerges\", indexWriterCloseWaitsForMerges));\n      result.put(\"commitWithin\", makeMap(\"softCommit\", commitWithinSoftCommit));\n      result.put(\"autoCommit\", makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime,\n          \"openSearcher\", openSearcher\n      ));\n      result.put(\"autoSoftCommit\",\n          makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"indexWriter\", makeMap(\"closeWaitsForMerges\", indexWriterCloseWaitsForMerges));\n      result.put(\"openSearcher\", openSearcher);\n      result.put(\"commitWithin\", makeMap(\"softCommit\", commitWithinSoftCommit));\n      result.put(\"autoCommit\", makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime\n      ));\n      result.put(\"autoSoftCommit\",\n          makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","bugFix":["66092664c6c20c849e7ba1a94b1b991bd1fc76cc","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f1f31880696765d6aec499d3b01fa501129af45","date":1474287317,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","sourceNew":"    @Override\n    public Map<String, Object> toMap(Map<String, Object> map) {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"indexWriter\", makeMap(\"closeWaitsForMerges\", indexWriterCloseWaitsForMerges));\n      result.put(\"commitWithin\", makeMap(\"softCommit\", commitWithinSoftCommit));\n      result.put(\"autoCommit\", makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime,\n          \"openSearcher\", openSearcher\n      ));\n      result.put(\"autoSoftCommit\",\n          makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"indexWriter\", makeMap(\"closeWaitsForMerges\", indexWriterCloseWaitsForMerges));\n      result.put(\"commitWithin\", makeMap(\"softCommit\", commitWithinSoftCommit));\n      result.put(\"autoCommit\", makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime,\n          \"openSearcher\", openSearcher\n      ));\n      result.put(\"autoSoftCommit\",\n          makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","sourceNew":null,"sourceOld":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"indexWriter\", makeMap(\"closeWaitsForMerges\", indexWriterCloseWaitsForMerges));\n      result.put(\"commitWithin\", makeMap(\"softCommit\", commitWithinSoftCommit));\n      result.put(\"autoCommit\", makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime,\n          \"openSearcher\", openSearcher\n      ));\n      result.put(\"autoSoftCommit\",\n          makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig.UpdateHandlerInfo#toMap().mjava","sourceNew":null,"sourceOld":"    @Override\n    public Map<String, Object> toMap() {\n      LinkedHashMap result = new LinkedHashMap();\n      result.put(\"indexWriter\", makeMap(\"closeWaitsForMerges\", indexWriterCloseWaitsForMerges));\n      result.put(\"commitWithin\", makeMap(\"softCommit\", commitWithinSoftCommit));\n      result.put(\"autoCommit\", makeMap(\n          \"maxDocs\", autoCommmitMaxDocs,\n          \"maxTime\", autoCommmitMaxTime,\n          \"openSearcher\", openSearcher\n      ));\n      result.put(\"autoSoftCommit\",\n          makeMap(\"maxDocs\", autoSoftCommmitMaxDocs,\n              \"maxTime\", autoSoftCommmitMaxTime));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66092664c6c20c849e7ba1a94b1b991bd1fc76cc":["668fe2906a81b0c8bddc1807e233c3e7dad4c0e9"],"076150a508cf06cd592017afe8ee67a98ffdf948":["66092664c6c20c849e7ba1a94b1b991bd1fc76cc"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["531fe719c7218235a679452eb3d137bfd8fc6af1","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"531fe719c7218235a679452eb3d137bfd8fc6af1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["076150a508cf06cd592017afe8ee67a98ffdf948","1f1f31880696765d6aec499d3b01fa501129af45"],"1f1f31880696765d6aec499d3b01fa501129af45":["076150a508cf06cd592017afe8ee67a98ffdf948"],"668fe2906a81b0c8bddc1807e233c3e7dad4c0e9":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["076150a508cf06cd592017afe8ee67a98ffdf948","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"66092664c6c20c849e7ba1a94b1b991bd1fc76cc":["076150a508cf06cd592017afe8ee67a98ffdf948"],"076150a508cf06cd592017afe8ee67a98ffdf948":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","1f1f31880696765d6aec499d3b01fa501129af45","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"531fe719c7218235a679452eb3d137bfd8fc6af1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1f1f31880696765d6aec499d3b01fa501129af45":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"668fe2906a81b0c8bddc1807e233c3e7dad4c0e9":["66092664c6c20c849e7ba1a94b1b991bd1fc76cc"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","668fe2906a81b0c8bddc1807e233c3e7dad4c0e9"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}