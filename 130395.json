{"path":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","commits":[{"id":"8522ae207a56c6db28ca06fe6cc33e70911c3600","date":1173935743,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo).mjava","sourceNew":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    payloadLengthAtLastSkip = 0;\n    FieldInfo fi = parent.fieldInfos.fieldInfo(term.field);\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      skipDoc = 0;\n      skipCount = 0;\n      numSkips = df / skipInterval;\n      freqPointer = ti.freqPointer;\n      proxPointer = ti.proxPointer;\n      skipPointer = freqPointer + ti.skipOffset;\n      freqStream.seek(freqPointer);\n      haveSkipped = false;\n    }\n  }\n\n","sourceOld":"  void seek(TermInfo ti) throws IOException {\n    count = 0;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      skipDoc = 0;\n      skipCount = 0;\n      numSkips = df / skipInterval;\n      freqPointer = ti.freqPointer;\n      proxPointer = ti.proxPointer;\n      skipPointer = freqPointer + ti.skipOffset;\n      freqStream.seek(freqPointer);\n      haveSkipped = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709","date":1180597733,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","sourceNew":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    FieldInfo fi = parent.fieldInfos.fieldInfo(term.field);\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      freqBasePointer = ti.freqPointer;\n      proxBasePointer = ti.proxPointer;\n      skipPointer = freqBasePointer + ti.skipOffset;\n      freqStream.seek(freqBasePointer);\n      haveSkipped = false;\n    }\n  }\n\n","sourceOld":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    payloadLengthAtLastSkip = 0;\n    FieldInfo fi = parent.fieldInfos.fieldInfo(term.field);\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      skipDoc = 0;\n      skipCount = 0;\n      numSkips = df / skipInterval;\n      freqPointer = ti.freqPointer;\n      proxPointer = ti.proxPointer;\n      skipPointer = freqPointer + ti.skipOffset;\n      freqStream.seek(freqPointer);\n      haveSkipped = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"902ba79f4590a41c663c447756d2e5041cbbdda9","date":1217956662,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","sourceNew":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    FieldInfo fi = parent.fieldInfos.fieldInfo(term.field);\n    currentFieldOmitTf = (fi != null) ? fi.omitTf : false;\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      freqBasePointer = ti.freqPointer;\n      proxBasePointer = ti.proxPointer;\n      skipPointer = freqBasePointer + ti.skipOffset;\n      freqStream.seek(freqBasePointer);\n      haveSkipped = false;\n    }\n  }\n\n","sourceOld":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    FieldInfo fi = parent.fieldInfos.fieldInfo(term.field);\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      freqBasePointer = ti.freqPointer;\n      proxBasePointer = ti.proxPointer;\n      skipPointer = freqBasePointer + ti.skipOffset;\n      freqStream.seek(freqBasePointer);\n      haveSkipped = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"066b6ff5a08e35c3b6880e7c3ddda79526acdab1","date":1237569961,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","sourceNew":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    FieldInfo fi = parent.fieldInfos.fieldInfo(term.field);\n    currentFieldOmitTermFreqAndPositions = (fi != null) ? fi.omitTermFreqAndPositions : false;\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      freqBasePointer = ti.freqPointer;\n      proxBasePointer = ti.proxPointer;\n      skipPointer = freqBasePointer + ti.skipOffset;\n      freqStream.seek(freqBasePointer);\n      haveSkipped = false;\n    }\n  }\n\n","sourceOld":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    FieldInfo fi = parent.fieldInfos.fieldInfo(term.field);\n    currentFieldOmitTf = (fi != null) ? fi.omitTf : false;\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      freqBasePointer = ti.freqPointer;\n      proxBasePointer = ti.proxPointer;\n      skipPointer = freqBasePointer + ti.skipOffset;\n      freqStream.seek(freqBasePointer);\n      haveSkipped = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66f3dadb253a44f4cccc81c8a21b685b18b201fb","date":1247245699,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","sourceNew":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    FieldInfo fi = parent.core.fieldInfos.fieldInfo(term.field);\n    currentFieldOmitTermFreqAndPositions = (fi != null) ? fi.omitTermFreqAndPositions : false;\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      freqBasePointer = ti.freqPointer;\n      proxBasePointer = ti.proxPointer;\n      skipPointer = freqBasePointer + ti.skipOffset;\n      freqStream.seek(freqBasePointer);\n      haveSkipped = false;\n    }\n  }\n\n","sourceOld":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    FieldInfo fi = parent.fieldInfos.fieldInfo(term.field);\n    currentFieldOmitTermFreqAndPositions = (fi != null) ? fi.omitTermFreqAndPositions : false;\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      freqBasePointer = ti.freqPointer;\n      proxBasePointer = ti.proxPointer;\n      skipPointer = freqBasePointer + ti.skipOffset;\n      freqStream.seek(freqBasePointer);\n      haveSkipped = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","sourceNew":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    FieldInfo fi = parent.core.fieldInfos.fieldInfo(term.field);\n    currentFieldOmitTermFreqAndPositions = (fi != null) ? fi.omitTermFreqAndPositions : false;\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      freqBasePointer = ti.freqPointer;\n      proxBasePointer = ti.proxPointer;\n      skipPointer = freqBasePointer + ti.skipOffset;\n      freqStream.seek(freqBasePointer);\n      haveSkipped = false;\n    }\n  }\n\n","sourceOld":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    FieldInfo fi = parent.core.fieldInfos.fieldInfo(term.field);\n    currentFieldOmitTermFreqAndPositions = (fi != null) ? fi.omitTermFreqAndPositions : false;\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      freqBasePointer = ti.freqPointer;\n      proxBasePointer = ti.proxPointer;\n      skipPointer = freqBasePointer + ti.skipOffset;\n      freqStream.seek(freqBasePointer);\n      haveSkipped = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8522ae207a56c6db28ca06fe6cc33e70911c3600":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"066b6ff5a08e35c3b6880e7c3ddda79526acdab1":["902ba79f4590a41c663c447756d2e5041cbbdda9"],"902ba79f4590a41c663c447756d2e5041cbbdda9":["08d1ee9808e270c86ce5c9be08b8bd7a19d0a709"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["66f3dadb253a44f4cccc81c8a21b685b18b201fb"],"66f3dadb253a44f4cccc81c8a21b685b18b201fb":["066b6ff5a08e35c3b6880e7c3ddda79526acdab1"],"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709":["8522ae207a56c6db28ca06fe6cc33e70911c3600"]},"commit2Childs":{"8522ae207a56c6db28ca06fe6cc33e70911c3600":["08d1ee9808e270c86ce5c9be08b8bd7a19d0a709"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"066b6ff5a08e35c3b6880e7c3ddda79526acdab1":["66f3dadb253a44f4cccc81c8a21b685b18b201fb"],"902ba79f4590a41c663c447756d2e5041cbbdda9":["066b6ff5a08e35c3b6880e7c3ddda79526acdab1"],"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709":["902ba79f4590a41c663c447756d2e5041cbbdda9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"66f3dadb253a44f4cccc81c8a21b685b18b201fb":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}