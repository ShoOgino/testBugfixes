{"path":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","commits":[{"id":"ef02613bb5b67b98ca5caf41e8d6e016a0158923","date":1283980033,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","pathOld":"/dev/null","sourceNew":"  public void addException(String msg, Exception e) {\n    List exceptions = (List)facetResponse.get(\"exception\");\n    if (exceptions == null) {\n      exceptions = new ArrayList();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","pathOld":"/dev/null","sourceNew":"  public void addException(String msg, Exception e) {\n    List exceptions = (List)facetResponse.get(\"exception\");\n    if (exceptions == null) {\n      exceptions = new ArrayList();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"755f2f419306d7297c8feee10d1897addf4b2dd0","date":1294442354,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","pathOld":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","sourceNew":"  public void addException(String msg, Exception e) {\n    @SuppressWarnings(\"unchecked\") \n      List<String> exceptions = (List<String>)facetResponse.get(\"exception\");\n\n    if (exceptions == null) {\n      exceptions = new ArrayList<String>();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","sourceOld":"  public void addException(String msg, Exception e) {\n    List exceptions = (List)facetResponse.get(\"exception\");\n    if (exceptions == null) {\n      exceptions = new ArrayList();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","pathOld":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","sourceNew":"  public void addException(String msg, Exception e) {\n    @SuppressWarnings(\"unchecked\") \n      List<String> exceptions = (List<String>)facetResponse.get(\"exception\");\n\n    if (exceptions == null) {\n      exceptions = new ArrayList<String>();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","sourceOld":"  public void addException(String msg, Exception e) {\n    List exceptions = (List)facetResponse.get(\"exception\");\n    if (exceptions == null) {\n      exceptions = new ArrayList();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","pathOld":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","sourceNew":"  public void addException(String msg, Exception e) {\n    @SuppressWarnings(\"unchecked\") \n      List<String> exceptions = (List<String>)facetResponse.get(\"exception\");\n\n    if (exceptions == null) {\n      exceptions = new ArrayList<String>();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","sourceOld":"  public void addException(String msg, Exception e) {\n    List exceptions = (List)facetResponse.get(\"exception\");\n    if (exceptions == null) {\n      exceptions = new ArrayList();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","pathOld":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","sourceNew":"  public void addException(String msg, Exception e) {\n    @SuppressWarnings(\"unchecked\") \n      List<String> exceptions = (List<String>)facetResponse.get(\"exception\");\n\n    if (exceptions == null) {\n      exceptions = new ArrayList<String>();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","sourceOld":"  public void addException(String msg, Exception e) {\n    @SuppressWarnings(\"unchecked\") \n      List<String> exceptions = (List<String>)facetResponse.get(\"exception\");\n\n    if (exceptions == null) {\n      exceptions = new ArrayList<String>();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","pathOld":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","sourceNew":"  public void addException(String msg, Exception e) {\n    @SuppressWarnings(\"unchecked\") \n      List<String> exceptions = (List<String>)facetResponse.get(\"exception\");\n\n    if (exceptions == null) {\n      exceptions = new ArrayList<String>();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","sourceOld":"  public void addException(String msg, Exception e) {\n    @SuppressWarnings(\"unchecked\") \n      List<String> exceptions = (List<String>)facetResponse.get(\"exception\");\n\n    if (exceptions == null) {\n      exceptions = new ArrayList<String>();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","pathOld":"solr/src/java/org/apache/solr/request/SimpleFacets#addException(String,Exception).mjava","sourceNew":"  public void addException(String msg, Exception e) {\n    @SuppressWarnings(\"unchecked\") \n      List<String> exceptions = (List<String>)facetResponse.get(\"exception\");\n\n    if (exceptions == null) {\n      exceptions = new ArrayList<String>();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","sourceOld":"  public void addException(String msg, Exception e) {\n    @SuppressWarnings(\"unchecked\") \n      List<String> exceptions = (List<String>)facetResponse.get(\"exception\");\n\n    if (exceptions == null) {\n      exceptions = new ArrayList<String>();\n      facetResponse.add(\"exception\", exceptions);\n    }\n\n    String entry = msg + '\\n' + SolrException.toStr(e);\n    exceptions.add(entry);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef02613bb5b67b98ca5caf41e8d6e016a0158923":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["755f2f419306d7297c8feee10d1897addf4b2dd0"],"755f2f419306d7297c8feee10d1897addf4b2dd0":["ef02613bb5b67b98ca5caf41e8d6e016a0158923"],"c26f00b574427b55127e869b935845554afde1fa":["755f2f419306d7297c8feee10d1897addf4b2dd0","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ef02613bb5b67b98ca5caf41e8d6e016a0158923","755f2f419306d7297c8feee10d1897addf4b2dd0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["755f2f419306d7297c8feee10d1897addf4b2dd0"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ef02613bb5b67b98ca5caf41e8d6e016a0158923"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","755f2f419306d7297c8feee10d1897addf4b2dd0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"ef02613bb5b67b98ca5caf41e8d6e016a0158923":["755f2f419306d7297c8feee10d1897addf4b2dd0","29ef99d61cda9641b6250bf9567329a6e65f901d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"755f2f419306d7297c8feee10d1897addf4b2dd0":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ef02613bb5b67b98ca5caf41e8d6e016a0158923","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}