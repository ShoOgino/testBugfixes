{"path":"solr/core/src/test/org/apache/solr/search/TestFieldSortValues#testCustomComparator().mjava","commits":[{"id":"65e2bf06d895fdda62d42fc57fbfc20de7156a0e","date":1394215312,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFieldSortValues#testCustomComparator().mjava","pathOld":"/dev/null","sourceNew":"  public void testCustomComparator() throws Exception {\n    clearIndex();\n    assertU(adoc(sdoc(\"id\", \"1\", \"payload\", \"2\")));\n    assertU(adoc(sdoc(\"id\", \"2\", \"payload\", \"3\")));\n    assertU(adoc(sdoc(\"id\", \"3\", \"payload\", \"1\")));\n    assertU(adoc(sdoc(\"id\", \"4\", \"payload\", \"5\")));\n    assertU(adoc(sdoc(\"id\", \"5\", \"payload\", \"4\")));\n    assertU(commit());\n\n    // payload is backed by a custom sort field which returns the payload value mod 3\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"payload asc, id asc\", \"fsv\", \"true\")\n        , \"//result/doc[int='2'  and position()=1]\"\n        , \"//result/doc[int='3'  and position()=2]\"\n        , \"//result/doc[int='5'  and position()=3]\"\n        , \"//result/doc[int='1'  and position()=4]\"\n        , \"//result/doc[int='4'  and position()=5]\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ea64d994d340044e0d57aeb6a5871539d10ca5","date":1394225445,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFieldSortValues#testCustomComparator().mjava","pathOld":"/dev/null","sourceNew":"  public void testCustomComparator() throws Exception {\n    clearIndex();\n    assertU(adoc(sdoc(\"id\", \"1\", \"payload\", \"2\")));\n    assertU(adoc(sdoc(\"id\", \"2\", \"payload\", \"3\")));\n    assertU(adoc(sdoc(\"id\", \"3\", \"payload\", \"1\")));\n    assertU(adoc(sdoc(\"id\", \"4\", \"payload\", \"5\")));\n    assertU(adoc(sdoc(\"id\", \"5\", \"payload\", \"4\")));\n    assertU(commit());\n\n    // payload is backed by a custom sort field which returns the payload value mod 3\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"payload asc, id asc\", \"fsv\", \"true\")\n        , \"//result/doc[int='2'  and position()=1]\"\n        , \"//result/doc[int='3'  and position()=2]\"\n        , \"//result/doc[int='5'  and position()=3]\"\n        , \"//result/doc[int='1'  and position()=4]\"\n        , \"//result/doc[int='4'  and position()=5]\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFieldSortValues#testCustomComparator().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFieldSortValues#testCustomComparator().mjava","sourceNew":"  public void testCustomComparator() throws Exception {\n    clearIndex();\n    assertU(adoc(sdoc(\"id\", \"1\", \"payload\", \"2\")));\n    assertU(adoc(sdoc(\"id\", \"2\", \"payload\", \"3\")));\n    assertU(adoc(sdoc(\"id\", \"3\", \"payload\", \"1\")));\n    assertU(adoc(sdoc(\"id\", \"4\", \"payload\", \"5\")));\n    assertU(adoc(sdoc(\"id\", \"5\", \"payload\", \"4\")));\n    assertU(commit());\n\n    // payload is backed by a custom sort field which returns the payload value mod 3\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"payload asc, id asc\", \"fsv\", \"true\")\n        , \"//result/doc[str='2'  and position()=1]\"\n        , \"//result/doc[str='3'  and position()=2]\"\n        , \"//result/doc[str='5'  and position()=3]\"\n        , \"//result/doc[str='1'  and position()=4]\"\n        , \"//result/doc[str='4'  and position()=5]\");\n  }\n\n","sourceOld":"  public void testCustomComparator() throws Exception {\n    clearIndex();\n    assertU(adoc(sdoc(\"id\", \"1\", \"payload\", \"2\")));\n    assertU(adoc(sdoc(\"id\", \"2\", \"payload\", \"3\")));\n    assertU(adoc(sdoc(\"id\", \"3\", \"payload\", \"1\")));\n    assertU(adoc(sdoc(\"id\", \"4\", \"payload\", \"5\")));\n    assertU(adoc(sdoc(\"id\", \"5\", \"payload\", \"4\")));\n    assertU(commit());\n\n    // payload is backed by a custom sort field which returns the payload value mod 3\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"payload asc, id asc\", \"fsv\", \"true\")\n        , \"//result/doc[int='2'  and position()=1]\"\n        , \"//result/doc[int='3'  and position()=2]\"\n        , \"//result/doc[int='5'  and position()=3]\"\n        , \"//result/doc[int='1'  and position()=4]\"\n        , \"//result/doc[int='4'  and position()=5]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFieldSortValues#testCustomComparator().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFieldSortValues#testCustomComparator().mjava","sourceNew":"  public void testCustomComparator() throws Exception {\n    clearIndex();\n    assertU(adoc(sdoc(\"id\", \"1\", \"payload\", \"2\")));\n    assertU(adoc(sdoc(\"id\", \"2\", \"payload\", \"3\")));\n    assertU(adoc(sdoc(\"id\", \"3\", \"payload\", \"1\")));\n    assertU(adoc(sdoc(\"id\", \"4\", \"payload\", \"5\")));\n    assertU(adoc(sdoc(\"id\", \"5\", \"payload\", \"4\")));\n    assertU(commit());\n\n    // payload is backed by a custom sort field which returns the payload value mod 3\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"payload asc, id asc\", \"fsv\", \"true\")\n        , \"//result/doc[str='2'  and position()=1]\"\n        , \"//result/doc[str='3'  and position()=2]\"\n        , \"//result/doc[str='5'  and position()=3]\"\n        , \"//result/doc[str='1'  and position()=4]\"\n        , \"//result/doc[str='4'  and position()=5]\");\n  }\n\n","sourceOld":"  public void testCustomComparator() throws Exception {\n    clearIndex();\n    assertU(adoc(sdoc(\"id\", \"1\", \"payload\", \"2\")));\n    assertU(adoc(sdoc(\"id\", \"2\", \"payload\", \"3\")));\n    assertU(adoc(sdoc(\"id\", \"3\", \"payload\", \"1\")));\n    assertU(adoc(sdoc(\"id\", \"4\", \"payload\", \"5\")));\n    assertU(adoc(sdoc(\"id\", \"5\", \"payload\", \"4\")));\n    assertU(commit());\n\n    // payload is backed by a custom sort field which returns the payload value mod 3\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"payload asc, id asc\", \"fsv\", \"true\")\n        , \"//result/doc[int='2'  and position()=1]\"\n        , \"//result/doc[int='3'  and position()=2]\"\n        , \"//result/doc[int='5'  and position()=3]\"\n        , \"//result/doc[int='1'  and position()=4]\"\n        , \"//result/doc[int='4'  and position()=5]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFieldSortValues#testCustomComparator().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFieldSortValues#testCustomComparator().mjava","sourceNew":"  public void testCustomComparator() throws Exception {\n    clearIndex();\n    assertU(adoc(sdoc(\"id\", \"1\", \"payload\", \"2\")));\n    assertU(adoc(sdoc(\"id\", \"2\", \"payload\", \"3\")));\n    assertU(adoc(sdoc(\"id\", \"3\", \"payload\", \"1\")));\n    assertU(adoc(sdoc(\"id\", \"4\", \"payload\", \"5\")));\n    assertU(adoc(sdoc(\"id\", \"5\", \"payload\", \"4\")));\n    assertU(commit());\n\n    // payload is backed by a custom sort field which returns the payload value mod 3\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"payload asc, id asc\", \"fsv\", \"true\")\n        , \"//result/doc[str='2'  and position()=1]\"\n        , \"//result/doc[str='3'  and position()=2]\"\n        , \"//result/doc[str='5'  and position()=3]\"\n        , \"//result/doc[str='1'  and position()=4]\"\n        , \"//result/doc[str='4'  and position()=5]\");\n  }\n\n","sourceOld":"  public void testCustomComparator() throws Exception {\n    clearIndex();\n    assertU(adoc(sdoc(\"id\", \"1\", \"payload\", \"2\")));\n    assertU(adoc(sdoc(\"id\", \"2\", \"payload\", \"3\")));\n    assertU(adoc(sdoc(\"id\", \"3\", \"payload\", \"1\")));\n    assertU(adoc(sdoc(\"id\", \"4\", \"payload\", \"5\")));\n    assertU(adoc(sdoc(\"id\", \"5\", \"payload\", \"4\")));\n    assertU(commit());\n\n    // payload is backed by a custom sort field which returns the payload value mod 3\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"payload asc, id asc\", \"fsv\", \"true\")\n        , \"//result/doc[int='2'  and position()=1]\"\n        , \"//result/doc[int='3'  and position()=2]\"\n        , \"//result/doc[int='5'  and position()=3]\"\n        , \"//result/doc[int='1'  and position()=4]\"\n        , \"//result/doc[int='4'  and position()=5]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","65e2bf06d895fdda62d42fc57fbfc20de7156a0e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["65e2bf06d895fdda62d42fc57fbfc20de7156a0e"],"65e2bf06d895fdda62d42fc57fbfc20de7156a0e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["65e2bf06d895fdda62d42fc57fbfc20de7156a0e","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["65e2bf06d895fdda62d42fc57fbfc20de7156a0e","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["96ea64d994d340044e0d57aeb6a5871539d10ca5","65e2bf06d895fdda62d42fc57fbfc20de7156a0e"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"65e2bf06d895fdda62d42fc57fbfc20de7156a0e":["96ea64d994d340044e0d57aeb6a5871539d10ca5","a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96ea64d994d340044e0d57aeb6a5871539d10ca5","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}