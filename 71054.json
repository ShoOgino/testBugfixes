{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","commits":[{"id":"f4fbde3b8cf6b01501201d080622f6a282d0b5df","date":1383267008,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = getCommonParams();\n      params.set( \"ranges\", ranges);\n      return params;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87a8da508220b3dc7f6e030a17aeaa78bd74e891","date":1418855619,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = getCommonParams();\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = getCommonParams();\n      params.set( \"ranges\", ranges);\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd01cddc46c498fba02505e77f225300f83242db","date":1419298241,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = getCommonParams();\n      params.set( \"ranges\", ranges);\n\n      if(splitKey != null)\n        params.set(\"split.key\", this.splitKey);\n      \n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = getCommonParams();\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d","date":1419896224,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = getCommonParams();\n      params.set( \"ranges\", ranges);\n\n      if(splitKey != null)\n        params.set(\"split.key\", this.splitKey);\n      \n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      \n      params.set(\"async\", asyncId);\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = getCommonParams();\n      params.set( \"ranges\", ranges);\n\n      if(splitKey != null)\n        params.set(\"split.key\", this.splitKey);\n      \n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f222f4f2bda21ffd6b39b3362b2412e98e4d5e31","date":1435517625,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = getCommonParams();\n      params.set( \"ranges\", ranges);\n\n      if(splitKey != null)\n        params.set(\"split.key\", this.splitKey);\n      \n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      \n      params.set(CommonAdminParams.ASYNC, asyncId);\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = getCommonParams();\n      params.set( \"ranges\", ranges);\n\n      if(splitKey != null)\n        params.set(\"split.key\", this.splitKey);\n      \n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      \n      params.set(\"async\", asyncId);\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bbb741690cdafda7f1f7549c26351c912917a69","date":1453203134,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n      params.set( \"ranges\", ranges);\n\n      if(splitKey != null)\n        params.set(\"split.key\", this.splitKey);\n      \n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = getCommonParams();\n      params.set( \"ranges\", ranges);\n\n      if(splitKey != null)\n        params.set(\"split.key\", this.splitKey);\n      \n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      \n      params.set(CommonAdminParams.ASYNC, asyncId);\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1421546162ccd500af737a45b37a074ef6c06db","date":1455152032,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n      params.set( \"ranges\", ranges);\n\n      if(splitKey != null)\n        params.set(\"split.key\", this.splitKey);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n      params.set( \"ranges\", ranges);\n\n      if(splitKey != null)\n        params.set(\"split.key\", this.splitKey);\n      \n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29fa81316709750ed64dc585809eddf6a061294f","date":1457657342,"type":3,"author":"anshum","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      if(this.collection == null) {\n        throw new IllegalArgumentException(\"You must set collection name for this request.\");\n      }\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(\"shard\", shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n      params.set( \"ranges\", ranges);\n\n      if(splitKey != null)\n        params.set(\"split.key\", this.splitKey);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac97ea104d893f16aab430d9904473bc1f233f3c","date":1496249396,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(\"shard\", shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      if(this.collection == null) {\n        throw new IllegalArgumentException(\"You must set collection name for this request.\");\n      }\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(\"shard\", shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3217321f3e1d7922898c6c633d17acfa840d6875","date":1496257480,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(\"shard\", shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      if(this.collection == null) {\n        throw new IllegalArgumentException(\"You must set collection name for this request.\");\n      }\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(\"shard\", shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","date":1496281877,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(\"shard\", shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      if(this.collection == null) {\n        throw new IllegalArgumentException(\"You must set collection name for this request.\");\n      }\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(\"shard\", shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(\"shard\", shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      if(this.collection == null) {\n        throw new IllegalArgumentException(\"You must set collection name for this request.\");\n      }\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(\"shard\", shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46ef1a2b9cf8410947a87a43aba2b400394e773","date":1517224576,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(CoreAdminParams.SHARD, shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set(CoreAdminParams.RANGES, ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(\"shard\", shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set( \"ranges\", ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20c968c14aace7cf49843bf2c1fafc7fd3845659","date":1533133859,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(CoreAdminParams.SHARD, shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set(CoreAdminParams.RANGES, ranges);\n      params.set(CommonAdminParams.SPLIT_METHOD, splitMethod);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(CoreAdminParams.SHARD, shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set(CoreAdminParams.RANGES, ranges);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"beea534dfd393d03270d1508d61d6b5edc2df27f","date":1540245684,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(CoreAdminParams.SHARD, shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set(CoreAdminParams.RANGES, ranges);\n      params.set(CommonAdminParams.SPLIT_METHOD, splitMethod);\n      if(numSubShards != null)\n        params.set(\"numSubShards\", numSubShards);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(CoreAdminParams.SHARD, shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set(CoreAdminParams.RANGES, ranges);\n      params.set(CommonAdminParams.SPLIT_METHOD, splitMethod);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7cac1f2920f8057198f04505797cbabf74dd9a97","date":1546884894,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(CoreAdminParams.SHARD, shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set(CoreAdminParams.RANGES, ranges);\n      params.set(CommonAdminParams.SPLIT_METHOD, splitMethod);\n      if(numSubShards != null) {\n        params.set(\"numSubShards\", numSubShards);\n      }\n      if (splitFuzz != null) {\n        params.set(CommonAdminParams.SPLIT_FUZZ, String.valueOf(splitFuzz));\n      }\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(CoreAdminParams.SHARD, shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set(CoreAdminParams.RANGES, ranges);\n      params.set(CommonAdminParams.SPLIT_METHOD, splitMethod);\n      if(numSubShards != null)\n        params.set(\"numSubShards\", numSubShards);\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05f3f5161c62339ec5560b8f6958f3df8483618","date":1563550501,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.SplitShard#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(CoreAdminParams.SHARD, shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set(CoreAdminParams.RANGES, ranges);\n      params.set(CommonAdminParams.SPLIT_METHOD, splitMethod);\n      if(numSubShards != null) {\n        params.set(\"numSubShards\", numSubShards);\n      }\n      if (splitFuzz != null) {\n        params.set(CommonAdminParams.SPLIT_FUZZ, String.valueOf(splitFuzz));\n      }\n\n      if (splitByPrefix != null) {\n        params.set(CommonAdminParams.SPLIT_BY_PREFIX, splitByPrefix);\n      }\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n\n      params.set(CollectionAdminParams.COLLECTION, collection);\n\n      if (this.shard == null && this.splitKey == null) {\n        throw new IllegalArgumentException(\"You must set shardname OR splitkey for this request.\");\n      }\n\n      params.set(CoreAdminParams.SHARD, shard);\n      params.set(\"split.key\", this.splitKey);\n      params.set(CoreAdminParams.RANGES, ranges);\n      params.set(CommonAdminParams.SPLIT_METHOD, splitMethod);\n      if(numSubShards != null) {\n        params.set(\"numSubShards\", numSubShards);\n      }\n      if (splitFuzz != null) {\n        params.set(CommonAdminParams.SPLIT_FUZZ, String.valueOf(splitFuzz));\n      }\n\n      if(properties != null) {\n        addProperties(params, properties);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"beea534dfd393d03270d1508d61d6b5edc2df27f":["20c968c14aace7cf49843bf2c1fafc7fd3845659"],"f222f4f2bda21ffd6b39b3362b2412e98e4d5e31":["d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d"],"cd01cddc46c498fba02505e77f225300f83242db":["87a8da508220b3dc7f6e030a17aeaa78bd74e891"],"e46ef1a2b9cf8410947a87a43aba2b400394e773":["3217321f3e1d7922898c6c633d17acfa840d6875"],"3bbb741690cdafda7f1f7549c26351c912917a69":["f222f4f2bda21ffd6b39b3362b2412e98e4d5e31"],"7cac1f2920f8057198f04505797cbabf74dd9a97":["beea534dfd393d03270d1508d61d6b5edc2df27f"],"b1421546162ccd500af737a45b37a074ef6c06db":["3bbb741690cdafda7f1f7549c26351c912917a69"],"f4fbde3b8cf6b01501201d080622f6a282d0b5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["29fa81316709750ed64dc585809eddf6a061294f"],"3217321f3e1d7922898c6c633d17acfa840d6875":["29fa81316709750ed64dc585809eddf6a061294f","ac97ea104d893f16aab430d9904473bc1f233f3c"],"d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d":["cd01cddc46c498fba02505e77f225300f83242db"],"a05f3f5161c62339ec5560b8f6958f3df8483618":["7cac1f2920f8057198f04505797cbabf74dd9a97"],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["e46ef1a2b9cf8410947a87a43aba2b400394e773"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["29fa81316709750ed64dc585809eddf6a061294f","3217321f3e1d7922898c6c633d17acfa840d6875"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["29fa81316709750ed64dc585809eddf6a061294f","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87a8da508220b3dc7f6e030a17aeaa78bd74e891":["f4fbde3b8cf6b01501201d080622f6a282d0b5df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a05f3f5161c62339ec5560b8f6958f3df8483618"],"29fa81316709750ed64dc585809eddf6a061294f":["b1421546162ccd500af737a45b37a074ef6c06db"]},"commit2Childs":{"beea534dfd393d03270d1508d61d6b5edc2df27f":["7cac1f2920f8057198f04505797cbabf74dd9a97"],"f222f4f2bda21ffd6b39b3362b2412e98e4d5e31":["3bbb741690cdafda7f1f7549c26351c912917a69"],"cd01cddc46c498fba02505e77f225300f83242db":["d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d"],"e46ef1a2b9cf8410947a87a43aba2b400394e773":["20c968c14aace7cf49843bf2c1fafc7fd3845659"],"3bbb741690cdafda7f1f7549c26351c912917a69":["b1421546162ccd500af737a45b37a074ef6c06db"],"7cac1f2920f8057198f04505797cbabf74dd9a97":["a05f3f5161c62339ec5560b8f6958f3df8483618"],"b1421546162ccd500af737a45b37a074ef6c06db":["29fa81316709750ed64dc585809eddf6a061294f"],"f4fbde3b8cf6b01501201d080622f6a282d0b5df":["87a8da508220b3dc7f6e030a17aeaa78bd74e891"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["3217321f3e1d7922898c6c633d17acfa840d6875"],"3217321f3e1d7922898c6c633d17acfa840d6875":["e46ef1a2b9cf8410947a87a43aba2b400394e773","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d":["f222f4f2bda21ffd6b39b3362b2412e98e4d5e31"],"a05f3f5161c62339ec5560b8f6958f3df8483618":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["beea534dfd393d03270d1508d61d6b5edc2df27f"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4fbde3b8cf6b01501201d080622f6a282d0b5df"],"87a8da508220b3dc7f6e030a17aeaa78bd74e891":["cd01cddc46c498fba02505e77f225300f83242db"],"29fa81316709750ed64dc585809eddf6a061294f":["ac97ea104d893f16aab430d9904473bc1f233f3c","3217321f3e1d7922898c6c633d17acfa840d6875","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","e9017cf144952056066919f1ebc7897ff9bd71b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}