{"path":"lucene/core/src/test/org/apache/lucene/document/TestField#testIndexedBinaryField().mjava","commits":[{"id":"399d127639ae13222a8545b50e0ac545a6bcd2d7","date":1428704686,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testIndexedBinaryField().mjava","pathOld":"/dev/null","sourceNew":"  public void testIndexedBinaryField() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    BytesRef br = new BytesRef(new byte[5]);\n    Field field = new StringField(\"binary\", br, Field.Store.YES);\n    assertEquals(br, field.binaryValue());\n    doc.add(field);\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"binary\", br)), 1);\n    assertEquals(1, hits.totalHits);\n    StoredDocument storedDoc = s.doc(hits.scoreDocs[0].doc);\n    assertEquals(br, storedDoc.getField(\"binary\").binaryValue());\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testIndexedBinaryField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestField#testIndexedBinaryField().mjava","sourceNew":"  public void testIndexedBinaryField() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    BytesRef br = new BytesRef(new byte[5]);\n    Field field = new StringField(\"binary\", br, Field.Store.YES);\n    assertEquals(br, field.binaryValue());\n    doc.add(field);\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"binary\", br)), 1);\n    assertEquals(1, hits.totalHits);\n    Document storedDoc = s.doc(hits.scoreDocs[0].doc);\n    assertEquals(br, storedDoc.getField(\"binary\").binaryValue());\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIndexedBinaryField() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    BytesRef br = new BytesRef(new byte[5]);\n    Field field = new StringField(\"binary\", br, Field.Store.YES);\n    assertEquals(br, field.binaryValue());\n    doc.add(field);\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"binary\", br)), 1);\n    assertEquals(1, hits.totalHits);\n    StoredDocument storedDoc = s.doc(hits.scoreDocs[0].doc);\n    assertEquals(br, storedDoc.getField(\"binary\").binaryValue());\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testIndexedBinaryField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestField#testIndexedBinaryField().mjava","sourceNew":"  public void testIndexedBinaryField() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    BytesRef br = new BytesRef(new byte[5]);\n    Field field = new StringField(\"binary\", br, Field.Store.YES);\n    assertEquals(br, field.binaryValue());\n    doc.add(field);\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"binary\", br)), 1);\n    assertEquals(1, hits.totalHits.value);\n    Document storedDoc = s.doc(hits.scoreDocs[0].doc);\n    assertEquals(br, storedDoc.getField(\"binary\").binaryValue());\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIndexedBinaryField() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    BytesRef br = new BytesRef(new byte[5]);\n    Field field = new StringField(\"binary\", br, Field.Store.YES);\n    assertEquals(br, field.binaryValue());\n    doc.add(field);\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"binary\", br)), 1);\n    assertEquals(1, hits.totalHits);\n    Document storedDoc = s.doc(hits.scoreDocs[0].doc);\n    assertEquals(br, storedDoc.getField(\"binary\").binaryValue());\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"399d127639ae13222a8545b50e0ac545a6bcd2d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["399d127639ae13222a8545b50e0ac545a6bcd2d7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["399d127639ae13222a8545b50e0ac545a6bcd2d7"],"399d127639ae13222a8545b50e0ac545a6bcd2d7":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}