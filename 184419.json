{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#step2().mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#step2().mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#step2().mjava","sourceNew":"\t/**\n\t * Verb suffixes.\n   *\n   * Search for the longest among the following suffixes in RV,\n   * and if found, delete.\n   *\n   * @return false if no ending was removed\n\t*/\n\tprivate boolean step2() {\n    if (RV == null) return false ;\n\n    // suffix lenght = 7\n    if (RV.length() >= 7) {\n      if (suffix(RV,\"issemos\")) {\n        CT = removeSuffix(CT,\"issemos\") ; return true;\n      }\n      if (suffix(RV,\"essemos\")) {\n        CT = removeSuffix(CT,\"essemos\") ; return true;\n      }\n      if (suffix(RV,\"assemos\")) {\n        CT = removeSuffix(CT,\"assemos\") ; return true;\n      }\n      if (suffix(RV,\"ariamos\")) {\n        CT = removeSuffix(CT,\"ariamos\") ; return true;\n      }\n      if (suffix(RV,\"eriamos\")) {\n        CT = removeSuffix(CT,\"eriamos\") ; return true;\n      }\n      if (suffix(RV,\"iriamos\")) {\n        CT = removeSuffix(CT,\"iriamos\") ; return true;\n      }\n    }\n\n    // suffix lenght = 6\n    if (RV.length() >= 6) {\n      if (suffix(RV,\"iremos\")) {\n        CT = removeSuffix(CT,\"iremos\") ; return true;\n      }\n      if (suffix(RV,\"eremos\")) {\n        CT = removeSuffix(CT,\"eremos\") ; return true;\n      }\n      if (suffix(RV,\"aremos\")) {\n        CT = removeSuffix(CT,\"aremos\") ; return true;\n      }\n      if (suffix(RV,\"avamos\")) {\n        CT = removeSuffix(CT,\"avamos\") ; return true;\n      }\n      if (suffix(RV,\"iramos\")) {\n        CT = removeSuffix(CT,\"iramos\") ; return true;\n      }\n      if (suffix(RV,\"eramos\")) {\n        CT = removeSuffix(CT,\"eramos\") ; return true;\n      }\n      if (suffix(RV,\"aramos\")) {\n        CT = removeSuffix(CT,\"aramos\") ; return true;\n      }\n      if (suffix(RV,\"asseis\")) {\n        CT = removeSuffix(CT,\"asseis\") ; return true;\n      }\n      if (suffix(RV,\"esseis\")) {\n        CT = removeSuffix(CT,\"esseis\") ; return true;\n      }\n      if (suffix(RV,\"isseis\")) {\n        CT = removeSuffix(CT,\"isseis\") ; return true;\n      }\n      if (suffix(RV,\"arieis\")) {\n        CT = removeSuffix(CT,\"arieis\") ; return true;\n      }\n      if (suffix(RV,\"erieis\")) {\n        CT = removeSuffix(CT,\"erieis\") ; return true;\n      }\n      if (suffix(RV,\"irieis\")) {\n        CT = removeSuffix(CT,\"irieis\") ; return true;\n      }\n    }\n\n\n    // suffix lenght = 5\n    if (RV.length() >= 5) {\n      if (suffix(RV,\"irmos\")) {\n        CT = removeSuffix(CT,\"irmos\") ; return true;\n      }\n      if (suffix(RV,\"iamos\")) {\n        CT = removeSuffix(CT,\"iamos\") ; return true;\n      }\n      if (suffix(RV,\"armos\")) {\n        CT = removeSuffix(CT,\"armos\") ; return true;\n      }\n      if (suffix(RV,\"ermos\")) {\n        CT = removeSuffix(CT,\"ermos\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"ereis\")) {\n        CT = removeSuffix(CT,\"ereis\") ; return true;\n      }\n      if (suffix(RV,\"ireis\")) {\n        CT = removeSuffix(CT,\"ireis\") ; return true;\n      }\n      if (suffix(RV,\"asses\")) {\n        CT = removeSuffix(CT,\"asses\") ; return true;\n      }\n      if (suffix(RV,\"esses\")) {\n        CT = removeSuffix(CT,\"esses\") ; return true;\n      }\n      if (suffix(RV,\"isses\")) {\n        CT = removeSuffix(CT,\"isses\") ; return true;\n      }\n      if (suffix(RV,\"astes\")) {\n        CT = removeSuffix(CT,\"astes\") ; return true;\n      }\n      if (suffix(RV,\"assem\")) {\n        CT = removeSuffix(CT,\"assem\") ; return true;\n      }\n      if (suffix(RV,\"essem\")) {\n        CT = removeSuffix(CT,\"essem\") ; return true;\n      }\n      if (suffix(RV,\"issem\")) {\n        CT = removeSuffix(CT,\"issem\") ; return true;\n      }\n      if (suffix(RV,\"ardes\")) {\n        CT = removeSuffix(CT,\"ardes\") ; return true;\n      }\n      if (suffix(RV,\"erdes\")) {\n        CT = removeSuffix(CT,\"erdes\") ; return true;\n      }\n      if (suffix(RV,\"irdes\")) {\n        CT = removeSuffix(CT,\"irdes\") ; return true;\n      }\n      if (suffix(RV,\"ariam\")) {\n        CT = removeSuffix(CT,\"ariam\") ; return true;\n      }\n      if (suffix(RV,\"eriam\")) {\n        CT = removeSuffix(CT,\"eriam\") ; return true;\n      }\n      if (suffix(RV,\"iriam\")) {\n        CT = removeSuffix(CT,\"iriam\") ; return true;\n      }\n      if (suffix(RV,\"arias\")) {\n        CT = removeSuffix(CT,\"arias\") ; return true;\n      }\n      if (suffix(RV,\"erias\")) {\n        CT = removeSuffix(CT,\"erias\") ; return true;\n      }\n      if (suffix(RV,\"irias\")) {\n        CT = removeSuffix(CT,\"irias\") ; return true;\n      }\n      if (suffix(RV,\"estes\")) {\n        CT = removeSuffix(CT,\"estes\") ; return true;\n      }\n      if (suffix(RV,\"istes\")) {\n        CT = removeSuffix(CT,\"istes\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"aveis\")) {\n        CT = removeSuffix(CT,\"aveis\") ; return true;\n      }\n    }\n\n    // suffix lenght = 4\n    if (RV.length() >= 4) {\n      if (suffix(RV,\"aria\")) {\n        CT = removeSuffix(CT,\"aria\") ; return true;\n      }\n      if (suffix(RV,\"eria\")) {\n        CT = removeSuffix(CT,\"eria\") ; return true;\n      }\n      if (suffix(RV,\"iria\")) {\n        CT = removeSuffix(CT,\"iria\") ; return true;\n      }\n      if (suffix(RV,\"asse\")) {\n        CT = removeSuffix(CT,\"asse\") ; return true;\n      }\n      if (suffix(RV,\"esse\")) {\n        CT = removeSuffix(CT,\"esse\") ; return true;\n      }\n      if (suffix(RV,\"isse\")) {\n        CT = removeSuffix(CT,\"isse\") ; return true;\n      }\n      if (suffix(RV,\"aste\")) {\n        CT = removeSuffix(CT,\"aste\") ; return true;\n      }\n      if (suffix(RV,\"este\")) {\n        CT = removeSuffix(CT,\"este\") ; return true;\n      }\n      if (suffix(RV,\"iste\")) {\n        CT = removeSuffix(CT,\"iste\") ; return true;\n      }\n      if (suffix(RV,\"arei\")) {\n        CT = removeSuffix(CT,\"arei\") ; return true;\n      }\n      if (suffix(RV,\"erei\")) {\n        CT = removeSuffix(CT,\"erei\") ; return true;\n      }\n      if (suffix(RV,\"irei\")) {\n        CT = removeSuffix(CT,\"irei\") ; return true;\n      }\n      if (suffix(RV,\"aram\")) {\n        CT = removeSuffix(CT,\"aram\") ; return true;\n      }\n      if (suffix(RV,\"eram\")) {\n        CT = removeSuffix(CT,\"eram\") ; return true;\n      }\n      if (suffix(RV,\"iram\")) {\n        CT = removeSuffix(CT,\"iram\") ; return true;\n      }\n      if (suffix(RV,\"avam\")) {\n        CT = removeSuffix(CT,\"avam\") ; return true;\n      }\n      if (suffix(RV,\"arem\")) {\n        CT = removeSuffix(CT,\"arem\") ; return true;\n      }\n      if (suffix(RV,\"erem\")) {\n        CT = removeSuffix(CT,\"erem\") ; return true;\n      }\n      if (suffix(RV,\"irem\")) {\n        CT = removeSuffix(CT,\"irem\") ; return true;\n      }\n      if (suffix(RV,\"ando\")) {\n        CT = removeSuffix(CT,\"ando\") ; return true;\n      }\n      if (suffix(RV,\"endo\")) {\n        CT = removeSuffix(CT,\"endo\") ; return true;\n      }\n      if (suffix(RV,\"indo\")) {\n        CT = removeSuffix(CT,\"indo\") ; return true;\n      }\n      if (suffix(RV,\"arao\")) {\n        CT = removeSuffix(CT,\"arao\") ; return true;\n      }\n      if (suffix(RV,\"erao\")) {\n        CT = removeSuffix(CT,\"erao\") ; return true;\n      }\n      if (suffix(RV,\"irao\")) {\n        CT = removeSuffix(CT,\"irao\") ; return true;\n      }\n      if (suffix(RV,\"adas\")) {\n        CT = removeSuffix(CT,\"adas\") ; return true;\n      }\n      if (suffix(RV,\"idas\")) {\n        CT = removeSuffix(CT,\"idas\") ; return true;\n      }\n      if (suffix(RV,\"aras\")) {\n        CT = removeSuffix(CT,\"aras\") ; return true;\n      }\n      if (suffix(RV,\"eras\")) {\n        CT = removeSuffix(CT,\"eras\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"avas\")) {\n        CT = removeSuffix(CT,\"avas\") ; return true;\n      }\n      if (suffix(RV,\"ares\")) {\n        CT = removeSuffix(CT,\"ares\") ; return true;\n      }\n      if (suffix(RV,\"eres\")) {\n        CT = removeSuffix(CT,\"eres\") ; return true;\n      }\n      if (suffix(RV,\"ires\")) {\n        CT = removeSuffix(CT,\"ires\") ; return true;\n      }\n      if (suffix(RV,\"ados\")) {\n        CT = removeSuffix(CT,\"ados\") ; return true;\n      }\n      if (suffix(RV,\"idos\")) {\n        CT = removeSuffix(CT,\"idos\") ; return true;\n      }\n      if (suffix(RV,\"amos\")) {\n        CT = removeSuffix(CT,\"amos\") ; return true;\n      }\n      if (suffix(RV,\"emos\")) {\n        CT = removeSuffix(CT,\"emos\") ; return true;\n      }\n      if (suffix(RV,\"imos\")) {\n        CT = removeSuffix(CT,\"imos\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"ieis\")) {\n        CT = removeSuffix(CT,\"ieis\") ; return true;\n      }\n    }\n\n    // suffix lenght = 3\n    if (RV.length() >= 3) {\n      if (suffix(RV,\"ada\")) {\n        CT = removeSuffix(CT,\"ada\") ; return true;\n      }\n      if (suffix(RV,\"ida\")) {\n        CT = removeSuffix(CT,\"ida\") ; return true;\n      }\n      if (suffix(RV,\"ara\")) {\n        CT = removeSuffix(CT,\"ara\") ; return true;\n      }\n      if (suffix(RV,\"era\")) {\n        CT = removeSuffix(CT,\"era\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ava\") ; return true;\n      }\n      if (suffix(RV,\"iam\")) {\n        CT = removeSuffix(CT,\"iam\") ; return true;\n      }\n      if (suffix(RV,\"ado\")) {\n        CT = removeSuffix(CT,\"ado\") ; return true;\n      }\n      if (suffix(RV,\"ido\")) {\n        CT = removeSuffix(CT,\"ido\") ; return true;\n      }\n      if (suffix(RV,\"ias\")) {\n        CT = removeSuffix(CT,\"ias\") ; return true;\n      }\n      if (suffix(RV,\"ais\")) {\n        CT = removeSuffix(CT,\"ais\") ; return true;\n      }\n      if (suffix(RV,\"eis\")) {\n        CT = removeSuffix(CT,\"eis\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ira\") ; return true;\n      }\n      if (suffix(RV,\"ear\")) {\n        CT = removeSuffix(CT,\"ear\") ; return true;\n      }\n    }\n\n    // suffix lenght = 2\n    if (RV.length() >= 2) {\n      if (suffix(RV,\"ia\")) {\n        CT = removeSuffix(CT,\"ia\") ; return true;\n      }\n      if (suffix(RV,\"ei\")) {\n        CT = removeSuffix(CT,\"ei\") ; return true;\n      }\n      if (suffix(RV,\"am\")) {\n        CT = removeSuffix(CT,\"am\") ; return true;\n      }\n      if (suffix(RV,\"em\")) {\n        CT = removeSuffix(CT,\"em\") ; return true;\n      }\n      if (suffix(RV,\"ar\")) {\n        CT = removeSuffix(CT,\"ar\") ; return true;\n      }\n      if (suffix(RV,\"er\")) {\n        CT = removeSuffix(CT,\"er\") ; return true;\n      }\n      if (suffix(RV,\"ir\")) {\n        CT = removeSuffix(CT,\"ir\") ; return true;\n      }\n      if (suffix(RV,\"as\")) {\n        CT = removeSuffix(CT,\"as\") ; return true;\n      }\n      if (suffix(RV,\"es\")) {\n        CT = removeSuffix(CT,\"es\") ; return true;\n      }\n      if (suffix(RV,\"is\")) {\n        CT = removeSuffix(CT,\"is\") ; return true;\n      }\n      if (suffix(RV,\"eu\")) {\n        CT = removeSuffix(CT,\"eu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"ou\")) {\n        CT = removeSuffix(CT,\"ou\") ; return true;\n      }\n    }\n\n    // no ending was removed by step2\n    return false ;\n  }\n\n","sourceOld":"\t/**\n\t * Verb suffixes.\n   *\n   * Search for the longest among the following suffixes in RV,\n   * and if found, delete.\n   *\n   * @return false if no ending was removed\n\t*/\n\tprivate boolean step2() {\n    if (RV == null) return false ;\n\n    // suffix lenght = 7\n    if (RV.length() >= 7) {\n      if (suffix(RV,\"issemos\")) {\n        CT = removeSuffix(CT,\"issemos\") ; return true;\n      }\n      if (suffix(RV,\"essemos\")) {\n        CT = removeSuffix(CT,\"essemos\") ; return true;\n      }\n      if (suffix(RV,\"assemos\")) {\n        CT = removeSuffix(CT,\"assemos\") ; return true;\n      }\n      if (suffix(RV,\"ariamos\")) {\n        CT = removeSuffix(CT,\"ariamos\") ; return true;\n      }\n      if (suffix(RV,\"eriamos\")) {\n        CT = removeSuffix(CT,\"eriamos\") ; return true;\n      }\n      if (suffix(RV,\"iriamos\")) {\n        CT = removeSuffix(CT,\"iriamos\") ; return true;\n      }\n    }\n\n    // suffix lenght = 6\n    if (RV.length() >= 6) {\n      if (suffix(RV,\"iremos\")) {\n        CT = removeSuffix(CT,\"iremos\") ; return true;\n      }\n      if (suffix(RV,\"eremos\")) {\n        CT = removeSuffix(CT,\"eremos\") ; return true;\n      }\n      if (suffix(RV,\"aremos\")) {\n        CT = removeSuffix(CT,\"aremos\") ; return true;\n      }\n      if (suffix(RV,\"avamos\")) {\n        CT = removeSuffix(CT,\"avamos\") ; return true;\n      }\n      if (suffix(RV,\"iramos\")) {\n        CT = removeSuffix(CT,\"iramos\") ; return true;\n      }\n      if (suffix(RV,\"eramos\")) {\n        CT = removeSuffix(CT,\"eramos\") ; return true;\n      }\n      if (suffix(RV,\"aramos\")) {\n        CT = removeSuffix(CT,\"aramos\") ; return true;\n      }\n      if (suffix(RV,\"asseis\")) {\n        CT = removeSuffix(CT,\"asseis\") ; return true;\n      }\n      if (suffix(RV,\"esseis\")) {\n        CT = removeSuffix(CT,\"esseis\") ; return true;\n      }\n      if (suffix(RV,\"isseis\")) {\n        CT = removeSuffix(CT,\"isseis\") ; return true;\n      }\n      if (suffix(RV,\"arieis\")) {\n        CT = removeSuffix(CT,\"arieis\") ; return true;\n      }\n      if (suffix(RV,\"erieis\")) {\n        CT = removeSuffix(CT,\"erieis\") ; return true;\n      }\n      if (suffix(RV,\"irieis\")) {\n        CT = removeSuffix(CT,\"irieis\") ; return true;\n      }\n    }\n\n\n    // suffix lenght = 5\n    if (RV.length() >= 5) {\n      if (suffix(RV,\"irmos\")) {\n        CT = removeSuffix(CT,\"irmos\") ; return true;\n      }\n      if (suffix(RV,\"iamos\")) {\n        CT = removeSuffix(CT,\"iamos\") ; return true;\n      }\n      if (suffix(RV,\"armos\")) {\n        CT = removeSuffix(CT,\"armos\") ; return true;\n      }\n      if (suffix(RV,\"ermos\")) {\n        CT = removeSuffix(CT,\"ermos\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"ereis\")) {\n        CT = removeSuffix(CT,\"ereis\") ; return true;\n      }\n      if (suffix(RV,\"ireis\")) {\n        CT = removeSuffix(CT,\"ireis\") ; return true;\n      }\n      if (suffix(RV,\"asses\")) {\n        CT = removeSuffix(CT,\"asses\") ; return true;\n      }\n      if (suffix(RV,\"esses\")) {\n        CT = removeSuffix(CT,\"esses\") ; return true;\n      }\n      if (suffix(RV,\"isses\")) {\n        CT = removeSuffix(CT,\"isses\") ; return true;\n      }\n      if (suffix(RV,\"astes\")) {\n        CT = removeSuffix(CT,\"astes\") ; return true;\n      }\n      if (suffix(RV,\"assem\")) {\n        CT = removeSuffix(CT,\"assem\") ; return true;\n      }\n      if (suffix(RV,\"essem\")) {\n        CT = removeSuffix(CT,\"essem\") ; return true;\n      }\n      if (suffix(RV,\"issem\")) {\n        CT = removeSuffix(CT,\"issem\") ; return true;\n      }\n      if (suffix(RV,\"ardes\")) {\n        CT = removeSuffix(CT,\"ardes\") ; return true;\n      }\n      if (suffix(RV,\"erdes\")) {\n        CT = removeSuffix(CT,\"erdes\") ; return true;\n      }\n      if (suffix(RV,\"irdes\")) {\n        CT = removeSuffix(CT,\"irdes\") ; return true;\n      }\n      if (suffix(RV,\"ariam\")) {\n        CT = removeSuffix(CT,\"ariam\") ; return true;\n      }\n      if (suffix(RV,\"eriam\")) {\n        CT = removeSuffix(CT,\"eriam\") ; return true;\n      }\n      if (suffix(RV,\"iriam\")) {\n        CT = removeSuffix(CT,\"iriam\") ; return true;\n      }\n      if (suffix(RV,\"arias\")) {\n        CT = removeSuffix(CT,\"arias\") ; return true;\n      }\n      if (suffix(RV,\"erias\")) {\n        CT = removeSuffix(CT,\"erias\") ; return true;\n      }\n      if (suffix(RV,\"irias\")) {\n        CT = removeSuffix(CT,\"irias\") ; return true;\n      }\n      if (suffix(RV,\"estes\")) {\n        CT = removeSuffix(CT,\"estes\") ; return true;\n      }\n      if (suffix(RV,\"istes\")) {\n        CT = removeSuffix(CT,\"istes\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"aveis\")) {\n        CT = removeSuffix(CT,\"aveis\") ; return true;\n      }\n    }\n\n    // suffix lenght = 4\n    if (RV.length() >= 4) {\n      if (suffix(RV,\"aria\")) {\n        CT = removeSuffix(CT,\"aria\") ; return true;\n      }\n      if (suffix(RV,\"eria\")) {\n        CT = removeSuffix(CT,\"eria\") ; return true;\n      }\n      if (suffix(RV,\"iria\")) {\n        CT = removeSuffix(CT,\"iria\") ; return true;\n      }\n      if (suffix(RV,\"asse\")) {\n        CT = removeSuffix(CT,\"asse\") ; return true;\n      }\n      if (suffix(RV,\"esse\")) {\n        CT = removeSuffix(CT,\"esse\") ; return true;\n      }\n      if (suffix(RV,\"isse\")) {\n        CT = removeSuffix(CT,\"isse\") ; return true;\n      }\n      if (suffix(RV,\"aste\")) {\n        CT = removeSuffix(CT,\"aste\") ; return true;\n      }\n      if (suffix(RV,\"este\")) {\n        CT = removeSuffix(CT,\"este\") ; return true;\n      }\n      if (suffix(RV,\"iste\")) {\n        CT = removeSuffix(CT,\"iste\") ; return true;\n      }\n      if (suffix(RV,\"arei\")) {\n        CT = removeSuffix(CT,\"arei\") ; return true;\n      }\n      if (suffix(RV,\"erei\")) {\n        CT = removeSuffix(CT,\"erei\") ; return true;\n      }\n      if (suffix(RV,\"irei\")) {\n        CT = removeSuffix(CT,\"irei\") ; return true;\n      }\n      if (suffix(RV,\"aram\")) {\n        CT = removeSuffix(CT,\"aram\") ; return true;\n      }\n      if (suffix(RV,\"eram\")) {\n        CT = removeSuffix(CT,\"eram\") ; return true;\n      }\n      if (suffix(RV,\"iram\")) {\n        CT = removeSuffix(CT,\"iram\") ; return true;\n      }\n      if (suffix(RV,\"avam\")) {\n        CT = removeSuffix(CT,\"avam\") ; return true;\n      }\n      if (suffix(RV,\"arem\")) {\n        CT = removeSuffix(CT,\"arem\") ; return true;\n      }\n      if (suffix(RV,\"erem\")) {\n        CT = removeSuffix(CT,\"erem\") ; return true;\n      }\n      if (suffix(RV,\"irem\")) {\n        CT = removeSuffix(CT,\"irem\") ; return true;\n      }\n      if (suffix(RV,\"ando\")) {\n        CT = removeSuffix(CT,\"ando\") ; return true;\n      }\n      if (suffix(RV,\"endo\")) {\n        CT = removeSuffix(CT,\"endo\") ; return true;\n      }\n      if (suffix(RV,\"indo\")) {\n        CT = removeSuffix(CT,\"indo\") ; return true;\n      }\n      if (suffix(RV,\"arao\")) {\n        CT = removeSuffix(CT,\"arao\") ; return true;\n      }\n      if (suffix(RV,\"erao\")) {\n        CT = removeSuffix(CT,\"erao\") ; return true;\n      }\n      if (suffix(RV,\"irao\")) {\n        CT = removeSuffix(CT,\"irao\") ; return true;\n      }\n      if (suffix(RV,\"adas\")) {\n        CT = removeSuffix(CT,\"adas\") ; return true;\n      }\n      if (suffix(RV,\"idas\")) {\n        CT = removeSuffix(CT,\"idas\") ; return true;\n      }\n      if (suffix(RV,\"aras\")) {\n        CT = removeSuffix(CT,\"aras\") ; return true;\n      }\n      if (suffix(RV,\"eras\")) {\n        CT = removeSuffix(CT,\"eras\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"avas\")) {\n        CT = removeSuffix(CT,\"avas\") ; return true;\n      }\n      if (suffix(RV,\"ares\")) {\n        CT = removeSuffix(CT,\"ares\") ; return true;\n      }\n      if (suffix(RV,\"eres\")) {\n        CT = removeSuffix(CT,\"eres\") ; return true;\n      }\n      if (suffix(RV,\"ires\")) {\n        CT = removeSuffix(CT,\"ires\") ; return true;\n      }\n      if (suffix(RV,\"ados\")) {\n        CT = removeSuffix(CT,\"ados\") ; return true;\n      }\n      if (suffix(RV,\"idos\")) {\n        CT = removeSuffix(CT,\"idos\") ; return true;\n      }\n      if (suffix(RV,\"amos\")) {\n        CT = removeSuffix(CT,\"amos\") ; return true;\n      }\n      if (suffix(RV,\"emos\")) {\n        CT = removeSuffix(CT,\"emos\") ; return true;\n      }\n      if (suffix(RV,\"imos\")) {\n        CT = removeSuffix(CT,\"imos\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"ieis\")) {\n        CT = removeSuffix(CT,\"ieis\") ; return true;\n      }\n    }\n\n    // suffix lenght = 3\n    if (RV.length() >= 3) {\n      if (suffix(RV,\"ada\")) {\n        CT = removeSuffix(CT,\"ada\") ; return true;\n      }\n      if (suffix(RV,\"ida\")) {\n        CT = removeSuffix(CT,\"ida\") ; return true;\n      }\n      if (suffix(RV,\"ara\")) {\n        CT = removeSuffix(CT,\"ara\") ; return true;\n      }\n      if (suffix(RV,\"era\")) {\n        CT = removeSuffix(CT,\"era\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ava\") ; return true;\n      }\n      if (suffix(RV,\"iam\")) {\n        CT = removeSuffix(CT,\"iam\") ; return true;\n      }\n      if (suffix(RV,\"ado\")) {\n        CT = removeSuffix(CT,\"ado\") ; return true;\n      }\n      if (suffix(RV,\"ido\")) {\n        CT = removeSuffix(CT,\"ido\") ; return true;\n      }\n      if (suffix(RV,\"ias\")) {\n        CT = removeSuffix(CT,\"ias\") ; return true;\n      }\n      if (suffix(RV,\"ais\")) {\n        CT = removeSuffix(CT,\"ais\") ; return true;\n      }\n      if (suffix(RV,\"eis\")) {\n        CT = removeSuffix(CT,\"eis\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ira\") ; return true;\n      }\n      if (suffix(RV,\"ear\")) {\n        CT = removeSuffix(CT,\"ear\") ; return true;\n      }\n    }\n\n    // suffix lenght = 2\n    if (RV.length() >= 2) {\n      if (suffix(RV,\"ia\")) {\n        CT = removeSuffix(CT,\"ia\") ; return true;\n      }\n      if (suffix(RV,\"ei\")) {\n        CT = removeSuffix(CT,\"ei\") ; return true;\n      }\n      if (suffix(RV,\"am\")) {\n        CT = removeSuffix(CT,\"am\") ; return true;\n      }\n      if (suffix(RV,\"em\")) {\n        CT = removeSuffix(CT,\"em\") ; return true;\n      }\n      if (suffix(RV,\"ar\")) {\n        CT = removeSuffix(CT,\"ar\") ; return true;\n      }\n      if (suffix(RV,\"er\")) {\n        CT = removeSuffix(CT,\"er\") ; return true;\n      }\n      if (suffix(RV,\"ir\")) {\n        CT = removeSuffix(CT,\"ir\") ; return true;\n      }\n      if (suffix(RV,\"as\")) {\n        CT = removeSuffix(CT,\"as\") ; return true;\n      }\n      if (suffix(RV,\"es\")) {\n        CT = removeSuffix(CT,\"es\") ; return true;\n      }\n      if (suffix(RV,\"is\")) {\n        CT = removeSuffix(CT,\"is\") ; return true;\n      }\n      if (suffix(RV,\"eu\")) {\n        CT = removeSuffix(CT,\"eu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"ou\")) {\n        CT = removeSuffix(CT,\"ou\") ; return true;\n      }\n    }\n\n    // no ending was removed by step2\n    return false ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"add7d922e63099fbce8f0a1b31216df7ef5067f1","date":1252002701,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#step2().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#step2().mjava","sourceNew":"\t/**\n\t * Verb suffixes.\n   *\n   * Search for the longest among the following suffixes in RV,\n   * and if found, delete.\n   *\n   * @return false if no ending was removed\n\t*/\n\tprivate boolean step2() {\n    if (RV == null) return false ;\n\n    // suffix lenght = 7\n    if (RV.length() >= 7) {\n      if (suffix(RV,\"issemos\")) {\n        CT = removeSuffix(CT,\"issemos\") ; return true;\n      }\n      if (suffix(RV,\"essemos\")) {\n        CT = removeSuffix(CT,\"essemos\") ; return true;\n      }\n      if (suffix(RV,\"assemos\")) {\n        CT = removeSuffix(CT,\"assemos\") ; return true;\n      }\n      if (suffix(RV,\"ariamos\")) {\n        CT = removeSuffix(CT,\"ariamos\") ; return true;\n      }\n      if (suffix(RV,\"eriamos\")) {\n        CT = removeSuffix(CT,\"eriamos\") ; return true;\n      }\n      if (suffix(RV,\"iriamos\")) {\n        CT = removeSuffix(CT,\"iriamos\") ; return true;\n      }\n    }\n\n    // suffix length = 6\n    if (RV.length() >= 6) {\n      if (suffix(RV,\"iremos\")) {\n        CT = removeSuffix(CT,\"iremos\") ; return true;\n      }\n      if (suffix(RV,\"eremos\")) {\n        CT = removeSuffix(CT,\"eremos\") ; return true;\n      }\n      if (suffix(RV,\"aremos\")) {\n        CT = removeSuffix(CT,\"aremos\") ; return true;\n      }\n      if (suffix(RV,\"avamos\")) {\n        CT = removeSuffix(CT,\"avamos\") ; return true;\n      }\n      if (suffix(RV,\"iramos\")) {\n        CT = removeSuffix(CT,\"iramos\") ; return true;\n      }\n      if (suffix(RV,\"eramos\")) {\n        CT = removeSuffix(CT,\"eramos\") ; return true;\n      }\n      if (suffix(RV,\"aramos\")) {\n        CT = removeSuffix(CT,\"aramos\") ; return true;\n      }\n      if (suffix(RV,\"asseis\")) {\n        CT = removeSuffix(CT,\"asseis\") ; return true;\n      }\n      if (suffix(RV,\"esseis\")) {\n        CT = removeSuffix(CT,\"esseis\") ; return true;\n      }\n      if (suffix(RV,\"isseis\")) {\n        CT = removeSuffix(CT,\"isseis\") ; return true;\n      }\n      if (suffix(RV,\"arieis\")) {\n        CT = removeSuffix(CT,\"arieis\") ; return true;\n      }\n      if (suffix(RV,\"erieis\")) {\n        CT = removeSuffix(CT,\"erieis\") ; return true;\n      }\n      if (suffix(RV,\"irieis\")) {\n        CT = removeSuffix(CT,\"irieis\") ; return true;\n      }\n    }\n\n\n    // suffix length = 5\n    if (RV.length() >= 5) {\n      if (suffix(RV,\"irmos\")) {\n        CT = removeSuffix(CT,\"irmos\") ; return true;\n      }\n      if (suffix(RV,\"iamos\")) {\n        CT = removeSuffix(CT,\"iamos\") ; return true;\n      }\n      if (suffix(RV,\"armos\")) {\n        CT = removeSuffix(CT,\"armos\") ; return true;\n      }\n      if (suffix(RV,\"ermos\")) {\n        CT = removeSuffix(CT,\"ermos\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"ereis\")) {\n        CT = removeSuffix(CT,\"ereis\") ; return true;\n      }\n      if (suffix(RV,\"ireis\")) {\n        CT = removeSuffix(CT,\"ireis\") ; return true;\n      }\n      if (suffix(RV,\"asses\")) {\n        CT = removeSuffix(CT,\"asses\") ; return true;\n      }\n      if (suffix(RV,\"esses\")) {\n        CT = removeSuffix(CT,\"esses\") ; return true;\n      }\n      if (suffix(RV,\"isses\")) {\n        CT = removeSuffix(CT,\"isses\") ; return true;\n      }\n      if (suffix(RV,\"astes\")) {\n        CT = removeSuffix(CT,\"astes\") ; return true;\n      }\n      if (suffix(RV,\"assem\")) {\n        CT = removeSuffix(CT,\"assem\") ; return true;\n      }\n      if (suffix(RV,\"essem\")) {\n        CT = removeSuffix(CT,\"essem\") ; return true;\n      }\n      if (suffix(RV,\"issem\")) {\n        CT = removeSuffix(CT,\"issem\") ; return true;\n      }\n      if (suffix(RV,\"ardes\")) {\n        CT = removeSuffix(CT,\"ardes\") ; return true;\n      }\n      if (suffix(RV,\"erdes\")) {\n        CT = removeSuffix(CT,\"erdes\") ; return true;\n      }\n      if (suffix(RV,\"irdes\")) {\n        CT = removeSuffix(CT,\"irdes\") ; return true;\n      }\n      if (suffix(RV,\"ariam\")) {\n        CT = removeSuffix(CT,\"ariam\") ; return true;\n      }\n      if (suffix(RV,\"eriam\")) {\n        CT = removeSuffix(CT,\"eriam\") ; return true;\n      }\n      if (suffix(RV,\"iriam\")) {\n        CT = removeSuffix(CT,\"iriam\") ; return true;\n      }\n      if (suffix(RV,\"arias\")) {\n        CT = removeSuffix(CT,\"arias\") ; return true;\n      }\n      if (suffix(RV,\"erias\")) {\n        CT = removeSuffix(CT,\"erias\") ; return true;\n      }\n      if (suffix(RV,\"irias\")) {\n        CT = removeSuffix(CT,\"irias\") ; return true;\n      }\n      if (suffix(RV,\"estes\")) {\n        CT = removeSuffix(CT,\"estes\") ; return true;\n      }\n      if (suffix(RV,\"istes\")) {\n        CT = removeSuffix(CT,\"istes\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"aveis\")) {\n        CT = removeSuffix(CT,\"aveis\") ; return true;\n      }\n    }\n\n    // suffix length = 4\n    if (RV.length() >= 4) {\n      if (suffix(RV,\"aria\")) {\n        CT = removeSuffix(CT,\"aria\") ; return true;\n      }\n      if (suffix(RV,\"eria\")) {\n        CT = removeSuffix(CT,\"eria\") ; return true;\n      }\n      if (suffix(RV,\"iria\")) {\n        CT = removeSuffix(CT,\"iria\") ; return true;\n      }\n      if (suffix(RV,\"asse\")) {\n        CT = removeSuffix(CT,\"asse\") ; return true;\n      }\n      if (suffix(RV,\"esse\")) {\n        CT = removeSuffix(CT,\"esse\") ; return true;\n      }\n      if (suffix(RV,\"isse\")) {\n        CT = removeSuffix(CT,\"isse\") ; return true;\n      }\n      if (suffix(RV,\"aste\")) {\n        CT = removeSuffix(CT,\"aste\") ; return true;\n      }\n      if (suffix(RV,\"este\")) {\n        CT = removeSuffix(CT,\"este\") ; return true;\n      }\n      if (suffix(RV,\"iste\")) {\n        CT = removeSuffix(CT,\"iste\") ; return true;\n      }\n      if (suffix(RV,\"arei\")) {\n        CT = removeSuffix(CT,\"arei\") ; return true;\n      }\n      if (suffix(RV,\"erei\")) {\n        CT = removeSuffix(CT,\"erei\") ; return true;\n      }\n      if (suffix(RV,\"irei\")) {\n        CT = removeSuffix(CT,\"irei\") ; return true;\n      }\n      if (suffix(RV,\"aram\")) {\n        CT = removeSuffix(CT,\"aram\") ; return true;\n      }\n      if (suffix(RV,\"eram\")) {\n        CT = removeSuffix(CT,\"eram\") ; return true;\n      }\n      if (suffix(RV,\"iram\")) {\n        CT = removeSuffix(CT,\"iram\") ; return true;\n      }\n      if (suffix(RV,\"avam\")) {\n        CT = removeSuffix(CT,\"avam\") ; return true;\n      }\n      if (suffix(RV,\"arem\")) {\n        CT = removeSuffix(CT,\"arem\") ; return true;\n      }\n      if (suffix(RV,\"erem\")) {\n        CT = removeSuffix(CT,\"erem\") ; return true;\n      }\n      if (suffix(RV,\"irem\")) {\n        CT = removeSuffix(CT,\"irem\") ; return true;\n      }\n      if (suffix(RV,\"ando\")) {\n        CT = removeSuffix(CT,\"ando\") ; return true;\n      }\n      if (suffix(RV,\"endo\")) {\n        CT = removeSuffix(CT,\"endo\") ; return true;\n      }\n      if (suffix(RV,\"indo\")) {\n        CT = removeSuffix(CT,\"indo\") ; return true;\n      }\n      if (suffix(RV,\"arao\")) {\n        CT = removeSuffix(CT,\"arao\") ; return true;\n      }\n      if (suffix(RV,\"erao\")) {\n        CT = removeSuffix(CT,\"erao\") ; return true;\n      }\n      if (suffix(RV,\"irao\")) {\n        CT = removeSuffix(CT,\"irao\") ; return true;\n      }\n      if (suffix(RV,\"adas\")) {\n        CT = removeSuffix(CT,\"adas\") ; return true;\n      }\n      if (suffix(RV,\"idas\")) {\n        CT = removeSuffix(CT,\"idas\") ; return true;\n      }\n      if (suffix(RV,\"aras\")) {\n        CT = removeSuffix(CT,\"aras\") ; return true;\n      }\n      if (suffix(RV,\"eras\")) {\n        CT = removeSuffix(CT,\"eras\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"avas\")) {\n        CT = removeSuffix(CT,\"avas\") ; return true;\n      }\n      if (suffix(RV,\"ares\")) {\n        CT = removeSuffix(CT,\"ares\") ; return true;\n      }\n      if (suffix(RV,\"eres\")) {\n        CT = removeSuffix(CT,\"eres\") ; return true;\n      }\n      if (suffix(RV,\"ires\")) {\n        CT = removeSuffix(CT,\"ires\") ; return true;\n      }\n      if (suffix(RV,\"ados\")) {\n        CT = removeSuffix(CT,\"ados\") ; return true;\n      }\n      if (suffix(RV,\"idos\")) {\n        CT = removeSuffix(CT,\"idos\") ; return true;\n      }\n      if (suffix(RV,\"amos\")) {\n        CT = removeSuffix(CT,\"amos\") ; return true;\n      }\n      if (suffix(RV,\"emos\")) {\n        CT = removeSuffix(CT,\"emos\") ; return true;\n      }\n      if (suffix(RV,\"imos\")) {\n        CT = removeSuffix(CT,\"imos\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"ieis\")) {\n        CT = removeSuffix(CT,\"ieis\") ; return true;\n      }\n    }\n\n    // suffix length = 3\n    if (RV.length() >= 3) {\n      if (suffix(RV,\"ada\")) {\n        CT = removeSuffix(CT,\"ada\") ; return true;\n      }\n      if (suffix(RV,\"ida\")) {\n        CT = removeSuffix(CT,\"ida\") ; return true;\n      }\n      if (suffix(RV,\"ara\")) {\n        CT = removeSuffix(CT,\"ara\") ; return true;\n      }\n      if (suffix(RV,\"era\")) {\n        CT = removeSuffix(CT,\"era\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ava\") ; return true;\n      }\n      if (suffix(RV,\"iam\")) {\n        CT = removeSuffix(CT,\"iam\") ; return true;\n      }\n      if (suffix(RV,\"ado\")) {\n        CT = removeSuffix(CT,\"ado\") ; return true;\n      }\n      if (suffix(RV,\"ido\")) {\n        CT = removeSuffix(CT,\"ido\") ; return true;\n      }\n      if (suffix(RV,\"ias\")) {\n        CT = removeSuffix(CT,\"ias\") ; return true;\n      }\n      if (suffix(RV,\"ais\")) {\n        CT = removeSuffix(CT,\"ais\") ; return true;\n      }\n      if (suffix(RV,\"eis\")) {\n        CT = removeSuffix(CT,\"eis\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ira\") ; return true;\n      }\n      if (suffix(RV,\"ear\")) {\n        CT = removeSuffix(CT,\"ear\") ; return true;\n      }\n    }\n\n    // suffix length = 2\n    if (RV.length() >= 2) {\n      if (suffix(RV,\"ia\")) {\n        CT = removeSuffix(CT,\"ia\") ; return true;\n      }\n      if (suffix(RV,\"ei\")) {\n        CT = removeSuffix(CT,\"ei\") ; return true;\n      }\n      if (suffix(RV,\"am\")) {\n        CT = removeSuffix(CT,\"am\") ; return true;\n      }\n      if (suffix(RV,\"em\")) {\n        CT = removeSuffix(CT,\"em\") ; return true;\n      }\n      if (suffix(RV,\"ar\")) {\n        CT = removeSuffix(CT,\"ar\") ; return true;\n      }\n      if (suffix(RV,\"er\")) {\n        CT = removeSuffix(CT,\"er\") ; return true;\n      }\n      if (suffix(RV,\"ir\")) {\n        CT = removeSuffix(CT,\"ir\") ; return true;\n      }\n      if (suffix(RV,\"as\")) {\n        CT = removeSuffix(CT,\"as\") ; return true;\n      }\n      if (suffix(RV,\"es\")) {\n        CT = removeSuffix(CT,\"es\") ; return true;\n      }\n      if (suffix(RV,\"is\")) {\n        CT = removeSuffix(CT,\"is\") ; return true;\n      }\n      if (suffix(RV,\"eu\")) {\n        CT = removeSuffix(CT,\"eu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"ou\")) {\n        CT = removeSuffix(CT,\"ou\") ; return true;\n      }\n    }\n\n    // no ending was removed by step2\n    return false ;\n  }\n\n","sourceOld":"\t/**\n\t * Verb suffixes.\n   *\n   * Search for the longest among the following suffixes in RV,\n   * and if found, delete.\n   *\n   * @return false if no ending was removed\n\t*/\n\tprivate boolean step2() {\n    if (RV == null) return false ;\n\n    // suffix lenght = 7\n    if (RV.length() >= 7) {\n      if (suffix(RV,\"issemos\")) {\n        CT = removeSuffix(CT,\"issemos\") ; return true;\n      }\n      if (suffix(RV,\"essemos\")) {\n        CT = removeSuffix(CT,\"essemos\") ; return true;\n      }\n      if (suffix(RV,\"assemos\")) {\n        CT = removeSuffix(CT,\"assemos\") ; return true;\n      }\n      if (suffix(RV,\"ariamos\")) {\n        CT = removeSuffix(CT,\"ariamos\") ; return true;\n      }\n      if (suffix(RV,\"eriamos\")) {\n        CT = removeSuffix(CT,\"eriamos\") ; return true;\n      }\n      if (suffix(RV,\"iriamos\")) {\n        CT = removeSuffix(CT,\"iriamos\") ; return true;\n      }\n    }\n\n    // suffix lenght = 6\n    if (RV.length() >= 6) {\n      if (suffix(RV,\"iremos\")) {\n        CT = removeSuffix(CT,\"iremos\") ; return true;\n      }\n      if (suffix(RV,\"eremos\")) {\n        CT = removeSuffix(CT,\"eremos\") ; return true;\n      }\n      if (suffix(RV,\"aremos\")) {\n        CT = removeSuffix(CT,\"aremos\") ; return true;\n      }\n      if (suffix(RV,\"avamos\")) {\n        CT = removeSuffix(CT,\"avamos\") ; return true;\n      }\n      if (suffix(RV,\"iramos\")) {\n        CT = removeSuffix(CT,\"iramos\") ; return true;\n      }\n      if (suffix(RV,\"eramos\")) {\n        CT = removeSuffix(CT,\"eramos\") ; return true;\n      }\n      if (suffix(RV,\"aramos\")) {\n        CT = removeSuffix(CT,\"aramos\") ; return true;\n      }\n      if (suffix(RV,\"asseis\")) {\n        CT = removeSuffix(CT,\"asseis\") ; return true;\n      }\n      if (suffix(RV,\"esseis\")) {\n        CT = removeSuffix(CT,\"esseis\") ; return true;\n      }\n      if (suffix(RV,\"isseis\")) {\n        CT = removeSuffix(CT,\"isseis\") ; return true;\n      }\n      if (suffix(RV,\"arieis\")) {\n        CT = removeSuffix(CT,\"arieis\") ; return true;\n      }\n      if (suffix(RV,\"erieis\")) {\n        CT = removeSuffix(CT,\"erieis\") ; return true;\n      }\n      if (suffix(RV,\"irieis\")) {\n        CT = removeSuffix(CT,\"irieis\") ; return true;\n      }\n    }\n\n\n    // suffix lenght = 5\n    if (RV.length() >= 5) {\n      if (suffix(RV,\"irmos\")) {\n        CT = removeSuffix(CT,\"irmos\") ; return true;\n      }\n      if (suffix(RV,\"iamos\")) {\n        CT = removeSuffix(CT,\"iamos\") ; return true;\n      }\n      if (suffix(RV,\"armos\")) {\n        CT = removeSuffix(CT,\"armos\") ; return true;\n      }\n      if (suffix(RV,\"ermos\")) {\n        CT = removeSuffix(CT,\"ermos\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"ereis\")) {\n        CT = removeSuffix(CT,\"ereis\") ; return true;\n      }\n      if (suffix(RV,\"ireis\")) {\n        CT = removeSuffix(CT,\"ireis\") ; return true;\n      }\n      if (suffix(RV,\"asses\")) {\n        CT = removeSuffix(CT,\"asses\") ; return true;\n      }\n      if (suffix(RV,\"esses\")) {\n        CT = removeSuffix(CT,\"esses\") ; return true;\n      }\n      if (suffix(RV,\"isses\")) {\n        CT = removeSuffix(CT,\"isses\") ; return true;\n      }\n      if (suffix(RV,\"astes\")) {\n        CT = removeSuffix(CT,\"astes\") ; return true;\n      }\n      if (suffix(RV,\"assem\")) {\n        CT = removeSuffix(CT,\"assem\") ; return true;\n      }\n      if (suffix(RV,\"essem\")) {\n        CT = removeSuffix(CT,\"essem\") ; return true;\n      }\n      if (suffix(RV,\"issem\")) {\n        CT = removeSuffix(CT,\"issem\") ; return true;\n      }\n      if (suffix(RV,\"ardes\")) {\n        CT = removeSuffix(CT,\"ardes\") ; return true;\n      }\n      if (suffix(RV,\"erdes\")) {\n        CT = removeSuffix(CT,\"erdes\") ; return true;\n      }\n      if (suffix(RV,\"irdes\")) {\n        CT = removeSuffix(CT,\"irdes\") ; return true;\n      }\n      if (suffix(RV,\"ariam\")) {\n        CT = removeSuffix(CT,\"ariam\") ; return true;\n      }\n      if (suffix(RV,\"eriam\")) {\n        CT = removeSuffix(CT,\"eriam\") ; return true;\n      }\n      if (suffix(RV,\"iriam\")) {\n        CT = removeSuffix(CT,\"iriam\") ; return true;\n      }\n      if (suffix(RV,\"arias\")) {\n        CT = removeSuffix(CT,\"arias\") ; return true;\n      }\n      if (suffix(RV,\"erias\")) {\n        CT = removeSuffix(CT,\"erias\") ; return true;\n      }\n      if (suffix(RV,\"irias\")) {\n        CT = removeSuffix(CT,\"irias\") ; return true;\n      }\n      if (suffix(RV,\"estes\")) {\n        CT = removeSuffix(CT,\"estes\") ; return true;\n      }\n      if (suffix(RV,\"istes\")) {\n        CT = removeSuffix(CT,\"istes\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"aveis\")) {\n        CT = removeSuffix(CT,\"aveis\") ; return true;\n      }\n    }\n\n    // suffix lenght = 4\n    if (RV.length() >= 4) {\n      if (suffix(RV,\"aria\")) {\n        CT = removeSuffix(CT,\"aria\") ; return true;\n      }\n      if (suffix(RV,\"eria\")) {\n        CT = removeSuffix(CT,\"eria\") ; return true;\n      }\n      if (suffix(RV,\"iria\")) {\n        CT = removeSuffix(CT,\"iria\") ; return true;\n      }\n      if (suffix(RV,\"asse\")) {\n        CT = removeSuffix(CT,\"asse\") ; return true;\n      }\n      if (suffix(RV,\"esse\")) {\n        CT = removeSuffix(CT,\"esse\") ; return true;\n      }\n      if (suffix(RV,\"isse\")) {\n        CT = removeSuffix(CT,\"isse\") ; return true;\n      }\n      if (suffix(RV,\"aste\")) {\n        CT = removeSuffix(CT,\"aste\") ; return true;\n      }\n      if (suffix(RV,\"este\")) {\n        CT = removeSuffix(CT,\"este\") ; return true;\n      }\n      if (suffix(RV,\"iste\")) {\n        CT = removeSuffix(CT,\"iste\") ; return true;\n      }\n      if (suffix(RV,\"arei\")) {\n        CT = removeSuffix(CT,\"arei\") ; return true;\n      }\n      if (suffix(RV,\"erei\")) {\n        CT = removeSuffix(CT,\"erei\") ; return true;\n      }\n      if (suffix(RV,\"irei\")) {\n        CT = removeSuffix(CT,\"irei\") ; return true;\n      }\n      if (suffix(RV,\"aram\")) {\n        CT = removeSuffix(CT,\"aram\") ; return true;\n      }\n      if (suffix(RV,\"eram\")) {\n        CT = removeSuffix(CT,\"eram\") ; return true;\n      }\n      if (suffix(RV,\"iram\")) {\n        CT = removeSuffix(CT,\"iram\") ; return true;\n      }\n      if (suffix(RV,\"avam\")) {\n        CT = removeSuffix(CT,\"avam\") ; return true;\n      }\n      if (suffix(RV,\"arem\")) {\n        CT = removeSuffix(CT,\"arem\") ; return true;\n      }\n      if (suffix(RV,\"erem\")) {\n        CT = removeSuffix(CT,\"erem\") ; return true;\n      }\n      if (suffix(RV,\"irem\")) {\n        CT = removeSuffix(CT,\"irem\") ; return true;\n      }\n      if (suffix(RV,\"ando\")) {\n        CT = removeSuffix(CT,\"ando\") ; return true;\n      }\n      if (suffix(RV,\"endo\")) {\n        CT = removeSuffix(CT,\"endo\") ; return true;\n      }\n      if (suffix(RV,\"indo\")) {\n        CT = removeSuffix(CT,\"indo\") ; return true;\n      }\n      if (suffix(RV,\"arao\")) {\n        CT = removeSuffix(CT,\"arao\") ; return true;\n      }\n      if (suffix(RV,\"erao\")) {\n        CT = removeSuffix(CT,\"erao\") ; return true;\n      }\n      if (suffix(RV,\"irao\")) {\n        CT = removeSuffix(CT,\"irao\") ; return true;\n      }\n      if (suffix(RV,\"adas\")) {\n        CT = removeSuffix(CT,\"adas\") ; return true;\n      }\n      if (suffix(RV,\"idas\")) {\n        CT = removeSuffix(CT,\"idas\") ; return true;\n      }\n      if (suffix(RV,\"aras\")) {\n        CT = removeSuffix(CT,\"aras\") ; return true;\n      }\n      if (suffix(RV,\"eras\")) {\n        CT = removeSuffix(CT,\"eras\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"avas\")) {\n        CT = removeSuffix(CT,\"avas\") ; return true;\n      }\n      if (suffix(RV,\"ares\")) {\n        CT = removeSuffix(CT,\"ares\") ; return true;\n      }\n      if (suffix(RV,\"eres\")) {\n        CT = removeSuffix(CT,\"eres\") ; return true;\n      }\n      if (suffix(RV,\"ires\")) {\n        CT = removeSuffix(CT,\"ires\") ; return true;\n      }\n      if (suffix(RV,\"ados\")) {\n        CT = removeSuffix(CT,\"ados\") ; return true;\n      }\n      if (suffix(RV,\"idos\")) {\n        CT = removeSuffix(CT,\"idos\") ; return true;\n      }\n      if (suffix(RV,\"amos\")) {\n        CT = removeSuffix(CT,\"amos\") ; return true;\n      }\n      if (suffix(RV,\"emos\")) {\n        CT = removeSuffix(CT,\"emos\") ; return true;\n      }\n      if (suffix(RV,\"imos\")) {\n        CT = removeSuffix(CT,\"imos\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"ieis\")) {\n        CT = removeSuffix(CT,\"ieis\") ; return true;\n      }\n    }\n\n    // suffix lenght = 3\n    if (RV.length() >= 3) {\n      if (suffix(RV,\"ada\")) {\n        CT = removeSuffix(CT,\"ada\") ; return true;\n      }\n      if (suffix(RV,\"ida\")) {\n        CT = removeSuffix(CT,\"ida\") ; return true;\n      }\n      if (suffix(RV,\"ara\")) {\n        CT = removeSuffix(CT,\"ara\") ; return true;\n      }\n      if (suffix(RV,\"era\")) {\n        CT = removeSuffix(CT,\"era\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ava\") ; return true;\n      }\n      if (suffix(RV,\"iam\")) {\n        CT = removeSuffix(CT,\"iam\") ; return true;\n      }\n      if (suffix(RV,\"ado\")) {\n        CT = removeSuffix(CT,\"ado\") ; return true;\n      }\n      if (suffix(RV,\"ido\")) {\n        CT = removeSuffix(CT,\"ido\") ; return true;\n      }\n      if (suffix(RV,\"ias\")) {\n        CT = removeSuffix(CT,\"ias\") ; return true;\n      }\n      if (suffix(RV,\"ais\")) {\n        CT = removeSuffix(CT,\"ais\") ; return true;\n      }\n      if (suffix(RV,\"eis\")) {\n        CT = removeSuffix(CT,\"eis\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ira\") ; return true;\n      }\n      if (suffix(RV,\"ear\")) {\n        CT = removeSuffix(CT,\"ear\") ; return true;\n      }\n    }\n\n    // suffix lenght = 2\n    if (RV.length() >= 2) {\n      if (suffix(RV,\"ia\")) {\n        CT = removeSuffix(CT,\"ia\") ; return true;\n      }\n      if (suffix(RV,\"ei\")) {\n        CT = removeSuffix(CT,\"ei\") ; return true;\n      }\n      if (suffix(RV,\"am\")) {\n        CT = removeSuffix(CT,\"am\") ; return true;\n      }\n      if (suffix(RV,\"em\")) {\n        CT = removeSuffix(CT,\"em\") ; return true;\n      }\n      if (suffix(RV,\"ar\")) {\n        CT = removeSuffix(CT,\"ar\") ; return true;\n      }\n      if (suffix(RV,\"er\")) {\n        CT = removeSuffix(CT,\"er\") ; return true;\n      }\n      if (suffix(RV,\"ir\")) {\n        CT = removeSuffix(CT,\"ir\") ; return true;\n      }\n      if (suffix(RV,\"as\")) {\n        CT = removeSuffix(CT,\"as\") ; return true;\n      }\n      if (suffix(RV,\"es\")) {\n        CT = removeSuffix(CT,\"es\") ; return true;\n      }\n      if (suffix(RV,\"is\")) {\n        CT = removeSuffix(CT,\"is\") ; return true;\n      }\n      if (suffix(RV,\"eu\")) {\n        CT = removeSuffix(CT,\"eu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"ou\")) {\n        CT = removeSuffix(CT,\"ou\") ; return true;\n      }\n    }\n\n    // no ending was removed by step2\n    return false ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#step2().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#step2().mjava","sourceNew":"\t/**\n\t * Verb suffixes.\n   *\n   * Search for the longest among the following suffixes in RV,\n   * and if found, delete.\n   *\n   * @return false if no ending was removed\n\t*/\n\tprivate boolean step2() {\n    if (RV == null) return false ;\n\n    // suffix lenght = 7\n    if (RV.length() >= 7) {\n      if (suffix(RV,\"issemos\")) {\n        CT = removeSuffix(CT,\"issemos\") ; return true;\n      }\n      if (suffix(RV,\"essemos\")) {\n        CT = removeSuffix(CT,\"essemos\") ; return true;\n      }\n      if (suffix(RV,\"assemos\")) {\n        CT = removeSuffix(CT,\"assemos\") ; return true;\n      }\n      if (suffix(RV,\"ariamos\")) {\n        CT = removeSuffix(CT,\"ariamos\") ; return true;\n      }\n      if (suffix(RV,\"eriamos\")) {\n        CT = removeSuffix(CT,\"eriamos\") ; return true;\n      }\n      if (suffix(RV,\"iriamos\")) {\n        CT = removeSuffix(CT,\"iriamos\") ; return true;\n      }\n    }\n\n    // suffix length = 6\n    if (RV.length() >= 6) {\n      if (suffix(RV,\"iremos\")) {\n        CT = removeSuffix(CT,\"iremos\") ; return true;\n      }\n      if (suffix(RV,\"eremos\")) {\n        CT = removeSuffix(CT,\"eremos\") ; return true;\n      }\n      if (suffix(RV,\"aremos\")) {\n        CT = removeSuffix(CT,\"aremos\") ; return true;\n      }\n      if (suffix(RV,\"avamos\")) {\n        CT = removeSuffix(CT,\"avamos\") ; return true;\n      }\n      if (suffix(RV,\"iramos\")) {\n        CT = removeSuffix(CT,\"iramos\") ; return true;\n      }\n      if (suffix(RV,\"eramos\")) {\n        CT = removeSuffix(CT,\"eramos\") ; return true;\n      }\n      if (suffix(RV,\"aramos\")) {\n        CT = removeSuffix(CT,\"aramos\") ; return true;\n      }\n      if (suffix(RV,\"asseis\")) {\n        CT = removeSuffix(CT,\"asseis\") ; return true;\n      }\n      if (suffix(RV,\"esseis\")) {\n        CT = removeSuffix(CT,\"esseis\") ; return true;\n      }\n      if (suffix(RV,\"isseis\")) {\n        CT = removeSuffix(CT,\"isseis\") ; return true;\n      }\n      if (suffix(RV,\"arieis\")) {\n        CT = removeSuffix(CT,\"arieis\") ; return true;\n      }\n      if (suffix(RV,\"erieis\")) {\n        CT = removeSuffix(CT,\"erieis\") ; return true;\n      }\n      if (suffix(RV,\"irieis\")) {\n        CT = removeSuffix(CT,\"irieis\") ; return true;\n      }\n    }\n\n\n    // suffix length = 5\n    if (RV.length() >= 5) {\n      if (suffix(RV,\"irmos\")) {\n        CT = removeSuffix(CT,\"irmos\") ; return true;\n      }\n      if (suffix(RV,\"iamos\")) {\n        CT = removeSuffix(CT,\"iamos\") ; return true;\n      }\n      if (suffix(RV,\"armos\")) {\n        CT = removeSuffix(CT,\"armos\") ; return true;\n      }\n      if (suffix(RV,\"ermos\")) {\n        CT = removeSuffix(CT,\"ermos\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"ereis\")) {\n        CT = removeSuffix(CT,\"ereis\") ; return true;\n      }\n      if (suffix(RV,\"ireis\")) {\n        CT = removeSuffix(CT,\"ireis\") ; return true;\n      }\n      if (suffix(RV,\"asses\")) {\n        CT = removeSuffix(CT,\"asses\") ; return true;\n      }\n      if (suffix(RV,\"esses\")) {\n        CT = removeSuffix(CT,\"esses\") ; return true;\n      }\n      if (suffix(RV,\"isses\")) {\n        CT = removeSuffix(CT,\"isses\") ; return true;\n      }\n      if (suffix(RV,\"astes\")) {\n        CT = removeSuffix(CT,\"astes\") ; return true;\n      }\n      if (suffix(RV,\"assem\")) {\n        CT = removeSuffix(CT,\"assem\") ; return true;\n      }\n      if (suffix(RV,\"essem\")) {\n        CT = removeSuffix(CT,\"essem\") ; return true;\n      }\n      if (suffix(RV,\"issem\")) {\n        CT = removeSuffix(CT,\"issem\") ; return true;\n      }\n      if (suffix(RV,\"ardes\")) {\n        CT = removeSuffix(CT,\"ardes\") ; return true;\n      }\n      if (suffix(RV,\"erdes\")) {\n        CT = removeSuffix(CT,\"erdes\") ; return true;\n      }\n      if (suffix(RV,\"irdes\")) {\n        CT = removeSuffix(CT,\"irdes\") ; return true;\n      }\n      if (suffix(RV,\"ariam\")) {\n        CT = removeSuffix(CT,\"ariam\") ; return true;\n      }\n      if (suffix(RV,\"eriam\")) {\n        CT = removeSuffix(CT,\"eriam\") ; return true;\n      }\n      if (suffix(RV,\"iriam\")) {\n        CT = removeSuffix(CT,\"iriam\") ; return true;\n      }\n      if (suffix(RV,\"arias\")) {\n        CT = removeSuffix(CT,\"arias\") ; return true;\n      }\n      if (suffix(RV,\"erias\")) {\n        CT = removeSuffix(CT,\"erias\") ; return true;\n      }\n      if (suffix(RV,\"irias\")) {\n        CT = removeSuffix(CT,\"irias\") ; return true;\n      }\n      if (suffix(RV,\"estes\")) {\n        CT = removeSuffix(CT,\"estes\") ; return true;\n      }\n      if (suffix(RV,\"istes\")) {\n        CT = removeSuffix(CT,\"istes\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"aveis\")) {\n        CT = removeSuffix(CT,\"aveis\") ; return true;\n      }\n    }\n\n    // suffix length = 4\n    if (RV.length() >= 4) {\n      if (suffix(RV,\"aria\")) {\n        CT = removeSuffix(CT,\"aria\") ; return true;\n      }\n      if (suffix(RV,\"eria\")) {\n        CT = removeSuffix(CT,\"eria\") ; return true;\n      }\n      if (suffix(RV,\"iria\")) {\n        CT = removeSuffix(CT,\"iria\") ; return true;\n      }\n      if (suffix(RV,\"asse\")) {\n        CT = removeSuffix(CT,\"asse\") ; return true;\n      }\n      if (suffix(RV,\"esse\")) {\n        CT = removeSuffix(CT,\"esse\") ; return true;\n      }\n      if (suffix(RV,\"isse\")) {\n        CT = removeSuffix(CT,\"isse\") ; return true;\n      }\n      if (suffix(RV,\"aste\")) {\n        CT = removeSuffix(CT,\"aste\") ; return true;\n      }\n      if (suffix(RV,\"este\")) {\n        CT = removeSuffix(CT,\"este\") ; return true;\n      }\n      if (suffix(RV,\"iste\")) {\n        CT = removeSuffix(CT,\"iste\") ; return true;\n      }\n      if (suffix(RV,\"arei\")) {\n        CT = removeSuffix(CT,\"arei\") ; return true;\n      }\n      if (suffix(RV,\"erei\")) {\n        CT = removeSuffix(CT,\"erei\") ; return true;\n      }\n      if (suffix(RV,\"irei\")) {\n        CT = removeSuffix(CT,\"irei\") ; return true;\n      }\n      if (suffix(RV,\"aram\")) {\n        CT = removeSuffix(CT,\"aram\") ; return true;\n      }\n      if (suffix(RV,\"eram\")) {\n        CT = removeSuffix(CT,\"eram\") ; return true;\n      }\n      if (suffix(RV,\"iram\")) {\n        CT = removeSuffix(CT,\"iram\") ; return true;\n      }\n      if (suffix(RV,\"avam\")) {\n        CT = removeSuffix(CT,\"avam\") ; return true;\n      }\n      if (suffix(RV,\"arem\")) {\n        CT = removeSuffix(CT,\"arem\") ; return true;\n      }\n      if (suffix(RV,\"erem\")) {\n        CT = removeSuffix(CT,\"erem\") ; return true;\n      }\n      if (suffix(RV,\"irem\")) {\n        CT = removeSuffix(CT,\"irem\") ; return true;\n      }\n      if (suffix(RV,\"ando\")) {\n        CT = removeSuffix(CT,\"ando\") ; return true;\n      }\n      if (suffix(RV,\"endo\")) {\n        CT = removeSuffix(CT,\"endo\") ; return true;\n      }\n      if (suffix(RV,\"indo\")) {\n        CT = removeSuffix(CT,\"indo\") ; return true;\n      }\n      if (suffix(RV,\"arao\")) {\n        CT = removeSuffix(CT,\"arao\") ; return true;\n      }\n      if (suffix(RV,\"erao\")) {\n        CT = removeSuffix(CT,\"erao\") ; return true;\n      }\n      if (suffix(RV,\"irao\")) {\n        CT = removeSuffix(CT,\"irao\") ; return true;\n      }\n      if (suffix(RV,\"adas\")) {\n        CT = removeSuffix(CT,\"adas\") ; return true;\n      }\n      if (suffix(RV,\"idas\")) {\n        CT = removeSuffix(CT,\"idas\") ; return true;\n      }\n      if (suffix(RV,\"aras\")) {\n        CT = removeSuffix(CT,\"aras\") ; return true;\n      }\n      if (suffix(RV,\"eras\")) {\n        CT = removeSuffix(CT,\"eras\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"avas\")) {\n        CT = removeSuffix(CT,\"avas\") ; return true;\n      }\n      if (suffix(RV,\"ares\")) {\n        CT = removeSuffix(CT,\"ares\") ; return true;\n      }\n      if (suffix(RV,\"eres\")) {\n        CT = removeSuffix(CT,\"eres\") ; return true;\n      }\n      if (suffix(RV,\"ires\")) {\n        CT = removeSuffix(CT,\"ires\") ; return true;\n      }\n      if (suffix(RV,\"ados\")) {\n        CT = removeSuffix(CT,\"ados\") ; return true;\n      }\n      if (suffix(RV,\"idos\")) {\n        CT = removeSuffix(CT,\"idos\") ; return true;\n      }\n      if (suffix(RV,\"amos\")) {\n        CT = removeSuffix(CT,\"amos\") ; return true;\n      }\n      if (suffix(RV,\"emos\")) {\n        CT = removeSuffix(CT,\"emos\") ; return true;\n      }\n      if (suffix(RV,\"imos\")) {\n        CT = removeSuffix(CT,\"imos\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"ieis\")) {\n        CT = removeSuffix(CT,\"ieis\") ; return true;\n      }\n    }\n\n    // suffix length = 3\n    if (RV.length() >= 3) {\n      if (suffix(RV,\"ada\")) {\n        CT = removeSuffix(CT,\"ada\") ; return true;\n      }\n      if (suffix(RV,\"ida\")) {\n        CT = removeSuffix(CT,\"ida\") ; return true;\n      }\n      if (suffix(RV,\"ara\")) {\n        CT = removeSuffix(CT,\"ara\") ; return true;\n      }\n      if (suffix(RV,\"era\")) {\n        CT = removeSuffix(CT,\"era\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ava\") ; return true;\n      }\n      if (suffix(RV,\"iam\")) {\n        CT = removeSuffix(CT,\"iam\") ; return true;\n      }\n      if (suffix(RV,\"ado\")) {\n        CT = removeSuffix(CT,\"ado\") ; return true;\n      }\n      if (suffix(RV,\"ido\")) {\n        CT = removeSuffix(CT,\"ido\") ; return true;\n      }\n      if (suffix(RV,\"ias\")) {\n        CT = removeSuffix(CT,\"ias\") ; return true;\n      }\n      if (suffix(RV,\"ais\")) {\n        CT = removeSuffix(CT,\"ais\") ; return true;\n      }\n      if (suffix(RV,\"eis\")) {\n        CT = removeSuffix(CT,\"eis\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ira\") ; return true;\n      }\n      if (suffix(RV,\"ear\")) {\n        CT = removeSuffix(CT,\"ear\") ; return true;\n      }\n    }\n\n    // suffix length = 2\n    if (RV.length() >= 2) {\n      if (suffix(RV,\"ia\")) {\n        CT = removeSuffix(CT,\"ia\") ; return true;\n      }\n      if (suffix(RV,\"ei\")) {\n        CT = removeSuffix(CT,\"ei\") ; return true;\n      }\n      if (suffix(RV,\"am\")) {\n        CT = removeSuffix(CT,\"am\") ; return true;\n      }\n      if (suffix(RV,\"em\")) {\n        CT = removeSuffix(CT,\"em\") ; return true;\n      }\n      if (suffix(RV,\"ar\")) {\n        CT = removeSuffix(CT,\"ar\") ; return true;\n      }\n      if (suffix(RV,\"er\")) {\n        CT = removeSuffix(CT,\"er\") ; return true;\n      }\n      if (suffix(RV,\"ir\")) {\n        CT = removeSuffix(CT,\"ir\") ; return true;\n      }\n      if (suffix(RV,\"as\")) {\n        CT = removeSuffix(CT,\"as\") ; return true;\n      }\n      if (suffix(RV,\"es\")) {\n        CT = removeSuffix(CT,\"es\") ; return true;\n      }\n      if (suffix(RV,\"is\")) {\n        CT = removeSuffix(CT,\"is\") ; return true;\n      }\n      if (suffix(RV,\"eu\")) {\n        CT = removeSuffix(CT,\"eu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"ou\")) {\n        CT = removeSuffix(CT,\"ou\") ; return true;\n      }\n    }\n\n    // no ending was removed by step2\n    return false ;\n  }\n\n","sourceOld":"\t/**\n\t * Verb suffixes.\n   *\n   * Search for the longest among the following suffixes in RV,\n   * and if found, delete.\n   *\n   * @return false if no ending was removed\n\t*/\n\tprivate boolean step2() {\n    if (RV == null) return false ;\n\n    // suffix lenght = 7\n    if (RV.length() >= 7) {\n      if (suffix(RV,\"issemos\")) {\n        CT = removeSuffix(CT,\"issemos\") ; return true;\n      }\n      if (suffix(RV,\"essemos\")) {\n        CT = removeSuffix(CT,\"essemos\") ; return true;\n      }\n      if (suffix(RV,\"assemos\")) {\n        CT = removeSuffix(CT,\"assemos\") ; return true;\n      }\n      if (suffix(RV,\"ariamos\")) {\n        CT = removeSuffix(CT,\"ariamos\") ; return true;\n      }\n      if (suffix(RV,\"eriamos\")) {\n        CT = removeSuffix(CT,\"eriamos\") ; return true;\n      }\n      if (suffix(RV,\"iriamos\")) {\n        CT = removeSuffix(CT,\"iriamos\") ; return true;\n      }\n    }\n\n    // suffix length = 6\n    if (RV.length() >= 6) {\n      if (suffix(RV,\"iremos\")) {\n        CT = removeSuffix(CT,\"iremos\") ; return true;\n      }\n      if (suffix(RV,\"eremos\")) {\n        CT = removeSuffix(CT,\"eremos\") ; return true;\n      }\n      if (suffix(RV,\"aremos\")) {\n        CT = removeSuffix(CT,\"aremos\") ; return true;\n      }\n      if (suffix(RV,\"avamos\")) {\n        CT = removeSuffix(CT,\"avamos\") ; return true;\n      }\n      if (suffix(RV,\"iramos\")) {\n        CT = removeSuffix(CT,\"iramos\") ; return true;\n      }\n      if (suffix(RV,\"eramos\")) {\n        CT = removeSuffix(CT,\"eramos\") ; return true;\n      }\n      if (suffix(RV,\"aramos\")) {\n        CT = removeSuffix(CT,\"aramos\") ; return true;\n      }\n      if (suffix(RV,\"asseis\")) {\n        CT = removeSuffix(CT,\"asseis\") ; return true;\n      }\n      if (suffix(RV,\"esseis\")) {\n        CT = removeSuffix(CT,\"esseis\") ; return true;\n      }\n      if (suffix(RV,\"isseis\")) {\n        CT = removeSuffix(CT,\"isseis\") ; return true;\n      }\n      if (suffix(RV,\"arieis\")) {\n        CT = removeSuffix(CT,\"arieis\") ; return true;\n      }\n      if (suffix(RV,\"erieis\")) {\n        CT = removeSuffix(CT,\"erieis\") ; return true;\n      }\n      if (suffix(RV,\"irieis\")) {\n        CT = removeSuffix(CT,\"irieis\") ; return true;\n      }\n    }\n\n\n    // suffix length = 5\n    if (RV.length() >= 5) {\n      if (suffix(RV,\"irmos\")) {\n        CT = removeSuffix(CT,\"irmos\") ; return true;\n      }\n      if (suffix(RV,\"iamos\")) {\n        CT = removeSuffix(CT,\"iamos\") ; return true;\n      }\n      if (suffix(RV,\"armos\")) {\n        CT = removeSuffix(CT,\"armos\") ; return true;\n      }\n      if (suffix(RV,\"ermos\")) {\n        CT = removeSuffix(CT,\"ermos\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"ereis\")) {\n        CT = removeSuffix(CT,\"ereis\") ; return true;\n      }\n      if (suffix(RV,\"ireis\")) {\n        CT = removeSuffix(CT,\"ireis\") ; return true;\n      }\n      if (suffix(RV,\"asses\")) {\n        CT = removeSuffix(CT,\"asses\") ; return true;\n      }\n      if (suffix(RV,\"esses\")) {\n        CT = removeSuffix(CT,\"esses\") ; return true;\n      }\n      if (suffix(RV,\"isses\")) {\n        CT = removeSuffix(CT,\"isses\") ; return true;\n      }\n      if (suffix(RV,\"astes\")) {\n        CT = removeSuffix(CT,\"astes\") ; return true;\n      }\n      if (suffix(RV,\"assem\")) {\n        CT = removeSuffix(CT,\"assem\") ; return true;\n      }\n      if (suffix(RV,\"essem\")) {\n        CT = removeSuffix(CT,\"essem\") ; return true;\n      }\n      if (suffix(RV,\"issem\")) {\n        CT = removeSuffix(CT,\"issem\") ; return true;\n      }\n      if (suffix(RV,\"ardes\")) {\n        CT = removeSuffix(CT,\"ardes\") ; return true;\n      }\n      if (suffix(RV,\"erdes\")) {\n        CT = removeSuffix(CT,\"erdes\") ; return true;\n      }\n      if (suffix(RV,\"irdes\")) {\n        CT = removeSuffix(CT,\"irdes\") ; return true;\n      }\n      if (suffix(RV,\"ariam\")) {\n        CT = removeSuffix(CT,\"ariam\") ; return true;\n      }\n      if (suffix(RV,\"eriam\")) {\n        CT = removeSuffix(CT,\"eriam\") ; return true;\n      }\n      if (suffix(RV,\"iriam\")) {\n        CT = removeSuffix(CT,\"iriam\") ; return true;\n      }\n      if (suffix(RV,\"arias\")) {\n        CT = removeSuffix(CT,\"arias\") ; return true;\n      }\n      if (suffix(RV,\"erias\")) {\n        CT = removeSuffix(CT,\"erias\") ; return true;\n      }\n      if (suffix(RV,\"irias\")) {\n        CT = removeSuffix(CT,\"irias\") ; return true;\n      }\n      if (suffix(RV,\"estes\")) {\n        CT = removeSuffix(CT,\"estes\") ; return true;\n      }\n      if (suffix(RV,\"istes\")) {\n        CT = removeSuffix(CT,\"istes\") ; return true;\n      }\n      if (suffix(RV,\"areis\")) {\n        CT = removeSuffix(CT,\"areis\") ; return true;\n      }\n      if (suffix(RV,\"aveis\")) {\n        CT = removeSuffix(CT,\"aveis\") ; return true;\n      }\n    }\n\n    // suffix length = 4\n    if (RV.length() >= 4) {\n      if (suffix(RV,\"aria\")) {\n        CT = removeSuffix(CT,\"aria\") ; return true;\n      }\n      if (suffix(RV,\"eria\")) {\n        CT = removeSuffix(CT,\"eria\") ; return true;\n      }\n      if (suffix(RV,\"iria\")) {\n        CT = removeSuffix(CT,\"iria\") ; return true;\n      }\n      if (suffix(RV,\"asse\")) {\n        CT = removeSuffix(CT,\"asse\") ; return true;\n      }\n      if (suffix(RV,\"esse\")) {\n        CT = removeSuffix(CT,\"esse\") ; return true;\n      }\n      if (suffix(RV,\"isse\")) {\n        CT = removeSuffix(CT,\"isse\") ; return true;\n      }\n      if (suffix(RV,\"aste\")) {\n        CT = removeSuffix(CT,\"aste\") ; return true;\n      }\n      if (suffix(RV,\"este\")) {\n        CT = removeSuffix(CT,\"este\") ; return true;\n      }\n      if (suffix(RV,\"iste\")) {\n        CT = removeSuffix(CT,\"iste\") ; return true;\n      }\n      if (suffix(RV,\"arei\")) {\n        CT = removeSuffix(CT,\"arei\") ; return true;\n      }\n      if (suffix(RV,\"erei\")) {\n        CT = removeSuffix(CT,\"erei\") ; return true;\n      }\n      if (suffix(RV,\"irei\")) {\n        CT = removeSuffix(CT,\"irei\") ; return true;\n      }\n      if (suffix(RV,\"aram\")) {\n        CT = removeSuffix(CT,\"aram\") ; return true;\n      }\n      if (suffix(RV,\"eram\")) {\n        CT = removeSuffix(CT,\"eram\") ; return true;\n      }\n      if (suffix(RV,\"iram\")) {\n        CT = removeSuffix(CT,\"iram\") ; return true;\n      }\n      if (suffix(RV,\"avam\")) {\n        CT = removeSuffix(CT,\"avam\") ; return true;\n      }\n      if (suffix(RV,\"arem\")) {\n        CT = removeSuffix(CT,\"arem\") ; return true;\n      }\n      if (suffix(RV,\"erem\")) {\n        CT = removeSuffix(CT,\"erem\") ; return true;\n      }\n      if (suffix(RV,\"irem\")) {\n        CT = removeSuffix(CT,\"irem\") ; return true;\n      }\n      if (suffix(RV,\"ando\")) {\n        CT = removeSuffix(CT,\"ando\") ; return true;\n      }\n      if (suffix(RV,\"endo\")) {\n        CT = removeSuffix(CT,\"endo\") ; return true;\n      }\n      if (suffix(RV,\"indo\")) {\n        CT = removeSuffix(CT,\"indo\") ; return true;\n      }\n      if (suffix(RV,\"arao\")) {\n        CT = removeSuffix(CT,\"arao\") ; return true;\n      }\n      if (suffix(RV,\"erao\")) {\n        CT = removeSuffix(CT,\"erao\") ; return true;\n      }\n      if (suffix(RV,\"irao\")) {\n        CT = removeSuffix(CT,\"irao\") ; return true;\n      }\n      if (suffix(RV,\"adas\")) {\n        CT = removeSuffix(CT,\"adas\") ; return true;\n      }\n      if (suffix(RV,\"idas\")) {\n        CT = removeSuffix(CT,\"idas\") ; return true;\n      }\n      if (suffix(RV,\"aras\")) {\n        CT = removeSuffix(CT,\"aras\") ; return true;\n      }\n      if (suffix(RV,\"eras\")) {\n        CT = removeSuffix(CT,\"eras\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"avas\")) {\n        CT = removeSuffix(CT,\"avas\") ; return true;\n      }\n      if (suffix(RV,\"ares\")) {\n        CT = removeSuffix(CT,\"ares\") ; return true;\n      }\n      if (suffix(RV,\"eres\")) {\n        CT = removeSuffix(CT,\"eres\") ; return true;\n      }\n      if (suffix(RV,\"ires\")) {\n        CT = removeSuffix(CT,\"ires\") ; return true;\n      }\n      if (suffix(RV,\"ados\")) {\n        CT = removeSuffix(CT,\"ados\") ; return true;\n      }\n      if (suffix(RV,\"idos\")) {\n        CT = removeSuffix(CT,\"idos\") ; return true;\n      }\n      if (suffix(RV,\"amos\")) {\n        CT = removeSuffix(CT,\"amos\") ; return true;\n      }\n      if (suffix(RV,\"emos\")) {\n        CT = removeSuffix(CT,\"emos\") ; return true;\n      }\n      if (suffix(RV,\"imos\")) {\n        CT = removeSuffix(CT,\"imos\") ; return true;\n      }\n      if (suffix(RV,\"iras\")) {\n        CT = removeSuffix(CT,\"iras\") ; return true;\n      }\n      if (suffix(RV,\"ieis\")) {\n        CT = removeSuffix(CT,\"ieis\") ; return true;\n      }\n    }\n\n    // suffix length = 3\n    if (RV.length() >= 3) {\n      if (suffix(RV,\"ada\")) {\n        CT = removeSuffix(CT,\"ada\") ; return true;\n      }\n      if (suffix(RV,\"ida\")) {\n        CT = removeSuffix(CT,\"ida\") ; return true;\n      }\n      if (suffix(RV,\"ara\")) {\n        CT = removeSuffix(CT,\"ara\") ; return true;\n      }\n      if (suffix(RV,\"era\")) {\n        CT = removeSuffix(CT,\"era\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ava\") ; return true;\n      }\n      if (suffix(RV,\"iam\")) {\n        CT = removeSuffix(CT,\"iam\") ; return true;\n      }\n      if (suffix(RV,\"ado\")) {\n        CT = removeSuffix(CT,\"ado\") ; return true;\n      }\n      if (suffix(RV,\"ido\")) {\n        CT = removeSuffix(CT,\"ido\") ; return true;\n      }\n      if (suffix(RV,\"ias\")) {\n        CT = removeSuffix(CT,\"ias\") ; return true;\n      }\n      if (suffix(RV,\"ais\")) {\n        CT = removeSuffix(CT,\"ais\") ; return true;\n      }\n      if (suffix(RV,\"eis\")) {\n        CT = removeSuffix(CT,\"eis\") ; return true;\n      }\n      if (suffix(RV,\"ira\")) {\n        CT = removeSuffix(CT,\"ira\") ; return true;\n      }\n      if (suffix(RV,\"ear\")) {\n        CT = removeSuffix(CT,\"ear\") ; return true;\n      }\n    }\n\n    // suffix length = 2\n    if (RV.length() >= 2) {\n      if (suffix(RV,\"ia\")) {\n        CT = removeSuffix(CT,\"ia\") ; return true;\n      }\n      if (suffix(RV,\"ei\")) {\n        CT = removeSuffix(CT,\"ei\") ; return true;\n      }\n      if (suffix(RV,\"am\")) {\n        CT = removeSuffix(CT,\"am\") ; return true;\n      }\n      if (suffix(RV,\"em\")) {\n        CT = removeSuffix(CT,\"em\") ; return true;\n      }\n      if (suffix(RV,\"ar\")) {\n        CT = removeSuffix(CT,\"ar\") ; return true;\n      }\n      if (suffix(RV,\"er\")) {\n        CT = removeSuffix(CT,\"er\") ; return true;\n      }\n      if (suffix(RV,\"ir\")) {\n        CT = removeSuffix(CT,\"ir\") ; return true;\n      }\n      if (suffix(RV,\"as\")) {\n        CT = removeSuffix(CT,\"as\") ; return true;\n      }\n      if (suffix(RV,\"es\")) {\n        CT = removeSuffix(CT,\"es\") ; return true;\n      }\n      if (suffix(RV,\"is\")) {\n        CT = removeSuffix(CT,\"is\") ; return true;\n      }\n      if (suffix(RV,\"eu\")) {\n        CT = removeSuffix(CT,\"eu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"iu\")) {\n        CT = removeSuffix(CT,\"iu\") ; return true;\n      }\n      if (suffix(RV,\"ou\")) {\n        CT = removeSuffix(CT,\"ou\") ; return true;\n      }\n    }\n\n    // no ending was removed by step2\n    return false ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["add7d922e63099fbce8f0a1b31216df7ef5067f1"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}