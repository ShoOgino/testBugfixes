{"path":"lucene/backwards/src/java/org/apache/lucene/analysis/StopFilter#StopFilter(boolean,TokenStream,Set[#],boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/analysis/StopFilter#StopFilter(boolean,TokenStream,Set[#],boolean).mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/StopFilter#StopFilter(boolean,TokenStream,Set[#],boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input.\n   * If <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be directly used\n   * and <code>ignoreCase</code> will be ignored since <code>CharArraySet</code>\n   * directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet},\n   * a new CharArraySet will be constructed and <code>ignoreCase</code> will be\n   * used to specify the case sensitivity of that set.\n   *\n   * @param enablePositionIncrements true if token positions should record the removed stop words\n   * @param input Input TokenStream\n   * @param stopWords A Set of Strings or char[] or any other toString()-able set representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   */\n  public StopFilter(boolean enablePositionIncrements, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(input);\n    if (stopWords instanceof CharArraySet) {\n      this.stopWords = (CharArraySet)stopWords;\n    } else {\n      this.stopWords = new CharArraySet(stopWords.size(), ignoreCase);\n      this.stopWords.addAll(stopWords);\n    }\n    this.enablePositionIncrements = enablePositionIncrements;\n    termAtt = addAttribute(TermAttribute.class);\n    posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input.\n   * If <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be directly used\n   * and <code>ignoreCase</code> will be ignored since <code>CharArraySet</code>\n   * directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet},\n   * a new CharArraySet will be constructed and <code>ignoreCase</code> will be\n   * used to specify the case sensitivity of that set.\n   *\n   * @param enablePositionIncrements true if token positions should record the removed stop words\n   * @param input Input TokenStream\n   * @param stopWords A Set of Strings or char[] or any other toString()-able set representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   */\n  public StopFilter(boolean enablePositionIncrements, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(input);\n    if (stopWords instanceof CharArraySet) {\n      this.stopWords = (CharArraySet)stopWords;\n    } else {\n      this.stopWords = new CharArraySet(stopWords.size(), ignoreCase);\n      this.stopWords.addAll(stopWords);\n    }\n    this.enablePositionIncrements = enablePositionIncrements;\n    termAtt = addAttribute(TermAttribute.class);\n    posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/analysis/StopFilter#StopFilter(boolean,TokenStream,Set[#],boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Construct a token stream filtering the given input.\n   * If <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be directly used\n   * and <code>ignoreCase</code> will be ignored since <code>CharArraySet</code>\n   * directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet},\n   * a new CharArraySet will be constructed and <code>ignoreCase</code> will be\n   * used to specify the case sensitivity of that set.\n   *\n   * @param enablePositionIncrements true if token positions should record the removed stop words\n   * @param input Input TokenStream\n   * @param stopWords A Set of Strings or char[] or any other toString()-able set representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   */\n  public StopFilter(boolean enablePositionIncrements, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(input);\n    if (stopWords instanceof CharArraySet) {\n      this.stopWords = (CharArraySet)stopWords;\n    } else {\n      this.stopWords = new CharArraySet(stopWords.size(), ignoreCase);\n      this.stopWords.addAll(stopWords);\n    }\n    this.enablePositionIncrements = enablePositionIncrements;\n    termAtt = addAttribute(TermAttribute.class);\n    posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}