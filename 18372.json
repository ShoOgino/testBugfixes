{"path":"lucene/backwards/src/java/org/apache/lucene/search/function/FloatFieldSource#getCachedFieldValues(FieldCache,String,IndexReader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/function/FloatFieldSource#getCachedFieldValues(FieldCache,String,IndexReader).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/function/FloatFieldSource#getCachedFieldValues(FieldCache,String,IndexReader).mjava","sourceNew":"  /*(non-Javadoc) @see org.apache.lucene.search.function.FieldCacheSource#getCachedValues(org.apache.lucene.search.FieldCache, java.lang.String, org.apache.lucene.index.IndexReader) */\n  @Override\n  public DocValues getCachedFieldValues (FieldCache cache, String field, IndexReader reader) throws IOException {\n    final float[] arr = cache.getFloats(reader, field, parser);\n    return new DocValues() {\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#floatVal(int) */\n      @Override\n      public float floatVal(int doc) {\n        return arr[doc];      \n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#toString(int) */\n      @Override\n      public String toString(int doc) { \n        return  description() + '=' + arr[doc];  \n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#getInnerArray() */\n      @Override\n      Object getInnerArray() {\n        return arr;\n      }\n    };\n  }\n\n","sourceOld":"  /*(non-Javadoc) @see org.apache.lucene.search.function.FieldCacheSource#getCachedValues(org.apache.lucene.search.FieldCache, java.lang.String, org.apache.lucene.index.IndexReader) */\n  @Override\n  public DocValues getCachedFieldValues (FieldCache cache, String field, IndexReader reader) throws IOException {\n    final float[] arr = cache.getFloats(reader, field, parser);\n    return new DocValues() {\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#floatVal(int) */\n      @Override\n      public float floatVal(int doc) {\n        return arr[doc];      \n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#toString(int) */\n      @Override\n      public String toString(int doc) { \n        return  description() + '=' + arr[doc];  \n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#getInnerArray() */\n      @Override\n      Object getInnerArray() {\n        return arr;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/search/function/FloatFieldSource#getCachedFieldValues(FieldCache,String,IndexReader).mjava","sourceNew":null,"sourceOld":"  /*(non-Javadoc) @see org.apache.lucene.search.function.FieldCacheSource#getCachedValues(org.apache.lucene.search.FieldCache, java.lang.String, org.apache.lucene.index.IndexReader) */\n  @Override\n  public DocValues getCachedFieldValues (FieldCache cache, String field, IndexReader reader) throws IOException {\n    final float[] arr = cache.getFloats(reader, field, parser);\n    return new DocValues() {\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#floatVal(int) */\n      @Override\n      public float floatVal(int doc) {\n        return arr[doc];      \n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#toString(int) */\n      @Override\n      public String toString(int doc) { \n        return  description() + '=' + arr[doc];  \n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#getInnerArray() */\n      @Override\n      Object getInnerArray() {\n        return arr;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}