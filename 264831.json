{"path":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","commits":[{"id":"6c2782fe88d18fedf3ef67402c9cb5a41978a8c7","date":1328901155,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (upto < tokens.length) {\n      final Token token = tokens[upto++];     \n      // TODO: can we just capture/restoreState so\n      // we get all attrs...?\n      clearAttributes();      \n      termAtt.setEmpty();\n      termAtt.append(token.toString());\n      posIncrAtt.setPositionIncrement(token.getPositionIncrement());\n      offsetAtt.setOffset(token.startOffset(), token.endOffset());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0d7d7f85ff84edefe4ae2e2cf895d6760fc0bf4f","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1860eebb3dff901d87a6c00a35d93e4966155ad1","date":1331907824,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (upto < tokens.length) {\n      final Token token = tokens[upto++];     \n      // TODO: can we just capture/restoreState so\n      // we get all attrs...?\n      clearAttributes();      \n      termAtt.setEmpty();\n      termAtt.append(token.toString());\n      posIncrAtt.setPositionIncrement(token.getPositionIncrement());\n      offsetAtt.setOffset(token.startOffset(), token.endOffset());\n      payloadAtt.setPayload(token.getPayload());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (upto < tokens.length) {\n      final Token token = tokens[upto++];     \n      // TODO: can we just capture/restoreState so\n      // we get all attrs...?\n      clearAttributes();      \n      termAtt.setEmpty();\n      termAtt.append(token.toString());\n      posIncrAtt.setPositionIncrement(token.getPositionIncrement());\n      offsetAtt.setOffset(token.startOffset(), token.endOffset());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":["0d7d7f85ff84edefe4ae2e2cf895d6760fc0bf4f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6795c6bc2f5a6b2a2230cb20ff4744003faf7802","date":1333839972,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (upto < tokens.length) {\n      final Token token = tokens[upto++];     \n      // TODO: can we just capture/restoreState so\n      // we get all attrs...?\n      clearAttributes();      \n      termAtt.setEmpty();\n      termAtt.append(token.toString());\n      posIncrAtt.setPositionIncrement(token.getPositionIncrement());\n      posLengthAtt.setPositionLength(token.getPositionLength());\n      offsetAtt.setOffset(token.startOffset(), token.endOffset());\n      payloadAtt.setPayload(token.getPayload());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (upto < tokens.length) {\n      final Token token = tokens[upto++];     \n      // TODO: can we just capture/restoreState so\n      // we get all attrs...?\n      clearAttributes();      \n      termAtt.setEmpty();\n      termAtt.append(token.toString());\n      posIncrAtt.setPositionIncrement(token.getPositionIncrement());\n      offsetAtt.setOffset(token.startOffset(), token.endOffset());\n      payloadAtt.setPayload(token.getPayload());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":["0d7d7f85ff84edefe4ae2e2cf895d6760fc0bf4f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (upto < tokens.length) {\n      final Token token = tokens[upto++];     \n      // TODO: can we just capture/restoreState so\n      // we get all attrs...?\n      clearAttributes();      \n      termAtt.setEmpty();\n      termAtt.append(token.toString());\n      posIncrAtt.setPositionIncrement(token.getPositionIncrement());\n      posLengthAtt.setPositionLength(token.getPositionLength());\n      offsetAtt.setOffset(token.startOffset(), token.endOffset());\n      payloadAtt.setPayload(token.getPayload());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (upto < tokens.length) {\n      final Token token = tokens[upto++];     \n      // TODO: can we just capture/restoreState so\n      // we get all attrs...?\n      clearAttributes();      \n      termAtt.setEmpty();\n      termAtt.append(token.toString());\n      posIncrAtt.setPositionIncrement(token.getPositionIncrement());\n      posLengthAtt.setPositionLength(token.getPositionLength());\n      offsetAtt.setOffset(token.startOffset(), token.endOffset());\n      payloadAtt.setPayload(token.getPayload());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":["6c2782fe88d18fedf3ef67402c9cb5a41978a8c7"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (upto < tokens.length) {\n      final Token token = tokens[upto++];     \n      // TODO: can we just capture/restoreState so\n      // we get all attrs...?\n      clearAttributes();      \n      termAtt.setEmpty();\n      termAtt.append(token.toString());\n      posIncrAtt.setPositionIncrement(token.getPositionIncrement());\n      posLengthAtt.setPositionLength(token.getPositionLength());\n      offsetAtt.setOffset(token.startOffset(), token.endOffset());\n      payloadAtt.setPayload(token.getPayload());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (upto < tokens.length) {\n      final Token token = tokens[upto++];     \n      // TODO: can we just capture/restoreState so\n      // we get all attrs...?\n      clearAttributes();      \n      termAtt.setEmpty();\n      termAtt.append(token.toString());\n      posIncrAtt.setPositionIncrement(token.getPositionIncrement());\n      posLengthAtt.setPositionLength(token.getPositionLength());\n      offsetAtt.setOffset(token.startOffset(), token.endOffset());\n      payloadAtt.setPayload(token.getPayload());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d7d7f85ff84edefe4ae2e2cf895d6760fc0bf4f","date":1485881767,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (upto < tokens.length) {\n      clearAttributes();\n      // NOTE: this looks weird, casting offsetAtt to Token, but because we are using the Token class's AttributeFactory, all attributes are\n      // in fact backed by the Token class, so we just copy the current token into our Token:\n      tokens[upto++].copyTo((Token) offsetAtt);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (upto < tokens.length) {\n      final Token token = tokens[upto++];     \n      // TODO: can we just capture/restoreState so\n      // we get all attrs...?\n      clearAttributes();      \n      termAtt.setEmpty();\n      termAtt.append(token.toString());\n      posIncrAtt.setPositionIncrement(token.getPositionIncrement());\n      posLengthAtt.setPositionLength(token.getPositionLength());\n      offsetAtt.setOffset(token.startOffset(), token.endOffset());\n      payloadAtt.setPayload(token.getPayload());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":["6795c6bc2f5a6b2a2230cb20ff4744003faf7802","1860eebb3dff901d87a6c00a35d93e4966155ad1","6c2782fe88d18fedf3ef67402c9cb5a41978a8c7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (upto < tokens.length) {\n      clearAttributes();\n      // NOTE: this looks weird, casting offsetAtt to Token, but because we are using the Token class's AttributeFactory, all attributes are\n      // in fact backed by the Token class, so we just copy the current token into our Token:\n      tokens[upto++].copyTo((Token) offsetAtt);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (upto < tokens.length) {\n      final Token token = tokens[upto++];     \n      // TODO: can we just capture/restoreState so\n      // we get all attrs...?\n      clearAttributes();      \n      termAtt.setEmpty();\n      termAtt.append(token.toString());\n      posIncrAtt.setPositionIncrement(token.getPositionIncrement());\n      posLengthAtt.setPositionLength(token.getPositionLength());\n      offsetAtt.setOffset(token.startOffset(), token.endOffset());\n      payloadAtt.setPayload(token.getPayload());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d7d7f85ff84edefe4ae2e2cf895d6760fc0bf4f":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"1860eebb3dff901d87a6c00a35d93e4966155ad1":["6c2782fe88d18fedf3ef67402c9cb5a41978a8c7"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["6795c6bc2f5a6b2a2230cb20ff4744003faf7802","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","0d7d7f85ff84edefe4ae2e2cf895d6760fc0bf4f"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["6795c6bc2f5a6b2a2230cb20ff4744003faf7802"],"6795c6bc2f5a6b2a2230cb20ff4744003faf7802":["1860eebb3dff901d87a6c00a35d93e4966155ad1"],"6c2782fe88d18fedf3ef67402c9cb5a41978a8c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d7d7f85ff84edefe4ae2e2cf895d6760fc0bf4f"]},"commit2Childs":{"0d7d7f85ff84edefe4ae2e2cf895d6760fc0bf4f":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1860eebb3dff901d87a6c00a35d93e4966155ad1":["6795c6bc2f5a6b2a2230cb20ff4744003faf7802"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6c2782fe88d18fedf3ef67402c9cb5a41978a8c7"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["0d7d7f85ff84edefe4ae2e2cf895d6760fc0bf4f","fe33227f6805edab2036cbb80645cc4e2d1fa424","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"6c2782fe88d18fedf3ef67402c9cb5a41978a8c7":["1860eebb3dff901d87a6c00a35d93e4966155ad1"],"6795c6bc2f5a6b2a2230cb20ff4744003faf7802":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}