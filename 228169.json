{"path":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#open(Reader).mjava","commits":[{"id":"3e0e5dacb8158de7670b41d1a749a4b7487e6acf","date":1431331436,"type":0,"author":"Christian Moen","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#open(Reader).mjava","pathOld":"/dev/null","sourceNew":"  public static UserDictionary open(Reader reader) throws IOException {\n\n    BufferedReader br = new BufferedReader(reader);\n    String line = null;\n    List<String[]> featureEntries = new ArrayList<>();\n\n    // text, segmentation, readings, POS\n    while ((line = br.readLine()) != null) {\n      // Remove comments\n      line = line.replaceAll(\"#.*$\", \"\");\n\n      // Skip empty lines or comment lines\n      if (line.trim().length() == 0) {\n        continue;\n      }\n      String[] values = CSVUtil.parse(line);\n      featureEntries.add(values);\n    }\n\n    if (featureEntries.isEmpty()) {\n      return null;\n    } else {\n      return new UserDictionary(featureEntries);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["74edc11a06aa2b11af806b450e86e2768c084387"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"691ca07f9a7cc2a05cbdc8138511ffe32dc388ab","date":1544350838,"type":3,"author":"mishrun","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#open(Reader).mjava","pathOld":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#open(Reader).mjava","sourceNew":"  public static UserDictionary open(Reader reader) throws IOException {\n\n    BufferedReader br = new BufferedReader(reader);\n    String line = null;\n    List<String[]> featureEntries = new ArrayList<>();\n\n    // text, segmentation, readings, POS\n    while ((line = br.readLine()) != null) {\n      // Remove comments\n      line = line.replaceAll(\"^#.*$\", \"\");\n\n      // Skip empty lines or comment lines\n      if (line.trim().length() == 0) {\n        continue;\n      }\n      String[] values = CSVUtil.parse(line);\n      featureEntries.add(values);\n    }\n\n    if (featureEntries.isEmpty()) {\n      return null;\n    } else {\n      return new UserDictionary(featureEntries);\n    }\n  }\n\n","sourceOld":"  public static UserDictionary open(Reader reader) throws IOException {\n\n    BufferedReader br = new BufferedReader(reader);\n    String line = null;\n    List<String[]> featureEntries = new ArrayList<>();\n\n    // text, segmentation, readings, POS\n    while ((line = br.readLine()) != null) {\n      // Remove comments\n      line = line.replaceAll(\"#.*$\", \"\");\n\n      // Skip empty lines or comment lines\n      if (line.trim().length() == 0) {\n        continue;\n      }\n      String[] values = CSVUtil.parse(line);\n      featureEntries.add(values);\n    }\n\n    if (featureEntries.isEmpty()) {\n      return null;\n    } else {\n      return new UserDictionary(featureEntries);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74edc11a06aa2b11af806b450e86e2768c084387","date":1576955380,"type":3,"author":"Michael Sokolov","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#open(Reader).mjava","pathOld":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#open(Reader).mjava","sourceNew":"  public static UserDictionary open(Reader reader) throws IOException {\n\n    BufferedReader br = new BufferedReader(reader);\n    String line = null;\n    List<String[]> featureEntries = new ArrayList<>();\n\n    // text, segmentation, readings, POS\n    while ((line = br.readLine()) != null) {\n      // Remove comments\n      line = line.replaceAll(\"^#.*$\", \"\");\n\n      // Skip empty lines or comment lines\n      if (line.trim().length() == 0) {\n        continue;\n      }\n      String[] values = CSVUtil.parse(line);\n      featureEntries.add(values);\n    }\n\n    if (featureEntries.isEmpty()) {\n      return null;\n    } else {\n      return new UserDictionary(featureEntries);\n    }\n  }\n\n","sourceOld":"  public static UserDictionary open(Reader reader) throws IOException {\n\n    BufferedReader br = new BufferedReader(reader);\n    String line = null;\n    List<String[]> featureEntries = new ArrayList<>();\n\n    // text, segmentation, readings, POS\n    while ((line = br.readLine()) != null) {\n      // Remove comments\n      line = line.replaceAll(\"#.*$\", \"\");\n\n      // Skip empty lines or comment lines\n      if (line.trim().length() == 0) {\n        continue;\n      }\n      String[] values = CSVUtil.parse(line);\n      featureEntries.add(values);\n    }\n\n    if (featureEntries.isEmpty()) {\n      return null;\n    } else {\n      return new UserDictionary(featureEntries);\n    }\n  }\n\n","bugFix":["3e0e5dacb8158de7670b41d1a749a4b7487e6acf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","date":1577276097,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#open(Reader).mjava","pathOld":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#open(Reader).mjava","sourceNew":"  public static UserDictionary open(Reader reader) throws IOException {\n\n    BufferedReader br = new BufferedReader(reader);\n    String line = null;\n    List<String[]> featureEntries = new ArrayList<>();\n\n    // text, segmentation, readings, POS\n    while ((line = br.readLine()) != null) {\n      // Remove comments\n      line = line.replaceAll(\"^#.*$\", \"\");\n\n      // Skip empty lines or comment lines\n      if (line.trim().length() == 0) {\n        continue;\n      }\n      String[] values = CSVUtil.parse(line);\n      featureEntries.add(values);\n    }\n\n    if (featureEntries.isEmpty()) {\n      return null;\n    } else {\n      return new UserDictionary(featureEntries);\n    }\n  }\n\n","sourceOld":"  public static UserDictionary open(Reader reader) throws IOException {\n\n    BufferedReader br = new BufferedReader(reader);\n    String line = null;\n    List<String[]> featureEntries = new ArrayList<>();\n\n    // text, segmentation, readings, POS\n    while ((line = br.readLine()) != null) {\n      // Remove comments\n      line = line.replaceAll(\"#.*$\", \"\");\n\n      // Skip empty lines or comment lines\n      if (line.trim().length() == 0) {\n        continue;\n      }\n      String[] values = CSVUtil.parse(line);\n      featureEntries.add(values);\n    }\n\n    if (featureEntries.isEmpty()) {\n      return null;\n    } else {\n      return new UserDictionary(featureEntries);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e0e5dacb8158de7670b41d1a749a4b7487e6acf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":["3e0e5dacb8158de7670b41d1a749a4b7487e6acf","74edc11a06aa2b11af806b450e86e2768c084387"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74edc11a06aa2b11af806b450e86e2768c084387":["3e0e5dacb8158de7670b41d1a749a4b7487e6acf","691ca07f9a7cc2a05cbdc8138511ffe32dc388ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74edc11a06aa2b11af806b450e86e2768c084387"],"691ca07f9a7cc2a05cbdc8138511ffe32dc388ab":["3e0e5dacb8158de7670b41d1a749a4b7487e6acf"]},"commit2Childs":{"3e0e5dacb8158de7670b41d1a749a4b7487e6acf":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","74edc11a06aa2b11af806b450e86e2768c084387","691ca07f9a7cc2a05cbdc8138511ffe32dc388ab"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e0e5dacb8158de7670b41d1a749a4b7487e6acf"],"74edc11a06aa2b11af806b450e86e2768c084387":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"691ca07f9a7cc2a05cbdc8138511ffe32dc388ab":["74edc11a06aa2b11af806b450e86e2768c084387"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}