{"path":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.ByteCache#createValue(IndexReader,Entry).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.ByteCache#createValue(IndexReader,Entry).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheImpl.ByteCache#createValue(IndexReader,Entry).mjava","sourceNew":"    @Override\n    protected Object createValue(IndexReader reader, Entry entryKey)\n        throws IOException {\n      Entry entry = entryKey;\n      String field = entry.field;\n      ByteParser parser = (ByteParser) entry.custom;\n      if (parser == null) {\n        return wrapper.getBytes(reader, field, FieldCache.DEFAULT_BYTE_PARSER);\n      }\n      final byte[] retArray = new byte[reader.maxDoc()];\n      TermDocs termDocs = reader.termDocs();\n      TermEnum termEnum = reader.terms (new Term (field));\n      try {\n        do {\n          Term term = termEnum.term();\n          if (term==null || term.field() != field) break;\n          byte termval = parser.parseByte(term.text());\n          termDocs.seek (termEnum);\n          while (termDocs.next()) {\n            retArray[termDocs.doc()] = termval;\n          }\n        } while (termEnum.next());\n      } catch (StopFillCacheException stop) {\n      } finally {\n        termDocs.close();\n        termEnum.close();\n      }\n      return retArray;\n    }\n\n","sourceOld":"    @Override\n    protected Object createValue(IndexReader reader, Entry entryKey)\n        throws IOException {\n      Entry entry = entryKey;\n      String field = entry.field;\n      ByteParser parser = (ByteParser) entry.custom;\n      if (parser == null) {\n        return wrapper.getBytes(reader, field, FieldCache.DEFAULT_BYTE_PARSER);\n      }\n      final byte[] retArray = new byte[reader.maxDoc()];\n      TermDocs termDocs = reader.termDocs();\n      TermEnum termEnum = reader.terms (new Term (field));\n      try {\n        do {\n          Term term = termEnum.term();\n          if (term==null || term.field() != field) break;\n          byte termval = parser.parseByte(term.text());\n          termDocs.seek (termEnum);\n          while (termDocs.next()) {\n            retArray[termDocs.doc()] = termval;\n          }\n        } while (termEnum.next());\n      } catch (StopFillCacheException stop) {\n      } finally {\n        termDocs.close();\n        termEnum.close();\n      }\n      return retArray;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.ByteCache#createValue(IndexReader,Entry).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.ByteCache#createValue(IndexReader,Entry).mjava","sourceNew":"    @Override\n    protected Object createValue(IndexReader reader, Entry entryKey)\n        throws IOException {\n      Entry entry = entryKey;\n      String field = entry.field;\n      ByteParser parser = (ByteParser) entry.custom;\n      if (parser == null) {\n        return wrapper.getBytes(reader, field, FieldCache.DEFAULT_BYTE_PARSER);\n      }\n      final byte[] retArray = new byte[reader.maxDoc()];\n      Terms terms = MultiFields.getTerms(reader, field);\n      if (terms != null) {\n        final TermsEnum termsEnum = terms.iterator();\n        final Bits delDocs = MultiFields.getDeletedDocs(reader);\n        DocsEnum docs = null;\n        try {\n          while(true) {\n            final BytesRef term = termsEnum.next();\n            if (term == null) {\n              break;\n            }\n            final byte termval = parser.parseByte(term);\n            docs = termsEnum.docs(delDocs, docs);\n            while (true) {\n              final int docID = docs.nextDoc();\n              if (docID == DocsEnum.NO_MORE_DOCS) {\n                break;\n              }\n              retArray[docID] = termval;\n            }\n          }\n        } catch (StopFillCacheException stop) {\n        }\n      }\n      return retArray;\n    }\n\n","sourceOld":"    @Override\n    protected Object createValue(IndexReader reader, Entry entryKey)\n        throws IOException {\n      Entry entry = entryKey;\n      String field = entry.field;\n      ByteParser parser = (ByteParser) entry.custom;\n      if (parser == null) {\n        return wrapper.getBytes(reader, field, FieldCache.DEFAULT_BYTE_PARSER);\n      }\n      final byte[] retArray = new byte[reader.maxDoc()];\n      TermDocs termDocs = reader.termDocs();\n      TermEnum termEnum = reader.terms (new Term (field));\n      try {\n        do {\n          Term term = termEnum.term();\n          if (term==null || term.field() != field) break;\n          byte termval = parser.parseByte(term.text());\n          termDocs.seek (termEnum);\n          while (termDocs.next()) {\n            retArray[termDocs.doc()] = termval;\n          }\n        } while (termEnum.next());\n      } catch (StopFillCacheException stop) {\n      } finally {\n        termDocs.close();\n        termEnum.close();\n      }\n      return retArray;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee9156bf08d7eaae5e8d8ab5f855ba61012e257","date":1285443157,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.ByteCache#createValue(IndexReader,Entry).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected Object createValue(IndexReader reader, Entry entryKey)\n        throws IOException {\n      Entry entry = entryKey;\n      String field = entry.field;\n      ByteParser parser = (ByteParser) entry.custom;\n      if (parser == null) {\n        return wrapper.getBytes(reader, field, FieldCache.DEFAULT_BYTE_PARSER);\n      }\n      final byte[] retArray = new byte[reader.maxDoc()];\n      Terms terms = MultiFields.getTerms(reader, field);\n      if (terms != null) {\n        final TermsEnum termsEnum = terms.iterator();\n        final Bits delDocs = MultiFields.getDeletedDocs(reader);\n        DocsEnum docs = null;\n        try {\n          while(true) {\n            final BytesRef term = termsEnum.next();\n            if (term == null) {\n              break;\n            }\n            final byte termval = parser.parseByte(term);\n            docs = termsEnum.docs(delDocs, docs);\n            while (true) {\n              final int docID = docs.nextDoc();\n              if (docID == DocsEnum.NO_MORE_DOCS) {\n                break;\n              }\n              retArray[docID] = termval;\n            }\n          }\n        } catch (StopFillCacheException stop) {\n        }\n      }\n      return retArray;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.ByteCache#createValue(IndexReader,Entry).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected Object createValue(IndexReader reader, Entry entryKey)\n        throws IOException {\n      Entry entry = entryKey;\n      String field = entry.field;\n      ByteParser parser = (ByteParser) entry.custom;\n      if (parser == null) {\n        return wrapper.getBytes(reader, field, FieldCache.DEFAULT_BYTE_PARSER);\n      }\n      final byte[] retArray = new byte[reader.maxDoc()];\n      Terms terms = MultiFields.getTerms(reader, field);\n      if (terms != null) {\n        final TermsEnum termsEnum = terms.iterator();\n        final Bits delDocs = MultiFields.getDeletedDocs(reader);\n        DocsEnum docs = null;\n        try {\n          while(true) {\n            final BytesRef term = termsEnum.next();\n            if (term == null) {\n              break;\n            }\n            final byte termval = parser.parseByte(term);\n            docs = termsEnum.docs(delDocs, docs);\n            while (true) {\n              final int docID = docs.nextDoc();\n              if (docID == DocsEnum.NO_MORE_DOCS) {\n                break;\n              }\n              retArray[docID] = termval;\n            }\n          }\n        } catch (StopFillCacheException stop) {\n        }\n      }\n      return retArray;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eee9156bf08d7eaae5e8d8ab5f855ba61012e257":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","eee9156bf08d7eaae5e8d8ab5f855ba61012e257"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eee9156bf08d7eaae5e8d8ab5f855ba61012e257"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"eee9156bf08d7eaae5e8d8ab5f855ba61012e257":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["eee9156bf08d7eaae5e8d8ab5f855ba61012e257","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}