{"path":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 3;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjAddStates(8, 9);\n                  break;\n               case 1:\n                  if (curChar == 46)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjCheckNAdd(2);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 3;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjAddStates(8, 9);\n                  break;\n               case 1:\n                  if (curChar == 46)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjCheckNAdd(2);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f03d60547476e008d3d993cd26872c1157f19cf","date":1270899773,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\r\n{\r\n   int startsAt = 0;\r\n   jjnewStateCnt = 3;\r\n   int i = 1;\r\n   jjstateSet[0] = startState;\r\n   int kind = 0x7fffffff;\r\n   for (;;)\r\n   {\r\n      if (++jjround == 0x7fffffff)\r\n         ReInitRounds();\r\n      if (curChar < 64)\r\n      {\r\n         long l = 1L << curChar;\r\n         do\r\n         {\r\n            switch(jjstateSet[--i])\r\n            {\r\n               case 0:\r\n                  if ((0x3ff000000000000L & l) == 0L)\r\n                     break;\r\n                  if (kind > 22)\r\n                     kind = 22;\r\n                  jjAddStates(8, 9);\r\n                  break;\r\n               case 1:\r\n                  if (curChar == 46)\r\n                     jjCheckNAdd(2);\r\n                  break;\r\n               case 2:\r\n                  if ((0x3ff000000000000L & l) == 0L)\r\n                     break;\r\n                  if (kind > 22)\r\n                     kind = 22;\r\n                  jjCheckNAdd(2);\r\n                  break;\r\n               default : break;\r\n            }\r\n         } while(i != startsAt);\r\n      }\r\n      else if (curChar < 128)\r\n      {\r\n         long l = 1L << (curChar & 077);\r\n         do\r\n         {\r\n            switch(jjstateSet[--i])\r\n            {\r\n               default : break;\r\n            }\r\n         } while(i != startsAt);\r\n      }\r\n      else\r\n      {\r\n         int hiByte = (int)(curChar >> 8);\r\n         int i1 = hiByte >> 6;\r\n         long l1 = 1L << (hiByte & 077);\r\n         int i2 = (curChar & 0xff) >> 6;\r\n         long l2 = 1L << (curChar & 077);\r\n         do\r\n         {\r\n            switch(jjstateSet[--i])\r\n            {\r\n               default : break;\r\n            }\r\n         } while(i != startsAt);\r\n      }\r\n      if (kind != 0x7fffffff)\r\n      {\r\n         jjmatchedKind = kind;\r\n         jjmatchedPos = curPos;\r\n         kind = 0x7fffffff;\r\n      }\r\n      ++curPos;\r\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\r\n         return curPos;\r\n      try { curChar = input_stream.readChar(); }\r\n      catch(java.io.IOException e) { return curPos; }\r\n   }\r\n}\r\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 3;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjAddStates(8, 9);\n                  break;\n               case 1:\n                  if (curChar == 46)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjCheckNAdd(2);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b","date":1270900166,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 3;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjAddStates(8, 9);\n                  break;\n               case 1:\n                  if (curChar == 46)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjCheckNAdd(2);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\r\n{\r\n   int startsAt = 0;\r\n   jjnewStateCnt = 3;\r\n   int i = 1;\r\n   jjstateSet[0] = startState;\r\n   int kind = 0x7fffffff;\r\n   for (;;)\r\n   {\r\n      if (++jjround == 0x7fffffff)\r\n         ReInitRounds();\r\n      if (curChar < 64)\r\n      {\r\n         long l = 1L << curChar;\r\n         do\r\n         {\r\n            switch(jjstateSet[--i])\r\n            {\r\n               case 0:\r\n                  if ((0x3ff000000000000L & l) == 0L)\r\n                     break;\r\n                  if (kind > 22)\r\n                     kind = 22;\r\n                  jjAddStates(8, 9);\r\n                  break;\r\n               case 1:\r\n                  if (curChar == 46)\r\n                     jjCheckNAdd(2);\r\n                  break;\r\n               case 2:\r\n                  if ((0x3ff000000000000L & l) == 0L)\r\n                     break;\r\n                  if (kind > 22)\r\n                     kind = 22;\r\n                  jjCheckNAdd(2);\r\n                  break;\r\n               default : break;\r\n            }\r\n         } while(i != startsAt);\r\n      }\r\n      else if (curChar < 128)\r\n      {\r\n         long l = 1L << (curChar & 077);\r\n         do\r\n         {\r\n            switch(jjstateSet[--i])\r\n            {\r\n               default : break;\r\n            }\r\n         } while(i != startsAt);\r\n      }\r\n      else\r\n      {\r\n         int hiByte = (int)(curChar >> 8);\r\n         int i1 = hiByte >> 6;\r\n         long l1 = 1L << (hiByte & 077);\r\n         int i2 = (curChar & 0xff) >> 6;\r\n         long l2 = 1L << (curChar & 077);\r\n         do\r\n         {\r\n            switch(jjstateSet[--i])\r\n            {\r\n               default : break;\r\n            }\r\n         } while(i != startsAt);\r\n      }\r\n      if (kind != 0x7fffffff)\r\n      {\r\n         jjmatchedKind = kind;\r\n         jjmatchedPos = curPos;\r\n         kind = 0x7fffffff;\r\n      }\r\n      ++curPos;\r\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\r\n         return curPos;\r\n      try { curChar = input_stream.readChar(); }\r\n      catch(java.io.IOException e) { return curPos; }\r\n   }\r\n}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d94d6afa51157e490fc169e192a154ffc4cdad0b","date":1283184289,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 3;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 23)\n                     kind = 23;\n                  jjAddStates(11, 12);\n                  break;\n               case 1:\n                  if (curChar == 46)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 23)\n                     kind = 23;\n                  jjCheckNAdd(2);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 3;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjAddStates(8, 9);\n                  break;\n               case 1:\n                  if (curChar == 46)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjCheckNAdd(2);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":["e91b7614171e0a6a82351457c2870d2a0124ba9a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 3;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 23)\n                     kind = 23;\n                  jjAddStates(11, 12);\n                  break;\n               case 1:\n                  if (curChar == 46)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 23)\n                     kind = 23;\n                  jjCheckNAdd(2);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 3;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjAddStates(8, 9);\n                  break;\n               case 1:\n                  if (curChar == 46)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 22)\n                     kind = 22;\n                  jjCheckNAdd(2);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 3;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 23)\n                     kind = 23;\n                  jjAddStates(11, 12);\n                  break;\n               case 1:\n                  if (curChar == 46)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 23)\n                     kind = 23;\n                  jjCheckNAdd(2);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 3;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 23)\n                     kind = 23;\n                  jjAddStates(11, 12);\n                  break;\n               case 1:\n                  if (curChar == 46)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 23)\n                     kind = 23;\n                  jjCheckNAdd(2);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["d94d6afa51157e490fc169e192a154ffc4cdad0b"],"d94d6afa51157e490fc169e192a154ffc4cdad0b":["f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b","d94d6afa51157e490fc169e192a154ffc4cdad0b"],"f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b":["1f03d60547476e008d3d993cd26872c1157f19cf"],"1f03d60547476e008d3d993cd26872c1157f19cf":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d94d6afa51157e490fc169e192a154ffc4cdad0b":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b":["d94d6afa51157e490fc169e192a154ffc4cdad0b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"1f03d60547476e008d3d993cd26872c1157f19cf":["f15bad88fcdb5cb75a8cd9f5dea23a87a3b04b6b"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1f03d60547476e008d3d993cd26872c1157f19cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}