{"path":"lucene/core/src/java/org/apache/lucene/index/DocValues.SortedSource#getBytes(int,BytesRef).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues.SortedSource#getBytes(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocValues.SortedSource#getBytes(int,BytesRef).mjava","sourceNew":"    @Override\n    public BytesRef getBytes(int docID, BytesRef bytesRef) {\n      final int ord = ord(docID);\n      if (ord < 0) {\n        bytesRef.length = 0;\n      } else {\n        getByOrd(ord , bytesRef);\n      }\n      return bytesRef;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getBytes(int docID, BytesRef bytesRef) {\n      final int ord = ord(docID);\n      if (ord < 0) {\n        bytesRef.length = 0;\n      } else {\n        getByOrd(ord , bytesRef);\n      }\n      return bytesRef;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7523dd562634d9145b67eb4c8b3b3db2340532b","date":1330467618,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues.SortedSource#getBytes(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues.SortedSource#getBytes(int,BytesRef).mjava","sourceNew":"    @Override\n    public BytesRef getBytes(int docID, BytesRef bytesRef) {\n      final int ord = ord(docID);\n      if (ord < 0) {\n        // Negative ord means doc was missing?\n        bytesRef.length = 0;\n      } else {\n        getByOrd(ord, bytesRef);\n      }\n      return bytesRef;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getBytes(int docID, BytesRef bytesRef) {\n      final int ord = ord(docID);\n      if (ord < 0) {\n        bytesRef.length = 0;\n      } else {\n        getByOrd(ord , bytesRef);\n      }\n      return bytesRef;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues.SortedSource#getBytes(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues.SortedSource#getBytes(int,BytesRef).mjava","sourceNew":"    @Override\n    public BytesRef getBytes(int docID, BytesRef bytesRef) {\n      final int ord = ord(docID);\n      if (ord < 0) {\n        // Negative ord means doc was missing?\n        bytesRef.length = 0;\n      } else {\n        getByOrd(ord, bytesRef);\n      }\n      return bytesRef;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getBytes(int docID, BytesRef bytesRef) {\n      final int ord = ord(docID);\n      if (ord < 0) {\n        bytesRef.length = 0;\n      } else {\n        getByOrd(ord , bytesRef);\n      }\n      return bytesRef;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues.SortedSource#getBytes(int,BytesRef).mjava","sourceNew":null,"sourceOld":"    @Override\n    public BytesRef getBytes(int docID, BytesRef bytesRef) {\n      final int ord = ord(docID);\n      if (ord < 0) {\n        // Negative ord means doc was missing?\n        bytesRef.length = 0;\n      } else {\n        getByOrd(ord, bytesRef);\n      }\n      return bytesRef;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues.SortedSource#getBytes(int,BytesRef).mjava","sourceNew":null,"sourceOld":"    @Override\n    public BytesRef getBytes(int docID, BytesRef bytesRef) {\n      final int ord = ord(docID);\n      if (ord < 0) {\n        // Negative ord means doc was missing?\n        bytesRef.length = 0;\n      } else {\n        getByOrd(ord, bytesRef);\n      }\n      return bytesRef;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["b7523dd562634d9145b67eb4c8b3b3db2340532b","0837ab0472feecb3a54260729d845f839e1cbd72"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","b7523dd562634d9145b67eb4c8b3b3db2340532b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["b7523dd562634d9145b67eb4c8b3b3db2340532b"],"b7523dd562634d9145b67eb4c8b3b3db2340532b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","b7523dd562634d9145b67eb4c8b3b3db2340532b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"b7523dd562634d9145b67eb4c8b3b3db2340532b":["d4d69c535930b5cce125cff868d40f6373dc27d4","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","0837ab0472feecb3a54260729d845f839e1cbd72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}