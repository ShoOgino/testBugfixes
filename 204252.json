{"path":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (attClass == NumericTermAttribute.class)\n        return new NumericTermAttributeImpl(ts);\n      if (attClass.isAssignableFrom(CharTermAttribute.class) || attClass.isAssignableFrom(TermAttribute.class))\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute/TermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a775c547c3519b47efd41c09cb47100ddb9604c7","date":1270914087,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","sourceNew":"    @Override @SuppressWarnings(\"deprecation\")\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (attClass == NumericTermAttribute.class)\n        return new NumericTermAttributeImpl(ts);\n      if (attClass.isAssignableFrom(CharTermAttribute.class) ||\n          // TODO: remove in 4.0 (deprecated class, also remove the suppress above):\n          attClass.isAssignableFrom(org.apache.lucene.analysis.tokenattributes.TermAttribute.class)\n      )\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute/TermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","sourceOld":"    @Override\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (attClass == NumericTermAttribute.class)\n        return new NumericTermAttributeImpl(ts);\n      if (attClass.isAssignableFrom(CharTermAttribute.class) || attClass.isAssignableFrom(TermAttribute.class))\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute/TermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3ba5366b7a7f11839e9c824b23007f048d002f6","date":1275996475,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","sourceNew":"    @Override\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (attClass == NumericTermAttribute.class)\n        return new NumericTermAttributeImpl(ts);\n      if (CharTermAttribute.class.isAssignableFrom(attClass))\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","sourceOld":"    @Override @SuppressWarnings(\"deprecation\")\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (attClass == NumericTermAttribute.class)\n        return new NumericTermAttributeImpl(ts);\n      if (attClass.isAssignableFrom(CharTermAttribute.class) ||\n          // TODO: remove in 4.0 (deprecated class, also remove the suppress above):\n          attClass.isAssignableFrom(org.apache.lucene.analysis.tokenattributes.TermAttribute.class)\n      )\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute/TermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"045811a5786836715a746b4c14522fc6c96c6607","date":1295463542,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","sourceNew":"    @Override\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (CharTermAttribute.class.isAssignableFrom(attClass))\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","sourceOld":"    @Override\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (attClass == NumericTermAttribute.class)\n        return new NumericTermAttributeImpl(ts);\n      if (CharTermAttribute.class.isAssignableFrom(attClass))\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","sourceNew":"    @Override\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (CharTermAttribute.class.isAssignableFrom(attClass))\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","sourceOld":"    @Override\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (attClass == NumericTermAttribute.class)\n        return new NumericTermAttributeImpl(ts);\n      if (CharTermAttribute.class.isAssignableFrom(attClass))\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","sourceNew":"    @Override\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (CharTermAttribute.class.isAssignableFrom(attClass))\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","sourceOld":"    @Override\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (attClass == NumericTermAttribute.class)\n        return new NumericTermAttributeImpl(ts);\n      if (CharTermAttribute.class.isAssignableFrom(attClass))\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericAttributeFactory#createAttributeInstance(Class[#-extends-Attribute]).mjava","sourceNew":"    @Override\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (CharTermAttribute.class.isAssignableFrom(attClass))\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","sourceOld":"    @Override\n    public AttributeImpl createAttributeInstance(Class<? extends Attribute> attClass) {\n      if (CharTermAttribute.class.isAssignableFrom(attClass))\n        throw new IllegalArgumentException(\"NumericTokenStream does not support CharTermAttribute.\");\n      return delegate.createAttributeInstance(attClass);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c3ba5366b7a7f11839e9c824b23007f048d002f6":["a775c547c3519b47efd41c09cb47100ddb9604c7"],"045811a5786836715a746b4c14522fc6c96c6607":["c3ba5366b7a7f11839e9c824b23007f048d002f6"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["045811a5786836715a746b4c14522fc6c96c6607"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["c3ba5366b7a7f11839e9c824b23007f048d002f6","045811a5786836715a746b4c14522fc6c96c6607"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["c3ba5366b7a7f11839e9c824b23007f048d002f6","045811a5786836715a746b4c14522fc6c96c6607"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a775c547c3519b47efd41c09cb47100ddb9604c7":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"]},"commit2Childs":{"c3ba5366b7a7f11839e9c824b23007f048d002f6":["045811a5786836715a746b4c14522fc6c96c6607","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"045811a5786836715a746b4c14522fc6c96c6607":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a775c547c3519b47efd41c09cb47100ddb9604c7"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"a775c547c3519b47efd41c09cb47100ddb9604c7":["c3ba5366b7a7f11839e9c824b23007f048d002f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}