{"path":"src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","commits":[{"id":"2586f96f60332eb97ecd2934b0763791462568b2","date":1220116589,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos().mjava","sourceNew":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !hasExternalSegments(rollbackSegmentInfos);\n    rollbackSegments = new HashMap();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), new Integer(i));\n  }\n\n","sourceOld":"  private void setRollbackSegmentInfos() {\n    rollbackSegmentInfos = (SegmentInfos) segmentInfos.clone();\n    rollbackSegments = new HashMap();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), new Integer(i));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f44610301174bfb430443d89a88dc1c502feea1","date":1231194664,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !rollbackSegmentInfos.hasExternalSegments(directory);\n    rollbackSegments = new HashMap();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), new Integer(i));\n  }\n\n","sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !hasExternalSegments(rollbackSegmentInfos);\n    rollbackSegments = new HashMap();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), new Integer(i));\n  }\n\n","bugFix":["2586f96f60332eb97ecd2934b0763791462568b2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bcde5e3f23911110baa101ed062b544162825b5","date":1254521804,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !rollbackSegmentInfos.hasExternalSegments(directory);\n    rollbackSegments = new HashMap();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !rollbackSegmentInfos.hasExternalSegments(directory);\n    rollbackSegments = new HashMap();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), new Integer(i));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !rollbackSegmentInfos.hasExternalSegments(directory);\n    rollbackSegments = new HashMap<SegmentInfo,Integer>();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !rollbackSegmentInfos.hasExternalSegments(directory);\n    rollbackSegments = new HashMap();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !rollbackSegmentInfos.hasExternalSegments(directory);\n    rollbackSegments = new HashMap<SegmentInfo,Integer>();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !rollbackSegmentInfos.hasExternalSegments(directory);\n    rollbackSegments = new HashMap<SegmentInfo,Integer>();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bcde5e3f23911110baa101ed062b544162825b5":["0f44610301174bfb430443d89a88dc1c502feea1"],"0f44610301174bfb430443d89a88dc1c502feea1":["2586f96f60332eb97ecd2934b0763791462568b2"],"ef82ff03e4016c705811b2658e81471a645c0e49":["6bcde5e3f23911110baa101ed062b544162825b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2586f96f60332eb97ecd2934b0763791462568b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ef82ff03e4016c705811b2658e81471a645c0e49"]},"commit2Childs":{"6bcde5e3f23911110baa101ed062b544162825b5":["ef82ff03e4016c705811b2658e81471a645c0e49"],"0f44610301174bfb430443d89a88dc1c502feea1":["6bcde5e3f23911110baa101ed062b544162825b5"],"ef82ff03e4016c705811b2658e81471a645c0e49":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2586f96f60332eb97ecd2934b0763791462568b2"],"2586f96f60332eb97ecd2934b0763791462568b2":["0f44610301174bfb430443d89a88dc1c502feea1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}