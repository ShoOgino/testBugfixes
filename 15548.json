{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/tr/TurkishLowerCaseFilter#isBeforeDot(char[],int,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/tr/TurkishLowerCaseFilter#isBeforeDot(char[],int,int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/tr/TurkishLowerCaseFilter#isBeforeDot(char[],int,int).mjava","sourceNew":"  /**\n   * lookahead for a combining dot above.\n   * other NSMs may be in between.\n   */\n  private boolean isBeforeDot(char s[], int pos, int len) {\n    for (int i = pos; i < len;) {\n      final int ch = Character.codePointAt(s, i);\n      if (Character.getType(ch) != Character.NON_SPACING_MARK)\n        return false;\n      if (ch == COMBINING_DOT_ABOVE)\n        return true;\n      i += Character.charCount(ch);\n    }\n    \n    return false;\n  }\n\n","sourceOld":"  /**\n   * lookahead for a combining dot above.\n   * other NSMs may be in between.\n   */\n  private boolean isBeforeDot(char s[], int pos, int len) {\n    for (int i = pos; i < len;) {\n      final int ch = Character.codePointAt(s, i);\n      if (Character.getType(ch) != Character.NON_SPACING_MARK)\n        return false;\n      if (ch == COMBINING_DOT_ABOVE)\n        return true;\n      i += Character.charCount(ch);\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704","date":1371043069,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/tr/TurkishLowerCaseFilter#isBeforeDot(char[],int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/tr/TurkishLowerCaseFilter#isBeforeDot(char[],int,int).mjava","sourceNew":"  /**\n   * lookahead for a combining dot above.\n   * other NSMs may be in between.\n   */\n  private boolean isBeforeDot(char s[], int pos, int len) {\n    for (int i = pos; i < len;) {\n      final int ch = Character.codePointAt(s, i, len);\n      if (Character.getType(ch) != Character.NON_SPACING_MARK)\n        return false;\n      if (ch == COMBINING_DOT_ABOVE)\n        return true;\n      i += Character.charCount(ch);\n    }\n    \n    return false;\n  }\n\n","sourceOld":"  /**\n   * lookahead for a combining dot above.\n   * other NSMs may be in between.\n   */\n  private boolean isBeforeDot(char s[], int pos, int len) {\n    for (int i = pos; i < len;) {\n      final int ch = Character.codePointAt(s, i);\n      if (Character.getType(ch) != Character.NON_SPACING_MARK)\n        return false;\n      if (ch == COMBINING_DOT_ABOVE)\n        return true;\n      i += Character.charCount(ch);\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704"],"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}