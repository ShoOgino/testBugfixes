{"path":"lucene/src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","pathOld":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","sourceNew":"  @Override\n  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      File lockFile = new File(lockDir, lockName);\n      if (lockFile.exists() && !lockFile.delete()) {\n        throw new IOException(\"Cannot delete \" + lockFile);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      File lockFile = new File(lockDir, lockName);\n      if (lockFile.exists() && !lockFile.delete()) {\n        throw new IOException(\"Cannot delete \" + lockFile);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7849f94423cf8c4a8124357b8d5e97a7d22c1af","date":1278575732,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","sourceNew":"  @Override\n  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      \n      // Try to release the lock first - if it's held by another process, this\n      // method should not silently fail.\n      // NOTE: makeLock fixes the lock name by prefixing it w/ lockPrefix.\n      // Therefore it should be called before the code block next which prefixes\n      // the given name.\n      makeLock(lockName).release();\n\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      \n      // As mentioned above, we don't care if the deletion of the file failed.\n      new File(lockDir, lockName).delete();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      File lockFile = new File(lockDir, lockName);\n      if (lockFile.exists() && !lockFile.delete()) {\n        throw new IOException(\"Cannot delete \" + lockFile);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["0fcdcf196523675146a4df3193e91413533857ab"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","sourceNew":"  @Override\n  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      \n      // Try to release the lock first - if it's held by another process, this\n      // method should not silently fail.\n      // NOTE: makeLock fixes the lock name by prefixing it w/ lockPrefix.\n      // Therefore it should be called before the code block next which prefixes\n      // the given name.\n      makeLock(lockName).release();\n\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      \n      // As mentioned above, we don't care if the deletion of the file failed.\n      new File(lockDir, lockName).delete();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      File lockFile = new File(lockDir, lockName);\n      if (lockFile.exists() && !lockFile.delete()) {\n        throw new IOException(\"Cannot delete \" + lockFile);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","sourceNew":"  @Override\n  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      \n      // Try to release the lock first - if it's held by another process, this\n      // method should not silently fail.\n      // NOTE: makeLock fixes the lock name by prefixing it w/ lockPrefix.\n      // Therefore it should be called before the code block next which prefixes\n      // the given name.\n      makeLock(lockName).release();\n\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      \n      // As mentioned above, we don't care if the deletion of the file failed.\n      new File(lockDir, lockName).delete();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      \n      // Try to release the lock first - if it's held by another process, this\n      // method should not silently fail.\n      // NOTE: makeLock fixes the lock name by prefixing it w/ lockPrefix.\n      // Therefore it should be called before the code block next which prefixes\n      // the given name.\n      makeLock(lockName).release();\n\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      \n      // As mentioned above, we don't care if the deletion of the file failed.\n      new File(lockDir, lockName).delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e7849f94423cf8c4a8124357b8d5e97a7d22c1af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7849f94423cf8c4a8124357b8d5e97a7d22c1af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["9454a6510e2db155fb01faa5c049b06ece95fab9","e7849f94423cf8c4a8124357b8d5e97a7d22c1af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e7849f94423cf8c4a8124357b8d5e97a7d22c1af":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","5f4e87790277826a2aea119328600dfb07761f32"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5f4e87790277826a2aea119328600dfb07761f32":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e7849f94423cf8c4a8124357b8d5e97a7d22c1af","5f4e87790277826a2aea119328600dfb07761f32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}