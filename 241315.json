{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#validateConfig(String).mjava","commits":[{"id":"707fc23d793376ed98be0bd2f100d32dd5a9c0df","date":1422324604,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#validateConfig(String).mjava","pathOld":"/dev/null","sourceNew":"  private boolean validateConfig(String configName) throws KeeperException, InterruptedException {\n    return zkStateReader.getZkClient().exists(ZkController.CONFIGS_ZKNODE + \"/\" + configName, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c8a2521797f14d1d697a17a0069f5619cd211a6","date":1424361535,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#validateConfig(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#validateConfig(String).mjava","sourceNew":"  private boolean validateConfig(String configName) throws KeeperException, InterruptedException {\n    return zkStateReader.getZkClient().exists(ZkConfigManager.CONFIGS_ZKNODE + \"/\" + configName, true);\n  }\n\n","sourceOld":"  private boolean validateConfig(String configName) throws KeeperException, InterruptedException {\n    return zkStateReader.getZkClient().exists(ZkController.CONFIGS_ZKNODE + \"/\" + configName, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#validateConfig(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#validateConfig(String).mjava","sourceNew":"  private boolean validateConfig(String configName) throws KeeperException, InterruptedException {\n    return zkStateReader.getZkClient().exists(ZkConfigManager.CONFIGS_ZKNODE + \"/\" + configName, true);\n  }\n\n","sourceOld":"  private boolean validateConfig(String configName) throws KeeperException, InterruptedException {\n    return zkStateReader.getZkClient().exists(ZkConfigManager.CONFIGS_ZKNODE + \"/\" + configName, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["6c8a2521797f14d1d697a17a0069f5619cd211a6"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["707fc23d793376ed98be0bd2f100d32dd5a9c0df"],"707fc23d793376ed98be0bd2f100d32dd5a9c0df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"707fc23d793376ed98be0bd2f100d32dd5a9c0df":["6c8a2521797f14d1d697a17a0069f5619cd211a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["707fc23d793376ed98be0bd2f100d32dd5a9c0df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}