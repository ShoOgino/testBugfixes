{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCase#checkSyspropForceBeforeClassAssumptionFailure().mjava","commits":[{"id":"1edfe287b5d8d16a9effaad9cf334bedae0c8857","date":1561656486,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCase#checkSyspropForceBeforeClassAssumptionFailure().mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Special hook for sanity checking if any tests trigger failures when an\n   * Assumption failure occures in a {@link BeforeClass} method\n   * @lucene.internal\n   */\n  @BeforeClass\n  public static void checkSyspropForceBeforeClassAssumptionFailure() {\n    // ant test -Dargs=\"-Dtests.force.assumption.failure.beforeclass=true\"\n    final String PROP = \"tests.force.assumption.failure.beforeclass\";\n    assumeFalse(PROP + \" == true\",\n                systemPropertyAsBoolean(PROP, false));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e96aca6dcb4268a4da0be1c4cb4fb7ac8ee6de96","date":1581390836,"type":3,"author":"Mike","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCase#checkSyspropForceBeforeClassAssumptionFailure().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCase#checkSyspropForceBeforeClassAssumptionFailure().mjava","sourceNew":"  /**\n   * Special hook for sanity checking if any tests trigger failures when an\n   * Assumption failure occures in a {@link BeforeClass} method\n   * @lucene.internal\n   */\n  @BeforeClass\n  public static void checkSyspropForceBeforeClassAssumptionFailure() {\n    // ant test -Dargs=\"-Dtests.force.assumption.failure.beforeclass=true\"\n    final String PROP = \"tests.force.assumption.failure.beforeclass\";\n    assumeFalse(PROP + \" == true\",\n                systemPropertyAsBoolean(PROP, false));\n  }\n\n","sourceOld":"  /** \n   * Special hook for sanity checking if any tests trigger failures when an\n   * Assumption failure occures in a {@link BeforeClass} method\n   * @lucene.internal\n   */\n  @BeforeClass\n  public static void checkSyspropForceBeforeClassAssumptionFailure() {\n    // ant test -Dargs=\"-Dtests.force.assumption.failure.beforeclass=true\"\n    final String PROP = \"tests.force.assumption.failure.beforeclass\";\n    assumeFalse(PROP + \" == true\",\n                systemPropertyAsBoolean(PROP, false));\n  }\n\n","bugFix":null,"bugIntro":["62b9e928143a296539f1a4bc7d20fd302a36685b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"62b9e928143a296539f1a4bc7d20fd302a36685b","date":1581533496,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCase#checkSyspropForceBeforeClassAssumptionFailure().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCase#checkSyspropForceBeforeClassAssumptionFailure().mjava","sourceNew":"  /** \n   * Special hook for sanity checking if any tests trigger failures when an\n   * Assumption failure occures in a {@link BeforeClass} method\n   * @lucene.internal\n   */\n  @BeforeClass\n  public static void checkSyspropForceBeforeClassAssumptionFailure() {\n    // ant test -Dargs=\"-Dtests.force.assumption.failure.beforeclass=true\"\n    final String PROP = \"tests.force.assumption.failure.beforeclass\";\n    assumeFalse(PROP + \" == true\",\n                systemPropertyAsBoolean(PROP, false));\n  }\n\n","sourceOld":"  /**\n   * Special hook for sanity checking if any tests trigger failures when an\n   * Assumption failure occures in a {@link BeforeClass} method\n   * @lucene.internal\n   */\n  @BeforeClass\n  public static void checkSyspropForceBeforeClassAssumptionFailure() {\n    // ant test -Dargs=\"-Dtests.force.assumption.failure.beforeclass=true\"\n    final String PROP = \"tests.force.assumption.failure.beforeclass\";\n    assumeFalse(PROP + \" == true\",\n                systemPropertyAsBoolean(PROP, false));\n  }\n\n","bugFix":["e96aca6dcb4268a4da0be1c4cb4fb7ac8ee6de96"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e96aca6dcb4268a4da0be1c4cb4fb7ac8ee6de96":["1edfe287b5d8d16a9effaad9cf334bedae0c8857"],"62b9e928143a296539f1a4bc7d20fd302a36685b":["e96aca6dcb4268a4da0be1c4cb4fb7ac8ee6de96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1edfe287b5d8d16a9effaad9cf334bedae0c8857":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["62b9e928143a296539f1a4bc7d20fd302a36685b"]},"commit2Childs":{"e96aca6dcb4268a4da0be1c4cb4fb7ac8ee6de96":["62b9e928143a296539f1a4bc7d20fd302a36685b"],"62b9e928143a296539f1a4bc7d20fd302a36685b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1edfe287b5d8d16a9effaad9cf334bedae0c8857"],"1edfe287b5d8d16a9effaad9cf334bedae0c8857":["e96aca6dcb4268a4da0be1c4cb4fb7ac8ee6de96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}