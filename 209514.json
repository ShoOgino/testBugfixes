{"path":"solr/core/src/test/org/apache/solr/cloud/CollectionTooManyReplicasTest#testDownedShards().mjava","commits":[{"id":"3fd3cdfbce4b551bb8ca4678682a5a891d0890ca","date":1436588269,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionTooManyReplicasTest#testDownedShards().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @ShardsFixed(num = 2)\n  public void testDownedShards() throws Exception {\n    String collectionName = \"TooManyReplicasWhenAddingDownedNode\";\n    CollectionAdminRequest.Create create = new CollectionAdminRequest.Create()\n        .setCollectionName(collectionName)\n        .setReplicationFactor(1)\n        .setMaxShardsPerNode(2)\n        .setStateFormat(2)\n        .setRouterName(\"implicit\")\n        .setShards(\"shardstart\");\n\n    NamedList<Object> request = create.process(cloudClient).getResponse();\n\n    assertTrue(\"Could not create the collection\", request.get(\"success\") != null);\n    try (SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT)) {\n\n      List<String> liveNodes = zkClient.getChildren(\"/live_nodes\", null, true);\n\n      // Shut down a Jetty, I really don't care which\n      JettySolrRunner downJetty = jettys.get(r.nextInt(2));\n\n      downJetty.stop();\n      List<String> liveNodesNow = null;\n      for (int idx = 0; idx < 150; ++idx) {\n        liveNodesNow = zkClient.getChildren(\"/live_nodes\", null, true);\n        if (liveNodesNow.size() != liveNodes.size()) break;\n        Thread.sleep(100);\n      }\n      List<String> deadNodes = new ArrayList<>(liveNodes);\n      assertTrue(\"Should be a downed node\", deadNodes.removeAll(liveNodesNow));\n      liveNodes.removeAll(deadNodes);\n\n      //OK, we've killed a node. Insure we get errors when we ask to create a replica or shard that involves it.\n      // First try adding a  replica to the downed node.\n      CollectionAdminRequest.AddReplica addReplicaNode = new CollectionAdminRequest.AddReplica()\n          .setCollectionName(collectionName)\n          .setShardName(\"shardstart\")\n          .setNode(deadNodes.get(0));\n\n      try {\n        addReplicaNode.process(cloudClient);\n        fail(\"Should have gotten an exception\");\n      } catch (HttpSolrClient.RemoteSolrException se) {\n        assertTrue(\"Should have gotten a message about shard not \",\n            se.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n      }\n\n      // Should also die if we just add a shard\n      CollectionAdminRequest.CreateShard createShard = new CollectionAdminRequest.CreateShard()\n          .setCollectionName(collectionName)\n          .setShardName(\"shard1\")\n          .setNodeSet(deadNodes.get(0));\n      try {\n        createShard.process(cloudClient);\n        fail(\"Should have gotten an exception\");\n      } catch (HttpSolrClient.RemoteSolrException se) {\n        assertTrue(\"Should have gotten a message about shard not \",\n            se.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n      }\n      //downJetty.start();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4efd3fffdd7acd625bb88e455c8097e17f75735","date":1477647201,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionTooManyReplicasTest#testDownedShards().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionTooManyReplicasTest#testDownedShards().mjava","sourceNew":"  @Test\n  public void testDownedShards() throws Exception {\n    String collectionName = \"TooManyReplicasWhenAddingDownedNode\";\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collectionName, \"conf\", \"shardstart\", 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n\n    // Shut down a Jetty, I really don't care which\n    JettySolrRunner jetty = cluster.getRandomJetty(random());\n    String deadNode = jetty.getBaseUrl().toString();\n    cluster.stopJettySolrRunner(jetty);\n\n    try {\n\n      // Adding a replica on a dead node should fail\n      Exception e1 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.addReplicaToShard(collectionName, \"shardstart\")\n            .setNode(deadNode)\n            .process(cluster.getSolrClient());\n      });\n      assertTrue(\"Should have gotten a message about shard not \",\n          e1.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n\n      // Should also die if we just add a shard\n      Exception e2 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.createShard(collectionName, \"shard1\")\n            .setNodeSet(deadNode)\n            .process(cluster.getSolrClient());\n      });\n\n      assertTrue(\"Should have gotten a message about shard not \",\n          e2.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n    }\n    finally {\n      cluster.startJettySolrRunner(jetty);\n    }\n  }\n\n","sourceOld":"  @Test\n  @ShardsFixed(num = 2)\n  public void testDownedShards() throws Exception {\n    String collectionName = \"TooManyReplicasWhenAddingDownedNode\";\n    CollectionAdminRequest.Create create = new CollectionAdminRequest.Create()\n        .setCollectionName(collectionName)\n        .setReplicationFactor(1)\n        .setMaxShardsPerNode(2)\n        .setStateFormat(2)\n        .setRouterName(\"implicit\")\n        .setShards(\"shardstart\");\n\n    NamedList<Object> request = create.process(cloudClient).getResponse();\n\n    assertTrue(\"Could not create the collection\", request.get(\"success\") != null);\n    try (SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT)) {\n\n      List<String> liveNodes = zkClient.getChildren(\"/live_nodes\", null, true);\n\n      // Shut down a Jetty, I really don't care which\n      JettySolrRunner downJetty = jettys.get(r.nextInt(2));\n\n      downJetty.stop();\n      List<String> liveNodesNow = null;\n      for (int idx = 0; idx < 150; ++idx) {\n        liveNodesNow = zkClient.getChildren(\"/live_nodes\", null, true);\n        if (liveNodesNow.size() != liveNodes.size()) break;\n        Thread.sleep(100);\n      }\n      List<String> deadNodes = new ArrayList<>(liveNodes);\n      assertTrue(\"Should be a downed node\", deadNodes.removeAll(liveNodesNow));\n      liveNodes.removeAll(deadNodes);\n\n      //OK, we've killed a node. Insure we get errors when we ask to create a replica or shard that involves it.\n      // First try adding a  replica to the downed node.\n      CollectionAdminRequest.AddReplica addReplicaNode = new CollectionAdminRequest.AddReplica()\n          .setCollectionName(collectionName)\n          .setShardName(\"shardstart\")\n          .setNode(deadNodes.get(0));\n\n      try {\n        addReplicaNode.process(cloudClient);\n        fail(\"Should have gotten an exception\");\n      } catch (HttpSolrClient.RemoteSolrException se) {\n        assertTrue(\"Should have gotten a message about shard not \",\n            se.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n      }\n\n      // Should also die if we just add a shard\n      CollectionAdminRequest.CreateShard createShard = new CollectionAdminRequest.CreateShard()\n          .setCollectionName(collectionName)\n          .setShardName(\"shard1\")\n          .setNodeSet(deadNodes.get(0));\n      try {\n        createShard.process(cloudClient);\n        fail(\"Should have gotten an exception\");\n      } catch (HttpSolrClient.RemoteSolrException se) {\n        assertTrue(\"Should have gotten a message about shard not \",\n            se.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n      }\n      //downJetty.start();\n    }\n  }\n\n","bugFix":null,"bugIntro":["65a78c7aebe6b174f02f7c7a1b4e8647ed5ed73c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"59dce44d6a0b58c171de1d47ad8c0a75831f94fd","date":1477668573,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionTooManyReplicasTest#testDownedShards().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionTooManyReplicasTest#testDownedShards().mjava","sourceNew":"  @Test\n  public void testDownedShards() throws Exception {\n    String collectionName = \"TooManyReplicasWhenAddingDownedNode\";\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collectionName, \"conf\", \"shardstart\", 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n\n    // Shut down a Jetty, I really don't care which\n    JettySolrRunner jetty = cluster.getRandomJetty(random());\n    String deadNode = jetty.getBaseUrl().toString();\n    cluster.stopJettySolrRunner(jetty);\n\n    try {\n\n      // Adding a replica on a dead node should fail\n      Exception e1 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.addReplicaToShard(collectionName, \"shardstart\")\n            .setNode(deadNode)\n            .process(cluster.getSolrClient());\n      });\n      assertTrue(\"Should have gotten a message about shard not \",\n          e1.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n\n      // Should also die if we just add a shard\n      Exception e2 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.createShard(collectionName, \"shard1\")\n            .setNodeSet(deadNode)\n            .process(cluster.getSolrClient());\n      });\n\n      assertTrue(\"Should have gotten a message about shard not \",\n          e2.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n    }\n    finally {\n      cluster.startJettySolrRunner(jetty);\n    }\n  }\n\n","sourceOld":"  @Test\n  @ShardsFixed(num = 2)\n  public void testDownedShards() throws Exception {\n    String collectionName = \"TooManyReplicasWhenAddingDownedNode\";\n    CollectionAdminRequest.Create create = new CollectionAdminRequest.Create()\n        .setCollectionName(collectionName)\n        .setReplicationFactor(1)\n        .setMaxShardsPerNode(2)\n        .setStateFormat(2)\n        .setRouterName(\"implicit\")\n        .setShards(\"shardstart\");\n\n    NamedList<Object> request = create.process(cloudClient).getResponse();\n\n    assertTrue(\"Could not create the collection\", request.get(\"success\") != null);\n    try (SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT)) {\n\n      List<String> liveNodes = zkClient.getChildren(\"/live_nodes\", null, true);\n\n      // Shut down a Jetty, I really don't care which\n      JettySolrRunner downJetty = jettys.get(r.nextInt(2));\n\n      downJetty.stop();\n      List<String> liveNodesNow = null;\n      for (int idx = 0; idx < 150; ++idx) {\n        liveNodesNow = zkClient.getChildren(\"/live_nodes\", null, true);\n        if (liveNodesNow.size() != liveNodes.size()) break;\n        Thread.sleep(100);\n      }\n      List<String> deadNodes = new ArrayList<>(liveNodes);\n      assertTrue(\"Should be a downed node\", deadNodes.removeAll(liveNodesNow));\n      liveNodes.removeAll(deadNodes);\n\n      //OK, we've killed a node. Insure we get errors when we ask to create a replica or shard that involves it.\n      // First try adding a  replica to the downed node.\n      CollectionAdminRequest.AddReplica addReplicaNode = new CollectionAdminRequest.AddReplica()\n          .setCollectionName(collectionName)\n          .setShardName(\"shardstart\")\n          .setNode(deadNodes.get(0));\n\n      try {\n        addReplicaNode.process(cloudClient);\n        fail(\"Should have gotten an exception\");\n      } catch (HttpSolrClient.RemoteSolrException se) {\n        assertTrue(\"Should have gotten a message about shard not \",\n            se.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n      }\n\n      // Should also die if we just add a shard\n      CollectionAdminRequest.CreateShard createShard = new CollectionAdminRequest.CreateShard()\n          .setCollectionName(collectionName)\n          .setShardName(\"shard1\")\n          .setNodeSet(deadNodes.get(0));\n      try {\n        createShard.process(cloudClient);\n        fail(\"Should have gotten an exception\");\n      } catch (HttpSolrClient.RemoteSolrException se) {\n        assertTrue(\"Should have gotten a message about shard not \",\n            se.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n      }\n      //downJetty.start();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65a78c7aebe6b174f02f7c7a1b4e8647ed5ed73c","date":1512481565,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionTooManyReplicasTest#testDownedShards().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionTooManyReplicasTest#testDownedShards().mjava","sourceNew":"  @Test\n  public void testDownedShards() throws Exception {\n    String collectionName = \"TooManyReplicasWhenAddingDownedNode\";\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collectionName, \"conf\", \"shardstart\", 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n\n    // Shut down a Jetty, I really don't care which\n    JettySolrRunner jetty = cluster.getRandomJetty(random());\n    String deadNode = jetty.getBaseUrl().toString();\n    cluster.stopJettySolrRunner(jetty);\n\n    try {\n\n      // Adding a replica on a dead node should fail\n      Exception e1 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.addReplicaToShard(collectionName, \"shardstart\")\n            .setNode(deadNode)\n            .process(cluster.getSolrClient());\n      });\n      assertTrue(\"Should have gotten a message about shard not currently active: \" + e1.toString(),\n          e1.toString().contains(\"At least one of the node(s) specified [\" + deadNode + \"] are not currently active in\"));\n\n      // Should also die if we just add a shard\n      Exception e2 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.createShard(collectionName, \"shard1\")\n            .setNodeSet(deadNode)\n            .process(cluster.getSolrClient());\n      });\n\n      assertTrue(\"Should have gotten a message about shard not currently active: \" + e2.toString(),\n          e2.toString().contains(\"At least one of the node(s) specified [\" + deadNode + \"] are not currently active in\"));\n    }\n    finally {\n      cluster.startJettySolrRunner(jetty);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDownedShards() throws Exception {\n    String collectionName = \"TooManyReplicasWhenAddingDownedNode\";\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collectionName, \"conf\", \"shardstart\", 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n\n    // Shut down a Jetty, I really don't care which\n    JettySolrRunner jetty = cluster.getRandomJetty(random());\n    String deadNode = jetty.getBaseUrl().toString();\n    cluster.stopJettySolrRunner(jetty);\n\n    try {\n\n      // Adding a replica on a dead node should fail\n      Exception e1 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.addReplicaToShard(collectionName, \"shardstart\")\n            .setNode(deadNode)\n            .process(cluster.getSolrClient());\n      });\n      assertTrue(\"Should have gotten a message about shard not \",\n          e1.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n\n      // Should also die if we just add a shard\n      Exception e2 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.createShard(collectionName, \"shard1\")\n            .setNodeSet(deadNode)\n            .process(cluster.getSolrClient());\n      });\n\n      assertTrue(\"Should have gotten a message about shard not \",\n          e2.getMessage().contains(\"At least one of the node(s) specified are not currently active, no action taken.\"));\n    }\n    finally {\n      cluster.startJettySolrRunner(jetty);\n    }\n  }\n\n","bugFix":["a4efd3fffdd7acd625bb88e455c8097e17f75735"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionTooManyReplicasTest#testDownedShards().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionTooManyReplicasTest#testDownedShards().mjava","sourceNew":"  @Test\n  public void testDownedShards() throws Exception {\n    String collectionName = \"TooManyReplicasWhenAddingDownedNode\";\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collectionName, \"conf\", \"shardstart\", 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n\n    // Shut down a Jetty, I really don't care which\n    JettySolrRunner jetty = cluster.getRandomJetty(random());\n    String deadNode = jetty.getBaseUrl().toString();\n    cluster.stopJettySolrRunner(jetty);\n\n    try {\n\n      // Adding a replica on a dead node should fail\n      Exception e1 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.addReplicaToShard(collectionName, \"shardstart\")\n            .setNode(deadNode)\n            .process(cluster.getSolrClient());\n      });\n      assertTrue(\"Should have gotten a message about shard not currently active: \" + e1.toString(),\n          e1.toString().contains(\"At least one of the node(s) specified [\" + deadNode + \"] are not currently active in\"));\n\n      // Should also die if we just add a shard\n      Exception e2 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.createShard(collectionName, \"shard1\")\n            .setNodeSet(deadNode)\n            .process(cluster.getSolrClient());\n      });\n\n      assertTrue(\"Should have gotten a message about shard not currently active: \" + e2.toString(),\n          e2.toString().contains(\"At least one of the node(s) specified [\" + deadNode + \"] are not currently active in\"));\n    }\n    finally {\n      cluster.startJettySolrRunner(jetty);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDownedShards() throws Exception {\n    String collectionName = \"TooManyReplicasWhenAddingDownedNode\";\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collectionName, \"conf\", \"shardstart\", 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n\n    // Shut down a Jetty, I really don't care which\n    JettySolrRunner jetty = cluster.getRandomJetty(random());\n    String deadNode = jetty.getBaseUrl().toString();\n    cluster.stopJettySolrRunner(jetty);\n\n    try {\n\n      // Adding a replica on a dead node should fail\n      Exception e1 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.addReplicaToShard(collectionName, \"shardstart\")\n            .setNode(deadNode)\n            .process(cluster.getSolrClient());\n      });\n      assertTrue(\"Should have gotten a message about shard not currently active: \" + e1.toString(),\n          e1.toString().contains(\"At least one of the node(s) specified [\" + deadNode + \"] are not currently active in\"));\n\n      // Should also die if we just add a shard\n      Exception e2 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.createShard(collectionName, \"shard1\")\n            .setNodeSet(deadNode)\n            .process(cluster.getSolrClient());\n      });\n\n      assertTrue(\"Should have gotten a message about shard not currently active: \" + e2.toString(),\n          e2.toString().contains(\"At least one of the node(s) specified [\" + deadNode + \"] are not currently active in\"));\n    }\n    finally {\n      cluster.startJettySolrRunner(jetty);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionTooManyReplicasTest#testDownedShards().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionTooManyReplicasTest#testDownedShards().mjava","sourceNew":"  @Test\n  public void testDownedShards() throws Exception {\n    String collectionName = \"TooManyReplicasWhenAddingDownedNode\";\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collectionName, \"conf\", \"shardstart\", 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n\n    // Shut down a Jetty, I really don't care which\n    JettySolrRunner jetty = cluster.getRandomJetty(random());\n    String deadNode = jetty.getBaseUrl().toString();\n    cluster.stopJettySolrRunner(jetty);\n\n    try {\n\n      // Adding a replica on a dead node should fail\n      Exception e1 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.addReplicaToShard(collectionName, \"shardstart\")\n            .setNode(deadNode)\n            .process(cluster.getSolrClient());\n      });\n      assertTrue(\"Should have gotten a message about shard not currently active: \" + e1.toString(),\n          e1.toString().contains(\"At least one of the node(s) specified [\" + deadNode + \"] are not currently active in\"));\n\n      // Should also die if we just add a shard\n      Exception e2 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.createShard(collectionName, \"shard1\")\n            .setNodeSet(deadNode)\n            .process(cluster.getSolrClient());\n      });\n\n      assertTrue(\"Should have gotten a message about shard not currently active: \" + e2.toString(),\n          e2.toString().contains(\"At least one of the node(s) specified [\" + deadNode + \"] are not currently active in\"));\n    }\n    finally {\n      cluster.startJettySolrRunner(jetty);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDownedShards() throws Exception {\n    String collectionName = \"TooManyReplicasWhenAddingDownedNode\";\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collectionName, \"conf\", \"shardstart\", 1)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n\n    // Shut down a Jetty, I really don't care which\n    JettySolrRunner jetty = cluster.getRandomJetty(random());\n    String deadNode = jetty.getBaseUrl().toString();\n    cluster.stopJettySolrRunner(jetty);\n\n    try {\n\n      // Adding a replica on a dead node should fail\n      Exception e1 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.addReplicaToShard(collectionName, \"shardstart\")\n            .setNode(deadNode)\n            .process(cluster.getSolrClient());\n      });\n      assertTrue(\"Should have gotten a message about shard not currently active: \" + e1.toString(),\n          e1.toString().contains(\"At least one of the node(s) specified [\" + deadNode + \"] are not currently active in\"));\n\n      // Should also die if we just add a shard\n      Exception e2 = expectThrows(Exception.class, () -> {\n        CollectionAdminRequest.createShard(collectionName, \"shard1\")\n            .setNodeSet(deadNode)\n            .process(cluster.getSolrClient());\n      });\n\n      assertTrue(\"Should have gotten a message about shard not currently active: \" + e2.toString(),\n          e2.toString().contains(\"At least one of the node(s) specified [\" + deadNode + \"] are not currently active in\"));\n    }\n    finally {\n      cluster.startJettySolrRunner(jetty);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["3fd3cdfbce4b551bb8ca4678682a5a891d0890ca"],"b94236357aaa22b76c10629851fe4e376e0cea82":["65a78c7aebe6b174f02f7c7a1b4e8647ed5ed73c","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":["3fd3cdfbce4b551bb8ca4678682a5a891d0890ca","a4efd3fffdd7acd625bb88e455c8097e17f75735"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["65a78c7aebe6b174f02f7c7a1b4e8647ed5ed73c"],"3fd3cdfbce4b551bb8ca4678682a5a891d0890ca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"65a78c7aebe6b174f02f7c7a1b4e8647ed5ed73c":["a4efd3fffdd7acd625bb88e455c8097e17f75735"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","65a78c7aebe6b174f02f7c7a1b4e8647ed5ed73c"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3fd3cdfbce4b551bb8ca4678682a5a891d0890ca"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"3fd3cdfbce4b551bb8ca4678682a5a891d0890ca":["a4efd3fffdd7acd625bb88e455c8097e17f75735","59dce44d6a0b58c171de1d47ad8c0a75831f94fd"],"65a78c7aebe6b174f02f7c7a1b4e8647ed5ed73c":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}