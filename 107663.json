{"path":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testFailures().mjava","commits":[{"id":"5842a4edb3c2199b36886989b39d0da46b6f2e7b","date":1529637673,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testFailures().mjava","pathOld":"/dev/null","sourceNew":"  public void testFailures() throws Exception {\n    String payload = \"{ not-a-real-command: { param1: value1, param2: value2 } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"Unknown operation 'not-a-real-command'\");\n\n    payload = \"{ set-property: { update.autoCreateFields: false } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'update.autoCreateFields' is not an editable property\");\n    \n    payload = \"{ set-property: { updateHandler.autoCommit.maxDocs: false } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"Property updateHandler.autoCommit.maxDocs must be of Integer type\");\n\n    payload = \"{ unset-property: not-an-editable-property }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'[not-an-editable-property]' is not an editable property\");\n\n    for (String component : new String[] {\n        \"requesthandler\", \"searchcomponent\", \"initparams\", \"queryresponsewriter\", \"queryparser\",\n        \"valuesourceparser\", \"transformer\", \"updateprocessor\", \"queryconverter\", \"listener\", \"runtimelib\"}) {\n      for (String operation : new String[] { \"add\", \"update\" }) {\n        payload = \"{ \" + operation + \"-\" + component + \": { param1: value1 } }\";\n        runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'name' is a required field\");\n      }\n      payload = \"{ delete-\" + component + \": not-a-real-component-name }\";\n      runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"NO such \");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testFailures().mjava","pathOld":"/dev/null","sourceNew":"  public void testFailures() throws Exception {\n    String payload = \"{ not-a-real-command: { param1: value1, param2: value2 } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"Unknown operation 'not-a-real-command'\");\n\n    payload = \"{ set-property: { update.autoCreateFields: false } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'update.autoCreateFields' is not an editable property\");\n    \n    payload = \"{ set-property: { updateHandler.autoCommit.maxDocs: false } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"Property updateHandler.autoCommit.maxDocs must be of Integer type\");\n\n    payload = \"{ unset-property: not-an-editable-property }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'[not-an-editable-property]' is not an editable property\");\n\n    for (String component : new String[] {\n        \"requesthandler\", \"searchcomponent\", \"initparams\", \"queryresponsewriter\", \"queryparser\",\n        \"valuesourceparser\", \"transformer\", \"updateprocessor\", \"queryconverter\", \"listener\", \"runtimelib\"}) {\n      for (String operation : new String[] { \"add\", \"update\" }) {\n        payload = \"{ \" + operation + \"-\" + component + \": { param1: value1 } }\";\n        runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'name' is a required field\");\n      }\n      payload = \"{ delete-\" + component + \": not-a-real-component-name }\";\n      runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"NO such \");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testFailures().mjava","pathOld":"/dev/null","sourceNew":"  public void testFailures() throws Exception {\n    String payload = \"{ not-a-real-command: { param1: value1, param2: value2 } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"Unknown operation 'not-a-real-command'\");\n\n    payload = \"{ set-property: { update.autoCreateFields: false } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'update.autoCreateFields' is not an editable property\");\n    \n    payload = \"{ set-property: { updateHandler.autoCommit.maxDocs: false } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"Property updateHandler.autoCommit.maxDocs must be of Integer type\");\n\n    payload = \"{ unset-property: not-an-editable-property }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'[not-an-editable-property]' is not an editable property\");\n\n    for (String component : new String[] {\n        \"requesthandler\", \"searchcomponent\", \"initparams\", \"queryresponsewriter\", \"queryparser\",\n        \"valuesourceparser\", \"transformer\", \"updateprocessor\", \"queryconverter\", \"listener\", \"runtimelib\"}) {\n      for (String operation : new String[] { \"add\", \"update\" }) {\n        payload = \"{ \" + operation + \"-\" + component + \": { param1: value1 } }\";\n        runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'name' is a required field\");\n      }\n      payload = \"{ delete-\" + component + \": not-a-real-component-name }\";\n      runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"NO such \");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45a006bc9e441d2acafcb91a27ab04e38f3525b3","date":1596696372,"type":3,"author":"noblepaul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testFailures().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testFailures().mjava","sourceNew":"  public void testFailures() throws Exception {\n    String payload = \"{ not-a-real-command: { param1: value1, param2: value2 } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"Unknown operation 'not-a-real-command'\");\n\n    payload = \"{ set-property: { update.autoCreateFields: false } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'update.autoCreateFields' is not an editable property\");\n    \n    payload = \"{ set-property: { updateHandler.autoCommit.maxDocs: false } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"Property updateHandler.autoCommit.maxDocs must be of Integer type\");\n\n    payload = \"{ unset-property: not-an-editable-property }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'[not-an-editable-property]' is not an editable property\");\n\n    for (String component : new String[] {\n        \"requesthandler\", \"searchcomponent\", \"initparams\", \"queryresponsewriter\", \"queryparser\",\n        \"valuesourceparser\", \"transformer\", \"updateprocessor\", \"queryconverter\", \"listener\"}) {\n      for (String operation : new String[] { \"add\", \"update\" }) {\n        payload = \"{ \" + operation + \"-\" + component + \": { param1: value1 } }\";\n        runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'name' is a required field\");\n      }\n      payload = \"{ delete-\" + component + \": not-a-real-component-name }\";\n      runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"NO such \");\n    }\n  }\n\n","sourceOld":"  public void testFailures() throws Exception {\n    String payload = \"{ not-a-real-command: { param1: value1, param2: value2 } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"Unknown operation 'not-a-real-command'\");\n\n    payload = \"{ set-property: { update.autoCreateFields: false } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'update.autoCreateFields' is not an editable property\");\n    \n    payload = \"{ set-property: { updateHandler.autoCommit.maxDocs: false } }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"Property updateHandler.autoCommit.maxDocs must be of Integer type\");\n\n    payload = \"{ unset-property: not-an-editable-property }\";\n    runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'[not-an-editable-property]' is not an editable property\");\n\n    for (String component : new String[] {\n        \"requesthandler\", \"searchcomponent\", \"initparams\", \"queryresponsewriter\", \"queryparser\",\n        \"valuesourceparser\", \"transformer\", \"updateprocessor\", \"queryconverter\", \"listener\", \"runtimelib\"}) {\n      for (String operation : new String[] { \"add\", \"update\" }) {\n        payload = \"{ \" + operation + \"-\" + component + \": { param1: value1 } }\";\n        runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"'name' is a required field\");\n      }\n      payload = \"{ delete-\" + component + \": not-a-real-component-name }\";\n      runConfigCommandExpectFailure(restTestHarness, \"/config\", payload, \"NO such \");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5842a4edb3c2199b36886989b39d0da46b6f2e7b"],"45a006bc9e441d2acafcb91a27ab04e38f3525b3":["5842a4edb3c2199b36886989b39d0da46b6f2e7b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5842a4edb3c2199b36886989b39d0da46b6f2e7b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["45a006bc9e441d2acafcb91a27ab04e38f3525b3"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5842a4edb3c2199b36886989b39d0da46b6f2e7b"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"45a006bc9e441d2acafcb91a27ab04e38f3525b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","5842a4edb3c2199b36886989b39d0da46b6f2e7b","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"5842a4edb3c2199b36886989b39d0da46b6f2e7b":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","45a006bc9e441d2acafcb91a27ab04e38f3525b3","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}