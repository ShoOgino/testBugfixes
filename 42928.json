{"path":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadScoreQuery#testTermQuery().mjava","commits":[{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadScoreQuery#testTermQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadScoreQuery#testTermQuery().mjava","sourceNew":"  @Test\n  public void testTermQuery() throws IOException {\n\n    SpanTermQuery q = new SpanTermQuery(new Term(\"field\", \"eighteen\"));\n    for (PayloadFunction fn\n        : new PayloadFunction[]{ new AveragePayloadFunction(), new MaxPayloadFunction(), new MinPayloadFunction() }) {\n      checkQuery(q, fn, new int[]{ 118, 218, 18 },\n                        new float[] { 4.0f, 4.0f, 2.0f });\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermQuery() throws IOException {\n\n    SpanTermQuery q = new SpanTermQuery(new Term(\"field\", \"eighteen\"));\n    for (PayloadFunction fn\n        : new PayloadFunction[]{ new AveragePayloadFunction(), new MaxPayloadFunction(), new MinPayloadFunction() }) {\n      checkQuery(q, fn, new int[]{ 118, 218, 18 },\n                        new float[] { 4.0f, 4.0f, 2.0f });\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"]},"commit2Childs":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}