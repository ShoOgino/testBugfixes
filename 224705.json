{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","sourceNew":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    TopDocs hits = FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    double expected = hits.getMaxScore() * r.numDocs();\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","pathOld":"/dev/null","sourceNew":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","sourceNew":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","sourceNew":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","sourceNew":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","sourceNew":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cf250cb8fdff62f4b753866d44e5bf59bfd1616","date":1483789944,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","sourceNew":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, DoubleValuesSource.SCORES);\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testCountAndSumScore().mjava","sourceNew":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, DoubleValuesSource.SCORES);\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testCountAndSumScore() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    FacetsCollector.search(newSearcher(r), new MatchAllDocsQuery(), 10, fc);\n    \n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, fc);\n    Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader(\"$b\"), taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.doubleValue(), 1E-10);\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a1862266772deb28cdcb7d996b64d2177022687":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["2a1862266772deb28cdcb7d996b64d2177022687","9cf250cb8fdff62f4b753866d44e5bf59bfd1616"],"9cf250cb8fdff62f4b753866d44e5bf59bfd1616":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9cf250cb8fdff62f4b753866d44e5bf59bfd1616"]},"commit2Childs":{"2a1862266772deb28cdcb7d996b64d2177022687":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","9cf250cb8fdff62f4b753866d44e5bf59bfd1616"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["2a1862266772deb28cdcb7d996b64d2177022687"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"9cf250cb8fdff62f4b753866d44e5bf59bfd1616":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}