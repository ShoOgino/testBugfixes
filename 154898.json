{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(FacetsConfig,Filter,SimpleDrillDownQuery).mjava","commits":[{"id":"9fdb15e93058f718a65d564872aadbed5ca78296","date":1384720267,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(FacetsConfig,Filter,SimpleDrillDownQuery).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(Filter,SimpleDrillDownQuery).mjava","sourceNew":"  /** Used by DrillSideways */\n  SimpleDrillDownQuery(FacetsConfig config, Filter filter, SimpleDrillDownQuery other) {\n    query = new BooleanQuery(true); // disable coord\n\n    BooleanClause[] clauses = other.query.getClauses();\n    if (clauses.length == other.drillDownDims.size()) {\n      throw new IllegalArgumentException(\"cannot apply filter unless baseQuery isn't null; pass ConstantScoreQuery instead\");\n    }\n    assert clauses.length == 1+other.drillDownDims.size(): clauses.length + \" vs \" + (1+other.drillDownDims.size());\n    drillDownDims.putAll(other.drillDownDims);\n    query.add(new FilteredQuery(clauses[0].getQuery(), filter), Occur.MUST);\n    for(int i=1;i<clauses.length;i++) {\n      query.add(clauses[i].getQuery(), Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","sourceOld":"  /** Used by DrillSideways */\n  SimpleDrillDownQuery(Filter filter, SimpleDrillDownQuery other) {\n    query = new BooleanQuery(true); // disable coord\n\n    BooleanClause[] clauses = other.query.getClauses();\n    if (clauses.length == other.drillDownDims.size()) {\n      throw new IllegalArgumentException(\"cannot apply filter unless baseQuery isn't null; pass ConstantScoreQuery instead\");\n    }\n    assert clauses.length == 1+other.drillDownDims.size(): clauses.length + \" vs \" + (1+other.drillDownDims.size());\n    drillDownDims.putAll(other.drillDownDims);\n    query.add(new FilteredQuery(clauses[0].getQuery(), filter), Occur.MUST);\n    for(int i=1;i<clauses.length;i++) {\n      query.add(clauses[i].getQuery(), Occur.MUST);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Filter,DrillDownQuery).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(FacetsConfig,Filter,SimpleDrillDownQuery).mjava","sourceNew":"  /** Used by DrillSideways */\n  DrillDownQuery(FacetsConfig config, Filter filter, DrillDownQuery other) {\n    query = new BooleanQuery(true); // disable coord\n\n    BooleanClause[] clauses = other.query.getClauses();\n    if (clauses.length == other.drillDownDims.size()) {\n      throw new IllegalArgumentException(\"cannot apply filter unless baseQuery isn't null; pass ConstantScoreQuery instead\");\n    }\n    assert clauses.length == 1+other.drillDownDims.size(): clauses.length + \" vs \" + (1+other.drillDownDims.size());\n    drillDownDims.putAll(other.drillDownDims);\n    query.add(new FilteredQuery(clauses[0].getQuery(), filter), Occur.MUST);\n    for(int i=1;i<clauses.length;i++) {\n      query.add(clauses[i].getQuery(), Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","sourceOld":"  /** Used by DrillSideways */\n  SimpleDrillDownQuery(FacetsConfig config, Filter filter, SimpleDrillDownQuery other) {\n    query = new BooleanQuery(true); // disable coord\n\n    BooleanClause[] clauses = other.query.getClauses();\n    if (clauses.length == other.drillDownDims.size()) {\n      throw new IllegalArgumentException(\"cannot apply filter unless baseQuery isn't null; pass ConstantScoreQuery instead\");\n    }\n    assert clauses.length == 1+other.drillDownDims.size(): clauses.length + \" vs \" + (1+other.drillDownDims.size());\n    drillDownDims.putAll(other.drillDownDims);\n    query.add(new FilteredQuery(clauses[0].getQuery(), filter), Occur.MUST);\n    for(int i=1;i<clauses.length;i++) {\n      query.add(clauses[i].getQuery(), Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fdb15e93058f718a65d564872aadbed5ca78296":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["9fdb15e93058f718a65d564872aadbed5ca78296"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9fdb15e93058f718a65d564872aadbed5ca78296":["21d36d0db865f7b84026b447bec653469a6e66df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fdb15e93058f718a65d564872aadbed5ca78296","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}