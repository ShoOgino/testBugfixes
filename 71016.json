{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesFormat.Lucene41SimpleDocValuesProducer#getNumeric(FieldInfo,NumericEntry).mjava","commits":[{"id":"be442aa722f1c08c70ec5d9938c9f80a8138e627","date":1357613095,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesFormat.Lucene41SimpleDocValuesProducer#getNumeric(FieldInfo,NumericEntry).mjava","pathOld":"/dev/null","sourceNew":"    private NumericDocValues getNumeric(FieldInfo field, final NumericEntry entry) throws IOException {\n      // nocommit: what are we doing with clone?!\n      final IndexInput data = this.data.clone();\n      data.seek(entry.offset);\n      final PackedInts.Reader reader = PackedInts.getDirectReaderNoHeader(data, entry.header);\n      return new NumericDocValues() {\n        @Override\n        public long get(int docID) {\n          return entry.minValue + reader.get(docID);\n        }\n\n        @Override\n        public int size() {\n          return entry.header.getValueCount();\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68acf69be1b41192ae2278afc452bb66f6349cba","date":1357657311,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesFormat.Lucene41SimpleDocValuesProducer#getNumeric(FieldInfo,NumericEntry).mjava","sourceNew":null,"sourceOld":"    private NumericDocValues getNumeric(FieldInfo field, final NumericEntry entry) throws IOException {\n      // nocommit: what are we doing with clone?!\n      final IndexInput data = this.data.clone();\n      data.seek(entry.offset);\n      final PackedInts.Reader reader = PackedInts.getDirectReaderNoHeader(data, entry.header);\n      return new NumericDocValues() {\n        @Override\n        public long get(int docID) {\n          return entry.minValue + reader.get(docID);\n        }\n\n        @Override\n        public int size() {\n          return entry.header.getValueCount();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"68acf69be1b41192ae2278afc452bb66f6349cba":["be442aa722f1c08c70ec5d9938c9f80a8138e627"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be442aa722f1c08c70ec5d9938c9f80a8138e627":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"68acf69be1b41192ae2278afc452bb66f6349cba":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be442aa722f1c08c70ec5d9938c9f80a8138e627","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"be442aa722f1c08c70ec5d9938c9f80a8138e627":["68acf69be1b41192ae2278afc452bb66f6349cba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["68acf69be1b41192ae2278afc452bb66f6349cba","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}