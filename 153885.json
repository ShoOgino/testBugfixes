{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","sourceNew":"        private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 58\n            // try, line 59\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 59\n                // [, line 60\n                ket = cursor;\n                // substring, line 60\n                among_var = find_among_b(a_1, 3);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 60\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 62\n                        // delete, line 62\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            // [, line 65\n            ket = cursor;\n            // substring, line 65\n            among_var = find_among_b(a_2, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 65\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 66\n                    // <-, line 66\n                    slice_from(\"ss\");\n                    break;\n                case 2:\n                    // (, line 68\n                    // or, line 68\n                    lab1: do {\n                        v_2 = limit - cursor;\n                        lab2: do {\n                            // (, line 68\n                            // hop, line 68\n                            {\n                                int c = cursor - 2;\n                                if (limit_backward > c || c > limit)\n                                {\n                                    break lab2;\n                                }\n                                cursor = c;\n                            }\n                            // <-, line 68\n                            slice_from(\"i\");\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_2;\n                        // <-, line 68\n                        slice_from(\"ie\");\n                    } while (false);\n                    break;\n                case 3:\n                    // (, line 69\n                    // next, line 69\n                    if (cursor <= limit_backward)\n                    {\n                        return false;\n                    }\n                    cursor--;\n                    // gopast, line 69\n                    golab3: while(true)\n                    {\n                        lab4: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab4;\n                            }\n                            break golab3;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    // delete, line 69\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 58\n            // try, line 59\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 59\n                // [, line 60\n                ket = cursor;\n                // substring, line 60\n                among_var = find_among_b(a_1, 3);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 60\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 62\n                        // delete, line 62\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            // [, line 65\n            ket = cursor;\n            // substring, line 65\n            among_var = find_among_b(a_2, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 65\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 66\n                    // <-, line 66\n                    slice_from(\"ss\");\n                    break;\n                case 2:\n                    // (, line 68\n                    // or, line 68\n                    lab1: do {\n                        v_2 = limit - cursor;\n                        lab2: do {\n                            // (, line 68\n                            // hop, line 68\n                            {\n                                int c = cursor - 2;\n                                if (limit_backward > c || c > limit)\n                                {\n                                    break lab2;\n                                }\n                                cursor = c;\n                            }\n                            // <-, line 68\n                            slice_from(\"i\");\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_2;\n                        // <-, line 68\n                        slice_from(\"ie\");\n                    } while (false);\n                    break;\n                case 3:\n                    // (, line 69\n                    // next, line 69\n                    if (cursor <= limit_backward)\n                    {\n                        return false;\n                    }\n                    cursor--;\n                    // gopast, line 69\n                    golab3: while(true)\n                    {\n                        lab4: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab4;\n                            }\n                            break golab3;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    // delete, line 69\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","sourceNew":"                private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n                    // (, line 58\n                    // try, line 59\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 59\n                        // [, line 60\n                        ket = cursor;\n                        // substring, line 60\n                        among_var = find_among_b(a_1, 3);\n                        if (among_var == 0)\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        // ], line 60\n                        bra = cursor;\n                        switch(among_var) {\n                            case 0:\n                                cursor = limit - v_1;\n                                break lab0;\n                            case 1:\n                                // (, line 62\n                                // delete, line 62\n                                slice_del();\n                                break;\n                        }\n                    } while (false);\n                    // [, line 65\n                    ket = cursor;\n                    // substring, line 65\n                    among_var = find_among_b(a_2, 6);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 65\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 66\n                            // <-, line 66\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 68\n                            // or, line 68\n                            lab1: do {\n                                v_2 = limit - cursor;\n                                lab2: do {\n                                    // (, line 68\n                                    // hop, line 68\n                                    {\n                                        int c = cursor - 2;\n                                        if (limit_backward > c || c > limit)\n                                        {\n                                            break lab2;\n                                        }\n                                        cursor = c;\n                                    }\n                                    // <-, line 68\n                                    slice_from(\"i\");\n                                    break lab1;\n                                } while (false);\n                                cursor = limit - v_2;\n                                // <-, line 68\n                                slice_from(\"ie\");\n                            } while (false);\n                            break;\n                        case 3:\n                            // (, line 69\n                            // next, line 69\n                            if (cursor <= limit_backward)\n                            {\n                                return false;\n                            }\n                            cursor--;\n                            // gopast, line 69\n                            golab3: while(true)\n                            {\n                                lab4: do {\n                                    if (!(in_grouping_b(g_v, 97, 121)))\n                                    {\n                                        break lab4;\n                                    }\n                                    break golab3;\n                                } while (false);\n                                if (cursor <= limit_backward)\n                                {\n                                    return false;\n                                }\n                                cursor--;\n                            }\n                            // delete, line 69\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 58\n            // try, line 59\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 59\n                // [, line 60\n                ket = cursor;\n                // substring, line 60\n                among_var = find_among_b(a_1, 3);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 60\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 62\n                        // delete, line 62\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            // [, line 65\n            ket = cursor;\n            // substring, line 65\n            among_var = find_among_b(a_2, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 65\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 66\n                    // <-, line 66\n                    slice_from(\"ss\");\n                    break;\n                case 2:\n                    // (, line 68\n                    // or, line 68\n                    lab1: do {\n                        v_2 = limit - cursor;\n                        lab2: do {\n                            // (, line 68\n                            // hop, line 68\n                            {\n                                int c = cursor - 2;\n                                if (limit_backward > c || c > limit)\n                                {\n                                    break lab2;\n                                }\n                                cursor = c;\n                            }\n                            // <-, line 68\n                            slice_from(\"i\");\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_2;\n                        // <-, line 68\n                        slice_from(\"ie\");\n                    } while (false);\n                    break;\n                case 3:\n                    // (, line 69\n                    // next, line 69\n                    if (cursor <= limit_backward)\n                    {\n                        return false;\n                    }\n                    cursor--;\n                    // gopast, line 69\n                    golab3: while(true)\n                    {\n                        lab4: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab4;\n                            }\n                            break golab3;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    // delete, line 69\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","sourceNew":"                private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n                    // (, line 58\n                    // try, line 59\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 59\n                        // [, line 60\n                        ket = cursor;\n                        // substring, line 60\n                        among_var = find_among_b(a_1, 3);\n                        if (among_var == 0)\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        // ], line 60\n                        bra = cursor;\n                        switch(among_var) {\n                            case 0:\n                                cursor = limit - v_1;\n                                break lab0;\n                            case 1:\n                                // (, line 62\n                                // delete, line 62\n                                slice_del();\n                                break;\n                        }\n                    } while (false);\n                    // [, line 65\n                    ket = cursor;\n                    // substring, line 65\n                    among_var = find_among_b(a_2, 6);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 65\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 66\n                            // <-, line 66\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 68\n                            // or, line 68\n                            lab1: do {\n                                v_2 = limit - cursor;\n                                lab2: do {\n                                    // (, line 68\n                                    // hop, line 68\n                                    {\n                                        int c = cursor - 2;\n                                        if (limit_backward > c || c > limit)\n                                        {\n                                            break lab2;\n                                        }\n                                        cursor = c;\n                                    }\n                                    // <-, line 68\n                                    slice_from(\"i\");\n                                    break lab1;\n                                } while (false);\n                                cursor = limit - v_2;\n                                // <-, line 68\n                                slice_from(\"ie\");\n                            } while (false);\n                            break;\n                        case 3:\n                            // (, line 69\n                            // next, line 69\n                            if (cursor <= limit_backward)\n                            {\n                                return false;\n                            }\n                            cursor--;\n                            // gopast, line 69\n                            golab3: while(true)\n                            {\n                                lab4: do {\n                                    if (!(in_grouping_b(g_v, 97, 121)))\n                                    {\n                                        break lab4;\n                                    }\n                                    break golab3;\n                                } while (false);\n                                if (cursor <= limit_backward)\n                                {\n                                    return false;\n                                }\n                                cursor--;\n                            }\n                            // delete, line 69\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 58\n            // try, line 59\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 59\n                // [, line 60\n                ket = cursor;\n                // substring, line 60\n                among_var = find_among_b(a_1, 3);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 60\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 62\n                        // delete, line 62\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            // [, line 65\n            ket = cursor;\n            // substring, line 65\n            among_var = find_among_b(a_2, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 65\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 66\n                    // <-, line 66\n                    slice_from(\"ss\");\n                    break;\n                case 2:\n                    // (, line 68\n                    // or, line 68\n                    lab1: do {\n                        v_2 = limit - cursor;\n                        lab2: do {\n                            // (, line 68\n                            // hop, line 68\n                            {\n                                int c = cursor - 2;\n                                if (limit_backward > c || c > limit)\n                                {\n                                    break lab2;\n                                }\n                                cursor = c;\n                            }\n                            // <-, line 68\n                            slice_from(\"i\");\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_2;\n                        // <-, line 68\n                        slice_from(\"ie\");\n                    } while (false);\n                    break;\n                case 3:\n                    // (, line 69\n                    // next, line 69\n                    if (cursor <= limit_backward)\n                    {\n                        return false;\n                    }\n                    cursor--;\n                    // gopast, line 69\n                    golab3: while(true)\n                    {\n                        lab4: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab4;\n                            }\n                            break golab3;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    // delete, line 69\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","sourceNew":"                private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n                    // (, line 58\n                    // try, line 59\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 59\n                        // [, line 60\n                        ket = cursor;\n                        // substring, line 60\n                        among_var = find_among_b(a_1, 3);\n                        if (among_var == 0)\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        // ], line 60\n                        bra = cursor;\n                        switch(among_var) {\n                            case 0:\n                                cursor = limit - v_1;\n                                break lab0;\n                            case 1:\n                                // (, line 62\n                                // delete, line 62\n                                slice_del();\n                                break;\n                        }\n                    } while (false);\n                    // [, line 65\n                    ket = cursor;\n                    // substring, line 65\n                    among_var = find_among_b(a_2, 6);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 65\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 66\n                            // <-, line 66\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 68\n                            // or, line 68\n                            lab1: do {\n                                v_2 = limit - cursor;\n                                lab2: do {\n                                    // (, line 68\n                                    // hop, line 68\n                                    {\n                                        int c = cursor - 2;\n                                        if (limit_backward > c || c > limit)\n                                        {\n                                            break lab2;\n                                        }\n                                        cursor = c;\n                                    }\n                                    // <-, line 68\n                                    slice_from(\"i\");\n                                    break lab1;\n                                } while (false);\n                                cursor = limit - v_2;\n                                // <-, line 68\n                                slice_from(\"ie\");\n                            } while (false);\n                            break;\n                        case 3:\n                            // (, line 69\n                            // next, line 69\n                            if (cursor <= limit_backward)\n                            {\n                                return false;\n                            }\n                            cursor--;\n                            // gopast, line 69\n                            golab3: while(true)\n                            {\n                                lab4: do {\n                                    if (!(in_grouping_b(g_v, 97, 121)))\n                                    {\n                                        break lab4;\n                                    }\n                                    break golab3;\n                                } while (false);\n                                if (cursor <= limit_backward)\n                                {\n                                    return false;\n                                }\n                                cursor--;\n                            }\n                            // delete, line 69\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 58\n            // try, line 59\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 59\n                // [, line 60\n                ket = cursor;\n                // substring, line 60\n                among_var = find_among_b(a_1, 3);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 60\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 62\n                        // delete, line 62\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            // [, line 65\n            ket = cursor;\n            // substring, line 65\n            among_var = find_among_b(a_2, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 65\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 66\n                    // <-, line 66\n                    slice_from(\"ss\");\n                    break;\n                case 2:\n                    // (, line 68\n                    // or, line 68\n                    lab1: do {\n                        v_2 = limit - cursor;\n                        lab2: do {\n                            // (, line 68\n                            // hop, line 68\n                            {\n                                int c = cursor - 2;\n                                if (limit_backward > c || c > limit)\n                                {\n                                    break lab2;\n                                }\n                                cursor = c;\n                            }\n                            // <-, line 68\n                            slice_from(\"i\");\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_2;\n                        // <-, line 68\n                        slice_from(\"ie\");\n                    } while (false);\n                    break;\n                case 3:\n                    // (, line 69\n                    // next, line 69\n                    if (cursor <= limit_backward)\n                    {\n                        return false;\n                    }\n                    cursor--;\n                    // gopast, line 69\n                    golab3: while(true)\n                    {\n                        lab4: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab4;\n                            }\n                            break golab3;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    // delete, line 69\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","sourceNew":"private boolean r_Step_1a() {\n  int among_var;\n  int v_1 = limit - cursor;\n  lab0: {\n    ket = cursor;\n    if (find_among_b(a_1) == 0)\n    {\n      cursor = limit - v_1;\n      break lab0;\n    }\n    bra = cursor;\n    slice_del();\n  }\n  ket = cursor;\n  among_var = find_among_b(a_2);\n  if (among_var == 0)\n  {\n    return false;\n  }\n  bra = cursor;\n  switch (among_var) {\n    case 1:\n      slice_from(\"ss\");\n      break;\n    case 2:\n      lab1: {\n        int v_2 = limit - cursor;\n        lab2: {\n          {\n            int c = cursor - 2;\n            if (limit_backward > c || c > limit)\n            {\n              break lab2;\n            }\n            cursor = c;\n          }\n          slice_from(\"i\");\n          break lab1;\n        }\n        cursor = limit - v_2;\n        slice_from(\"ie\");\n      }\n      break;\n    case 3:\n      if (cursor <= limit_backward)\n      {\n        return false;\n      }\n      cursor--;\n      golab3: while(true)\n      {\n        lab4: {\n          if (!(in_grouping_b(g_v, 97, 121)))\n          {\n            break lab4;\n          }\n          break golab3;\n        }\n        if (cursor <= limit_backward)\n        {\n          return false;\n        }\n        cursor--;\n      }\n      slice_del();\n      break;\n  }\n  return true;\n}\n\n","sourceOld":"                private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n                    // (, line 58\n                    // try, line 59\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 59\n                        // [, line 60\n                        ket = cursor;\n                        // substring, line 60\n                        among_var = find_among_b(a_1, 3);\n                        if (among_var == 0)\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        // ], line 60\n                        bra = cursor;\n                        switch(among_var) {\n                            case 0:\n                                cursor = limit - v_1;\n                                break lab0;\n                            case 1:\n                                // (, line 62\n                                // delete, line 62\n                                slice_del();\n                                break;\n                        }\n                    } while (false);\n                    // [, line 65\n                    ket = cursor;\n                    // substring, line 65\n                    among_var = find_among_b(a_2, 6);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 65\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 66\n                            // <-, line 66\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 68\n                            // or, line 68\n                            lab1: do {\n                                v_2 = limit - cursor;\n                                lab2: do {\n                                    // (, line 68\n                                    // hop, line 68\n                                    {\n                                        int c = cursor - 2;\n                                        if (limit_backward > c || c > limit)\n                                        {\n                                            break lab2;\n                                        }\n                                        cursor = c;\n                                    }\n                                    // <-, line 68\n                                    slice_from(\"i\");\n                                    break lab1;\n                                } while (false);\n                                cursor = limit - v_2;\n                                // <-, line 68\n                                slice_from(\"ie\");\n                            } while (false);\n                            break;\n                        case 3:\n                            // (, line 69\n                            // next, line 69\n                            if (cursor <= limit_backward)\n                            {\n                                return false;\n                            }\n                            cursor--;\n                            // gopast, line 69\n                            golab3: while(true)\n                            {\n                                lab4: do {\n                                    if (!(in_grouping_b(g_v, 97, 121)))\n                                    {\n                                        break lab4;\n                                    }\n                                    break golab3;\n                                } while (false);\n                                if (cursor <= limit_backward)\n                                {\n                                    return false;\n                                }\n                                cursor--;\n                            }\n                            // delete, line 69\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}