{"path":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/src/test/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = SolrTestCaseJ4.getFile(\"solr/conf\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = SolrTestCaseJ4.getFile(\"solr/conf\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/src/test/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = SolrTestCaseJ4.getFile(\"solr/conf\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = SolrTestCaseJ4.getFile(\"solr/conf\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/src/test/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = SolrTestCaseJ4.getFile(\"solr/conf\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = SolrTestCaseJ4.getFile(\"solr/conf\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc14a4915657cd45ef08c1055ab96243f76fc86","date":1311359188,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","sourceNew":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File file;\n    try {\n      file = new File(\"solr/conf\");\n      if (!file.exists()) {\n        file = new File(Thread.currentThread().getContextClassLoader().getResource(\"solr/conf\").toURI());\n      }\n    } catch (Exception e) {\n      // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n      file = new File(\".\");\n    }\n    File base = file.getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File base = SolrTestCaseJ4.getFile(\"solr/conf\").getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":["82f3f6e1a1e11b4620e73bf779193437428d9374"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"82f3f6e1a1e11b4620e73bf779193437428d9374","date":1370282281,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","sourceNew":"  /**\n   * Ugly, ugly hack to determine the example home without depending on the CWD\n   * this is needed for example/multicore tests which reside outside the classpath.\n   * if the source home can't be determined, this method returns null.\n   */\n  static String determineSourceHome() {\n    try {\n      File file;\n      try {\n        file = new File(\"solr/conf\");\n        if (!file.exists()) {\n          file = new File(Thread.currentThread().getContextClassLoader().getResource(\"solr/conf\").toURI());\n        }\n      } catch (Exception e) {\n        // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n        file = new File(\".\");\n      }\n      File base = file.getAbsoluteFile();\n      while (!(new File(base, \"solr/CHANGES.txt\").exists()) && null != base) {\n        base = base.getParentFile();\n      }\n      return (null == base) ? null : new File(base, \"solr/\").getAbsolutePath();\n    } catch (RuntimeException e) {\n      // all bets are off\n      return null;\n    }\n  }\n\n","sourceOld":"  static String determineSourceHome() {\n    // ugly, ugly hack to determine the example home without depending on the CWD\n    // this is needed for example/multicore tests which reside outside the classpath\n    File file;\n    try {\n      file = new File(\"solr/conf\");\n      if (!file.exists()) {\n        file = new File(Thread.currentThread().getContextClassLoader().getResource(\"solr/conf\").toURI());\n      }\n    } catch (Exception e) {\n      // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n      file = new File(\".\");\n    }\n    File base = file.getAbsoluteFile();\n    while (!new File(base, \"solr/CHANGES.txt\").exists()) {\n      base = base.getParentFile();\n    }\n    return new File(base, \"solr/\").getAbsolutePath();\n  }\n\n","bugFix":["3cc14a4915657cd45ef08c1055ab96243f76fc86","85e42ae02aedcd775cc14af2a510f707dbe60a39"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1b668fc62d62dd2bb123a1cb9b37ce4d9a8c8f6","date":1485882527,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","sourceNew":"  /**\n   * Ugly, ugly hack to determine the example home without depending on the CWD\n   * this is needed for example/multicore tests which reside outside the classpath.\n   * if the source home can't be determined, this method returns null.\n   */\n  static String determineSourceHome() {\n    try {\n      File file;\n      try {\n        file = new File(\"solr/conf\");\n        if (!file.exists()) {\n          file = new File(Thread.currentThread().getContextClassLoader().getResource(\"solr/conf\").toURI());\n        }\n      } catch (Exception e) {\n        // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n        file = new File(System.getProperty(\"tests.src.home\", \".\"));\n      }\n      File base = file.getAbsoluteFile();\n      while (!(new File(base, \"solr/CHANGES.txt\").exists()) && null != base) {\n        base = base.getParentFile();\n      }\n      return (null == base) ? null : new File(base, \"solr/\").getAbsolutePath();\n    } catch (RuntimeException e) {\n      // all bets are off\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Ugly, ugly hack to determine the example home without depending on the CWD\n   * this is needed for example/multicore tests which reside outside the classpath.\n   * if the source home can't be determined, this method returns null.\n   */\n  static String determineSourceHome() {\n    try {\n      File file;\n      try {\n        file = new File(\"solr/conf\");\n        if (!file.exists()) {\n          file = new File(Thread.currentThread().getContextClassLoader().getResource(\"solr/conf\").toURI());\n        }\n      } catch (Exception e) {\n        // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n        file = new File(\".\");\n      }\n      File base = file.getAbsoluteFile();\n      while (!(new File(base, \"solr/CHANGES.txt\").exists()) && null != base) {\n        base = base.getParentFile();\n      }\n      return (null == base) ? null : new File(base, \"solr/\").getAbsolutePath();\n    } catch (RuntimeException e) {\n      // all bets are off\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","sourceNew":"  /**\n   * Ugly, ugly hack to determine the example home without depending on the CWD\n   * this is needed for example/multicore tests which reside outside the classpath.\n   * if the source home can't be determined, this method returns null.\n   */\n  static String determineSourceHome() {\n    try {\n      File file;\n      try {\n        file = new File(\"solr/conf\");\n        if (!file.exists()) {\n          file = new File(Thread.currentThread().getContextClassLoader().getResource(\"solr/conf\").toURI());\n        }\n      } catch (Exception e) {\n        // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n        file = new File(System.getProperty(\"tests.src.home\", \".\"));\n      }\n      File base = file.getAbsoluteFile();\n      while (!(new File(base, \"solr/CHANGES.txt\").exists()) && null != base) {\n        base = base.getParentFile();\n      }\n      return (null == base) ? null : new File(base, \"solr/\").getAbsolutePath();\n    } catch (RuntimeException e) {\n      // all bets are off\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Ugly, ugly hack to determine the example home without depending on the CWD\n   * this is needed for example/multicore tests which reside outside the classpath.\n   * if the source home can't be determined, this method returns null.\n   */\n  static String determineSourceHome() {\n    try {\n      File file;\n      try {\n        file = new File(\"solr/conf\");\n        if (!file.exists()) {\n          file = new File(Thread.currentThread().getContextClassLoader().getResource(\"solr/conf\").toURI());\n        }\n      } catch (Exception e) {\n        // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n        file = new File(\".\");\n      }\n      File base = file.getAbsoluteFile();\n      while (!(new File(base, \"solr/CHANGES.txt\").exists()) && null != base) {\n        base = base.getParentFile();\n      }\n      return (null == base) ? null : new File(base, \"solr/\").getAbsolutePath();\n    } catch (RuntimeException e) {\n      // all bets are off\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a2748831fb25b0e9d5a4c315047bf877c887460","date":1498155650,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","sourceNew":"  /**\n   * Ugly, ugly hack to determine the example home without depending on the CWD\n   * this is needed for example/multicore tests which reside outside the classpath.\n   * if the source home can't be determined, this method returns null.\n   */\n  static String determineSourceHome() {\n    try {\n      File file;\n      try {\n        file = new File(\"solr/conf\");\n        if (!file.exists()) {\n          file = new File(ExternalPaths.class.getClassLoader().getResource(\"solr/conf\").toURI());\n        }\n      } catch (Exception e) {\n        // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n        file = new File(System.getProperty(\"tests.src.home\", \".\"));\n      }\n      File base = file.getAbsoluteFile();\n      while (!(new File(base, \"solr/CHANGES.txt\").exists()) && null != base) {\n        base = base.getParentFile();\n      }\n      return (null == base) ? null : new File(base, \"solr/\").getAbsolutePath();\n    } catch (RuntimeException e) {\n      // all bets are off\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Ugly, ugly hack to determine the example home without depending on the CWD\n   * this is needed for example/multicore tests which reside outside the classpath.\n   * if the source home can't be determined, this method returns null.\n   */\n  static String determineSourceHome() {\n    try {\n      File file;\n      try {\n        file = new File(\"solr/conf\");\n        if (!file.exists()) {\n          file = new File(Thread.currentThread().getContextClassLoader().getResource(\"solr/conf\").toURI());\n        }\n      } catch (Exception e) {\n        // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n        file = new File(System.getProperty(\"tests.src.home\", \".\"));\n      }\n      File base = file.getAbsoluteFile();\n      while (!(new File(base, \"solr/CHANGES.txt\").exists()) && null != base) {\n        base = base.getParentFile();\n      }\n      return (null == base) ? null : new File(base, \"solr/\").getAbsolutePath();\n    } catch (RuntimeException e) {\n      // all bets are off\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","sourceNew":"  /**\n   * Ugly, ugly hack to determine the example home without depending on the CWD\n   * this is needed for example/multicore tests which reside outside the classpath.\n   * if the source home can't be determined, this method returns null.\n   */\n  static String determineSourceHome() {\n    try {\n      File file;\n      try {\n        file = new File(\"solr/conf\");\n        if (!file.exists()) {\n          file = new File(ExternalPaths.class.getClassLoader().getResource(\"solr/conf\").toURI());\n        }\n      } catch (Exception e) {\n        // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n        file = new File(System.getProperty(\"tests.src.home\", \".\"));\n      }\n      File base = file.getAbsoluteFile();\n      while (!(new File(base, \"solr/CHANGES.txt\").exists()) && null != base) {\n        base = base.getParentFile();\n      }\n      return (null == base) ? null : new File(base, \"solr/\").getAbsolutePath();\n    } catch (RuntimeException e) {\n      // all bets are off\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Ugly, ugly hack to determine the example home without depending on the CWD\n   * this is needed for example/multicore tests which reside outside the classpath.\n   * if the source home can't be determined, this method returns null.\n   */\n  static String determineSourceHome() {\n    try {\n      File file;\n      try {\n        file = new File(\"solr/conf\");\n        if (!file.exists()) {\n          file = new File(Thread.currentThread().getContextClassLoader().getResource(\"solr/conf\").toURI());\n        }\n      } catch (Exception e) {\n        // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n        file = new File(System.getProperty(\"tests.src.home\", \".\"));\n      }\n      File base = file.getAbsoluteFile();\n      while (!(new File(base, \"solr/CHANGES.txt\").exists()) && null != base) {\n        base = base.getParentFile();\n      }\n      return (null == base) ? null : new File(base, \"solr/\").getAbsolutePath();\n    } catch (RuntimeException e) {\n      // all bets are off\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/ExternalPaths#determineSourceHome().mjava","sourceNew":"  /**\n   * Ugly, ugly hack to determine the example home without depending on the CWD\n   * this is needed for example/multicore tests which reside outside the classpath.\n   * if the source home can't be determined, this method returns null.\n   */\n  static String determineSourceHome() {\n    try {\n      File file;\n      try {\n        file = new File(\"solr/conf\");\n        if (!file.exists()) {\n          file = new File(ExternalPaths.class.getClassLoader().getResource(\"solr/conf\").toURI());\n        }\n      } catch (Exception e) {\n        // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n        file = new File(System.getProperty(\"tests.src.home\", \".\"));\n      }\n      File base = file.getAbsoluteFile();\n      while (!(new File(base, \"solr/CHANGES.txt\").exists()) && null != base) {\n        base = base.getParentFile();\n      }\n      return (null == base) ? null : new File(base, \"solr/\").getAbsolutePath();\n    } catch (RuntimeException e) {\n      // all bets are off\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Ugly, ugly hack to determine the example home without depending on the CWD\n   * this is needed for example/multicore tests which reside outside the classpath.\n   * if the source home can't be determined, this method returns null.\n   */\n  static String determineSourceHome() {\n    try {\n      File file;\n      try {\n        file = new File(\"solr/conf\");\n        if (!file.exists()) {\n          file = new File(Thread.currentThread().getContextClassLoader().getResource(\"solr/conf\").toURI());\n        }\n      } catch (Exception e) {\n        // If there is no \"solr/conf\" in the classpath, fall back to searching from the current directory.\n        file = new File(System.getProperty(\"tests.src.home\", \".\"));\n      }\n      File base = file.getAbsoluteFile();\n      while (!(new File(base, \"solr/CHANGES.txt\").exists()) && null != base) {\n        base = base.getParentFile();\n      }\n      return (null == base) ? null : new File(base, \"solr/\").getAbsolutePath();\n    } catch (RuntimeException e) {\n      // all bets are off\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"82f3f6e1a1e11b4620e73bf779193437428d9374":["3cc14a4915657cd45ef08c1055ab96243f76fc86"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"5a2748831fb25b0e9d5a4c315047bf877c887460":["c1b668fc62d62dd2bb123a1cb9b37ce4d9a8c8f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["82f3f6e1a1e11b4620e73bf779193437428d9374","c1b668fc62d62dd2bb123a1cb9b37ce4d9a8c8f6"],"3cc14a4915657cd45ef08c1055ab96243f76fc86":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["c1b668fc62d62dd2bb123a1cb9b37ce4d9a8c8f6","5a2748831fb25b0e9d5a4c315047bf877c887460"],"28288370235ed02234a64753cdbf0c6ec096304a":["c1b668fc62d62dd2bb123a1cb9b37ce4d9a8c8f6","5a2748831fb25b0e9d5a4c315047bf877c887460"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"c1b668fc62d62dd2bb123a1cb9b37ce4d9a8c8f6":["82f3f6e1a1e11b4620e73bf779193437428d9374"]},"commit2Childs":{"82f3f6e1a1e11b4620e73bf779193437428d9374":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","c1b668fc62d62dd2bb123a1cb9b37ce4d9a8c8f6"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["3cc14a4915657cd45ef08c1055ab96243f76fc86"],"5a2748831fb25b0e9d5a4c315047bf877c887460":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"3cc14a4915657cd45ef08c1055ab96243f76fc86":["82f3f6e1a1e11b4620e73bf779193437428d9374"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c1b668fc62d62dd2bb123a1cb9b37ce4d9a8c8f6":["5a2748831fb25b0e9d5a4c315047bf877c887460","7c3523a0ab04c3002eee3896c75ea5f10f388bcc","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","a258fbb26824fd104ed795e5d9033d2d040049ee","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}