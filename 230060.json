{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest#testUnigrams().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest#testUnigrams().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest#testUnigrams().mjava","sourceNew":"  public void testUnigrams() throws Exception {\n    NGramTokenizer tokenizer = new NGramTokenizer(input, 1, 1);\n    assertTokenStreamContents(tokenizer, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5}, 5 /* abcde */);\n  }\n\n","sourceOld":"  public void testUnigrams() throws Exception {\n    NGramTokenizer tokenizer = new NGramTokenizer(input, 1, 1);\n    assertTokenStreamContents(tokenizer, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5}, 5 /* abcde */);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c807c4005aae1acaf5cebc9af40883985fb89a8","date":1366974206,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest#testUnigrams().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest#testUnigrams().mjava","sourceNew":"  public void testUnigrams() throws Exception {\n    NGramTokenizer tokenizer = new NGramTokenizer(TEST_VERSION_CURRENT, input, 1, 1);\n    assertTokenStreamContents(tokenizer, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5}, 5 /* abcde */);\n  }\n\n","sourceOld":"  public void testUnigrams() throws Exception {\n    NGramTokenizer tokenizer = new NGramTokenizer(input, 1, 1);\n    assertTokenStreamContents(tokenizer, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5}, 5 /* abcde */);\n  }\n\n","bugFix":["1a6997833904932b5332aede01bfd0f7ce4df318"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest#testUnigrams().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest#testUnigrams().mjava","sourceNew":"  public void testUnigrams() throws Exception {\n    NGramTokenizer tokenizer = new NGramTokenizer(TEST_VERSION_CURRENT, 1, 1);\n    tokenizer.setReader(input);\n    assertTokenStreamContents(tokenizer, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5}, 5 /* abcde */);\n  }\n\n","sourceOld":"  public void testUnigrams() throws Exception {\n    NGramTokenizer tokenizer = new NGramTokenizer(TEST_VERSION_CURRENT, input, 1, 1);\n    assertTokenStreamContents(tokenizer, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5}, 5 /* abcde */);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest#testUnigrams().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest#testUnigrams().mjava","sourceNew":"  public void testUnigrams() throws Exception {\n    NGramTokenizer tokenizer = new NGramTokenizer(1, 1);\n    tokenizer.setReader(input);\n    assertTokenStreamContents(tokenizer, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5}, 5 /* abcde */);\n  }\n\n","sourceOld":"  public void testUnigrams() throws Exception {\n    NGramTokenizer tokenizer = new NGramTokenizer(TEST_VERSION_CURRENT, 1, 1);\n    tokenizer.setReader(input);\n    assertTokenStreamContents(tokenizer, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5}, 5 /* abcde */);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["4c807c4005aae1acaf5cebc9af40883985fb89a8"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4c807c4005aae1acaf5cebc9af40883985fb89a8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["379db3ad24c4f0214f30a122265a6d6be003a99d"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4c807c4005aae1acaf5cebc9af40883985fb89a8"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4c807c4005aae1acaf5cebc9af40883985fb89a8":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}