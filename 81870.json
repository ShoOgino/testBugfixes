{"path":"lucene/core/src/java/org/apache/lucene/index/FilterMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","commits":[{"id":"6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8","date":1523648719,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FilterMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicyWrapper#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","sourceNew":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos, int maxSegmentCount,\n      Map<SegmentCommitInfo,Boolean> segmentsToMerge, IndexWriter writer) throws IOException {\n    return in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, writer);\n  }\n\n","sourceOld":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos, int maxSegmentCount,\n      Map<SegmentCommitInfo,Boolean> segmentsToMerge, IndexWriter writer) throws IOException {\n    return in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, writer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d28f215464f76024caf026606f8ea51a5319c53","date":1527226629,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FilterMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],MergeContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FilterMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","sourceNew":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos, int maxSegmentCount,\n                                             Map<SegmentCommitInfo,Boolean> segmentsToMerge, MergeContext mergeContext) throws IOException {\n    return in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, mergeContext);\n  }\n\n","sourceOld":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos, int maxSegmentCount,\n      Map<SegmentCommitInfo,Boolean> segmentsToMerge, IndexWriter writer) throws IOException {\n    return in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, writer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d28f215464f76024caf026606f8ea51a5319c53":["6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d28f215464f76024caf026606f8ea51a5319c53"]},"commit2Childs":{"6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8":["1d28f215464f76024caf026606f8ea51a5319c53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8"],"1d28f215464f76024caf026606f8ea51a5319c53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}