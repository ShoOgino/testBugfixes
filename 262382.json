{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestStressIndexing2#testRandom().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestStressIndexing2#testRandom().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestStressIndexing2#testRandom().mjava","sourceNew":"  public void testRandom() throws Throwable {\n    r = newRandom();\n    Directory dir1 = new MockRAMDirectory();\n    // dir1 = FSDirectory.open(\"foofoofoo\");\n    Directory dir2 = new MockRAMDirectory();\n    // mergeFactor=2; maxBufferedDocs=2; Map docs = indexRandom(1, 3, 2, dir1);\n    Map docs = indexRandom(10, 10, 100, dir1);\n    indexSerial(docs, dir2);\n\n    // verifying verify\n    // verifyEquals(dir1, dir1, \"id\");\n    // verifyEquals(dir2, dir2, \"id\");\n\n    verifyEquals(dir1, dir2, \"id\");\n  }\n\n","sourceOld":"  public void testRandom() throws Throwable {\n    r = newRandom();\n    Directory dir1 = new MockRAMDirectory();\n    // dir1 = FSDirectory.open(\"foofoofoo\");\n    Directory dir2 = new MockRAMDirectory();\n    // mergeFactor=2; maxBufferedDocs=2; Map docs = indexRandom(1, 3, 2, dir1);\n    Map docs = indexRandom(10, 10, 100, dir1);\n    indexSerial(docs, dir2);\n\n    // verifying verify\n    // verifyEquals(dir1, dir1, \"id\");\n    // verifyEquals(dir2, dir2, \"id\");\n\n    verifyEquals(dir1, dir2, \"id\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestStressIndexing2#testRandom().mjava","sourceNew":null,"sourceOld":"  public void testRandom() throws Throwable {\n    r = newRandom();\n    Directory dir1 = new MockRAMDirectory();\n    // dir1 = FSDirectory.open(\"foofoofoo\");\n    Directory dir2 = new MockRAMDirectory();\n    // mergeFactor=2; maxBufferedDocs=2; Map docs = indexRandom(1, 3, 2, dir1);\n    Map docs = indexRandom(10, 10, 100, dir1);\n    indexSerial(docs, dir2);\n\n    // verifying verify\n    // verifyEquals(dir1, dir1, \"id\");\n    // verifyEquals(dir2, dir2, \"id\");\n\n    verifyEquals(dir1, dir2, \"id\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}