{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FSTCompiler#FSTCompiler(FST.INPUT_TYPE,int,int,boolean,boolean,int,Outputs[T],boolean,int,float).mjava","commits":[{"id":"0f5661e6a04d3172e262ad741b717924f2f1b6a5","date":1576244274,"type":0,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTCompiler#FSTCompiler(FST.INPUT_TYPE,int,int,boolean,boolean,int,Outputs[T],boolean,int,float).mjava","pathOld":"/dev/null","sourceNew":"  private FSTCompiler(FST.INPUT_TYPE inputType, int minSuffixCount1, int minSuffixCount2, boolean doShareSuffix,\n                      boolean doShareNonSingletonNodes, int shareMaxTailLength, Outputs<T> outputs,\n                      boolean allowFixedLengthArcs, int bytesPageBits, float directAddressingMaxOversizingFactor) {\n    this.minSuffixCount1 = minSuffixCount1;\n    this.minSuffixCount2 = minSuffixCount2;\n    this.doShareNonSingletonNodes = doShareNonSingletonNodes;\n    this.shareMaxTailLength = shareMaxTailLength;\n    this.allowFixedLengthArcs = allowFixedLengthArcs;\n    this.directAddressingMaxOversizingFactor = directAddressingMaxOversizingFactor;\n    fst = new FST<>(inputType, outputs, bytesPageBits);\n    bytes = fst.bytes;\n    assert bytes != null;\n    if (doShareSuffix) {\n      dedupHash = new NodeHash<>(fst, bytes.getReverseReader(false));\n    } else {\n      dedupHash = null;\n    }\n    NO_OUTPUT = outputs.getNoOutput();\n\n    @SuppressWarnings({\"rawtypes\",\"unchecked\"}) final UnCompiledNode<T>[] f =\n        (UnCompiledNode<T>[]) new UnCompiledNode[10];\n    frontier = f;\n    for(int idx=0;idx<frontier.length;idx++) {\n      frontier[idx] = new UnCompiledNode<>(this, idx);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","date":1576247714,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTCompiler#FSTCompiler(FST.INPUT_TYPE,int,int,boolean,boolean,int,Outputs[T],boolean,int,float).mjava","pathOld":"/dev/null","sourceNew":"  private FSTCompiler(FST.INPUT_TYPE inputType, int minSuffixCount1, int minSuffixCount2, boolean doShareSuffix,\n                      boolean doShareNonSingletonNodes, int shareMaxTailLength, Outputs<T> outputs,\n                      boolean allowFixedLengthArcs, int bytesPageBits, float directAddressingMaxOversizingFactor) {\n    this.minSuffixCount1 = minSuffixCount1;\n    this.minSuffixCount2 = minSuffixCount2;\n    this.doShareNonSingletonNodes = doShareNonSingletonNodes;\n    this.shareMaxTailLength = shareMaxTailLength;\n    this.allowFixedLengthArcs = allowFixedLengthArcs;\n    this.directAddressingMaxOversizingFactor = directAddressingMaxOversizingFactor;\n    fst = new FST<>(inputType, outputs, bytesPageBits);\n    bytes = fst.bytes;\n    assert bytes != null;\n    if (doShareSuffix) {\n      dedupHash = new NodeHash<>(fst, bytes.getReverseReader(false));\n    } else {\n      dedupHash = null;\n    }\n    NO_OUTPUT = outputs.getNoOutput();\n\n    @SuppressWarnings({\"rawtypes\",\"unchecked\"}) final UnCompiledNode<T>[] f =\n        (UnCompiledNode<T>[]) new UnCompiledNode[10];\n    frontier = f;\n    for(int idx=0;idx<frontier.length;idx++) {\n      frontier[idx] = new UnCompiledNode<>(this, idx);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f5661e6a04d3172e262ad741b717924f2f1b6a5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":[],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}