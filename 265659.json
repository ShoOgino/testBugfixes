{"path":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput.Index#write(IntIndexOutput,boolean).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput.Index#write(IntIndexOutput,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput.Index#write(IntIndexOutput,boolean).mjava","sourceNew":"    @Override\n    public void write(IntIndexOutput indexOut, boolean absolute) \n      throws IOException {\n      if (absolute) {\n        indexOut.writeVLong(fp);\n      } else {\n        indexOut.writeVLong(fp - lastFP);\n      }\n      lastFP = fp;\n    }\n\n","sourceOld":"    @Override\n    public void write(IntIndexOutput indexOut, boolean absolute) \n      throws IOException {\n      if (absolute) {\n        indexOut.writeVLong(fp);\n      } else {\n        indexOut.writeVLong(fp - lastFP);\n      }\n      lastFP = fp;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput.Index#write(IntIndexOutput,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput.Index#write(IntIndexOutput,boolean).mjava","sourceNew":"    @Override\n    public void write(IntIndexOutput indexOut, boolean absolute) \n      throws IOException {\n      if (absolute) {\n        indexOut.writeVLong(fp);\n      } else {\n        indexOut.writeVLong(fp - lastFP);\n      }\n      lastFP = fp;\n    }\n\n","sourceOld":"    @Override\n    public void write(IntIndexOutput indexOut, boolean absolute) \n      throws IOException {\n      if (absolute) {\n        indexOut.writeVLong(fp);\n      } else {\n        indexOut.writeVLong(fp - lastFP);\n      }\n      lastFP = fp;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83c6769a33d7161dd6966d2d46b9d5228f3802f6","date":1297448203,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput.Index#write(IntIndexOutput,boolean).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void write(IntIndexOutput indexOut, boolean absolute) \n      throws IOException {\n      if (absolute) {\n        indexOut.writeVLong(fp);\n      } else {\n        indexOut.writeVLong(fp - lastFP);\n      }\n      lastFP = fp;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput.Index#write(IntIndexOutput,boolean).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void write(IntIndexOutput indexOut, boolean absolute) \n      throws IOException {\n      if (absolute) {\n        indexOut.writeVLong(fp);\n      } else {\n        indexOut.writeVLong(fp - lastFP);\n      }\n      lastFP = fp;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","83c6769a33d7161dd6966d2d46b9d5228f3802f6"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"83c6769a33d7161dd6966d2d46b9d5228f3802f6":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83c6769a33d7161dd6966d2d46b9d5228f3802f6"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"83c6769a33d7161dd6966d2d46b9d5228f3802f6":["f1bdbf92da222965b46c0a942c3857ba56e5c638","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","83c6769a33d7161dd6966d2d46b9d5228f3802f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}