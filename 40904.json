{"path":"src/java/org/apache/solr/handler/SnapPuller#doCommit().mjava","commits":[{"id":"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349","date":1224582283,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#doCommit().mjava","pathOld":"/dev/null","sourceNew":"  private void doCommit() throws IOException {\n    CommitUpdateCommand cmd = new CommitUpdateCommand(false);\n    cmd.waitFlush = true;\n    cmd.waitSearcher = true;\n    solrCore.getUpdateHandler().commit(cmd);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"114670ecb9adf4ed6e7a80d6f0ce64fec0c91fb1","date":1232905968,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#doCommit().mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#doCommit().mjava","sourceNew":"  private void doCommit() throws IOException {\n    CommitUpdateCommand cmd = new CommitUpdateCommand(false);\n    cmd.waitFlush = true;\n    cmd.waitSearcher = true;\n    solrCore.getUpdateHandler().commit(cmd);\n    if (solrCore.getUpdateHandler() instanceof DirectUpdateHandler2) {\n      LOG.info(\"Force open index writer to make sure older index files get deleted\");\n      DirectUpdateHandler2 handler = (DirectUpdateHandler2) solrCore.getUpdateHandler();\n      handler.forceOpenWriter();\n    } else  {\n      LOG.warn(\"The update handler is not an instance or sub-class of DirectUpdateHandler2. \" +\n              \"ReplicationHandler may not be able to cleanup un-used index files.\");\n    }\n  }\n\n","sourceOld":"  private void doCommit() throws IOException {\n    CommitUpdateCommand cmd = new CommitUpdateCommand(false);\n    cmd.waitFlush = true;\n    cmd.waitSearcher = true;\n    solrCore.getUpdateHandler().commit(cmd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"448bf1ddb531a7d63dfaa7596bb7bb291369afa6","date":1234447832,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#doCommit().mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#doCommit().mjava","sourceNew":"  private void doCommit() throws IOException {\n    CommitUpdateCommand cmd = new CommitUpdateCommand(false);\n    cmd.waitFlush = true;\n    cmd.waitSearcher = true;\n    solrCore.getUpdateHandler().commit(cmd);\n    if (solrCore.getUpdateHandler() instanceof DirectUpdateHandler2) {\n      LOG.info(\"Force open index writer to make sure older index files get deleted\");\n      DirectUpdateHandler2 handler = (DirectUpdateHandler2) solrCore.getUpdateHandler();\n      handler.forceOpenWriter();\n      replicationHandler.refreshCommitpoint();\n    } else  {\n      LOG.warn(\"The update handler is not an instance or sub-class of DirectUpdateHandler2. \" +\n              \"ReplicationHandler may not be able to cleanup un-used index files.\");\n    }\n  }\n\n","sourceOld":"  private void doCommit() throws IOException {\n    CommitUpdateCommand cmd = new CommitUpdateCommand(false);\n    cmd.waitFlush = true;\n    cmd.waitSearcher = true;\n    solrCore.getUpdateHandler().commit(cmd);\n    if (solrCore.getUpdateHandler() instanceof DirectUpdateHandler2) {\n      LOG.info(\"Force open index writer to make sure older index files get deleted\");\n      DirectUpdateHandler2 handler = (DirectUpdateHandler2) solrCore.getUpdateHandler();\n      handler.forceOpenWriter();\n    } else  {\n      LOG.warn(\"The update handler is not an instance or sub-class of DirectUpdateHandler2. \" +\n              \"ReplicationHandler may not be able to cleanup un-used index files.\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/SnapPuller#doCommit().mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#doCommit().mjava","sourceNew":"  private void doCommit() throws IOException {\n    CommitUpdateCommand cmd = new CommitUpdateCommand(false);\n    cmd.waitFlush = true;\n    cmd.waitSearcher = true;\n    solrCore.getUpdateHandler().commit(cmd);\n    if (solrCore.getUpdateHandler() instanceof DirectUpdateHandler2) {\n      LOG.info(\"Force open index writer to make sure older index files get deleted\");\n      DirectUpdateHandler2 handler = (DirectUpdateHandler2) solrCore.getUpdateHandler();\n      handler.forceOpenWriter();\n      replicationHandler.refreshCommitpoint();\n    } else  {\n      LOG.warn(\"The update handler is not an instance or sub-class of DirectUpdateHandler2. \" +\n              \"ReplicationHandler may not be able to cleanup un-used index files.\");\n    }\n  }\n\n","sourceOld":"  private void doCommit() throws IOException {\n    CommitUpdateCommand cmd = new CommitUpdateCommand(false);\n    cmd.waitFlush = true;\n    cmd.waitSearcher = true;\n    solrCore.getUpdateHandler().commit(cmd);\n    if (solrCore.getUpdateHandler() instanceof DirectUpdateHandler2) {\n      LOG.info(\"Force open index writer to make sure older index files get deleted\");\n      DirectUpdateHandler2 handler = (DirectUpdateHandler2) solrCore.getUpdateHandler();\n      handler.forceOpenWriter();\n      replicationHandler.refreshCommitpoint();\n    } else  {\n      LOG.warn(\"The update handler is not an instance or sub-class of DirectUpdateHandler2. \" +\n              \"ReplicationHandler may not be able to cleanup un-used index files.\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"114670ecb9adf4ed6e7a80d6f0ce64fec0c91fb1":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"448bf1ddb531a7d63dfaa7596bb7bb291369afa6":["114670ecb9adf4ed6e7a80d6f0ce64fec0c91fb1"],"ad94625fb8d088209f46650c8097196fec67f00c":["448bf1ddb531a7d63dfaa7596bb7bb291369afa6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["114670ecb9adf4ed6e7a80d6f0ce64fec0c91fb1"],"114670ecb9adf4ed6e7a80d6f0ce64fec0c91fb1":["448bf1ddb531a7d63dfaa7596bb7bb291369afa6"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"448bf1ddb531a7d63dfaa7596bb7bb291369afa6":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}