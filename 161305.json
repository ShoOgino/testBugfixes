{"path":"src/java/org/apache/solr/search/function/FileFloatSource#getValues(IndexReader).mjava","commits":[{"id":"7d6b8491b15b391062b53404b4af3c8f18924090","date":1193061194,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/FileFloatSource#getValues(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public DocValues getValues(IndexReader reader) throws IOException {\n    final float[] arr = getCachedFloats(reader);\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return arr[doc];\n      }\n\n      public int intVal(int doc) {\n        return (int)arr[doc];\n      }\n\n      public long longVal(int doc) {\n        return (long)arr[doc];\n      }\n\n      public double doubleVal(int doc) {\n        return (double)arr[doc];\n      }\n\n      public String strVal(int doc) {\n        return Float.toString(arr[doc]);\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + floatVal(doc);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5eeff6b8391d7b5e70e37193643d76c05a3abf75","bfa71be65cf17963fa727d8e5f35bb35b110aa16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bfa71be65cf17963fa727d8e5f35bb35b110aa16","date":1234319413,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/FileFloatSource#getValues(IndexReader).mjava","pathOld":"src/java/org/apache/solr/search/function/FileFloatSource#getValues(IndexReader).mjava","sourceNew":"  public DocValues getValues(IndexReader reader) throws IOException {\n    int offset = 0;\n    if (reader instanceof SolrIndexReader) {\n      SolrIndexReader r = (SolrIndexReader)reader;\n      while (r.getParent() != null) {\n        offset += r.getBase();\n        r = r.getParent();\n      }\n      reader = r;\n    }\n    final int off = offset;\n\n    final float[] arr = getCachedFloats(reader);\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return arr[doc + off];\n      }\n\n      public int intVal(int doc) {\n        return (int)arr[doc + off];\n      }\n\n      public long longVal(int doc) {\n        return (long)arr[doc + off];\n      }\n\n      public double doubleVal(int doc) {\n        return (double)arr[doc + off];\n      }\n\n      public String strVal(int doc) {\n        return Float.toString(arr[doc + off]);\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + floatVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  public DocValues getValues(IndexReader reader) throws IOException {\n    final float[] arr = getCachedFloats(reader);\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return arr[doc];\n      }\n\n      public int intVal(int doc) {\n        return (int)arr[doc];\n      }\n\n      public long longVal(int doc) {\n        return (long)arr[doc];\n      }\n\n      public double doubleVal(int doc) {\n        return (double)arr[doc];\n      }\n\n      public String strVal(int doc) {\n        return Float.toString(arr[doc]);\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + floatVal(doc);\n      }\n    };\n  }\n\n","bugFix":["7d6b8491b15b391062b53404b4af3c8f18924090"],"bugIntro":["5eeff6b8391d7b5e70e37193643d76c05a3abf75","03a7fa734f43779c4e7279f2a61a0d847320136e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","date":1253196493,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/FileFloatSource#getValues(Map,IndexReader).mjava","pathOld":"src/java/org/apache/solr/search/function/FileFloatSource#getValues(IndexReader).mjava","sourceNew":"  public DocValues getValues(Map context, IndexReader reader) throws IOException {\n    int offset = 0;\n    if (reader instanceof SolrIndexReader) {\n      SolrIndexReader r = (SolrIndexReader)reader;\n      while (r.getParent() != null) {\n        offset += r.getBase();\n        r = r.getParent();\n      }\n      reader = r;\n    }\n    final int off = offset;\n\n    final float[] arr = getCachedFloats(reader);\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return arr[doc + off];\n      }\n\n      public int intVal(int doc) {\n        return (int)arr[doc + off];\n      }\n\n      public long longVal(int doc) {\n        return (long)arr[doc + off];\n      }\n\n      public double doubleVal(int doc) {\n        return (double)arr[doc + off];\n      }\n\n      public String strVal(int doc) {\n        return Float.toString(arr[doc + off]);\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + floatVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  public DocValues getValues(IndexReader reader) throws IOException {\n    int offset = 0;\n    if (reader instanceof SolrIndexReader) {\n      SolrIndexReader r = (SolrIndexReader)reader;\n      while (r.getParent() != null) {\n        offset += r.getBase();\n        r = r.getParent();\n      }\n      reader = r;\n    }\n    final int off = offset;\n\n    final float[] arr = getCachedFloats(reader);\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return arr[doc + off];\n      }\n\n      public int intVal(int doc) {\n        return (int)arr[doc + off];\n      }\n\n      public long longVal(int doc) {\n        return (long)arr[doc + off];\n      }\n\n      public double doubleVal(int doc) {\n        return (double)arr[doc + off];\n      }\n\n      public String strVal(int doc) {\n        return Float.toString(arr[doc + off]);\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + floatVal(doc);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":["bfa71be65cf17963fa727d8e5f35bb35b110aa16"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bfa71be65cf17963fa727d8e5f35bb35b110aa16":["7d6b8491b15b391062b53404b4af3c8f18924090"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7d6b8491b15b391062b53404b4af3c8f18924090":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":[],"bfa71be65cf17963fa727d8e5f35bb35b110aa16":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["7d6b8491b15b391062b53404b4af3c8f18924090"],"7d6b8491b15b391062b53404b4af3c8f18924090":["bfa71be65cf17963fa727d8e5f35bb35b110aa16"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}