{"path":"src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","commits":[{"id":"abec2fd822be07fc74ef5ba3609b9c5625a87d6d","date":1261659802,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Field}.\n   */\n  protected Field createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, boolean omitTFPos, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setOmitTermFreqAndPositions(omitTFPos);\n    f.setBoost(boost);\n    return f;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","pathOld":"src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","sourceNew":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Field}.\n   */\n  protected Field createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, boolean omitTFPos, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setOmitTermFreqAndPositions(omitTFPos);\n    f.setBoost(boost);\n    return f;\n  }\n\n","sourceOld":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Field}.\n   */\n  protected Field createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, boolean omitTFPos, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setOmitTermFreqAndPositions(omitTFPos);\n    f.setBoost(boost);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}