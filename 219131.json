{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#clone().mjava","sourceNew":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    \n    // deep clone\n    for (Entry<Long,Set<String>> e : genUpdatesFiles.entrySet()) {\n      other.genUpdatesFiles.put(e.getKey(), new HashSet<String>(e.getValue()));\n    }\n    \n    return other;\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfoPerCommit clone() {\n    SegmentInfoPerCommit other = new SegmentInfoPerCommit(info, delCount, delGen, fieldInfosGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    \n    // deep clone\n    for (Entry<Long,Set<String>> e : genUpdatesFiles.entrySet()) {\n      other.genUpdatesFiles.put(e.getKey(), new HashSet<String>(e.getValue()));\n    }\n    \n    return other;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","sourceNew":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    \n    // deep clone\n    for (Entry<Long,Set<String>> e : genUpdatesFiles.entrySet()) {\n      other.genUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    return other;\n  }\n\n","sourceOld":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    \n    // deep clone\n    for (Entry<Long,Set<String>> e : genUpdatesFiles.entrySet()) {\n      other.genUpdatesFiles.put(e.getKey(), new HashSet<String>(e.getValue()));\n    }\n    \n    return other;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0567bdc5c86c94ced64201187cfcef2417d76dda","date":1400678298,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","sourceNew":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Long,Set<String>> e : genUpdatesFiles.entrySet()) {\n      other.genUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","sourceOld":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    \n    // deep clone\n    for (Entry<Long,Set<String>> e : genUpdatesFiles.entrySet()) {\n      other.genUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    return other;\n  }\n\n","bugFix":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a656b32c3aa151037a8c52e9b134acc3cbf482bc","date":1400688195,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","sourceNew":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Long,Set<String>> e : genUpdatesFiles.entrySet()) {\n      other.genUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","sourceOld":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    \n    // deep clone\n    for (Entry<Long,Set<String>> e : genUpdatesFiles.entrySet()) {\n      other.genUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    return other;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","sourceNew":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Long,Set<String>> e : genUpdatesFiles.entrySet()) {\n      other.genUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","sourceOld":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    \n    // deep clone\n    for (Entry<Long,Set<String>> e : genUpdatesFiles.entrySet()) {\n      other.genUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    return other;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3","date":1417215914,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","sourceNew":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","sourceOld":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Long,Set<String>> e : genUpdatesFiles.entrySet()) {\n      other.genUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f2203cb8ae87188877cfbf6ad170c5738a0aad5","date":1528117512,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","sourceNew":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, softDelCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","sourceOld":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","sourceNew":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, softDelCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","sourceOld":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","sourceNew":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, softDelCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","sourceOld":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14654be3f7a82c9a3c52169e365baa55bfe64f66","date":1587212697,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#clone().mjava","sourceNew":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, softDelCount, delGen, fieldInfosGen, docValuesGen, getId());\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","sourceOld":"  @Override\n  public SegmentCommitInfo clone() {\n    SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, softDelCount, delGen, fieldInfosGen, docValuesGen);\n    // Not clear that we need to carry over nextWriteDelGen\n    // (i.e. do we ever clone after a failed write and\n    // before the next successful write?), but just do it to\n    // be safe:\n    other.nextWriteDelGen = nextWriteDelGen;\n    other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;\n    other.nextWriteDocValuesGen = nextWriteDocValuesGen;\n    \n    // deep clone\n    for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {\n      other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));\n    }\n    \n    other.fieldInfosFiles.addAll(fieldInfosFiles);\n    \n    return other;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"14654be3f7a82c9a3c52169e365baa55bfe64f66":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"0567bdc5c86c94ced64201187cfcef2417d76dda":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","0567bdc5c86c94ced64201187cfcef2417d76dda"],"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3":["0567bdc5c86c94ced64201187cfcef2417d76dda"],"b7605579001505896d48b07160075a5c8b8e128e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","0567bdc5c86c94ced64201187cfcef2417d76dda"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3"],"f592209545c71895260367152601e9200399776d":["6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["14654be3f7a82c9a3c52169e365baa55bfe64f66"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["0567bdc5c86c94ced64201187cfcef2417d76dda","a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"14654be3f7a82c9a3c52169e365baa55bfe64f66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"0567bdc5c86c94ced64201187cfcef2417d76dda":["a656b32c3aa151037a8c52e9b134acc3cbf482bc","6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3","b7605579001505896d48b07160075a5c8b8e128e"],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":[],"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3":["b70042a8a492f7054d480ccdd2be9796510d4327","8f2203cb8ae87188877cfbf6ad170c5738a0aad5","f592209545c71895260367152601e9200399776d"],"b7605579001505896d48b07160075a5c8b8e128e":[],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["14654be3f7a82c9a3c52169e365baa55bfe64f66","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}