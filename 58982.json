{"path":"lucene/sandbox/src/java/org/apache/lucene/search/CoveringScorer#score().mjava","commits":[{"id":"7d5484fcfd752ec7a2ff2ed6a860c539fdf92da8","date":1503307834,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/CoveringScorer#score().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    setTopListAndFreqIfNecessary();\n    double score = 0;\n    for (DisiWrapper w = topList; w != null; w = w.next) {\n      score += w.scorer.score();\n    }\n    return (float) score;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8e4fbf51a35a1292b838d83f793794c274932a1","date":1503371298,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/CoveringScorer#score().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    setTopListAndFreqIfNecessary();\n    double score = 0;\n    for (DisiWrapper w = topList; w != null; w = w.next) {\n      score += w.scorer.score();\n    }\n    return (float) score;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/CoveringScorer#score().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public float score() throws IOException {\n    // we need to know about all matches\n    setTopListAndFreqIfNecessary();\n    double score = 0;\n    for (DisiWrapper w = topList; w != null; w = w.next) {\n      score += w.scorer.score();\n    }\n    return (float) score;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a8e4fbf51a35a1292b838d83f793794c274932a1"],"7d5484fcfd752ec7a2ff2ed6a860c539fdf92da8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a8e4fbf51a35a1292b838d83f793794c274932a1"],"a8e4fbf51a35a1292b838d83f793794c274932a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7d5484fcfd752ec7a2ff2ed6a860c539fdf92da8"]},"commit2Childs":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"7d5484fcfd752ec7a2ff2ed6a860c539fdf92da8":["a8e4fbf51a35a1292b838d83f793794c274932a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","7d5484fcfd752ec7a2ff2ed6a860c539fdf92da8","a8e4fbf51a35a1292b838d83f793794c274932a1"],"a8e4fbf51a35a1292b838d83f793794c274932a1":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}