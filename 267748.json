{"path":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","commits":[{"id":"536f6911665ce844b868182b8d0ca107ea0eceab","date":1304957860,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"/dev/null","sourceNew":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      w.setInfoStream(infoStream);\n      w.message(\"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      w.optimize();\n      w.message(\"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f55287c70f41272745a56bdc3efa9ebb800a83b1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"/dev/null","sourceNew":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      w.setInfoStream(infoStream);\n      w.message(\"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      w.optimize();\n      w.message(\"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"/dev/null","sourceNew":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      w.setInfoStream(infoStream);\n      w.message(\"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      w.optimize();\n      w.message(\"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db74adc63ef172d887ab4bfb81ef349217764c3d","date":1311275308,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir, iwc.getCodecProvider())) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir, iwc.getCodecProvider());\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      w.setInfoStream(infoStream);\n      w.message(\"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      w.optimize();\n      w.message(\"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      w.setInfoStream(infoStream);\n      w.message(\"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      w.optimize();\n      w.message(\"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      w.setInfoStream(infoStream);\n      w.message(\"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      w.optimize();\n      w.message(\"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir, iwc.getCodecProvider())) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir, iwc.getCodecProvider());\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      w.setInfoStream(infoStream);\n      w.message(\"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      w.optimize();\n      w.message(\"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream != null) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.optimize();\n      if (infoStream != null) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      w.setInfoStream(infoStream);\n      w.message(\"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      w.optimize();\n      w.message(\"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream != null) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream != null) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream != null) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.optimize();\n      if (infoStream != null) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"58c6bbc222f074c844e736e6fb23647e3db9cfe3","date":1322743940,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream != null) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream != null) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":["f55287c70f41272745a56bdc3efa9ebb800a83b1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"893d07555f01912f57b453a320e4d46363a31b50","date":1327312526,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void upgrade() throws IOException {\n    if (!IndexReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"06584e6e98d592b34e1329b384182f368d2025e8":["7b91922b55d15444d554721b352861d028eb8278"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["06584e6e98d592b34e1329b384182f368d2025e8"],"536f6911665ce844b868182b8d0ca107ea0eceab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["58c6bbc222f074c844e736e6fb23647e3db9cfe3","893d07555f01912f57b453a320e4d46363a31b50"],"7b91922b55d15444d554721b352861d028eb8278":["db74adc63ef172d887ab4bfb81ef349217764c3d"],"db74adc63ef172d887ab4bfb81ef349217764c3d":["536f6911665ce844b868182b8d0ca107ea0eceab"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","536f6911665ce844b868182b8d0ca107ea0eceab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"893d07555f01912f57b453a320e4d46363a31b50":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","536f6911665ce844b868182b8d0ca107ea0eceab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["5cab9a86bd67202d20b6adc463008c8e982b070a","893d07555f01912f57b453a320e4d46363a31b50"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"536f6911665ce844b868182b8d0ca107ea0eceab":["db74adc63ef172d887ab4bfb81ef349217764c3d","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"7b91922b55d15444d554721b352861d028eb8278":["06584e6e98d592b34e1329b384182f368d2025e8"],"db74adc63ef172d887ab4bfb81ef349217764c3d":["7b91922b55d15444d554721b352861d028eb8278"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["536f6911665ce844b868182b8d0ca107ea0eceab","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"893d07555f01912f57b453a320e4d46363a31b50":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}