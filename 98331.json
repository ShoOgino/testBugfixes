{"path":"src/java/org/apache/lucene/index/DocumentsWriter#waitReady(DocumentsWriterThreadState).mjava","commits":[{"id":"5a0af3a442be522899177e5e11384a45a6784a3f","date":1205348952,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#waitReady(DocumentsWriterThreadState).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#waitReady(ThreadState).mjava","sourceNew":"  synchronized private void waitReady(DocumentsWriterThreadState state) {\n    while(!closed && ((state != null && !state.isIdle) || pauseThreads != 0 || flushPending || abortCount > 0))\n      try {\n        wait();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n\n    if (closed)\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n  }\n\n","sourceOld":"  synchronized private void waitReady(ThreadState state) {\n    while(!closed && ((state != null && !state.isIdle) || pauseThreads != 0 || flushPending || abortCount > 0))\n      try {\n        wait();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n\n    if (closed)\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#waitReady(DocumentsWriterThreadState).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#waitReady(DocumentsWriterThreadState).mjava","sourceNew":"  synchronized private void waitReady(DocumentsWriterThreadState state) {\n\n    while (!closed && ((state != null && !state.isIdle) || pauseThreads != 0 || flushPending || aborting)) {\n      try {\n        wait();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n    }\n\n    if (closed)\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n  }\n\n","sourceOld":"  synchronized private void waitReady(DocumentsWriterThreadState state) {\n    while(!closed && ((state != null && !state.isIdle) || pauseThreads != 0 || flushPending || abortCount > 0))\n      try {\n        wait();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n\n    if (closed)\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba7fd1181f778e9954547e8e6a47587ebf08e3fb","date":1238267455,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#waitReady(DocumentsWriterThreadState).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#waitReady(DocumentsWriterThreadState).mjava","sourceNew":"  synchronized private void waitReady(DocumentsWriterThreadState state) {\n\n    while (!closed && ((state != null && !state.isIdle) || pauseThreads != 0 || flushPending || aborting)) {\n      try {\n        wait();\n      } catch (InterruptedException ie) {\n        // In 3.0 we will change this to throw\n        // InterruptedException instead\n        Thread.currentThread().interrupt();\n        throw new RuntimeException(ie);\n      }\n    }\n\n    if (closed)\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n  }\n\n","sourceOld":"  synchronized private void waitReady(DocumentsWriterThreadState state) {\n\n    while (!closed && ((state != null && !state.isIdle) || pauseThreads != 0 || flushPending || aborting)) {\n      try {\n        wait();\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n      }\n    }\n\n    if (closed)\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa4b66eb16ead894fa7130904af6ecf34331f050","date":1258198413,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#waitReady(DocumentsWriterThreadState).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#waitReady(DocumentsWriterThreadState).mjava","sourceNew":"  synchronized private void waitReady(DocumentsWriterThreadState state) {\n\n    while (!closed && ((state != null && !state.isIdle) || pauseThreads != 0 || flushPending || aborting)) {\n      try {\n        wait();\n      } catch (InterruptedException ie) {\n        throw new ThreadInterruptedException(ie);\n      }\n    }\n\n    if (closed)\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n  }\n\n","sourceOld":"  synchronized private void waitReady(DocumentsWriterThreadState state) {\n\n    while (!closed && ((state != null && !state.isIdle) || pauseThreads != 0 || flushPending || aborting)) {\n      try {\n        wait();\n      } catch (InterruptedException ie) {\n        // In 3.0 we will change this to throw\n        // InterruptedException instead\n        Thread.currentThread().interrupt();\n        throw new RuntimeException(ie);\n      }\n    }\n\n    if (closed)\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#waitReady(DocumentsWriterThreadState).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#waitReady(DocumentsWriterThreadState).mjava","sourceNew":"  synchronized private void waitReady(DocumentsWriterThreadState state) {\n\n    while (!closed && ((state != null && !state.isIdle) || pauseThreads != 0 || flushPending || aborting)) {\n      try {\n        wait();\n      } catch (InterruptedException ie) {\n        throw new ThreadInterruptedException(ie);\n      }\n    }\n\n    if (closed)\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n  }\n\n","sourceOld":"  synchronized private void waitReady(DocumentsWriterThreadState state) {\n\n    while (!closed && ((state != null && !state.isIdle) || pauseThreads != 0 || flushPending || aborting)) {\n      try {\n        wait();\n      } catch (InterruptedException ie) {\n        throw new ThreadInterruptedException(ie);\n      }\n    }\n\n    if (closed)\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"aa4b66eb16ead894fa7130904af6ecf34331f050":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["5350389bf83287111f7760b9e3db3af8e3648474"],"5a0af3a442be522899177e5e11384a45a6784a3f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5350389bf83287111f7760b9e3db3af8e3648474":["5a0af3a442be522899177e5e11384a45a6784a3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["aa4b66eb16ead894fa7130904af6ecf34331f050"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a0af3a442be522899177e5e11384a45a6784a3f"],"aa4b66eb16ead894fa7130904af6ecf34331f050":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["aa4b66eb16ead894fa7130904af6ecf34331f050"],"5a0af3a442be522899177e5e11384a45a6784a3f":["5350389bf83287111f7760b9e3db3af8e3648474"],"5350389bf83287111f7760b9e3db3af8e3648474":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}