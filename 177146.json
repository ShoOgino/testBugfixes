{"path":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitSet#assertEquals(BitSet,SparseFixedBitSet,int).mjava","commits":[{"id":"22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b","date":1414400081,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitSet#assertEquals(BitSet,SparseFixedBitSet,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void assertEquals(BitSet set1, SparseFixedBitSet set2, int maxDoc) {\n    super.assertEquals(set1, set2, maxDoc);\n    // check invariants of the sparse set\n    int nonZeroLongCount = 0;\n    for (int i = 0; i < set2.indices.length; ++i) {\n      final int n = Long.bitCount(set2.indices[i]);\n      if (n != 0) {\n        nonZeroLongCount += n;\n        for (int j = n; j < set2.bits[i].length; ++j) {\n          assertEquals(0, set2.bits[i][j]);\n        }\n      }\n    }\n    assertEquals(nonZeroLongCount, set2.nonZeroLongCount);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b"]},"commit2Childs":{"22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22aee0e0ecb0d10ebe6ce415b293e64ccf1c0e4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}