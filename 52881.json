{"path":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#scoreAll(int).mjava","commits":[{"id":"0e354c63cdcc974a17c9f8531cecc001229c0952","date":1365702197,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#scoreAll(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#scoreAll(int,int,int).mjava","sourceNew":"  // Recursively iterate all subScorers that generated last doc computing sum and max\n  private void scoreAll(int root) throws IOException {\n    if (root < numScorers && subScorers[root].docID() == doc) {\n      float sub = subScorers[root].score();\n      freq++;\n      scoreSum += sub;\n      scoreMax = Math.max(scoreMax, sub);\n      scoreAll((root<<1)+1);\n      scoreAll((root<<1)+2);\n    }\n  }\n\n","sourceOld":"  // Recursively iterate all subScorers that generated last doc computing sum and max\n  private void scoreAll(int root, int size, int doc) throws IOException {\n    if (root < size && subScorers[root].docID() == doc) {\n      float sub = subScorers[root].score();\n      scoreSum += sub;\n      scoreMax = Math.max(scoreMax, sub);\n      scoreAll((root<<1)+1, size, doc);\n      scoreAll((root<<1)+2, size, doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a74e723ad6f1491f36039f9fe6af13a530f8135d","date":1400774466,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#scoreAll(int).mjava","sourceNew":null,"sourceOld":"  // Recursively iterate all subScorers that generated last doc computing sum and max\n  private void scoreAll(int root) throws IOException {\n    if (root < numScorers && subScorers[root].docID() == doc) {\n      float sub = subScorers[root].score();\n      freq++;\n      scoreSum += sub;\n      scoreMax = Math.max(scoreMax, sub);\n      scoreAll((root<<1)+1);\n      scoreAll((root<<1)+2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a74e723ad6f1491f36039f9fe6af13a530f8135d":["0e354c63cdcc974a17c9f8531cecc001229c0952"],"0e354c63cdcc974a17c9f8531cecc001229c0952":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a74e723ad6f1491f36039f9fe6af13a530f8135d"]},"commit2Childs":{"a74e723ad6f1491f36039f9fe6af13a530f8135d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e354c63cdcc974a17c9f8531cecc001229c0952":["a74e723ad6f1491f36039f9fe6af13a530f8135d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0e354c63cdcc974a17c9f8531cecc001229c0952"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}