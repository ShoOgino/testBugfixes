{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearInSpanFirstInSpanNot().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearInSpanFirstInSpanNot().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearInSpanFirstInSpanNot().mjava","sourceNew":"  @Test\n  public void testNpeInSpanNearInSpanFirstInSpanNot() throws Exception {\n    int n = 5;\n    SpanTermQuery hun = new SpanTermQuery(new Term(\"field\", \"hundred\"));\n    SpanTermQuery term40 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term40c = (SpanTermQuery)term40.clone();\n\n    SpanFirstQuery include = new SpanFirstQuery(term40, n);\n    SpanNearQuery near = new SpanNearQuery(new SpanQuery[]{hun, term40c},\n                                           n-1, true);\n    SpanFirstQuery exclude = new SpanFirstQuery(near, n-1);\n    SpanNotQuery q = new SpanNotQuery(include, exclude);\n    \n    checkHits(q, new int[]{40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,\n            1049, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1240, 1241, 1242, 1243, 1244,\n            1245, 1246, 1247, 1248, 1249, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1440, 1441, 1442,\n            1443, 1444, 1445, 1446, 1447, 1448, 1449, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1640,\n            1641, 1642, 1643, 1644, 1645, 1646, 1647,\n            1648, 1649, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1840, 1841, 1842, 1843, 1844, 1845, 1846,\n            1847, 1848, 1849, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949});\n  }\n\n","sourceOld":"  @Test\n  public void testNpeInSpanNearInSpanFirstInSpanNot() throws Exception {\n    int n = 5;\n    SpanTermQuery hun = new SpanTermQuery(new Term(\"field\", \"hundred\"));\n    SpanTermQuery term40 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term40c = (SpanTermQuery)term40.clone();\n\n    SpanFirstQuery include = new SpanFirstQuery(term40, n);\n    SpanNearQuery near = new SpanNearQuery(new SpanQuery[]{hun, term40c},\n                                           n-1, true);\n    SpanFirstQuery exclude = new SpanFirstQuery(near, n-1);\n    SpanNotQuery q = new SpanNotQuery(include, exclude);\n    \n    checkHits(q, new int[]{40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,\n            1049, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1240, 1241, 1242, 1243, 1244,\n            1245, 1246, 1247, 1248, 1249, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1440, 1441, 1442,\n            1443, 1444, 1445, 1446, 1447, 1448, 1449, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1640,\n            1641, 1642, 1643, 1644, 1645, 1646, 1647,\n            1648, 1649, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1840, 1841, 1842, 1843, 1844, 1845, 1846,\n            1847, 1848, 1849, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fdd572df21b78bb2212d045bf26a2773a48b58e9","date":1428851244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearInSpanFirstInSpanNot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearInSpanFirstInSpanNot().mjava","sourceNew":"  @Test @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6418\")\n  public void testNpeInSpanNearInSpanFirstInSpanNot() throws Exception {\n    int n = 5;\n    SpanTermQuery hun = new SpanTermQuery(new Term(\"field\", \"hundred\"));\n    SpanTermQuery term40 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term40c = (SpanTermQuery)term40.clone();\n\n    SpanFirstQuery include = new SpanFirstQuery(term40, n);\n    SpanNearQuery near = new SpanNearQuery(new SpanQuery[]{hun, term40c},\n                                           n-1, true);\n    SpanFirstQuery exclude = new SpanFirstQuery(near, n-1);\n    SpanNotQuery q = new SpanNotQuery(include, exclude);\n    \n    checkHits(q, new int[]{40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,\n            1049, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1240, 1241, 1242, 1243, 1244,\n            1245, 1246, 1247, 1248, 1249, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1440, 1441, 1442,\n            1443, 1444, 1445, 1446, 1447, 1448, 1449, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1640,\n            1641, 1642, 1643, 1644, 1645, 1646, 1647,\n            1648, 1649, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1840, 1841, 1842, 1843, 1844, 1845, 1846,\n            1847, 1848, 1849, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949});\n  }\n\n","sourceOld":"  @Test\n  public void testNpeInSpanNearInSpanFirstInSpanNot() throws Exception {\n    int n = 5;\n    SpanTermQuery hun = new SpanTermQuery(new Term(\"field\", \"hundred\"));\n    SpanTermQuery term40 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term40c = (SpanTermQuery)term40.clone();\n\n    SpanFirstQuery include = new SpanFirstQuery(term40, n);\n    SpanNearQuery near = new SpanNearQuery(new SpanQuery[]{hun, term40c},\n                                           n-1, true);\n    SpanFirstQuery exclude = new SpanFirstQuery(near, n-1);\n    SpanNotQuery q = new SpanNotQuery(include, exclude);\n    \n    checkHits(q, new int[]{40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,\n            1049, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1240, 1241, 1242, 1243, 1244,\n            1245, 1246, 1247, 1248, 1249, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1440, 1441, 1442,\n            1443, 1444, 1445, 1446, 1447, 1448, 1449, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1640,\n            1641, 1642, 1643, 1644, 1645, 1646, 1647,\n            1648, 1649, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1840, 1841, 1842, 1843, 1844, 1845, 1846,\n            1847, 1848, 1849, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949});\n  }\n\n","bugFix":["150488c1317972164a9a824be05b1ba2ba0fc68c"],"bugIntro":["28b61f1c9cf357a13efbb645d116d056feb80cf6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"28b61f1c9cf357a13efbb645d116d056feb80cf6","date":1428863054,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearInSpanFirstInSpanNot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearInSpanFirstInSpanNot().mjava","sourceNew":"  @Test\n  public void testNpeInSpanNearInSpanFirstInSpanNot() throws Exception {\n    int n = 5;\n    SpanTermQuery hun = new SpanTermQuery(new Term(\"field\", \"hundred\"));\n    SpanTermQuery term40 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term40c = (SpanTermQuery)term40.clone();\n\n    SpanFirstQuery include = new SpanFirstQuery(term40, n);\n    SpanNearQuery near = new SpanNearQuery(new SpanQuery[]{hun, term40c},\n                                           n-1, true);\n    SpanFirstQuery exclude = new SpanFirstQuery(near, n-1);\n    SpanNotQuery q = new SpanNotQuery(include, exclude);\n    \n    checkHits(q, new int[]{40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,\n            1049, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1240, 1241, 1242, 1243, 1244,\n            1245, 1246, 1247, 1248, 1249, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1440, 1441, 1442,\n            1443, 1444, 1445, 1446, 1447, 1448, 1449, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1640,\n            1641, 1642, 1643, 1644, 1645, 1646, 1647,\n            1648, 1649, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1840, 1841, 1842, 1843, 1844, 1845, 1846,\n            1847, 1848, 1849, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949});\n  }\n\n","sourceOld":"  @Test @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6418\")\n  public void testNpeInSpanNearInSpanFirstInSpanNot() throws Exception {\n    int n = 5;\n    SpanTermQuery hun = new SpanTermQuery(new Term(\"field\", \"hundred\"));\n    SpanTermQuery term40 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term40c = (SpanTermQuery)term40.clone();\n\n    SpanFirstQuery include = new SpanFirstQuery(term40, n);\n    SpanNearQuery near = new SpanNearQuery(new SpanQuery[]{hun, term40c},\n                                           n-1, true);\n    SpanFirstQuery exclude = new SpanFirstQuery(near, n-1);\n    SpanNotQuery q = new SpanNotQuery(include, exclude);\n    \n    checkHits(q, new int[]{40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,\n            1049, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1240, 1241, 1242, 1243, 1244,\n            1245, 1246, 1247, 1248, 1249, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1440, 1441, 1442,\n            1443, 1444, 1445, 1446, 1447, 1448, 1449, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1640,\n            1641, 1642, 1643, 1644, 1645, 1646, 1647,\n            1648, 1649, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1840, 1841, 1842, 1843, 1844, 1845, 1846,\n            1847, 1848, 1849, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949});\n  }\n\n","bugFix":["fdd572df21b78bb2212d045bf26a2773a48b58e9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4f600f812447b5512daeaf8e5c9df5dbcc4a254","date":1428874774,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearInSpanFirstInSpanNot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearInSpanFirstInSpanNot().mjava","sourceNew":"  public void testNpeInSpanNearInSpanFirstInSpanNot() throws Exception {\n    final int n = 5;\n    SpanQuery include = spanFirstQuery(spanTermQuery(\"field\", \"forty\"), n);\n    SpanQuery near = spanNearOrderedQuery(\"field\", n-1, \"hundred\", \"forty\");\n    SpanQuery exclude = spanFirstQuery(near, n-1);\n    SpanQuery q = spanNotQuery(include, exclude);\n    \n    checkHits(q, new int[]{40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,\n            1049, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1240, 1241, 1242, 1243, 1244,\n            1245, 1246, 1247, 1248, 1249, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1440, 1441, 1442,\n            1443, 1444, 1445, 1446, 1447, 1448, 1449, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1640,\n            1641, 1642, 1643, 1644, 1645, 1646, 1647,\n            1648, 1649, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1840, 1841, 1842, 1843, 1844, 1845, 1846,\n            1847, 1848, 1849, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949});\n  }\n\n","sourceOld":"  @Test\n  public void testNpeInSpanNearInSpanFirstInSpanNot() throws Exception {\n    int n = 5;\n    SpanTermQuery hun = new SpanTermQuery(new Term(\"field\", \"hundred\"));\n    SpanTermQuery term40 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term40c = (SpanTermQuery)term40.clone();\n\n    SpanFirstQuery include = new SpanFirstQuery(term40, n);\n    SpanNearQuery near = new SpanNearQuery(new SpanQuery[]{hun, term40c},\n                                           n-1, true);\n    SpanFirstQuery exclude = new SpanFirstQuery(near, n-1);\n    SpanNotQuery q = new SpanNotQuery(include, exclude);\n    \n    checkHits(q, new int[]{40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,\n            1049, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1240, 1241, 1242, 1243, 1244,\n            1245, 1246, 1247, 1248, 1249, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1440, 1441, 1442,\n            1443, 1444, 1445, 1446, 1447, 1448, 1449, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1640,\n            1641, 1642, 1643, 1644, 1645, 1646, 1647,\n            1648, 1649, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1840, 1841, 1842, 1843, 1844, 1845, 1846,\n            1847, 1848, 1849, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c4f600f812447b5512daeaf8e5c9df5dbcc4a254":["28b61f1c9cf357a13efbb645d116d056feb80cf6"],"fdd572df21b78bb2212d045bf26a2773a48b58e9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28b61f1c9cf357a13efbb645d116d056feb80cf6":["fdd572df21b78bb2212d045bf26a2773a48b58e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4f600f812447b5512daeaf8e5c9df5dbcc4a254"]},"commit2Childs":{"c4f600f812447b5512daeaf8e5c9df5dbcc4a254":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fdd572df21b78bb2212d045bf26a2773a48b58e9":["28b61f1c9cf357a13efbb645d116d056feb80cf6"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fdd572df21b78bb2212d045bf26a2773a48b58e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"28b61f1c9cf357a13efbb645d116d056feb80cf6":["c4f600f812447b5512daeaf8e5c9df5dbcc4a254"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}