{"path":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessorFactory.LogUpdateProcessor#finish().mjava","commits":[{"id":"9367dbf5b00d7764583d991c1888f4acc9c9991a","date":1449048142,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessorFactory.LogUpdateProcessor#finish().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if (logDebug) { log.debug(\"PRE_UPDATE FINISH \" + req); }\n      if (next != null) next.finish();\n\n      // LOG A SUMMARY WHEN ALL DONE (INFO LEVEL)\n\n      if (log.isInfoEnabled()) {\n        log.info(getLogStringAndClearRspToLog());\n      }\n\n      if (log.isWarnEnabled() && slowUpdateThresholdMillis >= 0) {\n        final long elapsed = (long) req.getRequestTimer().getTime();\n        if (elapsed >= slowUpdateThresholdMillis) {\n          log.warn(\"slow: \" + getLogStringAndClearRspToLog());\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740d649f013f07efbeb73ca854f106c60166e7c0","date":1587431295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessorFactory.LogUpdateProcessor#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessorFactory.LogUpdateProcessor#finish().mjava","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if (logDebug) {\n        log.debug(\"PRE_UPDATE FINISH {}\", req);\n      }\n      if (next != null) next.finish();\n\n      // LOG A SUMMARY WHEN ALL DONE (INFO LEVEL)\n\n      if (log.isInfoEnabled()) {\n        log.info(getLogStringAndClearRspToLog());\n      }\n\n      if (log.isWarnEnabled() && slowUpdateThresholdMillis >= 0) {\n        final long elapsed = (long) req.getRequestTimer().getTime();\n        if (elapsed >= slowUpdateThresholdMillis) {\n          if (log.isWarnEnabled()) {\n            log.warn(\"slow: {}\", getLogStringAndClearRspToLog());\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish() throws IOException {\n      if (logDebug) { log.debug(\"PRE_UPDATE FINISH \" + req); }\n      if (next != null) next.finish();\n\n      // LOG A SUMMARY WHEN ALL DONE (INFO LEVEL)\n\n      if (log.isInfoEnabled()) {\n        log.info(getLogStringAndClearRspToLog());\n      }\n\n      if (log.isWarnEnabled() && slowUpdateThresholdMillis >= 0) {\n        final long elapsed = (long) req.getRequestTimer().getTime();\n        if (elapsed >= slowUpdateThresholdMillis) {\n          log.warn(\"slow: \" + getLogStringAndClearRspToLog());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessorFactory.LogUpdateProcessor#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/LogUpdateProcessorFactory.LogUpdateProcessor#finish().mjava","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if (logDebug) {\n        log.debug(\"PRE_UPDATE FINISH {}\", req);\n      }\n      if (next != null) next.finish();\n\n      // LOG A SUMMARY WHEN ALL DONE (INFO LEVEL)\n\n      if (log.isInfoEnabled()) {\n        log.info(getLogStringAndClearRspToLog());\n      }\n\n      if (log.isWarnEnabled() && slowUpdateThresholdMillis >= 0) {\n        final long elapsed = (long) req.getRequestTimer().getTime();\n        if (elapsed >= slowUpdateThresholdMillis) {\n          log.warn(\"slow: {}\", getLogStringAndClearRspToLog());\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish() throws IOException {\n      if (logDebug) {\n        log.debug(\"PRE_UPDATE FINISH {}\", req);\n      }\n      if (next != null) next.finish();\n\n      // LOG A SUMMARY WHEN ALL DONE (INFO LEVEL)\n\n      if (log.isInfoEnabled()) {\n        log.info(getLogStringAndClearRspToLog());\n      }\n\n      if (log.isWarnEnabled() && slowUpdateThresholdMillis >= 0) {\n        final long elapsed = (long) req.getRequestTimer().getTime();\n        if (elapsed >= slowUpdateThresholdMillis) {\n          if (log.isWarnEnabled()) {\n            log.warn(\"slow: {}\", getLogStringAndClearRspToLog());\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"740d649f013f07efbeb73ca854f106c60166e7c0":["9367dbf5b00d7764583d991c1888f4acc9c9991a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["740d649f013f07efbeb73ca854f106c60166e7c0"],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575e66bd4b2349209027f6801184da7fc3cba13f"]},"commit2Childs":{"740d649f013f07efbeb73ca854f106c60166e7c0":["575e66bd4b2349209027f6801184da7fc3cba13f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9367dbf5b00d7764583d991c1888f4acc9c9991a"],"575e66bd4b2349209027f6801184da7fc3cba13f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["740d649f013f07efbeb73ca854f106c60166e7c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}