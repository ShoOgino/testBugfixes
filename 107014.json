{"path":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#doSub(String).mjava","commits":[{"id":"e475642767c688ede5728d7918326f70b4e0bf3a","date":1366072489,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#doSub(String).mjava","pathOld":"/dev/null","sourceNew":"  // We can do this in 5.0 when we read the solr.xml since we don't need to keep the original around for persistence.\n  private String doSub(String path) {\n    String val = getVal(path, false);\n    if (val != null) {\n      val = PropertiesUtil.substituteProperty(val, null);\n    }\n    return val;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","date":1366659310,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#doSub(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#doSub(String).mjava","sourceNew":"  // We can do this in 5.0 when we read the solr.xml since we don't need to keep the original around for persistence.\n  private String doSub(String path) {\n    String val = config.getVal(path, false);\n    if (val != null) {\n      val = PropertiesUtil.substituteProperty(val, null);\n    }\n    return val;\n  }\n\n","sourceOld":"  // We can do this in 5.0 when we read the solr.xml since we don't need to keep the original around for persistence.\n  private String doSub(String path) {\n    String val = getVal(path, false);\n    if (val != null) {\n      val = PropertiesUtil.substituteProperty(val, null);\n    }\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a877077e0a22a42eebce7d1052c58e97d3afb12d","date":1405981118,"type":4,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#doSub(String).mjava","sourceNew":null,"sourceOld":"  // We can do this in 5.0 when we read the solr.xml since we don't need to keep the original around for persistence.\n  private String doSub(String path) {\n    String val = config.getVal(path, false);\n    if (val != null) {\n      val = PropertiesUtil.substituteProperty(val, null);\n    }\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e475642767c688ede5728d7918326f70b4e0bf3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["e475642767c688ede5728d7918326f70b4e0bf3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a877077e0a22a42eebce7d1052c58e97d3afb12d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e475642767c688ede5728d7918326f70b4e0bf3a"],"e475642767c688ede5728d7918326f70b4e0bf3a":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}