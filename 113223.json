{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/LengthGoalBreakIterator#LengthGoalBreakIterator(BreakIterator,int,float,boolean,int).mjava","commits":[{"id":"9ab9796b8ce55058e483d2f195ac9b1942fcf478","date":1577858220,"type":1,"author":"Nándor Mátravölgyi","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/LengthGoalBreakIterator#LengthGoalBreakIterator(BreakIterator,int,float,boolean,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/LengthGoalBreakIterator#LengthGoalBreakIterator(BreakIterator,int,boolean).mjava","sourceNew":"  private LengthGoalBreakIterator(BreakIterator baseIter, int lengthGoal, float fragmentAlignment,\n                                  boolean isMinimumLength, int currentCache) {\n    this.baseIter = baseIter;\n    this.currentCache = currentCache;\n    this.lengthGoal = lengthGoal;\n    if (fragmentAlignment < 0.f || fragmentAlignment > 1.f || !Float.isFinite(fragmentAlignment)) {\n      throw new IllegalArgumentException(\"fragmentAlignment must be >= zero and <= one\");\n    }\n    this.fragmentAlignment = fragmentAlignment;\n    this.isMinimumLength = isMinimumLength;\n  }\n\n","sourceOld":"  private LengthGoalBreakIterator(BreakIterator baseIter, int lengthGoal, boolean isMinimumLength) {\n    this.baseIter = baseIter;\n    this.lengthGoal = lengthGoal;\n    this.isMinimumLength = isMinimumLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c606b777c4250f3f3f6f66d659c7c4c403679b71","date":1577958559,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/LengthGoalBreakIterator#LengthGoalBreakIterator(BreakIterator,int,float,boolean,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/LengthGoalBreakIterator#LengthGoalBreakIterator(BreakIterator,int,boolean).mjava","sourceNew":"  private LengthGoalBreakIterator(BreakIterator baseIter, int lengthGoal, float fragmentAlignment,\n                                  boolean isMinimumLength, int currentCache) {\n    this.baseIter = baseIter;\n    this.currentCache = currentCache;\n    this.lengthGoal = lengthGoal;\n    if (fragmentAlignment < 0.f || fragmentAlignment > 1.f || !Float.isFinite(fragmentAlignment)) {\n      throw new IllegalArgumentException(\"fragmentAlignment must be >= zero and <= one\");\n    }\n    this.fragmentAlignment = fragmentAlignment;\n    this.isMinimumLength = isMinimumLength;\n  }\n\n","sourceOld":"  private LengthGoalBreakIterator(BreakIterator baseIter, int lengthGoal, boolean isMinimumLength) {\n    this.baseIter = baseIter;\n    this.lengthGoal = lengthGoal;\n    this.isMinimumLength = isMinimumLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ab9796b8ce55058e483d2f195ac9b1942fcf478":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c606b777c4250f3f3f6f66d659c7c4c403679b71":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9ab9796b8ce55058e483d2f195ac9b1942fcf478"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ab9796b8ce55058e483d2f195ac9b1942fcf478"]},"commit2Childs":{"9ab9796b8ce55058e483d2f195ac9b1942fcf478":["c606b777c4250f3f3f6f66d659c7c4c403679b71","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c606b777c4250f3f3f6f66d659c7c4c403679b71":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ab9796b8ce55058e483d2f195ac9b1942fcf478","c606b777c4250f3f3f6f66d659c7c4c403679b71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c606b777c4250f3f3f6f66d659c7c4c403679b71","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}