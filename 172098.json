{"path":"lucene/core/src/java/org/apache/lucene/util/VirtualMethod#[C]_compareImplementationDistance(Class[#-extends-C],VirtualMethod[C],VirtualMethod[C]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/VirtualMethod#[C]_compareImplementationDistance(Class[#-extends-C],VirtualMethod[C],VirtualMethod[C]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/VirtualMethod#[C]_compareImplementationDistance(Class[#-extends-C],VirtualMethod[C],VirtualMethod[C]).mjava","sourceNew":"  /**\n   * Utility method that compares the implementation/override distance of two methods.\n   * @return <ul>\n   *  <li>&gt; 1, iff {@code m1} is overridden/implemented in a subclass of the class overriding/declaring {@code m2}\n   *  <li>&lt; 1, iff {@code m2} is overridden in a subclass of the class overriding/declaring {@code m1}\n   *  <li>0, iff both methods are overridden in the same class (or are not overridden at all)\n   * </ul>\n   */\n  public static <C> int compareImplementationDistance(final Class<? extends C> clazz,\n    final VirtualMethod<C> m1, final VirtualMethod<C> m2)\n  {\n    return Integer.valueOf(m1.getImplementationDistance(clazz)).compareTo(m2.getImplementationDistance(clazz));\n  }\n\n","sourceOld":"  /**\n   * Utility method that compares the implementation/override distance of two methods.\n   * @return <ul>\n   *  <li>&gt; 1, iff {@code m1} is overridden/implemented in a subclass of the class overriding/declaring {@code m2}\n   *  <li>&lt; 1, iff {@code m2} is overridden in a subclass of the class overriding/declaring {@code m1}\n   *  <li>0, iff both methods are overridden in the same class (or are not overridden at all)\n   * </ul>\n   */\n  public static <C> int compareImplementationDistance(final Class<? extends C> clazz,\n    final VirtualMethod<C> m1, final VirtualMethod<C> m2)\n  {\n    return Integer.valueOf(m1.getImplementationDistance(clazz)).compareTo(m2.getImplementationDistance(clazz));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02a44d5e01a267563c3713e7a918b6ad08cc8052","date":1490708104,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/VirtualMethod#[C]_compareImplementationDistance(Class[#-extends-C],VirtualMethod[C],VirtualMethod[C]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/VirtualMethod#[C]_compareImplementationDistance(Class[#-extends-C],VirtualMethod[C],VirtualMethod[C]).mjava","sourceNew":"  /**\n   * Utility method that compares the implementation/override distance of two methods.\n   * @return <ul>\n   *  <li>&gt; 1, iff {@code m1} is overridden/implemented in a subclass of the class overriding/declaring {@code m2}\n   *  <li>&lt; 1, iff {@code m2} is overridden in a subclass of the class overriding/declaring {@code m1}\n   *  <li>0, iff both methods are overridden in the same class (or are not overridden at all)\n   * </ul>\n   */\n  public static <C> int compareImplementationDistance(final Class<? extends C> clazz,\n    final VirtualMethod<C> m1, final VirtualMethod<C> m2)\n  {\n    return Integer.compare(m1.getImplementationDistance(clazz), m2.getImplementationDistance(clazz));\n  }\n\n","sourceOld":"  /**\n   * Utility method that compares the implementation/override distance of two methods.\n   * @return <ul>\n   *  <li>&gt; 1, iff {@code m1} is overridden/implemented in a subclass of the class overriding/declaring {@code m2}\n   *  <li>&lt; 1, iff {@code m2} is overridden in a subclass of the class overriding/declaring {@code m1}\n   *  <li>0, iff both methods are overridden in the same class (or are not overridden at all)\n   * </ul>\n   */\n  public static <C> int compareImplementationDistance(final Class<? extends C> clazz,\n    final VirtualMethod<C> m1, final VirtualMethod<C> m2)\n  {\n    return Integer.valueOf(m1.getImplementationDistance(clazz)).compareTo(m2.getImplementationDistance(clazz));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e10a66eeb8616a226c44e77c45ed0afc96ef423","date":1490873945,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/VirtualMethod#[C]_compareImplementationDistance(Class[#-extends-C],VirtualMethod[C],VirtualMethod[C]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/VirtualMethod#[C]_compareImplementationDistance(Class[#-extends-C],VirtualMethod[C],VirtualMethod[C]).mjava","sourceNew":"  /**\n   * Utility method that compares the implementation/override distance of two methods.\n   * @return <ul>\n   *  <li>&gt; 1, iff {@code m1} is overridden/implemented in a subclass of the class overriding/declaring {@code m2}\n   *  <li>&lt; 1, iff {@code m2} is overridden in a subclass of the class overriding/declaring {@code m1}\n   *  <li>0, iff both methods are overridden in the same class (or are not overridden at all)\n   * </ul>\n   */\n  public static <C> int compareImplementationDistance(final Class<? extends C> clazz,\n    final VirtualMethod<C> m1, final VirtualMethod<C> m2)\n  {\n    return Integer.compare(m1.getImplementationDistance(clazz), m2.getImplementationDistance(clazz));\n  }\n\n","sourceOld":"  /**\n   * Utility method that compares the implementation/override distance of two methods.\n   * @return <ul>\n   *  <li>&gt; 1, iff {@code m1} is overridden/implemented in a subclass of the class overriding/declaring {@code m2}\n   *  <li>&lt; 1, iff {@code m2} is overridden in a subclass of the class overriding/declaring {@code m1}\n   *  <li>0, iff both methods are overridden in the same class (or are not overridden at all)\n   * </ul>\n   */\n  public static <C> int compareImplementationDistance(final Class<? extends C> clazz,\n    final VirtualMethod<C> m1, final VirtualMethod<C> m2)\n  {\n    return Integer.valueOf(m1.getImplementationDistance(clazz)).compareTo(m2.getImplementationDistance(clazz));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5e10a66eeb8616a226c44e77c45ed0afc96ef423":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02a44d5e01a267563c3713e7a918b6ad08cc8052"],"02a44d5e01a267563c3713e7a918b6ad08cc8052":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5e10a66eeb8616a226c44e77c45ed0afc96ef423","02a44d5e01a267563c3713e7a918b6ad08cc8052"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5e10a66eeb8616a226c44e77c45ed0afc96ef423":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"02a44d5e01a267563c3713e7a918b6ad08cc8052":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["5e10a66eeb8616a226c44e77c45ed0afc96ef423","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}