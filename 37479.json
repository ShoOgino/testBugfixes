{"path":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","commits":[{"id":"e69f59b863731d864bf3047235e718f0f88f8841","date":1250105498,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"/dev/null","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA);\n    readerB = IndexReader.open(dirB);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA);\n    readerB = IndexReader.open(dirB);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA);\n    readerB = IndexReader.open(dirB);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    IndexWriter wB = new IndexWriter(dirB, new IndexWriterConfig(TEST_VERSION_CURRENT));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    IndexWriter wB = new IndexWriter(dirB, new IndexWriterConfig(TEST_VERSION_CURRENT));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    IndexWriter wB = new IndexWriter(dirB, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n    IndexWriter wB = new IndexWriter(dirB, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                     IndexWriter.MaxFieldLength.LIMITED);\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    IndexWriter wB = new IndexWriter(dirB, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    RAMDirectory dirA = new RAMDirectory();\n    RAMDirectory dirB = new RAMDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    IndexWriter wB = new IndexWriter(dirB, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    readerA = IndexReader.open(dirA, true);\n    readerB = IndexReader.open(dirB, true);\n    readerX = new MultiReader(new IndexReader[] { readerA, readerB });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["0a046c0c310bc77931fc8441bd920053b607dd14"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["e69f59b863731d864bf3047235e718f0f88f8841"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"e69f59b863731d864bf3047235e718f0f88f8841":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["e69f59b863731d864bf3047235e718f0f88f8841","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"0a046c0c310bc77931fc8441bd920053b607dd14":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"e69f59b863731d864bf3047235e718f0f88f8841":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e69f59b863731d864bf3047235e718f0f88f8841"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}