{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90bebc0585625959c8f1752410aea0884dc253f0","date":1287520434,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c1fe1aedb70da4139fd9f2f7e92e572017fd083","date":1309827452,"type":3,"author":"Adriano Crestani Campos","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    spanQueryConfigHandler.set(SpansQueryConfigHandler.UNIQUE_FIELD, \"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    spanQueryConfigHandler.set(SpansQueryConfigHandler.UNIQUE_FIELD, \"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    spanQueryConfigHandler.set(SpansQueryConfigHandler.UNIQUE_FIELD, \"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    spanQueryConfigHandler.set(SpansQueryConfigHandler.UNIQUE_FIELD, \"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    spanQueryConfigHandler.set(SpansQueryConfigHandler.UNIQUE_FIELD, \"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["2c1fe1aedb70da4139fd9f2f7e92e572017fd083"],"2c1fe1aedb70da4139fd9f2f7e92e572017fd083":["90bebc0585625959c8f1752410aea0884dc253f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","90bebc0585625959c8f1752410aea0884dc253f0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["9454a6510e2db155fb01faa5c049b06ece95fab9","90bebc0585625959c8f1752410aea0884dc253f0"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["90bebc0585625959c8f1752410aea0884dc253f0","2c1fe1aedb70da4139fd9f2f7e92e572017fd083"],"90bebc0585625959c8f1752410aea0884dc253f0":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["90bebc0585625959c8f1752410aea0884dc253f0","2c1fe1aedb70da4139fd9f2f7e92e572017fd083"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2c1fe1aedb70da4139fd9f2f7e92e572017fd083":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"90bebc0585625959c8f1752410aea0884dc253f0":["2c1fe1aedb70da4139fd9f2f7e92e572017fd083","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","90bebc0585625959c8f1752410aea0884dc253f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}