{"path":"solr/src/java/org/apache/solr/search/TopGroupCollector[Grouping]#buildSet().mjava","commits":[{"id":"9d9916984e99244c407152f6cfc2c3bf89a30bc8","date":1284760018,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/TopGroupCollector[Grouping]#buildSet().mjava","pathOld":"solr/src/java/org/apache/solr/search/TopGroupCollector[MultiCollector]#buildSet().mjava","sourceNew":"  void buildSet() {\n    Comparator<SearchGroup> comparator = new Comparator<SearchGroup>() {\n      public int compare(SearchGroup o1, SearchGroup o2) {\n        for (int i = 0;; i++) {\n          FieldComparator fc = comparators[i];\n          int c = reversed[i] * fc.compare(o1.comparatorSlot, o2.comparatorSlot);\n          if (c != 0) {\n            return c;\n          } else if (i == comparators.length - 1) {\n            return o1.topDoc - o2.topDoc;\n          }\n        }\n      }\n    };\n\n    orderedGroups = new TreeSet<SearchGroup>(comparator);\n    orderedGroups.addAll(groupMap.values());\n    if (orderedGroups.size() == 0) return;\n    for (FieldComparator fc : comparators)\n      fc.setBottom(orderedGroups.last().comparatorSlot);\n  }\n\n","sourceOld":"  void buildSet() {\n    Comparator<SearchGroup> comparator = new Comparator<SearchGroup>() {\n      public int compare(SearchGroup o1, SearchGroup o2) {\n        for (int i = 0;; i++) {\n          FieldComparator fc = comparators[i];\n          int c = reversed[i] * fc.compare(o1.comparatorSlot, o2.comparatorSlot);\n          if (c != 0) {\n            return c;\n          } else if (i == comparators.length - 1) {\n            return o1.topDoc - o2.topDoc;\n          }\n        }\n      }\n    };\n\n    orderedGroups = new TreeSet<SearchGroup>(comparator);\n    orderedGroups.addAll(groupMap.values());\n    if (orderedGroups.size() == 0) return;\n    for (FieldComparator fc : comparators)\n      fc.setBottom(orderedGroups.last().comparatorSlot);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/TopGroupCollector[Grouping]#buildSet().mjava","pathOld":"/dev/null","sourceNew":"  void buildSet() {\n    Comparator<SearchGroup> comparator = new Comparator<SearchGroup>() {\n      public int compare(SearchGroup o1, SearchGroup o2) {\n        for (int i = 0;; i++) {\n          FieldComparator fc = comparators[i];\n          int c = reversed[i] * fc.compare(o1.comparatorSlot, o2.comparatorSlot);\n          if (c != 0) {\n            return c;\n          } else if (i == comparators.length - 1) {\n            return o1.topDoc - o2.topDoc;\n          }\n        }\n      }\n    };\n\n    orderedGroups = new TreeSet<SearchGroup>(comparator);\n    orderedGroups.addAll(groupMap.values());\n    if (orderedGroups.size() == 0) return;\n    for (FieldComparator fc : comparators)\n      fc.setBottom(orderedGroups.last().comparatorSlot);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c7cdfe5a1ea9db97faa404b251fa644faa73597","date":1308345959,"type":4,"author":"Martijn van Groningen","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/TopGroupCollector[Grouping]#buildSet().mjava","sourceNew":null,"sourceOld":"  void buildSet() {\n    Comparator<SearchGroup> comparator = new Comparator<SearchGroup>() {\n      public int compare(SearchGroup o1, SearchGroup o2) {\n        for (int i = 0;; i++) {\n          FieldComparator fc = comparators[i];\n          int c = reversed[i] * fc.compare(o1.comparatorSlot, o2.comparatorSlot);\n          if (c != 0) {\n            return c;\n          } else if (i == comparators.length - 1) {\n            return o1.topDoc - o2.topDoc;\n          }\n        }\n      }\n    };\n\n    orderedGroups = new TreeSet<SearchGroup>(comparator);\n    orderedGroups.addAll(groupMap.values());\n    if (orderedGroups.size() == 0) return;\n    for (FieldComparator fc : comparators)\n      fc.setBottom(orderedGroups.last().comparatorSlot);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7edfc3f7caa7b49a18fe367692768b33b018e9db","date":1308374217,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/TopGroupCollector[Grouping]#buildSet().mjava","sourceNew":null,"sourceOld":"  void buildSet() {\n    Comparator<SearchGroup> comparator = new Comparator<SearchGroup>() {\n      public int compare(SearchGroup o1, SearchGroup o2) {\n        for (int i = 0;; i++) {\n          FieldComparator fc = comparators[i];\n          int c = reversed[i] * fc.compare(o1.comparatorSlot, o2.comparatorSlot);\n          if (c != 0) {\n            return c;\n          } else if (i == comparators.length - 1) {\n            return o1.topDoc - o2.topDoc;\n          }\n        }\n      }\n    };\n\n    orderedGroups = new TreeSet<SearchGroup>(comparator);\n    orderedGroups.addAll(groupMap.values());\n    if (orderedGroups.size() == 0) return;\n    for (FieldComparator fc : comparators)\n      fc.setBottom(orderedGroups.last().comparatorSlot);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9d9916984e99244c407152f6cfc2c3bf89a30bc8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["9d9916984e99244c407152f6cfc2c3bf89a30bc8","9c7cdfe5a1ea9db97faa404b251fa644faa73597"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9c7cdfe5a1ea9db97faa404b251fa644faa73597":["9d9916984e99244c407152f6cfc2c3bf89a30bc8"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d9916984e99244c407152f6cfc2c3bf89a30bc8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9c7cdfe5a1ea9db97faa404b251fa644faa73597"]},"commit2Childs":{"9d9916984e99244c407152f6cfc2c3bf89a30bc8":["7edfc3f7caa7b49a18fe367692768b33b018e9db","9c7cdfe5a1ea9db97faa404b251fa644faa73597","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9d9916984e99244c407152f6cfc2c3bf89a30bc8","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9c7cdfe5a1ea9db97faa404b251fa644faa73597":["7edfc3f7caa7b49a18fe367692768b33b018e9db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7edfc3f7caa7b49a18fe367692768b33b018e9db","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}