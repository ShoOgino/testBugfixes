{"path":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#beforeClass().mjava","commits":[{"id":"8868b7c4fbf215c41e7b4ea2cfc40d1970672910","date":1480034167,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-unifiedhighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n\n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75babd1dfc2521603bfeb0968042e921d8c6c652","date":1480042089,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-unifiedhighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n\n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-unifiedhighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n\n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12f7f335611574989edc8f87d25d91e89aa385b6","date":1489690739,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    System.setProperty(\"filterCache.enabled\", \"false\");\n    System.setProperty(\"queryResultCache.enabled\", \"false\");\n    System.setProperty(\"documentCache.enabled\", \"true\"); // this is why we use this particular solrconfig\n    initCore(\"solrconfig-cache-enable-disable.xml\", \"schema-unifiedhighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n\n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-unifiedhighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n\n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b4eb0a25318cc756077fbde9bd3052690aed03d","date":1490280009,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    System.setProperty(\"filterCache.enabled\", \"false\");\n    System.setProperty(\"queryResultCache.enabled\", \"false\");\n    System.setProperty(\"documentCache.enabled\", \"true\"); // this is why we use this particular solrconfig\n    initCore(\"solrconfig-cache-enable-disable.xml\", \"schema-unifiedhighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n\n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-unifiedhighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n\n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"727bb765ff2542275f6d31f67be18d7104bae148":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","75babd1dfc2521603bfeb0968042e921d8c6c652"],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8868b7c4fbf215c41e7b4ea2cfc40d1970672910"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b4eb0a25318cc756077fbde9bd3052690aed03d":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"12f7f335611574989edc8f87d25d91e89aa385b6":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12f7f335611574989edc8f87d25d91e89aa385b6"]},"commit2Childs":{"727bb765ff2542275f6d31f67be18d7104bae148":[],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["727bb765ff2542275f6d31f67be18d7104bae148","7b4eb0a25318cc756077fbde9bd3052690aed03d","12f7f335611574989edc8f87d25d91e89aa385b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["727bb765ff2542275f6d31f67be18d7104bae148","8868b7c4fbf215c41e7b4ea2cfc40d1970672910","75babd1dfc2521603bfeb0968042e921d8c6c652"],"7b4eb0a25318cc756077fbde9bd3052690aed03d":[],"12f7f335611574989edc8f87d25d91e89aa385b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["727bb765ff2542275f6d31f67be18d7104bae148","7b4eb0a25318cc756077fbde9bd3052690aed03d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}