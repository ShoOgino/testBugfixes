{"path":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","commits":[{"id":"9c6c0dad4932399aec99b4818086cb1772773916","date":1520515900,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimSolrCloudTestCase#clusterShape(int,int).mjava","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of shards and replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getSlices().size() != expectedShards)\n        return false;\n      for (Slice slice : collectionState) {\n        int activeReplicas = 0;\n        for (Replica replica : slice) {\n          if (replica.isActive(liveNodes))\n            activeReplicas++;\n        }\n        if (activeReplicas != expectedReplicas)\n          return false;\n      }\n      return true;\n    };\n  }\n\n","sourceOld":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of shards and replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getSlices().size() != expectedShards)\n        return false;\n      for (Slice slice : collectionState) {\n        int activeReplicas = 0;\n        for (Replica replica : slice) {\n          if (replica.isActive(liveNodes))\n            activeReplicas++;\n        }\n        if (activeReplicas != expectedReplicas)\n          return false;\n      }\n      return true;\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1","date":1523453934,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of shards and replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return clusterShape(expectedShards, expectedReplicas, false);\n  }\n\n","sourceOld":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of shards and replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getSlices().size() != expectedShards)\n        return false;\n      for (Slice slice : collectionState) {\n        int activeReplicas = 0;\n        for (Replica replica : slice) {\n          if (replica.isActive(liveNodes))\n            activeReplicas++;\n        }\n        if (activeReplicas != expectedReplicas)\n          return false;\n      }\n      return true;\n    };\n  }\n\n","bugFix":null,"bugIntro":["042b92cf48996255bedb0c3c4bf772d7e06e4dea"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"43345f1452f9510f8aaadae6156fe0c834e7d957","date":1523483670,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of shards and replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return clusterShape(expectedShards, expectedReplicas, false);\n  }\n\n","sourceOld":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of shards and replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getSlices().size() != expectedShards)\n        return false;\n      for (Slice slice : collectionState) {\n        int activeReplicas = 0;\n        for (Replica replica : slice) {\n          if (replica.isActive(liveNodes))\n            activeReplicas++;\n        }\n        if (activeReplicas != expectedReplicas)\n          return false;\n      }\n      return true;\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e4aa99957dcb54cefbbec762eb896b084deac1b9","date":1526471995,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and replicas\n   * @param expectedShards expected number of active shards\n   * @param expectedReplicas expected number of active replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return clusterShape(expectedShards, expectedReplicas, false);\n  }\n\n","sourceOld":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of shards and replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return clusterShape(expectedShards, expectedReplicas, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"042b92cf48996255bedb0c3c4bf772d7e06e4dea","date":1534272102,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and replicas\n   * @param expectedShards expected number of active shards\n   * @param expectedReplicas expected number of active replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return clusterShape(expectedShards, expectedReplicas, false, false);\n  }\n\n","sourceOld":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and replicas\n   * @param expectedShards expected number of active shards\n   * @param expectedReplicas expected number of active replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return clusterShape(expectedShards, expectedReplicas, false);\n  }\n\n","bugFix":["ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#clusterShape(int,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and replicas\n   * @param expectedShards expected number of active shards\n   * @param expectedReplicas expected number of active replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return clusterShape(expectedShards, expectedReplicas, false, false);\n  }\n\n","sourceOld":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and replicas\n   * @param expectedShards expected number of active shards\n   * @param expectedReplicas expected number of active replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return clusterShape(expectedShards, expectedReplicas, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"042b92cf48996255bedb0c3c4bf772d7e06e4dea":["e4aa99957dcb54cefbbec762eb896b084deac1b9"],"e4aa99957dcb54cefbbec762eb896b084deac1b9":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"9c6c0dad4932399aec99b4818086cb1772773916":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1":["9c6c0dad4932399aec99b4818086cb1772773916"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["042b92cf48996255bedb0c3c4bf772d7e06e4dea"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["9c6c0dad4932399aec99b4818086cb1772773916","ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"]},"commit2Childs":{"042b92cf48996255bedb0c3c4bf772d7e06e4dea":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"e4aa99957dcb54cefbbec762eb896b084deac1b9":["042b92cf48996255bedb0c3c4bf772d7e06e4dea"],"9c6c0dad4932399aec99b4818086cb1772773916":["ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1","43345f1452f9510f8aaadae6156fe0c834e7d957"],"ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9c6c0dad4932399aec99b4818086cb1772773916"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["e4aa99957dcb54cefbbec762eb896b084deac1b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}