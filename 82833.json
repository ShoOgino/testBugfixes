{"path":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomString().mjava","commits":[{"id":"aedcfb5ebceafe4a0285436fa86269ed6c926442","date":1271441603,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomString().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a random unicode term, like TestStressIndexing.\n   */\n  private String randomString() {\n    final int end = random.nextInt(20);\n    if (buffer.length < 1 + end) {\n      char[] newBuffer = new char[(int) ((1 + end) * 1.25)];\n      System.arraycopy(buffer, 0, newBuffer, 0, buffer.length);\n      buffer = newBuffer;\n    }\n    for (int i = 0; i < end - 1; i++) {\n      int t = random.nextInt(6);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n        // Low surrogate\n        buffer[i] = (char) nextInt(0xdc00, 0xe000);\n      } else if (t <= 1) buffer[i] = (char) random.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(0x800, 0xd800);\n      else if (4 == t) buffer[i] = (char) nextInt(0xe000, 0xffff);\n      else if (5 == t) {\n        // Illegal unpaired surrogate\n        if (random.nextBoolean()) buffer[i] = (char) nextInt(0xd800, 0xdc00);\n        else buffer[i] = (char) nextInt(0xdc00, 0xe000);\n      }\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0403b0519d0821f7b707e9b1c4c1db0cff6f6712","date":1273160375,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomString().mjava","sourceNew":null,"sourceOld":"  /**\n   * Return a random unicode term, like TestStressIndexing.\n   */\n  private String randomString() {\n    final int end = random.nextInt(20);\n    if (buffer.length < 1 + end) {\n      char[] newBuffer = new char[(int) ((1 + end) * 1.25)];\n      System.arraycopy(buffer, 0, newBuffer, 0, buffer.length);\n      buffer = newBuffer;\n    }\n    for (int i = 0; i < end - 1; i++) {\n      int t = random.nextInt(6);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n        // Low surrogate\n        buffer[i] = (char) nextInt(0xdc00, 0xe000);\n      } else if (t <= 1) buffer[i] = (char) random.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(0x800, 0xd800);\n      else if (4 == t) buffer[i] = (char) nextInt(0xe000, 0xffff);\n      else if (5 == t) {\n        // Illegal unpaired surrogate\n        if (random.nextBoolean()) buffer[i] = (char) nextInt(0xd800, 0xdc00);\n        else buffer[i] = (char) nextInt(0xdc00, 0xe000);\n      }\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aedcfb5ebceafe4a0285436fa86269ed6c926442":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0403b0519d0821f7b707e9b1c4c1db0cff6f6712":["aedcfb5ebceafe4a0285436fa86269ed6c926442"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0403b0519d0821f7b707e9b1c4c1db0cff6f6712"]},"commit2Childs":{"aedcfb5ebceafe4a0285436fa86269ed6c926442":["0403b0519d0821f7b707e9b1c4c1db0cff6f6712"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aedcfb5ebceafe4a0285436fa86269ed6c926442"],"0403b0519d0821f7b707e9b1c4c1db0cff6f6712":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}