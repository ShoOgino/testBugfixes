{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter#ExternalRefSorter(OfflineSorter).mjava","commits":[{"id":"36f5a8c57e16c0f801006a52f87c75378427852e","date":1393256707,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter#ExternalRefSorter(OfflineSorter).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter#ExternalRefSorter(Sort).mjava","sourceNew":"  /**\n   * Will buffer all sequences to a temporary file and then sort (all on-disk).\n   */\n  public ExternalRefSorter(OfflineSorter sort) throws IOException {\n    this.sort = sort;\n    this.input = File.createTempFile(\"RefSorter-\", \".raw\",\n        OfflineSorter.defaultTempDir());\n    this.writer = new OfflineSorter.ByteSequencesWriter(input);\n  }\n\n","sourceOld":"  /**\n   * Will buffer all sequences to a temporary file and then sort (all on-disk).\n   */\n  public ExternalRefSorter(Sort sort) throws IOException {\n    this.sort = sort;\n    this.input = File.createTempFile(\"RefSorter-\", \".raw\",\n        Sort.defaultTempDir());\n    this.writer = new Sort.ByteSequencesWriter(input);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter#ExternalRefSorter(OfflineSorter).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter#ExternalRefSorter(Sort).mjava","sourceNew":"  /**\n   * Will buffer all sequences to a temporary file and then sort (all on-disk).\n   */\n  public ExternalRefSorter(OfflineSorter sort) throws IOException {\n    this.sort = sort;\n    this.input = File.createTempFile(\"RefSorter-\", \".raw\",\n        OfflineSorter.defaultTempDir());\n    this.writer = new OfflineSorter.ByteSequencesWriter(input);\n  }\n\n","sourceOld":"  /**\n   * Will buffer all sequences to a temporary file and then sort (all on-disk).\n   */\n  public ExternalRefSorter(Sort sort) throws IOException {\n    this.sort = sort;\n    this.input = File.createTempFile(\"RefSorter-\", \".raw\",\n        Sort.defaultTempDir());\n    this.writer = new Sort.ByteSequencesWriter(input);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter#ExternalRefSorter(OfflineSorter).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter#ExternalRefSorter(OfflineSorter).mjava","sourceNew":"  /**\n   * Will buffer all sequences to a temporary file and then sort (all on-disk).\n   */\n  public ExternalRefSorter(OfflineSorter sort) throws IOException {\n    this.sort = sort;\n    this.input = Files.createTempFile(OfflineSorter.defaultTempDir(), \"RefSorter-\", \".raw\");\n    this.writer = new OfflineSorter.ByteSequencesWriter(input);\n  }\n\n","sourceOld":"  /**\n   * Will buffer all sequences to a temporary file and then sort (all on-disk).\n   */\n  public ExternalRefSorter(OfflineSorter sort) throws IOException {\n    this.sort = sort;\n    this.input = File.createTempFile(\"RefSorter-\", \".raw\",\n        OfflineSorter.defaultTempDir());\n    this.writer = new OfflineSorter.ByteSequencesWriter(input);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ccfbb043f2ebf23df8782dd32a68ff1b399c3d2","date":1443129829,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter#ExternalRefSorter(OfflineSorter).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter#ExternalRefSorter(OfflineSorter).mjava","sourceNew":"  /**\n   * Will buffer all sequences to a temporary file and then sort (all on-disk).\n   */\n  public ExternalRefSorter(OfflineSorter sort) throws IOException {\n    this.sort = sort;\n    this.input = Files.createTempFile(OfflineSorter.getDefaultTempDir(), \"RefSorter-\", \".raw\");\n    this.writer = new OfflineSorter.ByteSequencesWriter(input);\n  }\n\n","sourceOld":"  /**\n   * Will buffer all sequences to a temporary file and then sort (all on-disk).\n   */\n  public ExternalRefSorter(OfflineSorter sort) throws IOException {\n    this.sort = sort;\n    this.input = Files.createTempFile(OfflineSorter.defaultTempDir(), \"RefSorter-\", \".raw\");\n    this.writer = new OfflineSorter.ByteSequencesWriter(input);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter#ExternalRefSorter(OfflineSorter).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter#ExternalRefSorter(OfflineSorter).mjava","sourceNew":"  /**\n   * Will buffer all sequences to a temporary file and then sort (all on-disk).\n   */\n  public ExternalRefSorter(OfflineSorter sorter) throws IOException {\n    this.sorter = sorter;\n    this.input = sorter.getDirectory().createTempOutput(sorter.getTempFileNamePrefix(), \"RefSorterRaw\", IOContext.DEFAULT);\n    this.writer = new OfflineSorter.ByteSequencesWriter(this.input);\n  }\n\n","sourceOld":"  /**\n   * Will buffer all sequences to a temporary file and then sort (all on-disk).\n   */\n  public ExternalRefSorter(OfflineSorter sort) throws IOException {\n    this.sort = sort;\n    this.input = Files.createTempFile(OfflineSorter.getDefaultTempDir(), \"RefSorter-\", \".raw\");\n    this.writer = new OfflineSorter.ByteSequencesWriter(input);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ccfbb043f2ebf23df8782dd32a68ff1b399c3d2":["f4abec28b874149a7223e32cc7a01704c27790de"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","36f5a8c57e16c0f801006a52f87c75378427852e"],"36f5a8c57e16c0f801006a52f87c75378427852e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["8ccfbb043f2ebf23df8782dd32a68ff1b399c3d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"]},"commit2Childs":{"8ccfbb043f2ebf23df8782dd32a68ff1b399c3d2":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["f4abec28b874149a7223e32cc7a01704c27790de"],"36f5a8c57e16c0f801006a52f87c75378427852e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba791bce8103c79e38f957e9c5a53a75871bd918","36f5a8c57e16c0f801006a52f87c75378427852e"],"f4abec28b874149a7223e32cc7a01704c27790de":["8ccfbb043f2ebf23df8782dd32a68ff1b399c3d2"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}