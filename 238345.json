{"path":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDoubleRangeSearch().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDoubleRangeSearch().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieDoubleRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDoubleRangeSearch() throws Exception {\n    for (long i = Integer.MAX_VALUE, c = 0; i < (long) Integer.MAX_VALUE + 10l; i++) {\n      assertU(adoc(\"id\", String.valueOf(c++), \"tdouble\", String.valueOf(i * 2.33d)));\n    }\n    assertU(commit());\n    String fq = \"tdouble:[\" + Integer.MAX_VALUE * 2.33d + \" TO \" + (5l + Integer.MAX_VALUE) * 2.33d + \"]\";\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", fq), \"//*[@numFound='6']\");\n    assertQ(\"Range filter tdouble:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdouble:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble desc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n    assertQ(\"Sort ascending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble asc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.00363689751E9']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdouble fields\", req(\"q\", \"_val_:\\\"sum(tdouble,1.0)\\\"\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDoubleRangeSearch() throws Exception {\n    for (long i = Integer.MAX_VALUE, c = 0; i < (long) Integer.MAX_VALUE + 10l; i++) {\n      assertU(adoc(\"id\", String.valueOf(c++), \"tdouble\", String.valueOf(i * 2.33d)));\n    }\n    assertU(commit());\n    String fq = \"tdouble:[\" + Integer.MAX_VALUE * 2.33d + \" TO \" + (5l + Integer.MAX_VALUE) * 2.33d + \"]\";\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", fq), \"//*[@numFound='6']\");\n    assertQ(\"Range filter tdouble:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdouble:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble desc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n    assertQ(\"Sort ascending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble asc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.00363689751E9']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdouble fields\", req(\"q\", \"_val_:\\\"sum(tdouble,1.0)\\\"\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDoubleRangeSearch().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieDoubleRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDoubleRangeSearch() throws Exception {\n    for (long i = Integer.MAX_VALUE, c = 0; i < (long) Integer.MAX_VALUE + 10l; i++) {\n      assertU(adoc(\"id\", String.valueOf(c++), \"tdouble\", String.valueOf(i * 2.33d)));\n    }\n    assertU(commit());\n    String fq = \"tdouble:[\" + Integer.MAX_VALUE * 2.33d + \" TO \" + (5l + Integer.MAX_VALUE) * 2.33d + \"]\";\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", fq), \"//*[@numFound='6']\");\n    assertQ(\"Range filter tdouble:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdouble:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble desc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n    assertQ(\"Sort ascending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble asc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.00363689751E9']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdouble fields\", req(\"q\", \"_val_:\\\"sum(tdouble,1.0)\\\"\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDoubleRangeSearch() throws Exception {\n    for (long i = Integer.MAX_VALUE, c = 0; i < (long) Integer.MAX_VALUE + 10l; i++) {\n      assertU(adoc(\"id\", String.valueOf(c++), \"tdouble\", String.valueOf(i * 2.33d)));\n    }\n    assertU(commit());\n    String fq = \"tdouble:[\" + Integer.MAX_VALUE * 2.33d + \" TO \" + (5l + Integer.MAX_VALUE) * 2.33d + \"]\";\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", fq), \"//*[@numFound='6']\");\n    assertQ(\"Range filter tdouble:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdouble:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble desc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n    assertQ(\"Sort ascending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble asc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.00363689751E9']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdouble fields\", req(\"q\", \"_val_:\\\"sum(tdouble,1.0)\\\"\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDoubleRangeSearch().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieDoubleRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDoubleRangeSearch() throws Exception {\n    for (long i = Integer.MAX_VALUE, c = 0; i < (long) Integer.MAX_VALUE + 10l; i++) {\n      assertU(adoc(\"id\", String.valueOf(c++), \"tdouble\", String.valueOf(i * 2.33d)));\n    }\n    assertU(commit());\n    String fq = \"tdouble:[\" + Integer.MAX_VALUE * 2.33d + \" TO \" + (5l + Integer.MAX_VALUE) * 2.33d + \"]\";\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", fq), \"//*[@numFound='6']\");\n    assertQ(\"Range filter tdouble:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdouble:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble desc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n    assertQ(\"Sort ascending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble asc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.00363689751E9']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdouble fields\", req(\"q\", \"_val_:\\\"sum(tdouble,1.0)\\\"\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDoubleRangeSearch() throws Exception {\n    for (long i = Integer.MAX_VALUE, c = 0; i < (long) Integer.MAX_VALUE + 10l; i++) {\n      assertU(adoc(\"id\", String.valueOf(c++), \"tdouble\", String.valueOf(i * 2.33d)));\n    }\n    assertU(commit());\n    String fq = \"tdouble:[\" + Integer.MAX_VALUE * 2.33d + \" TO \" + (5l + Integer.MAX_VALUE) * 2.33d + \"]\";\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", fq), \"//*[@numFound='6']\");\n    assertQ(\"Range filter tdouble:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdouble:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble desc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n    assertQ(\"Sort ascending does not work correctly on tdouble fields\", req(\"q\", \"*:*\", \"sort\", \"tdouble asc\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.00363689751E9']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdouble fields\", req(\"q\", \"_val_:\\\"sum(tdouble,1.0)\\\"\"), \"//*[@numFound='10']\", \"//double[@name='tdouble'][.='5.0036369184800005E9']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}