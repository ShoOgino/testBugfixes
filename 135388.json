{"path":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#testExactMultiPhraseQuery().mjava","commits":[{"id":"3b11b9d5eaf9707760ca5151530830a825197023","date":1525941319,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#testExactMultiPhraseQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testExactMultiPhraseQuery() throws IOException {\n    MultiPhraseQuery mpq = new MultiPhraseQuery.Builder()\n        .add(new Term(FIELD_WITH_OFFSETS, \"sentence\"))\n        .add(new Term[]{ new Term(FIELD_WITH_OFFSETS, \"with\"), new Term(FIELD_WITH_OFFSETS, \"iterations\") })\n        .build();\n    checkMatches(mpq, FIELD_WITH_OFFSETS, new int[][]{\n        { 0 }, { 1 }, { 2 }, { 3 },\n        { 4, 2, 3, 9, 22, 6, 7, 35, 54 }\n    });\n\n    MultiPhraseQuery mpq2 = new MultiPhraseQuery.Builder()\n        .add(new Term[]{ new Term(FIELD_WITH_OFFSETS, \"a\"), new Term(FIELD_WITH_OFFSETS, \"many\")})\n        .add(new Term(FIELD_WITH_OFFSETS, \"phrase\"))\n        .build();\n    checkMatches(mpq2, FIELD_WITH_OFFSETS, new int[][]{\n        { 0 }, { 1 }, { 2 }, { 3 },\n        { 4, 0, 1, 0, 8, 4, 5, 23, 34, 9, 10, 58, 66 }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41ebc07bccf12a902ca6a0077910d18ee38b695f","date":1532336521,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#testExactMultiPhraseQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#testExactMultiPhraseQuery().mjava","sourceNew":"  public void testExactMultiPhraseQuery() throws IOException {\n    MultiPhraseQuery mpq = new MultiPhraseQuery.Builder()\n        .add(new Term(FIELD_WITH_OFFSETS, \"sentence\"))\n        .add(new Term[]{ new Term(FIELD_WITH_OFFSETS, \"with\"), new Term(FIELD_WITH_OFFSETS, \"iterations\") })\n        .build();\n    checkMatches(mpq, FIELD_WITH_OFFSETS, new int[][]{\n        { 0 }, { 1 }, { 2 }, { 3 },\n        { 4, 2, 3, 9, 22, 6, 7, 35, 54 }\n    });\n\n    MultiPhraseQuery mpq2 = new MultiPhraseQuery.Builder()\n        .add(new Term[]{ new Term(FIELD_WITH_OFFSETS, \"a\"), new Term(FIELD_WITH_OFFSETS, \"many\")})\n        .add(new Term(FIELD_WITH_OFFSETS, \"phrase\"))\n        .build();\n    checkMatches(mpq2, FIELD_WITH_OFFSETS, new int[][]{\n        { 0 }, { 1 }, { 2 }, { 3 },\n        { 4, 0, 1, 0, 8, 4, 5, 23, 34, 9, 10, 58, 66 }\n    });\n    assertIsLeafMatch(mpq2, FIELD_WITH_OFFSETS);\n  }\n\n","sourceOld":"  public void testExactMultiPhraseQuery() throws IOException {\n    MultiPhraseQuery mpq = new MultiPhraseQuery.Builder()\n        .add(new Term(FIELD_WITH_OFFSETS, \"sentence\"))\n        .add(new Term[]{ new Term(FIELD_WITH_OFFSETS, \"with\"), new Term(FIELD_WITH_OFFSETS, \"iterations\") })\n        .build();\n    checkMatches(mpq, FIELD_WITH_OFFSETS, new int[][]{\n        { 0 }, { 1 }, { 2 }, { 3 },\n        { 4, 2, 3, 9, 22, 6, 7, 35, 54 }\n    });\n\n    MultiPhraseQuery mpq2 = new MultiPhraseQuery.Builder()\n        .add(new Term[]{ new Term(FIELD_WITH_OFFSETS, \"a\"), new Term(FIELD_WITH_OFFSETS, \"many\")})\n        .add(new Term(FIELD_WITH_OFFSETS, \"phrase\"))\n        .build();\n    checkMatches(mpq2, FIELD_WITH_OFFSETS, new int[][]{\n        { 0 }, { 1 }, { 2 }, { 3 },\n        { 4, 0, 1, 0, 8, 4, 5, 23, 34, 9, 10, 58, 66 }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3b11b9d5eaf9707760ca5151530830a825197023":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["41ebc07bccf12a902ca6a0077910d18ee38b695f"],"41ebc07bccf12a902ca6a0077910d18ee38b695f":["3b11b9d5eaf9707760ca5151530830a825197023"]},"commit2Childs":{"3b11b9d5eaf9707760ca5151530830a825197023":["41ebc07bccf12a902ca6a0077910d18ee38b695f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b11b9d5eaf9707760ca5151530830a825197023"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"41ebc07bccf12a902ca6a0077910d18ee38b695f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}