{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getFeed(GDataRequest,GDataResponse).mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getFeed(GDataRequest,GDataResponse).mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * @see org.apache.lucene.gdata.server.Service#getFeed(org.apache.lucene.gdata.server.GDataRequest, \n     *      org.apache.lucene.gdata.server.GDataResponse) \n     */ \n    @SuppressWarnings(\"unchecked\") \n    @Override \n    public BaseFeed getFeed(GDataRequest request, GDataResponse response) \n            throws ServiceException { \n        checkFeedIsRegisterd(request); \n \n        try { \n            // TODO remove when storing feeds is implemented just for \n            // development \n            BaseFeed feed = this.storage.getFeed(request.getFeedId(), request \n                    .getStartIndex(), request.getItemsPerPage()); \n            buildDynamicFeedElements(request, feed); \n            List<BaseEntry> list = feed.getEntries(); \n            addContextPath(list, request.getContextPath()); \n            return feed; \n        } catch (StorageException e) { \n            ServiceException ex = new ServiceException(\"Could not get feed\", e); \n            ex.setStackTrace(e.getStackTrace()); \n            throw ex; \n        } \n \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getFeed(GDataRequest,GDataResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getFeed(GDataRequest,GDataResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getFeed(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public BaseFeed getFeed(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        ServerBaseFeed feed = new ServerBaseFeed();\n        feed.setId(request.getFeedId());\n        feed.setStartIndex(request.getStartIndex());\n        feed.setItemsPerPage(request.getItemsPerPage());\n        feed.setServiceConfig(request.getConfigurator());\n        try {\n            BaseFeed retVal = this.storage.getFeed(feed);\n            dynamicElementFeedStragey(retVal, request);\n\n            return retVal;\n            /*\n             * resouce not found will be detected in Gdata request.\n             * the request queries the storage for the feed to get the serivce for the feed\n             */\n        } catch (StorageException e) {\n            response.setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n            ServiceException ex = new ServiceException(\"Could not get feed\", e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n\n    }\n\n","sourceOld":"    /** \n     * @see org.apache.lucene.gdata.server.Service#getFeed(org.apache.lucene.gdata.server.GDataRequest, \n     *      org.apache.lucene.gdata.server.GDataResponse) \n     */ \n    @SuppressWarnings(\"unchecked\") \n    @Override \n    public BaseFeed getFeed(GDataRequest request, GDataResponse response) \n            throws ServiceException { \n        checkFeedIsRegisterd(request); \n \n        try { \n            // TODO remove when storing feeds is implemented just for \n            // development \n            BaseFeed feed = this.storage.getFeed(request.getFeedId(), request \n                    .getStartIndex(), request.getItemsPerPage()); \n            buildDynamicFeedElements(request, feed); \n            List<BaseEntry> list = feed.getEntries(); \n            addContextPath(list, request.getContextPath()); \n            return feed; \n        } catch (StorageException e) { \n            ServiceException ex = new ServiceException(\"Could not get feed\", e); \n            ex.setStackTrace(e.getStackTrace()); \n            throw ex; \n        } \n \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getFeed(GDataRequest,GDataResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getFeed(GDataRequest,GDataResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getFeed(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public BaseFeed getFeed(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        ServerBaseFeed feed = new ServerBaseFeed();\n        feed.setId(request.getFeedId());\n        feed.setStartIndex(request.getStartIndex());\n        feed.setItemsPerPage(request.getItemsPerPage());\n        feed.setServiceConfig(request.getConfigurator());\n        try {\n            /*\n             * the strategy executes either a search or a direct access.\n             */\n            BaseFeed retVal = this.storage.getFeed(feed);\n            dynamicElementFeedStragey(retVal, request);\n\n            return retVal;\n            /*\n             * Resource not found will be detected in Gdata request.\n             * the request queries the storage for the feed to get the service for the feed\n             */\n        } catch (StorageException e) {\n            ServiceException ex = new ServiceException(\"Could not get feed\", e,GDataResponse.NOT_FOUND);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getFeed(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public BaseFeed getFeed(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        ServerBaseFeed feed = new ServerBaseFeed();\n        feed.setId(request.getFeedId());\n        feed.setStartIndex(request.getStartIndex());\n        feed.setItemsPerPage(request.getItemsPerPage());\n        feed.setServiceConfig(request.getConfigurator());\n        try {\n            BaseFeed retVal = this.storage.getFeed(feed);\n            dynamicElementFeedStragey(retVal, request);\n\n            return retVal;\n            /*\n             * resouce not found will be detected in Gdata request.\n             * the request queries the storage for the feed to get the serivce for the feed\n             */\n        } catch (StorageException e) {\n            response.setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n            ServiceException ex = new ServiceException(\"Could not get feed\", e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataService#getFeed(GDataRequest,GDataResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getFeed(GDataRequest,GDataResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getFeed(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public BaseFeed getFeed(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        ServerBaseFeed feed = new ServerBaseFeed();\n        feed.setId(request.getFeedId());\n        feed.setStartIndex(request.getStartIndex());\n        feed.setItemsPerPage(request.getItemsPerPage());\n        feed.setServiceConfig(request.getConfigurator());\n        try {\n            /*\n             * the strategy executes either a search or a direct access.\n             */\n            BaseFeed retVal = this.storage.getFeed(feed);\n            dynamicElementFeedStragey(retVal, request);\n\n            return retVal;\n            /*\n             * Resource not found will be detected in Gdata request.\n             * the request queries the storage for the feed to get the service for the feed\n             */\n        } catch (StorageException e) {\n            ServiceException ex = new ServiceException(\"Could not get feed\", e,GDataResponse.NOT_FOUND);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getFeed(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public BaseFeed getFeed(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        ServerBaseFeed feed = new ServerBaseFeed();\n        feed.setId(request.getFeedId());\n        feed.setStartIndex(request.getStartIndex());\n        feed.setItemsPerPage(request.getItemsPerPage());\n        feed.setServiceConfig(request.getConfigurator());\n        try {\n            /*\n             * the strategy executes either a search or a direct access.\n             */\n            BaseFeed retVal = this.storage.getFeed(feed);\n            dynamicElementFeedStragey(retVal, request);\n\n            return retVal;\n            /*\n             * Resource not found will be detected in Gdata request.\n             * the request queries the storage for the feed to get the service for the feed\n             */\n        } catch (StorageException e) {\n            ServiceException ex = new ServiceException(\"Could not get feed\", e,GDataResponse.NOT_FOUND);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["52754a40a1550056d5637c8992b4076b5ed77328"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}