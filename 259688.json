{"path":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetRangeInclude#get(String).mjava","commits":[{"id":"432127b09840b2b70209e404d242e7029421ef0a","date":1280433941,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetRangeInclude#get(String).mjava","pathOld":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetDateInclude#get(String).mjava","sourceNew":"    public static FacetRangeInclude get(String label) {\n      try {\n        return valueOf(label.toUpperCase(Locale.ENGLISH));\n      } catch (IllegalArgumentException e) {\n        throw new SolrException\n          (SolrException.ErrorCode.BAD_REQUEST,\n           label+\" is not a valid type of for range 'include' information\",e);\n      }\n    }\n\n","sourceOld":"    public static FacetDateInclude get(String label) {\n      try {\n        return valueOf(label.toUpperCase(Locale.ENGLISH));\n      } catch (IllegalArgumentException e) {\n        throw new SolrException\n          (SolrException.ErrorCode.BAD_REQUEST,\n           label+\" is not a valid type of for \"+FACET_DATE_INCLUDE+\" information\",e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetRangeInclude#get(String).mjava","pathOld":"/dev/null","sourceNew":"    public static FacetRangeInclude get(String label) {\n      try {\n        return valueOf(label.toUpperCase(Locale.ENGLISH));\n      } catch (IllegalArgumentException e) {\n        throw new SolrException\n          (SolrException.ErrorCode.BAD_REQUEST,\n           label+\" is not a valid type of for range 'include' information\",e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/FacetParams.FacetRangeInclude#get(String).mjava","pathOld":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetRangeInclude#get(String).mjava","sourceNew":"    public static FacetRangeInclude get(String label) {\n      try {\n        return valueOf(label.toUpperCase(Locale.ENGLISH));\n      } catch (IllegalArgumentException e) {\n        throw new SolrException\n          (SolrException.ErrorCode.BAD_REQUEST,\n           label+\" is not a valid type of for range 'include' information\",e);\n      }\n    }\n\n","sourceOld":"    public static FacetRangeInclude get(String label) {\n      try {\n        return valueOf(label.toUpperCase(Locale.ENGLISH));\n      } catch (IllegalArgumentException e) {\n        throw new SolrException\n          (SolrException.ErrorCode.BAD_REQUEST,\n           label+\" is not a valid type of for range 'include' information\",e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/FacetParams.FacetRangeInclude#get(String).mjava","pathOld":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetRangeInclude#get(String).mjava","sourceNew":"    public static FacetRangeInclude get(String label) {\n      try {\n        return valueOf(label.toUpperCase(Locale.ENGLISH));\n      } catch (IllegalArgumentException e) {\n        throw new SolrException\n          (SolrException.ErrorCode.BAD_REQUEST,\n           label+\" is not a valid type of for range 'include' information\",e);\n      }\n    }\n\n","sourceOld":"    public static FacetRangeInclude get(String label) {\n      try {\n        return valueOf(label.toUpperCase(Locale.ENGLISH));\n      } catch (IllegalArgumentException e) {\n        throw new SolrException\n          (SolrException.ErrorCode.BAD_REQUEST,\n           label+\" is not a valid type of for range 'include' information\",e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/FacetParams.FacetRangeInclude#get(String).mjava","pathOld":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetRangeInclude#get(String).mjava","sourceNew":"    public static FacetRangeInclude get(String label) {\n      try {\n        return valueOf(label.toUpperCase(Locale.ENGLISH));\n      } catch (IllegalArgumentException e) {\n        throw new SolrException\n          (SolrException.ErrorCode.BAD_REQUEST,\n           label+\" is not a valid type of for range 'include' information\",e);\n      }\n    }\n\n","sourceOld":"    public static FacetRangeInclude get(String label) {\n      try {\n        return valueOf(label.toUpperCase(Locale.ENGLISH));\n      } catch (IllegalArgumentException e) {\n        throw new SolrException\n          (SolrException.ErrorCode.BAD_REQUEST,\n           label+\" is not a valid type of for range 'include' information\",e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["432127b09840b2b70209e404d242e7029421ef0a"],"c26f00b574427b55127e869b935845554afde1fa":["432127b09840b2b70209e404d242e7029421ef0a","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["432127b09840b2b70209e404d242e7029421ef0a"],"432127b09840b2b70209e404d242e7029421ef0a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","432127b09840b2b70209e404d242e7029421ef0a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["432127b09840b2b70209e404d242e7029421ef0a","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"432127b09840b2b70209e404d242e7029421ef0a":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}