{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","sourceNew":"  /** Sets the updates file names per generation. Does not deep clone the map. */\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    this.genUpdatesFiles.putAll(genUpdatesFiles);\n  }\n\n","sourceOld":"  /** Sets the updates file names per generation. Does not deep clone the map. */\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    this.genUpdatesFiles.putAll(genUpdatesFiles);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0567bdc5c86c94ced64201187cfcef2417d76dda","date":1400678298,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","sourceNew":"  /**\n   * Sets the updates file names per generation. Does not deep clone the map.\n   * \n   * @deprecated required to support 4.6-4.8 indexes.\n   */\n  @Deprecated\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    this.genUpdatesFiles.putAll(genUpdatesFiles);\n  }\n\n","sourceOld":"  /** Sets the updates file names per generation. Does not deep clone the map. */\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    this.genUpdatesFiles.putAll(genUpdatesFiles);\n  }\n\n","bugFix":["2f13fb377f9b5df46af44bf90a2e507a884f2c30"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a656b32c3aa151037a8c52e9b134acc3cbf482bc","date":1400688195,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","sourceNew":"  /**\n   * Sets the updates file names per generation. Does not deep clone the map.\n   * \n   * @deprecated required to support 4.6-4.8 indexes.\n   */\n  @Deprecated\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    this.genUpdatesFiles.putAll(genUpdatesFiles);\n  }\n\n","sourceOld":"  /** Sets the updates file names per generation. Does not deep clone the map. */\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    this.genUpdatesFiles.putAll(genUpdatesFiles);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","sourceNew":"  /**\n   * Sets the updates file names per generation. Does not deep clone the map.\n   * \n   * @deprecated required to support 4.6-4.8 indexes.\n   */\n  @Deprecated\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    this.genUpdatesFiles.putAll(genUpdatesFiles);\n  }\n\n","sourceOld":"  /** Sets the updates file names per generation. Does not deep clone the map. */\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    this.genUpdatesFiles.putAll(genUpdatesFiles);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77d177b70aefca41f3edc910b0a703c76283d8b6","date":1411650976,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","sourceNew":"  /**\n   * Sets the updates file names per generation. Does not deep clone the map.\n   * \n   * @deprecated required to support 4.6-4.8 indexes.\n   */\n  @Deprecated\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    for (Map.Entry<Long,Set<String>> kv : genUpdatesFiles.entrySet()) {\n      // rename the set\n      Set<String> set = new HashSet<>();\n      for (String file : kv.getValue()) {\n        set.add(info.namedForThisSegment(file));\n      }\n      this.genUpdatesFiles.put(kv.getKey(), set);\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets the updates file names per generation. Does not deep clone the map.\n   * \n   * @deprecated required to support 4.6-4.8 indexes.\n   */\n  @Deprecated\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    this.genUpdatesFiles.putAll(genUpdatesFiles);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","sourceNew":"  /**\n   * Sets the updates file names per generation. Does not deep clone the map.\n   * \n   * @deprecated required to support 4.6-4.8 indexes.\n   */\n  @Deprecated\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    for (Map.Entry<Long,Set<String>> kv : genUpdatesFiles.entrySet()) {\n      // rename the set\n      Set<String> set = new HashSet<>();\n      for (String file : kv.getValue()) {\n        set.add(info.namedForThisSegment(file));\n      }\n      this.genUpdatesFiles.put(kv.getKey(), set);\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets the updates file names per generation. Does not deep clone the map.\n   * \n   * @deprecated required to support 4.6-4.8 indexes.\n   */\n  @Deprecated\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    this.genUpdatesFiles.putAll(genUpdatesFiles);\n  }\n\n","bugFix":["2f13fb377f9b5df46af44bf90a2e507a884f2c30"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3","date":1417215914,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setGenUpdatesFiles(Map[Long,Set[String]]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the updates file names per generation. Does not deep clone the map.\n   * \n   * @deprecated required to support 4.6-4.8 indexes.\n   */\n  @Deprecated\n  public void setGenUpdatesFiles(Map<Long,Set<String>> genUpdatesFiles) {\n    this.genUpdatesFiles.clear();\n    for (Map.Entry<Long,Set<String>> kv : genUpdatesFiles.entrySet()) {\n      // rename the set\n      Set<String> set = new HashSet<>();\n      for (String file : kv.getValue()) {\n        set.add(info.namedForThisSegment(file));\n      }\n      this.genUpdatesFiles.put(kv.getKey(), set);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"77d177b70aefca41f3edc910b0a703c76283d8b6":["0567bdc5c86c94ced64201187cfcef2417d76dda"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["0567bdc5c86c94ced64201187cfcef2417d76dda","77d177b70aefca41f3edc910b0a703c76283d8b6"],"0567bdc5c86c94ced64201187cfcef2417d76dda":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","0567bdc5c86c94ced64201187cfcef2417d76dda"],"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"b7605579001505896d48b07160075a5c8b8e128e":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","0567bdc5c86c94ced64201187cfcef2417d76dda"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["0567bdc5c86c94ced64201187cfcef2417d76dda","a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e"],"77d177b70aefca41f3edc910b0a703c76283d8b6":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3"],"0567bdc5c86c94ced64201187cfcef2417d76dda":["77d177b70aefca41f3edc910b0a703c76283d8b6","5f6bd27530a2846413fe2d00030493c0e2d3a072","a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e"],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":[],"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7605579001505896d48b07160075a5c8b8e128e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}