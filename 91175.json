{"path":"solr/core/src/test/org/apache/solr/metrics/reporters/SolrJmxReporterTest#testClosedCore().mjava","commits":[{"id":"d79cc3ed7651d0765a5d13a6a4f9f8a085116c13","date":1502789544,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/metrics/reporters/SolrJmxReporterTest#testClosedCore().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testClosedCore() throws Exception {\n    Set<ObjectInstance> objects = mBeanServer.queryMBeans(new ObjectName(\"*:category=CORE,name=indexDir,*\"), null);\n    assertEquals(\"Unexpected number of indexDir beans: \" + objects.toString(), 1, objects.size());\n    final ObjectInstance inst = objects.iterator().next();\n    stopped = false;\n    try {\n      Thread t = new Thread() {\n        public void run() {\n          while (!stopped) {\n            try {\n              Object value = mBeanServer.getAttribute(inst.getObjectName(), \"Value\");\n              assertNotNull(value);\n            } catch (InstanceNotFoundException x) {\n              // no longer present\n              break;\n            } catch (Exception e) {\n              fail(\"Unexpected error retrieving attribute: \" + e.toString());\n            }\n          }\n        }\n      };\n      t.start();\n      Thread.sleep(500);\n      h.getCoreContainer().unload(h.getCore().getName());\n      Thread.sleep(2000);\n      objects = mBeanServer.queryMBeans(new ObjectName(\"*:category=CORE,name=indexDir,*\"), null);\n      assertEquals(\"Unexpected number of beans after core closed: \" + objects, 0, objects.size());\n    } finally {\n      stopped = true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c00aac053fdd75193eb8b6d45b64c26c3b586d5b","date":1503143818,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/metrics/reporters/SolrJmxReporterTest#testClosedCore().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testClosedCore() throws Exception {\n    Set<ObjectInstance> objects = mBeanServer.queryMBeans(new ObjectName(\"*:category=CORE,name=indexDir,*\"), null);\n    assertEquals(\"Unexpected number of indexDir beans: \" + objects.toString(), 1, objects.size());\n    final ObjectInstance inst = objects.iterator().next();\n    stopped = false;\n    try {\n      Thread t = new Thread() {\n        public void run() {\n          while (!stopped) {\n            try {\n              Object value = mBeanServer.getAttribute(inst.getObjectName(), \"Value\");\n              assertNotNull(value);\n            } catch (InstanceNotFoundException x) {\n              // no longer present\n              break;\n            } catch (Exception e) {\n              fail(\"Unexpected error retrieving attribute: \" + e.toString());\n            }\n          }\n        }\n      };\n      t.start();\n      Thread.sleep(500);\n      h.getCoreContainer().unload(h.getCore().getName());\n      Thread.sleep(2000);\n      objects = mBeanServer.queryMBeans(new ObjectName(\"*:category=CORE,name=indexDir,*\"), null);\n      assertEquals(\"Unexpected number of beans after core closed: \" + objects, 0, objects.size());\n    } finally {\n      stopped = true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9bfbea0278c393fb53c503162381e1c3b66929c","date":1573576925,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/metrics/reporters/SolrJmxReporterTest#testClosedCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/metrics/reporters/SolrJmxReporterTest#testClosedCore().mjava","sourceNew":"  @Test\n  public void testClosedCore() throws Exception {\n    Set<ObjectInstance> objects = TEST_MBEAN_SERVER.queryMBeans(new ObjectName(\"*:category=CORE,name=indexDir,*\"), null);\n    assertEquals(\"Unexpected number of indexDir beans: \" + objects.toString(), 1, objects.size());\n    final ObjectInstance inst = objects.iterator().next();\n    stopped = false;\n    try {\n      Thread t = new Thread() {\n        public void run() {\n          while (!stopped) {\n            try {\n              Object value = TEST_MBEAN_SERVER.getAttribute(inst.getObjectName(), \"Value\");\n              assertNotNull(value);\n            } catch (InstanceNotFoundException x) {\n              // no longer present\n              break;\n            } catch (Exception e) {\n              fail(\"Unexpected error retrieving attribute: \" + e.toString());\n            }\n          }\n        }\n      };\n      t.start();\n      Thread.sleep(500);\n      h.getCoreContainer().unload(h.getCore().getName());\n      Thread.sleep(2000);\n      objects = TEST_MBEAN_SERVER.queryMBeans(new ObjectName(\"*:category=CORE,name=indexDir,*\"), null);\n      assertEquals(\"Unexpected number of beans after core closed: \" + objects, 0, objects.size());\n    } finally {\n      stopped = true;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testClosedCore() throws Exception {\n    Set<ObjectInstance> objects = mBeanServer.queryMBeans(new ObjectName(\"*:category=CORE,name=indexDir,*\"), null);\n    assertEquals(\"Unexpected number of indexDir beans: \" + objects.toString(), 1, objects.size());\n    final ObjectInstance inst = objects.iterator().next();\n    stopped = false;\n    try {\n      Thread t = new Thread() {\n        public void run() {\n          while (!stopped) {\n            try {\n              Object value = mBeanServer.getAttribute(inst.getObjectName(), \"Value\");\n              assertNotNull(value);\n            } catch (InstanceNotFoundException x) {\n              // no longer present\n              break;\n            } catch (Exception e) {\n              fail(\"Unexpected error retrieving attribute: \" + e.toString());\n            }\n          }\n        }\n      };\n      t.start();\n      Thread.sleep(500);\n      h.getCoreContainer().unload(h.getCore().getName());\n      Thread.sleep(2000);\n      objects = mBeanServer.queryMBeans(new ObjectName(\"*:category=CORE,name=indexDir,*\"), null);\n      assertEquals(\"Unexpected number of beans after core closed: \" + objects, 0, objects.size());\n    } finally {\n      stopped = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c00aac053fdd75193eb8b6d45b64c26c3b586d5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d79cc3ed7651d0765a5d13a6a4f9f8a085116c13"],"d79cc3ed7651d0765a5d13a6a4f9f8a085116c13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9bfbea0278c393fb53c503162381e1c3b66929c":["d79cc3ed7651d0765a5d13a6a4f9f8a085116c13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a9bfbea0278c393fb53c503162381e1c3b66929c"]},"commit2Childs":{"c00aac053fdd75193eb8b6d45b64c26c3b586d5b":[],"d79cc3ed7651d0765a5d13a6a4f9f8a085116c13":["c00aac053fdd75193eb8b6d45b64c26c3b586d5b","a9bfbea0278c393fb53c503162381e1c3b66929c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c00aac053fdd75193eb8b6d45b64c26c3b586d5b","d79cc3ed7651d0765a5d13a6a4f9f8a085116c13"],"a9bfbea0278c393fb53c503162381e1c3b66929c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c00aac053fdd75193eb8b6d45b64c26c3b586d5b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}