{"path":"src/java/org/apache/lucene/search/SpanFilter#bitSpans(IndexReader).mjava","commits":[{"id":"d44db1ba2660a6fd3c112bc52a66be6ae1d5d9c6","date":1184719927,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/SpanFilter#bitSpans(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param reader The {@link org.apache.lucene.index.IndexReader} to load position and bitset information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(IndexReader reader) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52ce7e961a8217faac8128e3c8fe67819eefdde9","date":1201979043,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/SpanFilter#bitSpans(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/SpanFilter#bitSpans(IndexReader).mjava","sourceNew":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param reader The {@link org.apache.lucene.index.IndexReader} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(IndexReader reader) throws IOException;\n\n","sourceOld":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param reader The {@link org.apache.lucene.index.IndexReader} to load position and bitset information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(IndexReader reader) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/SpanFilter#bitSpans(IndexReader).mjava","sourceNew":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param reader The {@link org.apache.lucene.index.IndexReader} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(IndexReader reader) throws IOException;\n\n","sourceOld":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param reader The {@link org.apache.lucene.index.IndexReader} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(IndexReader reader) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d44db1ba2660a6fd3c112bc52a66be6ae1d5d9c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["d44db1ba2660a6fd3c112bc52a66be6ae1d5d9c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["52ce7e961a8217faac8128e3c8fe67819eefdde9"]},"commit2Childs":{"d44db1ba2660a6fd3c112bc52a66be6ae1d5d9c6":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d44db1ba2660a6fd3c112bc52a66be6ae1d5d9c6"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}