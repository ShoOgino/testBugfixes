{"path":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetRefinement#testManyClauses().mjava","commits":[{"id":"39fdbc59d893f5a211736e861fe145798a40b9ff","date":1498161919,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetRefinement#testManyClauses().mjava","pathOld":"/dev/null","sourceNew":"  // Unlike solrconfig.xml this test using solrconfig-tlog.xml should not fail with too-many-exceptions (see TestSolrQueryParser.testManyClauses)\n  @Test\n  public void testManyClauses() throws Exception {\n    String a = \"1 a 2 b 3 c 10 d 11 12 \"; // 10 terms\n    StringBuilder sb = new StringBuilder(\"id:(\");\n    for (int i = 0; i < 1024; i++) { // historically, the max number of boolean clauses defaulted to 1024\n      sb.append('z').append(i).append(' ');\n    }\n    sb.append(a);\n    sb.append(\")\");\n\n    String q = sb.toString();\n\n    ignoreException(\"Too many clauses\");\n    assertJQ(req(\"q\", q)\n        , \"/response/numFound==\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetRefinement#testManyClauses().mjava","pathOld":"/dev/null","sourceNew":"  // Unlike solrconfig.xml this test using solrconfig-tlog.xml should not fail with too-many-exceptions (see TestSolrQueryParser.testManyClauses)\n  @Test\n  public void testManyClauses() throws Exception {\n    String a = \"1 a 2 b 3 c 10 d 11 12 \"; // 10 terms\n    StringBuilder sb = new StringBuilder(\"id:(\");\n    for (int i = 0; i < 1024; i++) { // historically, the max number of boolean clauses defaulted to 1024\n      sb.append('z').append(i).append(' ');\n    }\n    sb.append(a);\n    sb.append(\")\");\n\n    String q = sb.toString();\n\n    ignoreException(\"Too many clauses\");\n    assertJQ(req(\"q\", q)\n        , \"/response/numFound==\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetRefinement#testManyClauses().mjava","pathOld":"/dev/null","sourceNew":"  // Unlike solrconfig.xml this test using solrconfig-tlog.xml should not fail with too-many-exceptions (see TestSolrQueryParser.testManyClauses)\n  @Test\n  public void testManyClauses() throws Exception {\n    String a = \"1 a 2 b 3 c 10 d 11 12 \"; // 10 terms\n    StringBuilder sb = new StringBuilder(\"id:(\");\n    for (int i = 0; i < 1024; i++) { // historically, the max number of boolean clauses defaulted to 1024\n      sb.append('z').append(i).append(' ');\n    }\n    sb.append(a);\n    sb.append(\")\");\n\n    String q = sb.toString();\n\n    ignoreException(\"Too many clauses\");\n    assertJQ(req(\"q\", q)\n        , \"/response/numFound==\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2be0a2886c76942ff986465eabde7b858895dc9","date":1555349228,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetRefinement#testManyClauses().mjava","sourceNew":null,"sourceOld":"  // Unlike solrconfig.xml this test using solrconfig-tlog.xml should not fail with too-many-exceptions (see TestSolrQueryParser.testManyClauses)\n  @Test\n  public void testManyClauses() throws Exception {\n    String a = \"1 a 2 b 3 c 10 d 11 12 \"; // 10 terms\n    StringBuilder sb = new StringBuilder(\"id:(\");\n    for (int i = 0; i < 1024; i++) { // historically, the max number of boolean clauses defaulted to 1024\n      sb.append('z').append(i).append(' ');\n    }\n    sb.append(a);\n    sb.append(\")\");\n\n    String q = sb.toString();\n\n    ignoreException(\"Too many clauses\");\n    assertJQ(req(\"q\", q)\n        , \"/response/numFound==\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a2be0a2886c76942ff986465eabde7b858895dc9":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"39fdbc59d893f5a211736e861fe145798a40b9ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","39fdbc59d893f5a211736e861fe145798a40b9ff"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","39fdbc59d893f5a211736e861fe145798a40b9ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a2be0a2886c76942ff986465eabde7b858895dc9"]},"commit2Childs":{"a2be0a2886c76942ff986465eabde7b858895dc9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["39fdbc59d893f5a211736e861fe145798a40b9ff","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"39fdbc59d893f5a211736e861fe145798a40b9ff":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["a2be0a2886c76942ff986465eabde7b858895dc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}