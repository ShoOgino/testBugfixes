{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","commits":[{"id":"dea6a7c584b6dfe5fa5043504b1d7457f6533d0b","date":1383738416,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"/dev/null","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["527cc14542789f47d75da436cb4287d1ab887e34"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5fada397c593fa3104b4a988fe40d08ed6fae7db","date":1384514313,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    MergePolicy mp = iwc.getMergePolicy();\n\n    // If we get TieredMP and it's maxMergedSegmentMB is 0\n    // then this test falsely fails:\n    if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergedSegmentMB(Math.max(.01, tmp.getMaxMergedSegmentMB()));\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ff5901c7e3e0047863e12082c01ac2ff792b84a","date":1384957623,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    MergePolicy mp = iwc.getMergePolicy();\n\n    // If we get TieredMP and it's maxMergedSegmentMB is 0\n    // then this test falsely fails:\n    if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergedSegmentMB(Math.max(.01, tmp.getMaxMergedSegmentMB()));\n      if (tmp.getSegmentsPerTier() > 20) {\n        tmp.setSegmentsPerTier(20);\n      }\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    MergePolicy mp = iwc.getMergePolicy();\n\n    // If we get TieredMP and it's maxMergedSegmentMB is 0\n    // then this test falsely fails:\n    if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergedSegmentMB(Math.max(.01, tmp.getMaxMergedSegmentMB()));\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9b9e43fafeb98a145a5f13b2bb12e1ed28380d60","date":1385032604,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = newDirectory();\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    MergePolicy mp = iwc.getMergePolicy();\n\n    // If we get TieredMP and it's maxMergedSegmentMB is 0\n    // then this test falsely fails:\n    if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergedSegmentMB(Math.max(.01, tmp.getMaxMergedSegmentMB()));\n      if (tmp.getSegmentsPerTier() > 20) {\n        tmp.setSegmentsPerTier(20);\n      }\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = newDirectory();\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"527cc14542789f47d75da436cb4287d1ab887e34","date":1391705548,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(newDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = newDirectory();\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":["dea6a7c584b6dfe5fa5043504b1d7457f6533d0b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(newDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(newDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(newDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(newDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aee6e14aa025a22ed06b7e38e12bcc15ec251fbd","date":1417101195,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(new RAMDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(newDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(new RAMDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(new RAMDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w, true);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(new ByteBuffersDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(new RAMDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f354ba79a5a3e8491ec2953f14f365a02c058ac","date":1598293148,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testTooManySegments().mjava","sourceNew":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(new ByteBuffersDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random())).setMaxFullFlushMergeWaitMillis(0);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Make sure if all we do is open NRT reader against\n   *  writer, we don't see merge starvation. */\n  public void testTooManySegments() throws Exception {\n    Directory dir = getAssertNoDeletesDirectory(new ByteBuffersDirectory());\n    // Don't use newIndexWriterConfig, because we need a\n    // \"sane\" mergePolicy:\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Create 500 segments:\n    for(int i=0;i<500;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\"+i, Field.Store.NO));\n      w.addDocument(doc);\n      IndexReader r = DirectoryReader.open(w);\n      // Make sure segment count never exceeds 100:\n      assertTrue(r.leaves().size() < 100);\n      r.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"527cc14542789f47d75da436cb4287d1ab887e34":["9b9e43fafeb98a145a5f13b2bb12e1ed28380d60"],"d77dafd89756a5161d244985903e3487ca109182":["2a1862266772deb28cdcb7d996b64d2177022687"],"4ff5901c7e3e0047863e12082c01ac2ff792b84a":["5fada397c593fa3104b4a988fe40d08ed6fae7db"],"aee6e14aa025a22ed06b7e38e12bcc15ec251fbd":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"dea6a7c584b6dfe5fa5043504b1d7457f6533d0b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9b9e43fafeb98a145a5f13b2bb12e1ed28380d60":["4ff5901c7e3e0047863e12082c01ac2ff792b84a"],"2a1862266772deb28cdcb7d996b64d2177022687":["aee6e14aa025a22ed06b7e38e12bcc15ec251fbd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["dea6a7c584b6dfe5fa5043504b1d7457f6533d0b","9b9e43fafeb98a145a5f13b2bb12e1ed28380d60"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["527cc14542789f47d75da436cb4287d1ab887e34"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["d77dafd89756a5161d244985903e3487ca109182"],"5fada397c593fa3104b4a988fe40d08ed6fae7db":["dea6a7c584b6dfe5fa5043504b1d7457f6533d0b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"]},"commit2Childs":{"527cc14542789f47d75da436cb4287d1ab887e34":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d77dafd89756a5161d244985903e3487ca109182":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"],"4ff5901c7e3e0047863e12082c01ac2ff792b84a":["9b9e43fafeb98a145a5f13b2bb12e1ed28380d60"],"aee6e14aa025a22ed06b7e38e12bcc15ec251fbd":["2a1862266772deb28cdcb7d996b64d2177022687"],"dea6a7c584b6dfe5fa5043504b1d7457f6533d0b":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","5fada397c593fa3104b4a988fe40d08ed6fae7db"],"9b9e43fafeb98a145a5f13b2bb12e1ed28380d60":["527cc14542789f47d75da436cb4287d1ab887e34","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"2a1862266772deb28cdcb7d996b64d2177022687":["d77dafd89756a5161d244985903e3487ca109182"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dea6a7c584b6dfe5fa5043504b1d7457f6533d0b"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["aee6e14aa025a22ed06b7e38e12bcc15ec251fbd"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"5fada397c593fa3104b4a988fe40d08ed6fae7db":["4ff5901c7e3e0047863e12082c01ac2ff792b84a"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}