{"path":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetRefinement#initSomeDocsWhere1ShardHasOnlyParentFacetField().mjava","commits":[{"id":"84a99d9041ffa5585158e5a283ea1736b6b8b473","date":1532019928,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetRefinement#initSomeDocsWhere1ShardHasOnlyParentFacetField().mjava","pathOld":"/dev/null","sourceNew":"  /** Helper method used by multiple tests to look at same data diff ways */\n  private int initSomeDocsWhere1ShardHasOnlyParentFacetField() throws Exception {\n    initServers();\n    final Client client = servers.getClient(random().nextInt());\n    client.queryDefaults().set(\"shards\", servers.getShards(), \"debugQuery\", Boolean.toString(random().nextBoolean()));\n\n    final List<SolrClient> clients = client.getClientProvider().all();\n    assertTrue(clients.size() >= 2);\n    final SolrClient c0 = clients.get(0);\n    final SolrClient c1 = clients.get(1);\n\n    client.deleteByQuery(\"*:*\", null);\n    int id = 0;\n    \n    // client 0 // shard1\n    // only terms pX & pY (with high counts) from the parent_s facet, no child_s values\n    for (int i = 0; i < 10; i++) {\n      c0.add(sdoc(\"id\", id++, \"parent_s\", \"pX\"));\n      for (int j =0; j < 2; j++) {\n        c0.add(sdoc(\"id\", id++, \"parent_s\", \"pY\"));\n      }\n    }\n\n    // client 1 // shard2\n    // some docs with pX & pY, but on this shard, pA & pB have higher counts\n    // (but not as high as pX/py on shard1)\n    // all docs on this shard also have values in child_s\n    for (int i = 0; i < 2; i++) {\n      for (int j = 0; j < 3 ; j++) {\n        c1.add(sdoc(\"id\", id++, \"parent_s\", \"pA\", \"child_s\", \"c\"+i));\n        c1.add(sdoc(\"id\", id++, \"parent_s\", \"pB\", \"child_s\", \"c\"+i));\n      }\n      c1.add(sdoc(\"id\", id++, \"parent_s\", \"pX\", \"child_s\", \"c\"+i));\n      c1.add(sdoc(\"id\", id++, \"parent_s\", \"pY\", \"child_s\", \"c\"+i));\n    }\n    c1.add(sdoc(\"id\", id++, \"parent_s\", \"pX\", \"child_s\", \"c0\"));\n    c1.add(sdoc(\"id\", id++, \"parent_s\", \"pY\", \"child_s\", \"c1\"));\n    c1.add(sdoc(\"id\", id++, \"parent_s\", \"pY\", \"child_s\", \"c1\"));\n\n    client.commit();\n    return id;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84a99d9041ffa5585158e5a283ea1736b6b8b473":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["84a99d9041ffa5585158e5a283ea1736b6b8b473"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["84a99d9041ffa5585158e5a283ea1736b6b8b473"],"84a99d9041ffa5585158e5a283ea1736b6b8b473":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}