{"path":"contrib/miscellaneous/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#next(Token).mjava","commits":[{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#next(Token).mjava","pathOld":"/dev/null","sourceNew":"    public Token next(final Token reusableToken) throws IOException {\n      assert reusableToken != null;\n      if (inPhrase) {\n        inPhrase = false;\n        reusableToken.setTermBuffer(\"phrase2\");\n        reusableToken.setStartOffset(savedStart);\n        reusableToken.setEndOffset(savedEnd);\n        return reusableToken;\n      } else\n        for (Token nextToken = input.next(reusableToken); nextToken != null; nextToken = input.next(reusableToken)) {\n          if (nextToken.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = nextToken.startOffset();\n            savedEnd = nextToken.endOffset();\n            nextToken.setTermBuffer(\"phrase1\");\n            nextToken.setStartOffset(savedStart);\n            nextToken.setEndOffset(savedEnd);\n            return nextToken;\n          } else if (!nextToken.term().equals(\"stop\"))\n            return nextToken;\n        }\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b5756469957918cac40a831acec9cf01c8c2bb3","date":1249167152,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#next(Token).mjava","sourceNew":null,"sourceOld":"    public Token next(final Token reusableToken) throws IOException {\n      assert reusableToken != null;\n      if (inPhrase) {\n        inPhrase = false;\n        reusableToken.setTermBuffer(\"phrase2\");\n        reusableToken.setStartOffset(savedStart);\n        reusableToken.setEndOffset(savedEnd);\n        return reusableToken;\n      } else\n        for (Token nextToken = input.next(reusableToken); nextToken != null; nextToken = input.next(reusableToken)) {\n          if (nextToken.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = nextToken.startOffset();\n            savedEnd = nextToken.endOffset();\n            nextToken.setTermBuffer(\"phrase1\");\n            nextToken.setStartOffset(savedStart);\n            nextToken.setEndOffset(savedEnd);\n            return nextToken;\n          } else if (!nextToken.term().equals(\"stop\"))\n            return nextToken;\n        }\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b5756469957918cac40a831acec9cf01c8c2bb3":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9b5756469957918cac40a831acec9cf01c8c2bb3"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}