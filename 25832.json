{"path":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(Document,int,SchemaField,FastVectorHighlighter,FieldQuery,IndexReader,SolrQueryRequest).mjava","commits":[{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(Document,int,SchemaField,FastVectorHighlighter,FieldQuery,IndexReader,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(StoredDocument,int,SchemaField,FastVectorHighlighter,FieldQuery,IndexReader,SolrQueryRequest).mjava","sourceNew":"  /** Highlights and returns the highlight object for this field -- a String[] by default.  Null if none. */\n  @SuppressWarnings(\"unchecked\")\n  protected Object doHighlightingByFastVectorHighlighter(Document doc, int docId,\n                                                         SchemaField schemaField, FastVectorHighlighter highlighter,\n                                                         FieldQuery fieldQuery,\n                                                         IndexReader reader, SolrQueryRequest req) throws IOException {\n    SolrParams params = req.getParams();\n    String fieldName = schemaField.getName();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n\n    String[] snippets = highlighter.getBestFragments( fieldQuery, reader, docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if (snippets != null && snippets.length > 0 )\n      return snippets;\n    return null;\n  }\n\n","sourceOld":"  /** Highlights and returns the highlight object for this field -- a String[] by default.  Null if none. */\n  @SuppressWarnings(\"unchecked\")\n  protected Object doHighlightingByFastVectorHighlighter(StoredDocument doc, int docId,\n                                                         SchemaField schemaField, FastVectorHighlighter highlighter,\n                                                         FieldQuery fieldQuery,\n                                                         IndexReader reader, SolrQueryRequest req) throws IOException {\n    SolrParams params = req.getParams();\n    String fieldName = schemaField.getName();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n\n    String[] snippets = highlighter.getBestFragments( fieldQuery, reader, docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if (snippets != null && snippets.length > 0 )\n      return snippets;\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1807cf7ff48453a48bc28608f557e16b6a1f7fa8","date":1464474872,"type":5,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(Document,int,SchemaField,FvhContainer,IndexReader,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(Document,int,SchemaField,FastVectorHighlighter,FieldQuery,IndexReader,SolrQueryRequest).mjava","sourceNew":"  /** Highlights and returns the highlight object for this field -- a String[] by default.  Null if none. */\n  @SuppressWarnings(\"unchecked\")\n  protected Object doHighlightingByFastVectorHighlighter(Document doc, int docId,\n                                                         SchemaField schemaField, FvhContainer fvhContainer,\n                                                         IndexReader reader, SolrQueryRequest req) throws IOException {\n    SolrParams params = req.getParams();\n    String fieldName = schemaField.getName();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n\n    String[] snippets = fvhContainer.fvh.getBestFragments( fvhContainer.fieldQuery, reader, docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if (snippets != null && snippets.length > 0 )\n      return snippets;\n    return null;\n  }\n\n","sourceOld":"  /** Highlights and returns the highlight object for this field -- a String[] by default.  Null if none. */\n  @SuppressWarnings(\"unchecked\")\n  protected Object doHighlightingByFastVectorHighlighter(Document doc, int docId,\n                                                         SchemaField schemaField, FastVectorHighlighter highlighter,\n                                                         FieldQuery fieldQuery,\n                                                         IndexReader reader, SolrQueryRequest req) throws IOException {\n    SolrParams params = req.getParams();\n    String fieldName = schemaField.getName();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n\n    String[] snippets = highlighter.getBestFragments( fieldQuery, reader, docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if (snippets != null && snippets.length > 0 )\n      return snippets;\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da8a02bef7458089240404614139b53c9f875ec7","date":1464597207,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(Document,int,SchemaField,FvhContainer,IndexReader,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(Document,int,SchemaField,FastVectorHighlighter,FieldQuery,IndexReader,SolrQueryRequest).mjava","sourceNew":"  /** Highlights and returns the highlight object for this field -- a String[] by default.  Null if none. */\n  @SuppressWarnings(\"unchecked\")\n  protected Object doHighlightingByFastVectorHighlighter(Document doc, int docId,\n                                                         SchemaField schemaField, FvhContainer fvhContainer,\n                                                         IndexReader reader, SolrQueryRequest req) throws IOException {\n    SolrParams params = req.getParams();\n    String fieldName = schemaField.getName();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n\n    String[] snippets = fvhContainer.fvh.getBestFragments( fvhContainer.fieldQuery, reader, docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if (snippets != null && snippets.length > 0 )\n      return snippets;\n    return null;\n  }\n\n","sourceOld":"  /** Highlights and returns the highlight object for this field -- a String[] by default.  Null if none. */\n  @SuppressWarnings(\"unchecked\")\n  protected Object doHighlightingByFastVectorHighlighter(Document doc, int docId,\n                                                         SchemaField schemaField, FastVectorHighlighter highlighter,\n                                                         FieldQuery fieldQuery,\n                                                         IndexReader reader, SolrQueryRequest req) throws IOException {\n    SolrParams params = req.getParams();\n    String fieldName = schemaField.getName();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n\n    String[] snippets = highlighter.getBestFragments( fieldQuery, reader, docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if (snippets != null && snippets.length > 0 )\n      return snippets;\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b8ee93140fd0efef7e101786e3ed5160a700b5f","date":1464820111,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(Document,int,SchemaField,FvhContainer,IndexReader,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(Document,int,SchemaField,FastVectorHighlighter,FieldQuery,IndexReader,SolrQueryRequest).mjava","sourceNew":"  /** Highlights and returns the highlight object for this field -- a String[] by default.  Null if none. */\n  @SuppressWarnings(\"unchecked\")\n  protected Object doHighlightingByFastVectorHighlighter(Document doc, int docId,\n                                                         SchemaField schemaField, FvhContainer fvhContainer,\n                                                         IndexReader reader, SolrQueryRequest req) throws IOException {\n    SolrParams params = req.getParams();\n    String fieldName = schemaField.getName();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n\n    String[] snippets = fvhContainer.fvh.getBestFragments( fvhContainer.fieldQuery, reader, docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if (snippets != null && snippets.length > 0 )\n      return snippets;\n    return null;\n  }\n\n","sourceOld":"  /** Highlights and returns the highlight object for this field -- a String[] by default.  Null if none. */\n  @SuppressWarnings(\"unchecked\")\n  protected Object doHighlightingByFastVectorHighlighter(Document doc, int docId,\n                                                         SchemaField schemaField, FastVectorHighlighter highlighter,\n                                                         FieldQuery fieldQuery,\n                                                         IndexReader reader, SolrQueryRequest req) throws IOException {\n    SolrParams params = req.getParams();\n    String fieldName = schemaField.getName();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n\n    String[] snippets = highlighter.getBestFragments( fieldQuery, reader, docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if (snippets != null && snippets.length > 0 )\n      return snippets;\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(Document,int,SchemaField,FastVectorHighlighter,FieldQuery,IndexReader,SolrQueryRequest).mjava","sourceNew":null,"sourceOld":"  /** Highlights and returns the highlight object for this field -- a String[] by default.  Null if none. */\n  @SuppressWarnings(\"unchecked\")\n  protected Object doHighlightingByFastVectorHighlighter(Document doc, int docId,\n                                                         SchemaField schemaField, FastVectorHighlighter highlighter,\n                                                         FieldQuery fieldQuery,\n                                                         IndexReader reader, SolrQueryRequest req) throws IOException {\n    SolrParams params = req.getParams();\n    String fieldName = schemaField.getName();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n\n    String[] snippets = highlighter.getBestFragments( fieldQuery, reader, docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if (snippets != null && snippets.length > 0 )\n      return snippets;\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da8a02bef7458089240404614139b53c9f875ec7":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","1807cf7ff48453a48bc28608f557e16b6a1f7fa8"],"1807cf7ff48453a48bc28608f557e16b6a1f7fa8":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","1807cf7ff48453a48bc28608f557e16b6a1f7fa8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","1807cf7ff48453a48bc28608f557e16b6a1f7fa8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1807cf7ff48453a48bc28608f557e16b6a1f7fa8"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"da8a02bef7458089240404614139b53c9f875ec7":[],"1807cf7ff48453a48bc28608f557e16b6a1f7fa8":["da8a02bef7458089240404614139b53c9f875ec7","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["da8a02bef7458089240404614139b53c9f875ec7","1807cf7ff48453a48bc28608f557e16b6a1f7fa8","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["da8a02bef7458089240404614139b53c9f875ec7","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}