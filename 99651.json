{"path":"solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI#clusterStatusBadCollectionTest().mjava","commits":[{"id":"d0a48d19410927367aa44ee0929e3a2ad64f1c85","date":1457685126,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI#clusterStatusBadCollectionTest().mjava","pathOld":"/dev/null","sourceNew":"  private void clusterStatusBadCollectionTest() throws Exception {\n    try (CloudSolrClient client = createCloudClient(null)) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"action\", CollectionParams.CollectionAction.CLUSTERSTATUS.toString());\n      params.set(\"collection\", \"bad_collection_name\");\n      SolrRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n\n      try {\n        client.request(request);\n        fail(\"Collection does not exist. An exception should be thrown\");\n      } catch (SolrException e) {\n        //expected\n        assertTrue(e.getMessage().contains(\"Collection: bad_collection_name not found\"));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestCollectionAPI#clusterStatusBadCollectionTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI#clusterStatusBadCollectionTest().mjava","sourceNew":"  private void clusterStatusBadCollectionTest() throws Exception {\n    try (CloudSolrClient client = createCloudClient(null)) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"action\", CollectionParams.CollectionAction.CLUSTERSTATUS.toString());\n      params.set(\"collection\", \"bad_collection_name\");\n      SolrRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n\n      try {\n        client.request(request);\n        fail(\"Collection does not exist. An exception should be thrown\");\n      } catch (SolrException e) {\n        //expected\n        assertTrue(e.getMessage().contains(\"Collection: bad_collection_name not found\"));\n      }\n    }\n  }\n\n","sourceOld":"  private void clusterStatusBadCollectionTest() throws Exception {\n    try (CloudSolrClient client = createCloudClient(null)) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"action\", CollectionParams.CollectionAction.CLUSTERSTATUS.toString());\n      params.set(\"collection\", \"bad_collection_name\");\n      SolrRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n\n      try {\n        client.request(request);\n        fail(\"Collection does not exist. An exception should be thrown\");\n      } catch (SolrException e) {\n        //expected\n        assertTrue(e.getMessage().contains(\"Collection: bad_collection_name not found\"));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestCollectionAPI#clusterStatusBadCollectionTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI#clusterStatusBadCollectionTest().mjava","sourceNew":"  private void clusterStatusBadCollectionTest() throws Exception {\n    try (CloudSolrClient client = createCloudClient(null)) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"action\", CollectionParams.CollectionAction.CLUSTERSTATUS.toString());\n      params.set(\"collection\", \"bad_collection_name\");\n      SolrRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n\n      try {\n        client.request(request);\n        fail(\"Collection does not exist. An exception should be thrown\");\n      } catch (SolrException e) {\n        //expected\n        assertTrue(e.getMessage().contains(\"Collection: bad_collection_name not found\"));\n      }\n    }\n  }\n\n","sourceOld":"  private void clusterStatusBadCollectionTest() throws Exception {\n    try (CloudSolrClient client = createCloudClient(null)) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"action\", CollectionParams.CollectionAction.CLUSTERSTATUS.toString());\n      params.set(\"collection\", \"bad_collection_name\");\n      SolrRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n\n      try {\n        client.request(request);\n        fail(\"Collection does not exist. An exception should be thrown\");\n      } catch (SolrException e) {\n        //expected\n        assertTrue(e.getMessage().contains(\"Collection: bad_collection_name not found\"));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["d0a48d19410927367aa44ee0929e3a2ad64f1c85","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["d0a48d19410927367aa44ee0929e3a2ad64f1c85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"],"d0a48d19410927367aa44ee0929e3a2ad64f1c85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d0a48d19410927367aa44ee0929e3a2ad64f1c85"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"d0a48d19410927367aa44ee0929e3a2ad64f1c85":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}