{"path":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#MultiComparatorNonScoringCollector(FieldValueHitQueue,int,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#MultiComparatorNonScoringCollector(FieldValueHitQueue,int,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#MultiComparatorNonScoringCollector(FieldValueHitQueue,int,boolean).mjava","sourceNew":"    public MultiComparatorNonScoringCollector(FieldValueHitQueue queue,\n        int numHits, boolean fillFields) throws IOException {\n      super(queue, numHits, fillFields);\n      comparators = queue.getComparators();\n      reverseMul = queue.getReverseMul();\n    }\n\n","sourceOld":"    public MultiComparatorNonScoringCollector(FieldValueHitQueue queue,\n        int numHits, boolean fillFields) throws IOException {\n      super(queue, numHits, fillFields);\n      comparators = queue.getComparators();\n      reverseMul = queue.getReverseMul();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"460b79c7e263b28663bc8ebf63eeeaa58b19f5b1","date":1284498269,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#MultiComparatorNonScoringCollector(FieldValueHitQueue,int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#MultiComparatorNonScoringCollector(FieldValueHitQueue,int,boolean).mjava","sourceNew":"    public MultiComparatorNonScoringCollector(FieldValueHitQueue queue,\n        int numHits, boolean fillFields) throws IOException {\n      super(queue, numHits, fillFields);\n      this.queue = queue;\n      comparators = queue.getComparators();\n      reverseMul = queue.getReverseMul();\n    }\n\n","sourceOld":"    public MultiComparatorNonScoringCollector(FieldValueHitQueue queue,\n        int numHits, boolean fillFields) throws IOException {\n      super(queue, numHits, fillFields);\n      comparators = queue.getComparators();\n      reverseMul = queue.getReverseMul();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#MultiComparatorNonScoringCollector(FieldValueHitQueue,int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#MultiComparatorNonScoringCollector(FieldValueHitQueue,int,boolean).mjava","sourceNew":"    public MultiComparatorNonScoringCollector(FieldValueHitQueue queue,\n        int numHits, boolean fillFields) throws IOException {\n      super(queue, numHits, fillFields);\n      this.queue = queue;\n      comparators = queue.getComparators();\n      reverseMul = queue.getReverseMul();\n    }\n\n","sourceOld":"    public MultiComparatorNonScoringCollector(FieldValueHitQueue queue,\n        int numHits, boolean fillFields) throws IOException {\n      super(queue, numHits, fillFields);\n      comparators = queue.getComparators();\n      reverseMul = queue.getReverseMul();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97e30c53fd81463c6ccd52402c91a6548cf42acb","date":1309296018,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#MultiComparatorNonScoringCollector(FieldValueHitQueue[Entry],int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#MultiComparatorNonScoringCollector(FieldValueHitQueue,int,boolean).mjava","sourceNew":"    public MultiComparatorNonScoringCollector(FieldValueHitQueue<Entry> queue,\n        int numHits, boolean fillFields) throws IOException {\n      super(queue, numHits, fillFields);\n      this.queue = queue;\n      comparators = queue.getComparators();\n      reverseMul = queue.getReverseMul();\n    }\n\n","sourceOld":"    public MultiComparatorNonScoringCollector(FieldValueHitQueue queue,\n        int numHits, boolean fillFields) throws IOException {\n      super(queue, numHits, fillFields);\n      this.queue = queue;\n      comparators = queue.getComparators();\n      reverseMul = queue.getReverseMul();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#MultiComparatorNonScoringCollector(FieldValueHitQueue,int,boolean).mjava","sourceNew":null,"sourceOld":"    public MultiComparatorNonScoringCollector(FieldValueHitQueue queue,\n        int numHits, boolean fillFields) throws IOException {\n      super(queue, numHits, fillFields);\n      this.queue = queue;\n      comparators = queue.getComparators();\n      reverseMul = queue.getReverseMul();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorNonScoringCollector#MultiComparatorNonScoringCollector(FieldValueHitQueue,int,boolean).mjava","sourceNew":null,"sourceOld":"    public MultiComparatorNonScoringCollector(FieldValueHitQueue queue,\n        int numHits, boolean fillFields) throws IOException {\n      super(queue, numHits, fillFields);\n      this.queue = queue;\n      comparators = queue.getComparators();\n      reverseMul = queue.getReverseMul();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97e30c53fd81463c6ccd52402c91a6548cf42acb":["460b79c7e263b28663bc8ebf63eeeaa58b19f5b1"],"460b79c7e263b28663bc8ebf63eeeaa58b19f5b1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","460b79c7e263b28663bc8ebf63eeeaa58b19f5b1"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["460b79c7e263b28663bc8ebf63eeeaa58b19f5b1","97e30c53fd81463c6ccd52402c91a6548cf42acb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["460b79c7e263b28663bc8ebf63eeeaa58b19f5b1","97e30c53fd81463c6ccd52402c91a6548cf42acb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97e30c53fd81463c6ccd52402c91a6548cf42acb"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"97e30c53fd81463c6ccd52402c91a6548cf42acb":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"460b79c7e263b28663bc8ebf63eeeaa58b19f5b1":["97e30c53fd81463c6ccd52402c91a6548cf42acb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["460b79c7e263b28663bc8ebf63eeeaa58b19f5b1","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}