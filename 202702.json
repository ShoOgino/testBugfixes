{"path":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.ZKPrinter#writeKeyValue(JSONWriter,String,Object,boolean).mjava","commits":[{"id":"dd6ddd3da533988676f6ec21e7e4651a2b2e8345","date":1330043299,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.ZKPrinter#writeKeyValue(JSONWriter,String,Object,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public void writeKeyValue(JSONWriter json, String k, Object v, boolean isFirst) {\r\n      if (!isFirst) {\r\n        json.writeValueSeparator();\r\n      }\r\n      if (indent) {\r\n        json.indent();\r\n      }\r\n      json.writeString(k);\r\n      json.writeNameSeparator();\r\n      json.write(v);\r\n    }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.ZKPrinter#writeKeyValue(JSONWriter,String,Object,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public void writeKeyValue(JSONWriter json, String k, Object v, boolean isFirst) {\r\n      if (!isFirst) {\r\n        json.writeValueSeparator();\r\n      }\r\n      if (indent) {\r\n        json.indent();\r\n      }\r\n      json.writeString(k);\r\n      json.writeNameSeparator();\r\n      json.write(v);\r\n    }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23","date":1332766738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.ZKPrinter#writeKeyValue(JSONWriter,String,Object,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.ZKPrinter#writeKeyValue(JSONWriter,String,Object,boolean).mjava","sourceNew":"    public void writeKeyValue(JSONWriter json, String k, Object v, boolean isFirst) {\n      if (!isFirst) {\n        json.writeValueSeparator();\n      }\n      if (indent) {\n        json.indent();\n      }\n      json.writeString(k);\n      json.writeNameSeparator();\n      json.write(v);\n    }\n\n","sourceOld":"    public void writeKeyValue(JSONWriter json, String k, Object v, boolean isFirst) {\r\n      if (!isFirst) {\r\n        json.writeValueSeparator();\r\n      }\r\n      if (indent) {\r\n        json.indent();\r\n      }\r\n      json.writeString(k);\r\n      json.writeNameSeparator();\r\n      json.write(v);\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a","date":1443442239,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ZookeeperInfoHandler.ZKPrinter#writeKeyValue(JSONWriter,String,Object,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.ZKPrinter#writeKeyValue(JSONWriter,String,Object,boolean).mjava","sourceNew":"    public void writeKeyValue(JSONWriter json, String k, Object v, boolean isFirst) {\n      if (!isFirst) {\n        json.writeValueSeparator();\n      }\n      if (indent) {\n        json.indent();\n      }\n      json.writeString(k);\n      json.writeNameSeparator();\n      json.write(v);\n    }\n\n","sourceOld":"    public void writeKeyValue(JSONWriter json, String k, Object v, boolean isFirst) {\n      if (!isFirst) {\n        json.writeValueSeparator();\n      }\n      if (indent) {\n        json.indent();\n      }\n      json.writeString(k);\n      json.writeNameSeparator();\n      json.write(v);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23":["dd6ddd3da533988676f6ec21e7e4651a2b2e8345"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dd6ddd3da533988676f6ec21e7e4651a2b2e8345"],"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23"],"dd6ddd3da533988676f6ec21e7e4651a2b2e8345":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["80ebe5b1d946f7c2ed9c46206b0c7254dc21206a"]},"commit2Childs":{"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23":["80ebe5b1d946f7c2ed9c46206b0c7254dc21206a"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dd6ddd3da533988676f6ec21e7e4651a2b2e8345":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","dd6ddd3da533988676f6ec21e7e4651a2b2e8345"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}