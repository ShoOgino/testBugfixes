{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilter#testOffsetBug().mjava","commits":[{"id":"b59603a30f81d2af70cd2033270521dc7c8ec626","date":1273513065,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilter#testOffsetBug().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestSynonymFilter#testOffsetBug().mjava","sourceNew":"  public void testOffsetBug() throws IOException {\n    // With the following rules:\n    // a a=>b\n    // x=>y\n    // analysing \"a x\" causes \"y\" to have a bad offset (end less than start)\n    // SOLR-167\n    SynonymMap map = new SynonymMap();\n\n    boolean orig = false;\n    boolean merge = true;\n\n    map.add(strings(\"a a\"), tokens(\"b\"), orig, merge);\n    map.add(strings(\"x\"), tokens(\"y\"), orig, merge);\n\n    // \"a a x\" => \"b y\"\n    assertTokenizesTo(map, tokens(\"a,1,0,1 a,1,2,3 x,1,4,5\"),\n        new String[] { \"b\", \"y\" },\n        new int[] { 0, 4 },\n        new int[] { 3, 5 },\n        new int[] { 1, 1 });\n  }\n\n","sourceOld":"  public void testOffsetBug() throws IOException {\n    // With the following rules:\n    // a a=>b\n    // x=>y\n    // analysing \"a x\" causes \"y\" to have a bad offset (end less than start)\n    // SOLR-167\n    SynonymMap map = new SynonymMap();\n\n    boolean orig = false;\n    boolean merge = true;\n\n    map.add(strings(\"a a\"), tokens(\"b\"), orig, merge);\n    map.add(strings(\"x\"), tokens(\"y\"), orig, merge);\n\n    // \"a a x\" => \"b y\"\n    assertTokenizesTo(map, tokens(\"a,1,0,1 a,1,2,3 x,1,4,5\"),\n        new String[] { \"b\", \"y\" },\n        new int[] { 0, 4 },\n        new int[] { 3, 5 },\n        new int[] { 1, 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestSlowSynonymFilter#testOffsetBug().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilter#testOffsetBug().mjava","sourceNew":"  public void testOffsetBug() throws IOException {\n    // With the following rules:\n    // a a=>b\n    // x=>y\n    // analysing \"a x\" causes \"y\" to have a bad offset (end less than start)\n    // SOLR-167\n    SlowSynonymMap map = new SlowSynonymMap();\n\n    boolean orig = false;\n    boolean merge = true;\n\n    map.add(strings(\"a a\"), tokens(\"b\"), orig, merge);\n    map.add(strings(\"x\"), tokens(\"y\"), orig, merge);\n\n    // \"a a x\" => \"b y\"\n    assertTokenizesTo(map, tokens(\"a,1,0,1 a,1,2,3 x,1,4,5\"),\n        new String[] { \"b\", \"y\" },\n        new int[] { 0, 4 },\n        new int[] { 3, 5 },\n        new int[] { 1, 1 });\n  }\n\n","sourceOld":"  public void testOffsetBug() throws IOException {\n    // With the following rules:\n    // a a=>b\n    // x=>y\n    // analysing \"a x\" causes \"y\" to have a bad offset (end less than start)\n    // SOLR-167\n    SynonymMap map = new SynonymMap();\n\n    boolean orig = false;\n    boolean merge = true;\n\n    map.add(strings(\"a a\"), tokens(\"b\"), orig, merge);\n    map.add(strings(\"x\"), tokens(\"y\"), orig, merge);\n\n    // \"a a x\" => \"b y\"\n    assertTokenizesTo(map, tokens(\"a,1,0,1 a,1,2,3 x,1,4,5\"),\n        new String[] { \"b\", \"y\" },\n        new int[] { 0, 4 },\n        new int[] { 3, 5 },\n        new int[] { 1, 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b59603a30f81d2af70cd2033270521dc7c8ec626":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["b59603a30f81d2af70cd2033270521dc7c8ec626"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b59603a30f81d2af70cd2033270521dc7c8ec626"],"b59603a30f81d2af70cd2033270521dc7c8ec626":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}