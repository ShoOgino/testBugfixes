{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getLeaderId(SolrZkClient).mjava","commits":[{"id":"7d996c36bf85996da326201b915c87d41449d7f5","date":1403084374,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getLeaderId(SolrZkClient).mjava","pathOld":"/dev/null","sourceNew":"  public static String getLeaderId(SolrZkClient zkClient) throws KeeperException,InterruptedException{\n    byte[] data = null;\n    try {\n      data = zkClient.getData(\"/overseer_elect/leader\", null, new Stat(), true);\n    } catch (KeeperException.NoNodeException e) {\n      return null;\n    }\n    Map m = (Map) ZkStateReader.fromJSON(data);\n    return  (String) m.get(\"id\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getLeaderId(SolrZkClient).mjava","pathOld":"/dev/null","sourceNew":"  public static String getLeaderId(SolrZkClient zkClient) throws KeeperException,InterruptedException{\n    byte[] data = null;\n    try {\n      data = zkClient.getData(\"/overseer_elect/leader\", null, new Stat(), true);\n    } catch (KeeperException.NoNodeException e) {\n      return null;\n    }\n    Map m = (Map) ZkStateReader.fromJSON(data);\n    return  (String) m.get(\"id\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b693a83132c9e45afcd564fd65a25b60ed80388b","date":1436882146,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getLeaderId(SolrZkClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getLeaderId(SolrZkClient).mjava","sourceNew":"  public static String getLeaderId(SolrZkClient zkClient) throws KeeperException,InterruptedException{\n    byte[] data = null;\n    try {\n      data = zkClient.getData(\"/overseer_elect/leader\", null, new Stat(), true);\n    } catch (KeeperException.NoNodeException e) {\n      return null;\n    }\n    Map m = (Map) Utils.fromJSON(data);\n    return  (String) m.get(\"id\");\n  }\n\n","sourceOld":"  public static String getLeaderId(SolrZkClient zkClient) throws KeeperException,InterruptedException{\n    byte[] data = null;\n    try {\n      data = zkClient.getData(\"/overseer_elect/leader\", null, new Stat(), true);\n    } catch (KeeperException.NoNodeException e) {\n      return null;\n    }\n    Map m = (Map) ZkStateReader.fromJSON(data);\n    return  (String) m.get(\"id\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerProcessor#getLeaderId(SolrZkClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getLeaderId(SolrZkClient).mjava","sourceNew":"  public static String getLeaderId(SolrZkClient zkClient) throws KeeperException,InterruptedException{\n    byte[] data = null;\n    try {\n      data = zkClient.getData(\"/overseer_elect/leader\", null, new Stat(), true);\n    } catch (KeeperException.NoNodeException e) {\n      return null;\n    }\n    Map m = (Map) Utils.fromJSON(data);\n    return  (String) m.get(\"id\");\n  }\n\n","sourceOld":"  public static String getLeaderId(SolrZkClient zkClient) throws KeeperException,InterruptedException{\n    byte[] data = null;\n    try {\n      data = zkClient.getData(\"/overseer_elect/leader\", null, new Stat(), true);\n    } catch (KeeperException.NoNodeException e) {\n      return null;\n    }\n    Map m = (Map) Utils.fromJSON(data);\n    return  (String) m.get(\"id\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"7d996c36bf85996da326201b915c87d41449d7f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7d996c36bf85996da326201b915c87d41449d7f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b693a83132c9e45afcd564fd65a25b60ed80388b":["7d996c36bf85996da326201b915c87d41449d7f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d996c36bf85996da326201b915c87d41449d7f5":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","b693a83132c9e45afcd564fd65a25b60ed80388b"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d996c36bf85996da326201b915c87d41449d7f5","e57c73924f3b8c19defa62e96bfa34a4922d49c2"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}