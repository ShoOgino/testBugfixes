{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#SpanScorer(Query,String,CachingTokenFilter,IndexReader,String).mjava","commits":[{"id":"296b8b38a87feb478921f77834a2302dfe77641c","date":1209506838,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#SpanScorer(Query,String,CachingTokenFilter,IndexReader,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\r\n   */\r\n  public SpanScorer(Query query, String field,\r\n    CachingTokenFilter cachingTokenFilter, IndexReader reader, String defaultField)\r\n    throws IOException {\r\n    this.defaultField = defaultField.intern();\r\n    init(query, field, cachingTokenFilter, reader);\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#SpanScorer(Query,String,CachingTokenFilter,IndexReader,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#SpanScorer(Query,String,CachingTokenFilter,IndexReader,String).mjava","sourceNew":"  /**\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\n   */\n  public SpanScorer(Query query, String field,\n    CachingTokenFilter cachingTokenFilter, IndexReader reader, String defaultField)\n    throws IOException {\n    this.defaultField = defaultField.intern();\n    init(query, field, cachingTokenFilter, reader);\n  }\n\n","sourceOld":"  /**\r\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\r\n   */\r\n  public SpanScorer(Query query, String field,\r\n    CachingTokenFilter cachingTokenFilter, IndexReader reader, String defaultField)\r\n    throws IOException {\r\n    this.defaultField = defaultField.intern();\r\n    init(query, field, cachingTokenFilter, reader);\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e89ac7460543b39f8de96654421e96790abaa26","date":1239329386,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#SpanScorer(Query,String,CachingTokenFilter,IndexReader,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#SpanScorer(Query,String,CachingTokenFilter,IndexReader,String).mjava","sourceNew":"  /**\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\n   */\n  public SpanScorer(Query query, String field,\n    CachingTokenFilter cachingTokenFilter, IndexReader reader, String defaultField)\n    throws IOException {\n    this.defaultField = defaultField.intern();\n    init(query, field, cachingTokenFilter, reader, false);\n  }\n\n","sourceOld":"  /**\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\n   */\n  public SpanScorer(Query query, String field,\n    CachingTokenFilter cachingTokenFilter, IndexReader reader, String defaultField)\n    throws IOException {\n    this.defaultField = defaultField.intern();\n    init(query, field, cachingTokenFilter, reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"943c3f9cf96b8df37f4273d66a66182e2a669467","date":1249394171,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#QueryScorer(Query,IndexReader,String,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#SpanScorer(Query,String,CachingTokenFilter,IndexReader,String).mjava","sourceNew":"  /**\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\n   */\n  public QueryScorer(Query query, IndexReader reader, String field, String defaultField)\n    throws IOException {\n    this.defaultField = defaultField.intern();\n    init(query, field, reader, true);\n  }\n\n","sourceOld":"  /**\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\n   */\n  public SpanScorer(Query query, String field,\n    CachingTokenFilter cachingTokenFilter, IndexReader reader, String defaultField)\n    throws IOException {\n    this.defaultField = defaultField.intern();\n    init(query, field, cachingTokenFilter, reader, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["296b8b38a87feb478921f77834a2302dfe77641c"],"1e89ac7460543b39f8de96654421e96790abaa26":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"943c3f9cf96b8df37f4273d66a66182e2a669467":["1e89ac7460543b39f8de96654421e96790abaa26"],"296b8b38a87feb478921f77834a2302dfe77641c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["943c3f9cf96b8df37f4273d66a66182e2a669467"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["296b8b38a87feb478921f77834a2302dfe77641c"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["1e89ac7460543b39f8de96654421e96790abaa26"],"1e89ac7460543b39f8de96654421e96790abaa26":["943c3f9cf96b8df37f4273d66a66182e2a669467"],"296b8b38a87feb478921f77834a2302dfe77641c":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"943c3f9cf96b8df37f4273d66a66182e2a669467":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}