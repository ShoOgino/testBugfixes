{"path":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","commits":[{"id":"a69439d0df009e0bb0038d1e427159f449dd670d","date":1355704683,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"/dev/null","sourceNew":"  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(cmdDistribExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7f4821d05931759774f7fd656e31d449de2d1436","date":1355887327,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(cmdDistribExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(cmdDistribExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"80ba0e0ced6273399ff97caaf301445b9fd24895","date":1356802943,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(cmdDistribExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(cmdDistribExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"/dev/null","sourceNew":"  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(cmdDistribExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7035935aa89f6951286e9005cbeb16e89a082a2","date":1385258396,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    } finally {\n      clientConnectionManager.shutdown();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(cmdDistribExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":null,"bugIntro":["17f33b775b16a586dc58d32693c94af5a69d011c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    } finally {\n      clientConnectionManager.shutdown();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(cmdDistribExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2","date":1389633998,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      clientConnectionManager.shutdown();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    } finally {\n      clientConnectionManager.shutdown();\n    }\n  }\n\n","bugFix":["a69439d0df009e0bb0038d1e427159f449dd670d"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      IOUtils.closeQuietly(client);\n      clientConnectionManager.shutdown();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      clientConnectionManager.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17f33b775b16a586dc58d32693c94af5a69d011c","date":1446489662,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      IOUtils.closeQuietly(client);\n      clientConnectionManager.shutdown();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      IOUtils.closeQuietly(client);\n      clientConnectionManager.shutdown();\n    }\n  }\n\n","bugFix":["a7035935aa89f6951286e9005cbeb16e89a082a2"],"bugIntro":["97d0f5fd3e59d42f7e9dae474554bfd9b864909c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"faee9bc2585a43773210f032b2bdcff90d9a12bf","date":1450411263,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      // we interrupt on purpose here, but this exectuor should not run threads that do disk IO!\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      IOUtils.closeQuietly(client);\n      clientConnectionManager.shutdown();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      IOUtils.closeQuietly(client);\n      clientConnectionManager.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      // we interrupt on purpose here, but this exectuor should not run threads that do disk IO!\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(client);\n      clientConnectionManager.close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      // we interrupt on purpose here, but this exectuor should not run threads that do disk IO!\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      IOUtils.closeQuietly(client);\n      clientConnectionManager.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":["3646ead588297558973dbd1162e69791e822b944"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0158ced21948b6626f733c1c42c1e18d94449789","date":1462994341,"type":3,"author":"Bartosz Krasiński","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      // we interrupt on purpose here, but this executor should not run threads that do disk IO!\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(client);\n      clientConnectionManager.close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      // we interrupt on purpose here, but this exectuor should not run threads that do disk IO!\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(client);\n      clientConnectionManager.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":["97d0f5fd3e59d42f7e9dae474554bfd9b864909c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      // we interrupt on purpose here, but this executor should not run threads that do disk IO!\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(client);\n      clientConnectionManager.close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      // we interrupt on purpose here, but this exectuor should not run threads that do disk IO!\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(client);\n      clientConnectionManager.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      // we interrupt on purpose here, but this executor should not run threads that do disk IO!\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(client);\n      clientConnectionManager.close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      // we interrupt on purpose here, but this exectuor should not run threads that do disk IO!\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(client);\n      clientConnectionManager.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97d0f5fd3e59d42f7e9dae474554bfd9b864909c","date":1486737647,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      // do not interrupt, do not interrupt\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(client);\n      clientConnectionManager.close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      // we interrupt on purpose here, but this executor should not run threads that do disk IO!\n      ExecutorUtil.shutdownWithInterruptAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(client);\n      clientConnectionManager.close();\n    }\n  }\n\n","bugFix":["17f33b775b16a586dc58d32693c94af5a69d011c","0158ced21948b6626f733c1c42c1e18d94449789"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3646ead588297558973dbd1162e69791e822b944","date":1525482176,"type":3,"author":"Mark Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      // do not interrupt, do not interrupt\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(updateOnlyClient);\n      HttpClientUtil.close(defaultClient);\n      updateOnlyConnectionManager.close();\n      defaultConnectionManager.close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      // do not interrupt, do not interrupt\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(client);\n      clientConnectionManager.close();\n    }\n  }\n\n","bugFix":["859081acf00749f5dd462772c571d611d4a4d2db"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      // do not interrupt, do not interrupt\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      HttpClientUtil.close(updateOnlyClient);\n      HttpClientUtil.close(recoveryOnlyClient);\n      HttpClientUtil.close(defaultClient);\n      updateOnlyConnectionManager.close();\n      defaultConnectionManager.close();\n      recoveryOnlyConnectionManager.close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      // do not interrupt, do not interrupt\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      SolrException.log(log, e);\n    } finally {\n      HttpClientUtil.close(updateOnlyClient);\n      HttpClientUtil.close(defaultClient);\n      updateOnlyConnectionManager.close();\n      defaultConnectionManager.close();\n    }\n  }\n\n","bugFix":["a69439d0df009e0bb0038d1e427159f449dd670d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      // do not interrupt, do not interrupt\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(updateOnlyClient);\n      HttpClientUtil.close(recoveryOnlyClient);\n      HttpClientUtil.close(defaultClient);\n      defaultConnectionManager.close();\n      recoveryOnlyConnectionManager.close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      // do not interrupt, do not interrupt\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      HttpClientUtil.close(updateOnlyClient);\n      HttpClientUtil.close(recoveryOnlyClient);\n      HttpClientUtil.close(defaultClient);\n      updateOnlyConnectionManager.close();\n      defaultConnectionManager.close();\n      recoveryOnlyConnectionManager.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      // do not interrupt, do not interrupt\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      try {\n        SolrMetricProducer.super.close();\n      } catch (Exception e) {\n        // do nothing\n      }\n      IOUtils.closeQuietly(updateOnlyClient);\n      HttpClientUtil.close(recoveryOnlyClient);\n      HttpClientUtil.close(defaultClient);\n      defaultConnectionManager.close();\n      recoveryOnlyConnectionManager.close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      // do not interrupt, do not interrupt\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(updateOnlyClient);\n      HttpClientUtil.close(recoveryOnlyClient);\n      HttpClientUtil.close(defaultClient);\n      defaultConnectionManager.close();\n      recoveryOnlyConnectionManager.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c2af5a711bd6e2d33e0221ced0f47ac596ed275","date":1572877903,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#close().mjava","sourceNew":"  public void close() {\n    try {\n      // do not interrupt, do not interrupt\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      try {\n        SolrInfoBean.super.close();\n      } catch (Exception e) {\n        // do nothing\n      }\n      IOUtils.closeQuietly(updateOnlyClient);\n      HttpClientUtil.close(recoveryOnlyClient);\n      HttpClientUtil.close(defaultClient);\n      defaultConnectionManager.close();\n      recoveryOnlyConnectionManager.close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    try {\n      // do not interrupt, do not interrupt\n      ExecutorUtil.shutdownAndAwaitTermination(updateExecutor);\n      ExecutorUtil.shutdownAndAwaitTermination(recoveryExecutor);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      try {\n        SolrMetricProducer.super.close();\n      } catch (Exception e) {\n        // do nothing\n      }\n      IOUtils.closeQuietly(updateOnlyClient);\n      HttpClientUtil.close(recoveryOnlyClient);\n      HttpClientUtil.close(defaultClient);\n      defaultConnectionManager.close();\n      recoveryOnlyConnectionManager.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","80ba0e0ced6273399ff97caaf301445b9fd24895"],"faee9bc2585a43773210f032b2bdcff90d9a12bf":["17f33b775b16a586dc58d32693c94af5a69d011c"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["3646ead588297558973dbd1162e69791e822b944"],"80ba0e0ced6273399ff97caaf301445b9fd24895":["7f4821d05931759774f7fd656e31d449de2d1436"],"a69439d0df009e0bb0038d1e427159f449dd670d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"17f33b775b16a586dc58d32693c94af5a69d011c":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["859081acf00749f5dd462772c571d611d4a4d2db","d470c8182e92b264680e34081b75e70a9f2b3c89"],"97d0f5fd3e59d42f7e9dae474554bfd9b864909c":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["859081acf00749f5dd462772c571d611d4a4d2db","0158ced21948b6626f733c1c42c1e18d94449789"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"859081acf00749f5dd462772c571d611d4a4d2db":["faee9bc2585a43773210f032b2bdcff90d9a12bf"],"7f4821d05931759774f7fd656e31d449de2d1436":["a69439d0df009e0bb0038d1e427159f449dd670d"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"3646ead588297558973dbd1162e69791e822b944":["97d0f5fd3e59d42f7e9dae474554bfd9b864909c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["80ba0e0ced6273399ff97caaf301445b9fd24895","a7035935aa89f6951286e9005cbeb16e89a082a2"],"a7035935aa89f6951286e9005cbeb16e89a082a2":["80ba0e0ced6273399ff97caaf301445b9fd24895"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["a7035935aa89f6951286e9005cbeb16e89a082a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"0158ced21948b6626f733c1c42c1e18d94449789":["859081acf00749f5dd462772c571d611d4a4d2db"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"faee9bc2585a43773210f032b2bdcff90d9a12bf":["859081acf00749f5dd462772c571d611d4a4d2db"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"80ba0e0ced6273399ff97caaf301445b9fd24895":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","74f45af4339b0daf7a95c820ab88c1aea74fbce0","a7035935aa89f6951286e9005cbeb16e89a082a2"],"a69439d0df009e0bb0038d1e427159f449dd670d":["7f4821d05931759774f7fd656e31d449de2d1436"],"17f33b775b16a586dc58d32693c94af5a69d011c":["faee9bc2585a43773210f032b2bdcff90d9a12bf"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","97d0f5fd3e59d42f7e9dae474554bfd9b864909c"],"97d0f5fd3e59d42f7e9dae474554bfd9b864909c":["3646ead588297558973dbd1162e69791e822b944"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"7f4821d05931759774f7fd656e31d449de2d1436":["80ba0e0ced6273399ff97caaf301445b9fd24895"],"859081acf00749f5dd462772c571d611d4a4d2db":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","0158ced21948b6626f733c1c42c1e18d94449789"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3646ead588297558973dbd1162e69791e822b944":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a69439d0df009e0bb0038d1e427159f449dd670d"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"a7035935aa89f6951286e9005cbeb16e89a082a2":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["17f33b775b16a586dc58d32693c94af5a69d011c"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"0158ced21948b6626f733c1c42c1e18d94449789":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}