{"path":"solr/core/src/test/org/apache/solr/core/TestLazyCores#checkStatus(CoreContainer,Boolean,String).mjava","commits":[{"id":"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0","date":1377955248,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#checkStatus(CoreContainer,Boolean,String).mjava","pathOld":"/dev/null","sourceNew":"  // If ok==true, we shouldn't be seeing any failure cases.\n  // if ok==false, the core being examined should have a failure in the list.\n  private void checkStatus(CoreContainer cc, Boolean ok, String core) throws Exception {\n    SolrQueryResponse resp = new SolrQueryResponse();\n    final CoreAdminHandler admin = new CoreAdminHandler(cc);\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.STATUS.toString(),\n            CoreAdminParams.CORE, core),\n            resp);\n\n    Map<String, Exception> failures =\n        (Map<String, Exception>) resp.getValues().get(\"initFailures\");\n\n    if (ok) {\n      if (failures.size() != 0) {\n        fail(\"Should have cleared the error, but there are failues \" + failures.toString());\n      }\n    } else {\n      if (failures.size() == 0) {\n        fail(\"Should have had errors here but the status return has no failures!\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"576125e6a2121b67122c3ad3176f170e1905367b","date":1589248529,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#checkStatus(CoreContainer,Boolean,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#checkStatus(CoreContainer,Boolean,String).mjava","sourceNew":"  // If ok==true, we shouldn't be seeing any failure cases.\n  // if ok==false, the core being examined should have a failure in the list.\n  private void checkStatus(CoreContainer cc, Boolean ok, String core) throws Exception {\n    SolrQueryResponse resp = new SolrQueryResponse();\n    try (final CoreAdminHandler admin = new CoreAdminHandler(cc)) {\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.STATUS.toString(),\n              CoreAdminParams.CORE, core),\n              resp);\n    }\n\n    Map<String, Exception> failures =\n        (Map<String, Exception>) resp.getValues().get(\"initFailures\");\n\n    if (ok) {\n      if (failures.size() != 0) {\n        fail(\"Should have cleared the error, but there are failues \" + failures.toString());\n      }\n    } else {\n      if (failures.size() == 0) {\n        fail(\"Should have had errors here but the status return has no failures!\");\n      }\n    }\n  }\n\n","sourceOld":"  // If ok==true, we shouldn't be seeing any failure cases.\n  // if ok==false, the core being examined should have a failure in the list.\n  private void checkStatus(CoreContainer cc, Boolean ok, String core) throws Exception {\n    SolrQueryResponse resp = new SolrQueryResponse();\n    final CoreAdminHandler admin = new CoreAdminHandler(cc);\n    admin.handleRequestBody\n        (req(CoreAdminParams.ACTION,\n            CoreAdminParams.CoreAdminAction.STATUS.toString(),\n            CoreAdminParams.CORE, core),\n            resp);\n\n    Map<String, Exception> failures =\n        (Map<String, Exception>) resp.getValues().get(\"initFailures\");\n\n    if (ok) {\n      if (failures.size() != 0) {\n        fail(\"Should have cleared the error, but there are failues \" + failures.toString());\n      }\n    } else {\n      if (failures.size() == 0) {\n        fail(\"Should have had errors here but the status return has no failures!\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#checkStatus(CoreContainer,Boolean,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#checkStatus(CoreContainer,Boolean,String).mjava","sourceNew":"  // If ok==true, we shouldn't be seeing any failure cases.\n  // if ok==false, the core being examined should have a failure in the list.\n  private void checkStatus(CoreContainer cc, Boolean ok, String core) throws Exception {\n    SolrQueryResponse resp = new SolrQueryResponse();\n    try (final CoreAdminHandler admin = new CoreAdminHandler(cc)) {\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.STATUS.toString(),\n              CoreAdminParams.CORE, core),\n              resp);\n    }\n\n    @SuppressWarnings({\"unchecked\"})\n    Map<String, Exception> failures =\n        (Map<String, Exception>) resp.getValues().get(\"initFailures\");\n\n    if (ok) {\n      if (failures.size() != 0) {\n        fail(\"Should have cleared the error, but there are failues \" + failures.toString());\n      }\n    } else {\n      if (failures.size() == 0) {\n        fail(\"Should have had errors here but the status return has no failures!\");\n      }\n    }\n  }\n\n","sourceOld":"  // If ok==true, we shouldn't be seeing any failure cases.\n  // if ok==false, the core being examined should have a failure in the list.\n  private void checkStatus(CoreContainer cc, Boolean ok, String core) throws Exception {\n    SolrQueryResponse resp = new SolrQueryResponse();\n    try (final CoreAdminHandler admin = new CoreAdminHandler(cc)) {\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.STATUS.toString(),\n              CoreAdminParams.CORE, core),\n              resp);\n    }\n\n    Map<String, Exception> failures =\n        (Map<String, Exception>) resp.getValues().get(\"initFailures\");\n\n    if (ok) {\n      if (failures.size() != 0) {\n        fail(\"Should have cleared the error, but there are failues \" + failures.toString());\n      }\n    } else {\n      if (failures.size() == 0) {\n        fail(\"Should have had errors here but the status return has no failures!\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["576125e6a2121b67122c3ad3176f170e1905367b"],"576125e6a2121b67122c3ad3176f170e1905367b":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"]},"commit2Childs":{"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0":["576125e6a2121b67122c3ad3176f170e1905367b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"576125e6a2121b67122c3ad3176f170e1905367b":["e98520789adb1d5ad05afb4956eca0944a929688"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}