{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finish(FieldInfos,int).mjava","commits":[{"id":"22a2e66dfda83847e80095b8693c660742ab3e9c","date":1408628796,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finish(FieldInfos,int).mjava","sourceNew":"  @Override\n  public void finish(FieldInfos fis, int numDocs) {\n    long indexFP = tvx.getFilePointer();\n    if (HEADER_LENGTH_INDEX+((long) numDocs)*16 != indexFP)\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"tvx size mismatch: mergedDocs is \" + numDocs + \" but tvx size is \" + indexFP + \" (wrote numDocs=\" + ((indexFP - HEADER_LENGTH_INDEX)/16.0) + \" file=\" + tvx.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","sourceOld":"  @Override\n  public void finish(FieldInfos fis, int numDocs) {\n    long indexFP = tvx.getFilePointer();\n    if (HEADER_LENGTH_INDEX+((long) numDocs)*16 != indexFP)\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"tvx size mismatch: mergedDocs is \" + numDocs + \" but tvx size is \" + indexFP + \" (wrote numDocs=\" + ((indexFP - HEADER_LENGTH_INDEX)/16.0) + \" file=\" + tvx.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finish(FieldInfos,int).mjava","sourceNew":"  @Override\n  public void finish(FieldInfos fis, int numDocs) {\n    long indexFP = tvx.getFilePointer();\n    if (HEADER_LENGTH_INDEX+((long) numDocs)*16 != indexFP)\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"tvx size mismatch: mergedDocs is \" + numDocs + \" but tvx size is \" + indexFP + \" (wrote numDocs=\" + ((indexFP - HEADER_LENGTH_INDEX)/16.0) + \" file=\" + tvx.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","sourceOld":"  @Override\n  public void finish(FieldInfos fis, int numDocs) {\n    long indexFP = tvx.getFilePointer();\n    if (HEADER_LENGTH_INDEX+((long) numDocs)*16 != indexFP)\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"tvx size mismatch: mergedDocs is \" + numDocs + \" but tvx size is \" + indexFP + \" (wrote numDocs=\" + ((indexFP - HEADER_LENGTH_INDEX)/16.0) + \" file=\" + tvx.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finish(FieldInfos,int).mjava","sourceNew":"  @Override\n  public void finish(FieldInfos fis, int numDocs) {\n    long indexFP = tvx.getFilePointer();\n    if (HEADER_LENGTH_INDEX+((long) numDocs)*16 != indexFP)\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"tvx size mismatch: mergedDocs is \" + numDocs + \" but tvx size is \" + indexFP + \" (wrote numDocs=\" + ((indexFP - HEADER_LENGTH_INDEX)/16.0) + \" file=\" + tvx.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","sourceOld":"  @Override\n  public void finish(FieldInfos fis, int numDocs) {\n    long indexFP = tvx.getFilePointer();\n    if (HEADER_LENGTH_INDEX+((long) numDocs)*16 != indexFP)\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"tvx size mismatch: mergedDocs is \" + numDocs + \" but tvx size is \" + indexFP + \" (wrote numDocs=\" + ((indexFP - HEADER_LENGTH_INDEX)/16.0) + \" file=\" + tvx.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["22a2e66dfda83847e80095b8693c660742ab3e9c","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}