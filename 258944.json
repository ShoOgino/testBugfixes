{"path":"backwards/src/java/org/apache/lucene/index/IndexFileNames#fileNameFromGeneration(String,String,long).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/IndexFileNames#fileNameFromGeneration(String,String,long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Computes the full file name from base, extension and\n   * generation.  If the generation is -1, the file name is\n   * null.  If it's 0, the file name is <base><extension>.\n   * If it's > 0, the file name is <base>_<generation><extension>.\n   *\n   * @param base -- main part of the file name\n   * @param extension -- extension of the filename (including .)\n   * @param gen -- generation\n   */\n  static final String fileNameFromGeneration(String base, String extension, long gen) {\n    if (gen == SegmentInfo.NO) {\n      return null;\n    } else if (gen == SegmentInfo.WITHOUT_GEN) {\n      return base + extension;\n    } else {\n      return base + \"_\" + Long.toString(gen, Character.MAX_RADIX) + extension;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexFileNames#fileNameFromGeneration(String,String,long).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexFileNames#fileNameFromGeneration(String,String,long).mjava","sourceNew":"  /**\n   * Computes the full file name from base, extension and\n   * generation.  If the generation is -1, the file name is\n   * null.  If it's 0, the file name is <base><extension>.\n   * If it's > 0, the file name is <base>_<generation><extension>.\n   *\n   * @param base -- main part of the file name\n   * @param extension -- extension of the filename (including .)\n   * @param gen -- generation\n   */\n  static final String fileNameFromGeneration(String base, String extension, long gen) {\n    if (gen == SegmentInfo.NO) {\n      return null;\n    } else if (gen == SegmentInfo.WITHOUT_GEN) {\n      return base + extension;\n    } else {\n      return base + \"_\" + Long.toString(gen, Character.MAX_RADIX) + extension;\n    }\n  }\n\n","sourceOld":"  /**\n   * Computes the full file name from base, extension and\n   * generation.  If the generation is -1, the file name is\n   * null.  If it's 0, the file name is <base><extension>.\n   * If it's > 0, the file name is <base>_<generation><extension>.\n   *\n   * @param base -- main part of the file name\n   * @param extension -- extension of the filename (including .)\n   * @param gen -- generation\n   */\n  static final String fileNameFromGeneration(String base, String extension, long gen) {\n    if (gen == SegmentInfo.NO) {\n      return null;\n    } else if (gen == SegmentInfo.WITHOUT_GEN) {\n      return base + extension;\n    } else {\n      return base + \"_\" + Long.toString(gen, Character.MAX_RADIX) + extension;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}