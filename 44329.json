{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#flushSegment(DocumentsWriterPerThread).mjava","commits":[{"id":"833a7987bc1c94455fde83e3311f72bddedcfb93","date":1279951470,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#flushSegment(DocumentsWriterPerThread).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#flushSegment(DocumentsWriterPerThread,boolean).mjava","sourceNew":"  private boolean flushSegment(DocumentsWriterPerThread perThread)\n      throws IOException {\n    if (perThread.getNumDocsInRAM() == 0) {\n      return false;\n    }\n\n    SegmentInfo newSegment = perThread.flush();\n    \n    if (newSegment != null) {\n      finishFlushedSegment(newSegment, perThread);\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  private boolean flushSegment(DocumentsWriterPerThread perThread, boolean flushDocStores)\n      throws IOException {\n    if (perThread.getNumDocsInRAM() == 0 && !flushDocStores) {\n      return false;\n    }\n\n    int docStoreOffset = perThread.getDocStoreOffset();\n    String docStoreSegment = perThread.getDocStoreSegment();\n    SegmentInfo newSegment = perThread.flush(flushDocStores);\n    \n    if (newSegment != null) {\n      newSegment.setDocStore(docStoreOffset, docStoreSegment, false);\n      finishFlushedSegment(newSegment, perThread);\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ef87af8c7bd0f8429622b83aa74202383f2e757","date":1280262785,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#flushSegment(DocumentsWriterPerThread).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#flushSegment(DocumentsWriterPerThread).mjava","sourceNew":"  private boolean flushSegment(DocumentsWriterPerThread perThread)\n      throws IOException {\n    if (perThread.getNumDocsInRAM() == 0) {\n      return false;\n    }\n\n    SegmentInfo newSegment = perThread.flush();\n    newSegment.dir = indexWriter.getDirectory();\n    \n    finishFlushedSegment(newSegment, perThread);\n    return true;\n  }\n\n","sourceOld":"  private boolean flushSegment(DocumentsWriterPerThread perThread)\n      throws IOException {\n    if (perThread.getNumDocsInRAM() == 0) {\n      return false;\n    }\n\n    SegmentInfo newSegment = perThread.flush();\n    \n    if (newSegment != null) {\n      finishFlushedSegment(newSegment, perThread);\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":["833a7987bc1c94455fde83e3311f72bddedcfb93"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#flushSegment(DocumentsWriterPerThread).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#flushSegment(DocumentsWriterPerThread).mjava","sourceNew":"  private boolean flushSegment(DocumentsWriterPerThread perThread) throws IOException {\n    if (perThread.getNumDocsInRAM() == 0) {\n      return false;\n    }\n\n    SegmentInfo newSegment = perThread.flush();\n    newSegment.dir = indexWriter.getDirectory();\n\n    finishFlushedSegment(newSegment, perThread);\n    return true;\n  }\n\n","sourceOld":"  private boolean flushSegment(DocumentsWriterPerThread perThread)\n      throws IOException {\n    if (perThread.getNumDocsInRAM() == 0) {\n      return false;\n    }\n\n    SegmentInfo newSegment = perThread.flush();\n    newSegment.dir = indexWriter.getDirectory();\n    \n    finishFlushedSegment(newSegment, perThread);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff78505662c0b741e2663a9f38a4889c12a32c9f","date":1294908561,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#flushSegment(DocumentsWriterPerThread).mjava","sourceNew":null,"sourceOld":"  private boolean flushSegment(DocumentsWriterPerThread perThread) throws IOException {\n    if (perThread.getNumDocsInRAM() == 0) {\n      return false;\n    }\n\n    SegmentInfo newSegment = perThread.flush();\n    newSegment.dir = indexWriter.getDirectory();\n\n    finishFlushedSegment(newSegment, perThread);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["833a7987bc1c94455fde83e3311f72bddedcfb93"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5ef87af8c7bd0f8429622b83aa74202383f2e757","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","833a7987bc1c94455fde83e3311f72bddedcfb93"],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff78505662c0b741e2663a9f38a4889c12a32c9f"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["5ef87af8c7bd0f8429622b83aa74202383f2e757"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ff78505662c0b741e2663a9f38a4889c12a32c9f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}