{"path":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","commits":[{"id":"06805da26538ed636bd89b10c2699cc3834032ae","date":1395132972,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        ++idx;\n      }\n      if (!docsWithField.get((int) (idx - 1))) {\n        value = null;\n      } else {\n        // idx points to the \"next\" element\n        value = Long.valueOf(values.get(idx - 1));\n      }\n      return doc;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["af08e9e692a7d133c6a60b1164563d53e13a1631"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"30d3ec601cbd11cf056b7336f0e03f688ebcd9f7","date":1401116050,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","sourceNew":"    @Override\n    int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = Long.valueOf(values.get(idx - 1));\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        ++idx;\n      }\n      if (!docsWithField.get((int) (idx - 1))) {\n        value = null;\n      } else {\n        // idx points to the \"next\" element\n        value = Long.valueOf(values.get(idx - 1));\n      }\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","sourceNew":"    @Override\n    int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = Long.valueOf(values.get(idx - 1));\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = Long.valueOf(values.get(idx - 1));\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","sourceNew":"    @Override\n    int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = Long.valueOf(values.get(idx - 1));\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = Long.valueOf(values.get(idx - 1));\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","sourceNew":"    @Override\n    int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = Long.valueOf(values.get(idx - 1));\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = Long.valueOf(values.get(idx - 1));\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4c088100f7646827db17ea080925f7a0a916b1cd","date":1524662254,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = Long.valueOf(values.get(idx - 1));\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = Long.valueOf(values.get(idx - 1));\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7e129bd6cb34a236558a49edf108a49d5c15e0e1","date":1525081316,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() {\n      if (idx >= size) {\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = values.get(idx - 1);\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = Long.valueOf(values.get(idx - 1));\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f42883db49d143abc1a0f176ba47e3388dafb608","date":1525083166,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() {\n      if (idx >= size) {\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = values.get(idx - 1);\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() {\n      if (idx >= size) {\n        value = null;\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = Long.valueOf(values.get(idx - 1));\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"62389a101dca1b996a7d6ca10d23bfb747924e06","date":1525274565,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.AbstractIterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","sourceNew":"    @Override\n    public final int nextDoc() {\n      if (idx >= size) {\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      set(idx-1);\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() {\n      if (idx >= size) {\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = values.get(idx - 1);\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4c088100f7646827db17ea080925f7a0a916b1cd":["28288370235ed02234a64753cdbf0c6ec096304a"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["30d3ec601cbd11cf056b7336f0e03f688ebcd9f7"],"7e129bd6cb34a236558a49edf108a49d5c15e0e1":["4c088100f7646827db17ea080925f7a0a916b1cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"62389a101dca1b996a7d6ca10d23bfb747924e06":["f42883db49d143abc1a0f176ba47e3388dafb608"],"06805da26538ed636bd89b10c2699cc3834032ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f42883db49d143abc1a0f176ba47e3388dafb608":["4c088100f7646827db17ea080925f7a0a916b1cd","7e129bd6cb34a236558a49edf108a49d5c15e0e1"],"30d3ec601cbd11cf056b7336f0e03f688ebcd9f7":["06805da26538ed636bd89b10c2699cc3834032ae"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["30d3ec601cbd11cf056b7336f0e03f688ebcd9f7","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["30d3ec601cbd11cf056b7336f0e03f688ebcd9f7","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["62389a101dca1b996a7d6ca10d23bfb747924e06"]},"commit2Childs":{"4c088100f7646827db17ea080925f7a0a916b1cd":["7e129bd6cb34a236558a49edf108a49d5c15e0e1","f42883db49d143abc1a0f176ba47e3388dafb608"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"7e129bd6cb34a236558a49edf108a49d5c15e0e1":["f42883db49d143abc1a0f176ba47e3388dafb608"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06805da26538ed636bd89b10c2699cc3834032ae"],"62389a101dca1b996a7d6ca10d23bfb747924e06":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f42883db49d143abc1a0f176ba47e3388dafb608":["62389a101dca1b996a7d6ca10d23bfb747924e06"],"06805da26538ed636bd89b10c2699cc3834032ae":["30d3ec601cbd11cf056b7336f0e03f688ebcd9f7"],"30d3ec601cbd11cf056b7336f0e03f688ebcd9f7":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["4c088100f7646827db17ea080925f7a0a916b1cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}