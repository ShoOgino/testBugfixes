{"path":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(ReaderContext,AtomicReaderContext).mjava","commits":[{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(ReaderContext,AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /* Ctor for concurrent sub-searchers searching only on a specific leaf of the given top-reader context\n   * - instead of searching over all leaves this searcher only searches a single leaf searcher slice. Hence, \n   * for scorer and filter this looks like an ordinary search in the hierarchy such that there is no difference\n   * between single and multi-threaded */\n  private IndexSearcher(ReaderContext topLevel, AtomicReaderContext leaf) {\n    readerContext = topLevel;\n    reader = topLevel.reader;\n    leafContexts = new AtomicReaderContext[] {leaf};\n    executor = null;\n    subSearchers = null;\n    closeReader = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(ReaderContext,AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"  /* Ctor for concurrent sub-searchers searching only on a specific leaf of the given top-reader context\n   * - instead of searching over all leaves this searcher only searches a single leaf searcher slice. Hence, \n   * for scorer and filter this looks like an ordinary search in the hierarchy such that there is no difference\n   * between single and multi-threaded */\n  private IndexSearcher(ReaderContext topLevel, AtomicReaderContext leaf) {\n    readerContext = topLevel;\n    reader = topLevel.reader;\n    leafContexts = new AtomicReaderContext[] {leaf};\n    executor = null;\n    subSearchers = null;\n    closeReader = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c220849f876de24a79f756f65b3eb045db59f63f":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c220849f876de24a79f756f65b3eb045db59f63f"]},"commit2Childs":{"c220849f876de24a79f756f65b3eb045db59f63f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["c220849f876de24a79f756f65b3eb045db59f63f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}