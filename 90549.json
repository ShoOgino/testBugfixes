{"path":"lucene/src/java/org/apache/lucene/index/values/Bytes.DerefBytesWriterBase#fillDefault(int).mjava","commits":[{"id":"e128967bca58657bc0039d4bfe631e63e81f1977","date":1317978310,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.DerefBytesWriterBase#fillDefault(int).mjava","pathOld":"/dev/null","sourceNew":"    protected void fillDefault(int docID) {\n      if (docID >= docToEntry.length) {\n        final int size = docToEntry.length;\n        docToEntry = ArrayUtil.grow(docToEntry, 1 + docID);\n        bytesUsed.addAndGet((docToEntry.length - size)\n            * RamUsageEstimator.NUM_BYTES_INT);\n      }\n      assert size >= 0;\n      BytesRef ref = new BytesRef(size);\n      ref.length = size;\n      int ord = hash.add(ref);\n      if (ord < 0) {\n        ord = (-ord) - 1;\n      }\n      for (int i = lastDocId+1; i < docID; i++) {\n        docToEntry[i] = ord;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.DerefBytesWriterBase#fillDefault(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.DerefBytesWriterBase#fillDefault(int).mjava","sourceNew":"    protected void fillDefault(int docID) {\n      if (docID >= docToEntry.length) {\n        final int size = docToEntry.length;\n        docToEntry = ArrayUtil.grow(docToEntry, 1 + docID);\n        bytesUsed.addAndGet((docToEntry.length - size)\n            * RamUsageEstimator.NUM_BYTES_INT);\n      }\n      assert size >= 0;\n      BytesRef ref = new BytesRef(size);\n      ref.length = size;\n      int ord = hash.add(ref);\n      if (ord < 0) {\n        ord = (-ord) - 1;\n      }\n      for (int i = lastDocId+1; i < docID; i++) {\n        docToEntry[i] = ord;\n      }\n    }\n\n","sourceOld":"    protected void fillDefault(int docID) {\n      if (docID >= docToEntry.length) {\n        final int size = docToEntry.length;\n        docToEntry = ArrayUtil.grow(docToEntry, 1 + docID);\n        bytesUsed.addAndGet((docToEntry.length - size)\n            * RamUsageEstimator.NUM_BYTES_INT);\n      }\n      assert size >= 0;\n      BytesRef ref = new BytesRef(size);\n      ref.length = size;\n      int ord = hash.add(ref);\n      if (ord < 0) {\n        ord = (-ord) - 1;\n      }\n      for (int i = lastDocId+1; i < docID; i++) {\n        docToEntry[i] = ord;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.DerefBytesWriterBase#fillDefault(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.DerefBytesWriterBase#fillDefault(int).mjava","sourceNew":"    protected void fillDefault(int docID) {\n      if (docID >= docToEntry.length) {\n        final int size = docToEntry.length;\n        docToEntry = ArrayUtil.grow(docToEntry, 1 + docID);\n        bytesUsed.addAndGet((docToEntry.length - size)\n            * RamUsageEstimator.NUM_BYTES_INT);\n      }\n      assert size >= 0;\n      BytesRef ref = new BytesRef(size);\n      ref.length = size;\n      int ord = hash.add(ref);\n      if (ord < 0) {\n        ord = (-ord) - 1;\n      }\n      for (int i = lastDocId+1; i < docID; i++) {\n        docToEntry[i] = ord;\n      }\n    }\n\n","sourceOld":"    protected void fillDefault(int docID) {\n      if (docID >= docToEntry.length) {\n        final int size = docToEntry.length;\n        docToEntry = ArrayUtil.grow(docToEntry, 1 + docID);\n        bytesUsed.addAndGet((docToEntry.length - size)\n            * RamUsageEstimator.NUM_BYTES_INT);\n      }\n      assert size >= 0;\n      BytesRef ref = new BytesRef(size);\n      ref.length = size;\n      int ord = hash.add(ref);\n      if (ord < 0) {\n        ord = (-ord) - 1;\n      }\n      for (int i = lastDocId+1; i < docID; i++) {\n        docToEntry[i] = ord;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["e128967bca58657bc0039d4bfe631e63e81f1977"],"e128967bca58657bc0039d4bfe631e63e81f1977":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["e128967bca58657bc0039d4bfe631e63e81f1977","f9efc72acdea22f5285be0a808f8bba51bb8e367"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e128967bca58657bc0039d4bfe631e63e81f1977"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"e128967bca58657bc0039d4bfe631e63e81f1977":["f9efc72acdea22f5285be0a808f8bba51bb8e367","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}