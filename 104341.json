{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#getOperand(String).mjava","commits":[{"id":"7b9f478d4eb5c08e4b0a9717fe37bd99f09ea733","date":1532604765,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#getOperand(String).mjava","pathOld":"/dev/null","sourceNew":"  private Operand getOperand(String strVal) {\n    Operand operand;\n    if (Policy.ANY.equals(strVal) || Policy.EACH.equals(strVal)) operand = WILDCARD;\n    else if (strVal.startsWith(NOT_EQUAL.operand)) operand = NOT_EQUAL;\n    else if (strVal.startsWith(GREATER_THAN.operand)) operand = GREATER_THAN;\n    else if (strVal.startsWith(LESS_THAN.operand)) operand = LESS_THAN;\n    else operand = Operand.EQUAL;\n    return operand;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ddd9a76400512cda8f22bbc69e3d8b85672a91a","date":1559288755,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#getOperand(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#getOperand(String).mjava","sourceNew":"  private static Operand getOperand(String strVal) {\n    Operand operand;\n    if (Policy.ANY.equals(strVal) || Policy.EACH.equals(strVal)) operand = WILDCARD;\n    else if (strVal.startsWith(NOT_EQUAL.operand)) operand = NOT_EQUAL;\n    else if (strVal.startsWith(GREATER_THAN.operand)) operand = GREATER_THAN;\n    else if (strVal.startsWith(LESS_THAN.operand)) operand = LESS_THAN;\n    else operand = Operand.EQUAL;\n    return operand;\n  }\n\n","sourceOld":"  private Operand getOperand(String strVal) {\n    Operand operand;\n    if (Policy.ANY.equals(strVal) || Policy.EACH.equals(strVal)) operand = WILDCARD;\n    else if (strVal.startsWith(NOT_EQUAL.operand)) operand = NOT_EQUAL;\n    else if (strVal.startsWith(GREATER_THAN.operand)) operand = GREATER_THAN;\n    else if (strVal.startsWith(LESS_THAN.operand)) operand = LESS_THAN;\n    else operand = Operand.EQUAL;\n    return operand;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58af973abe9f7c0faa777c1a6285fc7f72c171c5","date":1559329541,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#getOperand(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#getOperand(String).mjava","sourceNew":"  private static Operand getOperand(String strVal) {\n    Operand operand;\n    if (Policy.ANY.equals(strVal) || Policy.EACH.equals(strVal)) operand = WILDCARD;\n    else if (strVal.startsWith(NOT_EQUAL.operand)) operand = NOT_EQUAL;\n    else if (strVal.startsWith(GREATER_THAN.operand)) operand = GREATER_THAN;\n    else if (strVal.startsWith(LESS_THAN.operand)) operand = LESS_THAN;\n    else operand = Operand.EQUAL;\n    return operand;\n  }\n\n","sourceOld":"  private Operand getOperand(String strVal) {\n    Operand operand;\n    if (Policy.ANY.equals(strVal) || Policy.EACH.equals(strVal)) operand = WILDCARD;\n    else if (strVal.startsWith(NOT_EQUAL.operand)) operand = NOT_EQUAL;\n    else if (strVal.startsWith(GREATER_THAN.operand)) operand = GREATER_THAN;\n    else if (strVal.startsWith(LESS_THAN.operand)) operand = LESS_THAN;\n    else operand = Operand.EQUAL;\n    return operand;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#getOperand(String).mjava","sourceNew":null,"sourceOld":"  private static Operand getOperand(String strVal) {\n    Operand operand;\n    if (Policy.ANY.equals(strVal) || Policy.EACH.equals(strVal)) operand = WILDCARD;\n    else if (strVal.startsWith(NOT_EQUAL.operand)) operand = NOT_EQUAL;\n    else if (strVal.startsWith(GREATER_THAN.operand)) operand = GREATER_THAN;\n    else if (strVal.startsWith(LESS_THAN.operand)) operand = LESS_THAN;\n    else operand = Operand.EQUAL;\n    return operand;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["9ddd9a76400512cda8f22bbc69e3d8b85672a91a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":["7b9f478d4eb5c08e4b0a9717fe37bd99f09ea733","9ddd9a76400512cda8f22bbc69e3d8b85672a91a"],"9ddd9a76400512cda8f22bbc69e3d8b85672a91a":["7b9f478d4eb5c08e4b0a9717fe37bd99f09ea733"],"7b9f478d4eb5c08e4b0a9717fe37bd99f09ea733":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b9f478d4eb5c08e4b0a9717fe37bd99f09ea733"],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":[],"9ddd9a76400512cda8f22bbc69e3d8b85672a91a":["3f504512a03d978990cbff30db0522b354e846db","58af973abe9f7c0faa777c1a6285fc7f72c171c5"],"7b9f478d4eb5c08e4b0a9717fe37bd99f09ea733":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","9ddd9a76400512cda8f22bbc69e3d8b85672a91a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}