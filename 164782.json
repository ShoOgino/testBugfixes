{"path":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetsWithNestedObjects#testDomainFilterExclusionsInFilters().mjava","commits":[{"id":"5f7c69c29432074b666568db5e84001acd540dee","date":1520745905,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetsWithNestedObjects#testDomainFilterExclusionsInFilters().mjava","pathOld":"/dev/null","sourceNew":"  public void testDomainFilterExclusionsInFilters() throws Exception {\n    final Client client = Client.localClient();\n    ModifiableSolrParams p = params(\"rows\",\"10\");\n    client.testJQ(params(p, \"q\", \"{!parent tag=top filters=$child.fq which=type_s:book v=$childquery}\"\n        , \"childquery\", \"comment_t:*\"\n        , \"child.fq\", \"{!tag=author}author_s:dan\"\n        , \"child.fq\", \"{!tag=stars}stars_i:4\"\n        , \"fq\", \"{!tag=top}title_t:Snow\\\\ Crash\"\n        , \"fl\", \"id\", \"fl\" , \"title_t\"\n        , \"json.facet\", \"{\" +\n            \"  comments_for_author: {\" +\n            \"    domain: { excludeTags:\\\"top\\\",\" + // 1. throwing current parent docset,  \n            \"             filter:[\\\"{!filters param=$child.fq \" + // compute children docset from scratch\n            \"                       excludeTags=author v=$childquery}\\\"]\"// 3. filter children with exclusions \n            + \"            },\" +\n            \"    type:terms,\" +\n            \"    field:author_s,\" +\n            \"    facet: {\" +\n            \"           in_books: \\\"unique(_root_)\\\" }\"+//}},\" +\n            \"  }\" +\n            //note: stars_i filter is excluded\n            \"  ,comments_for_stars: {\" +\n            \"    domain: { excludeTags:top, \" +\n            \"          filter:\\\"{!filters param=$child.fq  excludeTags=stars v=$childquery}\\\" },\" +\n            \"    type:terms,\" +\n            \"    field:stars_i,\" +\n            \"    facet: {\" +\n            \"           in_books: \\\"unique(_root_)\\\" }}\"+\n            \n            \"  ,comments_for_stars_parent_filter: {\" +\n            \"    domain: { excludeTags:top, \" +\n            \"          filter:[\\\"{!filters param=$child.fq  excludeTags=stars v=$childquery}\\\",\"\n            + \"                \\\"{!child of=type_s:book filters=$fq}type_s:book\\\"] },\" +\n            \"    type:terms,\" +\n            \"    field:stars_i,\" +\n            \"    facet: {\" +\n            \"           in_books: \\\"unique(_root_)\\\" }}\"+\n        \"}\" )\n\n        , \"response=={numFound:0,start:0,docs:[]}\"\n        , \"facets=={ count:0,\" +\n            \"comments_for_author:{\" +\n            \"    buckets:[ {val:mary,    count:1, in_books:1} ]},\" +\n            \"comments_for_stars:{\" +\n            \"    buckets:[ {val:2, count:1, in_books:1},\" +\n            \"              {val:3, count:1, in_books:1} ]},\" +\n            \"comments_for_stars_parent_filter:{\" +\n            \"    buckets:[ {val:2, count:1, in_books:1}\" +\n            \"               ]}}\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"640ded7811e1b7d29236a5e2934ec3cd266a8199","date":1588973147,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetsWithNestedObjects#testDomainFilterExclusionsInFilters().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetsWithNestedObjects#testDomainFilterExclusionsInFilters().mjava","sourceNew":"  public void testDomainFilterExclusionsInFilters() throws Exception {\n    final Client client = Client.localClient();\n    ModifiableSolrParams p = params(\"rows\",\"10\");\n    client.testJQ(params(p, \"q\", \"{!parent tag=top filters=$child.fq which=type_s:book v=$childquery}\"\n        , \"childquery\", \"comment_t:*\"\n        , \"child.fq\", \"{!tag=author}author_s:dan\"\n        , \"child.fq\", \"{!tag=stars}stars_i:4\"\n        , \"fq\", \"{!tag=top}title_t:Snow\\\\ Crash\"\n        , \"fl\", \"id\", \"fl\" , \"title_t\"\n        , \"json.facet\", \"{\" +\n            \"  comments_for_author: {\" +\n            \"    domain: { excludeTags:\\\"top\\\",\" + // 1. throwing current parent docset,  \n            \"             filter:[\\\"{!filters param=$child.fq \" + // compute children docset from scratch\n            \"                       excludeTags=author v=$childquery}\\\"]\"// 3. filter children with exclusions \n            + \"            },\" +\n            \"    type:terms,\" +\n            \"    field:author_s,\" +\n            \"    facet: {\" +\n            \"           in_books: \\\"unique(_root_)\\\" }\"+//}},\" +\n            \"  }\" +\n            //note: stars_i filter is excluded\n            \"  ,comments_for_stars: {\" +\n            \"    domain: { excludeTags:top, \" +\n            \"          filter:\\\"{!filters param=$child.fq  excludeTags=stars v=$childquery}\\\" },\" +\n            \"    type:terms,\" +\n            \"    field:stars_i,\" +\n            \"    facet: {\" +\n            \"           in_books: \\\"unique(_root_)\\\" }}\"+\n            \n            \"  ,comments_for_stars_parent_filter: {\" +\n            \"    domain: { excludeTags:top, \" +\n            \"          filter:[\\\"{!filters param=$child.fq  excludeTags=stars v=$childquery}\\\",\"\n            + \"                \\\"{!child of=type_s:book filters=$fq}type_s:book\\\"] },\" +\n            \"    type:terms,\" +\n            \"    field:stars_i,\" +\n            \"    facet: {\" +\n            \"           in_books: \\\"unique(_root_)\\\" }}\"+\n        \"}\" )\n\n        , \"response=={numFound:0,start:0,'numFoundExact':true,docs:[]}\"\n        , \"facets=={ count:0,\" +\n            \"comments_for_author:{\" +\n            \"    buckets:[ {val:mary,    count:1, in_books:1} ]},\" +\n            \"comments_for_stars:{\" +\n            \"    buckets:[ {val:2, count:1, in_books:1},\" +\n            \"              {val:3, count:1, in_books:1} ]},\" +\n            \"comments_for_stars_parent_filter:{\" +\n            \"    buckets:[ {val:2, count:1, in_books:1}\" +\n            \"               ]}}\"\n    );\n  }\n\n","sourceOld":"  public void testDomainFilterExclusionsInFilters() throws Exception {\n    final Client client = Client.localClient();\n    ModifiableSolrParams p = params(\"rows\",\"10\");\n    client.testJQ(params(p, \"q\", \"{!parent tag=top filters=$child.fq which=type_s:book v=$childquery}\"\n        , \"childquery\", \"comment_t:*\"\n        , \"child.fq\", \"{!tag=author}author_s:dan\"\n        , \"child.fq\", \"{!tag=stars}stars_i:4\"\n        , \"fq\", \"{!tag=top}title_t:Snow\\\\ Crash\"\n        , \"fl\", \"id\", \"fl\" , \"title_t\"\n        , \"json.facet\", \"{\" +\n            \"  comments_for_author: {\" +\n            \"    domain: { excludeTags:\\\"top\\\",\" + // 1. throwing current parent docset,  \n            \"             filter:[\\\"{!filters param=$child.fq \" + // compute children docset from scratch\n            \"                       excludeTags=author v=$childquery}\\\"]\"// 3. filter children with exclusions \n            + \"            },\" +\n            \"    type:terms,\" +\n            \"    field:author_s,\" +\n            \"    facet: {\" +\n            \"           in_books: \\\"unique(_root_)\\\" }\"+//}},\" +\n            \"  }\" +\n            //note: stars_i filter is excluded\n            \"  ,comments_for_stars: {\" +\n            \"    domain: { excludeTags:top, \" +\n            \"          filter:\\\"{!filters param=$child.fq  excludeTags=stars v=$childquery}\\\" },\" +\n            \"    type:terms,\" +\n            \"    field:stars_i,\" +\n            \"    facet: {\" +\n            \"           in_books: \\\"unique(_root_)\\\" }}\"+\n            \n            \"  ,comments_for_stars_parent_filter: {\" +\n            \"    domain: { excludeTags:top, \" +\n            \"          filter:[\\\"{!filters param=$child.fq  excludeTags=stars v=$childquery}\\\",\"\n            + \"                \\\"{!child of=type_s:book filters=$fq}type_s:book\\\"] },\" +\n            \"    type:terms,\" +\n            \"    field:stars_i,\" +\n            \"    facet: {\" +\n            \"           in_books: \\\"unique(_root_)\\\" }}\"+\n        \"}\" )\n\n        , \"response=={numFound:0,start:0,docs:[]}\"\n        , \"facets=={ count:0,\" +\n            \"comments_for_author:{\" +\n            \"    buckets:[ {val:mary,    count:1, in_books:1} ]},\" +\n            \"comments_for_stars:{\" +\n            \"    buckets:[ {val:2, count:1, in_books:1},\" +\n            \"              {val:3, count:1, in_books:1} ]},\" +\n            \"comments_for_stars_parent_filter:{\" +\n            \"    buckets:[ {val:2, count:1, in_books:1}\" +\n            \"               ]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["5f7c69c29432074b666568db5e84001acd540dee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f7c69c29432074b666568db5e84001acd540dee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["640ded7811e1b7d29236a5e2934ec3cd266a8199"]},"commit2Childs":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f7c69c29432074b666568db5e84001acd540dee"],"5f7c69c29432074b666568db5e84001acd540dee":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}