{"path":"src/java/org/apache/lucene/search/RangeQuery#init(Term,Term,boolean,boolean,Collator).mjava","commits":[{"id":"6f7a11eba51d213f09b96054111cf56a1e5796a3","date":1226364000,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/RangeQuery#init(Term,Term,boolean,boolean,Collator).mjava","pathOld":"/dev/null","sourceNew":"  private void init(Term lowerTerm, Term upperTerm, boolean includeLower, boolean includeUpper, Collator collator) {\n    if (lowerTerm == null && upperTerm == null)\n      throw new IllegalArgumentException(\"At least one term must be non-null\");\n    if (lowerTerm != null && upperTerm != null && lowerTerm.field() != upperTerm.field())\n      throw new IllegalArgumentException(\"Both terms must be for the same field\");\n\n    if (lowerTerm == null)\n      this.field = upperTerm.field();\n    else\n      this.field = lowerTerm.field();\n    this.lowerTerm = lowerTerm;\n    this.upperTerm = upperTerm;\n    this.includeLower = includeLower;\n    this.includeUpper = includeUpper;\n    this.collator = collator;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f612096ab5275c4821d05f126bf45a89f4782b8","date":1246738452,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/RangeQuery#init(Term,Term,boolean,boolean,Collator).mjava","sourceNew":null,"sourceOld":"  private void init(Term lowerTerm, Term upperTerm, boolean includeLower, boolean includeUpper, Collator collator) {\n    if (lowerTerm == null && upperTerm == null)\n      throw new IllegalArgumentException(\"At least one term must be non-null\");\n    if (lowerTerm != null && upperTerm != null && lowerTerm.field() != upperTerm.field())\n      throw new IllegalArgumentException(\"Both terms must be for the same field\");\n\n    if (lowerTerm == null)\n      this.field = upperTerm.field();\n    else\n      this.field = lowerTerm.field();\n    this.lowerTerm = lowerTerm;\n    this.upperTerm = upperTerm;\n    this.includeLower = includeLower;\n    this.includeUpper = includeUpper;\n    this.collator = collator;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f612096ab5275c4821d05f126bf45a89f4782b8":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0f612096ab5275c4821d05f126bf45a89f4782b8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}