{"path":"lucene/contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","commits":[{"id":"5ce8d53d5582eaa6a0c771c9b119d480f41da59c","date":1297466174,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float).mjava","sourceNew":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #computeLengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n    this.discountOverlaps = discountOverlaps;\n  }\n\n","sourceOld":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #lengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float).mjava","sourceNew":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #computeLengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n    this.discountOverlaps = discountOverlaps;\n  }\n\n","sourceOld":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #lengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float).mjava","sourceNew":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #computeLengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n    this.discountOverlaps = discountOverlaps;\n  }\n\n","sourceOld":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #lengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#setLengthNormFactors(int,int,float,boolean).mjava","sourceNew":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #computeLengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n    this.discountOverlaps = discountOverlaps;\n  }\n\n","sourceOld":"  /**\n   * Sets the default function variables used by lengthNorm when no field\n   * specific variables have been set.\n   *\n   * @see #computeLengthNorm\n   */\n  public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {\n    this.ln_min = min;\n    this.ln_max = max;\n    this.ln_steep = steepness;\n    this.discountOverlaps = discountOverlaps;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5ce8d53d5582eaa6a0c771c9b119d480f41da59c"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ce8d53d5582eaa6a0c771c9b119d480f41da59c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ce8d53d5582eaa6a0c771c9b119d480f41da59c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ce8d53d5582eaa6a0c771c9b119d480f41da59c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f1bdbf92da222965b46c0a942c3857ba56e5c638","5ce8d53d5582eaa6a0c771c9b119d480f41da59c","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"5ce8d53d5582eaa6a0c771c9b119d480f41da59c":["b89678825b68eccaf09e6ab71675fc0b0af1e099","f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}