{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"modules/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    Random random = random();\n\n    directory = newDirectory();\n\n    IndexWriterConfig writerConfig = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    indexWriter = new IndexWriter(directory, writerConfig);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    Random random = random();\n\n    directory = newDirectory();\n\n    IndexWriterConfig writerConfig = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    indexWriter = new IndexWriter(directory, writerConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d960f1bec0365fa24a5d945b09511e4448ff2c6c","date":1340258737,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n\n    directory = newDirectory();\n    indexWriter = new RandomIndexWriter(random(),directory);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    Random random = random();\n\n    directory = newDirectory();\n\n    IndexWriterConfig writerConfig = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    indexWriter = new IndexWriter(directory, writerConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n\n    directory = newDirectory();\n    indexWriter = new RandomIndexWriter(random(),directory);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    Random random = random();\n\n    directory = newDirectory();\n\n    IndexWriterConfig writerConfig = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    indexWriter = new IndexWriter(directory, writerConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"656f7931e8a3dc60676fe66839b7fa03afbe8098","date":1374722646,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n\n    directory = newDirectory();\n    indexWriter = new RandomIndexWriter(random(),directory);\n    indexReader = indexWriter.getReader();\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n\n    directory = newDirectory();\n    indexWriter = new RandomIndexWriter(random(),directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n\n    directory = newDirectory();\n    indexWriter = new RandomIndexWriter(random(),directory);\n    indexReader = indexWriter.getReader();\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n\n    directory = newDirectory();\n    indexWriter = new RandomIndexWriter(random(),directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9df4073b2d570d1060d0619e51430efbb26db976","date":1392581114,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n\n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = indexWriter.getReader();\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n\n    directory = newDirectory();\n    indexWriter = new RandomIndexWriter(random(),directory);\n    indexReader = indexWriter.getReader();\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","bugFix":null,"bugIntro":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"bbox__minX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__minY\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxY\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n    uninvertMap.put(\"SpatialOpRecursivePrefixTreeTest\", Type.SORTED);\n    \n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n\n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = indexWriter.getReader();\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","bugFix":null,"bugIntro":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","8c146731a64debc22c115bbf11ee1a060aa7ea02","8c146731a64debc22c115bbf11ee1a060aa7ea02"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"bbox__minX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__minY\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxY\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n    uninvertMap.put(\"SpatialOpRecursivePrefixTreeTest\", Type.SORTED);\n    \n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n\n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = indexWriter.getReader();\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"bbox__minX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__minY\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxY\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n    uninvertMap.put(\"SpatialOpRecursivePrefixTreeTest\", Type.SORTED);\n    \n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n\n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = indexWriter.getReader();\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0521546db127e358ced1772a9d696dbdd255b203","date":1403202289,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"bbox__minX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__minY\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxY\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n\n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"bbox__minX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__minY\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxY\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n    uninvertMap.put(\"SpatialOpRecursivePrefixTreeTest\", Type.SORTED);\n    \n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","bugFix":null,"bugIntro":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018","date":1404828935,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n\n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"bbox__minX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxX\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__minY\", Type.DOUBLE);\n    uninvertMap.put(\"bbox__maxY\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n\n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n\n    directory = newDirectory();\n    final Random random = random();\n    analyzer = new MockAnalyzer(random);\n    indexWriter = new RandomIndexWriter(random,directory, newIWConfig(random, analyzer));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n\n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","bugFix":null,"bugIntro":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n\n    directory = newDirectory();\n    final Random random = random();\n    analyzer = new MockAnalyzer(random);\n    indexWriter = new RandomIndexWriter(random,directory, newIWConfig(random, analyzer));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n\n    directory = newDirectory();\n    final Random random = random();\n    indexWriter = new RandomIndexWriter(random,directory, newIndexWriterConfig(random));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n\n    directory = newDirectory();\n    final Random random = random();\n    analyzer = new MockAnalyzer(random);\n    indexWriter = new RandomIndexWriter(random,directory, newIWConfig(random, analyzer));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n\n    directory = newDirectory();\n    final Random random = random();\n    analyzer = new MockAnalyzer(random);\n    indexWriter = new RandomIndexWriter(random,directory, newIWConfig(random, analyzer));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n\n    directory = newDirectory();\n    final Random random = random();\n    analyzer = new MockAnalyzer(random);\n    indexWriter = new RandomIndexWriter(random,directory, newIWConfig(random, analyzer));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    // TODO: change this module to index docvalues instead of uninverting\n    uninvertMap.clear();\n    uninvertMap.put(\"pointvector__x\", Type.DOUBLE);\n    uninvertMap.put(\"pointvector__y\", Type.DOUBLE);\n\n    directory = newDirectory();\n    final Random random = random();\n    analyzer = new MockAnalyzer(random);\n    indexWriter = new RandomIndexWriter(random,directory, newIWConfig(random, analyzer));\n    indexReader = UninvertingReader.wrap(indexWriter.getReader(), uninvertMap);\n    indexSearcher = newSearcher(indexReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a56958d7f71a28824f20031ffbb2e13502a0274e","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["9df4073b2d570d1060d0619e51430efbb26db976"],"56572ec06f1407c066d6b7399413178b33176cd8":["9df4073b2d570d1060d0619e51430efbb26db976","93dd449115a9247533e44bab47e8429e5dccbc6d"],"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018":["0521546db127e358ced1772a9d696dbdd255b203"],"9df4073b2d570d1060d0619e51430efbb26db976":["656f7931e8a3dc60676fe66839b7fa03afbe8098"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["9df4073b2d570d1060d0619e51430efbb26db976","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d960f1bec0365fa24a5d945b09511e4448ff2c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["d960f1bec0365fa24a5d945b09511e4448ff2c6c"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018"],"656f7931e8a3dc60676fe66839b7fa03afbe8098":["d960f1bec0365fa24a5d945b09511e4448ff2c6c"],"d960f1bec0365fa24a5d945b09511e4448ff2c6c":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0521546db127e358ced1772a9d696dbdd255b203":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"9df4073b2d570d1060d0619e51430efbb26db976":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","d960f1bec0365fa24a5d945b09511e4448ff2c6c"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","0521546db127e358ced1772a9d696dbdd255b203"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"656f7931e8a3dc60676fe66839b7fa03afbe8098":["9df4073b2d570d1060d0619e51430efbb26db976"],"d960f1bec0365fa24a5d945b09511e4448ff2c6c":["fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","656f7931e8a3dc60676fe66839b7fa03afbe8098"],"0521546db127e358ced1772a9d696dbdd255b203":["1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}