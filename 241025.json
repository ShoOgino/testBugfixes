{"path":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int nextDoc() {\n      while(true) {\n        if (nextRead >= state.docFreq) {\n          return NO_MORE_DOCS;\n        } else {\n          doc = state.docs[nextRead++];\n          if (skipDocs == null || !skipDocs.get(doc.docID)) {\n            nextPosRead = 0;\n            return doc.docID;\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9d7606b7ab7992bc238d10c3bddfe82a639d212a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3d53c3f769ca0f9e7434937b792877770271aecf","date":1294785129,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() {\n      while(true) {\n        if (nextRead >= state.docFreq) {\n          return NO_MORE_DOCS;\n        } else {\n          doc = state.docs[nextRead++];\n          if (skipDocs == null || !skipDocs.get(doc.docID)) {\n            nextPosRead = 0;\n            return doc.docID;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() {\n      while(true) {\n        if (nextRead >= state.docFreq) {\n          return NO_MORE_DOCS;\n        } else {\n          doc = state.docs[nextRead++];\n          if (skipDocs == null || !skipDocs.get(doc.docID)) {\n            nextPosRead = 0;\n            return doc.docID;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9d7606b7ab7992bc238d10c3bddfe82a639d212a","date":1295971955,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() {\n      while(true) {\n        if (nextRead >= state.docFreq) {\n          return NO_MORE_DOCS;\n        } else {\n          doc = state.docs[nextRead++];\n          if (skipDocs == null || !skipDocs.get(doc.docID)) {\n            nextPosRead = 0;\n            return doc.docID;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a653ca3bb595a9c1f775fc44684e6ba7daafd3f5","date":1302211592,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (skipDocs == null || !skipDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR.nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"  END\");\n          return docID = NO_MORE_DOCS;\n        }\n        //System.out.println(\"  read doc code\");\n        final int code = postings.readVInt();\n        docID += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          //System.out.println(\"  read freq\");\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(docID)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return docID;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["a653ca3bb595a9c1f775fc44684e6ba7daafd3f5"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","a653ca3bb595a9c1f775fc44684e6ba7daafd3f5"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","a653ca3bb595a9c1f775fc44684e6ba7daafd3f5"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a653ca3bb595a9c1f775fc44684e6ba7daafd3f5","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a3776dccca01c11e7046323cfad46a3b4a471233","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"a653ca3bb595a9c1f775fc44684e6ba7daafd3f5":["9d7606b7ab7992bc238d10c3bddfe82a639d212a"],"a3776dccca01c11e7046323cfad46a3b4a471233":["9d7606b7ab7992bc238d10c3bddfe82a639d212a","a653ca3bb595a9c1f775fc44684e6ba7daafd3f5"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","9d7606b7ab7992bc238d10c3bddfe82a639d212a"],"9d7606b7ab7992bc238d10c3bddfe82a639d212a":["3d53c3f769ca0f9e7434937b792877770271aecf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3d53c3f769ca0f9e7434937b792877770271aecf":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","3d53c3f769ca0f9e7434937b792877770271aecf"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["868da859b43505d9d2a023bfeae6dd0c795f5295","9d7606b7ab7992bc238d10c3bddfe82a639d212a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60ba444201d2570214b6fcf1d15600dc1a01f548"]},"commit2Childs":{"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","60ba444201d2570214b6fcf1d15600dc1a01f548"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["29ef99d61cda9641b6250bf9567329a6e65f901d","3d53c3f769ca0f9e7434937b792877770271aecf","868da859b43505d9d2a023bfeae6dd0c795f5295"],"962d04139994fce5193143ef35615499a9a96d78":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"a653ca3bb595a9c1f775fc44684e6ba7daafd3f5":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","d083e83f225b11e5fdd900e83d26ddb385b6955c","a3776dccca01c11e7046323cfad46a3b4a471233"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"9d7606b7ab7992bc238d10c3bddfe82a639d212a":["a653ca3bb595a9c1f775fc44684e6ba7daafd3f5","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3d53c3f769ca0f9e7434937b792877770271aecf":["9d7606b7ab7992bc238d10c3bddfe82a639d212a","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}