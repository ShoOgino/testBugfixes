{"path":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","commits":[{"id":"b78fd44c119574bf1529f13e122a1ecfea5f83c0","date":1312160110,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","pathOld":"/dev/null","sourceNew":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"bogusFieldBogusField\", false);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d042843368f0d289e28164525546259d89d6dbb6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b0f2476332da483dc2ea1fdd80b5968380653166","date":1316180489,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","sourceNew":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"bogusFieldBogusField\", false);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf","date":1323050351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","sourceNew":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","sourceNew":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","sourceNew":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBogusField().mjava","sourceNew":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testBogusField() throws Exception {\n    IndexReader r = IndexReader.open(userindex);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r,\n        \"bogusFieldBogusField\", SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);\n    assertEquals(0, similar.length);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf":["b0f2476332da483dc2ea1fdd80b5968380653166"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"b0f2476332da483dc2ea1fdd80b5968380653166":["b78fd44c119574bf1529f13e122a1ecfea5f83c0"],"b78fd44c119574bf1529f13e122a1ecfea5f83c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["b0f2476332da483dc2ea1fdd80b5968380653166","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["b0f2476332da483dc2ea1fdd80b5968380653166","9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"b0f2476332da483dc2ea1fdd80b5968380653166":["9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b78fd44c119574bf1529f13e122a1ecfea5f83c0":["b0f2476332da483dc2ea1fdd80b5968380653166"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b78fd44c119574bf1529f13e122a1ecfea5f83c0"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}