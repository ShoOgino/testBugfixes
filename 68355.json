{"path":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSFailoverTest#addDocs(String,int).mjava","commits":[{"id":"717e5ceb2acae36d422ec75e5a4ce9fac40506e1","date":1501239603,"type":1,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSFailoverTest#addDocs(String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSUlogDirTest#addDocs(String,int).mjava","sourceNew":"  private void addDocs(String collection, int numDocs) throws SolrServerException, IOException {\n    SolrClient solrClient = cluster.getSolrClient();\n    for (int docId = 1; docId <= numDocs; docId++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", docId);\n      solrClient.add(collection, doc);\n    }\n  }\n\n","sourceOld":"  private void addDocs(String collection, int numDocs) throws SolrServerException, IOException {\n    SolrClient solrClient = cluster.getSolrClient();\n    for (int docId = 1; docId <= numDocs; docId++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", docId);\n      solrClient.add(collection, doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSFailoverTest#addDocs(String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSUlogDirTest#addDocs(String,int).mjava","sourceNew":"  private void addDocs(String collection, int numDocs) throws SolrServerException, IOException {\n    SolrClient solrClient = cluster.getSolrClient();\n    for (int docId = 1; docId <= numDocs; docId++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", docId);\n      solrClient.add(collection, doc);\n    }\n  }\n\n","sourceOld":"  private void addDocs(String collection, int numDocs) throws SolrServerException, IOException {\n    SolrClient solrClient = cluster.getSolrClient();\n    for (int docId = 1; docId <= numDocs; docId++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", docId);\n      solrClient.add(collection, doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":1,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSFailoverTest#addDocs(String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSUlogDirTest#addDocs(String,int).mjava","sourceNew":"  private void addDocs(String collection, int numDocs) throws SolrServerException, IOException {\n    SolrClient solrClient = cluster.getSolrClient();\n    for (int docId = 1; docId <= numDocs; docId++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", docId);\n      solrClient.add(collection, doc);\n    }\n  }\n\n","sourceOld":"  private void addDocs(String collection, int numDocs) throws SolrServerException, IOException {\n    SolrClient solrClient = cluster.getSolrClient();\n    for (int docId = 1; docId <= numDocs; docId++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", docId);\n      solrClient.add(collection, doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","717e5ceb2acae36d422ec75e5a4ce9fac40506e1"],"717e5ceb2acae36d422ec75e5a4ce9fac40506e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["560c18d71dad43d675158783c3840f8c80d6d39c"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"717e5ceb2acae36d422ec75e5a4ce9fac40506e1":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","717e5ceb2acae36d422ec75e5a4ce9fac40506e1","560c18d71dad43d675158783c3840f8c80d6d39c"],"560c18d71dad43d675158783c3840f8c80d6d39c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}