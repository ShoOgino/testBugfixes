{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/KnnRegressionEvaluator.KnnRegressionTuple#scale(Matrix).mjava","commits":[{"id":"f7656aa7218845fc29808b9dfe775b9558ca4611","date":1533776721,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/KnnRegressionEvaluator.KnnRegressionTuple#scale(Matrix).mjava","pathOld":"/dev/null","sourceNew":"    public Matrix scale(Matrix predictors) {\n      double[][] observationData = observations.getData();\n      //We need to scale the columns of the data matrix with along with the predictors\n      Array2DRowRealMatrix observationMatrix = new Array2DRowRealMatrix(observationData);\n      Array2DRowRealMatrix observationTransposed = (Array2DRowRealMatrix) observationMatrix.transpose();\n      double[][] observationFeatureRows = observationTransposed.getDataRef();\n\n      double[][] predictorsData = predictors.getData();\n      //We need to scale the columns of the data matrix with along with the predictors\n      Array2DRowRealMatrix predictorMatrix = new Array2DRowRealMatrix(predictorsData);\n      Array2DRowRealMatrix predictorTransposed = (Array2DRowRealMatrix) predictorMatrix.transpose();\n      double[][] predictorFeatureRows = predictorTransposed.getDataRef();\n\n      for(int i=0; i<observationFeatureRows.length; i++) {\n        double[] observationFeatureRow = observationFeatureRows[i];\n        double[] predictorFeatureRow = predictorFeatureRows[i];\n        double[] combinedFeatureRow = new double[observationFeatureRow.length+predictorFeatureRow.length];\n        System.arraycopy(observationFeatureRow, 0, combinedFeatureRow, 0, observationFeatureRow.length);\n        System.arraycopy(predictorFeatureRow, 0, combinedFeatureRow, observationFeatureRow.length, predictorFeatureRow.length);\n\n        double[] scaledFeatures = MinMaxScaleEvaluator.scale(combinedFeatureRow, 0, 1);\n        System.arraycopy(scaledFeatures, 0, observationFeatureRow, 0, observationFeatureRow.length);\n        System.arraycopy(scaledFeatures, observationFeatureRow.length, predictorFeatureRow, 0, predictorFeatureRow.length);\n      }\n\n      Array2DRowRealMatrix scaledFeatureMatrix = new Array2DRowRealMatrix(observationFeatureRows);\n      Array2DRowRealMatrix scaledObservationsMatrix= (Array2DRowRealMatrix)scaledFeatureMatrix.transpose();\n      this.scaledObservations = new Matrix(scaledObservationsMatrix.getDataRef());\n\n      Array2DRowRealMatrix scaledPredictorMatrix = new Array2DRowRealMatrix(predictorFeatureRows);\n      Array2DRowRealMatrix scaledTransposedPredictorMatrix= (Array2DRowRealMatrix)scaledPredictorMatrix.transpose();\n      return new Matrix(scaledTransposedPredictorMatrix.getDataRef());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f7656aa7218845fc29808b9dfe775b9558ca4611"],"f7656aa7218845fc29808b9dfe775b9558ca4611":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f7656aa7218845fc29808b9dfe775b9558ca4611"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f7656aa7218845fc29808b9dfe775b9558ca4611":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}