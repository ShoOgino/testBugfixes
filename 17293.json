{"path":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","commits":[{"id":"9e98927024757b7944e3ab5bf88134d5f7f30600","date":1097059223,"type":0,"author":"Christoph Goller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"/dev/null","sourceNew":"  public void setUp() throws Exception {\n  \tIndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true);\n  \t//writer.setUseCompoundFile(false);\n  \t//writer.infoStream = System.out;\n  \tfor (int i = 0; i < numDocs; i++) {\n    \tDocument doc = new Document();\n    \tField fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.UN_TOKENIZED, Field.TermVector.YES);\n    \tdoc.add(fld);\n    \twriter.addDocument(doc);\n  \t}\n  \twriter.close();\n  \t\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12d40284fd9481f79444bc63bc5d13847caddd3d","date":1149902602,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n  \tIndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true);\n  \t//writer.setUseCompoundFile(false);\n  \t//writer.infoStream = System.out;\n  \tfor (int i = 0; i < numDocs; i++) {\n    \tDocument doc = new Document();\n    \tFieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.UN_TOKENIZED, Field.TermVector.YES);\n    \tdoc.add(fld);\n    \twriter.addDocument(doc);\n  \t}\n  \twriter.close();\n  \t\n\t}\n\n","sourceOld":"  public void setUp() throws Exception {\n  \tIndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true);\n  \t//writer.setUseCompoundFile(false);\n  \t//writer.infoStream = System.out;\n  \tfor (int i = 0; i < numDocs; i++) {\n    \tDocument doc = new Document();\n    \tField fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.UN_TOKENIZED, Field.TermVector.YES);\n    \tdoc.add(fld);\n    \twriter.addDocument(doc);\n  \t}\n  \twriter.close();\n  \t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde91cb86cf36b45603c6dfa1c27379a591a17e7","date":1166314240,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.UN_TOKENIZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n  \tIndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true);\n  \t//writer.setUseCompoundFile(false);\n  \t//writer.infoStream = System.out;\n  \tfor (int i = 0; i < numDocs; i++) {\n    \tDocument doc = new Document();\n    \tFieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.UN_TOKENIZED, Field.TermVector.YES);\n    \tdoc.add(fld);\n    \twriter.addDocument(doc);\n  \t}\n  \twriter.close();\n  \t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"290c401c31db375e771805c3ba7ac5f64c7370dc","date":1192034795,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.UN_TOKENIZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.UN_TOKENIZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.UN_TOKENIZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.UN_TOKENIZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.UN_TOKENIZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer\n            = new IndexWriter(directory, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiThreadTermVectors#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    //writer.setUseCompoundFile(false);\n    //writer.infoStream = System.out;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Fieldable fld = new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.NOT_ANALYZED, Field.TermVector.YES);\n      doc.add(fld);\n      writer.addDocument(doc);\n    }\n    writer.close();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e98927024757b7944e3ab5bf88134d5f7f30600":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["9e98927024757b7944e3ab5bf88134d5f7f30600"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"bde91cb86cf36b45603c6dfa1c27379a591a17e7":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"290c401c31db375e771805c3ba7ac5f64c7370dc":["bde91cb86cf36b45603c6dfa1c27379a591a17e7"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"9e98927024757b7944e3ab5bf88134d5f7f30600":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["bde91cb86cf36b45603c6dfa1c27379a591a17e7"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde91cb86cf36b45603c6dfa1c27379a591a17e7":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e98927024757b7944e3ab5bf88134d5f7f30600"],"290c401c31db375e771805c3ba7ac5f64c7370dc":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}