{"path":"solr/core/src/java/org/apache/solr/core/SolrCores#putDynamicDescriptor(String,CoreDescriptor).mjava","commits":[{"id":"9409650933cc688e77e565092a25e58adfc2e18d","date":1366663164,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#putDynamicDescriptor(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreMaps#putDynamicDescriptor(String,CoreDescriptor).mjava","sourceNew":"  protected void putDynamicDescriptor(String rawName, CoreDescriptor p) {\n    synchronized (modifyLock) {\n      dynamicDescriptors.put(rawName, p);\n    }\n  }\n\n","sourceOld":"  protected void putDynamicDescriptor(String rawName, CoreDescriptor p) {\n    synchronized (locker) {\n      dynamicDescriptors.put(rawName, p);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9435d55e3ea95c5d94406d3affc36f9505b6a736","date":1491251232,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#putDynamicDescriptor(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#putDynamicDescriptor(String,CoreDescriptor).mjava","sourceNew":"  protected void putDynamicDescriptor(String rawName, CoreDescriptor cd) {\n    synchronized (modifyLock) {\n      if (cd.isTransient()) {\n        if (container.getTransientCacheHandler() != null) {\n          container.getTransientCacheHandler().addTransientDescriptor(rawName, cd);\n        } else {\n          log.error(\"Tried to add transient core to transient handler, but no transient core handler has been found. \"\n              + \" Descriptor: \" + cd.toString());\n        }\n      } else {\n        lazyDescriptors.put(rawName, cd);\n      }\n    }\n  }\n\n","sourceOld":"  protected void putDynamicDescriptor(String rawName, CoreDescriptor p) {\n    synchronized (modifyLock) {\n      dynamicDescriptors.put(rawName, p);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6a4b585aed7660a589375f6a09b90efd29c961","date":1491296430,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#putDynamicDescriptor(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#putDynamicDescriptor(String,CoreDescriptor).mjava","sourceNew":"  protected void putDynamicDescriptor(String rawName, CoreDescriptor cd) {\n    synchronized (modifyLock) {\n      if (cd.isTransient()) {\n        if (container.getTransientCacheHandler() != null) {\n          container.getTransientCacheHandler().addTransientDescriptor(rawName, cd);\n        } else {\n          log.error(\"Tried to add transient core to transient handler, but no transient core handler has been found. \"\n              + \" Descriptor: \" + cd.toString());\n        }\n      } else {\n        lazyDescriptors.put(rawName, cd);\n      }\n    }\n  }\n\n","sourceOld":"  protected void putDynamicDescriptor(String rawName, CoreDescriptor p) {\n    synchronized (modifyLock) {\n      dynamicDescriptors.put(rawName, p);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreDescriptor(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#putDynamicDescriptor(String,CoreDescriptor).mjava","sourceNew":"  protected void addCoreDescriptor(CoreDescriptor p) {\n    synchronized (modifyLock) {\n      if (p.isTransient()) {\n        if (container.getTransientCacheHandler() != null) {\n          container.getTransientCacheHandler().addTransientDescriptor(p.getName(), p);\n        }\n      } else {\n        residentDesciptors.put(p.getName(), p);\n      }\n    }\n  }\n\n","sourceOld":"  protected void putDynamicDescriptor(String rawName, CoreDescriptor cd) {\n    synchronized (modifyLock) {\n      if (cd.isTransient()) {\n        if (container.getTransientCacheHandler() != null) {\n          container.getTransientCacheHandler().addTransientDescriptor(rawName, cd);\n        } else {\n          log.error(\"Tried to add transient core to transient handler, but no transient core handler has been found. \"\n              + \" Descriptor: \" + cd.toString());\n        }\n      } else {\n        lazyDescriptors.put(rawName, cd);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":6,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#putCore(CoreDescriptor,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#putDynamicDescriptor(String,CoreDescriptor).mjava","sourceNew":"  // Returns the old core if there was a core of the same name.\n  protected SolrCore putCore(CoreDescriptor cd, SolrCore core) {\n    synchronized (modifyLock) {\n      if (cd.isTransient()) {\n        if (container.getTransientCacheHandler() != null) {\n          return container.getTransientCacheHandler().addCore(cd.getName(), core);\n        }\n      } else {\n        return cores.put(cd.getName(), core);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  protected void putDynamicDescriptor(String rawName, CoreDescriptor cd) {\n    synchronized (modifyLock) {\n      if (cd.isTransient()) {\n        if (container.getTransientCacheHandler() != null) {\n          container.getTransientCacheHandler().addTransientDescriptor(rawName, cd);\n        } else {\n          log.error(\"Tried to add transient core to transient handler, but no transient core handler has been found. \"\n              + \" Descriptor: \" + cd.toString());\n        }\n      } else {\n        lazyDescriptors.put(rawName, cd);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#putDynamicDescriptor(String,CoreDescriptor).mjava","sourceNew":null,"sourceOld":"  protected void putDynamicDescriptor(String rawName, CoreDescriptor cd) {\n    synchronized (modifyLock) {\n      if (cd.isTransient()) {\n        if (container.getTransientCacheHandler() != null) {\n          container.getTransientCacheHandler().addTransientDescriptor(rawName, cd);\n        } else {\n          log.error(\"Tried to add transient core to transient handler, but no transient core handler has been found. \"\n              + \" Descriptor: \" + cd.toString());\n        }\n      } else {\n        lazyDescriptors.put(rawName, cd);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["8b6a4b585aed7660a589375f6a09b90efd29c961"],"9435d55e3ea95c5d94406d3affc36f9505b6a736":["9409650933cc688e77e565092a25e58adfc2e18d"],"9409650933cc688e77e565092a25e58adfc2e18d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b6a4b585aed7660a589375f6a09b90efd29c961":["9409650933cc688e77e565092a25e58adfc2e18d"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["9435d55e3ea95c5d94406d3affc36f9505b6a736"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"9435d55e3ea95c5d94406d3affc36f9505b6a736":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"9409650933cc688e77e565092a25e58adfc2e18d":["9435d55e3ea95c5d94406d3affc36f9505b6a736","8b6a4b585aed7660a589375f6a09b90efd29c961"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9409650933cc688e77e565092a25e58adfc2e18d"],"8b6a4b585aed7660a589375f6a09b90efd29c961":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}