{"path":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#compressString(String,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#compressString(String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/CompressionTools#compressString(String,int).mjava","sourceNew":"  /** Compresses the String value using the specified\n   *  compressionLevel (constants are defined in\n   *  java.util.zip.Deflater). */\n  public static byte[] compressString(String value, int compressionLevel) {\n    BytesRef result = new BytesRef();\n    UnicodeUtil.UTF16toUTF8(value, 0, value.length(), result);\n    return compress(result.bytes, 0, result.length, compressionLevel);\n  }\n\n","sourceOld":"  /** Compresses the String value using the specified\n   *  compressionLevel (constants are defined in\n   *  java.util.zip.Deflater). */\n  public static byte[] compressString(String value, int compressionLevel) {\n    BytesRef result = new BytesRef();\n    UnicodeUtil.UTF16toUTF8(value, 0, value.length(), result);\n    return compress(result.bytes, 0, result.length, compressionLevel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#compressString(String,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#compressString(String,int).mjava","sourceNew":"  /** Compresses the String value using the specified\n   *  compressionLevel (constants are defined in\n   *  java.util.zip.Deflater). */\n  public static byte[] compressString(String value, int compressionLevel) {\n    byte[] b = new byte[UnicodeUtil.MAX_UTF8_BYTES_PER_CHAR * value.length()];\n    final int len = UnicodeUtil.UTF16toUTF8(value, 0, value.length(), b);\n    return compress(b, 0, len, compressionLevel);\n  }\n\n","sourceOld":"  /** Compresses the String value using the specified\n   *  compressionLevel (constants are defined in\n   *  java.util.zip.Deflater). */\n  public static byte[] compressString(String value, int compressionLevel) {\n    BytesRef result = new BytesRef();\n    UnicodeUtil.UTF16toUTF8(value, 0, value.length(), result);\n    return compress(result.bytes, 0, result.length, compressionLevel);\n  }\n\n","bugFix":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c","955c32f886db6f6356c9fcdea6b1f1cb4effda24","ff2d72eba0d3c8cde737409de23b81ccc100c657"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c84aedcfa68275a8218f47c728d71c04303ca6e","date":1466407290,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#compressString(String,int).mjava","sourceNew":null,"sourceOld":"  /** Compresses the String value using the specified\n   *  compressionLevel (constants are defined in\n   *  java.util.zip.Deflater). */\n  public static byte[] compressString(String value, int compressionLevel) {\n    byte[] b = new byte[UnicodeUtil.MAX_UTF8_BYTES_PER_CHAR * value.length()];\n    final int len = UnicodeUtil.UTF16toUTF8(value, 0, value.length(), b);\n    return compress(b, 0, len, compressionLevel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6aaba221b22442bdf0ef28770c25fe259dfb3f55","date":1466496193,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#compressString(String,int).mjava","sourceNew":null,"sourceOld":"  /** Compresses the String value using the specified\n   *  compressionLevel (constants are defined in\n   *  java.util.zip.Deflater). */\n  public static byte[] compressString(String value, int compressionLevel) {\n    byte[] b = new byte[UnicodeUtil.MAX_UTF8_BYTES_PER_CHAR * value.length()];\n    final int len = UnicodeUtil.UTF16toUTF8(value, 0, value.length(), b);\n    return compress(b, 0, len, compressionLevel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/document/CompressionTools#compressString(String,int).mjava","sourceNew":null,"sourceOld":"  /** Compresses the String value using the specified\n   *  compressionLevel (constants are defined in\n   *  java.util.zip.Deflater). */\n  public static byte[] compressString(String value, int compressionLevel) {\n    byte[] b = new byte[UnicodeUtil.MAX_UTF8_BYTES_PER_CHAR * value.length()];\n    final int len = UnicodeUtil.UTF16toUTF8(value, 0, value.length(), b);\n    return compress(b, 0, len, compressionLevel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","6c84aedcfa68275a8218f47c728d71c04303ca6e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c84aedcfa68275a8218f47c728d71c04303ca6e":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"]},"commit2Childs":{"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6c84aedcfa68275a8218f47c728d71c04303ca6e":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["6aaba221b22442bdf0ef28770c25fe259dfb3f55","6c84aedcfa68275a8218f47c728d71c04303ca6e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}