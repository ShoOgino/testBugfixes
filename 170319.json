{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.getCategoryPath());\n    MutableFacetResultNode resNode = new MutableFacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.increaseValue(fres.getFacetResultNode().getValue());\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.increaseResidue(a.getResidue());\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","sourceOld":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.getCategoryPath());\n    MutableFacetResultNode resNode = new MutableFacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.increaseValue(fres.getFacetResultNode().getValue());\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.increaseResidue(a.getResidue());\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    MutableFacetResultNode resNode = new MutableFacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.increaseValue(fres.getFacetResultNode().getValue());\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.increaseResidue(a.getResidue());\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","sourceOld":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.getCategoryPath());\n    MutableFacetResultNode resNode = new MutableFacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.increaseValue(fres.getFacetResultNode().getValue());\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.increaseResidue(a.getResidue());\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    MutableFacetResultNode resNode = new MutableFacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.increaseValue(fres.getFacetResultNode().getValue());\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.increaseResidue(a.getResidue());\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","sourceOld":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.getCategoryPath());\n    MutableFacetResultNode resNode = new MutableFacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.increaseValue(fres.getFacetResultNode().getValue());\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.increaseResidue(a.getResidue());\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"811cdb4a80352766eb0c762e48972707a924e5cd","date":1358767313,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    FacetResultNode resNode = new FacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.value += fres.getFacetResultNode().value;\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.residue += a.residue;\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","sourceOld":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    MutableFacetResultNode resNode = new MutableFacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.increaseValue(fres.getFacetResultNode().getValue());\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.increaseResidue(a.getResidue());\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    FacetResultNode resNode = new FacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.value += fres.getFacetResultNode().value;\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.residue += a.residue;\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","sourceOld":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    MutableFacetResultNode resNode = new MutableFacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.increaseValue(fres.getFacetResultNode().getValue());\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.increaseResidue(a.getResidue());\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dae862628c7a5275e1ff00ff3bc9803dedf124a9","date":1358939646,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    FacetResultNode resNode = new FacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.value += fres.getFacetResultNode().value;\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        heap.insertWithOverflow(tmpHeap.pop());\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","sourceOld":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    FacetResultNode resNode = new FacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.value += fres.getFacetResultNode().value;\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.residue += a.residue;\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2d5244a676b83c2d551c3746e8181588ba619e1","date":1359031414,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    FacetResultNode resNode = new FacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.value += fres.getFacetResultNode().value;\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        heap.insertWithOverflow(tmpHeap.pop());\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","sourceOld":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    FacetResultNode resNode = new FacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.value += fres.getFacetResultNode().value;\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        \n        FacetResultNode a = heap.insertWithOverflow(tmpHeap.pop());\n        if (a != null) {\n          resNode.residue += a.residue;\n        }\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":null,"sourceOld":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    FacetResultNode resNode = new FacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.value += fres.getFacetResultNode().value;\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        heap.insertWithOverflow(tmpHeap.pop());\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":null,"sourceOld":"  // merge given top K results into current \n  @Override\n  public IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException {\n    \n    int ordinal = taxonomyReader.getOrdinal(facetRequest.categoryPath);\n    FacetResultNode resNode = new FacetResultNode(ordinal, 0);\n    \n    int totalFacets = 0;\n    Heap<FacetResultNode> heap = null;\n    \n    // merge other results in queue\n    for (IntermediateFacetResult tmpFres : tmpResults) {\n      // cast should succeed\n      TopKFacetResult fres = (TopKFacetResult) tmpFres;\n      totalFacets += fres.getNumValidDescendants();\n      // set the value for the result node representing the facet request\n      resNode.value += fres.getFacetResultNode().value;\n      Heap<FacetResultNode> tmpHeap = fres.getHeap();\n      if (heap == null) {\n        heap = tmpHeap;\n        continue;\n      }\n      // bring sub results from heap of tmp res into result heap\n      for (int i = tmpHeap.size(); i > 0; i--) {\n        heap.insertWithOverflow(tmpHeap.pop());\n      }\n    }\n    \n    TopKFacetResult res = new TopKFacetResult(facetRequest, resNode, totalFacets);\n    res.setHeap(heap);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dae862628c7a5275e1ff00ff3bc9803dedf124a9":["811cdb4a80352766eb0c762e48972707a924e5cd"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["dae862628c7a5275e1ff00ff3bc9803dedf124a9"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["b89678825b68eccaf09e6ab71675fc0b0af1e099","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["dae862628c7a5275e1ff00ff3bc9803dedf124a9","d33e19a97046248623a7591aeaa6547233fd15e2"],"07155cdd910937cdf6877e48884d5782845c8b8b":["c4015cd39dff8d4dec562d909f9766debac53aa6","811cdb4a80352766eb0c762e48972707a924e5cd"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"811cdb4a80352766eb0c762e48972707a924e5cd":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"b2d5244a676b83c2d551c3746e8181588ba619e1":["07155cdd910937cdf6877e48884d5782845c8b8b","dae862628c7a5275e1ff00ff3bc9803dedf124a9"]},"commit2Childs":{"dae862628c7a5275e1ff00ff3bc9803dedf124a9":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13","b2d5244a676b83c2d551c3746e8181588ba619e1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c4015cd39dff8d4dec562d909f9766debac53aa6","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["07155cdd910937cdf6877e48884d5782845c8b8b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07155cdd910937cdf6877e48884d5782845c8b8b":["b2d5244a676b83c2d551c3746e8181588ba619e1"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["c4015cd39dff8d4dec562d909f9766debac53aa6","811cdb4a80352766eb0c762e48972707a924e5cd"],"811cdb4a80352766eb0c762e48972707a924e5cd":["dae862628c7a5275e1ff00ff3bc9803dedf124a9","07155cdd910937cdf6877e48884d5782845c8b8b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b2d5244a676b83c2d551c3746e8181588ba619e1":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b2d5244a676b83c2d551c3746e8181588ba619e1"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}