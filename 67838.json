{"path":"lucene/src/test/org/apache/lucene/index/TestCodecs#getRandomText().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#getRandomText().mjava","pathOld":"/dev/null","sourceNew":"  char[] getRandomText() {\n\n    final int len = 1+this.nextInt(10);\n    final char[] buffer = new char[len+1];\n    for(int i=0;i<len;i++) {\n      buffer[i] = (char) this.nextInt(97, 123);\n      /*\n      final int t = nextInt(5);\n      if (0 == t && i < len-1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n        // Low surrogate\n        buffer[i] = (char) nextInt(0xdc00, 0xe000);\n      } else if (t <= 1)\n        buffer[i] = (char) nextInt(0x80);\n      else if (2 == t)\n        buffer[i] = (char) nextInt(0x80, 0x800);\n      else if (3 == t)\n        buffer[i] = (char) nextInt(0x800, 0xd800);\n      else\n        buffer[i] = (char) nextInt(0xe000, 0xffff);\n    */\n    }\n    buffer[len] = 0xffff;\n    return buffer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#getRandomText().mjava","sourceNew":null,"sourceOld":"  char[] getRandomText() {\n\n    final int len = 1+this.nextInt(10);\n    final char[] buffer = new char[len+1];\n    for(int i=0;i<len;i++) {\n      buffer[i] = (char) this.nextInt(97, 123);\n      /*\n      final int t = nextInt(5);\n      if (0 == t && i < len-1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n        // Low surrogate\n        buffer[i] = (char) nextInt(0xdc00, 0xe000);\n      } else if (t <= 1)\n        buffer[i] = (char) nextInt(0x80);\n      else if (2 == t)\n        buffer[i] = (char) nextInt(0x80, 0x800);\n      else if (3 == t)\n        buffer[i] = (char) nextInt(0x800, 0xd800);\n      else\n        buffer[i] = (char) nextInt(0xe000, 0xffff);\n    */\n    }\n    buffer[len] = 0xffff;\n    return buffer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#getRandomText().mjava","sourceNew":null,"sourceOld":"  char[] getRandomText() {\n\n    final int len = 1+this.nextInt(10);\n    final char[] buffer = new char[len+1];\n    for(int i=0;i<len;i++) {\n      buffer[i] = (char) this.nextInt(97, 123);\n      /*\n      final int t = nextInt(5);\n      if (0 == t && i < len-1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n        // Low surrogate\n        buffer[i] = (char) nextInt(0xdc00, 0xe000);\n      } else if (t <= 1)\n        buffer[i] = (char) nextInt(0x80);\n      else if (2 == t)\n        buffer[i] = (char) nextInt(0x80, 0x800);\n      else if (3 == t)\n        buffer[i] = (char) nextInt(0x800, 0xd800);\n      else\n        buffer[i] = (char) nextInt(0xe000, 0xffff);\n    */\n    }\n    buffer[len] = 0xffff;\n    return buffer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#getRandomText().mjava","sourceNew":null,"sourceOld":"  char[] getRandomText() {\n\n    final int len = 1+this.nextInt(10);\n    final char[] buffer = new char[len+1];\n    for(int i=0;i<len;i++) {\n      buffer[i] = (char) this.nextInt(97, 123);\n      /*\n      final int t = nextInt(5);\n      if (0 == t && i < len-1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n        // Low surrogate\n        buffer[i] = (char) nextInt(0xdc00, 0xe000);\n      } else if (t <= 1)\n        buffer[i] = (char) nextInt(0x80);\n      else if (2 == t)\n        buffer[i] = (char) nextInt(0x80, 0x800);\n      else if (3 == t)\n        buffer[i] = (char) nextInt(0x800, 0xd800);\n      else\n        buffer[i] = (char) nextInt(0xe000, 0xffff);\n    */\n    }\n    buffer[len] = 0xffff;\n    return buffer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","56da903869515527852ee21ea7ef7bfe414cd40d"],"56da903869515527852ee21ea7ef7bfe414cd40d":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","56da903869515527852ee21ea7ef7bfe414cd40d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56da903869515527852ee21ea7ef7bfe414cd40d"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["70ad682703b8585f5d0a637efec044d57ec05efb","56da903869515527852ee21ea7ef7bfe414cd40d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}