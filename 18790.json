{"path":"src/java/org/apache/lucene/search/PhraseScorer#skipTo(int).mjava","commits":[{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseScorer#skipTo(int).mjava","pathOld":"/dev/null","sourceNew":"  public boolean skipTo(int target) throws IOException {\n    for (PhrasePositions pp = first; more && pp != null; pp = pp.next) {\n      more = pp.skipTo(target);\n    }\n    if (more)\n      sort();                                     // re-sort\n    return more;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfab81c03dd23957f875ae11ea217c44403a7874","date":1082561009,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseScorer#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseScorer#skipTo(int).mjava","sourceNew":"  public boolean skipTo(int target) throws IOException {\n    for (PhrasePositions pp = first; more && pp != null; pp = pp.next) {\n      more = pp.skipTo(target);\n    }\n    if (more)\n      sort();                                     // re-sort\n    return doNext();\n  }\n\n","sourceOld":"  public boolean skipTo(int target) throws IOException {\n    for (PhrasePositions pp = first; more && pp != null; pp = pp.next) {\n      more = pp.skipTo(target);\n    }\n    if (more)\n      sort();                                     // re-sort\n    return more;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e493496c35fb4f17315b8827d1ba1ae1585554","date":1177392767,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseScorer#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseScorer#skipTo(int).mjava","sourceNew":"  public boolean skipTo(int target) throws IOException {\n    firstTime = false;\n    for (PhrasePositions pp = first; more && pp != null; pp = pp.next) {\n      more = pp.skipTo(target);\n    }\n    if (more)\n      sort();                                     // re-sort\n    return doNext();\n  }\n\n","sourceOld":"  public boolean skipTo(int target) throws IOException {\n    for (PhrasePositions pp = first; more && pp != null; pp = pp.next) {\n      more = pp.skipTo(target);\n    }\n    if (more)\n      sort();                                     // re-sort\n    return doNext();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseScorer#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseScorer#skipTo(int).mjava","sourceNew":"  /** @deprecated use {@link #advance(int)} instead. */\n  public boolean skipTo(int target) throws IOException {\n    return advance(target) != NO_MORE_DOCS;\n  }\n\n","sourceOld":"  public boolean skipTo(int target) throws IOException {\n    firstTime = false;\n    for (PhrasePositions pp = first; more && pp != null; pp = pp.next) {\n      more = pp.skipTo(target);\n    }\n    if (more)\n      sort();                                     // re-sort\n    return doNext();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"438aef2dc00a23f2716882753fe225fbce4cfbfc","date":1255281460,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/PhraseScorer#skipTo(int).mjava","sourceNew":null,"sourceOld":"  /** @deprecated use {@link #advance(int)} instead. */\n  public boolean skipTo(int target) throws IOException {\n    return advance(target) != NO_MORE_DOCS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cfab81c03dd23957f875ae11ea217c44403a7874":["15c469602973ef1a33c9a07367a380d278ffab20"],"b3e493496c35fb4f17315b8827d1ba1ae1585554":["cfab81c03dd23957f875ae11ea217c44403a7874"],"30a558487f2298c2c19ceca9103c1b6865d64708":["b3e493496c35fb4f17315b8827d1ba1ae1585554"],"438aef2dc00a23f2716882753fe225fbce4cfbfc":["30a558487f2298c2c19ceca9103c1b6865d64708"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["438aef2dc00a23f2716882753fe225fbce4cfbfc"],"15c469602973ef1a33c9a07367a380d278ffab20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"cfab81c03dd23957f875ae11ea217c44403a7874":["b3e493496c35fb4f17315b8827d1ba1ae1585554"],"b3e493496c35fb4f17315b8827d1ba1ae1585554":["30a558487f2298c2c19ceca9103c1b6865d64708"],"30a558487f2298c2c19ceca9103c1b6865d64708":["438aef2dc00a23f2716882753fe225fbce4cfbfc"],"438aef2dc00a23f2716882753fe225fbce4cfbfc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15c469602973ef1a33c9a07367a380d278ffab20"],"15c469602973ef1a33c9a07367a380d278ffab20":["cfab81c03dd23957f875ae11ea217c44403a7874"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}