{"path":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhrase().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhrase().mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhrase().mjava","sourceNew":"  public void testSearchPhrase() throws Exception {\n    Query query = pqF( \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    FieldQuery fq = new FieldQuery( query, true, true );\n    \n    // \"a\"\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b\"\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 1 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b c\"\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 2 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n\n    // phraseHighlight = true, fieldMatch = false\n    fq = new FieldQuery( query, true, false );\n    \n    // \"a b c\"\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNotNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n\n    // phraseHighlight = false, fieldMatch = true\n    fq = new FieldQuery( query, false, true );\n    \n    // \"a\"\n    phraseCandidate.clear();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b\"\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 1 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b c\"\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 2 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n  }\n\n","sourceOld":"  public void testSearchPhrase() throws Exception {\n    Query query = pqF( \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    FieldQuery fq = new FieldQuery( query, true, true );\n    \n    // \"a\"\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b\"\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 1 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b c\"\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 2 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n\n    // phraseHighlight = true, fieldMatch = false\n    fq = new FieldQuery( query, true, false );\n    \n    // \"a b c\"\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNotNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n\n    // phraseHighlight = false, fieldMatch = true\n    fq = new FieldQuery( query, false, true );\n    \n    // \"a\"\n    phraseCandidate.clear();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b\"\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 1 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b c\"\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 2 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhrase().mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhrase().mjava","sourceNew":"  public void testSearchPhrase() throws Exception {\n    Query query = pqF( \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    FieldQuery fq = new FieldQuery( query, true, true );\n    \n    // \"a\"\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b\"\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 1 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b c\"\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 2 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n\n    // phraseHighlight = true, fieldMatch = false\n    fq = new FieldQuery( query, true, false );\n    \n    // \"a b c\"\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNotNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n\n    // phraseHighlight = false, fieldMatch = true\n    fq = new FieldQuery( query, false, true );\n    \n    // \"a\"\n    phraseCandidate.clear();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b\"\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 1 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b c\"\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 2 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n  }\n\n","sourceOld":"  public void testSearchPhrase() throws Exception {\n    Query query = pqF( \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    FieldQuery fq = new FieldQuery( query, true, true );\n    \n    // \"a\"\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b\"\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 1 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b c\"\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 2 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n\n    // phraseHighlight = true, fieldMatch = false\n    fq = new FieldQuery( query, true, false );\n    \n    // \"a b c\"\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNotNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n\n    // phraseHighlight = false, fieldMatch = true\n    fq = new FieldQuery( query, false, true );\n    \n    // \"a\"\n    phraseCandidate.clear();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b\"\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 1 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n    // \"a b c\"\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 2 ) );\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    assertNull( fq.searchPhrase( \"x\", phraseCandidate ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}