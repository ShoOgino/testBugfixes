{"path":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#extractTerms(Set[Term]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#extractTerms(Set[Term]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery#extractTerms(Set[Term]).mjava","sourceNew":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    // TODO: OK to not add any terms when wrapped a filter\n    // and used with MultiSearcher, but may not be OK for\n    // highlighting.\n    // If a query was wrapped, we delegate to query.\n    if (query != null)\n      query.extractTerms(terms);\n  }\n\n","sourceOld":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    // TODO: OK to not add any terms when wrapped a filter\n    // and used with MultiSearcher, but may not be OK for\n    // highlighting.\n    // If a query was wrapped, we delegate to query.\n    if (query != null)\n      query.extractTerms(terms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"933780884e79144ac5dbe8785ec03c5f4ed3f218","date":1423843143,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#extractTerms(Set[Term]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#extractTerms(Set[Term]).mjava","sourceNew":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    // NOTE: ConstantScoreQuery used to wrap either a query or a filter. Now\n    // that filter extends Query, we need to only extract terms when the query\n    // is not a filter if we do not want to hit an UnsupportedOperationException\n    if (query instanceof Filter == false) {\n      query.extractTerms(terms);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    // TODO: OK to not add any terms when wrapped a filter\n    // and used with MultiSearcher, but may not be OK for\n    // highlighting.\n    // If a query was wrapped, we delegate to query.\n    if (query != null)\n      query.extractTerms(terms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05c52ac194342b760b830342ee8423fcf00e54d0","date":1429197275,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#extractTerms(Set[Term]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    // NOTE: ConstantScoreQuery used to wrap either a query or a filter. Now\n    // that filter extends Query, we need to only extract terms when the query\n    // is not a filter if we do not want to hit an UnsupportedOperationException\n    if (query instanceof Filter == false) {\n      query.extractTerms(terms);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"933780884e79144ac5dbe8785ec03c5f4ed3f218":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05c52ac194342b760b830342ee8423fcf00e54d0":["933780884e79144ac5dbe8785ec03c5f4ed3f218"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05c52ac194342b760b830342ee8423fcf00e54d0"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["933780884e79144ac5dbe8785ec03c5f4ed3f218"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"933780884e79144ac5dbe8785ec03c5f4ed3f218":["05c52ac194342b760b830342ee8423fcf00e54d0"],"05c52ac194342b760b830342ee8423fcf00e54d0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}