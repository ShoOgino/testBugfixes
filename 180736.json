{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#sortPartition(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#sortPartition(int).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#sortPartition(int).mjava","sourceNew":"  /** Sort a single partition in-memory. */\n  protected File sortPartition(int len) throws IOException {\n    BytesRefList data = this.buffer;\n    File tempFile = File.createTempFile(\"sort\", \"partition\", tempDirectory);\n\n    long start = System.currentTimeMillis();\n    sortInfo.sortTime += (System.currentTimeMillis() - start);\n    \n    final ByteSequencesWriter out = new ByteSequencesWriter(tempFile);\n    BytesRef spare;\n    try {\n      BytesRefIterator iter = buffer.iterator(comparator);\n      while((spare = iter.next()) != null) {\n        assert spare.length <= Short.MAX_VALUE;\n        out.write(spare);\n      }\n      \n      out.close();\n\n      // Clean up the buffer for the next partition.\n      data.clear();\n      return tempFile;\n    } finally {\n      IOUtils.close(out);\n    }\n  }\n\n","sourceOld":"  /** Sort a single partition in-memory. */\n  protected File sortPartition(int len) throws IOException {\n    BytesRefList data = this.buffer;\n    File tempFile = File.createTempFile(\"sort\", \"partition\", tempDirectory);\n\n    long start = System.currentTimeMillis();\n    sortInfo.sortTime += (System.currentTimeMillis() - start);\n    \n    final ByteSequencesWriter out = new ByteSequencesWriter(tempFile);\n    BytesRef spare;\n    try {\n      BytesRefIterator iter = buffer.iterator(comparator);\n      while((spare = iter.next()) != null) {\n        assert spare.length <= Short.MAX_VALUE;\n        out.write(spare);\n      }\n      \n      out.close();\n\n      // Clean up the buffer for the next partition.\n      data.clear();\n      return tempFile;\n    } finally {\n      IOUtils.close(out);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce73f585d17f53055185a19beb46db23d76e0ad9","date":1353077110,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#sortPartition(int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#sortPartition(int).mjava","sourceNew":"  /** Sort a single partition in-memory. */\n  protected File sortPartition(int len) throws IOException {\n    BytesRefArray data = this.buffer;\n    File tempFile = File.createTempFile(\"sort\", \"partition\", tempDirectory);\n\n    long start = System.currentTimeMillis();\n    sortInfo.sortTime += (System.currentTimeMillis() - start);\n    \n    final ByteSequencesWriter out = new ByteSequencesWriter(tempFile);\n    BytesRef spare;\n    try {\n      BytesRefIterator iter = buffer.iterator(comparator);\n      while((spare = iter.next()) != null) {\n        assert spare.length <= Short.MAX_VALUE;\n        out.write(spare);\n      }\n      \n      out.close();\n\n      // Clean up the buffer for the next partition.\n      data.clear();\n      return tempFile;\n    } finally {\n      IOUtils.close(out);\n    }\n  }\n\n","sourceOld":"  /** Sort a single partition in-memory. */\n  protected File sortPartition(int len) throws IOException {\n    BytesRefList data = this.buffer;\n    File tempFile = File.createTempFile(\"sort\", \"partition\", tempDirectory);\n\n    long start = System.currentTimeMillis();\n    sortInfo.sortTime += (System.currentTimeMillis() - start);\n    \n    final ByteSequencesWriter out = new ByteSequencesWriter(tempFile);\n    BytesRef spare;\n    try {\n      BytesRefIterator iter = buffer.iterator(comparator);\n      while((spare = iter.next()) != null) {\n        assert spare.length <= Short.MAX_VALUE;\n        out.write(spare);\n      }\n      \n      out.close();\n\n      // Clean up the buffer for the next partition.\n      data.clear();\n      return tempFile;\n    } finally {\n      IOUtils.close(out);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"847d1294c8ff2f0172af20892ef98a1c6a952e09","date":1359503775,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort#sortPartition(int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#sortPartition(int).mjava","sourceNew":"  /** Sort a single partition in-memory. */\n  protected File sortPartition(int len) throws IOException {\n    BytesRefArray data = this.buffer;\n    File tempFile = File.createTempFile(\"sort\", \"partition\", tempDirectory);\n\n    long start = System.currentTimeMillis();\n    sortInfo.sortTime += (System.currentTimeMillis() - start);\n    \n    final ByteSequencesWriter out = new ByteSequencesWriter(tempFile);\n    BytesRef spare;\n    try {\n      BytesRefIterator iter = buffer.iterator(comparator);\n      while((spare = iter.next()) != null) {\n        assert spare.length <= Short.MAX_VALUE;\n        out.write(spare);\n      }\n      \n      out.close();\n\n      // Clean up the buffer for the next partition.\n      data.clear();\n      return tempFile;\n    } finally {\n      IOUtils.close(out);\n    }\n  }\n\n","sourceOld":"  /** Sort a single partition in-memory. */\n  protected File sortPartition(int len) throws IOException {\n    BytesRefArray data = this.buffer;\n    File tempFile = File.createTempFile(\"sort\", \"partition\", tempDirectory);\n\n    long start = System.currentTimeMillis();\n    sortInfo.sortTime += (System.currentTimeMillis() - start);\n    \n    final ByteSequencesWriter out = new ByteSequencesWriter(tempFile);\n    BytesRef spare;\n    try {\n      BytesRefIterator iter = buffer.iterator(comparator);\n      while((spare = iter.next()) != null) {\n        assert spare.length <= Short.MAX_VALUE;\n        out.write(spare);\n      }\n      \n      out.close();\n\n      // Clean up the buffer for the next partition.\n      data.clear();\n      return tempFile;\n    } finally {\n      IOUtils.close(out);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#sortPartition(int).mjava","sourceNew":null,"sourceOld":"  /** Sort a single partition in-memory. */\n  protected File sortPartition(int len) throws IOException {\n    BytesRefList data = this.buffer;\n    File tempFile = File.createTempFile(\"sort\", \"partition\", tempDirectory);\n\n    long start = System.currentTimeMillis();\n    sortInfo.sortTime += (System.currentTimeMillis() - start);\n    \n    final ByteSequencesWriter out = new ByteSequencesWriter(tempFile);\n    BytesRef spare;\n    try {\n      BytesRefIterator iter = buffer.iterator(comparator);\n      while((spare = iter.next()) != null) {\n        assert spare.length <= Short.MAX_VALUE;\n        out.write(spare);\n      }\n      \n      out.close();\n\n      // Clean up the buffer for the next partition.\n      data.clear();\n      return tempFile;\n    } finally {\n      IOUtils.close(out);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099","847d1294c8ff2f0172af20892ef98a1c6a952e09"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["ce73f585d17f53055185a19beb46db23d76e0ad9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["847d1294c8ff2f0172af20892ef98a1c6a952e09"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ce73f585d17f53055185a19beb46db23d76e0ad9","d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}