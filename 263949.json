{"path":"solr/core/src/java/org/apache/solr/handler/SQLHandler#fields(Set[String]).mjava","commits":[{"id":"7b2c4e17100e207bc842e56d016b9f91f411304e","date":1434336696,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler#fields(Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  private static String fields(Set<String> fieldSet) {\n    StringBuilder buf = new StringBuilder();\n    boolean comma = false;\n    for(String field : fieldSet) {\n      if(comma) {\n        buf.append(\",\");\n      }\n      buf.append(field);\n      comma = true;\n    }\n\n    return buf.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d984627825732e682759c22df7a3b171a80f3812","date":1461857653,"type":4,"author":"Kevin Risden","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#fields(Set[String]).mjava","sourceNew":null,"sourceOld":"  private static String fields(Set<String> fieldSet) {\n    StringBuilder buf = new StringBuilder();\n    boolean comma = false;\n    for(String field : fieldSet) {\n      if(comma) {\n        buf.append(\",\");\n      }\n      buf.append(field);\n      comma = true;\n    }\n\n    return buf.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":6,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#getFields(List[Map.Entry[String,Class]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#fields(Set[String]).mjava","sourceNew":"  private String getFields(List<Map.Entry<String, Class>> fields) {\n    StringBuilder buf = new StringBuilder();\n    for(Map.Entry<String, Class> field : fields) {\n\n      if(buf.length() > 0) {\n        buf.append(\",\");\n      }\n\n      buf.append(field.getKey());\n    }\n\n    return buf.toString();\n  }\n\n","sourceOld":"  private static String fields(Set<String> fieldSet) {\n    StringBuilder buf = new StringBuilder();\n    boolean comma = false;\n    for(String field : fieldSet) {\n      if(comma) {\n        buf.append(\",\");\n      }\n      buf.append(field);\n      comma = true;\n    }\n\n    return buf.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":5,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#getFields(Set[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#fields(Set[String]).mjava","sourceNew":"  private String getFields(Set<String> fieldSet) {\n    StringBuilder buf = new StringBuilder();\n    boolean appendVersion = true;\n    for(String field : fieldSet) {\n\n      if(buf.length() > 0) {\n        buf.append(\",\");\n      }\n\n      if(field.equals(\"_version_\")) {\n        appendVersion = false;\n      }\n\n      buf.append(field);\n    }\n\n    if(appendVersion){\n      buf.append(\",_version_\");\n    }\n\n    return buf.toString();\n  }\n\n","sourceOld":"  private static String fields(Set<String> fieldSet) {\n    StringBuilder buf = new StringBuilder();\n    boolean comma = false;\n    for(String field : fieldSet) {\n      if(comma) {\n        buf.append(\",\");\n      }\n      buf.append(field);\n      comma = true;\n    }\n\n    return buf.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":6,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#getSort(List[Pair[String,String]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#fields(Set[String]).mjava","sourceNew":"  private String getSort(List<Pair<String, String>> orders) {\n    StringBuilder buf = new StringBuilder();\n    for(Pair<String, String> pair : orders) {\n      if(buf.length() > 0) {\n        buf.append(\",\");\n      }\n      buf.append(pair.getKey()).append(\" \").append(pair.getValue());\n    }\n\n    return buf.toString();\n  }\n\n","sourceOld":"  private static String fields(Set<String> fieldSet) {\n    StringBuilder buf = new StringBuilder();\n    boolean comma = false;\n    for(String field : fieldSet) {\n      if(comma) {\n        buf.append(\",\");\n      }\n      buf.append(field);\n      comma = true;\n    }\n\n    return buf.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["7b2c4e17100e207bc842e56d016b9f91f411304e","d984627825732e682759c22df7a3b171a80f3812"],"d984627825732e682759c22df7a3b171a80f3812":["7b2c4e17100e207bc842e56d016b9f91f411304e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b2c4e17100e207bc842e56d016b9f91f411304e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"]},"commit2Childs":{"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d984627825732e682759c22df7a3b171a80f3812":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b2c4e17100e207bc842e56d016b9f91f411304e"],"7b2c4e17100e207bc842e56d016b9f91f411304e":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa","d984627825732e682759c22df7a3b171a80f3812"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}