{"path":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = readers[0].indexReader.reopen();\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a4df66e06e0c3b520d7d5941e1c043076f06f17","date":1309454196,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = readers[0].indexReader.reopen();\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.closeSafely(false, dirs[0]);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = readers[0].indexReader.reopen();\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = readers[0].indexReader.reopen();\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.closeSafely(false, dirs[0]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = readers[0].indexReader.reopen();\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.closeSafely(false, dirs[0]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = readers[0].indexReader.reopen();\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = readers[0].indexReader.reopen();\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.closeSafely(false, dirs[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a8259c922a83abc544609227a60d48e5ee93e7e","date":1317679620,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = IndexReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = readers[0].indexReader.reopen();\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b60058a041168f523085f33ef5c4f9a5306f18b1","date":1323097526,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = IndexReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = IndexReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = IndexReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = IndexReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = IndexReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = IndexReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    // delete a doc from the reader and commit - should recompute\n    origReader.close();\n    origReader = readers[0].indexReader;\n    readers[0].indexReader = IndexReader.open(origReader.directory(),false);\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after opening a writable reader - 9th attempt!\");\n    // now do the delete\n    readers[0].indexReader.deleteDocument(1);\n    readers[0].indexReader.commit(null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after deleting docs the index - 10th attempt!\");\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20b26030b0883b7f045e3350bb97bee7146f1efd","date":1327854897,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    DirectoryReader r2 = DirectoryReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = IndexReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    DirectoryReader r2 = DirectoryReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    IndexReader r2 = IndexReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    DirectoryReader r2 = DirectoryReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory[][] dirs = FacetTestUtils.createIndexTaxonomyDirs(1);\n\n    // Create our index/taxonomy writers\n    IndexTaxonomyWriterPair[] writers = FacetTestUtils.createIndexTaxonomyWriterPair(dirs);\n    DefaultFacetIndexingParams iParams = new DefaultFacetIndexingParams();\n\n    // Add a facet to the index\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"a\", \"b\");\n\n    // Commit Changes\n    writers[0].indexWriter.commit();\n    writers[0].taxWriter.commit();\n\n    // Open readers\n    IndexTaxonomyReaderPair[] readers = FacetTestUtils.createIndexTaxonomyReaderPair(dirs);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, readers[0].indexReader, readers[0].taxReader, iParams, null);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, readers[0].indexReader, readers[0].taxReader, iParams);\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, writers[0].indexWriter, writers[0].taxWriter, \"c\", \"d\");\n    writers[0].indexWriter.close();\n    writers[0].taxWriter.close();\n\n    readers[0].taxReader.refresh();\n    DirectoryReader r2 = DirectoryReader.openIfChanged(readers[0].indexReader);\n    assertNotNull(r2);\n    // Hold on to the 'original' reader so we can do some checks with it\n    IndexReader origReader = null;\n\n    assertTrue(\"Reader must be updated!\", readers[0].indexReader != r2);\n    \n    // Set the 'original' reader\n    origReader = readers[0].indexReader;\n    // Set the new master index Reader\n    readers[0].indexReader = r2;\n\n    // Try to get total-counts the originalReader AGAIN, just for sanity. Should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 6th attempt\",totalCounts == \n      TFC.getTotalCounts(origReader, readers[0].taxReader, iParams, null));\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(readers[0].indexReader, readers[0].taxReader, iParams, null));\n    \n    origReader.close();\n    readers[0].close();\n    r2.close();\n    outputFile.delete();\n    IOUtils.close(dirs[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["8a8259c922a83abc544609227a60d48e5ee93e7e","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"b60058a041168f523085f33ef5c4f9a5306f18b1":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","20b26030b0883b7f045e3350bb97bee7146f1efd"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"8a8259c922a83abc544609227a60d48e5ee93e7e":["24230fe54121f9be9d85f2c2067536296785e421"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"20b26030b0883b7f045e3350bb97bee7146f1efd":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["8a8259c922a83abc544609227a60d48e5ee93e7e","b60058a041168f523085f33ef5c4f9a5306f18b1"],"7a4df66e06e0c3b520d7d5941e1c043076f06f17":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"b60058a041168f523085f33ef5c4f9a5306f18b1":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"8a8259c922a83abc544609227a60d48e5ee93e7e":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","b60058a041168f523085f33ef5c4f9a5306f18b1","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"20b26030b0883b7f045e3350bb97bee7146f1efd":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a","20b26030b0883b7f045e3350bb97bee7146f1efd"],"7a4df66e06e0c3b520d7d5941e1c043076f06f17":["24230fe54121f9be9d85f2c2067536296785e421","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}