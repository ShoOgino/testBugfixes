{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/config/FieldDateResolutionFCListener#buildFieldConfig(FieldConfig).mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/config/FieldDateResolutionFCListener#buildFieldConfig(FieldConfig).mjava","pathOld":"/dev/null","sourceNew":"  public void buildFieldConfig(FieldConfig fieldConfig) {\n    DateResolutionAttribute fieldDateResAttr = (DateResolutionAttribute) fieldConfig\n        .addAttribute(DateResolutionAttribute.class);\n    DateTools.Resolution dateRes = null;\n\n    if (this.config.hasAttribute(FieldDateResolutionMapAttribute.class)) {\n      FieldDateResolutionMapAttribute dateResMapAttr = (FieldDateResolutionMapAttribute) this.config\n          .addAttribute(FieldDateResolutionMapAttribute.class);\n      dateRes = dateResMapAttr.getFieldDateResolutionMap().get(\n          fieldConfig.getFieldName().toString());\n    }\n\n    if (dateRes == null) {\n      \n      if (this.config.hasAttribute(DateResolutionAttribute.class)) {\n        DateResolutionAttribute dateResAttr = (DateResolutionAttribute) this.config\n            .addAttribute(DateResolutionAttribute.class);\n        dateRes = dateResAttr.getDateResolution();\n\n      }\n\n    }\n\n    fieldDateResAttr.setDateResolution(dateRes);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["8ba2a9cb0538219391cdc1af0f41446cf39684d7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/config/FieldDateResolutionFCListener#buildFieldConfig(FieldConfig).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/config/FieldDateResolutionFCListener#buildFieldConfig(FieldConfig).mjava","sourceNew":"  public void buildFieldConfig(FieldConfig fieldConfig) {\n    DateResolutionAttribute fieldDateResAttr = (DateResolutionAttribute) fieldConfig\n        .addAttribute(DateResolutionAttribute.class);\n    DateTools.Resolution dateRes = null;\n\n    if (this.config.hasAttribute(FieldDateResolutionMapAttribute.class)) {\n      FieldDateResolutionMapAttribute dateResMapAttr = (FieldDateResolutionMapAttribute) this.config\n          .addAttribute(FieldDateResolutionMapAttribute.class);\n      dateRes = dateResMapAttr.getFieldDateResolutionMap().get(\n          fieldConfig.getFieldName().toString());\n    }\n\n    if (dateRes == null) {\n      \n      if (this.config.hasAttribute(DateResolutionAttribute.class)) {\n        DateResolutionAttribute dateResAttr = (DateResolutionAttribute) this.config\n            .addAttribute(DateResolutionAttribute.class);\n        dateRes = dateResAttr.getDateResolution();\n\n      }\n\n    }\n\n    fieldDateResAttr.setDateResolution(dateRes);\n\n  }\n\n","sourceOld":"  public void buildFieldConfig(FieldConfig fieldConfig) {\n    DateResolutionAttribute fieldDateResAttr = (DateResolutionAttribute) fieldConfig\n        .addAttribute(DateResolutionAttribute.class);\n    DateTools.Resolution dateRes = null;\n\n    if (this.config.hasAttribute(FieldDateResolutionMapAttribute.class)) {\n      FieldDateResolutionMapAttribute dateResMapAttr = (FieldDateResolutionMapAttribute) this.config\n          .addAttribute(FieldDateResolutionMapAttribute.class);\n      dateRes = dateResMapAttr.getFieldDateResolutionMap().get(\n          fieldConfig.getFieldName().toString());\n    }\n\n    if (dateRes == null) {\n      \n      if (this.config.hasAttribute(DateResolutionAttribute.class)) {\n        DateResolutionAttribute dateResAttr = (DateResolutionAttribute) this.config\n            .addAttribute(DateResolutionAttribute.class);\n        dateRes = dateResAttr.getDateResolution();\n\n      }\n\n    }\n\n    fieldDateResAttr.setDateResolution(dateRes);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8a848e758754282137f42bf85793c278e250390"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}