{"path":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/WordSegmenter#convertSegToken(SegToken,String,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/WordSegmenter#convertSegToken(SegToken,String,int).mjava","pathOld":"modules/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/WordSegmenter#convertSegToken(SegToken,String,int).mjava","sourceNew":"  /**\n   * Process a {@link SegToken} so that it is ready for indexing.\n   * \n   * This method calculates offsets and normalizes the token with {@link SegTokenFilter}.\n   * \n   * @param st input {@link SegToken}\n   * @param sentence associated Sentence\n   * @param sentenceStartOffset offset into sentence\n   * @return Lucene {@link SegToken}\n   */\n  public SegToken convertSegToken(SegToken st, String sentence,\n      int sentenceStartOffset) {\n\n    switch (st.wordType) {\n      case WordType.STRING:\n      case WordType.NUMBER:\n      case WordType.FULLWIDTH_NUMBER:\n      case WordType.FULLWIDTH_STRING:\n        st.charArray = sentence.substring(st.startOffset, st.endOffset)\n            .toCharArray();\n        break;\n      default:\n        break;\n    }\n\n    st = tokenFilter.filter(st);\n    st.startOffset += sentenceStartOffset;\n    st.endOffset += sentenceStartOffset;\n    return st;\n  }\n\n","sourceOld":"  /**\n   * Process a {@link SegToken} so that it is ready for indexing.\n   * \n   * This method calculates offsets and normalizes the token with {@link SegTokenFilter}.\n   * \n   * @param st input {@link SegToken}\n   * @param sentence associated Sentence\n   * @param sentenceStartOffset offset into sentence\n   * @return Lucene {@link SegToken}\n   */\n  public SegToken convertSegToken(SegToken st, String sentence,\n      int sentenceStartOffset) {\n\n    switch (st.wordType) {\n      case WordType.STRING:\n      case WordType.NUMBER:\n      case WordType.FULLWIDTH_NUMBER:\n      case WordType.FULLWIDTH_STRING:\n        st.charArray = sentence.substring(st.startOffset, st.endOffset)\n            .toCharArray();\n        break;\n      default:\n        break;\n    }\n\n    st = tokenFilter.filter(st);\n    st.startOffset += sentenceStartOffset;\n    st.endOffset += sentenceStartOffset;\n    return st;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}