{"path":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/mockrandom/MockRandomPostingsFormat#files(Directory,SegmentInfo,String,Set[String]).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/mockrandom/MockRandomPostingsFormat#files(Directory,SegmentInfo,String,Set[String]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mockrandom/MockRandomCodec#files(Directory,SegmentInfo,int,Set[String]).mjava","sourceNew":"  @Override\n  public void files(Directory dir, SegmentInfo segmentInfo, String segmentSuffix, Set<String> files) throws IOException {\n    final String seedFileName = IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, SEED_EXT);    \n    files.add(seedFileName);\n    SepPostingsReader.files(segmentInfo, segmentSuffix, files);\n    Lucene40PostingsReader.files(dir, segmentInfo, segmentSuffix, files);\n    BlockTermsReader.files(dir, segmentInfo, segmentSuffix, files);\n    BlockTreeTermsReader.files(dir, segmentInfo, segmentSuffix, files);\n    FixedGapTermsIndexReader.files(dir, segmentInfo, segmentSuffix, files);\n    VariableGapTermsIndexReader.files(dir, segmentInfo, segmentSuffix, files);\n    // hackish!\n    Iterator<String> it = files.iterator();\n    while(it.hasNext()) {\n      final String file = it.next();\n      if (!dir.fileExists(file)) {\n        it.remove();\n      }\n    }\n    //System.out.println(\"MockRandom.files return \" + files);\n  }\n\n","sourceOld":"  @Override\n  public void files(Directory dir, SegmentInfo segmentInfo, int codecId, Set<String> files) throws IOException {\n    final String seedFileName = IndexFileNames.segmentFileName(segmentInfo.name, codecId, SEED_EXT);    \n    files.add(seedFileName);\n    SepPostingsReader.files(segmentInfo, codecId, files);\n    StandardPostingsReader.files(dir, segmentInfo, codecId, files);\n    BlockTermsReader.files(dir, segmentInfo, codecId, files);\n    BlockTreeTermsReader.files(dir, segmentInfo, codecId, files);\n    FixedGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    VariableGapTermsIndexReader.files(dir, segmentInfo, codecId, files);\n    if (useSepDocValues) {\n      SepDocValuesConsumer.files(dir, segmentInfo, codecId, files);\n    } else {\n      DefaultDocValuesConsumer.files(dir, segmentInfo, codecId, files);\n    }\n    // hackish!\n    Iterator<String> it = files.iterator();\n    while(it.hasNext()) {\n      final String file = it.next();\n      if (!dir.fileExists(file)) {\n        it.remove();\n      }\n    }\n    //System.out.println(\"MockRandom.files return \" + files);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat#files(Directory,SegmentInfo,String,Set[String]).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/mockrandom/MockRandomPostingsFormat#files(Directory,SegmentInfo,String,Set[String]).mjava","sourceNew":"  @Override\n  public void files(Directory dir, SegmentInfo segmentInfo, String segmentSuffix, Set<String> files) throws IOException {\n    final String seedFileName = IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, SEED_EXT);    \n    files.add(seedFileName);\n    SepPostingsReader.files(segmentInfo, segmentSuffix, files);\n    Lucene40PostingsReader.files(dir, segmentInfo, segmentSuffix, files);\n    BlockTermsReader.files(dir, segmentInfo, segmentSuffix, files);\n    BlockTreeTermsReader.files(dir, segmentInfo, segmentSuffix, files);\n    FixedGapTermsIndexReader.files(dir, segmentInfo, segmentSuffix, files);\n    VariableGapTermsIndexReader.files(dir, segmentInfo, segmentSuffix, files);\n    // hackish!\n    Iterator<String> it = files.iterator();\n    while(it.hasNext()) {\n      final String file = it.next();\n      if (!dir.fileExists(file)) {\n        it.remove();\n      }\n    }\n    //System.out.println(\"MockRandom.files return \" + files);\n  }\n\n","sourceOld":"  @Override\n  public void files(Directory dir, SegmentInfo segmentInfo, String segmentSuffix, Set<String> files) throws IOException {\n    final String seedFileName = IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, SEED_EXT);    \n    files.add(seedFileName);\n    SepPostingsReader.files(segmentInfo, segmentSuffix, files);\n    Lucene40PostingsReader.files(dir, segmentInfo, segmentSuffix, files);\n    BlockTermsReader.files(dir, segmentInfo, segmentSuffix, files);\n    BlockTreeTermsReader.files(dir, segmentInfo, segmentSuffix, files);\n    FixedGapTermsIndexReader.files(dir, segmentInfo, segmentSuffix, files);\n    VariableGapTermsIndexReader.files(dir, segmentInfo, segmentSuffix, files);\n    // hackish!\n    Iterator<String> it = files.iterator();\n    while(it.hasNext()) {\n      final String file = it.next();\n      if (!dir.fileExists(file)) {\n        it.remove();\n      }\n    }\n    //System.out.println(\"MockRandom.files return \" + files);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}