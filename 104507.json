{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#downloadFromZK(String,Path).mjava","commits":[{"id":"6c8a2521797f14d1d697a17a0069f5619cd211a6","date":1424361535,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#downloadFromZK(String,Path).mjava","pathOld":"/dev/null","sourceNew":"  private void downloadFromZK(String zkPath, Path dir) throws IOException {\n    try {\n      List<String> files = zkClient.getChildren(zkPath, null, true);\n      Files.createDirectories(dir);\n      for (String file : files) {\n        List<String> children = zkClient.getChildren(zkPath + \"/\" + file, null, true);\n        if (children.size() == 0) {\n          byte[] data = zkClient.getData(zkPath + \"/\" + file, null, null, true);\n          Path filename = dir.resolve(file);\n          logger.info(\"Writing file {}\", filename);\n          Files.write(filename, data);\n        } else {\n          downloadFromZK(zkPath + \"/\" + file, dir.resolve(file));\n        }\n      }\n    }\n    catch (KeeperException | InterruptedException e) {\n      throw new IOException(\"Error downloading files from zookeeper path \" + zkPath + \" to \" + dir.toString(),\n          SolrZkClient.checkInterrupted(e));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9272a617a9cbebf86be127014bbbacd7cf8f8e83","date":1467480344,"type":5,"author":"Erick","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkMaintenanceUtils#downloadFromZK(SolrZkClient,String,Path).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#downloadFromZK(String,Path).mjava","sourceNew":"  public static void downloadFromZK(SolrZkClient zkClient, String zkPath, Path dir) throws IOException {\n    try {\n      List<String> files = zkClient.getChildren(zkPath, null, true);\n      Files.createDirectories(dir);\n      for (String file : files) {\n        List<String> children = zkClient.getChildren(zkPath + \"/\" + file, null, true);\n        if (children.size() == 0) {\n          byte[] data = zkClient.getData(zkPath + \"/\" + file, null, null, true);\n          Path filename = dir.resolve(file);\n          log.info(\"Writing file {}\", filename);\n          Files.write(filename, data);\n        } else {\n          downloadFromZK(zkClient, zkPath + \"/\" + file, dir.resolve(file));\n        }\n      }\n    } catch (KeeperException | InterruptedException e) {\n      throw new IOException(\"Error downloading files from zookeeper path \" + zkPath + \" to \" + dir.toString(),\n          SolrZkClient.checkInterrupted(e));\n    }\n  }\n\n","sourceOld":"  private void downloadFromZK(String zkPath, Path dir) throws IOException {\n    try {\n      List<String> files = zkClient.getChildren(zkPath, null, true);\n      Files.createDirectories(dir);\n      for (String file : files) {\n        List<String> children = zkClient.getChildren(zkPath + \"/\" + file, null, true);\n        if (children.size() == 0) {\n          byte[] data = zkClient.getData(zkPath + \"/\" + file, null, null, true);\n          Path filename = dir.resolve(file);\n          logger.info(\"Writing file {}\", filename);\n          Files.write(filename, data);\n        } else {\n          downloadFromZK(zkPath + \"/\" + file, dir.resolve(file));\n        }\n      }\n    }\n    catch (KeeperException | InterruptedException e) {\n      throw new IOException(\"Error downloading files from zookeeper path \" + zkPath + \" to \" + dir.toString(),\n          SolrZkClient.checkInterrupted(e));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#downloadFromZK(String,Path).mjava","sourceNew":null,"sourceOld":"  private void downloadFromZK(String zkPath, Path dir) throws IOException {\n    try {\n      List<String> files = zkClient.getChildren(zkPath, null, true);\n      Files.createDirectories(dir);\n      for (String file : files) {\n        List<String> children = zkClient.getChildren(zkPath + \"/\" + file, null, true);\n        if (children.size() == 0) {\n          byte[] data = zkClient.getData(zkPath + \"/\" + file, null, null, true);\n          Path filename = dir.resolve(file);\n          logger.info(\"Writing file {}\", filename);\n          Files.write(filename, data);\n        } else {\n          downloadFromZK(zkPath + \"/\" + file, dir.resolve(file));\n        }\n      }\n    }\n    catch (KeeperException | InterruptedException e) {\n      throw new IOException(\"Error downloading files from zookeeper path \" + zkPath + \" to \" + dir.toString(),\n          SolrZkClient.checkInterrupted(e));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["6c8a2521797f14d1d697a17a0069f5619cd211a6"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["6c8a2521797f14d1d697a17a0069f5619cd211a6","9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"]},"commit2Childs":{"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["9272a617a9cbebf86be127014bbbacd7cf8f8e83","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6c8a2521797f14d1d697a17a0069f5619cd211a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}