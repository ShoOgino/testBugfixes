{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) throws IOException {\n      assert state == State.POSITIONED: \"docsAndPositions(...) called on unpositioned TermsEnum\";\n\n      // TODO: should we give this thing a random to be super-evil,\n      // and randomly *not* unwrap?\n      if (reuse instanceof AssertingDocsAndPositionsEnum) {\n        reuse = ((AssertingDocsAndPositionsEnum) reuse).in;\n      }\n      DocsAndPositionsEnum docs = super.docsAndPositions(liveDocs, reuse, flags);\n      return docs == null ? null : new AssertingDocsAndPositionsEnum(docs);\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) throws IOException {\n      assert state == State.POSITIONED: \"docsAndPositions(...) called on unpositioned TermsEnum\";\n\n      // TODO: should we give this thing a random to be super-evil,\n      // and randomly *not* unwrap?\n      if (reuse instanceof AssertingDocsAndPositionsEnum) {\n        reuse = ((AssertingDocsAndPositionsEnum) reuse).in;\n      }\n      DocsAndPositionsEnum docs = super.docsAndPositions(liveDocs, reuse, flags);\n      return docs == null ? null : new AssertingDocsAndPositionsEnum(docs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86762b84c3fc613e3c2250dc9452529a68181a3f","date":1419412618,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED: \"docsAndPositions(...) called on unpositioned TermsEnum\";\n\n      // TODO: should we give this thing a random to be super-evil,\n      // and randomly *not* unwrap?\n      if (reuse instanceof AssertingDocsAndPositionsEnum) {\n        reuse = ((AssertingDocsAndPositionsEnum) reuse).in;\n      }\n      DocsAndPositionsEnum docs = super.docsAndPositions(liveDocs, reuse, flags);\n      return docs == null ? null : new AssertingDocsAndPositionsEnum(docs);\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) throws IOException {\n      assert state == State.POSITIONED: \"docsAndPositions(...) called on unpositioned TermsEnum\";\n\n      // TODO: should we give this thing a random to be super-evil,\n      // and randomly *not* unwrap?\n      if (reuse instanceof AssertingDocsAndPositionsEnum) {\n        reuse = ((AssertingDocsAndPositionsEnum) reuse).in;\n      }\n      DocsAndPositionsEnum docs = super.docsAndPositions(liveDocs, reuse, flags);\n      return docs == null ? null : new AssertingDocsAndPositionsEnum(docs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED: \"docsAndPositions(...) called on unpositioned TermsEnum\";\n\n      // TODO: should we give this thing a random to be super-evil,\n      // and randomly *not* unwrap?\n      if (reuse instanceof AssertingDocsAndPositionsEnum) {\n        reuse = ((AssertingDocsAndPositionsEnum) reuse).in;\n      }\n      DocsAndPositionsEnum docs = super.docsAndPositions(liveDocs, reuse, flags);\n      return docs == null ? null : new AssertingDocsAndPositionsEnum(docs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"86762b84c3fc613e3c2250dc9452529a68181a3f":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"51f5280f31484820499077f41fcdfe92d527d9dc":["86762b84c3fc613e3c2250dc9452529a68181a3f"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51f5280f31484820499077f41fcdfe92d527d9dc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"86762b84c3fc613e3c2250dc9452529a68181a3f":["51f5280f31484820499077f41fcdfe92d527d9dc"],"51f5280f31484820499077f41fcdfe92d527d9dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["86762b84c3fc613e3c2250dc9452529a68181a3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}