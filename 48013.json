{"path":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#drillDown(DoubleRange).mjava","commits":[{"id":"56d44586f4c409c6c6c5942b9f0227df806b7300","date":1386027853,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#drillDown(DoubleRange).mjava","pathOld":"/dev/null","sourceNew":"  /** User drills down on the specified range. */\n  public TopDocs drillDown(DoubleRange range) throws IOException {\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(null);\n\n    q.add(\"field\", new ConstantScoreQuery(range.getFilter(getDistanceValueSource())));\n\n    return searcher.search(q, 10);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#drillDown(DoubleRange).mjava","pathOld":"/dev/null","sourceNew":"  /** User drills down on the specified range. */\n  public TopDocs drillDown(DoubleRange range) throws IOException {\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(null);\n\n    q.add(\"field\", new ConstantScoreQuery(range.getFilter(getDistanceValueSource())));\n\n    return searcher.search(q, 10);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40640359164f629dd440a47df2e145d084ce9645","date":1391711808,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#drillDown(DoubleRange).mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#drillDown(DoubleRange).mjava","sourceNew":"  /** User drills down on the specified range. */\n  public TopDocs drillDown(DoubleRange range) throws IOException {\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(null);\n    final ValueSource vs = getDistanceValueSource();\n    q.add(\"field\", range.getFilter(getBoundingBoxFilter(ORIGIN_LATITUDE, ORIGIN_LONGITUDE, range.max), vs));\n    DrillSideways ds = new DrillSideways(searcher, config, (TaxonomyReader) null) {\n        @Override\n        protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {        \n          assert drillSideways.length == 1;\n          return new DoubleRangeFacetCounts(\"field\", vs, drillSideways[0], ONE_KM, TWO_KM, FIVE_KM, TEN_KM);\n        }\n      };\n    return ds.search(q, 10).hits;\n  }\n\n","sourceOld":"  /** User drills down on the specified range. */\n  public TopDocs drillDown(DoubleRange range) throws IOException {\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(null);\n\n    q.add(\"field\", new ConstantScoreQuery(range.getFilter(getDistanceValueSource())));\n\n    return searcher.search(q, 10);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd6be878365e339c75cc43ad7d5df95ab4ea21e5","date":1435762101,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#drillDown(DoubleRange).mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#drillDown(DoubleRange).mjava","sourceNew":"  /** User drills down on the specified range. */\n  public TopDocs drillDown(DoubleRange range) throws IOException {\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(null);\n    final ValueSource vs = getDistanceValueSource();\n    q.add(\"field\", range.getQuery(getBoundingBoxQuery(ORIGIN_LATITUDE, ORIGIN_LONGITUDE, range.max), vs));\n    DrillSideways ds = new DrillSideways(searcher, config, (TaxonomyReader) null) {\n        @Override\n        protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {        \n          assert drillSideways.length == 1;\n          return new DoubleRangeFacetCounts(\"field\", vs, drillSideways[0], ONE_KM, TWO_KM, FIVE_KM, TEN_KM);\n        }\n      };\n    return ds.search(q, 10).hits;\n  }\n\n","sourceOld":"  /** User drills down on the specified range. */\n  public TopDocs drillDown(DoubleRange range) throws IOException {\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(null);\n    final ValueSource vs = getDistanceValueSource();\n    q.add(\"field\", range.getFilter(getBoundingBoxFilter(ORIGIN_LATITUDE, ORIGIN_LONGITUDE, range.max), vs));\n    DrillSideways ds = new DrillSideways(searcher, config, (TaxonomyReader) null) {\n        @Override\n        protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {        \n          assert drillSideways.length == 1;\n          return new DoubleRangeFacetCounts(\"field\", vs, drillSideways[0], ONE_KM, TWO_KM, FIVE_KM, TEN_KM);\n        }\n      };\n    return ds.search(q, 10).hits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cf250cb8fdff62f4b753866d44e5bf59bfd1616","date":1483789944,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#drillDown(DoubleRange).mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#drillDown(DoubleRange).mjava","sourceNew":"  /** User drills down on the specified range. */\n  public TopDocs drillDown(DoubleRange range) throws IOException {\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(null);\n    final DoubleValuesSource vs = getDistanceValueSource();\n    q.add(\"field\", range.getQuery(getBoundingBoxQuery(ORIGIN_LATITUDE, ORIGIN_LONGITUDE, range.max), vs));\n    DrillSideways ds = new DrillSideways(searcher, config, (TaxonomyReader) null) {\n        @Override\n        protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {        \n          assert drillSideways.length == 1;\n          return new DoubleRangeFacetCounts(\"field\", vs, drillSideways[0], ONE_KM, TWO_KM, FIVE_KM, TEN_KM);\n        }\n      };\n    return ds.search(q, 10).hits;\n  }\n\n","sourceOld":"  /** User drills down on the specified range. */\n  public TopDocs drillDown(DoubleRange range) throws IOException {\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(null);\n    final ValueSource vs = getDistanceValueSource();\n    q.add(\"field\", range.getQuery(getBoundingBoxQuery(ORIGIN_LATITUDE, ORIGIN_LONGITUDE, range.max), vs));\n    DrillSideways ds = new DrillSideways(searcher, config, (TaxonomyReader) null) {\n        @Override\n        protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {        \n          assert drillSideways.length == 1;\n          return new DoubleRangeFacetCounts(\"field\", vs, drillSideways[0], ONE_KM, TWO_KM, FIVE_KM, TEN_KM);\n        }\n      };\n    return ds.search(q, 10).hits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#drillDown(DoubleRange).mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/DistanceFacetsExample#drillDown(DoubleRange).mjava","sourceNew":"  /** User drills down on the specified range. */\n  public TopDocs drillDown(DoubleRange range) throws IOException {\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(null);\n    final DoubleValuesSource vs = getDistanceValueSource();\n    q.add(\"field\", range.getQuery(getBoundingBoxQuery(ORIGIN_LATITUDE, ORIGIN_LONGITUDE, range.max), vs));\n    DrillSideways ds = new DrillSideways(searcher, config, (TaxonomyReader) null) {\n        @Override\n        protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {        \n          assert drillSideways.length == 1;\n          return new DoubleRangeFacetCounts(\"field\", vs, drillSideways[0], ONE_KM, TWO_KM, FIVE_KM, TEN_KM);\n        }\n      };\n    return ds.search(q, 10).hits;\n  }\n\n","sourceOld":"  /** User drills down on the specified range. */\n  public TopDocs drillDown(DoubleRange range) throws IOException {\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(null);\n    final ValueSource vs = getDistanceValueSource();\n    q.add(\"field\", range.getQuery(getBoundingBoxQuery(ORIGIN_LATITUDE, ORIGIN_LONGITUDE, range.max), vs));\n    DrillSideways ds = new DrillSideways(searcher, config, (TaxonomyReader) null) {\n        @Override\n        protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {        \n          assert drillSideways.length == 1;\n          return new DoubleRangeFacetCounts(\"field\", vs, drillSideways[0], ONE_KM, TWO_KM, FIVE_KM, TEN_KM);\n        }\n      };\n    return ds.search(q, 10).hits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56d44586f4c409c6c6c5942b9f0227df806b7300"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["dd6be878365e339c75cc43ad7d5df95ab4ea21e5","9cf250cb8fdff62f4b753866d44e5bf59bfd1616"],"9cf250cb8fdff62f4b753866d44e5bf59bfd1616":["dd6be878365e339c75cc43ad7d5df95ab4ea21e5"],"40640359164f629dd440a47df2e145d084ce9645":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"dd6be878365e339c75cc43ad7d5df95ab4ea21e5":["40640359164f629dd440a47df2e145d084ce9645"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9cf250cb8fdff62f4b753866d44e5bf59bfd1616"]},"commit2Childs":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["56d44586f4c409c6c6c5942b9f0227df806b7300","3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["40640359164f629dd440a47df2e145d084ce9645"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"9cf250cb8fdff62f4b753866d44e5bf59bfd1616":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"40640359164f629dd440a47df2e145d084ce9645":["dd6be878365e339c75cc43ad7d5df95ab4ea21e5"],"dd6be878365e339c75cc43ad7d5df95ab4ea21e5":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","9cf250cb8fdff62f4b753866d44e5bf59bfd1616"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}