{"path":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.ElevationComparatorSource#ElevationComparatorSource(IntIntHashMap,boolean).mjava","commits":[{"id":"2ad458affd82a1d762eb506003907d9363a333cb","date":1528558344,"type":0,"author":"broustant","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.ElevationComparatorSource#ElevationComparatorSource(IntIntHashMap,boolean).mjava","pathOld":"/dev/null","sourceNew":"    private ElevationComparatorSource(IntIntHashMap elevatedWithPriority, boolean useConfiguredElevatedOrder) {\n      this.elevatedWithPriority = elevatedWithPriority;\n      this.useConfiguredElevatedOrder = useConfiguredElevatedOrder;\n\n      // copy elevatedWithPriority keys (doc IDs) into sortedElevatedDocIds, sorted\n      sortedElevatedDocIds = new int[elevatedWithPriority.size()];\n      final Iterator<IntIntCursor> iterator = elevatedWithPriority.iterator();\n      for (int i = 0; i < sortedElevatedDocIds.length; i++) {\n        IntIntCursor next = iterator.next();\n        sortedElevatedDocIds[i] = next.key;\n      }\n      assert iterator.hasNext() == false;\n      Arrays.sort(sortedElevatedDocIds);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.ElevationComparatorSource#ElevationComparatorSource(IntIntHashMap,boolean).mjava","pathOld":"/dev/null","sourceNew":"    private ElevationComparatorSource(IntIntHashMap elevatedWithPriority, boolean useConfiguredElevatedOrder) {\n      this.elevatedWithPriority = elevatedWithPriority;\n      this.useConfiguredElevatedOrder = useConfiguredElevatedOrder;\n\n      // copy elevatedWithPriority keys (doc IDs) into sortedElevatedDocIds, sorted\n      sortedElevatedDocIds = new int[elevatedWithPriority.size()];\n      final Iterator<IntIntCursor> iterator = elevatedWithPriority.iterator();\n      for (int i = 0; i < sortedElevatedDocIds.length; i++) {\n        IntIntCursor next = iterator.next();\n        sortedElevatedDocIds[i] = next.key;\n      }\n      assert iterator.hasNext() == false;\n      Arrays.sort(sortedElevatedDocIds);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.ElevationComparatorSource#ElevationComparatorSource(IntIntHashMap,boolean).mjava","pathOld":"/dev/null","sourceNew":"    private ElevationComparatorSource(IntIntHashMap elevatedWithPriority, boolean useConfiguredElevatedOrder) {\n      this.elevatedWithPriority = elevatedWithPriority;\n      this.useConfiguredElevatedOrder = useConfiguredElevatedOrder;\n\n      // copy elevatedWithPriority keys (doc IDs) into sortedElevatedDocIds, sorted\n      sortedElevatedDocIds = new int[elevatedWithPriority.size()];\n      final Iterator<IntIntCursor> iterator = elevatedWithPriority.iterator();\n      for (int i = 0; i < sortedElevatedDocIds.length; i++) {\n        IntIntCursor next = iterator.next();\n        sortedElevatedDocIds[i] = next.key;\n      }\n      assert iterator.hasNext() == false;\n      Arrays.sort(sortedElevatedDocIds);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2ad458affd82a1d762eb506003907d9363a333cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ad458affd82a1d762eb506003907d9363a333cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ad458affd82a1d762eb506003907d9363a333cb"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2ad458affd82a1d762eb506003907d9363a333cb"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","2ad458affd82a1d762eb506003907d9363a333cb","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"2ad458affd82a1d762eb506003907d9363a333cb":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}