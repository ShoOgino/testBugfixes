{"path":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#getMaxDocId(BKDConfig,BKDRadixSelector.PathSlice,int,byte[],byte[]).mjava","commits":[{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":1,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#getMaxDocId(BKDConfig,BKDRadixSelector.PathSlice,int,byte[],byte[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#getMaxDocId(BKDRadixSelector.PathSlice,int,int,byte[],int,int,byte[]).mjava","sourceNew":"  private int getMaxDocId(BKDConfig config, BKDRadixSelector.PathSlice p, int dimension, byte[] partitionPoint, byte[] dataDim) throws  IOException {\n    int docID = Integer.MIN_VALUE;\n    try (PointReader reader = p.writer.getReader(p.start, p.count)) {\n      while (reader.next()) {\n        PointValue pointValue = reader.pointValue();\n        BytesRef packedValue = pointValue.packedValue();\n        int offset = dimension * config.bytesPerDim;\n        int dataOffset = config.packedIndexBytesLength;\n        int dataLength = (config.numDims - config.numIndexDims) * config.bytesPerDim;\n        if (Arrays.compareUnsigned(packedValue.bytes, packedValue.offset + offset, packedValue.offset + offset + config.bytesPerDim, partitionPoint, 0, config.bytesPerDim) == 0\n            && Arrays.compareUnsigned(packedValue.bytes, packedValue.offset + dataOffset, packedValue.offset + dataOffset + dataLength, dataDim, 0, dataLength) == 0) {\n          int newDocID = pointValue.docID();\n          if (newDocID > docID) {\n            docID = newDocID;\n          }\n        }\n      }\n    }\n    return docID;\n  }\n\n","sourceOld":"  private int getMaxDocId(BKDRadixSelector.PathSlice p, int bytesPerDimension, int dimension, byte[] partitionPoint, int dataDims, int indexDims, byte[] dataDim) throws  IOException {\n    int docID = Integer.MIN_VALUE;\n    try (PointReader reader = p.writer.getReader(p.start, p.count)) {\n      while (reader.next()) {\n        PointValue pointValue = reader.pointValue();\n        BytesRef packedValue = pointValue.packedValue();\n        int offset = dimension * bytesPerDimension;\n        int dataOffset = indexDims * bytesPerDimension;\n        int dataLength = (dataDims - indexDims) * bytesPerDimension;\n        if (Arrays.compareUnsigned(packedValue.bytes, packedValue.offset + offset, packedValue.offset + offset + bytesPerDimension, partitionPoint, 0, bytesPerDimension) == 0\n            && Arrays.compareUnsigned(packedValue.bytes, packedValue.offset + dataOffset, packedValue.offset + dataOffset + dataLength, dataDim, 0, dataLength) == 0) {\n          int newDocID = pointValue.docID();\n          if (newDocID > docID) {\n            docID = newDocID;\n          }\n        }\n      }\n    }\n    return docID;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}