{"path":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/StripNonCharSolrContentHandlerFactory.StripNonCharSolrContentHandler#stripNonCharCodepoints(String).mjava","commits":[{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/StripNonCharSolrContentHandlerFactory.StripNonCharSolrContentHandler#stripNonCharCodepoints(String).mjava","pathOld":"solr/contrib/solr-morphlines-cell/src/java/org/apache/solr/morphlines/cell/StripNonCharSolrContentHandlerFactory.StripNonCharSolrContentHandler#stripNonCharCodepoints(String).mjava","sourceNew":"    /**\n     * Strip all non-characters, which can cause SolrReducer problems if present.\n     * This is borrowed from Apache Nutch.\n     */\n    private static String stripNonCharCodepoints(String input) {\n      StringBuilder stripped = new StringBuilder(input.length());\n      char ch;\n      for (int i = 0; i < input.length(); i++) {\n        ch = input.charAt(i);\n        // Strip all non-characters http://unicode.org/cldr/utility/list-unicodeset.jsp?a=[:Noncharacter_Code_Point=True:]\n        // and non-printable control characters except tabulator, new line and carriage return\n        if (ch % 0x10000 != 0xffff && // 0xffff - 0x10ffff range step 0x10000\n          ch % 0x10000 != 0xfffe && // 0xfffe - 0x10fffe range\n          (ch <= 0xfdd0 || ch >= 0xfdef) && // 0xfdd0 - 0xfdef\n          (ch > 0x1F || ch == 0x9 || ch == 0xa || ch == 0xd)) {\n          stripped.append(ch);\n        }\n      }\n      return stripped.toString();\n    }\n\n","sourceOld":"    /**\n     * Strip all non-characters, which can cause SolrReducer problems if present.\n     * This is borrowed from Apache Nutch.\n     */\n    private static String stripNonCharCodepoints(String input) {\n      StringBuilder stripped = new StringBuilder(input.length());\n      char ch;\n      for (int i = 0; i < input.length(); i++) {\n        ch = input.charAt(i);\n        // Strip all non-characters http://unicode.org/cldr/utility/list-unicodeset.jsp?a=[:Noncharacter_Code_Point=True:]\n        // and non-printable control characters except tabulator, new line and carriage return\n        if (ch % 0x10000 != 0xffff && // 0xffff - 0x10ffff range step 0x10000\n          ch % 0x10000 != 0xfffe && // 0xfffe - 0x10fffe range\n          (ch <= 0xfdd0 || ch >= 0xfdef) && // 0xfdd0 - 0xfdef\n          (ch > 0x1F || ch == 0x9 || ch == 0xa || ch == 0xd)) {\n          stripped.append(ch);\n        }\n      }\n      return stripped.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/StripNonCharSolrContentHandlerFactory.StripNonCharSolrContentHandler#stripNonCharCodepoints(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Strip all non-characters, which can cause SolrReducer problems if present.\n     * This is borrowed from Apache Nutch.\n     */\n    private static String stripNonCharCodepoints(String input) {\n      StringBuilder stripped = new StringBuilder(input.length());\n      char ch;\n      for (int i = 0; i < input.length(); i++) {\n        ch = input.charAt(i);\n        // Strip all non-characters http://unicode.org/cldr/utility/list-unicodeset.jsp?a=[:Noncharacter_Code_Point=True:]\n        // and non-printable control characters except tabulator, new line and carriage return\n        if (ch % 0x10000 != 0xffff && // 0xffff - 0x10ffff range step 0x10000\n          ch % 0x10000 != 0xfffe && // 0xfffe - 0x10fffe range\n          (ch <= 0xfdd0 || ch >= 0xfdef) && // 0xfdd0 - 0xfdef\n          (ch > 0x1F || ch == 0x9 || ch == 0xa || ch == 0xd)) {\n          stripped.append(ch);\n        }\n      }\n      return stripped.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12109b652e9210b8d58fca47f6c4a725d058a58e","date":1490373076,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/StripNonCharSolrContentHandlerFactory.StripNonCharSolrContentHandler#stripNonCharCodepoints(String).mjava","sourceNew":null,"sourceOld":"    /**\n     * Strip all non-characters, which can cause SolrReducer problems if present.\n     * This is borrowed from Apache Nutch.\n     */\n    private static String stripNonCharCodepoints(String input) {\n      StringBuilder stripped = new StringBuilder(input.length());\n      char ch;\n      for (int i = 0; i < input.length(); i++) {\n        ch = input.charAt(i);\n        // Strip all non-characters http://unicode.org/cldr/utility/list-unicodeset.jsp?a=[:Noncharacter_Code_Point=True:]\n        // and non-printable control characters except tabulator, new line and carriage return\n        if (ch % 0x10000 != 0xffff && // 0xffff - 0x10ffff range step 0x10000\n          ch % 0x10000 != 0xfffe && // 0xfffe - 0x10fffe range\n          (ch <= 0xfdd0 || ch >= 0xfdef) && // 0xfdd0 - 0xfdef\n          (ch > 0x1F || ch == 0x9 || ch == 0xa || ch == 0xd)) {\n          stripped.append(ch);\n        }\n      }\n      return stripped.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe1c4aa9af769a38e878f608070f672efbeac27f","date":1490594650,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/StripNonCharSolrContentHandlerFactory.StripNonCharSolrContentHandler#stripNonCharCodepoints(String).mjava","sourceNew":null,"sourceOld":"    /**\n     * Strip all non-characters, which can cause SolrReducer problems if present.\n     * This is borrowed from Apache Nutch.\n     */\n    private static String stripNonCharCodepoints(String input) {\n      StringBuilder stripped = new StringBuilder(input.length());\n      char ch;\n      for (int i = 0; i < input.length(); i++) {\n        ch = input.charAt(i);\n        // Strip all non-characters http://unicode.org/cldr/utility/list-unicodeset.jsp?a=[:Noncharacter_Code_Point=True:]\n        // and non-printable control characters except tabulator, new line and carriage return\n        if (ch % 0x10000 != 0xffff && // 0xffff - 0x10ffff range step 0x10000\n          ch % 0x10000 != 0xfffe && // 0xfffe - 0x10fffe range\n          (ch <= 0xfdd0 || ch >= 0xfdef) && // 0xfdd0 - 0xfdef\n          (ch > 0x1F || ch == 0x9 || ch == 0xa || ch == 0xd)) {\n          stripped.append(ch);\n        }\n      }\n      return stripped.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"fe1c4aa9af769a38e878f608070f672efbeac27f":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12109b652e9210b8d58fca47f6c4a725d058a58e"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["12109b652e9210b8d58fca47f6c4a725d058a58e","74f45af4339b0daf7a95c820ab88c1aea74fbce0","fe1c4aa9af769a38e878f608070f672efbeac27f"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70f91c8322fbffe3a3a897ef20ea19119cac10cd","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"fe1c4aa9af769a38e878f608070f672efbeac27f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","fe1c4aa9af769a38e878f608070f672efbeac27f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}