{"path":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","commits":[{"id":"0beaed456aa3358e5e4a99ea2aea994ef6c81de3","date":1365434191,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Elects a new overseer\n   * \n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    \n    // TODO: close Overseer\n    Overseer overseer = new Overseer(\n        new HttpShardHandlerFactory().getShardHandler(), \"/admin/cores\", reader);\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8735477f53284dd67c6335828378cadf20cddabc","date":1365956061,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","sourceNew":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(\n        new HttpShardHandlerFactory().getShardHandler(), \"/admin/cores\", reader);\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","sourceOld":"  /**\n   * Elects a new overseer\n   * \n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    \n    // TODO: close Overseer\n    Overseer overseer = new Overseer(\n        new HttpShardHandlerFactory().getShardHandler(), \"/admin/cores\", reader);\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b15576cafd8b5d06857055c28f26912321937e3","date":1396452121,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","sourceNew":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(\n        new HttpShardHandlerFactory().getShardHandler(), \"/admin/cores\", reader,null);\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","sourceOld":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(\n        new HttpShardHandlerFactory().getShardHandler(), \"/admin/cores\", reader);\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","sourceNew":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(\n        new HttpShardHandlerFactory().getShardHandler(), \"/admin/cores\", reader,null);\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","sourceOld":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(\n        new HttpShardHandlerFactory().getShardHandler(), \"/admin/cores\", reader);\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","sourceNew":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(null);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(\n        new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\", reader, null, new MockConfigSolr());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","sourceOld":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(\n        new HttpShardHandlerFactory().getShardHandler(), \"/admin/cores\", reader,null);\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","sourceNew":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\",\n        reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","sourceOld":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(null);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(\n        new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\", reader, null, new MockConfigSolr());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","sourceNew":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\",\n        reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","sourceOld":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(null);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(\n        new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\", reader, null, new MockConfigSolr());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7ac6407286ebd80d6754a6586316e11c06f37b3","date":1469634359,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","sourceNew":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\",\n        reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    reader.close();\n    return zkClient;\n  }\n\n","sourceOld":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\",\n        reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","sourceNew":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\",\n        reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    reader.close();\n    return zkClient;\n  }\n\n","sourceOld":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\",\n        reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","sourceNew":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\",\n        reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    reader.close();\n    return zkClient;\n  }\n\n","sourceOld":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\",\n        reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    return zkClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","sourceNew":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer((HttpShardHandler) new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\",\n        reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    reader.close();\n    return zkClient;\n  }\n\n","sourceOld":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer(new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\",\n        reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    reader.close();\n    return zkClient;\n  }\n\n","bugFix":["e15199583d3635cb940942caed05132dd6c4c7c6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6e01fcbda8c04bde654f99836a2f8813f9444f3","date":1589564391,"type":3,"author":"erick","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest#electNewOverseer(String).mjava","sourceNew":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    try (HttpShardHandlerFactory hshf = new HttpShardHandlerFactory()) {\n      Overseer overseer = new Overseer((HttpShardHandler) hshf.getShardHandler(), updateShardHandler, \"/admin/cores\",\n          reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n      overseer.close();\n      ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n          address.replaceAll(\"/\", \"_\"));\n      overseerElector.setup(ec);\n      overseerElector.joinElection(ec, false);\n    }\n    reader.close();\n    return zkClient;\n  }\n\n","sourceOld":"  /**\n   * Elects a new overseer\n   *\n   * @return SolrZkClient\n   */\n  private SolrZkClient electNewOverseer(String address) throws KeeperException,\n      InterruptedException, IOException {\n    SolrZkClient zkClient = new SolrZkClient(address, TIMEOUT);\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    LeaderElector overseerElector = new LeaderElector(zkClient);\n    UpdateShardHandler updateShardHandler = new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);\n    // TODO: close Overseer\n    Overseer overseer = new Overseer((HttpShardHandler) new HttpShardHandlerFactory().getShardHandler(), updateShardHandler, \"/admin/cores\",\n        reader, null, new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build());\n    overseer.close();\n    ElectionContext ec = new OverseerElectionContext(zkClient, overseer,\n        address.replaceAll(\"/\", \"_\"));\n    overseerElector.setup(ec);\n    overseerElector.joinElection(ec, false);\n    reader.close();\n    return zkClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["8735477f53284dd67c6335828378cadf20cddabc","5b15576cafd8b5d06857055c28f26912321937e3"],"e6e01fcbda8c04bde654f99836a2f8813f9444f3":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a7ac6407286ebd80d6754a6586316e11c06f37b3"],"8735477f53284dd67c6335828378cadf20cddabc":["0beaed456aa3358e5e4a99ea2aea994ef6c81de3"],"0beaed456aa3358e5e4a99ea2aea994ef6c81de3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["e15199583d3635cb940942caed05132dd6c4c7c6","a7ac6407286ebd80d6754a6586316e11c06f37b3"],"e15199583d3635cb940942caed05132dd6c4c7c6":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452","e15199583d3635cb940942caed05132dd6c4c7c6"],"5b15576cafd8b5d06857055c28f26912321937e3":["8735477f53284dd67c6335828378cadf20cddabc"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["5b15576cafd8b5d06857055c28f26912321937e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7ac6407286ebd80d6754a6586316e11c06f37b3":["e15199583d3635cb940942caed05132dd6c4c7c6"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["e15199583d3635cb940942caed05132dd6c4c7c6","a7ac6407286ebd80d6754a6586316e11c06f37b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e6e01fcbda8c04bde654f99836a2f8813f9444f3"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"e6e01fcbda8c04bde654f99836a2f8813f9444f3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e6e01fcbda8c04bde654f99836a2f8813f9444f3"],"8735477f53284dd67c6335828378cadf20cddabc":["5eb2511ababf862ea11e10761c70ee560cd84510","5b15576cafd8b5d06857055c28f26912321937e3"],"0beaed456aa3358e5e4a99ea2aea994ef6c81de3":["8735477f53284dd67c6335828378cadf20cddabc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"e15199583d3635cb940942caed05132dd6c4c7c6":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a7ac6407286ebd80d6754a6586316e11c06f37b3","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"5b15576cafd8b5d06857055c28f26912321937e3":["5eb2511ababf862ea11e10761c70ee560cd84510","0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["e15199583d3635cb940942caed05132dd6c4c7c6","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0beaed456aa3358e5e4a99ea2aea994ef6c81de3"],"a7ac6407286ebd80d6754a6586316e11c06f37b3":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}