{"path":"src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","commits":[{"id":"cc29674855884c7ea8ac29eeb09a0276a16f334f","date":1247637346,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","pathOld":"/dev/null","sourceNew":"  public void testDynamicFieldBinding(){\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n    Assert.assertArrayEquals(new String[]{\"Mobile Store\",\"iPod Store\",\"CCTV Store\"}, l.get(3).getAllSuppliers());\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    Assert.assertEquals(2, l.get(3).supplier.size());\n    Assert.assertEquals(\"[Mobile Store, iPod Store]\", l.get(3).supplier.get(\"supplier_1\").toString());\n    Assert.assertEquals(\"[CCTV Store]\", l.get(3).supplier.get(\"supplier_2\").toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","pathOld":"src/test/org/apache/solr/client/solrj/beans/TestDocumentObjectBinder#testDynamicFieldBinding().mjava","sourceNew":"  public void testDynamicFieldBinding(){\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n    Assert.assertArrayEquals(new String[]{\"Mobile Store\",\"iPod Store\",\"CCTV Store\"}, l.get(3).getAllSuppliers());\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    Assert.assertEquals(2, l.get(3).supplier.size());\n    Assert.assertEquals(\"[Mobile Store, iPod Store]\", l.get(3).supplier.get(\"supplier_1\").toString());\n    Assert.assertEquals(\"[CCTV Store]\", l.get(3).supplier.get(\"supplier_2\").toString());\n  }\n\n","sourceOld":"  public void testDynamicFieldBinding(){\n    DocumentObjectBinder binder = new DocumentObjectBinder();\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> nl = parser.processResponse(new StringReader(xml));\n    QueryResponse res = new QueryResponse(nl, null);\n    List<Item> l = binder.getBeans(Item.class,res.getResults());\n    Assert.assertArrayEquals(new String[]{\"Mobile Store\",\"iPod Store\",\"CCTV Store\"}, l.get(3).getAllSuppliers());\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_1\"));\n    Assert.assertTrue(l.get(3).supplier.containsKey(\"supplier_2\"));\n    Assert.assertEquals(2, l.get(3).supplier.size());\n    Assert.assertEquals(\"[Mobile Store, iPod Store]\", l.get(3).supplier.get(\"supplier_1\").toString());\n    Assert.assertEquals(\"[CCTV Store]\", l.get(3).supplier.get(\"supplier_2\").toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["cc29674855884c7ea8ac29eeb09a0276a16f334f"],"cc29674855884c7ea8ac29eeb09a0276a16f334f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["cc29674855884c7ea8ac29eeb09a0276a16f334f"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cc29674855884c7ea8ac29eeb09a0276a16f334f":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}