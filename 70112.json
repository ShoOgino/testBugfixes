{"path":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() throws Exception {\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() throws Exception {\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() throws Exception {\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n    \n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() throws Exception {\n    \n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n    \n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() throws Exception {\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1381b91b03f7409d8d548c7070dbc615931a0f50","date":1343667369,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08c3ca2f3e1c4d3b7f6877c3a58e0e69a6c8b869","date":1360081629,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        SolrCmdDistributor.Request sreq = (SolrCmdDistributor.Request)data[1];\n        if (sreq.exception == null) return;\n        if (sreq.exception.getMessage().contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + sreq.exception.getMessage());\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n\n  }\n\n","bugFix":null,"bugIntro":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3e4d4ec39bf5396230748ca859ff05ab024b6fc5","date":1360112310,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        SolrCmdDistributor.Request sreq = (SolrCmdDistributor.Request)data[1];\n        if (sreq.exception == null) return;\n        if (sreq.exception.getMessage().contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + sreq.exception.getMessage());\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91e069c492cf4895697ef7b81df0ffb9a8bd4b48","date":1382134253,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        Exception e = (Exception) data[0];\n        if (e == null) return;\n        if (e.getMessage().contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + e.getMessage());\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        SolrCmdDistributor.Request sreq = (SolrCmdDistributor.Request)data[1];\n        if (sreq.exception == null) return;\n        if (sreq.exception.getMessage().contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + sreq.exception.getMessage());\n        }\n      }\n    };\n  }\n\n","bugFix":["08c3ca2f3e1c4d3b7f6877c3a58e0e69a6c8b869"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699","date":1385913128,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        Exception e = (Exception) data[0];\n        if (e == null) return;\n        if (e.getMessage().contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + e.getMessage());\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        Exception e = (Exception) data[0];\n        if (e == null) return;\n        if (e.getMessage().contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + e.getMessage());\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        Exception e = (Exception) data[0];\n        if (e == null) return;\n        if (e.getMessage().contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + e.getMessage());\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        Exception e = (Exception) data[0];\n        if (e == null) return;\n        if (e.getMessage().contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + e.getMessage());\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"536b47681314488eb94706248be6047a3f142841","date":1450372090,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    System.setProperty(\"solr.autoCommit.maxTime\", \"15000\");\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        Exception e = (Exception) data[0];\n        if (e == null) return;\n        if (e.getMessage().contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + e.getMessage());\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        Exception e = (Exception) data[0];\n        if (e == null) return;\n        if (e.getMessage().contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + e.getMessage());\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d267a6ca21263780a721c8a3b265dfad1552d3aa","date":1451411432,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    System.setProperty(\"solr.autoCommit.maxTime\", \"15000\");\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        Exception e = (Exception) data[0];\n        if (e == null) return;\n        String msg = e.getMessage();\n        if (msg != null && msg.contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + e.getMessage());\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    System.setProperty(\"solr.autoCommit.maxTime\", \"15000\");\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        Exception e = (Exception) data[0];\n        if (e == null) return;\n        if (e.getMessage().contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + e.getMessage());\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77eebd238dd9a40fb10152d690b4b7fd51a7415","date":1452527678,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    System.setProperty(\"solr.autoCommit.maxTime\", \"15000\");\n    setErrorHook();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    System.setProperty(\"solr.autoCommit.maxTime\", \"15000\");\n    SolrCmdDistributor.testing_errorHook = new Diagnostics.Callable() {\n      @Override\n      public void call(Object... data) {\n        Exception e = (Exception) data[0];\n        if (e == null) return;\n        String msg = e.getMessage();\n        if (msg != null && msg.contains(\"Timeout\")) {\n          Diagnostics.logThreadDumps(\"REQUESTING THREAD DUMP DUE TO TIMEOUT: \" + e.getMessage());\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest#beforeSuperClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeSuperClass() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    System.setProperty(\"solr.autoCommit.maxTime\", \"15000\");\n    System.clearProperty(\"solr.httpclient.retries\");\n    System.clearProperty(\"solr.retries.on.forward\");\n    System.clearProperty(\"solr.retries.to.followers\"); \n    setErrorHook();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeSuperClass() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    System.setProperty(\"solr.autoCommit.maxTime\", \"15000\");\n    setErrorHook();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"536b47681314488eb94706248be6047a3f142841":["67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["d77eebd238dd9a40fb10152d690b4b7fd51a7415"],"3e4d4ec39bf5396230748ca859ff05ab024b6fc5":["1381b91b03f7409d8d548c7070dbc615931a0f50","08c3ca2f3e1c4d3b7f6877c3a58e0e69a6c8b869"],"91e069c492cf4895697ef7b81df0ffb9a8bd4b48":["08c3ca2f3e1c4d3b7f6877c3a58e0e69a6c8b869"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"1381b91b03f7409d8d548c7070dbc615931a0f50":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"08c3ca2f3e1c4d3b7f6877c3a58e0e69a6c8b869":["1381b91b03f7409d8d548c7070dbc615931a0f50"],"67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"d77eebd238dd9a40fb10152d690b4b7fd51a7415":["d267a6ca21263780a721c8a3b265dfad1552d3aa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"d267a6ca21263780a721c8a3b265dfad1552d3aa":["536b47681314488eb94706248be6047a3f142841"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["fe33227f6805edab2036cbb80645cc4e2d1fa424","1381b91b03f7409d8d548c7070dbc615931a0f50"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","1381b91b03f7409d8d548c7070dbc615931a0f50"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48","67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"536b47681314488eb94706248be6047a3f142841":["d267a6ca21263780a721c8a3b265dfad1552d3aa"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3e4d4ec39bf5396230748ca859ff05ab024b6fc5":[],"91e069c492cf4895697ef7b81df0ffb9a8bd4b48":["67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"1381b91b03f7409d8d548c7070dbc615931a0f50":["3e4d4ec39bf5396230748ca859ff05ab024b6fc5","08c3ca2f3e1c4d3b7f6877c3a58e0e69a6c8b869","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"08c3ca2f3e1c4d3b7f6877c3a58e0e69a6c8b869":["3e4d4ec39bf5396230748ca859ff05ab024b6fc5","91e069c492cf4895697ef7b81df0ffb9a8bd4b48"],"67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699":["536b47681314488eb94706248be6047a3f142841","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"d77eebd238dd9a40fb10152d690b4b7fd51a7415":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"d267a6ca21263780a721c8a3b265dfad1552d3aa":["d77eebd238dd9a40fb10152d690b4b7fd51a7415"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["1381b91b03f7409d8d548c7070dbc615931a0f50","fe33227f6805edab2036cbb80645cc4e2d1fa424","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3e4d4ec39bf5396230748ca859ff05ab024b6fc5","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}