{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    \n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n    \n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    \n    SimpleDrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n    \n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    \n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n    \n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    \n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.shutdown();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    \n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n    \n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    \n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    \n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.shutdown();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    \n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    \n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91eb857a56b1a3a6659c666f88e2398347fc1c5a","date":1483442809,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false,\n            false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false,\n            false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false, false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81fff83bdb893c1471efd78f6a9a3ce4f98120b9","date":1531895937,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false,\n            false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false,\n            false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits.value);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits.value);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132e4d2b791f182f095041c89860f21eb11c31a5","date":1600099601,"type":3,"author":"Julie Tibshirani","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = getNewSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits.value);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits.value);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits.value);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits.value);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"680b6449f09827f58fe987aff279e014c311d966","date":1600247985,"type":3,"author":"noblepaul","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = getNewSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits.value);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits.value);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    // LUCENE-5045: make sure DrillSideways works with an empty index\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Count \"Author\"\n    FacetsConfig config = new FacetsConfig();\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n\n    DrillSidewaysResult r = ds.search(ddq, 10); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits.value);\n\n    r = ds.search(ddq, null, null, 10, new Sort(new SortField(\"foo\", SortField.Type.INT)), false); // this used to fail on IllegalArgEx\n    assertEquals(0, r.hits.totalHits.value);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91eb857a56b1a3a6659c666f88e2398347fc1c5a":["0e7bc21595222ae4f75509300fbb7726691f387f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d0ef034a4f10871667ae75181537775ddcf8ade4","0e7bc21595222ae4f75509300fbb7726691f387f"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","91eb857a56b1a3a6659c666f88e2398347fc1c5a"],"132e4d2b791f182f095041c89860f21eb11c31a5":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"680b6449f09827f58fe987aff279e014c311d966":["83788ad129a5154d5c6562c4e8ce3db48793aada","132e4d2b791f182f095041c89860f21eb11c31a5"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["91eb857a56b1a3a6659c666f88e2398347fc1c5a","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","21d36d0db865f7b84026b447bec653469a6e66df"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["91eb857a56b1a3a6659c666f88e2398347fc1c5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["680b6449f09827f58fe987aff279e014c311d966"]},"commit2Childs":{"91eb857a56b1a3a6659c666f88e2398347fc1c5a":["f03e4bed5023ec3ef93a771b8888cae991cf448d","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[],"132e4d2b791f182f095041c89860f21eb11c31a5":["680b6449f09827f58fe987aff279e014c311d966"],"680b6449f09827f58fe987aff279e014c311d966":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"0e7bc21595222ae4f75509300fbb7726691f387f":["91eb857a56b1a3a6659c666f88e2398347fc1c5a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0e7bc21595222ae4f75509300fbb7726691f387f"],"21d36d0db865f7b84026b447bec653469a6e66df":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["132e4d2b791f182f095041c89860f21eb11c31a5","680b6449f09827f58fe987aff279e014c311d966"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","83788ad129a5154d5c6562c4e8ce3db48793aada"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f03e4bed5023ec3ef93a771b8888cae991cf448d","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}