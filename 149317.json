{"path":"src/java/org/apache/lucene/index/DocumentsWriter#compareText(char[],int,char[],int).mjava","commits":[{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#compareText(char[],int,char[],int).mjava","pathOld":"/dev/null","sourceNew":"  int compareText(final char[] text1, int pos1, final char[] text2, int pos2) {\n    while(true) {\n      final char c1 = text1[pos1++];\n      final char c2 = text2[pos2++];\n      if (c1 < c2)\n        if (0xffff == c2)\n          return 1;\n        else\n          return -1;\n      else if (c2 < c1)\n        if (0xffff == c1)\n          return -1;\n        else\n          return 1;\n      else if (0xffff == c1)\n        return 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a0af3a442be522899177e5e11384a45a6784a3f","date":1205348952,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#compareText(char[],int,char[],int).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#compareText(char[],int,char[],int).mjava","sourceNew":"  static int compareText(final char[] text1, int pos1, final char[] text2, int pos2) {\n    while(true) {\n      final char c1 = text1[pos1++];\n      final char c2 = text2[pos2++];\n      if (c1 < c2)\n        if (0xffff == c2)\n          return 1;\n        else\n          return -1;\n      else if (c2 < c1)\n        if (0xffff == c1)\n          return -1;\n        else\n          return 1;\n      else if (0xffff == c1)\n        return 0;\n    }\n  }\n\n","sourceOld":"  int compareText(final char[] text1, int pos1, final char[] text2, int pos2) {\n    while(true) {\n      final char c1 = text1[pos1++];\n      final char c2 = text2[pos2++];\n      if (c1 < c2)\n        if (0xffff == c2)\n          return 1;\n        else\n          return -1;\n      else if (c2 < c1)\n        if (0xffff == c1)\n          return -1;\n        else\n          return 1;\n      else if (0xffff == c1)\n        return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4","date":1206538765,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#compareText(char[],int,char[],int).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#compareText(char[],int,char[],int).mjava","sourceNew":"  private static int compareText(final char[] text1, int pos1, final char[] text2, int pos2) {\n    while(true) {\n      final char c1 = text1[pos1++];\n      final char c2 = text2[pos2++];\n      if (c1 != c2) {\n        if (0xffff == c2)\n          return 1;\n        else if (0xffff == c1)\n          return -1;\n        else\n          return c1-c2;\n      } else if (0xffff == c1)\n        return 0;\n    }\n  }\n\n","sourceOld":"  static int compareText(final char[] text1, int pos1, final char[] text2, int pos2) {\n    while(true) {\n      final char c1 = text1[pos1++];\n      final char c2 = text2[pos2++];\n      if (c1 < c2)\n        if (0xffff == c2)\n          return 1;\n        else\n          return -1;\n      else if (c2 < c1)\n        if (0xffff == c1)\n          return -1;\n        else\n          return 1;\n      else if (0xffff == c1)\n        return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FreqProxTermsWriter#compareText(char[],int,char[],int).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#compareText(char[],int,char[],int).mjava","sourceNew":"  private static int compareText(final char[] text1, int pos1, final char[] text2, int pos2) {\n    while(true) {\n      final char c1 = text1[pos1++];\n      final char c2 = text2[pos2++];\n      if (c1 != c2) {\n        if (0xffff == c2)\n          return 1;\n        else if (0xffff == c1)\n          return -1;\n        else\n          return c1-c2;\n      } else if (0xffff == c1)\n        return 0;\n    }\n  }\n\n","sourceOld":"  private static int compareText(final char[] text1, int pos1, final char[] text2, int pos2) {\n    while(true) {\n      final char c1 = text1[pos1++];\n      final char c2 = text2[pos2++];\n      if (c1 != c2) {\n        if (0xffff == c2)\n          return 1;\n        else if (0xffff == c1)\n          return -1;\n        else\n          return c1-c2;\n      } else if (0xffff == c1)\n        return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["5a0af3a442be522899177e5e11384a45a6784a3f"],"5a0af3a442be522899177e5e11384a45a6784a3f":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"5350389bf83287111f7760b9e3db3af8e3648474":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5350389bf83287111f7760b9e3db3af8e3648474"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["5350389bf83287111f7760b9e3db3af8e3648474"],"5a0af3a442be522899177e5e11384a45a6784a3f":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["5a0af3a442be522899177e5e11384a45a6784a3f"],"5350389bf83287111f7760b9e3db3af8e3648474":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}