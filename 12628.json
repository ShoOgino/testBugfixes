{"path":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#close().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n\n      // Close all subs\n      IOUtils.close(formats.values());\n\n      // Write _X.per: maps field name -> format name and\n      // format name -> format id\n      final String mapFileName = IndexFileNames.segmentFileName(segmentWriteState.segmentName, segmentWriteState.segmentSuffix, PER_FIELD_EXTENSION);\n      final IndexOutput out = segmentWriteState.directory.createOutput(mapFileName, segmentWriteState.context);\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(out, PER_FIELD_NAME, VERSION_LATEST);\n\n        // format name -> int id\n        out.writeVInt(formats.size());\n        for(Map.Entry<PostingsFormat,FieldsConsumerAndID> ent : formats.entrySet()) {\n          out.writeString(ent.getValue().segmentSuffix);\n          out.writeString(ent.getKey().getName());\n        }\n\n        // field name -> format name\n        out.writeVInt(fieldToFormat.size());\n        for(Map.Entry<String,PostingsFormat> ent : fieldToFormat.entrySet()) {\n          out.writeString(ent.getKey());\n          out.writeString(ent.getValue().getName());\n        }\n\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(out);\n        } else {\n          IOUtils.close(out);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n\n      // Close all subs\n      IOUtils.close(formats.values());\n\n      // Write _X.per: maps field name -> format name and\n      // format name -> format id\n      final String mapFileName = IndexFileNames.segmentFileName(segmentWriteState.segmentName, segmentWriteState.segmentSuffix, PER_FIELD_EXTENSION);\n      final IndexOutput out = segmentWriteState.directory.createOutput(mapFileName, segmentWriteState.context);\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(out, PER_FIELD_NAME, VERSION_LATEST);\n\n        // format name -> int id\n        out.writeVInt(formats.size());\n        for(Map.Entry<PostingsFormat,FieldsConsumerAndID> ent : formats.entrySet()) {\n          out.writeString(ent.getValue().segmentSuffix);\n          out.writeString(ent.getKey().getName());\n        }\n\n        // field name -> format name\n        out.writeVInt(fieldToFormat.size());\n        for(Map.Entry<String,PostingsFormat> ent : fieldToFormat.entrySet()) {\n          out.writeString(ent.getKey());\n          out.writeString(ent.getValue().getName());\n        }\n\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(out);\n        } else {\n          IOUtils.close(out);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e816e693615395fd0e107b08e48caff42938190","date":1337635314,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      // Close all subs\n      IOUtils.close(formats.values());\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n\n      // Close all subs\n      IOUtils.close(formats.values());\n\n      // Write _X.per: maps field name -> format name and\n      // format name -> format id\n      final String mapFileName = IndexFileNames.segmentFileName(segmentWriteState.segmentName, segmentWriteState.segmentSuffix, PER_FIELD_EXTENSION);\n      final IndexOutput out = segmentWriteState.directory.createOutput(mapFileName, segmentWriteState.context);\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(out, PER_FIELD_NAME, VERSION_LATEST);\n\n        // format name -> int id\n        out.writeVInt(formats.size());\n        for(Map.Entry<PostingsFormat,FieldsConsumerAndID> ent : formats.entrySet()) {\n          out.writeString(ent.getValue().segmentSuffix);\n          out.writeString(ent.getKey().getName());\n        }\n\n        // field name -> format name\n        out.writeVInt(fieldToFormat.size());\n        for(Map.Entry<String,PostingsFormat> ent : fieldToFormat.entrySet()) {\n          out.writeString(ent.getKey());\n          out.writeString(ent.getValue().getName());\n        }\n\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(out);\n        } else {\n          IOUtils.close(out);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      // Close all subs\n      IOUtils.close(formats.values());\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n\n      // Close all subs\n      IOUtils.close(formats.values());\n\n      // Write _X.per: maps field name -> format name and\n      // format name -> format id\n      final String mapFileName = IndexFileNames.segmentFileName(segmentWriteState.segmentName, segmentWriteState.segmentSuffix, PER_FIELD_EXTENSION);\n      final IndexOutput out = segmentWriteState.directory.createOutput(mapFileName, segmentWriteState.context);\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(out, PER_FIELD_NAME, VERSION_LATEST);\n\n        // format name -> int id\n        out.writeVInt(formats.size());\n        for(Map.Entry<PostingsFormat,FieldsConsumerAndID> ent : formats.entrySet()) {\n          out.writeString(ent.getValue().segmentSuffix);\n          out.writeString(ent.getKey().getName());\n        }\n\n        // field name -> format name\n        out.writeVInt(fieldToFormat.size());\n        for(Map.Entry<String,PostingsFormat> ent : fieldToFormat.entrySet()) {\n          out.writeString(ent.getKey());\n          out.writeString(ent.getValue().getName());\n        }\n\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(out);\n        } else {\n          IOUtils.close(out);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","date":1379624229,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#close().mjava","sourceNew":null,"sourceOld":"    @Override\n    public void close() throws IOException {\n      // Close all subs\n      IOUtils.close(formats.values());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7afb64ff3a701f68b2689cafff6c5bdeb4f67f63","date":1398957288,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#close().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void close() throws IOException {\n      IOUtils.close(toClose);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7afb64ff3a701f68b2689cafff6c5bdeb4f67f63":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2e816e693615395fd0e107b08e48caff42938190"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2e816e693615395fd0e107b08e48caff42938190":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7afb64ff3a701f68b2689cafff6c5bdeb4f67f63"]},"commit2Childs":{"7afb64ff3a701f68b2689cafff6c5bdeb4f67f63":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","2e816e693615395fd0e107b08e48caff42938190"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["7afb64ff3a701f68b2689cafff6c5bdeb4f67f63"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e816e693615395fd0e107b08e48caff42938190":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}