{"path":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","commits":[{"id":"d6c939a28130e1107d4e349d6c10d1a92c489662","date":1330299480,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldsEnum iterator() throws IOException {\n      return new FilterFieldsEnum(super.iterator()) {\n        @Override\n        public String next() throws IOException {\n          String f;\n          while ((f = super.next()) != null) {\n            if (hasField(f)) return f;\n          }\n          return null;\n        } \n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldsEnum iterator() throws IOException {\n      return new FilterFieldsEnum(super.iterator()) {\n        @Override\n        public String next() throws IOException {\n          String f;\n          while ((f = super.next()) != null) {\n            if (hasField(f)) return f;\n          }\n          return null;\n        } \n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb07ab105350b80ed9d63ca64b117084ed7391bc","date":1344824719,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      final Iterator<String> in = super.iterator();\n      return new Iterator<String>() {\n        String cached = null;\n        \n        @Override\n        public String next() {\n          if (cached != null) {\n            String next = cached;\n            cached = null;\n            return next;\n          } else {\n            String next = doNext();\n            if (next == null) {\n              throw new NoSuchElementException();\n            } else {\n              return next;\n            }\n          }\n        }\n\n        @Override\n        public boolean hasNext() {\n          return cached != null || (cached = doNext()) != null;\n        }\n        \n        private String doNext() {\n          while (in.hasNext()) {\n            String field = in.next();\n            if (hasField(field)) {\n              return field;\n            }\n          }\n          return null;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FieldsEnum iterator() throws IOException {\n      return new FilterFieldsEnum(super.iterator()) {\n        @Override\n        public String next() throws IOException {\n          String f;\n          while ((f = super.next()) != null) {\n            if (hasField(f)) return f;\n          }\n          return null;\n        } \n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      final Iterator<String> in = super.iterator();\n      return new Iterator<String>() {\n        String cached = null;\n        \n        @Override\n        public String next() {\n          if (cached != null) {\n            String next = cached;\n            cached = null;\n            return next;\n          } else {\n            String next = doNext();\n            if (next == null) {\n              throw new NoSuchElementException();\n            } else {\n              return next;\n            }\n          }\n        }\n\n        @Override\n        public boolean hasNext() {\n          return cached != null || (cached = doNext()) != null;\n        }\n        \n        private String doNext() {\n          while (in.hasNext()) {\n            String field = in.next();\n            if (hasField(field)) {\n              return field;\n            }\n          }\n          return null;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FieldsEnum iterator() throws IOException {\n      return new FilterFieldsEnum(super.iterator()) {\n        @Override\n        public String next() throws IOException {\n          String f;\n          while ((f = super.next()) != null) {\n            if (hasField(f)) return f;\n          }\n          return null;\n        } \n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      final Iterator<String> in = super.iterator();\n      return new Iterator<String>() {\n        String cached = null;\n        \n        @Override\n        public String next() {\n          if (cached != null) {\n            String next = cached;\n            cached = null;\n            return next;\n          } else {\n            String next = doNext();\n            if (next == null) {\n              throw new NoSuchElementException();\n            } else {\n              return next;\n            }\n          }\n        }\n\n        @Override\n        public boolean hasNext() {\n          return cached != null || (cached = doNext()) != null;\n        }\n        \n        private String doNext() {\n          while (in.hasNext()) {\n            String field = in.next();\n            if (hasField(field)) {\n              return field;\n            }\n          }\n          return null;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FieldsEnum iterator() throws IOException {\n      return new FilterFieldsEnum(super.iterator()) {\n        @Override\n        public String next() throws IOException {\n          String f;\n          while ((f = super.next()) != null) {\n            if (hasField(f)) return f;\n          }\n          return null;\n        } \n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ccedec0f87d4891bf768895913ac496756b49a92","date":1345319630,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      final Iterator<String> in = super.iterator();\n      return new Iterator<String>() {\n        private String cached = null;\n        \n        @Override\n        public String next() {\n          if (cached != null) {\n            String next = cached;\n            cached = null;\n            return next;\n          } else {\n            String next = doNext();\n            if (next == null) {\n              throw new NoSuchElementException();\n            } else {\n              return next;\n            }\n          }\n        }\n\n        @Override\n        public boolean hasNext() {\n          return cached != null || (cached = doNext()) != null;\n        }\n        \n        private String doNext() {\n          while (in.hasNext()) {\n            String field = in.next();\n            if (hasField(field)) {\n              return field;\n            }\n          }\n          return null;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Iterator<String> iterator() {\n      final Iterator<String> in = super.iterator();\n      return new Iterator<String>() {\n        String cached = null;\n        \n        @Override\n        public String next() {\n          if (cached != null) {\n            String next = cached;\n            cached = null;\n            return next;\n          } else {\n            String next = doNext();\n            if (next == null) {\n              throw new NoSuchElementException();\n            } else {\n              return next;\n            }\n          }\n        }\n\n        @Override\n        public boolean hasNext() {\n          return cached != null || (cached = doNext()) != null;\n        }\n        \n        private String doNext() {\n          while (in.hasNext()) {\n            String field = in.next();\n            if (hasField(field)) {\n              return field;\n            }\n          }\n          return null;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47eaa666ec5a29c2908163b934244cdde35e6186","date":1345367784,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      return new FilterIterator<String>(super.iterator()) {\n        @Override\n        protected boolean predicateFunction(String field) {\n          return hasField(field);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Iterator<String> iterator() {\n      final Iterator<String> in = super.iterator();\n      return new Iterator<String>() {\n        private String cached = null;\n        \n        @Override\n        public String next() {\n          if (cached != null) {\n            String next = cached;\n            cached = null;\n            return next;\n          } else {\n            String next = doNext();\n            if (next == null) {\n              throw new NoSuchElementException();\n            } else {\n              return next;\n            }\n          }\n        }\n\n        @Override\n        public boolean hasNext() {\n          return cached != null || (cached = doNext()) != null;\n        }\n        \n        private String doNext() {\n          while (in.hasNext()) {\n            String field = in.next();\n            if (hasField(field)) {\n              return field;\n            }\n          }\n          return null;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      return new FilterIterator<String>(super.iterator()) {\n        @Override\n        protected boolean predicateFunction(String field) {\n          return hasField(field);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Iterator<String> iterator() {\n      final Iterator<String> in = super.iterator();\n      return new Iterator<String>() {\n        String cached = null;\n        \n        @Override\n        public String next() {\n          if (cached != null) {\n            String next = cached;\n            cached = null;\n            return next;\n          } else {\n            String next = doNext();\n            if (next == null) {\n              throw new NoSuchElementException();\n            } else {\n              return next;\n            }\n          }\n        }\n\n        @Override\n        public boolean hasNext() {\n          return cached != null || (cached = doNext()) != null;\n        }\n        \n        private String doNext() {\n          while (in.hasNext()) {\n            String field = in.next();\n            if (hasField(field)) {\n              return field;\n            }\n          }\n          return null;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67588aedbc6edbcce873bd0c3c7b4199fbf0987c","date":1345506207,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      return new FilterIterator<String>(super.iterator()) {\n        @Override\n        protected boolean predicateFunction(String field) {\n          return hasField(field);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Iterator<String> iterator() {\n      final Iterator<String> in = super.iterator();\n      return new Iterator<String>() {\n        String cached = null;\n        \n        @Override\n        public String next() {\n          if (cached != null) {\n            String next = cached;\n            cached = null;\n            return next;\n          } else {\n            String next = doNext();\n            if (next == null) {\n              throw new NoSuchElementException();\n            } else {\n              return next;\n            }\n          }\n        }\n\n        @Override\n        public boolean hasNext() {\n          return cached != null || (cached = doNext()) != null;\n        }\n        \n        private String doNext() {\n          while (in.hasNext()) {\n            String field = in.next();\n            if (hasField(field)) {\n              return field;\n            }\n          }\n          return null;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"286d87eabbc79863e93070d6126d558a2ca0fb28","date":1352063339,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      return new FilterIterator<String, String>(super.iterator()) {\n        @Override\n        protected boolean predicateFunction(String field) {\n          return hasField(field);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Iterator<String> iterator() {\n      return new FilterIterator<String>(super.iterator()) {\n        @Override\n        protected boolean predicateFunction(String field) {\n          return hasField(field);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterLeafReader.FieldFilterFields#iterator().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader.FieldFilterFields#iterator().mjava","sourceNew":"    @Override\n    public Iterator<String> iterator() {\n      return new FilterIterator<String, String>(super.iterator()) {\n        @Override\n        protected boolean predicateFunction(String field) {\n          return hasField(field);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Iterator<String> iterator() {\n      return new FilterIterator<String, String>(super.iterator()) {\n        @Override\n        protected boolean predicateFunction(String field) {\n          return hasField(field);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"286d87eabbc79863e93070d6126d558a2ca0fb28":["47eaa666ec5a29c2908163b934244cdde35e6186"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","47eaa666ec5a29c2908163b934244cdde35e6186"],"47eaa666ec5a29c2908163b934244cdde35e6186":["ccedec0f87d4891bf768895913ac496756b49a92"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d6c939a28130e1107d4e349d6c10d1a92c489662"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["d6c939a28130e1107d4e349d6c10d1a92c489662"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["286d87eabbc79863e93070d6126d558a2ca0fb28"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["d6c939a28130e1107d4e349d6c10d1a92c489662","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"ccedec0f87d4891bf768895913ac496756b49a92":["fb07ab105350b80ed9d63ca64b117084ed7391bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"67588aedbc6edbcce873bd0c3c7b4199fbf0987c":["c7869f64c874ebf7f317d22c00baf2b6857797a6","47eaa666ec5a29c2908163b934244cdde35e6186"],"d6c939a28130e1107d4e349d6c10d1a92c489662":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["d6c939a28130e1107d4e349d6c10d1a92c489662","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"286d87eabbc79863e93070d6126d558a2ca0fb28":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"47eaa666ec5a29c2908163b934244cdde35e6186":["286d87eabbc79863e93070d6126d558a2ca0fb28","616c1830142ff5c1ddedec1ed898733b73c8e23b","67588aedbc6edbcce873bd0c3c7b4199fbf0987c"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["c7869f64c874ebf7f317d22c00baf2b6857797a6","ccedec0f87d4891bf768895913ac496756b49a92","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["67588aedbc6edbcce873bd0c3c7b4199fbf0987c"],"ccedec0f87d4891bf768895913ac496756b49a92":["47eaa666ec5a29c2908163b934244cdde35e6186"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d6c939a28130e1107d4e349d6c10d1a92c489662"],"67588aedbc6edbcce873bd0c3c7b4199fbf0987c":[],"d6c939a28130e1107d4e349d6c10d1a92c489662":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","fb07ab105350b80ed9d63ca64b117084ed7391bc","c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["616c1830142ff5c1ddedec1ed898733b73c8e23b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","67588aedbc6edbcce873bd0c3c7b4199fbf0987c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}