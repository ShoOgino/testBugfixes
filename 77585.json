{"path":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetField#createFromListOfNamedLists(int,ResponseBuilder,PivotFacetValue,List[NamedList[Object]]).mjava","commits":[{"id":"92751ba9273251eab6a2e379ec42a1697a32ff96","date":1407954233,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetField#createFromListOfNamedLists(int,ResponseBuilder,PivotFacetValue,List[NamedList[Object]]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A recursive method to construct a new <code>PivotFacetField</code> object from \n   * the contents of the {@link NamedList}s provided by the specified shard, relative \n   * to a parent value (if this is not the top field in the pivot hierarchy)\n   *\n   * The associated child {@link PivotFacetValue}s will be recursively built as well.\n   *\n   * @see PivotFacetValue#createFromNamedList\n   * @param shardNumber the id of the shard that provided this data\n   * @param rb The response builder of the current request\n   * @param owner the parent value in the current pivot (may be null)\n   * @param pivotValues the data from the specified shard for this pivot field, may be null or empty\n   * @return the new PivotFacetField, null if pivotValues is null or empty.\n   */\n  public static PivotFacetField createFromListOfNamedLists(int shardNumber, ResponseBuilder rb, PivotFacetValue owner, List<NamedList<Object>> pivotValues) {\n    \n    if (null == pivotValues || pivotValues.size() <= 0) return null;\n    \n    NamedList<Object> firstValue = pivotValues.get(0);\n    PivotFacetField createdPivotFacetField \n      = new PivotFacetField(rb, owner, PivotFacetHelper.getField(firstValue));\n    \n    int lowestCount = Integer.MAX_VALUE;\n    \n    for (NamedList<Object> pivotValue : pivotValues) {\n      \n      lowestCount = Math.min(lowestCount, PivotFacetHelper.getCount(pivotValue));\n      \n      PivotFacetValue newValue = PivotFacetValue.createFromNamedList\n        (shardNumber, rb, createdPivotFacetField, pivotValue);\n      createdPivotFacetField.valueCollection.add(newValue);\n    }\n      \n    createdPivotFacetField.shardLowestCount.put(shardNumber,  lowestCount);\n    createdPivotFacetField.numberOfValuesContributedByShard.put(shardNumber, pivotValues.size());\n\n    return createdPivotFacetField;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"92751ba9273251eab6a2e379ec42a1697a32ff96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["92751ba9273251eab6a2e379ec42a1697a32ff96"]},"commit2Childs":{"92751ba9273251eab6a2e379ec42a1697a32ff96":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["92751ba9273251eab6a2e379ec42a1697a32ff96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}