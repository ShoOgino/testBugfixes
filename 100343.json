{"path":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#KoreanTokenizer(AttributeFactory,UserDictionary,DecompoundMode,boolean).mjava","commits":[{"id":"8493925b2e70246f0961df584c01a8c2e61ee52f","date":1523611602,"type":0,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#KoreanTokenizer(AttributeFactory,UserDictionary,DecompoundMode,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new KoreanTokenizer.\n   *\n   * @param factory the AttributeFactory to use\n   * @param userDictionary Optional: if non-null, user dictionary.\n   * @param mode Decompound mode.\n   * @param outputUnknownUnigrams If true outputs unigrams for unknown words.\n   */\n  public KoreanTokenizer(AttributeFactory factory, UserDictionary userDictionary, DecompoundMode mode, boolean outputUnknownUnigrams) {\n    super(factory);\n    this.mode = mode;\n    this.outputUnknownUnigrams = outputUnknownUnigrams;\n    dictionary = TokenInfoDictionary.getInstance();\n    fst = dictionary.getFST();\n    unkDictionary = UnknownDictionary.getInstance();\n    characterDefinition = unkDictionary.getCharacterDefinition();\n    this.userDictionary = userDictionary;\n    costs = ConnectionCosts.getInstance();\n    fstReader = fst.getBytesReader();\n    if (userDictionary != null) {\n      userFST = userDictionary.getFST();\n      userFSTReader = userFST.getBytesReader();\n    } else {\n      userFST = null;\n      userFSTReader = null;\n    }\n\n    buffer.reset(this.input);\n\n    resetState();\n\n    dictionaryMap.put(Type.KNOWN, dictionary);\n    dictionaryMap.put(Type.UNKNOWN, unkDictionary);\n    dictionaryMap.put(Type.USER, userDictionary);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c6453827f947004a68ad9db7418781e9df2f660","date":1523626811,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#KoreanTokenizer(AttributeFactory,UserDictionary,DecompoundMode,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new KoreanTokenizer.\n   *\n   * @param factory the AttributeFactory to use\n   * @param userDictionary Optional: if non-null, user dictionary.\n   * @param mode Decompound mode.\n   * @param outputUnknownUnigrams If true outputs unigrams for unknown words.\n   */\n  public KoreanTokenizer(AttributeFactory factory, UserDictionary userDictionary, DecompoundMode mode, boolean outputUnknownUnigrams) {\n    super(factory);\n    this.mode = mode;\n    this.outputUnknownUnigrams = outputUnknownUnigrams;\n    dictionary = TokenInfoDictionary.getInstance();\n    fst = dictionary.getFST();\n    unkDictionary = UnknownDictionary.getInstance();\n    characterDefinition = unkDictionary.getCharacterDefinition();\n    this.userDictionary = userDictionary;\n    costs = ConnectionCosts.getInstance();\n    fstReader = fst.getBytesReader();\n    if (userDictionary != null) {\n      userFST = userDictionary.getFST();\n      userFSTReader = userFST.getBytesReader();\n    } else {\n      userFST = null;\n      userFSTReader = null;\n    }\n\n    buffer.reset(this.input);\n\n    resetState();\n\n    dictionaryMap.put(Type.KNOWN, dictionary);\n    dictionaryMap.put(Type.UNKNOWN, unkDictionary);\n    dictionaryMap.put(Type.USER, userDictionary);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9a6a8e09e9e2d9479c718093a32f3a8c19455af","date":1558962924,"type":3,"author":"Namgyu Kim","isMerge":false,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#KoreanTokenizer(AttributeFactory,UserDictionary,DecompoundMode,boolean).mjava","pathOld":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#KoreanTokenizer(AttributeFactory,UserDictionary,DecompoundMode,boolean).mjava","sourceNew":"  /**\n   * Create a new KoreanTokenizer.\n   *\n   * @param factory the AttributeFactory to use\n   * @param userDictionary Optional: if non-null, user dictionary.\n   * @param mode Decompound mode.\n   * @param outputUnknownUnigrams If true outputs unigrams for unknown words.\n   */\n  public KoreanTokenizer(AttributeFactory factory, UserDictionary userDictionary, DecompoundMode mode, boolean outputUnknownUnigrams) {\n    this(factory, userDictionary, mode, outputUnknownUnigrams, true);\n  }\n\n","sourceOld":"  /**\n   * Create a new KoreanTokenizer.\n   *\n   * @param factory the AttributeFactory to use\n   * @param userDictionary Optional: if non-null, user dictionary.\n   * @param mode Decompound mode.\n   * @param outputUnknownUnigrams If true outputs unigrams for unknown words.\n   */\n  public KoreanTokenizer(AttributeFactory factory, UserDictionary userDictionary, DecompoundMode mode, boolean outputUnknownUnigrams) {\n    super(factory);\n    this.mode = mode;\n    this.outputUnknownUnigrams = outputUnknownUnigrams;\n    dictionary = TokenInfoDictionary.getInstance();\n    fst = dictionary.getFST();\n    unkDictionary = UnknownDictionary.getInstance();\n    characterDefinition = unkDictionary.getCharacterDefinition();\n    this.userDictionary = userDictionary;\n    costs = ConnectionCosts.getInstance();\n    fstReader = fst.getBytesReader();\n    if (userDictionary != null) {\n      userFST = userDictionary.getFST();\n      userFSTReader = userFST.getBytesReader();\n    } else {\n      userFST = null;\n      userFSTReader = null;\n    }\n\n    buffer.reset(this.input);\n\n    resetState();\n\n    dictionaryMap.put(Type.KNOWN, dictionary);\n    dictionaryMap.put(Type.UNKNOWN, unkDictionary);\n    dictionaryMap.put(Type.USER, userDictionary);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc0cab5c9c89e5632387d6c500fc935f0851403b","date":1583169104,"type":3,"author":"Namgyu Kim","isMerge":false,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#KoreanTokenizer(AttributeFactory,UserDictionary,DecompoundMode,boolean).mjava","pathOld":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#KoreanTokenizer(AttributeFactory,UserDictionary,DecompoundMode,boolean).mjava","sourceNew":"  /**\n   * Create a new KoreanTokenizer using the system and unknown dictionaries shipped with Lucene.\n   *\n   * @param factory the AttributeFactory to use\n   * @param userDictionary Optional: if non-null, user dictionary.\n   * @param mode Decompound mode.\n   * @param outputUnknownUnigrams if true outputs unigrams for unknown words.\n   */\n  public KoreanTokenizer(AttributeFactory factory, UserDictionary userDictionary, DecompoundMode mode, boolean outputUnknownUnigrams) {\n    this(factory, userDictionary, mode, outputUnknownUnigrams, true);\n  }\n\n","sourceOld":"  /**\n   * Create a new KoreanTokenizer.\n   *\n   * @param factory the AttributeFactory to use\n   * @param userDictionary Optional: if non-null, user dictionary.\n   * @param mode Decompound mode.\n   * @param outputUnknownUnigrams If true outputs unigrams for unknown words.\n   */\n  public KoreanTokenizer(AttributeFactory factory, UserDictionary userDictionary, DecompoundMode mode, boolean outputUnknownUnigrams) {\n    this(factory, userDictionary, mode, outputUnknownUnigrams, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c9a6a8e09e9e2d9479c718093a32f3a8c19455af":["5c6453827f947004a68ad9db7418781e9df2f660"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8493925b2e70246f0961df584c01a8c2e61ee52f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dc0cab5c9c89e5632387d6c500fc935f0851403b":["c9a6a8e09e9e2d9479c718093a32f3a8c19455af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dc0cab5c9c89e5632387d6c500fc935f0851403b"],"5c6453827f947004a68ad9db7418781e9df2f660":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8493925b2e70246f0961df584c01a8c2e61ee52f"]},"commit2Childs":{"c9a6a8e09e9e2d9479c718093a32f3a8c19455af":["dc0cab5c9c89e5632387d6c500fc935f0851403b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8493925b2e70246f0961df584c01a8c2e61ee52f","5c6453827f947004a68ad9db7418781e9df2f660"],"8493925b2e70246f0961df584c01a8c2e61ee52f":["5c6453827f947004a68ad9db7418781e9df2f660"],"dc0cab5c9c89e5632387d6c500fc935f0851403b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5c6453827f947004a68ad9db7418781e9df2f660":["c9a6a8e09e9e2d9479c718093a32f3a8c19455af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}