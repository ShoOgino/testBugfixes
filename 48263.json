{"path":"src/java/org/apache/lucene/search/BooleanQuery#hashCode().mjava","commits":[{"id":"27274410c91546fcfc28e692abd2dd77ca99be4b","date":1042501834,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#hashCode().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a hash code value for this object.*/\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost()) ^ clauses.hashCode();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6bffc7c3c9ddfcefe91b728c0680af2a3a96444","date":1132159199,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object.*/\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost()) ^ clauses.hashCode()\n           + getMinimumNumberShouldMatch();\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.*/\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost()) ^ clauses.hashCode();\n  }\n\n","bugFix":null,"bugIntro":["2c1612e8e6b219c9fc5ba7f7cea075aa68f1bef3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc","date":1255773182,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost()) ^ clauses.hashCode()\n           + getMinimumNumberShouldMatch();\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.*/\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost()) ^ clauses.hashCode()\n           + getMinimumNumberShouldMatch();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2c1612e8e6b219c9fc5ba7f7cea075aa68f1bef3","date":1259021060,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost()) ^ clauses.hashCode()\n      + getMinimumNumberShouldMatch() + (disableCoord ? 17:0);\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost()) ^ clauses.hashCode()\n           + getMinimumNumberShouldMatch();\n  }\n\n","bugFix":["b6bffc7c3c9ddfcefe91b728c0680af2a3a96444"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost()) ^ clauses.hashCode()\n      + getMinimumNumberShouldMatch() + (disableCoord ? 17:0);\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost()) ^ clauses.hashCode()\n      + getMinimumNumberShouldMatch() + (disableCoord ? 17:0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c1612e8e6b219c9fc5ba7f7cea075aa68f1bef3":["b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc":["b6bffc7c3c9ddfcefe91b728c0680af2a3a96444"],"b6bffc7c3c9ddfcefe91b728c0680af2a3a96444":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2c1612e8e6b219c9fc5ba7f7cea075aa68f1bef3"]},"commit2Childs":{"2c1612e8e6b219c9fc5ba7f7cea075aa68f1bef3":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["b6bffc7c3c9ddfcefe91b728c0680af2a3a96444"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc":["2c1612e8e6b219c9fc5ba7f7cea075aa68f1bef3"],"b6bffc7c3c9ddfcefe91b728c0680af2a3a96444":["b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}