{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","commits":[{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testForceCommit().mjava","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testForceCommit().mjava","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testForceCommit().mjava","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a8259c922a83abc544609227a60d48e5ee93e7e","date":1317679620,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = IndexReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = IndexReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = IndexReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = IndexReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = IndexReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = IndexReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = IndexReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a81e1267c45ab68de86e86ac4b4c99e6e628ceb","date":1327857831,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    DirectoryReader reader2 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = IndexReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    DirectoryReader reader2 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = IndexReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testForceCommit().mjava","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    DirectoryReader reader2 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    DirectoryReader reader2 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader2);\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a8259c922a83abc544609227a60d48e5ee93e7e":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["8a8259c922a83abc544609227a60d48e5ee93e7e","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"79c2cb24929f2649a8875fb629086171f914d5ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["8a8259c922a83abc544609227a60d48e5ee93e7e","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"3a81e1267c45ab68de86e86ac4b4c99e6e628ceb":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","3a81e1267c45ab68de86e86ac4b4c99e6e628ceb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"8a8259c922a83abc544609227a60d48e5ee93e7e":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["8a8259c922a83abc544609227a60d48e5ee93e7e","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3a81e1267c45ab68de86e86ac4b4c99e6e628ceb","5cab9a86bd67202d20b6adc463008c8e982b070a"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a81e1267c45ab68de86e86ac4b4c99e6e628ceb":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}