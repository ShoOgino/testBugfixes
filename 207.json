{"path":"lucene/src/java/org/apache/lucene/util/ReaderUtil#leaves(ReaderContext[#-extends-IndexReader]).mjava","commits":[{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ReaderUtil#leaves(ReaderContext[#-extends-IndexReader]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/ReaderUtil#leaves(ReaderContext).mjava","sourceNew":"  /**\n   * Returns the context's leaves or the context itself as the only element of\n   * the returned array. If the context's #leaves() method returns\n   * <code>null</code> the given context must be an instance of\n   * {@link AtomicReaderContext}\n   */\n  public static AtomicReaderContext[] leaves(ReaderContext<? extends IndexReader> context) {\n    assert context != null && context.isTopLevel : \"context must be non-null & top-level\";\n    final AtomicReaderContext[] leaves = context.leaves();\n    if (leaves == null) {\n      return new AtomicReaderContext[] { (AtomicReaderContext) context };\n    }\n    return leaves;\n  }\n\n","sourceOld":"  /**\n   * Returns the context's leaves or the context itself as the only element of\n   * the returned array. If the context's #leaves() method returns\n   * <code>null</code> the given context must be an instance of\n   * {@link AtomicReaderContext}\n   */\n  public static AtomicReaderContext[] leaves(ReaderContext context) {\n    assert context != null && context.isTopLevel : \"context must be non-null & top-level\";\n    final AtomicReaderContext[] leaves = context.leaves();\n    if (leaves == null) {\n      assert context.isAtomic : \"top-level context without leaves must be atomic\";\n      return new AtomicReaderContext[] { (AtomicReaderContext) context };\n    }\n    return leaves;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fff8f4b218bd0626afcdce82027bafeb84a50a4","date":1327229950,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ReaderUtil#leaves(ReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/ReaderUtil#leaves(ReaderContext[#-extends-IndexReader]).mjava","sourceNew":"  /**\n   * Returns the context's leaves or the context itself as the only element of\n   * the returned array. If the context's #leaves() method returns\n   * <code>null</code> the given context must be an instance of\n   * {@link AtomicReaderContext}\n   */\n  public static AtomicReaderContext[] leaves(ReaderContext context) {\n    assert context != null && context.isTopLevel : \"context must be non-null & top-level\";\n    final AtomicReaderContext[] leaves = context.leaves();\n    if (leaves == null) {\n      return new AtomicReaderContext[] { (AtomicReaderContext) context };\n    }\n    return leaves;\n  }\n\n","sourceOld":"  /**\n   * Returns the context's leaves or the context itself as the only element of\n   * the returned array. If the context's #leaves() method returns\n   * <code>null</code> the given context must be an instance of\n   * {@link AtomicReaderContext}\n   */\n  public static AtomicReaderContext[] leaves(ReaderContext<? extends IndexReader> context) {\n    assert context != null && context.isTopLevel : \"context must be non-null & top-level\";\n    final AtomicReaderContext[] leaves = context.leaves();\n    if (leaves == null) {\n      return new AtomicReaderContext[] { (AtomicReaderContext) context };\n    }\n    return leaves;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6fff8f4b218bd0626afcdce82027bafeb84a50a4":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"6fff8f4b218bd0626afcdce82027bafeb84a50a4":[],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["6fff8f4b218bd0626afcdce82027bafeb84a50a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6fff8f4b218bd0626afcdce82027bafeb84a50a4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}