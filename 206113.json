{"path":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n\n          for (int i=0; i<sexplain.size(); i++) {\n            String id = sexplain.getName(i);\n            // TODO: lookup won't work for non-string ids... String vs Float\n            ShardDoc sdoc = rb.resultIds.get(id);\n            int idx = sdoc.positionInResponse;\n            arr[idx] = new NamedList.NamedListEntry<Object>( id, sexplain.getVal(i)); \n          }\n        }\n      }\n\n      explain = HighlightComponent.removeNulls(new SimpleOrderedMap(arr));\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      int idx = info.indexOf(\"explain\",0);\n      if (idx>=0) {\n        info.setVal(idx, explain);\n      } else {\n        info.add(\"explain\", explain);\n      }\n      \n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n\n          for (int i=0; i<sexplain.size(); i++) {\n            String id = sexplain.getName(i);\n            // TODO: lookup won't work for non-string ids... String vs Float\n            ShardDoc sdoc = rb.resultIds.get(id);\n            int idx = sdoc.positionInResponse;\n            arr[idx] = new NamedList.NamedListEntry<Object>( id, sexplain.getVal(i)); \n          }\n        }\n      }\n\n      explain = HighlightComponent.removeNulls(new SimpleOrderedMap(arr));\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      int idx = info.indexOf(\"explain\",0);\n      if (idx>=0) {\n        info.setVal(idx, explain);\n      } else {\n        info.add(\"explain\", explain);\n      }\n      \n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","pathOld":"src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n\n          for (int i=0; i<sexplain.size(); i++) {\n            String id = sexplain.getName(i);\n            // TODO: lookup won't work for non-string ids... String vs Float\n            ShardDoc sdoc = rb.resultIds.get(id);\n            int idx = sdoc.positionInResponse;\n            arr[idx] = new NamedList.NamedListEntry<Object>( id, sexplain.getVal(i)); \n          }\n        }\n      }\n\n      explain = HighlightComponent.removeNulls(new SimpleOrderedMap(arr));\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      int idx = info.indexOf(\"explain\",0);\n      if (idx>=0) {\n        info.setVal(idx, explain);\n      } else {\n        info.add(\"explain\", explain);\n      }\n      \n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n\n          for (int i=0; i<sexplain.size(); i++) {\n            String id = sexplain.getName(i);\n            // TODO: lookup won't work for non-string ids... String vs Float\n            ShardDoc sdoc = rb.resultIds.get(id);\n            int idx = sdoc.positionInResponse;\n            arr[idx] = new NamedList.NamedListEntry<Object>( id, sexplain.getVal(i)); \n          }\n        }\n      }\n\n      explain = HighlightComponent.removeNulls(new SimpleOrderedMap(arr));\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      int idx = info.indexOf(\"explain\",0);\n      if (idx>=0) {\n        info.setVal(idx, explain);\n      } else {\n        info.add(\"explain\", explain);\n      }\n      \n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n\n          for (int i=0; i<sexplain.size(); i++) {\n            String id = sexplain.getName(i);\n            // TODO: lookup won't work for non-string ids... String vs Float\n            ShardDoc sdoc = rb.resultIds.get(id);\n            int idx = sdoc.positionInResponse;\n            arr[idx] = new NamedList.NamedListEntry<Object>( id, sexplain.getVal(i)); \n          }\n        }\n      }\n\n      explain = HighlightComponent.removeNulls(new SimpleOrderedMap(arr));\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      int idx = info.indexOf(\"explain\",0);\n      if (idx>=0) {\n        info.setVal(idx, explain);\n      } else {\n        info.add(\"explain\", explain);\n      }\n      \n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"92005ead3266d7b3283282717d5ecffba1594136","date":1283464759,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n\n          for (int i=0; i<sexplain.size(); i++) {\n            String id = sexplain.getName(i);\n            // TODO: lookup won't work for non-string ids... String vs Float\n            ShardDoc sdoc = rb.resultIds.get(id);\n            int idx = sdoc.positionInResponse;\n            arr[idx] = new NamedList.NamedListEntry<Object>( id, sexplain.getVal(i)); \n          }\n        }\n      }\n\n      explain = HighlightComponent.removeNulls(new SimpleOrderedMap(arr));\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      int idx = info.indexOf(\"explain\",0);\n      if (idx>=0) {\n        info.setVal(idx, explain);\n      } else {\n        info.add(\"explain\", explain);\n      }\n      \n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","bugFix":null,"bugIntro":["53153d3c5d39cd6b824fa6413fa8c7ee0f1b6d3e","53153d3c5d39cd6b824fa6413fa8c7ee0f1b6d3e","53153d3c5d39cd6b824fa6413fa8c7ee0f1b6d3e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n\n          for (int i=0; i<sexplain.size(); i++) {\n            String id = sexplain.getName(i);\n            // TODO: lookup won't work for non-string ids... String vs Float\n            ShardDoc sdoc = rb.resultIds.get(id);\n            int idx = sdoc.positionInResponse;\n            arr[idx] = new NamedList.NamedListEntry<Object>( id, sexplain.getVal(i)); \n          }\n        }\n      }\n\n      explain = HighlightComponent.removeNulls(new SimpleOrderedMap(arr));\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      int idx = info.indexOf(\"explain\",0);\n      if (idx>=0) {\n        info.setVal(idx, explain);\n      } else {\n        info.add(\"explain\", explain);\n      }\n      \n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"755f2f419306d7297c8feee10d1897addf4b2dd0","date":1294442354,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList<Object> info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap<Object>(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap<Object>();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList<Object> info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap<Object>(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap<Object>();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList<Object> info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap<Object>(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap<Object>();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList<Object> info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap<Object>(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap<Object>();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList<Object> info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap<Object>(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap<Object>();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList<Object> info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap<Object>(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap<Object>();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList<Object> info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap<Object>(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap<Object>();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList<Object> info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap<Object>(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap<Object>();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (rb.isDebug() && rb.stage == ResponseBuilder.STAGE_GET_FIELDS) {\n      NamedList<Object> info = null;\n      NamedList explain = new SimpleOrderedMap();\n\n      Map.Entry<String, Object>[]  arr =  new NamedList.NamedListEntry[rb.resultIds.size()];\n\n      for (ShardRequest sreq : rb.finished) {\n        if ((sreq.purpose & ShardRequest.PURPOSE_GET_DEBUG) == 0) continue;\n        for (ShardResponse srsp : sreq.responses) {\n          NamedList sdebug = (NamedList)srsp.getSolrResponse().getResponse().get(\"debug\");\n          info = (NamedList)merge(sdebug, info, excludeSet);\n\n          if (rb.isDebugResults()) {\n            NamedList sexplain = (NamedList)sdebug.get(\"explain\");\n            for (int i = 0; i < sexplain.size(); i++) {\n              String id = sexplain.getName(i);\n              // TODO: lookup won't work for non-string ids... String vs Float\n              ShardDoc sdoc = rb.resultIds.get(id);\n              int idx = sdoc.positionInResponse;\n              arr[idx] = new NamedList.NamedListEntry<Object>(id, sexplain.getVal(i));\n            }\n          }\n        }\n      }\n\n      if (rb.isDebugResults()) {\n        explain = SolrPluginUtils.removeNulls(new SimpleOrderedMap<Object>(arr));\n      }\n\n      if (info == null) {\n        info = new SimpleOrderedMap<Object>();\n      }\n      if (rb.isDebugResults()) {\n        int idx = info.indexOf(\"explain\",0);\n        if (idx>=0) {\n          info.setVal(idx, explain);\n        } else {\n          info.add(\"explain\", explain);\n        }\n      }\n\n      rb.setDebugInfo(info);\n      rb.rsp.add(\"debug\", rb.getDebugInfo() );      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["755f2f419306d7297c8feee10d1897addf4b2dd0","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","92005ead3266d7b3283282717d5ecffba1594136"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"92005ead3266d7b3283282717d5ecffba1594136":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["755f2f419306d7297c8feee10d1897addf4b2dd0"],"755f2f419306d7297c8feee10d1897addf4b2dd0":["92005ead3266d7b3283282717d5ecffba1594136"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["92005ead3266d7b3283282717d5ecffba1594136","755f2f419306d7297c8feee10d1897addf4b2dd0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["755f2f419306d7297c8feee10d1897addf4b2dd0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","755f2f419306d7297c8feee10d1897addf4b2dd0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"1da8d55113b689b06716246649de6f62430f15c0":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","92005ead3266d7b3283282717d5ecffba1594136"],"92005ead3266d7b3283282717d5ecffba1594136":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","755f2f419306d7297c8feee10d1897addf4b2dd0","29ef99d61cda9641b6250bf9567329a6e65f901d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"755f2f419306d7297c8feee10d1897addf4b2dd0":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}