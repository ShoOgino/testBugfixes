{"path":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getEnum(AttributeSource).mjava","commits":[{"id":"2d84736c4614acce6720851cbd2c823d7cd516e4","date":1290551630,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getEnum(AttributeSource).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public ValuesEnum getEnum(AttributeSource attrSource) throws IOException {\n        final MissingValues missing = getMissing();\n        return new SourceEnum(attrSource, type(), this, values.size()) {\n          private final LongsRef ref = attr.ints();\n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= numDocs)\n              return pos = NO_MORE_DOCS;\n            while (source.getInt(target) == missing.longValue) {\n              if (++target >= numDocs) {\n                return pos = NO_MORE_DOCS;\n              }\n            }\n            ref.ints[ref.offset] = source.getInt(target);\n            return pos = target;\n          }\n        };\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","date":1291128345,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getEnum(AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getEnum(AttributeSource).mjava","sourceNew":"      @Override\n      public ValuesEnum getEnum(AttributeSource attrSource) throws IOException {\n        final MissingValue missing = getMissing();\n        return new SourceEnum(attrSource, type(), this, values.size()) {\n          private final LongsRef ref = attr.ints();\n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= numDocs)\n              return pos = NO_MORE_DOCS;\n            while (source.getInt(target) == missing.longValue) {\n              if (++target >= numDocs) {\n                return pos = NO_MORE_DOCS;\n              }\n            }\n            ref.ints[ref.offset] = source.getInt(target);\n            return pos = target;\n          }\n        };\n      }\n\n","sourceOld":"      @Override\n      public ValuesEnum getEnum(AttributeSource attrSource) throws IOException {\n        final MissingValues missing = getMissing();\n        return new SourceEnum(attrSource, type(), this, values.size()) {\n          private final LongsRef ref = attr.ints();\n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= numDocs)\n              return pos = NO_MORE_DOCS;\n            while (source.getInt(target) == missing.longValue) {\n              if (++target >= numDocs) {\n                return pos = NO_MORE_DOCS;\n              }\n            }\n            ref.ints[ref.offset] = source.getInt(target);\n            return pos = target;\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getEnum(AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getEnum(AttributeSource).mjava","sourceNew":"      @Override\n      public ValuesEnum getEnum(AttributeSource attrSource) throws IOException {\n        final MissingValue missing = getMissing();\n        return new SourceEnum(attrSource, type(), this, values.size()) {\n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= numDocs)\n              return pos = NO_MORE_DOCS;\n            while (source.getInt(target) == missing.longValue) {\n              if (++target >= numDocs) {\n                return pos = NO_MORE_DOCS;\n              }\n            }\n            intsRef.ints[intsRef.offset] = source.getInt(target);\n            return pos = target;\n          }\n        };\n      }\n\n","sourceOld":"      @Override\n      public ValuesEnum getEnum(AttributeSource attrSource) throws IOException {\n        final MissingValue missing = getMissing();\n        return new SourceEnum(attrSource, type(), this, values.size()) {\n          private final LongsRef ref = attr.ints();\n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= numDocs)\n              return pos = NO_MORE_DOCS;\n            while (source.getInt(target) == missing.longValue) {\n              if (++target >= numDocs) {\n                return pos = NO_MORE_DOCS;\n              }\n            }\n            ref.ints[ref.offset] = source.getInt(target);\n            return pos = target;\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2fc2eb37a1f19e90850f787d9e085950ebfa04","date":1291597075,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getEnum(AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getEnum(AttributeSource).mjava","sourceNew":"      @Override\n      public DocValuesEnum getEnum(AttributeSource attrSource) throws IOException {\n        final MissingValue missing = getMissing();\n        return new SourceEnum(attrSource, type(), this, values.size()) {\n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= numDocs)\n              return pos = NO_MORE_DOCS;\n            while (source.getInt(target) == missing.longValue) {\n              if (++target >= numDocs) {\n                return pos = NO_MORE_DOCS;\n              }\n            }\n            intsRef.ints[intsRef.offset] = source.getInt(target);\n            return pos = target;\n          }\n        };\n      }\n\n","sourceOld":"      @Override\n      public ValuesEnum getEnum(AttributeSource attrSource) throws IOException {\n        final MissingValue missing = getMissing();\n        return new SourceEnum(attrSource, type(), this, values.size()) {\n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= numDocs)\n              return pos = NO_MORE_DOCS;\n            while (source.getInt(target) == missing.longValue) {\n              if (++target >= numDocs) {\n                return pos = NO_MORE_DOCS;\n              }\n            }\n            intsRef.ints[intsRef.offset] = source.getInt(target);\n            return pos = target;\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getEnum(AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getEnum(AttributeSource).mjava","sourceNew":"      @Override\n      public DocValuesEnum getEnum(AttributeSource attrSource)\n          throws IOException {\n        final MissingValue missing = getMissing();\n        return new SourceEnum(attrSource, type(), this, values.size()) {\n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= numDocs)\n              return pos = NO_MORE_DOCS;\n            while (source.getInt(target) == missing.longValue) {\n              if (++target >= numDocs) {\n                return pos = NO_MORE_DOCS;\n              }\n            }\n            intsRef.ints[intsRef.offset] = source.getInt(target);\n            return pos = target;\n          }\n        };\n      }\n\n","sourceOld":"      @Override\n      public DocValuesEnum getEnum(AttributeSource attrSource) throws IOException {\n        final MissingValue missing = getMissing();\n        return new SourceEnum(attrSource, type(), this, values.size()) {\n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= numDocs)\n              return pos = NO_MORE_DOCS;\n            while (source.getInt(target) == missing.longValue) {\n              if (++target >= numDocs) {\n                return pos = NO_MORE_DOCS;\n              }\n            }\n            intsRef.ints[intsRef.offset] = source.getInt(target);\n            return pos = target;\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4034ca0f8f74fdf56e25be73822f2441fc1c1b46","date":1307111599,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.PackedIntsSource#getEnum(AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getEnum(AttributeSource).mjava","sourceNew":"      @Override\n      public DocValuesEnum getEnum(AttributeSource attrSource)\n          throws IOException {\n        return new SourceEnum(attrSource, type(), this, values.size()) {\n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= numDocs)\n              return pos = NO_MORE_DOCS;\n            intsRef.ints[intsRef.offset] = source.getInt(target);\n            return pos = target;\n          }\n        };\n      }\n\n","sourceOld":"      @Override\n      public DocValuesEnum getEnum(AttributeSource attrSource)\n          throws IOException {\n        final MissingValue missing = getMissing();\n        return new SourceEnum(attrSource, type(), this, values.size()) {\n          @Override\n          public int advance(int target) throws IOException {\n            if (target >= numDocs)\n              return pos = NO_MORE_DOCS;\n            while (source.getInt(target) == missing.longValue) {\n              if (++target >= numDocs) {\n                return pos = NO_MORE_DOCS;\n              }\n            }\n            intsRef.ints[intsRef.offset] = source.getInt(target);\n            return pos = target;\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"2d84736c4614acce6720851cbd2c823d7cd516e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["aa2fc2eb37a1f19e90850f787d9e085950ebfa04","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aa2fc2eb37a1f19e90850f787d9e085950ebfa04":["3bb13258feba31ab676502787ab2e1779f129b7a"],"3bb13258feba31ab676502787ab2e1779f129b7a":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["3bb13258feba31ab676502787ab2e1779f129b7a"],"2d84736c4614acce6720851cbd2c823d7cd516e4":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2d84736c4614acce6720851cbd2c823d7cd516e4","ab5cb6a74aefb78aa0569857970b9151dfe2e787","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46"],"aa2fc2eb37a1f19e90850f787d9e085950ebfa04":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"3bb13258feba31ab676502787ab2e1779f129b7a":["aa2fc2eb37a1f19e90850f787d9e085950ebfa04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}