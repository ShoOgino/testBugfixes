{"path":"lucene/misc/src/test/org/apache/lucene/index/TestSortingMergePolicy#testMethodsOverridden().mjava","commits":[{"id":"ab0282df0ae83725642c73e6ca867cf8f7d1c493","date":1437066918,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestSortingMergePolicy#testMethodsOverridden().mjava","pathOld":"/dev/null","sourceNew":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        SortingMergePolicy.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"SortingMergePolicy needs to override '\"+m+\"'\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9dec2d3920a73691e8110290418baf8efad1303","date":1437131425,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestSortingMergePolicy#testMethodsOverridden().mjava","pathOld":"/dev/null","sourceNew":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        SortingMergePolicy.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"SortingMergePolicy needs to override '\"+m+\"'\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e96253deb801879f3fc6373f5069f2debfe797d3","date":1454570664,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMergePolicyWrapper#testMethodsOverridden().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/TestSortingMergePolicy#testMethodsOverridden().mjava","sourceNew":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        MergePolicyWrapper.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"MergePolicyWrapper needs to override '\" + m + \"'\");\n      }\n    }\n  }\n\n","sourceOld":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        SortingMergePolicy.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"SortingMergePolicy needs to override '\"+m+\"'\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1704c078ec59838c9d95d5bf5738b393b537494","date":1454693901,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMergePolicyWrapper#testMethodsOverridden().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/TestSortingMergePolicy#testMethodsOverridden().mjava","sourceNew":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        MergePolicyWrapper.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"MergePolicyWrapper needs to override '\" + m + \"'\");\n      }\n    }\n  }\n\n","sourceOld":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        SortingMergePolicy.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"SortingMergePolicy needs to override '\"+m+\"'\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMergePolicyWrapper#testMethodsOverridden().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/TestSortingMergePolicy#testMethodsOverridden().mjava","sourceNew":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        MergePolicyWrapper.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"MergePolicyWrapper needs to override '\" + m + \"'\");\n      }\n    }\n  }\n\n","sourceOld":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        SortingMergePolicy.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"SortingMergePolicy needs to override '\"+m+\"'\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e96253deb801879f3fc6373f5069f2debfe797d3":["ab0282df0ae83725642c73e6ca867cf8f7d1c493"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["ab0282df0ae83725642c73e6ca867cf8f7d1c493","e96253deb801879f3fc6373f5069f2debfe797d3"],"ab0282df0ae83725642c73e6ca867cf8f7d1c493":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b1704c078ec59838c9d95d5bf5738b393b537494":["ab0282df0ae83725642c73e6ca867cf8f7d1c493","e96253deb801879f3fc6373f5069f2debfe797d3"],"f9dec2d3920a73691e8110290418baf8efad1303":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ab0282df0ae83725642c73e6ca867cf8f7d1c493"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e96253deb801879f3fc6373f5069f2debfe797d3"]},"commit2Childs":{"e96253deb801879f3fc6373f5069f2debfe797d3":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","b1704c078ec59838c9d95d5bf5738b393b537494","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab0282df0ae83725642c73e6ca867cf8f7d1c493","f9dec2d3920a73691e8110290418baf8efad1303"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"ab0282df0ae83725642c73e6ca867cf8f7d1c493":["e96253deb801879f3fc6373f5069f2debfe797d3","1e6acbaae7af722f17204ceccf0f7db5753eccf3","b1704c078ec59838c9d95d5bf5738b393b537494","f9dec2d3920a73691e8110290418baf8efad1303"],"b1704c078ec59838c9d95d5bf5738b393b537494":[],"f9dec2d3920a73691e8110290418baf8efad1303":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","b1704c078ec59838c9d95d5bf5738b393b537494","f9dec2d3920a73691e8110290418baf8efad1303","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}