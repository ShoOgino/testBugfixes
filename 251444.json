{"path":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#[K,V]_sort(HashMap[K,V]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#[K,V]_sort(HashMap[K,V]).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#[K,V]_sort(HashMap[K,V]).mjava","sourceNew":"  /** returns a view of the given map's entries, sorted ascending by key */\n  private static <K,V> Map.Entry<K,V>[] sort(HashMap<K,V> map) {\n    int size = map.size();\n    @SuppressWarnings(\"unchecked\")\n    Map.Entry<K,V>[] entries = new Map.Entry[size];\n    \n    Iterator<Map.Entry<K,V>> iter = map.entrySet().iterator();\n    for (int i=0; i < size; i++) {\n      entries[i] = iter.next();\n    }\n    \n    if (size > 1) ArrayUtil.quickSort(entries, termComparator);\n    return entries;\n  }\n\n","sourceOld":"  /** returns a view of the given map's entries, sorted ascending by key */\n  private static <K,V> Map.Entry<K,V>[] sort(HashMap<K,V> map) {\n    int size = map.size();\n    @SuppressWarnings(\"unchecked\")\n    Map.Entry<K,V>[] entries = new Map.Entry[size];\n    \n    Iterator<Map.Entry<K,V>> iter = map.entrySet().iterator();\n    for (int i=0; i < size; i++) {\n      entries[i] = iter.next();\n    }\n    \n    if (size > 1) ArrayUtil.quickSort(entries, termComparator);\n    return entries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcc555744b1a581a4beccd0b75f8d3fe49735a2f","date":1367588265,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#[K,V]_sort(HashMap[K,V]).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#[K,V]_sort(HashMap[K,V]).mjava","sourceNew":"  /** returns a view of the given map's entries, sorted ascending by key */\n  private static <K,V> Map.Entry<K,V>[] sort(HashMap<K,V> map) {\n    int size = map.size();\n    @SuppressWarnings(\"unchecked\")\n    Map.Entry<K,V>[] entries = new Map.Entry[size];\n    \n    Iterator<Map.Entry<K,V>> iter = map.entrySet().iterator();\n    for (int i=0; i < size; i++) {\n      entries[i] = iter.next();\n    }\n    \n    if (size > 1) ArrayUtil.introSort(entries, termComparator);\n    return entries;\n  }\n\n","sourceOld":"  /** returns a view of the given map's entries, sorted ascending by key */\n  private static <K,V> Map.Entry<K,V>[] sort(HashMap<K,V> map) {\n    int size = map.size();\n    @SuppressWarnings(\"unchecked\")\n    Map.Entry<K,V>[] entries = new Map.Entry[size];\n    \n    Iterator<Map.Entry<K,V>> iter = map.entrySet().iterator();\n    for (int i=0; i < size; i++) {\n      entries[i] = iter.next();\n    }\n    \n    if (size > 1) ArrayUtil.quickSort(entries, termComparator);\n    return entries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f657d9837900f4519ca1cbd5e98d86d4bba4dab","date":1417790596,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#[K,V]_sort(HashMap[K,V]).mjava","sourceNew":null,"sourceOld":"  /** returns a view of the given map's entries, sorted ascending by key */\n  private static <K,V> Map.Entry<K,V>[] sort(HashMap<K,V> map) {\n    int size = map.size();\n    @SuppressWarnings(\"unchecked\")\n    Map.Entry<K,V>[] entries = new Map.Entry[size];\n    \n    Iterator<Map.Entry<K,V>> iter = map.entrySet().iterator();\n    for (int i=0; i < size; i++) {\n      entries[i] = iter.next();\n    }\n    \n    if (size > 1) ArrayUtil.introSort(entries, termComparator);\n    return entries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dcc555744b1a581a4beccd0b75f8d3fe49735a2f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0f657d9837900f4519ca1cbd5e98d86d4bba4dab":["dcc555744b1a581a4beccd0b75f8d3fe49735a2f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f657d9837900f4519ca1cbd5e98d86d4bba4dab"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["dcc555744b1a581a4beccd0b75f8d3fe49735a2f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"dcc555744b1a581a4beccd0b75f8d3fe49735a2f":["0f657d9837900f4519ca1cbd5e98d86d4bba4dab"],"0f657d9837900f4519ca1cbd5e98d86d4bba4dab":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}