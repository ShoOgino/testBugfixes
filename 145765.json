{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"072f211dfa8387028bb978d128c35bf9a450bbbf","date":1406041363,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","bugFix":["401b0b7bbdbac0027e5b44890c4131d808ec2c9d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"072f211dfa8387028bb978d128c35bf9a450bbbf":["c26f00b574427b55127e869b935845554afde1fa"],"abb23fcc2461782ab204e61213240feb77d355aa":["072f211dfa8387028bb978d128c35bf9a450bbbf"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["abb23fcc2461782ab204e61213240feb77d355aa"]},"commit2Childs":{"072f211dfa8387028bb978d128c35bf9a450bbbf":["abb23fcc2461782ab204e61213240feb77d355aa"],"abb23fcc2461782ab204e61213240feb77d355aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["072f211dfa8387028bb978d128c35bf9a450bbbf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}