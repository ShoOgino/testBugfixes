{"path":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#numericToString(FieldType,long).mjava","commits":[{"id":"33fd39ca1330aa2ab1dc6bfc1b46ca450f71d905","date":1490770371,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#numericToString(FieldType,long).mjava","pathOld":"/dev/null","sourceNew":"  private String numericToString(FieldType fieldType, long val) {\n    if (fieldType.getNumberType() != null) {\n      switch (fieldType.getNumberType()) {\n        case INTEGER:\n        case LONG:\n          return Long.toString(val);\n        case FLOAT:\n          return Float.toString(Float.intBitsToFloat((int)val));\n        case DOUBLE:\n          return Double.toString(Double.longBitsToDouble(val));\n      }\n    }\n    throw new IllegalArgumentException(\"FieldType must be INT,LONG,FLOAT,DOUBLE found \" + fieldType);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeb4c36addd0851d25aaa43e38e9beac5a8197d0","date":1490873947,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#numericToString(FieldType,long).mjava","pathOld":"/dev/null","sourceNew":"  private String numericToString(FieldType fieldType, long val) {\n    if (fieldType.getNumberType() != null) {\n      switch (fieldType.getNumberType()) {\n        case INTEGER:\n        case LONG:\n          return Long.toString(val);\n        case FLOAT:\n          return Float.toString(Float.intBitsToFloat((int)val));\n        case DOUBLE:\n          return Double.toString(Double.longBitsToDouble(val));\n      }\n    }\n    throw new IllegalArgumentException(\"FieldType must be INT,LONG,FLOAT,DOUBLE found \" + fieldType);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b107346d6f511cbb411725ae85fa167de3cc916","date":1518457408,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#numericToString(FieldType,long).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#numericToString(FieldType,long).mjava","sourceNew":"  private String numericToString(FieldType fieldType, long val) {\n    if (fieldType.getNumberType() != null) {\n      switch (fieldType.getNumberType()) {\n        case INTEGER:\n        case LONG:\n          return Long.toString(val);\n        case FLOAT:\n          return Float.toString(Float.intBitsToFloat((int)val));\n        case DOUBLE:\n          return Double.toString(Double.longBitsToDouble(val));\n        case DATE:\n          break;\n      }\n    }\n    throw new IllegalArgumentException(\"FieldType must be INT,LONG,FLOAT,DOUBLE found \" + fieldType);\n  }\n\n","sourceOld":"  private String numericToString(FieldType fieldType, long val) {\n    if (fieldType.getNumberType() != null) {\n      switch (fieldType.getNumberType()) {\n        case INTEGER:\n        case LONG:\n          return Long.toString(val);\n        case FLOAT:\n          return Float.toString(Float.intBitsToFloat((int)val));\n        case DOUBLE:\n          return Double.toString(Double.longBitsToDouble(val));\n      }\n    }\n    throw new IllegalArgumentException(\"FieldType must be INT,LONG,FLOAT,DOUBLE found \" + fieldType);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfcdec9fcf0409223f35c5ec3bc14094314941b4","date":1518533599,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#numericToString(FieldType,long).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#numericToString(FieldType,long).mjava","sourceNew":"  private String numericToString(FieldType fieldType, long val) {\n    if (fieldType.getNumberType() != null) {\n      switch (fieldType.getNumberType()) {\n        case INTEGER:\n        case LONG:\n          return Long.toString(val);\n        case FLOAT:\n          return Float.toString(Float.intBitsToFloat((int)val));\n        case DOUBLE:\n          return Double.toString(Double.longBitsToDouble(val));\n        case DATE:\n          break;\n      }\n    }\n    throw new IllegalArgumentException(\"FieldType must be INT,LONG,FLOAT,DOUBLE found \" + fieldType);\n  }\n\n","sourceOld":"  private String numericToString(FieldType fieldType, long val) {\n    if (fieldType.getNumberType() != null) {\n      switch (fieldType.getNumberType()) {\n        case INTEGER:\n        case LONG:\n          return Long.toString(val);\n        case FLOAT:\n          return Float.toString(Float.intBitsToFloat((int)val));\n        case DOUBLE:\n          return Double.toString(Double.longBitsToDouble(val));\n      }\n    }\n    throw new IllegalArgumentException(\"FieldType must be INT,LONG,FLOAT,DOUBLE found \" + fieldType);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeb4c36addd0851d25aaa43e38e9beac5a8197d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b107346d6f511cbb411725ae85fa167de3cc916":["33fd39ca1330aa2ab1dc6bfc1b46ca450f71d905"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["33fd39ca1330aa2ab1dc6bfc1b46ca450f71d905","7b107346d6f511cbb411725ae85fa167de3cc916"],"33fd39ca1330aa2ab1dc6bfc1b46ca450f71d905":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"]},"commit2Childs":{"eeb4c36addd0851d25aaa43e38e9beac5a8197d0":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeb4c36addd0851d25aaa43e38e9beac5a8197d0","33fd39ca1330aa2ab1dc6bfc1b46ca450f71d905"],"7b107346d6f511cbb411725ae85fa167de3cc916":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"33fd39ca1330aa2ab1dc6bfc1b46ca450f71d905":["7b107346d6f511cbb411725ae85fa167de3cc916","bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["eeb4c36addd0851d25aaa43e38e9beac5a8197d0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}