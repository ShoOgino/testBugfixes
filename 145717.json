{"path":"solr/core/src/test/org/apache/solr/handler/MoreLikeThisHandlerTest#testMultifieldSimilarity().mjava","commits":[{"id":"0c49644277f679076861896c254bd95b97909b74","date":1527241182,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/MoreLikeThisHandlerTest#testMultifieldSimilarity().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultifieldSimilarity() throws Exception\n  {\n    SolrCore core = h.getCore();\n    MoreLikeThisHandler mlt = new MoreLikeThisHandler();\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n\n    assertU(adoc(\"id\", \"1\", \"name\", \"aaa bbb ccc\", \"subword\", \"        zzz\"));\n    assertU(adoc(\"id\", \"2\", \"name\", \"    bbb ccc\", \"subword\", \"    bbb zzz\"));\n    assertU(adoc(\"id\", \"3\", \"name\", \"        ccc\", \"subword\", \"aaa bbb zzz\"));\n    assertU(adoc(\"id\", \"4\", \"name\", \"        ccc\", \"subword\", \"    bbb    \"));\n    assertU(commit());\n\n    params.set(CommonParams.QT, \"/mlt\");\n    params.set(MoreLikeThisParams.MLT, \"true\");\n    params.set(MoreLikeThisParams.SIMILARITY_FIELDS, \"name,subword\");\n    params.set(MoreLikeThisParams.INTERESTING_TERMS, \"details\");\n    params.set(MoreLikeThisParams.MIN_TERM_FREQ, \"1\");\n    params.set(MoreLikeThisParams.MIN_DOC_FREQ, \"2\");\n    params.set(MoreLikeThisParams.BOOST, true);\n    params.set(\"indent\", \"true\");\n\n    try (SolrQueryRequestBase req = new SolrQueryRequestBase(core, params) {}) {\n      ArrayList<ContentStream> streams = new ArrayList<>(2);\n      streams.add(new ContentStreamBase.StringStream(\"bbb\", \"zzz\"));\n      req.setContentStreams(streams);\n\n      // Make sure we have terms from both fields in the interestingTerms array and all documents have been\n      // retrieved as matching.\n      assertQ(req,\n          \"//lst[@name = 'interestingTerms']/float[@name = 'subword:bbb']\",\n          \"//lst[@name = 'interestingTerms']/float[@name = 'name:bbb']\",\n          \"//result[@name = 'response' and @numFound = '4']\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/MoreLikeThisHandlerTest#testMultifieldSimilarity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/MoreLikeThisHandlerTest#testMultifieldSimilarity().mjava","sourceNew":"  @Test\n  public void testMultifieldSimilarity() throws Exception\n  {\n    SolrCore core = h.getCore();\n    ModifiableSolrParams params = new ModifiableSolrParams();\n\n    assertU(adoc(\"id\", \"1\", \"name\", \"aaa bbb ccc\", \"subword\", \"        zzz\"));\n    assertU(adoc(\"id\", \"2\", \"name\", \"    bbb ccc\", \"subword\", \"    bbb zzz\"));\n    assertU(adoc(\"id\", \"3\", \"name\", \"        ccc\", \"subword\", \"aaa bbb zzz\"));\n    assertU(adoc(\"id\", \"4\", \"name\", \"        ccc\", \"subword\", \"    bbb    \"));\n    assertU(commit());\n\n    params.set(CommonParams.QT, \"/mlt\");\n    params.set(MoreLikeThisParams.MLT, \"true\");\n    params.set(MoreLikeThisParams.SIMILARITY_FIELDS, \"name,subword\");\n    params.set(MoreLikeThisParams.INTERESTING_TERMS, \"details\");\n    params.set(MoreLikeThisParams.MIN_TERM_FREQ, \"1\");\n    params.set(MoreLikeThisParams.MIN_DOC_FREQ, \"2\");\n    params.set(MoreLikeThisParams.BOOST, true);\n    params.set(\"indent\", \"true\");\n\n    try (SolrQueryRequestBase req = new SolrQueryRequestBase(core, params) {}) {\n      ArrayList<ContentStream> streams = new ArrayList<>(2);\n      streams.add(new ContentStreamBase.StringStream(\"bbb\", \"zzz\"));\n      req.setContentStreams(streams);\n\n      // Make sure we have terms from both fields in the interestingTerms array and all documents have been\n      // retrieved as matching.\n      assertQ(req,\n          \"//lst[@name = 'interestingTerms']/float[@name = 'subword:bbb']\",\n          \"//lst[@name = 'interestingTerms']/float[@name = 'name:bbb']\",\n          \"//result[@name = 'response' and @numFound = '4']\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultifieldSimilarity() throws Exception\n  {\n    SolrCore core = h.getCore();\n    MoreLikeThisHandler mlt = new MoreLikeThisHandler();\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n\n    assertU(adoc(\"id\", \"1\", \"name\", \"aaa bbb ccc\", \"subword\", \"        zzz\"));\n    assertU(adoc(\"id\", \"2\", \"name\", \"    bbb ccc\", \"subword\", \"    bbb zzz\"));\n    assertU(adoc(\"id\", \"3\", \"name\", \"        ccc\", \"subword\", \"aaa bbb zzz\"));\n    assertU(adoc(\"id\", \"4\", \"name\", \"        ccc\", \"subword\", \"    bbb    \"));\n    assertU(commit());\n\n    params.set(CommonParams.QT, \"/mlt\");\n    params.set(MoreLikeThisParams.MLT, \"true\");\n    params.set(MoreLikeThisParams.SIMILARITY_FIELDS, \"name,subword\");\n    params.set(MoreLikeThisParams.INTERESTING_TERMS, \"details\");\n    params.set(MoreLikeThisParams.MIN_TERM_FREQ, \"1\");\n    params.set(MoreLikeThisParams.MIN_DOC_FREQ, \"2\");\n    params.set(MoreLikeThisParams.BOOST, true);\n    params.set(\"indent\", \"true\");\n\n    try (SolrQueryRequestBase req = new SolrQueryRequestBase(core, params) {}) {\n      ArrayList<ContentStream> streams = new ArrayList<>(2);\n      streams.add(new ContentStreamBase.StringStream(\"bbb\", \"zzz\"));\n      req.setContentStreams(streams);\n\n      // Make sure we have terms from both fields in the interestingTerms array and all documents have been\n      // retrieved as matching.\n      assertQ(req,\n          \"//lst[@name = 'interestingTerms']/float[@name = 'subword:bbb']\",\n          \"//lst[@name = 'interestingTerms']/float[@name = 'name:bbb']\",\n          \"//result[@name = 'response' and @numFound = '4']\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba055e19afc289adcb5bedaf68513793a7254012":["0c49644277f679076861896c254bd95b97909b74"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0c49644277f679076861896c254bd95b97909b74":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba055e19afc289adcb5bedaf68513793a7254012"]},"commit2Childs":{"ba055e19afc289adcb5bedaf68513793a7254012":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0c49644277f679076861896c254bd95b97909b74"],"0c49644277f679076861896c254bd95b97909b74":["ba055e19afc289adcb5bedaf68513793a7254012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}