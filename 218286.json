{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","sourceNew":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","sourceOld":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","sourceNew":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","sourceOld":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d90de7424532c309a28f841ccfbf21899a0d1f4","date":1493841034,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","sourceNew":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1) + 1;\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","sourceOld":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","bugFix":["8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","sourceNew":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1) + 1;\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","sourceOld":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["af2638813028b254a88b418ebeafb541afb49653","8d90de7424532c309a28f841ccfbf21899a0d1f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8d90de7424532c309a28f841ccfbf21899a0d1f4":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d90de7424532c309a28f841ccfbf21899a0d1f4"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["e9017cf144952056066919f1ebc7897ff9bd71b1","8d90de7424532c309a28f841ccfbf21899a0d1f4"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"8d90de7424532c309a28f841ccfbf21899a0d1f4":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}