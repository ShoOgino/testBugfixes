{"path":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testStressLocksNativeFSLockFactory().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testStressLocksNativeFSLockFactory().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testStressLocksNativeFSLockFactory().mjava","sourceNew":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised, but use\n    // NativeFSLockFactory:\n    public void testStressLocksNativeFSLockFactory() throws Exception {\n      File dir = _TestUtil.getTempDir(\"index.TestLockFactory7\");\n      _testStressLocks(new NativeFSLockFactory(dir), dir);\n    }\n\n","sourceOld":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised, but use\n    // NativeFSLockFactory:\n    public void testStressLocksNativeFSLockFactory() throws Exception {\n      File dir = _TestUtil.getTempDir(\"index.TestLockFactory7\");\n      _testStressLocks(new NativeFSLockFactory(dir), dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be580b58bcc650d428f3f22de81cadcf51d650a","date":1325279655,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testStressLocksNativeFSLockFactory().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testStressLocksNativeFSLockFactory().mjava","sourceNew":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised, but use\n    // NativeFSLockFactory:\n    @Nightly\n    public void testStressLocksNativeFSLockFactory() throws Exception {\n      File dir = _TestUtil.getTempDir(\"index.TestLockFactory7\");\n      _testStressLocks(new NativeFSLockFactory(dir), dir);\n    }\n\n","sourceOld":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised, but use\n    // NativeFSLockFactory:\n    public void testStressLocksNativeFSLockFactory() throws Exception {\n      File dir = _TestUtil.getTempDir(\"index.TestLockFactory7\");\n      _testStressLocks(new NativeFSLockFactory(dir), dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testStressLocksNativeFSLockFactory().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testStressLocksNativeFSLockFactory().mjava","sourceNew":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised, but use\n    // NativeFSLockFactory:\n    @Nightly\n    public void testStressLocksNativeFSLockFactory() throws Exception {\n      File dir = _TestUtil.getTempDir(\"index.TestLockFactory7\");\n      _testStressLocks(new NativeFSLockFactory(dir), dir);\n    }\n\n","sourceOld":"    // Verify: do stress test, by opening IndexReaders and\n    // IndexWriters over & over in 2 threads and making sure\n    // no unexpected exceptions are raised, but use\n    // NativeFSLockFactory:\n    @Nightly\n    public void testStressLocksNativeFSLockFactory() throws Exception {\n      File dir = _TestUtil.getTempDir(\"index.TestLockFactory7\");\n      _testStressLocks(new NativeFSLockFactory(dir), dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8be580b58bcc650d428f3f22de81cadcf51d650a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}