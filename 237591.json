{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/LegacyDocValuesIterables#normsIterable(FieldInfo,NormsProducer,int).mjava","commits":[{"id":"701377879d61cf6e2de072d11c76089338c0c3b2","date":1542374674,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/LegacyDocValuesIterables#normsIterable(FieldInfo,NormsProducer,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/LegacyDocValuesIterables#normsIterable(FieldInfo,NormsProducer,int).mjava","sourceNew":"  /** Converts norms into {@code Iterable&lt;Number&gt;}.\n   *\n   * @deprecated Consume {@link NumericDocValues} instead. */\n  @Deprecated\n  public static Iterable<Number> normsIterable(final FieldInfo field,\n      final NormsProducer normsProducer, final int maxDoc) {\n\n    return new Iterable<Number>() {\n\n      @Override\n      public Iterator<Number> iterator() {\n\n        final NumericDocValues values;\n        try {\n          values = normsProducer.getNorms(field);\n        } catch (IOException ioe) {\n          throw new RuntimeException(ioe);\n        }\n    \n        return new Iterator<Number>() {\n          private int docIDUpto = -1;\n\n          @Override\n          public boolean hasNext() {\n            return docIDUpto+1 < maxDoc;\n          }\n\n          @Override\n          public Number next() {\n            docIDUpto++;\n            if (docIDUpto > values.docID()) {\n              try {\n                values.nextDoc();\n              } catch (IOException ioe) {\n                throw new RuntimeException(ioe);\n              }\n            }\n            Number result;\n            if (docIDUpto == values.docID()) {\n              try {\n                result = values.longValue();\n              } catch (IOException ioe) {\n                throw new RuntimeException(ioe);\n              }\n            } else {\n              // Unlike NumericDocValues, norms used to return 0 for missing values:\n              result = 0;\n            }\n            return result;\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  /** Converts norms into {@code Iterable&lt;Number&gt;}.\n   *\n   * @deprecated Consume {@link NumericDocValues} instead. */\n  @Deprecated\n  public static Iterable<Number> normsIterable(final FieldInfo field,\n      final NormsProducer normsProducer, final int maxDoc) {\n\n    return new Iterable<Number>() {\n\n      @Override\n      public Iterator<Number> iterator() {\n\n        final NumericDocValues values;\n        try {\n          values = normsProducer.getNorms(field);\n        } catch (IOException ioe) {\n          throw new RuntimeException(ioe);\n        }\n    \n        return new Iterator<Number>() {\n          private int docIDUpto = -1;\n\n          @Override\n          public boolean hasNext() {\n            return docIDUpto+1 < maxDoc;\n          }\n\n          @Override\n          public Number next() {\n            docIDUpto++;\n            if (docIDUpto > values.docID()) {\n              try {\n                values.nextDoc();\n              } catch (IOException ioe) {\n                throw new RuntimeException(ioe);\n              }\n            }\n            Number result;\n            if (docIDUpto == values.docID()) {\n              try {\n                result = values.longValue();\n              } catch (IOException ioe) {\n                throw new RuntimeException(ioe);\n              }\n            } else {\n              // Unlike NumericDocValues, norms used to return 0 for missing values:\n              result = 0;\n            }\n            return result;\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"701377879d61cf6e2de072d11c76089338c0c3b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["701377879d61cf6e2de072d11c76089338c0c3b2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["701377879d61cf6e2de072d11c76089338c0c3b2"],"701377879d61cf6e2de072d11c76089338c0c3b2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}