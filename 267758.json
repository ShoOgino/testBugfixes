{"path":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial2#testBBox().mjava","commits":[{"id":"aa75c94645bfc8da99a503e2018fd71899cbf9f2","date":1404877329,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial2#testBBox().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBBox() throws Exception {\n    String fieldName = \"bbox\";\n    assertU(adoc(\"id\", \"0\"));//nothing\n    assertU(adoc(\"id\", \"1\", fieldName, \"ENVELOPE(-10, 20, 15, 10)\"));\n    assertU(adoc(\"id\", \"2\", fieldName, \"ENVELOPE(22, 22, 10, 10)\"));//pt\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=overlapRatio \" +\n                \"queryTargetProportion=0.25}\" +\n                \"Intersects(ENVELOPE(10,25,12,10))\",\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='2'\",\n        \"/response/docs/[0]/score==0.75]\",\n        \"/response/docs/[1]/id=='1'\",\n        \"/response/docs/[1]/score==0.26666668]\",\n        \"/response/docs/[2]/id=='0'\",\n        \"/response/docs/[2]/score==0.0\"\n        );\n\n    //minSideLength with point query\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=overlapRatio \" +\n                \"queryTargetProportion=0.5 minSideLength=1}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/score==0.50333333]\"//just over 0.5\n    );\n\n    //area2D\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=area2D}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\" ,\n        \"/response/docs/[0]/score==\" + (30f * 5f) + \"]\"//150\n    );\n    //area (not 2D)\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=area}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\" ,\n        \"/response/docs/[0]/score==\" + 146.39793f + \"]\"//a bit less than 150\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2a44d91ba112b5986f9411955e116445c92a37f0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a44d91ba112b5986f9411955e116445c92a37f0","date":1416887019,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial2#testBBox().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial2#testBBox().mjava","sourceNew":"  @Test\n  public void testBBox() throws Exception {\n    String fieldName = random().nextBoolean() ? \"bbox\" : \"bboxD_dynamic\";\n    assertU(adoc(\"id\", \"0\"));//nothing\n    assertU(adoc(\"id\", \"1\", fieldName, \"ENVELOPE(-10, 20, 15, 10)\"));\n    assertU(adoc(\"id\", \"2\", fieldName, \"ENVELOPE(22, 22, 10, 10)\"));//pt\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=overlapRatio \" +\n                \"queryTargetProportion=0.25}\" +\n                \"Intersects(ENVELOPE(10,25,12,10))\",\n            \"fl\", \"*,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='2'\",\n        \"/response/docs/[0]/score==0.75]\",\n        \"/response/docs/[1]/id=='1'\",\n        \"/response/docs/[1]/score==0.26666668]\",\n        \"/response/docs/[2]/id=='0'\",\n        \"/response/docs/[2]/score==0.0\",\n\n        \"/response/docs/[1]/\" + fieldName + \"=='ENVELOPE(-10, 20, 15, 10)'\"//stored value\n        );\n\n    //minSideLength with point query\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=overlapRatio \" +\n                \"queryTargetProportion=0.5 minSideLength=1}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/score==0.50333333]\"//just over 0.5\n    );\n\n    //area2D\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=area2D}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\" ,\n        \"/response/docs/[0]/score==\" + (30f * 5f) + \"]\"//150\n    );\n    //area (not 2D)\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=area}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\" ,\n        \"/response/docs/[0]/score==\" + 146.39793f + \"]\"//a bit less than 150\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testBBox() throws Exception {\n    String fieldName = \"bbox\";\n    assertU(adoc(\"id\", \"0\"));//nothing\n    assertU(adoc(\"id\", \"1\", fieldName, \"ENVELOPE(-10, 20, 15, 10)\"));\n    assertU(adoc(\"id\", \"2\", fieldName, \"ENVELOPE(22, 22, 10, 10)\"));//pt\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=overlapRatio \" +\n                \"queryTargetProportion=0.25}\" +\n                \"Intersects(ENVELOPE(10,25,12,10))\",\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='2'\",\n        \"/response/docs/[0]/score==0.75]\",\n        \"/response/docs/[1]/id=='1'\",\n        \"/response/docs/[1]/score==0.26666668]\",\n        \"/response/docs/[2]/id=='0'\",\n        \"/response/docs/[2]/score==0.0\"\n        );\n\n    //minSideLength with point query\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=overlapRatio \" +\n                \"queryTargetProportion=0.5 minSideLength=1}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/score==0.50333333]\"//just over 0.5\n    );\n\n    //area2D\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=area2D}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\" ,\n        \"/response/docs/[0]/score==\" + (30f * 5f) + \"]\"//150\n    );\n    //area (not 2D)\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=area}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\" ,\n        \"/response/docs/[0]/score==\" + 146.39793f + \"]\"//a bit less than 150\n    );\n  }\n\n","bugFix":["aa75c94645bfc8da99a503e2018fd71899cbf9f2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0caf86b778fe22b63626ba65f24f7b69c5c5b384","date":1432213473,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial2#testBBox().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial2#testBBox().mjava","sourceNew":"  @Test\n  public void testBBox() throws Exception {\n    String fieldName = random().nextBoolean() ? \"bbox\" : \"bboxD_dynamic\";\n    assertU(adoc(\"id\", \"0\"));//nothing\n    assertU(adoc(\"id\", \"1\", fieldName, \"ENVELOPE(-10, 20, 15, 10)\"));\n    assertU(adoc(\"id\", \"2\", fieldName, \"ENVELOPE(22, 22, 10, 10)\"));//pt\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=overlapRatio \" +\n                \"queryTargetProportion=0.25}\" +\n                \"Intersects(ENVELOPE(10,25,12,10))\",\n            \"fl\", \"*,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='2'\",\n        \"/response/docs/[0]/score==0.75]\",\n        \"/response/docs/[1]/id=='1'\",\n        \"/response/docs/[1]/score==0.26666668]\",\n        \"/response/docs/[2]/id=='0'\",\n        \"/response/docs/[2]/score==0.0\",\n\n        \"/response/docs/[1]/\" + fieldName + \"=='ENVELOPE(-10, 20, 15, 10)'\"//stored value\n        );\n\n    //minSideLength with point query\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=overlapRatio \" +\n                \"queryTargetProportion=0.5 minSideLength=1}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/score==0.50333333]\"//just over 0.5\n    );\n\n    //area2D\n    assertJQ(req(\"q\", \"{!field f=\" + fieldName + \" filter=false score=area2D}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/score==\" + (30f * 5f) + \"]\"//150\n    );\n    //area (not 2D)\n    assertJQ(req(\"q\", \"{!field f=\" + fieldName + \" filter=false score=area}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/score==\" + 146.39793f + \"]\"//a bit less than 150\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testBBox() throws Exception {\n    String fieldName = random().nextBoolean() ? \"bbox\" : \"bboxD_dynamic\";\n    assertU(adoc(\"id\", \"0\"));//nothing\n    assertU(adoc(\"id\", \"1\", fieldName, \"ENVELOPE(-10, 20, 15, 10)\"));\n    assertU(adoc(\"id\", \"2\", fieldName, \"ENVELOPE(22, 22, 10, 10)\"));//pt\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=overlapRatio \" +\n                \"queryTargetProportion=0.25}\" +\n                \"Intersects(ENVELOPE(10,25,12,10))\",\n            \"fl\", \"*,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='2'\",\n        \"/response/docs/[0]/score==0.75]\",\n        \"/response/docs/[1]/id=='1'\",\n        \"/response/docs/[1]/score==0.26666668]\",\n        \"/response/docs/[2]/id=='0'\",\n        \"/response/docs/[2]/score==0.0\",\n\n        \"/response/docs/[1]/\" + fieldName + \"=='ENVELOPE(-10, 20, 15, 10)'\"//stored value\n        );\n\n    //minSideLength with point query\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=overlapRatio \" +\n                \"queryTargetProportion=0.5 minSideLength=1}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/score==0.50333333]\"//just over 0.5\n    );\n\n    //area2D\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=area2D}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\" ,\n        \"/response/docs/[0]/score==\" + (30f * 5f) + \"]\"//150\n    );\n    //area (not 2D)\n    assertJQ(req(\"q\", \"{!field f=\"+fieldName+\" filter=false score=area}\" +\n                \"Intersects(ENVELOPE(0,0,12,12))\",//pt\n            \"fl\", \"id,score\",\n            \"debug\", \"results\"),//explain info\n        \"/response/docs/[0]/id=='1'\" ,\n        \"/response/docs/[0]/score==\" + 146.39793f + \"]\"//a bit less than 150\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aa75c94645bfc8da99a503e2018fd71899cbf9f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2a44d91ba112b5986f9411955e116445c92a37f0":["aa75c94645bfc8da99a503e2018fd71899cbf9f2"],"0caf86b778fe22b63626ba65f24f7b69c5c5b384":["2a44d91ba112b5986f9411955e116445c92a37f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0caf86b778fe22b63626ba65f24f7b69c5c5b384"]},"commit2Childs":{"aa75c94645bfc8da99a503e2018fd71899cbf9f2":["2a44d91ba112b5986f9411955e116445c92a37f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa75c94645bfc8da99a503e2018fd71899cbf9f2"],"2a44d91ba112b5986f9411955e116445c92a37f0":["0caf86b778fe22b63626ba65f24f7b69c5c5b384"],"0caf86b778fe22b63626ba65f24f7b69c5c5b384":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}