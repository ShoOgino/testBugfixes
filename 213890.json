{"path":"lucene/src/java/org/apache/lucene/analysis/Analyzer#getOffsetGap(IndexableField).mjava","commits":[{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/Analyzer#getOffsetGap(IndexableField).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/Analyzer#getOffsetGap(Fieldable).mjava","sourceNew":"  /**\n   * Just like {@link #getPositionIncrementGap}, except for\n   * Token offsets instead.  By default this returns 1 for\n   * tokenized fields and, as if the fields were joined\n   * with an extra space character, and 0 for un-tokenized\n   * fields.  This method is only called if the field\n   * produced at least one token for indexing.\n   *\n   * @param field the field just indexed\n   * @return offset gap, added to the next token emitted from {@link #tokenStream(String,Reader)}\n   */\n  public int getOffsetGap(IndexableField field) {\n    if (field.tokenized()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * Just like {@link #getPositionIncrementGap}, except for\n   * Token offsets instead.  By default this returns 1 for\n   * tokenized fields and, as if the fields were joined\n   * with an extra space character, and 0 for un-tokenized\n   * fields.  This method is only called if the field\n   * produced at least one token for indexing.\n   *\n   * @param field the field just indexed\n   * @return offset gap, added to the next token emitted from {@link #tokenStream(String,Reader)}\n   */\n  public int getOffsetGap(Fieldable field) {\n    if (field.isTokenized())\n      return 1;\n    else\n      return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6eb141f80638abdb6ffaa5149877f36ea39b6ad5","date":1315714072,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/Analyzer#getOffsetGap(IndexableField).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/Analyzer#getOffsetGap(IndexableField).mjava","sourceNew":"  /**\n   * Just like {@link #getPositionIncrementGap}, except for\n   * Token offsets instead.  By default this returns 1 for\n   * tokenized fields and, as if the fields were joined\n   * with an extra space character, and 0 for un-tokenized\n   * fields.  This method is only called if the field\n   * produced at least one token for indexing.\n   *\n   * @param field the field just indexed\n   * @return offset gap, added to the next token emitted from {@link #tokenStream(String,Reader)}\n   */\n  public int getOffsetGap(IndexableField field) {\n    if (field.fieldType().tokenized()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * Just like {@link #getPositionIncrementGap}, except for\n   * Token offsets instead.  By default this returns 1 for\n   * tokenized fields and, as if the fields were joined\n   * with an extra space character, and 0 for un-tokenized\n   * fields.  This method is only called if the field\n   * produced at least one token for indexing.\n   *\n   * @param field the field just indexed\n   * @return offset gap, added to the next token emitted from {@link #tokenStream(String,Reader)}\n   */\n  public int getOffsetGap(IndexableField field) {\n    if (field.tokenized()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer#getOffsetGap(IndexableField).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/Analyzer#getOffsetGap(IndexableField).mjava","sourceNew":"  /**\n   * Just like {@link #getPositionIncrementGap}, except for\n   * Token offsets instead.  By default this returns 1 for\n   * tokenized fields and, as if the fields were joined\n   * with an extra space character, and 0 for un-tokenized\n   * fields.  This method is only called if the field\n   * produced at least one token for indexing.\n   *\n   * @param field the field just indexed\n   * @return offset gap, added to the next token emitted from {@link #tokenStream(String,Reader)}\n   */\n  public int getOffsetGap(IndexableField field) {\n    if (field.fieldType().tokenized()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * Just like {@link #getPositionIncrementGap}, except for\n   * Token offsets instead.  By default this returns 1 for\n   * tokenized fields and, as if the fields were joined\n   * with an extra space character, and 0 for un-tokenized\n   * fields.  This method is only called if the field\n   * produced at least one token for indexing.\n   *\n   * @param field the field just indexed\n   * @return offset gap, added to the next token emitted from {@link #tokenStream(String,Reader)}\n   */\n  public int getOffsetGap(IndexableField field) {\n    if (field.fieldType().tokenized()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6eb141f80638abdb6ffaa5149877f36ea39b6ad5"],"6eb141f80638abdb6ffaa5149877f36ea39b6ad5":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6eb141f80638abdb6ffaa5149877f36ea39b6ad5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["6eb141f80638abdb6ffaa5149877f36ea39b6ad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}