{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#update(BytesRef,long,BytesRef).mjava","commits":[{"id":"a371aa649cc243e82cb8677ca960a1e0232ecedf","date":1393605574,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#update(BytesRef,long,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Updates a previous suggestion, matching the exact same\n   *  text as before.  Use this to change the weight or\n   *  payload of an already added suggstion.  If you know\n   *  this text is not already present you can use {@link\n   *  #add} instead.  After adding or updating a batch of\n   *  new suggestions, you must call {@link #refresh} in the\n   *  end in order to see the suggestions in {@link #lookup} */\n  public void update(BytesRef text, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    doc.add(new Field(\"textgrams\", textString, ft));\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    writer.updateDocument(new Term(EXACT_TEXT_FIELD_NAME, textString), doc);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b","date":1395588343,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#update(BytesRef,Set[BytesRef],long,BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#update(BytesRef,long,BytesRef).mjava","sourceNew":"  /** Updates a previous suggestion, matching the exact same\n   *  text as before.  Use this to change the weight or\n   *  payload of an already added suggstion.  If you know\n   *  this text is not already present you can use {@link\n   *  #add} instead.  After adding or updating a batch of\n   *  new suggestions, you must call {@link #refresh} in the\n   *  end in order to see the suggestions in {@link #lookup} */\n  public void update(BytesRef text, Set<BytesRef> contexts, long weight, BytesRef payload) throws IOException {\n    writer.updateDocument(new Term(EXACT_TEXT_FIELD_NAME, text.utf8ToString()),\n                          buildDocument(text, contexts, weight, payload));\n  }\n\n","sourceOld":"  /** Updates a previous suggestion, matching the exact same\n   *  text as before.  Use this to change the weight or\n   *  payload of an already added suggstion.  If you know\n   *  this text is not already present you can use {@link\n   *  #add} instead.  After adding or updating a batch of\n   *  new suggestions, you must call {@link #refresh} in the\n   *  end in order to see the suggestions in {@link #lookup} */\n  public void update(BytesRef text, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    doc.add(new Field(\"textgrams\", textString, ft));\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    writer.updateDocument(new Term(EXACT_TEXT_FIELD_NAME, textString), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b":["a371aa649cc243e82cb8677ca960a1e0232ecedf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a371aa649cc243e82cb8677ca960a1e0232ecedf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b"]},"commit2Childs":{"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a371aa649cc243e82cb8677ca960a1e0232ecedf"],"a371aa649cc243e82cb8677ca960a1e0232ecedf":["58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}