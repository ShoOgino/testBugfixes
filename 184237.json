{"path":"src/java/org/apache/lucene/analysis/Token#setTermBuffer(String,int,int).mjava","commits":[{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#setTermBuffer(String,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Copies the contents of buffer, starting at offset and continuing\n   *  for length characters, into the termBuffer array.\n   *  @param buffer the buffer to copy\n   *  @param offset the index in the buffer of the first character to copy\n   *  @param length the number of characters to copy\n   */\n  public final void setTermBuffer(String buffer, int offset, int length) {\n    assert offset <= buffer.length();\n    assert offset + length <= buffer.length();\n    termText = null;\n    char[] newCharBuffer = growTermBuffer(length);\n    if (newCharBuffer != null) {\n      termBuffer = newCharBuffer;\n    }\n    buffer.getChars(offset, offset + length, termBuffer, 0);\n    termLength = length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"881f3cbef4fe1d74529367acf824c7394e2dd11c","date":1248894847,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#setTermBuffer(String,int,int).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#setTermBuffer(String,int,int).mjava","sourceNew":"  /** Copies the contents of buffer, starting at offset and continuing\n   *  for length characters, into the termBuffer array.\n   *  @param buffer the buffer to copy\n   *  @param offset the index in the buffer of the first character to copy\n   *  @param length the number of characters to copy\n   */\n  public final void setTermBuffer(String buffer, int offset, int length) {\n    assert offset <= buffer.length();\n    assert offset + length <= buffer.length();\n    termText = null;\n    growTermBuffer(length);\n    buffer.getChars(offset, offset + length, termBuffer, 0);\n    termLength = length;\n  }\n\n","sourceOld":"  /** Copies the contents of buffer, starting at offset and continuing\n   *  for length characters, into the termBuffer array.\n   *  @param buffer the buffer to copy\n   *  @param offset the index in the buffer of the first character to copy\n   *  @param length the number of characters to copy\n   */\n  public final void setTermBuffer(String buffer, int offset, int length) {\n    assert offset <= buffer.length();\n    assert offset + length <= buffer.length();\n    termText = null;\n    char[] newCharBuffer = growTermBuffer(length);\n    if (newCharBuffer != null) {\n      termBuffer = newCharBuffer;\n    }\n    buffer.getChars(offset, offset + length, termBuffer, 0);\n    termLength = length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64af8690a948c97feaa9e2844a0c7051034f153d","date":1255862276,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#setTermBuffer(String,int,int).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#setTermBuffer(String,int,int).mjava","sourceNew":"  /** Copies the contents of buffer, starting at offset and continuing\n   *  for length characters, into the termBuffer array.\n   *  @param buffer the buffer to copy\n   *  @param offset the index in the buffer of the first character to copy\n   *  @param length the number of characters to copy\n   */\n  public final void setTermBuffer(String buffer, int offset, int length) {\n    assert offset <= buffer.length();\n    assert offset + length <= buffer.length();\n    growTermBuffer(length);\n    buffer.getChars(offset, offset + length, termBuffer, 0);\n    termLength = length;\n  }\n\n","sourceOld":"  /** Copies the contents of buffer, starting at offset and continuing\n   *  for length characters, into the termBuffer array.\n   *  @param buffer the buffer to copy\n   *  @param offset the index in the buffer of the first character to copy\n   *  @param length the number of characters to copy\n   */\n  public final void setTermBuffer(String buffer, int offset, int length) {\n    assert offset <= buffer.length();\n    assert offset + length <= buffer.length();\n    termText = null;\n    growTermBuffer(length);\n    buffer.getChars(offset, offset + length, termBuffer, 0);\n    termLength = length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66dab5a56cf3f9a3724b15a119a30fd77cbcb662","date":1268038828,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/Token#setTermBuffer(String,int,int).mjava","sourceNew":null,"sourceOld":"  /** Copies the contents of buffer, starting at offset and continuing\n   *  for length characters, into the termBuffer array.\n   *  @param buffer the buffer to copy\n   *  @param offset the index in the buffer of the first character to copy\n   *  @param length the number of characters to copy\n   */\n  public final void setTermBuffer(String buffer, int offset, int length) {\n    assert offset <= buffer.length();\n    assert offset + length <= buffer.length();\n    growTermBuffer(length);\n    buffer.getChars(offset, offset + length, termBuffer, 0);\n    termLength = length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"881f3cbef4fe1d74529367acf824c7394e2dd11c":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"64af8690a948c97feaa9e2844a0c7051034f153d":["881f3cbef4fe1d74529367acf824c7394e2dd11c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["64af8690a948c97feaa9e2844a0c7051034f153d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["881f3cbef4fe1d74529367acf824c7394e2dd11c"],"881f3cbef4fe1d74529367acf824c7394e2dd11c":["64af8690a948c97feaa9e2844a0c7051034f153d"],"64af8690a948c97feaa9e2844a0c7051034f153d":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}