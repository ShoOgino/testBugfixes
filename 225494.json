{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addException(String,ArrayList[Object]).mjava","commits":[{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addException(String,ArrayList[Object]).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addException(String,ArrayList).mjava","sourceNew":"  /**\n   * Add an exception to the tree. It is used by\n   * {@link PatternParser PatternParser} class as callback to store the\n   * hyphenation exceptions.\n   * \n   * @param word normalized word\n   * @param hyphenatedword a vector of alternating strings and\n   *        {@link Hyphen hyphen} objects.\n   */\n  public void addException(String word, ArrayList<Object> hyphenatedword) {\n    stoplist.put(word, hyphenatedword);\n  }\n\n","sourceOld":"  /**\n   * Add an exception to the tree. It is used by\n   * {@link PatternParser PatternParser} class as callback to store the\n   * hyphenation exceptions.\n   * \n   * @param word normalized word\n   * @param hyphenatedword a vector of alternating strings and\n   *        {@link Hyphen hyphen} objects.\n   */\n  public void addException(String word, ArrayList hyphenatedword) {\n    stoplist.put(word, hyphenatedword);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addException(String,ArrayList[Object]).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addException(String,ArrayList[Object]).mjava","sourceNew":"  /**\n   * Add an exception to the tree. It is used by\n   * {@link PatternParser PatternParser} class as callback to store the\n   * hyphenation exceptions.\n   * \n   * @param word normalized word\n   * @param hyphenatedword a vector of alternating strings and\n   *        {@link Hyphen hyphen} objects.\n   */\n  public void addException(String word, ArrayList<Object> hyphenatedword) {\n    stoplist.put(word, hyphenatedword);\n  }\n\n","sourceOld":"  /**\n   * Add an exception to the tree. It is used by\n   * {@link PatternParser PatternParser} class as callback to store the\n   * hyphenation exceptions.\n   * \n   * @param word normalized word\n   * @param hyphenatedword a vector of alternating strings and\n   *        {@link Hyphen hyphen} objects.\n   */\n  public void addException(String word, ArrayList<Object> hyphenatedword) {\n    stoplist.put(word, hyphenatedword);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}