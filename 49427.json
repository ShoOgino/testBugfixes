{"path":"client/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readDocument(Element).mjava","commits":[{"id":"0af909a3f6f8da71d1ed9daef071834bcdba6aa7","date":1248032177,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"client/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readDocument(Element).mjava","pathOld":"contrib/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readDocument(Element).mjava","sourceNew":"\t/**\n\t * Takes a <REUTERS> node and converts it into a SolrInoutDocument.\n\t * @param element A <REUTERS> node.\n\t * @throws XPathExpressionException\n\t * @throws SolrServerException\n\t * @throws IOException\n\t * @throws ParseException \n\t */\n\tpublic void readDocument(Element element) throws XPathExpressionException, SolrServerException, IOException, ParseException {\n\t\t\n\t\tSolrInputDocument inputDocument = new SolrInputDocument();\n\t\tinputDocument.addField(\"id\", element.getAttribute(\"NEWID\"));\n\t\tinputDocument.addField(\"title\", xPath.evaluate(\"TEXT/TITLE\", element));\n\t\tinputDocument.addField(\"dateline\", xPath.evaluate(\"TEXT/DATELINE\", element).trim());\n\t\tinputDocument.addField(\"text\", xPath.evaluate(\"TEXT/BODY\", element).trim());\n\t\tinputDocument.addField(\"places\", readList(\"PLACES/D\", element));\n\t\tinputDocument.addField(\"topics\", readList(\"TOPICS/D\", element));\n\t\tinputDocument.addField(\"organisations\", readList(\"ORGS/D\", element));\n\t\tinputDocument.addField(\"exchanges\", readList(\"EXCHANGES/D\", element));\n\t\tinputDocument.addField(\"companies\", readList(\"COMPANIES/D\", element));\n\t\ttry {\n\t\t\tinputDocument.addField(\"date\", this.reutersDateFormat.parse(xPath.evaluate(\"DATE\", element)));\n\t\t} catch (ParseException e) {\n\t\t\tinputDocument.addField(\"date\", this.reutersDateFormat.parse(\"0\" + xPath.evaluate(\"DATE\", element)));\n\t\t}\n\t\t\n\t\tfor (Object place : inputDocument.getFieldValues(\"places\")) {\n\t\t\tString code = this.countryCodesMap.get(place);\n\t\t\tif (code == null) {\n\t\t\t\ttry {\n\t\t\t\t\tcode = getCodeForPlace((String) place);\n\t\t\t\t\tthis.countryCodesMap.put((String) place, code);\n\t\t\t\t} catch (SAXException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t} catch (ParserConfigurationException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t} \n\t\t\tinputDocument.addField(\"countryCodes\", code);\n\t\t}\n\t\t\n\t\tthis.solrServer.add(inputDocument);\n\t\tSystem.out.println(inputDocument.getField(\"title\"));\n\t}\n\n","sourceOld":"\t/**\n\t * Takes a <REUTERS> node and converts it into a SolrInoutDocument.\n\t * @param element A <REUTERS> node.\n\t * @throws XPathExpressionException\n\t * @throws SolrServerException\n\t * @throws IOException\n\t * @throws ParseException \n\t */\n\tpublic void readDocument(Element element) throws XPathExpressionException, SolrServerException, IOException, ParseException {\n\t\t\n\t\tSolrInputDocument inputDocument = new SolrInputDocument();\n\t\tinputDocument.addField(\"id\", element.getAttribute(\"NEWID\"));\n\t\tinputDocument.addField(\"title\", xPath.evaluate(\"TEXT/TITLE\", element));\n\t\tinputDocument.addField(\"dateline\", xPath.evaluate(\"TEXT/DATELINE\", element).trim());\n\t\tinputDocument.addField(\"text\", xPath.evaluate(\"TEXT/BODY\", element).trim());\n\t\tinputDocument.addField(\"places\", readList(\"PLACES/D\", element));\n\t\tinputDocument.addField(\"topics\", readList(\"TOPICS/D\", element));\n\t\tinputDocument.addField(\"organisations\", readList(\"ORGS/D\", element));\n\t\tinputDocument.addField(\"exchanges\", readList(\"EXCHANGES/D\", element));\n\t\tinputDocument.addField(\"companies\", readList(\"COMPANIES/D\", element));\n\t\ttry {\n\t\t\tinputDocument.addField(\"date\", this.reutersDateFormat.parse(xPath.evaluate(\"DATE\", element)));\n\t\t} catch (ParseException e) {\n\t\t\tinputDocument.addField(\"date\", this.reutersDateFormat.parse(\"0\" + xPath.evaluate(\"DATE\", element)));\n\t\t}\n\t\t\n\t\tfor (Object place : inputDocument.getFieldValues(\"places\")) {\n\t\t\tString code = this.countryCodesMap.get(place);\n\t\t\tif (code == null) {\n\t\t\t\ttry {\n\t\t\t\t\tcode = getCodeForPlace((String) place);\n\t\t\t\t\tthis.countryCodesMap.put((String) place, code);\n\t\t\t\t} catch (SAXException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t} catch (ParserConfigurationException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t} \n\t\t\tinputDocument.addField(\"countryCodes\", code);\n\t\t}\n\t\t\n\t\tthis.solrServer.add(inputDocument);\n\t\tSystem.out.println(inputDocument.getField(\"title\"));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26202f1de41706cfc42bac29925e60eb591480c2","date":1255363311,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"client/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readDocument(Element).mjava","sourceNew":null,"sourceOld":"\t/**\n\t * Takes a <REUTERS> node and converts it into a SolrInoutDocument.\n\t * @param element A <REUTERS> node.\n\t * @throws XPathExpressionException\n\t * @throws SolrServerException\n\t * @throws IOException\n\t * @throws ParseException \n\t */\n\tpublic void readDocument(Element element) throws XPathExpressionException, SolrServerException, IOException, ParseException {\n\t\t\n\t\tSolrInputDocument inputDocument = new SolrInputDocument();\n\t\tinputDocument.addField(\"id\", element.getAttribute(\"NEWID\"));\n\t\tinputDocument.addField(\"title\", xPath.evaluate(\"TEXT/TITLE\", element));\n\t\tinputDocument.addField(\"dateline\", xPath.evaluate(\"TEXT/DATELINE\", element).trim());\n\t\tinputDocument.addField(\"text\", xPath.evaluate(\"TEXT/BODY\", element).trim());\n\t\tinputDocument.addField(\"places\", readList(\"PLACES/D\", element));\n\t\tinputDocument.addField(\"topics\", readList(\"TOPICS/D\", element));\n\t\tinputDocument.addField(\"organisations\", readList(\"ORGS/D\", element));\n\t\tinputDocument.addField(\"exchanges\", readList(\"EXCHANGES/D\", element));\n\t\tinputDocument.addField(\"companies\", readList(\"COMPANIES/D\", element));\n\t\ttry {\n\t\t\tinputDocument.addField(\"date\", this.reutersDateFormat.parse(xPath.evaluate(\"DATE\", element)));\n\t\t} catch (ParseException e) {\n\t\t\tinputDocument.addField(\"date\", this.reutersDateFormat.parse(\"0\" + xPath.evaluate(\"DATE\", element)));\n\t\t}\n\t\t\n\t\tfor (Object place : inputDocument.getFieldValues(\"places\")) {\n\t\t\tString code = this.countryCodesMap.get(place);\n\t\t\tif (code == null) {\n\t\t\t\ttry {\n\t\t\t\t\tcode = getCodeForPlace((String) place);\n\t\t\t\t\tthis.countryCodesMap.put((String) place, code);\n\t\t\t\t} catch (SAXException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t} catch (ParserConfigurationException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t} \n\t\t\tinputDocument.addField(\"countryCodes\", code);\n\t\t}\n\t\t\n\t\tthis.solrServer.add(inputDocument);\n\t\tSystem.out.println(inputDocument.getField(\"title\"));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0af909a3f6f8da71d1ed9daef071834bcdba6aa7":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"26202f1de41706cfc42bac29925e60eb591480c2":["0af909a3f6f8da71d1ed9daef071834bcdba6aa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0af909a3f6f8da71d1ed9daef071834bcdba6aa7":["26202f1de41706cfc42bac29925e60eb591480c2"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0af909a3f6f8da71d1ed9daef071834bcdba6aa7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"26202f1de41706cfc42bac29925e60eb591480c2":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["26202f1de41706cfc42bac29925e60eb591480c2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}