{"path":"lucene/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreqBadTerm().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreqBadTerm().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreqBadTerm().mjava","sourceNew":"  public void testGetTotalTermFreqBadTerm() throws Exception{\n    String term =\"foobar\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    assertEquals(\"totalTermFreq should be 0 for term not in index\",0,totalTermFreq);\n    \n  }\n\n","sourceOld":"  public void testGetTotalTermFreqBadTerm() throws Exception{\n    String term =\"foobar\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    assertEquals(\"totalTermFreq should be 0 for term not in index\",0,totalTermFreq);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a0e3c1c21aac8ecf75706605133012833585c7","date":1347535263,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreqBadTerm().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreqBadTerm().mjava","sourceNew":"  public void testGetTotalTermFreqBadTerm() throws Exception{\n    String term =\"foobar\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, new Term(field, termtext));\n    assertEquals(\"totalTermFreq should be 0 for term not in index\",0,totalTermFreq);\n    \n  }\n\n","sourceOld":"  public void testGetTotalTermFreqBadTerm() throws Exception{\n    String term =\"foobar\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    assertEquals(\"totalTermFreq should be 0 for term not in index\",0,totalTermFreq);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0aae73ca2eeb899108e9fe36611ddf5a83ec790","date":1378482998,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreqBadTerm().mjava","sourceNew":null,"sourceOld":"  public void testGetTotalTermFreqBadTerm() throws Exception{\n    String term =\"foobar\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, new Term(field, termtext));\n    assertEquals(\"totalTermFreq should be 0 for term not in index\",0,totalTermFreq);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6a0e3c1c21aac8ecf75706605133012833585c7":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0aae73ca2eeb899108e9fe36611ddf5a83ec790"],"f0aae73ca2eeb899108e9fe36611ddf5a83ec790":["b6a0e3c1c21aac8ecf75706605133012833585c7"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b6a0e3c1c21aac8ecf75706605133012833585c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b6a0e3c1c21aac8ecf75706605133012833585c7":["f0aae73ca2eeb899108e9fe36611ddf5a83ec790"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f0aae73ca2eeb899108e9fe36611ddf5a83ec790":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}