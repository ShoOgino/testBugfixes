{"path":"lucene/analysis/stempel/src/java/org/egothor/stemmer/MultiTrie#reduce(Reduce).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/MultiTrie#reduce(Reduce).mjava","pathOld":"modules/analysis/stempel/src/java/org/egothor/stemmer/MultiTrie#reduce(Reduce).mjava","sourceNew":"  /**\n   * Remove empty rows from the given Trie and return the newly reduced Trie.\n   * \n   * @param by the Trie to reduce\n   * @return the newly reduced Trie\n   */\n  @Override\n  public Trie reduce(Reduce by) {\n    List<Trie> h = new ArrayList<Trie>();\n    for (Trie trie : tries)\n      h.add(trie.reduce(by));\n    \n    MultiTrie m = new MultiTrie(forward);\n    m.tries = h;\n    return m;\n  }\n\n","sourceOld":"  /**\n   * Remove empty rows from the given Trie and return the newly reduced Trie.\n   * \n   * @param by the Trie to reduce\n   * @return the newly reduced Trie\n   */\n  @Override\n  public Trie reduce(Reduce by) {\n    List<Trie> h = new ArrayList<Trie>();\n    for (Trie trie : tries)\n      h.add(trie.reduce(by));\n    \n    MultiTrie m = new MultiTrie(forward);\n    m.tries = h;\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/MultiTrie#reduce(Reduce).mjava","pathOld":"lucene/analysis/stempel/src/java/org/egothor/stemmer/MultiTrie#reduce(Reduce).mjava","sourceNew":"  /**\n   * Remove empty rows from the given Trie and return the newly reduced Trie.\n   * \n   * @param by the Trie to reduce\n   * @return the newly reduced Trie\n   */\n  @Override\n  public Trie reduce(Reduce by) {\n    List<Trie> h = new ArrayList<>();\n    for (Trie trie : tries)\n      h.add(trie.reduce(by));\n    \n    MultiTrie m = new MultiTrie(forward);\n    m.tries = h;\n    return m;\n  }\n\n","sourceOld":"  /**\n   * Remove empty rows from the given Trie and return the newly reduced Trie.\n   * \n   * @param by the Trie to reduce\n   * @return the newly reduced Trie\n   */\n  @Override\n  public Trie reduce(Reduce by) {\n    List<Trie> h = new ArrayList<Trie>();\n    for (Trie trie : tries)\n      h.add(trie.reduce(by));\n    \n    MultiTrie m = new MultiTrie(forward);\n    m.tries = h;\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}