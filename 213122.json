{"path":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterLeafReader#document(int,StoredFieldVisitor).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterLeafReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterAtomicReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(final int docID, final StoredFieldVisitor visitor) throws IOException {\n    super.document(docID, new StoredFieldVisitor() {\n      @Override\n      public void binaryField(FieldInfo fieldInfo, byte[] value) throws IOException {\n        visitor.binaryField(fieldInfo, value);\n      }\n\n      @Override\n      public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n        visitor.stringField(fieldInfo, value);\n      }\n\n      @Override\n      public void intField(FieldInfo fieldInfo, int value) throws IOException {\n        visitor.intField(fieldInfo, value);\n      }\n\n      @Override\n      public void longField(FieldInfo fieldInfo, long value) throws IOException {\n        visitor.longField(fieldInfo, value);\n      }\n\n      @Override\n      public void floatField(FieldInfo fieldInfo, float value) throws IOException {\n        visitor.floatField(fieldInfo, value);\n      }\n\n      @Override\n      public void doubleField(FieldInfo fieldInfo, double value) throws IOException {\n        visitor.doubleField(fieldInfo, value);\n      }\n\n      @Override\n      public Status needsField(FieldInfo fieldInfo) throws IOException {\n        return hasField(fieldInfo.name) ? visitor.needsField(fieldInfo) : Status.NO;\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void document(final int docID, final StoredFieldVisitor visitor) throws IOException {\n    super.document(docID, new StoredFieldVisitor() {\n      @Override\n      public void binaryField(FieldInfo fieldInfo, byte[] value) throws IOException {\n        visitor.binaryField(fieldInfo, value);\n      }\n\n      @Override\n      public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n        visitor.stringField(fieldInfo, value);\n      }\n\n      @Override\n      public void intField(FieldInfo fieldInfo, int value) throws IOException {\n        visitor.intField(fieldInfo, value);\n      }\n\n      @Override\n      public void longField(FieldInfo fieldInfo, long value) throws IOException {\n        visitor.longField(fieldInfo, value);\n      }\n\n      @Override\n      public void floatField(FieldInfo fieldInfo, float value) throws IOException {\n        visitor.floatField(fieldInfo, value);\n      }\n\n      @Override\n      public void doubleField(FieldInfo fieldInfo, double value) throws IOException {\n        visitor.doubleField(fieldInfo, value);\n      }\n\n      @Override\n      public Status needsField(FieldInfo fieldInfo) throws IOException {\n        return hasField(fieldInfo.name) ? visitor.needsField(fieldInfo) : Status.NO;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"399d127639ae13222a8545b50e0ac545a6bcd2d7","date":1428704686,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterLeafReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterLeafReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(final int docID, final StoredFieldVisitor visitor) throws IOException {\n    super.document(docID, new StoredFieldVisitor() {\n      @Override\n      public void binaryField(FieldInfo fieldInfo, byte[] value) throws IOException {\n        visitor.binaryField(fieldInfo, value);\n      }\n\n      @Override\n      public void stringField(FieldInfo fieldInfo, byte[] value) throws IOException {\n        visitor.stringField(fieldInfo, value);\n      }\n\n      @Override\n      public void intField(FieldInfo fieldInfo, int value) throws IOException {\n        visitor.intField(fieldInfo, value);\n      }\n\n      @Override\n      public void longField(FieldInfo fieldInfo, long value) throws IOException {\n        visitor.longField(fieldInfo, value);\n      }\n\n      @Override\n      public void floatField(FieldInfo fieldInfo, float value) throws IOException {\n        visitor.floatField(fieldInfo, value);\n      }\n\n      @Override\n      public void doubleField(FieldInfo fieldInfo, double value) throws IOException {\n        visitor.doubleField(fieldInfo, value);\n      }\n\n      @Override\n      public Status needsField(FieldInfo fieldInfo) throws IOException {\n        return hasField(fieldInfo.name) ? visitor.needsField(fieldInfo) : Status.NO;\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void document(final int docID, final StoredFieldVisitor visitor) throws IOException {\n    super.document(docID, new StoredFieldVisitor() {\n      @Override\n      public void binaryField(FieldInfo fieldInfo, byte[] value) throws IOException {\n        visitor.binaryField(fieldInfo, value);\n      }\n\n      @Override\n      public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n        visitor.stringField(fieldInfo, value);\n      }\n\n      @Override\n      public void intField(FieldInfo fieldInfo, int value) throws IOException {\n        visitor.intField(fieldInfo, value);\n      }\n\n      @Override\n      public void longField(FieldInfo fieldInfo, long value) throws IOException {\n        visitor.longField(fieldInfo, value);\n      }\n\n      @Override\n      public void floatField(FieldInfo fieldInfo, float value) throws IOException {\n        visitor.floatField(fieldInfo, value);\n      }\n\n      @Override\n      public void doubleField(FieldInfo fieldInfo, double value) throws IOException {\n        visitor.doubleField(fieldInfo, value);\n      }\n\n      @Override\n      public Status needsField(FieldInfo fieldInfo) throws IOException {\n        return hasField(fieldInfo.name) ? visitor.needsField(fieldInfo) : Status.NO;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"500188ac33da6ce742a5b18858f34701ef16c77a","date":1558462722,"type":3,"author":"Namgyu Kim","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterLeafReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/FieldFilterLeafReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(final int docID, final StoredFieldVisitor visitor) throws IOException {\n    super.document(docID, new StoredFieldVisitor() {\n      @Override\n      public void binaryField(FieldInfo fieldInfo, byte[] value) throws IOException {\n        visitor.binaryField(fieldInfo, value);\n      }\n\n      @Override\n      public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n        visitor.stringField(fieldInfo, Objects.requireNonNull(value, \"String value should not be null\"));\n      }\n\n      @Override\n      public void intField(FieldInfo fieldInfo, int value) throws IOException {\n        visitor.intField(fieldInfo, value);\n      }\n\n      @Override\n      public void longField(FieldInfo fieldInfo, long value) throws IOException {\n        visitor.longField(fieldInfo, value);\n      }\n\n      @Override\n      public void floatField(FieldInfo fieldInfo, float value) throws IOException {\n        visitor.floatField(fieldInfo, value);\n      }\n\n      @Override\n      public void doubleField(FieldInfo fieldInfo, double value) throws IOException {\n        visitor.doubleField(fieldInfo, value);\n      }\n\n      @Override\n      public Status needsField(FieldInfo fieldInfo) throws IOException {\n        return hasField(fieldInfo.name) ? visitor.needsField(fieldInfo) : Status.NO;\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void document(final int docID, final StoredFieldVisitor visitor) throws IOException {\n    super.document(docID, new StoredFieldVisitor() {\n      @Override\n      public void binaryField(FieldInfo fieldInfo, byte[] value) throws IOException {\n        visitor.binaryField(fieldInfo, value);\n      }\n\n      @Override\n      public void stringField(FieldInfo fieldInfo, byte[] value) throws IOException {\n        visitor.stringField(fieldInfo, value);\n      }\n\n      @Override\n      public void intField(FieldInfo fieldInfo, int value) throws IOException {\n        visitor.intField(fieldInfo, value);\n      }\n\n      @Override\n      public void longField(FieldInfo fieldInfo, long value) throws IOException {\n        visitor.longField(fieldInfo, value);\n      }\n\n      @Override\n      public void floatField(FieldInfo fieldInfo, float value) throws IOException {\n        visitor.floatField(fieldInfo, value);\n      }\n\n      @Override\n      public void doubleField(FieldInfo fieldInfo, double value) throws IOException {\n        visitor.doubleField(fieldInfo, value);\n      }\n\n      @Override\n      public Status needsField(FieldInfo fieldInfo) throws IOException {\n        return hasField(fieldInfo.name) ? visitor.needsField(fieldInfo) : Status.NO;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"500188ac33da6ce742a5b18858f34701ef16c77a":["399d127639ae13222a8545b50e0ac545a6bcd2d7"],"399d127639ae13222a8545b50e0ac545a6bcd2d7":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["500188ac33da6ce742a5b18858f34701ef16c77a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"500188ac33da6ce742a5b18858f34701ef16c77a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"399d127639ae13222a8545b50e0ac545a6bcd2d7":["500188ac33da6ce742a5b18858f34701ef16c77a"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["399d127639ae13222a8545b50e0ac545a6bcd2d7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}