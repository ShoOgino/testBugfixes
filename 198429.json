{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","sourceNew":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length());\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParent(0));\n    assertEquals(0, tr.getOrdinal(new CategoryPath()));\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length());\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParent(0));\n    assertEquals(0, tr.getOrdinal(new CategoryPath()));\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","date":1357499264,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","sourceNew":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length);\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParent(0));\n    assertEquals(0, tr.getOrdinal(CategoryPath.EMPTY));\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length());\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParent(0));\n    assertEquals(0, tr.getOrdinal(new CategoryPath()));\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","sourceNew":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length);\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParent(0));\n    assertEquals(0, tr.getOrdinal(CategoryPath.EMPTY));\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length());\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParent(0));\n    assertEquals(0, tr.getOrdinal(new CategoryPath()));\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29e1a91414f603bce5a59a5cb61fa8603997de87","date":1363597288,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","sourceNew":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length);\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParallelTaxonomyArrays().parents()[0]);\n    assertEquals(0, tr.getOrdinal(CategoryPath.EMPTY));\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length);\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParent(0));\n    assertEquals(0, tr.getOrdinal(CategoryPath.EMPTY));\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","sourceNew":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length);\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParallelTaxonomyArrays().parents()[0]);\n    assertEquals(0, tr.getOrdinal(FacetLabel.EMPTY));\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length);\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParallelTaxonomyArrays().parents()[0]);\n    assertEquals(0, tr.getOrdinal(CategoryPath.EMPTY));\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56d44586f4c409c6c6c5942b9f0227df806b7300","date":1386027853,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","sourceNew":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length);\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParallelTaxonomyArrays().parents()[0]);\n    assertEquals(0, tr.getOrdinal(new FacetLabel()));\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length);\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParallelTaxonomyArrays().parents()[0]);\n    assertEquals(0, tr.getOrdinal(FacetLabel.EMPTY));\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testRootOnly().mjava","sourceNew":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length);\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParallelTaxonomyArrays().parents()[0]);\n    assertEquals(0, tr.getOrdinal(new FacetLabel()));\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Test writing an empty index, and seeing that a reader finds in it\n    the root category, and only it. We check all the methods on that\n    root category return the expected results.\n   */\n  @Test\n  public void testRootOnly() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    // right after opening the index, it should already contain the\n    // root, so have size 1:\n    assertEquals(1, tw.getSize());\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    assertEquals(1, tr.getSize());\n    assertEquals(0, tr.getPath(0).length);\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getParallelTaxonomyArrays().parents()[0]);\n    assertEquals(0, tr.getOrdinal(CategoryPath.EMPTY));\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"56d44586f4c409c6c6c5942b9f0227df806b7300":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29e1a91414f603bce5a59a5cb61fa8603997de87":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["29e1a91414f603bce5a59a5cb61fa8603997de87","56d44586f4c409c6c6c5942b9f0227df806b7300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["29e1a91414f603bce5a59a5cb61fa8603997de87"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","29e1a91414f603bce5a59a5cb61fa8603997de87"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"56d44586f4c409c6c6c5942b9f0227df806b7300":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"29e1a91414f603bce5a59a5cb61fa8603997de87":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}