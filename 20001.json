{"path":"solr/core/src/test/org/apache/solr/cloud/CustomCollectionTest#getUrlFromZk(ClusterState,String).mjava","commits":[{"id":"1816753738ff1f27f11b38030e83c0ded050b7a4","date":1380106089,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CustomCollectionTest#getUrlFromZk(ClusterState,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CustomCollectionTest#getUrlFromZk(String).mjava","sourceNew":"  public static String getUrlFromZk(ClusterState clusterState, String collection) {\n    Map<String,Slice> slices = clusterState.getCollectionStates().get(collection).getSlicesMap();\n\n    if (slices == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not find collection:\" + collection);\n    }\n\n    for (Map.Entry<String,Slice> entry : slices.entrySet()) {\n      Slice slice = entry.getValue();\n      Map<String,Replica> shards = slice.getReplicasMap();\n      Set<Map.Entry<String,Replica>> shardEntries = shards.entrySet();\n      for (Map.Entry<String,Replica> shardEntry : shardEntries) {\n        final ZkNodeProps node = shardEntry.getValue();\n        if (clusterState.liveNodesContain(node.getStr(ZkStateReader.NODE_NAME_PROP))) {\n          return ZkCoreNodeProps.getCoreUrl(node.getStr(ZkStateReader.BASE_URL_PROP), collection); //new ZkCoreNodeProps(node).getCoreUrl();\n        }\n      }\n    }\n\n    throw new RuntimeException(\"Could not find a live node for collection:\" + collection);\n  }\n\n","sourceOld":"  private String getUrlFromZk(String collection) {\n    ClusterState clusterState = getCommonCloudSolrServer().getZkStateReader().getClusterState();\n    Map<String,Slice> slices = clusterState.getCollectionStates().get(collection).getSlicesMap();\n\n    if (slices == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not find collection:\" + collection);\n    }\n\n    for (Map.Entry<String,Slice> entry : slices.entrySet()) {\n      Slice slice = entry.getValue();\n      Map<String,Replica> shards = slice.getReplicasMap();\n      Set<Map.Entry<String,Replica>> shardEntries = shards.entrySet();\n      for (Map.Entry<String,Replica> shardEntry : shardEntries) {\n        final ZkNodeProps node = shardEntry.getValue();\n        if (clusterState.liveNodesContain(node.getStr(ZkStateReader.NODE_NAME_PROP))) {\n          return ZkCoreNodeProps.getCoreUrl(node.getStr(ZkStateReader.BASE_URL_PROP), collection); //new ZkCoreNodeProps(node).getCoreUrl();\n        }\n      }\n    }\n\n    throw new RuntimeException(\"Could not find a live node for collection:\" + collection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40dce2b6d4360eb09fa16fb6c40a18b25507ed73","date":1383035822,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getUrlFromZk(ClusterState,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CustomCollectionTest#getUrlFromZk(ClusterState,String).mjava","sourceNew":"  public static String getUrlFromZk(ClusterState clusterState, String collection) {\n    Map<String,Slice> slices = clusterState.getCollectionStates().get(collection).getSlicesMap();\n\n    if (slices == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Could not find collection:\" + collection);\n    }\n\n    for (Map.Entry<String,Slice> entry : slices.entrySet()) {\n      Slice slice = entry.getValue();\n      Map<String,Replica> shards = slice.getReplicasMap();\n      Set<Map.Entry<String,Replica>> shardEntries = shards.entrySet();\n      for (Map.Entry<String,Replica> shardEntry : shardEntries) {\n        final ZkNodeProps node = shardEntry.getValue();\n        if (clusterState.liveNodesContain(node.getStr(ZkStateReader.NODE_NAME_PROP))) {\n          return ZkCoreNodeProps.getCoreUrl(node.getStr(ZkStateReader.BASE_URL_PROP), collection); //new ZkCoreNodeProps(node).getCoreUrl();\n        }\n      }\n    }\n\n    throw new RuntimeException(\"Could not find a live node for collection:\" + collection);\n  }\n\n","sourceOld":"  public static String getUrlFromZk(ClusterState clusterState, String collection) {\n    Map<String,Slice> slices = clusterState.getCollectionStates().get(collection).getSlicesMap();\n\n    if (slices == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not find collection:\" + collection);\n    }\n\n    for (Map.Entry<String,Slice> entry : slices.entrySet()) {\n      Slice slice = entry.getValue();\n      Map<String,Replica> shards = slice.getReplicasMap();\n      Set<Map.Entry<String,Replica>> shardEntries = shards.entrySet();\n      for (Map.Entry<String,Replica> shardEntry : shardEntries) {\n        final ZkNodeProps node = shardEntry.getValue();\n        if (clusterState.liveNodesContain(node.getStr(ZkStateReader.NODE_NAME_PROP))) {\n          return ZkCoreNodeProps.getCoreUrl(node.getStr(ZkStateReader.BASE_URL_PROP), collection); //new ZkCoreNodeProps(node).getCoreUrl();\n        }\n      }\n    }\n\n    throw new RuntimeException(\"Could not find a live node for collection:\" + collection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1816753738ff1f27f11b38030e83c0ded050b7a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"40dce2b6d4360eb09fa16fb6c40a18b25507ed73":["1816753738ff1f27f11b38030e83c0ded050b7a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["40dce2b6d4360eb09fa16fb6c40a18b25507ed73"]},"commit2Childs":{"1816753738ff1f27f11b38030e83c0ded050b7a4":["40dce2b6d4360eb09fa16fb6c40a18b25507ed73"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1816753738ff1f27f11b38030e83c0ded050b7a4"],"40dce2b6d4360eb09fa16fb6c40a18b25507ed73":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}