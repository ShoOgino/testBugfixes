{"path":"src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFieldStatisticsResult(String).mjava","commits":[{"id":"4002610a071fd76efb20afdc94b0e963256a9b33","date":1254775552,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFieldStatisticsResult(String).mjava","pathOld":"src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResult().mjava","sourceNew":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n\n","sourceOld":"  public void testFieldStatisticsResult() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\", \"stats_i\", \"-10\"));\n    assertU(adoc(\"id\", \"2\", \"stats_i\", \"-20\"));\n    assertU(adoc(\"id\", \"3\", \"stats_i\", \"-30\"));\n    assertU(adoc(\"id\", \"4\", \"stats_i\", \"-40\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"stats_i\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test statistics values\", req\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFieldStatisticsResult(String).mjava","pathOld":"src/test/org/apache/solr/handler/component/StatsComponentTest#doTestFieldStatisticsResult(String).mjava","sourceNew":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n\n","sourceOld":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4002610a071fd76efb20afdc94b0e963256a9b33":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["4002610a071fd76efb20afdc94b0e963256a9b33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4002610a071fd76efb20afdc94b0e963256a9b33":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4002610a071fd76efb20afdc94b0e963256a9b33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}