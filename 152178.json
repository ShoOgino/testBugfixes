{"path":"lucene/core/src/test/org/apache/lucene/search/TestBlendedTermQuery#testToString().mjava","commits":[{"id":"f2e0b693f44c4d48acb66e289f04ec7309118a1a","date":1437989791,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBlendedTermQuery#testToString().mjava","pathOld":"/dev/null","sourceNew":"  public void testToString() {\n    assertEquals(\"Blended()\", new BlendedTermQuery.Builder().build().toString());\n    Term t1 = new Term(\"foo\", \"bar\");\n    assertEquals(\"Blended(foo:bar)\", new BlendedTermQuery.Builder().add(t1).build().toString());\n    Term t2 = new Term(\"foo\", \"baz\");\n    assertEquals(\"Blended(foo:bar foo:baz)\", new BlendedTermQuery.Builder().add(t1).add(t2).build().toString());\n    assertEquals(\"Blended(foo:bar^4.0 foo:baz^3.0)\", new BlendedTermQuery.Builder().add(t1, 4).add(t2, 3).build().toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0cdf628dda21ad509f09608c835dc27541d1ca3","date":1444665868,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBlendedTermQuery#testToString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBlendedTermQuery#testToString().mjava","sourceNew":"  public void testToString() {\n    assertEquals(\"Blended()\", new BlendedTermQuery.Builder().build().toString());\n    Term t1 = new Term(\"foo\", \"bar\");\n    assertEquals(\"Blended(foo:bar)\", new BlendedTermQuery.Builder().add(t1).build().toString());\n    Term t2 = new Term(\"foo\", \"baz\");\n    assertEquals(\"Blended(foo:bar foo:baz)\", new BlendedTermQuery.Builder().add(t1).add(t2).build().toString());\n    assertEquals(\"Blended((foo:bar)^4.0 (foo:baz)^3.0)\", new BlendedTermQuery.Builder().add(t1, 4).add(t2, 3).build().toString());\n  }\n\n","sourceOld":"  public void testToString() {\n    assertEquals(\"Blended()\", new BlendedTermQuery.Builder().build().toString());\n    Term t1 = new Term(\"foo\", \"bar\");\n    assertEquals(\"Blended(foo:bar)\", new BlendedTermQuery.Builder().add(t1).build().toString());\n    Term t2 = new Term(\"foo\", \"baz\");\n    assertEquals(\"Blended(foo:bar foo:baz)\", new BlendedTermQuery.Builder().add(t1).add(t2).build().toString());\n    assertEquals(\"Blended(foo:bar^4.0 foo:baz^3.0)\", new BlendedTermQuery.Builder().add(t1, 4).add(t2, 3).build().toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b0cdf628dda21ad509f09608c835dc27541d1ca3":["f2e0b693f44c4d48acb66e289f04ec7309118a1a"],"f2e0b693f44c4d48acb66e289f04ec7309118a1a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b0cdf628dda21ad509f09608c835dc27541d1ca3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f2e0b693f44c4d48acb66e289f04ec7309118a1a"],"b0cdf628dda21ad509f09608c835dc27541d1ca3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2e0b693f44c4d48acb66e289f04ec7309118a1a":["b0cdf628dda21ad509f09608c835dc27541d1ca3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}