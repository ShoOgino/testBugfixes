{"path":"src/test/org/apache/lucene/util/LuceneTestCaseJ4#newRandom().mjava","commits":[{"id":"777b7ef341decfee8757f492d8a154637cd7a384","date":1260037647,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCaseJ4#newRandom().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a {@link Random} instance for generating random numbers during the test.\n   * The random seed is logged during test execution and printed to System.out on any failure\n   * for reproducing the test using {@link #newRandom(long)} with the recorded seed\n   * .\n   */\n  public Random newRandom() {\n    if (seed != null) {\n      throw new IllegalStateException(\"please call LuceneTestCase.newRandom only once per test\");\n    }\n    return newRandom(seedRnd.nextLong());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCaseJ4#newRandom().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCaseJ4#newRandom().mjava","sourceNew":"  /**\n   * Returns a {@link Random} instance for generating random numbers during the test.\n   * The random seed is logged during test execution and printed to System.out on any failure\n   * for reproducing the test using {@link #newRandom(long)} with the recorded seed\n   * .\n   */\n  public Random newRandom() {\n    if (seed != null) {\n      throw new IllegalStateException(\"please call LuceneTestCaseJ4.newRandom only once per test\");\n    }\n    return newRandom(seedRnd.nextLong());\n  }\n\n","sourceOld":"  /**\n   * Returns a {@link Random} instance for generating random numbers during the test.\n   * The random seed is logged during test execution and printed to System.out on any failure\n   * for reproducing the test using {@link #newRandom(long)} with the recorded seed\n   * .\n   */\n  public Random newRandom() {\n    if (seed != null) {\n      throw new IllegalStateException(\"please call LuceneTestCase.newRandom only once per test\");\n    }\n    return newRandom(seedRnd.nextLong());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#newRandom().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCaseJ4#newRandom().mjava","sourceNew":"  /**\n   * Returns a {@link Random} instance for generating random numbers during the test.\n   * The random seed is logged during test execution and printed to System.out on any failure\n   * for reproducing the test using {@link #newRandom(long)} with the recorded seed\n   * .\n   */\n  public Random newRandom() {\n    if (seed != null) {\n      throw new IllegalStateException(\"please call LuceneTestCaseJ4.newRandom only once per test\");\n    }\n    return newRandom(seedRnd.nextLong());\n  }\n\n","sourceOld":"  /**\n   * Returns a {@link Random} instance for generating random numbers during the test.\n   * The random seed is logged during test execution and printed to System.out on any failure\n   * for reproducing the test using {@link #newRandom(long)} with the recorded seed\n   * .\n   */\n  public Random newRandom() {\n    if (seed != null) {\n      throw new IllegalStateException(\"please call LuceneTestCaseJ4.newRandom only once per test\");\n    }\n    return newRandom(seedRnd.nextLong());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["777b7ef341decfee8757f492d8a154637cd7a384"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"777b7ef341decfee8757f492d8a154637cd7a384":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["777b7ef341decfee8757f492d8a154637cd7a384"],"777b7ef341decfee8757f492d8a154637cd7a384":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}