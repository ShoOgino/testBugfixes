{"path":"solr/core/src/java/org/apache/solr/search/LRUCache#initializeMetrics(SolrMetrics).mjava","commits":[{"id":"a117d95183986014a31f25bb04e5464ca06d6068","date":1566208086,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LRUCache#initializeMetrics(SolrMetrics).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetrics m) {\n    solrMetrics = m.getChildInfo(this);\n    cacheMap = new MetricsMap((detailed, res) -> {\n      synchronized (map) {\n        res.put(LOOKUPS_PARAM, lookups);\n        res.put(HITS_PARAM, hits);\n        res.put(HIT_RATIO_PARAM, calcHitRatio(lookups,hits));\n        res.put(INSERTS_PARAM, inserts);\n        res.put(EVICTIONS_PARAM, evictions);\n        res.put(SIZE_PARAM, map.size());\n        res.put(RAM_BYTES_USED_PARAM, ramBytesUsed());\n        res.put(MAX_RAM_MB_PARAM, getMaxRamMB());\n        res.put(MAX_SIZE_PARAM, maxSize);\n        res.put(\"evictionsRamUsage\", evictionsRamUsage);\n      }\n      res.put(\"warmupTime\", warmupTime);\n\n      long clookups = stats.lookups.longValue();\n      long chits = stats.hits.longValue();\n      res.put(\"cumulative_lookups\", clookups);\n      res.put(\"cumulative_hits\", chits);\n      res.put(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n      res.put(\"cumulative_inserts\", stats.inserts.longValue());\n      res.put(\"cumulative_evictions\", stats.evictions.longValue());\n      res.put(\"cumulative_evictionsRamUsage\", stats.evictionsRamUsage.longValue());\n    });\n    solrMetrics.metricManager.registerGauge(this, solrMetrics.registry, cacheMap, solrMetrics.tag, true, solrMetrics.scope, getCategory().toString());\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    registry = manager.registry(registryName);\n    cacheMap = new MetricsMap((detailed, res) -> {\n      synchronized (map) {\n        res.put(LOOKUPS_PARAM, lookups);\n        res.put(HITS_PARAM, hits);\n        res.put(HIT_RATIO_PARAM, calcHitRatio(lookups,hits));\n        res.put(INSERTS_PARAM, inserts);\n        res.put(EVICTIONS_PARAM, evictions);\n        res.put(SIZE_PARAM, map.size());\n        res.put(RAM_BYTES_USED_PARAM, ramBytesUsed());\n        res.put(MAX_RAM_MB_PARAM, getMaxRamMB());\n        res.put(MAX_SIZE_PARAM, maxSize);\n        res.put(\"evictionsRamUsage\", evictionsRamUsage);\n      }\n      res.put(\"warmupTime\", warmupTime);\n\n      long clookups = stats.lookups.longValue();\n      long chits = stats.hits.longValue();\n      res.put(\"cumulative_lookups\", clookups);\n      res.put(\"cumulative_hits\", chits);\n      res.put(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n      res.put(\"cumulative_inserts\", stats.inserts.longValue());\n      res.put(\"cumulative_evictions\", stats.evictions.longValue());\n      res.put(\"cumulative_evictionsRamUsage\", stats.evictionsRamUsage.longValue());\n    });\n    manager.registerGauge(this, registryName, cacheMap, tag, true, scope, getCategory().toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c","date":1566455239,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LRUCache#initializeMetrics(SolrMetrics).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#initializeMetrics(SolrMetrics).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetrics m) {\n    solrMetrics = m.getChildInfo(this);\n    cacheMap = new MetricsMap((detailed, res) -> {\n      synchronized (map) {\n        res.put(LOOKUPS_PARAM, lookups);\n        res.put(HITS_PARAM, hits);\n        res.put(HIT_RATIO_PARAM, calcHitRatio(lookups,hits));\n        res.put(INSERTS_PARAM, inserts);\n        res.put(EVICTIONS_PARAM, evictions);\n        res.put(SIZE_PARAM, map.size());\n        res.put(RAM_BYTES_USED_PARAM, ramBytesUsed());\n        res.put(MAX_RAM_MB_PARAM, getMaxRamMB());\n        res.put(MAX_SIZE_PARAM, maxSize);\n        res.put(\"evictionsRamUsage\", evictionsRamUsage);\n      }\n      res.put(\"warmupTime\", warmupTime);\n\n      long clookups = stats.lookups.longValue();\n      long chits = stats.hits.longValue();\n      res.put(\"cumulative_lookups\", clookups);\n      res.put(\"cumulative_hits\", chits);\n      res.put(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n      res.put(\"cumulative_inserts\", stats.inserts.longValue());\n      res.put(\"cumulative_evictions\", stats.evictions.longValue());\n      res.put(\"cumulative_evictionsRamUsage\", stats.evictionsRamUsage.longValue());\n    });\n    String metricName = SolrMetricManager.makeName(ImmutableList.of(getCategory().toString()), solrMetrics.scope);\n    solrMetrics.gauge(this, cacheMap, true, metricName);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetrics m) {\n    solrMetrics = m.getChildInfo(this);\n    cacheMap = new MetricsMap((detailed, res) -> {\n      synchronized (map) {\n        res.put(LOOKUPS_PARAM, lookups);\n        res.put(HITS_PARAM, hits);\n        res.put(HIT_RATIO_PARAM, calcHitRatio(lookups,hits));\n        res.put(INSERTS_PARAM, inserts);\n        res.put(EVICTIONS_PARAM, evictions);\n        res.put(SIZE_PARAM, map.size());\n        res.put(RAM_BYTES_USED_PARAM, ramBytesUsed());\n        res.put(MAX_RAM_MB_PARAM, getMaxRamMB());\n        res.put(MAX_SIZE_PARAM, maxSize);\n        res.put(\"evictionsRamUsage\", evictionsRamUsage);\n      }\n      res.put(\"warmupTime\", warmupTime);\n\n      long clookups = stats.lookups.longValue();\n      long chits = stats.hits.longValue();\n      res.put(\"cumulative_lookups\", clookups);\n      res.put(\"cumulative_hits\", chits);\n      res.put(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n      res.put(\"cumulative_inserts\", stats.inserts.longValue());\n      res.put(\"cumulative_evictions\", stats.evictions.longValue());\n      res.put(\"cumulative_evictionsRamUsage\", stats.evictionsRamUsage.longValue());\n    });\n    solrMetrics.metricManager.registerGauge(this, solrMetrics.registry, cacheMap, solrMetrics.tag, true, solrMetrics.scope, getCategory().toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17c468812fc0c60f3d66b176339dc70564d8c3cb","date":1567918667,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LRUCache#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#initializeMetrics(SolrMetrics).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    registry = manager.registry(registryName);\n    cacheMap = new MetricsMap((detailed, res) -> {\n      synchronized (map) {\n        res.put(LOOKUPS_PARAM, lookups);\n        res.put(HITS_PARAM, hits);\n        res.put(HIT_RATIO_PARAM, calcHitRatio(lookups,hits));\n        res.put(INSERTS_PARAM, inserts);\n        res.put(EVICTIONS_PARAM, evictions);\n        res.put(SIZE_PARAM, map.size());\n        res.put(RAM_BYTES_USED_PARAM, ramBytesUsed());\n        res.put(MAX_RAM_MB_PARAM, getMaxRamMB());\n        res.put(MAX_SIZE_PARAM, maxSize);\n        res.put(\"evictionsRamUsage\", evictionsRamUsage);\n      }\n      res.put(\"warmupTime\", warmupTime);\n\n      long clookups = stats.lookups.longValue();\n      long chits = stats.hits.longValue();\n      res.put(\"cumulative_lookups\", clookups);\n      res.put(\"cumulative_hits\", chits);\n      res.put(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n      res.put(\"cumulative_inserts\", stats.inserts.longValue());\n      res.put(\"cumulative_evictions\", stats.evictions.longValue());\n      res.put(\"cumulative_evictionsRamUsage\", stats.evictionsRamUsage.longValue());\n    });\n    manager.registerGauge(this, registryName, cacheMap, tag, true, scope, getCategory().toString());\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetrics m) {\n    solrMetrics = m.getChildInfo(this);\n    cacheMap = new MetricsMap((detailed, res) -> {\n      synchronized (map) {\n        res.put(LOOKUPS_PARAM, lookups);\n        res.put(HITS_PARAM, hits);\n        res.put(HIT_RATIO_PARAM, calcHitRatio(lookups,hits));\n        res.put(INSERTS_PARAM, inserts);\n        res.put(EVICTIONS_PARAM, evictions);\n        res.put(SIZE_PARAM, map.size());\n        res.put(RAM_BYTES_USED_PARAM, ramBytesUsed());\n        res.put(MAX_RAM_MB_PARAM, getMaxRamMB());\n        res.put(MAX_SIZE_PARAM, maxSize);\n        res.put(\"evictionsRamUsage\", evictionsRamUsage);\n      }\n      res.put(\"warmupTime\", warmupTime);\n\n      long clookups = stats.lookups.longValue();\n      long chits = stats.hits.longValue();\n      res.put(\"cumulative_lookups\", clookups);\n      res.put(\"cumulative_hits\", chits);\n      res.put(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n      res.put(\"cumulative_inserts\", stats.inserts.longValue());\n      res.put(\"cumulative_evictions\", stats.evictions.longValue());\n      res.put(\"cumulative_evictionsRamUsage\", stats.evictionsRamUsage.longValue());\n    });\n    String metricName = SolrMetricManager.makeName(ImmutableList.of(getCategory().toString()), solrMetrics.scope);\n    solrMetrics.gauge(this, cacheMap, true, metricName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52275555c0ae3b55430cef26ad7fca3f02440944","date":1568033329,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/LRUCache#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#initializeMetrics(SolrMetrics).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    registry = manager.registry(registryName);\n    cacheMap = new MetricsMap((detailed, res) -> {\n      synchronized (map) {\n        res.put(LOOKUPS_PARAM, lookups);\n        res.put(HITS_PARAM, hits);\n        res.put(HIT_RATIO_PARAM, calcHitRatio(lookups,hits));\n        res.put(INSERTS_PARAM, inserts);\n        res.put(EVICTIONS_PARAM, evictions);\n        res.put(SIZE_PARAM, map.size());\n        res.put(RAM_BYTES_USED_PARAM, ramBytesUsed());\n        res.put(MAX_RAM_MB_PARAM, getMaxRamMB());\n        res.put(MAX_SIZE_PARAM, maxSize);\n        res.put(\"evictionsRamUsage\", evictionsRamUsage);\n      }\n      res.put(\"warmupTime\", warmupTime);\n\n      long clookups = stats.lookups.longValue();\n      long chits = stats.hits.longValue();\n      res.put(\"cumulative_lookups\", clookups);\n      res.put(\"cumulative_hits\", chits);\n      res.put(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n      res.put(\"cumulative_inserts\", stats.inserts.longValue());\n      res.put(\"cumulative_evictions\", stats.evictions.longValue());\n      res.put(\"cumulative_evictionsRamUsage\", stats.evictionsRamUsage.longValue());\n    });\n    manager.registerGauge(this, registryName, cacheMap, tag, true, scope, getCategory().toString());\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetrics m) {\n    solrMetrics = m.getChildInfo(this);\n    cacheMap = new MetricsMap((detailed, res) -> {\n      synchronized (map) {\n        res.put(LOOKUPS_PARAM, lookups);\n        res.put(HITS_PARAM, hits);\n        res.put(HIT_RATIO_PARAM, calcHitRatio(lookups,hits));\n        res.put(INSERTS_PARAM, inserts);\n        res.put(EVICTIONS_PARAM, evictions);\n        res.put(SIZE_PARAM, map.size());\n        res.put(RAM_BYTES_USED_PARAM, ramBytesUsed());\n        res.put(MAX_RAM_MB_PARAM, getMaxRamMB());\n        res.put(MAX_SIZE_PARAM, maxSize);\n        res.put(\"evictionsRamUsage\", evictionsRamUsage);\n      }\n      res.put(\"warmupTime\", warmupTime);\n\n      long clookups = stats.lookups.longValue();\n      long chits = stats.hits.longValue();\n      res.put(\"cumulative_lookups\", clookups);\n      res.put(\"cumulative_hits\", chits);\n      res.put(\"cumulative_hitratio\", calcHitRatio(clookups, chits));\n      res.put(\"cumulative_inserts\", stats.inserts.longValue());\n      res.put(\"cumulative_evictions\", stats.evictions.longValue());\n      res.put(\"cumulative_evictionsRamUsage\", stats.evictionsRamUsage.longValue());\n    });\n    String metricName = SolrMetricManager.makeName(ImmutableList.of(getCategory().toString()), solrMetrics.scope);\n    solrMetrics.gauge(this, cacheMap, true, metricName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"52275555c0ae3b55430cef26ad7fca3f02440944":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c":["a117d95183986014a31f25bb04e5464ca06d6068"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a117d95183986014a31f25bb04e5464ca06d6068":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["52275555c0ae3b55430cef26ad7fca3f02440944"]},"commit2Childs":{"52275555c0ae3b55430cef26ad7fca3f02440944":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c":["52275555c0ae3b55430cef26ad7fca3f02440944","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a117d95183986014a31f25bb04e5464ca06d6068"],"a117d95183986014a31f25bb04e5464ca06d6068":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["52275555c0ae3b55430cef26ad7fca3f02440944"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}