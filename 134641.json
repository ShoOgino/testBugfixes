{"path":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","commits":[{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(Searcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    return new TermWeight(searcher);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(Searcher searcher) throws IOException {\n    return new TermWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    return new TermWeight(searcher);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa1a999d6674423e5c4ac858b410283f6fe03f20","date":1294868331,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final ReaderContext context = searcher.getTopReaderContext();\n    final int weightDocFreq;\n    final PerReaderTermState termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = PerReaderTermState.build(context, term, true); // cache term lookups!\n      // we must not ignore the given docFreq - if set use the given value\n      weightDocFreq = docFreq == -1 ? termState.docFreq() : docFreq;\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n     weightDocFreq = docFreq;\n    }\n    \n    return new TermWeight(searcher, termState, weightDocFreq);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    return new TermWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":["365f98746545c0785c9778597f8558f5f91db4ad","365f98746545c0785c9778597f8558f5f91db4ad"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final ReaderContext context = searcher.getTopReaderContext();\n    final int weightDocFreq;\n    final PerReaderTermState termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = PerReaderTermState.build(context, term, true); // cache term lookups!\n      // we must not ignore the given docFreq - if set use the given value\n      weightDocFreq = docFreq == -1 ? termState.docFreq() : docFreq;\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n     weightDocFreq = docFreq;\n    }\n    \n    return new TermWeight(searcher, termState, weightDocFreq);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final ReaderContext context = searcher.getTopReaderContext();\n    final int weightDocFreq;\n    final PerReaderTermState termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = PerReaderTermState.build(context, term, true); // cache term lookups!\n      // we must not ignore the given docFreq - if set use the given value\n      weightDocFreq = docFreq == -1 ? termState.docFreq() : docFreq;\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n     weightDocFreq = docFreq;\n    }\n    \n    return new TermWeight(searcher, termState, weightDocFreq);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    return new TermWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final ReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = TermContext.build(context, term, true); // cache term lookups!\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n    }\n\n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1)\n      termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final ReaderContext context = searcher.getTopReaderContext();\n    final int weightDocFreq;\n    final PerReaderTermState termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = PerReaderTermState.build(context, term, true); // cache term lookups!\n      // we must not ignore the given docFreq - if set use the given value\n      weightDocFreq = docFreq == -1 ? termState.docFreq() : docFreq;\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n     weightDocFreq = docFreq;\n    }\n    \n    return new TermWeight(searcher, termState, weightDocFreq);\n  }\n\n","bugFix":null,"bugIntro":["365f98746545c0785c9778597f8558f5f91db4ad","365f98746545c0785c9778597f8558f5f91db4ad"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final ReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = TermContext.build(context, term, true); // cache term lookups!\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n    }\n\n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1)\n      termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final ReaderContext context = searcher.getTopReaderContext();\n    final int weightDocFreq;\n    final PerReaderTermState termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = PerReaderTermState.build(context, term, true); // cache term lookups!\n      // we must not ignore the given docFreq - if set use the given value\n      weightDocFreq = docFreq == -1 ? termState.docFreq() : docFreq;\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n     weightDocFreq = docFreq;\n    }\n    \n    return new TermWeight(searcher, termState, weightDocFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final ReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = TermContext.build(context, term, true); // cache term lookups!\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n    }\n\n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1)\n      termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final ReaderContext context = searcher.getTopReaderContext();\n    final int weightDocFreq;\n    final PerReaderTermState termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = PerReaderTermState.build(context, term, true); // cache term lookups!\n      // we must not ignore the given docFreq - if set use the given value\n      weightDocFreq = docFreq == -1 ? termState.docFreq() : docFreq;\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n     weightDocFreq = docFreq;\n    }\n    \n    return new TermWeight(searcher, termState, weightDocFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8493985e6883b3fa8231d172694d2aa3a85cb182","date":1327920390,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = TermContext.build(context, term, true); // cache term lookups!\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n    }\n\n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1)\n      termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final ReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = TermContext.build(context, term, true); // cache term lookups!\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n    }\n\n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1)\n      termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = TermContext.build(context, term, true); // cache term lookups!\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n    }\n\n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1)\n      termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final ReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = TermContext.build(context, term, true); // cache term lookups!\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n    }\n\n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1)\n      termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = TermContext.build(context, term, true); // cache term lookups!\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n    }\n\n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1)\n      termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context differs!\n      termState = TermContext.build(context, term, true); // cache term lookups!\n    } else {\n     // PRTS was pre-build for this IS\n     termState = this.perReaderTermState;\n    }\n\n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1)\n      termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["fa1a999d6674423e5c4ac858b410283f6fe03f20"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["0f3cee3d20b0c786e6fca20539454262e29edcab","8493985e6883b3fa8231d172694d2aa3a85cb182"],"1291e4568eb7d9463d751627596ef14baf4c1603":["fa1a999d6674423e5c4ac858b410283f6fe03f20","0f3cee3d20b0c786e6fca20539454262e29edcab"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["fa1a999d6674423e5c4ac858b410283f6fe03f20","0f3cee3d20b0c786e6fca20539454262e29edcab"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","fa1a999d6674423e5c4ac858b410283f6fe03f20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa1a999d6674423e5c4ac858b410283f6fe03f20":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fa1a999d6674423e5c4ac858b410283f6fe03f20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["8493985e6883b3fa8231d172694d2aa3a85cb182","5cab9a86bd67202d20b6adc463008c8e982b070a","1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","fa1a999d6674423e5c4ac858b410283f6fe03f20"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7","868da859b43505d9d2a023bfeae6dd0c795f5295"],"fa1a999d6674423e5c4ac858b410283f6fe03f20":["0f3cee3d20b0c786e6fca20539454262e29edcab","1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}