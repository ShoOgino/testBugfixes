{"path":"src/test/org/apache/lucene/index/TestCompoundFile#assertSameSeekBehavior(String,IndexInput,IndexInput).mjava","commits":[{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCompoundFile#assertSameSeekBehavior(String,IndexInput,IndexInput).mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#assertSameSeekBehavior(String,InputStream,InputStream).mjava","sourceNew":"    private void assertSameSeekBehavior(String msg,\n                                        IndexInput expected,\n                                        IndexInput actual)\n    throws IOException\n    {\n        // seek to 0\n        long point = 0;\n        assertSameStreams(msg + \", seek(0)\", expected, actual, point);\n\n        // seek to middle\n        point = expected.length() / 2l;\n        assertSameStreams(msg + \", seek(mid)\", expected, actual, point);\n\n        // seek to end - 2\n        point = expected.length() - 2;\n        assertSameStreams(msg + \", seek(end-2)\", expected, actual, point);\n\n        // seek to end - 1\n        point = expected.length() - 1;\n        assertSameStreams(msg + \", seek(end-1)\", expected, actual, point);\n\n        // seek to the end\n        point = expected.length();\n        assertSameStreams(msg + \", seek(end)\", expected, actual, point);\n\n        // seek past end\n        point = expected.length() + 1;\n        assertSameStreams(msg + \", seek(end+1)\", expected, actual, point);\n    }\n\n","sourceOld":"    private void assertSameSeekBehavior(String msg,\n                                        InputStream expected,\n                                        InputStream actual)\n    throws IOException\n    {\n        // seek to 0\n        long point = 0;\n        assertSameStreams(msg + \", seek(0)\", expected, actual, point);\n\n        // seek to middle\n        point = expected.length() / 2l;\n        assertSameStreams(msg + \", seek(mid)\", expected, actual, point);\n\n        // seek to end - 2\n        point = expected.length() - 2;\n        assertSameStreams(msg + \", seek(end-2)\", expected, actual, point);\n\n        // seek to end - 1\n        point = expected.length() - 1;\n        assertSameStreams(msg + \", seek(end-1)\", expected, actual, point);\n\n        // seek to the end\n        point = expected.length();\n        assertSameStreams(msg + \", seek(end)\", expected, actual, point);\n\n        // seek past end\n        point = expected.length() + 1;\n        assertSameStreams(msg + \", seek(end+1)\", expected, actual, point);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#assertSameSeekBehavior(String,IndexInput,IndexInput).mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#assertSameSeekBehavior(String,IndexInput,IndexInput).mjava","sourceNew":"    private void assertSameSeekBehavior(String msg,\n                                        IndexInput expected,\n                                        IndexInput actual)\n    throws IOException\n    {\n        // seek to 0\n        long point = 0;\n        assertSameStreams(msg + \", seek(0)\", expected, actual, point);\n\n        // seek to middle\n        point = expected.length() / 2l;\n        assertSameStreams(msg + \", seek(mid)\", expected, actual, point);\n\n        // seek to end - 2\n        point = expected.length() - 2;\n        assertSameStreams(msg + \", seek(end-2)\", expected, actual, point);\n\n        // seek to end - 1\n        point = expected.length() - 1;\n        assertSameStreams(msg + \", seek(end-1)\", expected, actual, point);\n\n        // seek to the end\n        point = expected.length();\n        assertSameStreams(msg + \", seek(end)\", expected, actual, point);\n\n        // seek past end\n        point = expected.length() + 1;\n        assertSameStreams(msg + \", seek(end+1)\", expected, actual, point);\n    }\n\n","sourceOld":"    private void assertSameSeekBehavior(String msg,\n                                        IndexInput expected,\n                                        IndexInput actual)\n    throws IOException\n    {\n        // seek to 0\n        long point = 0;\n        assertSameStreams(msg + \", seek(0)\", expected, actual, point);\n\n        // seek to middle\n        point = expected.length() / 2l;\n        assertSameStreams(msg + \", seek(mid)\", expected, actual, point);\n\n        // seek to end - 2\n        point = expected.length() - 2;\n        assertSameStreams(msg + \", seek(end-2)\", expected, actual, point);\n\n        // seek to end - 1\n        point = expected.length() - 1;\n        assertSameStreams(msg + \", seek(end-1)\", expected, actual, point);\n\n        // seek to the end\n        point = expected.length();\n        assertSameStreams(msg + \", seek(end)\", expected, actual, point);\n\n        // seek past end\n        point = expected.length() + 1;\n        assertSameStreams(msg + \", seek(end+1)\", expected, actual, point);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e971ba25509e21a130fef61f0687be0446ca27a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e971ba25509e21a130fef61f0687be0446ca27a0"]},"commit2Childs":{"e971ba25509e21a130fef61f0687be0446ca27a0":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e971ba25509e21a130fef61f0687be0446ca27a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}