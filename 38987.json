{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter.VisitorTemplate#findSubCellsToVisit(Node).mjava","commits":[{"id":"c659c37800c0dfd82fa025b5834f4ab065903d11","date":1361851047,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter.VisitorTemplate#findSubCellsToVisit(Node).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Called when doing a divide & conquer to find the next intersecting cells\n     * of the query shape that are beneath {@code cell}. {@code cell} is\n     * guaranteed to have an intersection and thus this must return some number\n     * of nodes.\n     */\n    protected Iterator<Node> findSubCellsToVisit(Node cell) {\n      return cell.getSubCells(queryShape).iterator();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8259c159da2de2e8528524fb76b244b46cbded59","date":1364478249,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter.VisitorTemplate#findSubCellsToVisit(Cell).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter.VisitorTemplate#findSubCellsToVisit(Node).mjava","sourceNew":"    /**\n     * Called when doing a divide & conquer to find the next intersecting cells\n     * of the query shape that are beneath {@code cell}. {@code cell} is\n     * guaranteed to have an intersection and thus this must return some number\n     * of nodes.\n     */\n    protected Iterator<Cell> findSubCellsToVisit(Cell cell) {\n      return cell.getSubCells(queryShape).iterator();\n    }\n\n","sourceOld":"    /**\n     * Called when doing a divide & conquer to find the next intersecting cells\n     * of the query shape that are beneath {@code cell}. {@code cell} is\n     * guaranteed to have an intersection and thus this must return some number\n     * of nodes.\n     */\n    protected Iterator<Node> findSubCellsToVisit(Node cell) {\n      return cell.getSubCells(queryShape).iterator();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8259c159da2de2e8528524fb76b244b46cbded59"],"8259c159da2de2e8528524fb76b244b46cbded59":["c659c37800c0dfd82fa025b5834f4ab065903d11"],"c659c37800c0dfd82fa025b5834f4ab065903d11":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c659c37800c0dfd82fa025b5834f4ab065903d11"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8259c159da2de2e8528524fb76b244b46cbded59":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c659c37800c0dfd82fa025b5834f4ab065903d11":["8259c159da2de2e8528524fb76b244b46cbded59"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}