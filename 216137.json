{"path":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#SlicedIndexInput(String,IndexInput,long,long,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#SlicedIndexInput(String,IndexInput,long,long,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#SlicedIndexInput(String,IndexInput,long,long,int).mjava","sourceNew":"    SlicedIndexInput(final String sliceDescription, final IndexInput base, final long fileOffset, final long length, int readBufferSize) {\n      super(\"SlicedIndexInput(\" + sliceDescription + \" in \" + base + \" slice=\" + fileOffset + \":\" + (fileOffset+length) + \")\", readBufferSize);\n      this.base = (IndexInput) base.clone();\n      this.fileOffset = fileOffset;\n      this.length = length;\n    }\n\n","sourceOld":"    SlicedIndexInput(final String sliceDescription, final IndexInput base, final long fileOffset, final long length, int readBufferSize) {\n      super(\"SlicedIndexInput(\" + sliceDescription + \" in \" + base + \" slice=\" + fileOffset + \":\" + (fileOffset+length) + \")\", readBufferSize);\n      this.base = (IndexInput) base.clone();\n      this.fileOffset = fileOffset;\n      this.length = length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7460755aa94143153400f49c8ac2746f5d092e1a","date":1345536974,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#SlicedIndexInput(String,IndexInput,long,long,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#SlicedIndexInput(String,IndexInput,long,long,int).mjava","sourceNew":"    SlicedIndexInput(final String sliceDescription, final IndexInput base, final long fileOffset, final long length, int readBufferSize) {\n      super(\"SlicedIndexInput(\" + sliceDescription + \" in \" + base + \" slice=\" + fileOffset + \":\" + (fileOffset+length) + \")\", readBufferSize);\n      this.base = base.clone();\n      this.fileOffset = fileOffset;\n      this.length = length;\n    }\n\n","sourceOld":"    SlicedIndexInput(final String sliceDescription, final IndexInput base, final long fileOffset, final long length, int readBufferSize) {\n      super(\"SlicedIndexInput(\" + sliceDescription + \" in \" + base + \" slice=\" + fileOffset + \":\" + (fileOffset+length) + \")\", readBufferSize);\n      this.base = (IndexInput) base.clone();\n      this.fileOffset = fileOffset;\n      this.length = length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#SlicedIndexInput(String,IndexInput,long,long,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#SlicedIndexInput(String,IndexInput,long,long,int).mjava","sourceNew":"    SlicedIndexInput(final String sliceDescription, final IndexInput base, final long fileOffset, final long length, int readBufferSize) {\n      super(\"SlicedIndexInput(\" + sliceDescription + \" in \" + base + \" slice=\" + fileOffset + \":\" + (fileOffset+length) + \")\", readBufferSize);\n      this.base = base.clone();\n      this.fileOffset = fileOffset;\n      this.length = length;\n    }\n\n","sourceOld":"    SlicedIndexInput(final String sliceDescription, final IndexInput base, final long fileOffset, final long length, int readBufferSize) {\n      super(\"SlicedIndexInput(\" + sliceDescription + \" in \" + base + \" slice=\" + fileOffset + \":\" + (fileOffset+length) + \")\", readBufferSize);\n      this.base = (IndexInput) base.clone();\n      this.fileOffset = fileOffset;\n      this.length = length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","date":1400334249,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#SlicedIndexInput(String,IndexInput,long,long,int).mjava","sourceNew":null,"sourceOld":"    SlicedIndexInput(final String sliceDescription, final IndexInput base, final long fileOffset, final long length, int readBufferSize) {\n      super(\"SlicedIndexInput(\" + sliceDescription + \" in \" + base + \" slice=\" + fileOffset + \":\" + (fileOffset+length) + \")\", readBufferSize);\n      this.base = base.clone();\n      this.fileOffset = fileOffset;\n      this.length = length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#SlicedIndexInput(String,IndexInput,long,long,int).mjava","sourceNew":null,"sourceOld":"    SlicedIndexInput(final String sliceDescription, final IndexInput base, final long fileOffset, final long length, int readBufferSize) {\n      super(\"SlicedIndexInput(\" + sliceDescription + \" in \" + base + \" slice=\" + fileOffset + \":\" + (fileOffset+length) + \")\", readBufferSize);\n      this.base = base.clone();\n      this.fileOffset = fileOffset;\n      this.length = length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7460755aa94143153400f49c8ac2746f5d092e1a"],"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["7460755aa94143153400f49c8ac2746f5d092e1a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["7460755aa94143153400f49c8ac2746f5d092e1a","e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"],"7460755aa94143153400f49c8ac2746f5d092e1a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["001b25b42373b22a52f399dbf072f1224632e8e6","7460755aa94143153400f49c8ac2746f5d092e1a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"7460755aa94143153400f49c8ac2746f5d092e1a":["001b25b42373b22a52f399dbf072f1224632e8e6","e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","56572ec06f1407c066d6b7399413178b33176cd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}