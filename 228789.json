{"path":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","pathOld":"modules/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","sourceNew":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liść\", \"list\", \"lista\", \"dany\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 7, 7, 7 },\n      new int[] { 6, 6, 6, 13, 13, 13 },\n      new int[] { 1, 0, 0, 1, 0, 0 });\n  }\n\n","sourceOld":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liść\", \"list\", \"lista\", \"dany\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 7, 7, 7 },\n      new int[] { 6, 6, 6, 13, 13, 13 },\n      new int[] { 1, 0, 0, 1, 0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84ab9fb766b354a9a9f16580a1162aac7ebbfc51","date":1340868936,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","sourceNew":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n  }\n\n","sourceOld":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liść\", \"list\", \"lista\", \"dany\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 7, 7, 7 },\n      new int[] { 6, 6, 6, 13, 13, 13 },\n      new int[] { 1, 0, 0, 1, 0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","sourceNew":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n  }\n\n","sourceOld":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liść\", \"list\", \"lista\", \"dany\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 7, 7, 7 },\n      new int[] { 6, 6, 6, 13, 13, 13 },\n      new int[] { 1, 0, 0, 1, 0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d8ddc12dae0634654a3f363c0f211dccebc3d7b","date":1366637163,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","sourceNew":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n\n    assertAnalyzesToReuse(\n        a,\n        \"T. Gl\\u00FCcksberg\",\n        new String[] { \"to\", \"tom\", \"tona\", \"Gl\\u00FCcksberg\" },\n        new int[] { 0, 0, 0, 3  },\n        new int[] { 1, 1, 1, 13 },\n        new int[] { 1, 0, 0, 1  });\n  }\n\n","sourceOld":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43cfa455b570ba7bf8eefe91de210d46c68a0a2a","date":1372853690,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","sourceNew":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n\n    assertAnalyzesToReuse(\n        a,\n        \"T. Gl\\u00FCcksberg\",\n        new String[] { \"tom\", \"tona\", \"Gl\\u00FCcksberg\" },\n        new int[] { 0, 0, 3  },\n        new int[] { 1, 1, 13 },\n        new int[] { 1, 0, 1  });\n  }\n\n","sourceOld":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n\n    assertAnalyzesToReuse(\n        a,\n        \"T. Gl\\u00FCcksberg\",\n        new String[] { \"to\", \"tom\", \"tona\", \"Gl\\u00FCcksberg\" },\n        new int[] { 0, 0, 0, 3  },\n        new int[] { 1, 1, 1, 13 },\n        new int[] { 1, 0, 0, 1  });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","sourceNew":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n\n    assertAnalyzesToReuse(\n        a,\n        \"T. Gl\\u00FCcksberg\",\n        new String[] { \"tom\", \"tona\", \"Gl\\u00FCcksberg\" },\n        new int[] { 0, 0, 3  },\n        new int[] { 1, 1, 13 },\n        new int[] { 1, 0, 1  });\n  }\n\n","sourceOld":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n\n    assertAnalyzesToReuse(\n        a,\n        \"T. Gl\\u00FCcksberg\",\n        new String[] { \"to\", \"tom\", \"tona\", \"Gl\\u00FCcksberg\" },\n        new int[] { 0, 0, 0, 3  },\n        new int[] { 1, 1, 1, 13 },\n        new int[] { 1, 0, 0, 1  });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","date":1379858263,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","sourceNew":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesTo(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n\n    assertAnalyzesTo(\n        a,\n        \"T. Gl\\u00FCcksberg\",\n        new String[] { \"tom\", \"tona\", \"Gl\\u00FCcksberg\" },\n        new int[] { 0, 0, 3  },\n        new int[] { 1, 1, 13 },\n        new int[] { 1, 0, 1  });\n  }\n\n","sourceOld":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesToReuse(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n\n    assertAnalyzesToReuse(\n        a,\n        \"T. Gl\\u00FCcksberg\",\n        new String[] { \"tom\", \"tona\", \"Gl\\u00FCcksberg\" },\n        new int[] { 0, 0, 3  },\n        new int[] { 1, 1, 13 },\n        new int[] { 1, 0, 1  });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","sourceNew":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesTo(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n\n    assertAnalyzesTo(\n        a,\n        \"T. Gl\\u00FCcksberg\",\n        new String[] { \"tom\", \"tona\", \"Gl\\u00FCcksberg\" },\n        new int[] { 0, 0, 3  },\n        new int[] { 1, 1, 13 },\n        new int[] { 1, 0, 1  });\n    a.close();\n  }\n\n","sourceOld":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesTo(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n\n    assertAnalyzesTo(\n        a,\n        \"T. Gl\\u00FCcksberg\",\n        new String[] { \"tom\", \"tona\", \"Gl\\u00FCcksberg\" },\n        new int[] { 0, 0, 3  },\n        new int[] { 1, 1, 13 },\n        new int[] { 1, 0, 1  });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","pathOld":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikAnalyzer#testMultipleTokens().mjava","sourceNew":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesTo(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n\n    assertAnalyzesTo(\n        a,\n        \"T. Gl\\u00FCcksberg\",\n        new String[] { \"tom\", \"tona\", \"Gl\\u00FCcksberg\" },\n        new int[] { 0, 0, 3  },\n        new int[] { 1, 1, 13 },\n        new int[] { 1, 0, 1  });\n    a.close();\n  }\n\n","sourceOld":"  /** Test stemming of multiple tokens and proper term metrics. */\n  public final void testMultipleTokens() throws IOException {\n    Analyzer a = getTestAnalyzer();\n    assertAnalyzesTo(\n      a,\n      \"liście danych\",\n      new String[] { \"liście\", \"liść\", \"list\", \"lista\", \"dany\", \"dana\", \"dane\", \"dać\" },\n      new int[] { 0, 0, 0, 0, 7, 7, 7, 7 },\n      new int[] { 6, 6, 6, 6, 13, 13, 13, 13 },\n      new int[] { 1, 0, 0, 0, 1, 0, 0, 0 });\n\n    assertAnalyzesTo(\n        a,\n        \"T. Gl\\u00FCcksberg\",\n        new String[] { \"tom\", \"tona\", \"Gl\\u00FCcksberg\" },\n        new int[] { 0, 0, 3  },\n        new int[] { 1, 1, 13 },\n        new int[] { 1, 0, 1  });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d8ddc12dae0634654a3f363c0f211dccebc3d7b":["84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["43cfa455b570ba7bf8eefe91de210d46c68a0a2a"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["0d8ddc12dae0634654a3f363c0f211dccebc3d7b","43cfa455b570ba7bf8eefe91de210d46c68a0a2a"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"43cfa455b570ba7bf8eefe91de210d46c68a0a2a":["0d8ddc12dae0634654a3f363c0f211dccebc3d7b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84ab9fb766b354a9a9f16580a1162aac7ebbfc51":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"0d8ddc12dae0634654a3f363c0f211dccebc3d7b":["37a0f60745e53927c4c876cfe5b5a58170f0646c","43cfa455b570ba7bf8eefe91de210d46c68a0a2a"],"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"43cfa455b570ba7bf8eefe91de210d46c68a0a2a":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"84ab9fb766b354a9a9f16580a1162aac7ebbfc51":["0d8ddc12dae0634654a3f363c0f211dccebc3d7b","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","37a0f60745e53927c4c876cfe5b5a58170f0646c","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}