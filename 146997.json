{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    return \"Slice [shards=\" + shards + \", name=\" + name + \"]\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    return \"Slice [shards=\" + shards + \", name=\" + name + \"]\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    return \"Slice [shards=\" + shards + \", name=\" + name + \"]\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa64435b5902ce266c23755a4a00691a3285dab8","date":1347243290,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","sourceNew":"  /***\n  // returns a copy of this slice containing the new replica\n  public Slice addReplica(Replica replica) {\n    Map<String, Object> newProps = new LinkedHashMap<String,Object>(props);\n    Map<String, Replica> replicas = getReplicasMap();\n    Map<String, Replica> newReplicas = replicas == null ? new HashMap<String, Replica>(1) : new LinkedHashMap<String, Replica>(replicas);\n//    newReplicas.put(replica.getName(), replica);\n    newProps.put(REPLICAS, replicas);\n    return new Slice(name, newProps); // TODO: new constructor that takes replicas as-is w/o rebuilding\n  }\n\n  public static Slice newSlice(String name) {\n    Map<String, Object> props = new HashMap<String,Object>(1);\n    props.put(\"replicas\", new HashMap<String,Object>(1));\n    return new Slice(name, props);\n  }\n   ***/\n\n  @Override\n  public String toString() {\n    return \"Slice [replicas=\" + replicas + \", name=\" + name + \"]\";\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    return \"Slice [shards=\" + shards + \", name=\" + name + \"]\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fb6447b8fb770940a5ac226ed7ed425e37be5bf","date":1347278367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    return \"Slice [replicas=\" + replicas + \", name=\" + name + \"]\";\n  }\n\n","sourceOld":"  /***\n  // returns a copy of this slice containing the new replica\n  public Slice addReplica(Replica replica) {\n    Map<String, Object> newProps = new LinkedHashMap<String,Object>(props);\n    Map<String, Replica> replicas = getReplicasMap();\n    Map<String, Replica> newReplicas = replicas == null ? new HashMap<String, Replica>(1) : new LinkedHashMap<String, Replica>(replicas);\n//    newReplicas.put(replica.getName(), replica);\n    newProps.put(REPLICAS, replicas);\n    return new Slice(name, newProps); // TODO: new constructor that takes replicas as-is w/o rebuilding\n  }\n\n  public static Slice newSlice(String name) {\n    Map<String, Object> props = new HashMap<String,Object>(1);\n    props.put(\"replicas\", new HashMap<String,Object>(1));\n    return new Slice(name, props);\n  }\n   ***/\n\n  @Override\n  public String toString() {\n    return \"Slice [replicas=\" + replicas + \", name=\" + name + \"]\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e7d59baa18f0aed2bb5f93a76ffce5343aee13d","date":1347918051,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    return name + ':' + JSONUtil.toJSON(propMap);\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    return \"Slice [replicas=\" + replicas + \", name=\" + name + \"]\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3714bcf66a68a1600e9dd11442fc1b33b62ef088","date":1556832005,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    return name + ':' + toJSONString(propMap);\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    return name + ':' + JSONUtil.toJSON(propMap);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"7e7d59baa18f0aed2bb5f93a76ffce5343aee13d":["2fb6447b8fb770940a5ac226ed7ed425e37be5bf"],"fa64435b5902ce266c23755a4a00691a3285dab8":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2fb6447b8fb770940a5ac226ed7ed425e37be5bf":["fa64435b5902ce266c23755a4a00691a3285dab8"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["7e7d59baa18f0aed2bb5f93a76ffce5343aee13d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"]},"commit2Childs":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"7e7d59baa18f0aed2bb5f93a76ffce5343aee13d":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"],"fa64435b5902ce266c23755a4a00691a3285dab8":["2fb6447b8fb770940a5ac226ed7ed425e37be5bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","fa64435b5902ce266c23755a4a00691a3285dab8","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"2fb6447b8fb770940a5ac226ed7ed425e37be5bf":["7e7d59baa18f0aed2bb5f93a76ffce5343aee13d"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}