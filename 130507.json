{"path":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","commits":[{"id":"0762b640e0d0d12b6edb96db68986e13145c3484","date":1307575932,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link TEST_NIGHTLY}\n   * is active and {@link RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 25 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 90); // never more than 90\n    return random.nextInt(100) >= min;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"900bb63cd42468ef6554050d16ec01094c6ca9ec","date":1307586093,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","sourceNew":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link #TEST_NIGHTLY}\n   * is active and {@link #RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 25 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 90); // never more than 90\n    return random.nextInt(100) >= min;\n  }\n\n","sourceOld":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link TEST_NIGHTLY}\n   * is active and {@link RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 25 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 90); // never more than 90\n    return random.nextInt(100) >= min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link #TEST_NIGHTLY}\n   * is active and {@link #RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 25 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 90); // never more than 90\n    return random.nextInt(100) >= min;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link #TEST_NIGHTLY}\n   * is active and {@link #RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 25 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 90); // never more than 90\n    return random.nextInt(100) >= min;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"459280d4c73660ea582f38afce7968563068fe49","date":1311128716,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","sourceNew":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link #TEST_NIGHTLY}\n   * is active and {@link #RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 10 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 50); // never more than 50\n    return random.nextInt(100) >= min;\n  }\n\n","sourceOld":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link #TEST_NIGHTLY}\n   * is active and {@link #RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 25 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 90); // never more than 90\n    return random.nextInt(100) >= min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","sourceNew":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link #TEST_NIGHTLY}\n   * is active and {@link #RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 10 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 50); // never more than 50\n    return random.nextInt(100) >= min;\n  }\n\n","sourceOld":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link #TEST_NIGHTLY}\n   * is active and {@link #RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 10 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 50); // never more than 50\n    return random.nextInt(100) >= min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","900bb63cd42468ef6554050d16ec01094c6ca9ec"],"7b91922b55d15444d554721b352861d028eb8278":["459280d4c73660ea582f38afce7968563068fe49"],"900bb63cd42468ef6554050d16ec01094c6ca9ec":["0762b640e0d0d12b6edb96db68986e13145c3484"],"0762b640e0d0d12b6edb96db68986e13145c3484":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"459280d4c73660ea582f38afce7968563068fe49":["900bb63cd42468ef6554050d16ec01094c6ca9ec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","900bb63cd42468ef6554050d16ec01094c6ca9ec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"900bb63cd42468ef6554050d16ec01094c6ca9ec":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","459280d4c73660ea582f38afce7968563068fe49","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0762b640e0d0d12b6edb96db68986e13145c3484":["900bb63cd42468ef6554050d16ec01094c6ca9ec"],"459280d4c73660ea582f38afce7968563068fe49":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","0762b640e0d0d12b6edb96db68986e13145c3484","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}