{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(BooleanClause.Occur,Query...).mjava","commits":[{"id":"4dfc24eeacea277c182acfad3a446cf9137f791d","date":1403022573,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(BooleanClause.Occur,Query...).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(Query[],BooleanClause.Occur).mjava","sourceNew":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param occur the logical operator\n   * @param queries the query collection\n   * @return the query\n   */\n  BooleanQuery makeQuery(BooleanClause.Occur occur, Query... queries) {\n    BooleanQuery bq = new BooleanQuery();\n    for (Query query : queries) {\n      bq.add(query, occur);\n    }\n    return bq;\n  }\n\n","sourceOld":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param queries the query collection\n   * @param occur the logical operator\n   * @return the query\n   */\n  BooleanQuery makeQuery(Query[] queries, BooleanClause.Occur occur) {\n    BooleanQuery bq = new BooleanQuery();\n    for (Query query : queries) {\n      bq.add(query, occur);\n    }\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(BooleanClause.Occur,Query...).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(Query[],BooleanClause.Occur).mjava","sourceNew":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param occur the logical operator\n   * @param queries the query collection\n   * @return the query\n   */\n  BooleanQuery makeQuery(BooleanClause.Occur occur, Query... queries) {\n    BooleanQuery bq = new BooleanQuery();\n    for (Query query : queries) {\n      bq.add(query, occur);\n    }\n    return bq;\n  }\n\n","sourceOld":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param queries the query collection\n   * @param occur the logical operator\n   * @return the query\n   */\n  BooleanQuery makeQuery(Query[] queries, BooleanClause.Occur occur) {\n    BooleanQuery bq = new BooleanQuery();\n    for (Query query : queries) {\n      bq.add(query, occur);\n    }\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018","date":1404828935,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(BooleanClause.Occur,Query...).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(BooleanClause.Occur,Query...).mjava","sourceNew":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param occur the logical operator\n   * @param queries the query collection\n   * @return the query\n   */\n  BooleanQuery makeQuery(BooleanClause.Occur occur, Query... queries) {\n    BooleanQuery bq = new BooleanQuery();\n    for (Query query : queries) {\n      if (query != null)\n        bq.add(query, occur);\n    }\n    return bq;\n  }\n\n","sourceOld":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param occur the logical operator\n   * @param queries the query collection\n   * @return the query\n   */\n  BooleanQuery makeQuery(BooleanClause.Occur occur, Query... queries) {\n    BooleanQuery bq = new BooleanQuery();\n    for (Query query : queries) {\n      bq.add(query, occur);\n    }\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(BooleanClause.Occur,Query...).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(BooleanClause.Occur,Query...).mjava","sourceNew":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param occur the logical operator\n   * @param queries the query collection\n   * @return the query\n   */\n  BooleanQuery makeQuery(BooleanClause.Occur occur, Query... queries) {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    for (Query query : queries) {\n      if (query != null)\n        bq.add(query, occur);\n    }\n    return bq.build();\n  }\n\n","sourceOld":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param occur the logical operator\n   * @param queries the query collection\n   * @return the query\n   */\n  BooleanQuery makeQuery(BooleanClause.Occur occur, Query... queries) {\n    BooleanQuery bq = new BooleanQuery();\n    for (Query query : queries) {\n      if (query != null)\n        bq.add(query, occur);\n    }\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(BooleanClause.Occur,Query...).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(BooleanClause.Occur,Query...).mjava","sourceNew":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param occur the logical operator\n   * @param queries the query collection\n   * @return the query\n   */\n  BooleanQuery makeQuery(BooleanClause.Occur occur, Query... queries) {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    for (Query query : queries) {\n      if (query != null)\n        bq.add(query, occur);\n    }\n    return bq.build();\n  }\n\n","sourceOld":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param occur the logical operator\n   * @param queries the query collection\n   * @return the query\n   */\n  BooleanQuery makeQuery(BooleanClause.Occur occur, Query... queries) {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    for (Query query : queries) {\n      if (query != null)\n        bq.add(query, occur);\n    }\n    return bq.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(BooleanClause.Occur,Query...).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxStrategy#makeQuery(BooleanClause.Occur,Query...).mjava","sourceNew":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param occur the logical operator\n   * @param queries the query collection\n   * @return the query\n   */\n  BooleanQuery makeQuery(BooleanClause.Occur occur, Query... queries) {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    for (Query query : queries) {\n      if (query != null)\n        bq.add(query, occur);\n    }\n    return bq.build();\n  }\n\n","sourceOld":"  /**\n   * Makes a boolean query based upon a collection of queries and a logical operator.\n   *\n   * @param occur the logical operator\n   * @param queries the query collection\n   * @return the query\n   */\n  BooleanQuery makeQuery(BooleanClause.Occur occur, Query... queries) {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    for (Query query : queries) {\n      if (query != null)\n        bq.add(query, occur);\n    }\n    return bq.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018"],"4dfc24eeacea277c182acfad3a446cf9137f791d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"af2638813028b254a88b418ebeafb541afb49653":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","112d77ac8d3e10a362516ad834c9a11d35c94234"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4dfc24eeacea277c182acfad3a446cf9137f791d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018":["4dfc24eeacea277c182acfad3a446cf9137f791d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"4dfc24eeacea277c182acfad3a446cf9137f791d":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4dfc24eeacea277c182acfad3a446cf9137f791d","e57c73924f3b8c19defa62e96bfa34a4922d49c2"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}