{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","commits":[{"id":"8259c159da2de2e8528524fb76b244b46cbded59","date":1364478249,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getNode(Point,int).mjava","sourceNew":"  @Override\n  public Cell getCell(Point p, int level) {\n    List<Cell> cells = new ArrayList<Cell>(1);\n    build(xmid, ymid, 0, cells, new StringBuilder(), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","sourceOld":"  @Override\n  public Node getNode(Point p, int level) {\n    List<Node> cells = new ArrayList<Node>(1);\n    build(xmid, ymid, 0, cells, new StringBuilder(), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","sourceNew":"  @Override\n  public Cell getCell(Point p, int level) {\n    List<Cell> cells = new ArrayList<>(1);\n    build(xmid, ymid, 0, cells, new StringBuilder(), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","sourceOld":"  @Override\n  public Cell getCell(Point p, int level) {\n    List<Cell> cells = new ArrayList<Cell>(1);\n    build(xmid, ymid, 0, cells, new StringBuilder(), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","bugFix":null,"bugIntro":["e34e9db64b6fb5add5b2968e3a46342cef8363c7","e34e9db64b6fb5add5b2968e3a46342cef8363c7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4de14be4bd1b857ba37ca138b61c4661c6d1bed3","date":1396628861,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","sourceNew":"  @Override\n  public Cell getCell(Point p, int level) {\n    List<Cell> cells = new ArrayList<>(1);\n    build(xmid, ymid, 0, cells, new BytesRef(maxLevels+1), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","sourceOld":"  @Override\n  public Cell getCell(Point p, int level) {\n    List<Cell> cells = new ArrayList<>(1);\n    build(xmid, ymid, 0, cells, new StringBuilder(), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","bugFix":null,"bugIntro":["e34e9db64b6fb5add5b2968e3a46342cef8363c7","e34e9db64b6fb5add5b2968e3a46342cef8363c7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","sourceNew":"  @Override\n  public Cell getCell(Point p, int level) {\n    List<Cell> cells = new ArrayList<>(1);\n    build(xmid, ymid, 0, cells, new BytesRef(maxLevels+1), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","sourceOld":"  @Override\n  public Cell getCell(Point p, int level) {\n    List<Cell> cells = new ArrayList<>(1);\n    build(xmid, ymid, 0, cells, new StringBuilder(), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","sourceNew":"  @Override\n  public Cell getCell(Point p, int level) {\n    List<Cell> cells = new ArrayList<>(1);\n    build(xmid, ymid, 0, cells, new BytesRef(maxLevels+1), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","sourceOld":"  @Override\n  public Cell getCell(Point p, int level) {\n    List<Cell> cells = new ArrayList<>(1);\n    build(xmid, ymid, 0, cells, new BytesRef(maxLevels+1), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#getCell(Point,int).mjava","sourceNew":"  @Override\n  public Cell getCell(Point p, int level) {\n    List<Cell> cells = new ArrayList<>(1);\n    build(xmid, ymid, 0, cells, new BytesRef(maxLevels+1), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","sourceOld":"  @Override\n  public Cell getCell(Point p, int level) {\n    List<Cell> cells = new ArrayList<>(1);\n    build(xmid, ymid, 0, cells, new BytesRef(maxLevels+1), ctx.makePoint(p.getX(),p.getY()), level);\n    return cells.get(0);//note cells could be longer if p on edge\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["8259c159da2de2e8528524fb76b244b46cbded59"],"af2638813028b254a88b418ebeafb541afb49653":["4de14be4bd1b857ba37ca138b61c4661c6d1bed3","112d77ac8d3e10a362516ad834c9a11d35c94234"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"],"8259c159da2de2e8528524fb76b244b46cbded59":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8259c159da2de2e8528524fb76b244b46cbded59"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["af2638813028b254a88b418ebeafb541afb49653","15e323346eac5e4685c0a9f2df85eb96b4239bbb","112d77ac8d3e10a362516ad834c9a11d35c94234"],"8259c159da2de2e8528524fb76b244b46cbded59":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}