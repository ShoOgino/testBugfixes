{"path":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#sortEachItems().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#sortEachItems().mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#sortEachItems().mjava","sourceNew":"  private void sortEachItems() {\n    char[] tmpArray;\n    int tmpFreq;\n    for (int i = 0; i < wordItem_charArrayTable.length; i++) {\n      if (wordItem_charArrayTable[i] != null\n          && wordItem_charArrayTable[i].length > 1) {\n        for (int j = 0; j < wordItem_charArrayTable[i].length - 1; j++) {\n          for (int j2 = j + 1; j2 < wordItem_charArrayTable[i].length; j2++) {\n            if (Utility.compareArray(wordItem_charArrayTable[i][j], 0,\n                wordItem_charArrayTable[i][j2], 0) > 0) {\n              tmpArray = wordItem_charArrayTable[i][j];\n              tmpFreq = wordItem_frequencyTable[i][j];\n              wordItem_charArrayTable[i][j] = wordItem_charArrayTable[i][j2];\n              wordItem_frequencyTable[i][j] = wordItem_frequencyTable[i][j2];\n              wordItem_charArrayTable[i][j2] = tmpArray;\n              wordItem_frequencyTable[i][j2] = tmpFreq;\n            }\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void sortEachItems() {\n    char[] tmpArray;\n    int tmpFreq;\n    for (int i = 0; i < wordItem_charArrayTable.length; i++) {\n      if (wordItem_charArrayTable[i] != null\n          && wordItem_charArrayTable[i].length > 1) {\n        for (int j = 0; j < wordItem_charArrayTable[i].length - 1; j++) {\n          for (int j2 = j + 1; j2 < wordItem_charArrayTable[i].length; j2++) {\n            if (Utility.compareArray(wordItem_charArrayTable[i][j], 0,\n                wordItem_charArrayTable[i][j2], 0) > 0) {\n              tmpArray = wordItem_charArrayTable[i][j];\n              tmpFreq = wordItem_frequencyTable[i][j];\n              wordItem_charArrayTable[i][j] = wordItem_charArrayTable[i][j2];\n              wordItem_frequencyTable[i][j] = wordItem_frequencyTable[i][j2];\n              wordItem_charArrayTable[i][j2] = tmpArray;\n              wordItem_frequencyTable[i][j2] = tmpFreq;\n            }\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#sortEachItems().mjava","pathOld":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#sortEachItems().mjava","sourceNew":"  private void sortEachItems() {\n    char[] tmpArray;\n    int tmpFreq;\n    for (int i = 0; i < wordItem_charArrayTable.length; i++) {\n      if (wordItem_charArrayTable[i] != null\n          && wordItem_charArrayTable[i].length > 1) {\n        for (int j = 0; j < wordItem_charArrayTable[i].length - 1; j++) {\n          for (int j2 = j + 1; j2 < wordItem_charArrayTable[i].length; j2++) {\n            if (Utility.compareArray(wordItem_charArrayTable[i][j], 0,\n                wordItem_charArrayTable[i][j2], 0) > 0) {\n              tmpArray = wordItem_charArrayTable[i][j];\n              tmpFreq = wordItem_frequencyTable[i][j];\n              wordItem_charArrayTable[i][j] = wordItem_charArrayTable[i][j2];\n              wordItem_frequencyTable[i][j] = wordItem_frequencyTable[i][j2];\n              wordItem_charArrayTable[i][j2] = tmpArray;\n              wordItem_frequencyTable[i][j2] = tmpFreq;\n            }\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void sortEachItems() {\n    char[] tmpArray;\n    int tmpFreq;\n    for (int i = 0; i < wordItem_charArrayTable.length; i++) {\n      if (wordItem_charArrayTable[i] != null\n          && wordItem_charArrayTable[i].length > 1) {\n        for (int j = 0; j < wordItem_charArrayTable[i].length - 1; j++) {\n          for (int j2 = j + 1; j2 < wordItem_charArrayTable[i].length; j2++) {\n            if (Utility.compareArray(wordItem_charArrayTable[i][j], 0,\n                wordItem_charArrayTable[i][j2], 0) > 0) {\n              tmpArray = wordItem_charArrayTable[i][j];\n              tmpFreq = wordItem_frequencyTable[i][j];\n              wordItem_charArrayTable[i][j] = wordItem_charArrayTable[i][j2];\n              wordItem_frequencyTable[i][j] = wordItem_frequencyTable[i][j2];\n              wordItem_charArrayTable[i][j2] = tmpArray;\n              wordItem_frequencyTable[i][j2] = tmpFreq;\n            }\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}